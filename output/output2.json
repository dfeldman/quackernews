[
  {
    "title": "Caniemail.com \u2013 like caniuse but for email content (caniemail.com)",
    "points": 88,
    "submitter": "fagnerbrack",
    "submit_time": "2024-05-06T23:03:34",
    "num_comments": 48,
    "comments_url": "https://news.ycombinator.com/item?id=40280490",
    "comments": [
      "Related:Can I Email? - https://news.ycombinator.com/item?id=27112960 - May 2021 (273 comments)Can I Email: \u2018Can I Use\u2019 for email - https://news.ycombinator.com/item?id=20948826 - Sept 2019 (196 comments)'Can I Use' for Email - https://news.ycombinator.com/item?id=20934601 - Sept 2019 (1 comment)",
      "HTML email was such a tragic mistake.I think the whole mess could have been averted if Markdown had been invented about twenty years earlier.",
      "IMO, HTML was the worst thing that ever happened to email.  Plain text content is the best content.",
      "That's a completely valid opinion, and I prefer plaintext as wellBut at this point, it's pretty clear that most non-technical people prefer emails with fancy text and graphics.Personally, I'm just glad that email is a flexible enough medium to allow that. It's better than the alternative, where people moved to some closed, proprietary protocol behind like 20 patents that allows the same thing.Is there any other common way we communicate over screens (aside from http) that has had the staying power of email for the general public? I think that's a testament to the sheer flexibility of it. The ugliness that people have contorted email into is a badge of honor IMO",
      "It's easy to say this, but can you imagine the hodge-podge of proprietary garbage we'd have to deal with if you couldn't email a simple file attachment to someone?",
      "I'm confused. How is HTML needed to attach a file (or to receive the attachment)?",
      "I'm good with attachment when you need to send me a real document, but if the email text itself ends up being multi-megabyte blob because you absolutely must have your name in the signature in blue and italic, then I tend to frown upon this. Over decades of my work I probably sent thousands of emails, yet very rarely if ever I needed HTML capabilities, and pretty much never ones that go beyond very basic Markup formatting.",
      "Email attachments are defined through MIME and don't depend at all on HTML being available as a Content-Type. We could well have had another format and attachments together.",
      "I think that hodge podge (OneDrive, Google drive, Dropbox, etc) is what most people already use.  \"Simple file attachments\" are an oxymoron these days--size/extension restrictions, spam scores, not to mention the hell of iterating over email.",
      "Can still do plain text with attachments... unless you expect that companies would move to emailing you HTML files of their message?"
    ],
    "link": "https://www.caniemail.com/",
    "first_paragraph": "Launched and maintained by @HTeuMeuLeu and the team at Tilt Studio.",
    "summary": "In a dazzling feat of redundancy, caniemail.com emerges to answer the burning question no one asked: \"Can I use this in HTML emails?\" Developed by @HTeuMeuLeu and the team at Tilt Studio, the site follows the footprints\u2014both large and pointless\u2014left by caniuse.com, but now for the ever-painful realm of email. Hacker News commenters leap into action, tripping over themselves to either mourn HTML email as the doom of digital communication or to defend it as a herald of necessary evil. Strangely, nobody addresses the elephant in the room: why are we still using email like it's 1999? Is it tech nostalgia, or are we all just that masochistic? Embrace or cringe at the HTML spectacle, but remember, every overly styled newsletter is a cry for professional help wrapped in a gradient background. \ud83d\udc8c\ud83d\udc94"
  },
  {
    "title": "TOTP Authenticator for PalmOS (nkorth.com)",
    "points": 81,
    "submitter": "LeoPanthera",
    "submit_time": "2024-05-06T20:45:57",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=40279305",
    "comments": [
      "Also of interest, from a few years ago: TOTP board that fits into classic Casio F-91W wrist watch: https://news.ycombinator.com/item?id=33243434",
      "This project reminds me of a cyberpunk SF story, in which (something like) some super elite hackers, needed for a special job, chose gear old enough to be impervious to the adversary they were facing.  (Not cyberdecks contemporary of the setting, but something more like modded Nintendos, which the black ice wouldn't know what to do with.)I also had that story in mind several years ago, when the Intel Management Engine ridiculousness ticked me off, and I went to a lot of trouble to make and store half a dozen Libreboot X200 \"decks\".(Though I don't do 31337 things, so I mostly only ended up using one such deck to keep an eye on my 401(k) account.)",
      "The linked one for J2ME phones is also fascinating: https://github.com/baumschubser/hotpants",
      "I like how clearly scrollability is indicated on PalmOS, even without a scrollbar.",
      "Feels like MacOS, chrome and edge and Windows all are pushing for 5px wide auto hidden scroll bars.I miss the chunky touch friendly ones that were easy to use, honestly.that said to build off your comment - everything on Palm felt extremely thought about for ease and obvious use end to end and it's part of why I absolutely miss it.",
      "TOTP on a GameBoy cart using a cart with an RTC would be awesome.",
      "Double awesome if it\u2019s one of those carts that can slot another cart into it, and then you pair it with a Game Boy Camera to scan TOTP setup QR codes.https://en.wikipedia.org/wiki/Game_Boy_Camera",
      "Most flashcarts have the RTC function so that should be doable with off-the-shelf hardware.",
      "right, I've got one of those on my shelf here but it needs a new battery",
      "And then run it in Liberty, in a Palm OS emulator :)"
    ],
    "link": "https://www.nkorth.com/palm/apps/#totp-authenticator",
    "first_paragraph": "These apps run on Palm OS devices, and emulators such as Cloudpilot.",
    "summary": "In a bold stride back to 1998, hackers rejoice as TOTP Authenticator graces PalmOS, revealing that nostalgia isn't just about playing *Space Invaders* on your calculator during math class but is also about deploying state-of-the-art security via obsolete technology. Commenters leap to the occasion with tales of wristwatches and cyberpunk novels, mistaking their clever banter for security consulting gigs. Meanwhile, throwbacks to chunky, user-friendly interfaces send everyone into an ergonomic frenzy, yearning for the good ol' days when UIs were as thick as their wallets before investing in Bitcoin. Naturally, Palm OS and GameBoy serve as the fortresses of ancient tech wisdom in this modern crusade against thin scroll bars and comprehensible MODERN software, because who needs accessibility when you have exclusivity? \ud83c\udfae\ud83d\udcdf\ud83d\udcbe"
  },
  {
    "title": "The best way to have complex discussions? (cq2.co)",
    "points": 264,
    "submitter": "anandbaburajan",
    "submit_time": "2024-05-06T18:02:59",
    "num_comments": 125,
    "comments_url": "https://news.ycombinator.com/item?id=40277547",
    "comments": [
      "> we started searching for a tool specifically built for complex discussions. We found noneThis was basically solved in Usenet, more specifically, in news reader software. You had a clearly arranged threaded view (you could see the thread structure of as many as 50 postings on a single screen), with unread threads and unread postings highlighted, and pressing Tab jumped to the next unread posting. Unread status was per posting/comment, not by time. Many more conveniences for quick navigation, filtering, and so on.All newer discussion platforms have been a step back in terms of efficiency of use and ability for deep, long running discussions. Initially due to web browser limitations (though nowadays that shouldn\u2019t be much of a problem anymore), and later due to mobile touch interfaces (still poses some difficulties).",
      "FWIW, many email clients -- before Gmail dumbed down email forever and no one seems to understand that email replies form a tree anymore -- also had (and maybe some still do?) that way of viewing the world.",
      "Yes. The only critical issue I'd see with Usenet's  client interfaces would be linking cross threads.At some point a thrrad becomes irrelevant because of parallel discussions in other threads, being able to easily redirect to a specific point in another thread helps a lot. But that requires an URL, and messages ids weren't used for that purpose.",
      "I actually remember using message IDs to reference other postings. Newsreaders had commands to jump to a certain message ID. You had to copy the message ID from the posting, but on Unix that was just a double-click, and a middle-click to paste, so quickly accomplished.",
      "Zulip has many of these features I believe. Anecdotally it seems to be great for running an online discussion forum for a high school or college level class.",
      "I used Zulip last week to ask a question on Lean on their community.I only sent like 3 messages, but it was awfully slow. Didn't come away with a good impression.",
      "Twist is a better Zulip. Zulip has some awful UX decisions, though the chat experience is definitely a step up on Slack.",
      "Twist is hugely underrated and doesn\u2019t get the attention it deserves.",
      "So why do you think Usenet is not the mainstream status quo for conversations then?",
      "Usenet died due to spam. Newsgroups were unmoderated by default, and moderation wasn\u2019t built into the protocol. Then PHP web forums took over because they were discoverable by web search and only required the web browser that you had anyway. They also added support for popular features like posting images and using emoticons graphics, instead of only text (though the latter hasn\u2019t hurt HN)."
    ],
    "link": "https://cq2.co/blog/the-best-way-to-have-complex-discussions",
    "first_paragraph": "We love complex, deep discussions.",
    "summary": "On cq2.co, a cutting-edge revelation emerges: humans *like* complex discussions, but the internet has inexplicably lost all tools to facilitate them since the golden age of Usenet. Cue gasps and the mournful humming of dial-up tones. Commenters, clad in the digital equivalent of powdered wigs, lament the downfall of structured discourse, each one out-nerding the last with wistful eulogies to news reader software and message IDs. Meanwhile, modern platforms like Zulip and Twist get briefly mentioned, only to be overshadowed by the overwhelming nostalgia for a simpler, more organized cyber time\u2014one free of emojis but full of blissful, threaded clarity."
  },
  {
    "title": "Eli Bendersky: Faster XML Stream Processing in Go (thegreenplace.net)",
    "points": 7,
    "submitter": "PaulHoule",
    "submit_time": "2024-05-07T00:01:44",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=40280875",
    "comments": [
      "I love this type of optimisation story.Interesting to note that his \"in theory\" best performance still calls to lxml.  A true in theory best performance would surely be in the multiple Gigabyte per second range (if simdjson's performance is taken as a goal), and not 0.56 seconds to process 230 MiB which is only about half a GBps.  Half a gigabyte per second is probably more than sufficient for most uses, so I'm splitting hairs somewhat.Here is the issue for slow sax parsing in encoding/xml.  No work on it since around 2020:https://github.com/golang/go/issues/21823",
      "(2019)"
    ],
    "link": "https://eli.thegreenplace.net/2019/faster-xml-stream-processing-in-go/",
    "first_paragraph": "XML processing was all the rage 15 years ago; while it's less\nprominent these days, it's still an important task in some application domains.\nIn this post I'm going to compare the speed of stream-processing huge XML files\nin Go, Python and C and finish up with a new, minimal module that uses C to\naccelerate this task for Go. All the code shown throughout this post is\navailable in this GitHub repository the new\nGo module is here.",
    "summary": "\ud83d\ude80 **Eli Bendersky is Resurrecting The Dead: XML** \ud83d\ude80 At *thegreenplace.net*, nostalgia hits hard as our protagonist waxes lyrical about XML\u2014a format as dead as your old MySpace account, now seeing a thrilling revival as a speed problem in Go, Python, and C. Witness the awe-inspiring act of dragging XML into the 21st century with a *Go module*, because clearly, what the tech world lacks is *yet another* piece of obscure software. Commenters engage in a high-stakes debate about nanoseconds and the theory of relativity in performance gains, bonding over the \"remarkable\" jump from *0.56 seconds*\u2014because shaving off microseconds is what everyone absolutely needs for processing ancient markup languages. \ud83d\udc0c\ud83d\udca8 Who said tech isn't living in the past?"
  },
  {
    "title": "Results of the Grand C++ Error Explosion Competition (2014) (tgceec.tumblr.com)",
    "points": 180,
    "submitter": "st_goliath",
    "submit_time": "2024-05-06T17:57:39",
    "num_comments": 57,
    "comments_url": "https://news.ycombinator.com/item?id=40277469",
    "comments": [
      "The D language compiler uses a technique I call \"poisoning\" which has greatly reduced cascading error messages. The idea is whenever an error is found in an AST node, the AST node is replaced with an \"error\" node. Any combination of an error node with another node is replaced with an error node. Error messages for error nodes are suppressed.It works far better than attempting to repair the AST into some plausible state.It's analogous to the propagation of NaN values in floating point code.",
      "I've got a compiler for a hobby language that uses this technique too (I probably got it from you, unless I heard it from someone else). It's really really nice. Super easy to implement and really does cut down on cascaded errors.I also use it during type checking. There is a special \"error\" type. If an expression produces a type error, the yielded type of that expression becomes \"error\". Surrounding expressions that consume that type will see the error type and suppress any other type errors they might otherwise produce. That way, you only see the original type error.",
      "> Surrounding expressions that consume that type will see the error type and suppress any other type errors they might otherwise produce.We added a slightly-cursed version of this to clang. The goal was: include more broken code in the AST instead of dropping it on the floor, without adding noisy error cascades.The problem is, adding a special case to all \"surrounding expressions that consume that type\" is literally thousands of places. It's often unclear exactly what to do, because \"consume\" means so many things in C++ (think overload resolution and argument-dependent lookup) and because certain type errors are used in metaprogramming (thanks, SFINAE). So this would cost a lot of complexity, and it's too late to redesign clang around it.But C++ already has a mechanism to suppress typechecking! Inside a template, most analysis of code that depends on a template parameter is deferred until instantiation. The implementation of this is hugely complicated and expensive to maintain, but that cost is sunk. So we piggy-backed on this mechanism: clang's error type is `<dependent type>`. The type of this expression depends on how the programmer fixes their error :-)And that's the story of how C gained dependent types (https://godbolt.org/z/szGdeGhrr), because why should C++ have all the fun?(This leaves out a bunch of nuance, of course the truth is always more complicated)",
      "In D, all semantic analysis of a template waits until instantiation time. This is because D is designed so that the syntax parsing does not need a symbol table.In C++, I solved this problem by simply matching { } in the template body, and accumulating a list of tokens within the { }. Then, when instantiated, the template parameter values were known, and the template syntax could then be semantically analyzed. It was simple and effective.But I was informed that C++ required the syntax parsing and semantics for non-dependent types without instantiation. I asked why, and the answer was \"to check for errors without needing to instantiate it.\" I responded with \"of what use is checking it if it is never used or tested?\" And that was the end of that.> The implementation of this is hugely complicated and expensive to maintainI quietly revolted and refused to implement that disaster. AFAIK there was never a problem with deferring parsing/semantic until instantiation.",
      "I love/hate/but-really-love/but-totally-hate this.",
      "Funny, I was just gonna comment and say that I learned this One Weird Trick\u2026 and then realized I\u2019d learned it from you.(Hi, Bob! I was actually just using your recursive shadowcasting algorithm as a reference yesterday.)I feel like I just got an Erdos number or something.",
      ":D",
      "Yup, dmd also has an error type:https://github.com/dlang/dmd/blob/master/compiler/src/dmd/mt...",
      "Do you cut off this poisoning at any point?",
      "If something else depends on the successful semantic analysis of those poisoned nodes, they get poisoned as well. It's all based on dependency."
    ],
    "link": "https://tgceec.tumblr.com/post/74534916370/results-of-the-grand-c-error-explosion",
    "first_paragraph": "After much deliberation, the winners of the Grand C++ Error Explosion Competition are finally selected. There are two different award categories. The winners of the first category are those submissions that produced the largest error with the smallest amount of source code. These entries contain a multiplier number, which is just the size of the error message divided by the size of the source code. The second category is artistic merit.",
    "summary": "In the high-stakes world of the Grand C++ Error Explosion Competition, programming enthusiasts giddily compete to discover who can crash their compiler with the least effort, a feat truly indicative of our brightest minds. Marvel as the finest entries achieve astronomical error messages with nothing more than a digital sneeze in the source code, racking up impressiveness points measured by mystical error-to-code multipliers. Meanwhile, the comments degenerate into a nerd-gladiator arena where participants boast about superior \"error node\" strategies from their DIY compilers, desperately clinging to relevance in a world where \"poisoning\" is cooler than fixing. One might ponder if converting all software engineering into an arcane art of managing disastrous outputs might just be the pinnacle of modern computing. \ud83d\ude02\ud83d\udd25"
  },
  {
    "title": "An infinite canvas for code exploration (territory.dev)",
    "points": 62,
    "submitter": "pst723",
    "submit_time": "2024-05-06T21:03:54",
    "num_comments": 38,
    "comments_url": "https://news.ycombinator.com/item?id=40279499",
    "comments": [
      "Hijacking the back button to lock me on the page is an unacceptable violation of my browser functionality. Don't do that. It's bad. When I click the back button, I want to go away from where I am, back to where I was before. I don't click the back button to remain in the same place.I wanted to watch the demo video again; even if it's only on the initial signup page, the hijack is irritating. If it's intentional, that's offensive.",
      "That sound like a bug, definitely not intentional. Will look into that.",
      "While you're at it, could you re-add controls to the video? Yeah I know two minutes is short, but.. I just want to see some screenshots!",
      "Having worked as a frontend web developer, I can assure you that the back-button hijacking is sheer incompetence of the developers. They have to be mutating your browser history in a careless way to achieve this. That or they somehow picked a really bad client-side routing library. (Even just following a basic tutorial for react-router wont cause this behavior. It's almost always sloppy state management causing this)",
      "Thanks, forwarded to my frontend dev/cofounder ;)",
      "Great idea, and I was excited to try it (and even pay for it!) until the requirement to sign up and the hijacked back button. Also, in my Firefox, your white box as a background appears transparent and so your text is just on top of a _very_ noisy background.On the missing Terms of Service, you have the Data Use notice, but it essentially describes how you're using our email, not any code that we would need to upload to you. In the day and age where we're having daily discussions on copyright violations and people hoovering up any data or analysis they can find, I definitely want a sturdy legal agreement in place before I ship IP off to someone's systems.Seconding other comments about having it run as a local program in some way, I have a lot of different tools that I use in my IDE to explore codebases, utilize LSPs, etc. One of the big ones is how I utilize semantic color coding (https://medium.com/@evnbr/coding-in-color-3a6db2743a1e) to quickly parse function / variable names, and usually a standalone app gives me a lot more ability to control things like that. Having it local (and not communicating remotely) means that I _also_ don't have to worry about you hoovering up my codebase.Otherwise, excited to see someone implement an idea like this! I can be very visual with certain kinds of diagrams and code bases and was unhappy with how few tools I felt visualized those organizations well.",
      "At this point we only index open source code.  Once we open up to customers with private repos, that will definitely be the first thing to add.",
      "Make a plugin. I want this and I think the world needs this.",
      "This tool seems very useful. Demo well done.But I\u2019m not going to give a website my email before learning the pricing strategy and ToS which (currently) aren\u2019t available (on mobile at least). Would love to see these added.",
      "Yeah. Pricing or get busted."
    ],
    "link": "https://territory.dev",
    "first_paragraph": "",
    "summary": "<h1>The Boundless Prison of Code Exploration</h1>\n<p>Welcome to territory.dev, where the promise of an \"infinite canvas for code exploration\" mysteriously mirrors the infinite loop you enter when trying to use your browser's back button. Commenters are so outraged they can barely focus on the tool's purpose, instead becoming amateur bug reporters. One wonders why they didn't just spam Ctrl+Z on their browser too, hoping for a miracle. In a twist fit for modern tech sagas, not only does your code get hoovered up, but basic web functionalities and transparency are also casualties. Sign up, they said. It'll be fun, they said. <em>Refunds and back buttons not included.</em></p>"
  },
  {
    "title": "Attackers can decloak routing-based VPNs (leviathansecurity.com)",
    "points": 131,
    "submitter": "dsr_",
    "submit_time": "2024-05-06T21:19:55",
    "num_comments": 102,
    "comments_url": "https://news.ycombinator.com/item?id=40279632",
    "comments": [
      "I don't know why this article is so long.DHCP Option 121 allows the DHCP server to set routing rules for a given CIDR range, which end up having a higher priority than the default 0.0.0.0/0 rule due to higher specificity (longer prefix).",
      "One of the authors here, the intention was to provide a primer of the topics since we figured this would draw people from a nontechnical background too.That and half the information on the internet about VPNs is from VPN providers and is incorrect or not technical enough to describe how they _actually_ work.We had a sentence in the intro that was supposed to be a hyperlink to the \u201chey if you know this stuff you should skip to the POC section\u201d. I\u2019ll make sure that gets updated/more obvious.",
      "What I read does a great job of explaining the technology; I know it pretty well but it's great to have an updated, clear, concise, well-organized, integrated explanation all in one place. I can't imagine how long that took to make it that clear!(Everything posted here gets similar complaints about the writing, headline, too short, too long, too hot, too cold, etc. Goldilocks is never pleased here. Welcome to HN! :)",
      "I looked at this in detail. This exploit is a nothing-burger for most decent VPNs.A simple \"leak protection\" (aka Killswitch) firewall rule completely negates this attack.All decent VPNs implement such a rule by default.Dealing with undesirable routes (whether pre existing or pushed by a DHCP server) is nothing new or in the slightest bit hard to defend against.If a VPN does not implement such a firewall rule already then it's likely already leaking so all this exploit demonstrates is that \"A VPN without leak protection, leaks\".(I won't even mention the \"side channel\" attack as it's completely ridiculous)I liked your write-up and option 121 is a little known option, so it's good to know about. But let's not pretend this thing is bigger than it is.",
      "FTA: Importantly, the VPN control channel is maintained so features such as kill switches are never tripped, and users continue to show as connected to a VPN in all the cases we\u2019ve observed.",
      "They don't know what they're talking about. Kill switches are not \"tripped\" there is no \"control channel\".A kill switch is just a firewall rule that is ALWAYS engaged and all it does is blocks off-VPN traffic.It 100% will defend against this exploit.",
      "Most practical VPN services don't actually implement it this way, it's a somewhat difficult and rather OS-specific problem depending on the firewall services offered by the OS. On some popular OS like mobile ones it's just not possible at all.So just to grab an example, NordVPN's implementation does indeed work as the article presents: it monitors the VPN and disables network access for applications if the VPN connection drops. This is indeed vulnerable to any number of potential problems, and depending on the OS and user savvy you can set up better protection using e.g. the iptables owner module. It's very non-portable though, sometimes even between Linux distributions, and hard to support at scale. Actually I'd say a true \"no access except through the VPN\" rule is easiest to implement on Windows, but NordVPN doesn't seem to do it there either, I'm not sure why.To be fair, it's right in the name: a kill switch is a switch that kills things. It isn't proper network policy like per-process routing tables that are, unfortunately, difficult to implement for consumer machines.",
      "Let's be honest, there're 2 OSs on desktop that matter to VPN providers that provide \"all-in-one app\" - Windows and macOS. Both have easy to configure from your application.On linux, well, you have to choose:- use iptables style rules regardless of the backendor- use nftables style rules regardless of the backend.So it's 3 firewalls that you have to think about.On mobile, well, on mobile you're mostly at the mercy of the platform owner and generally can't do much. Hence, why connecting phone to \"SoftAP/ether_g + VPN\" device is better than a direct connection.",
      "Mobile is an exception (but they already state android is immune), let's stick to desktop for the sake of discussion, the 3 major desktop platforms: mac, win, linux :)On mac - just implement a block everything rule with pf and then just allow traffic on the tunnel. Boom, a kill switch that defends against this exploit. And there's no racey nordvpn-style \"control channel\" (if nord really works like this i have an even lower opinion of them than i do currently).On linux - iptables (for example) - just implement a general DROP policy then override with a specific ALLOW on the tunnel interface.On Windows - Use WFP to implement a block everything rule, then provide a higher priority rule to allow on the tunnel interface.All three of these techniques are the recommended way to implement a kill switch and it's used heavily in the VPN industry by anyone sensible. It completely defends against this TunnelVision exploit too.The way that you suggest kill switch is implemented (reactive and monitoring the connection?) is very fragile, racey and prone to leak, i absolutely would not trust it and it shouldn't even be called a kill switch. It's an embarrassment. :)",
      "I'm not saying how it should be implemented, I'm saying how it is implemented by a number of popular VPN services. Take up the argument with them. There are VPN providers that do it right on at least some platforms, but unfortunately the way most document it it's very hard to tell without experimenting with the client to verify.As far as I know, use of the term \"kill switch\" closely correlates with an untrustworthy implementation. Consider the case of Mullvad who handle this a lot better and also decline to call it a \"kill switch\" for that reason. And that's not to say that Mullvad is perfect, easy to find forum threads by people who had traffic leakage for various reasons. I wouldn't trust anything you didn't set up yourself."
    ],
    "link": "https://www.leviathansecurity.com/blog/tunnelvision",
    "first_paragraph": "Recently, we identified a novel network technique that bypasses VPN encapsulation. An attacker can use this technique to force a target user\u2019s traffic off their VPN tunnel using built-in features of DHCP (Dynamic Host Configuration Protocol). The result of this is the user transmits packets that are never encrypted by a VPN, and an attacker can snoop their traffic. We are using the term decloaking to refer to this effect. Importantly, the VPN control channel is maintained so features such as kill switches are never tripped, and users continue to show as connected to a VPN in all the cases we\u2019ve observed.",
    "summary": "In the latest installment of \"How Your Privacy Shield Is a Colander,\" leviathansecurity.com unveils a dreadful reality where DHCP plays dress-up with VPN integrity. Commenters, snagging their private detective magnifying glasses, dive <i>deep</i> into the technical jargon sea, only to argue whether \"killswitches\" should be called \"no-leak-ziplocks\" instead. Meanwhile, as confusion blossoms about whether this dissertation could have been an email, cybersecurity aficionados second-guess the efficiency of their high-tech leaking buckets, pondering whether to throw them at the author or use them for spring gardening. Watch as the definition of <em>privacy</em> gets as muddied as the comments section itself. \ud83d\udd75\ufe0f\u200d\u2642\ufe0f\ud83d\udcbb\ud83d\uddd1\ufe0f"
  },
  {
    "title": "Show HN: A free site to explore and discover 6k plants (getanyplant.com)",
    "points": 313,
    "submitter": "ryebread777",
    "submit_time": "2024-05-06T11:42:41",
    "num_comments": 104,
    "comments_url": "https://news.ycombinator.com/item?id=40273470",
    "comments": [
      "I couldn't see any way for me to specify my location, to ensure I could actually buy the plants.Upon clicking one of the plants, I see it was only American sites.I get that this is just a hobby for the moment, but even if there was just a note somewhere, \"USA only\", that would have been appreciated.It still irks me how Americans tend to treat the other 96% of the world as though we don't even exist on the same planet; that we're some sort of exotic tourist destination, or a spawn point for immigrants.",
      "To be fair to OP, this is a work in progress and it seems reasonable that they have not yet internationalized it.  The plants are listed with their binomial names front and centre rather than localized names, but the prices are in $, there is no flag or currency symbol at top right and its a .com domain.Parochialism isn't the preserve of the US although I still chuckle at being congratulated on my command of English by a shop assistant in Naples (Florida).  I just thanked them rather than pointing out that I am ... actually ... English!",
      "Thanks for the feedback - sharing this project has really opened my eyes to my own bias there. Still thinking through how to best expand the site to other countries but in the meantime I'll make sure to mention that the site is US-centric when I share it going forward.",
      "This is great!Btw, something I learned recently about house plants: In an analogous way to sneakers, there is a large subculture built around certain varieties of them. They get to be expensive, there is a network of trading, there are ones associated with high status, there are knockoffs (not joking) etc. Very interesting! This site does not appear to be about that subculture.",
      "There are also varieties with temporary genetic expressions (often used as knockoffs), so it\u2019s like buying a white sneaker that gradually turns green, haha. Some of these plants are $100-$500 for a 3\u201d pot with a single leaf of growth.As the new growth appears, the genetic expression is no longer the desired type. It\u2019s a real racket.",
      "An interesting niche I came across is Carnivorous plants, where the seeds of a successful new cross can fetch 1k USD in auction. For a plant that no one knows how it will look yet.Like this one https://www.carnivero.com/collections/auction-items/products...People also hike through the remotest areas to find new wild species. Very cool.",
      "Great idea to avoid the viral varietals as they tend to be more difficult to keep alive since everyone tries to produce them. Also very nice to shop at local stores to avoid the tik tok midnight variegated monstera nonsense!(Not sure if always but variegated->less green->less chlorophyll->harder to keep alive)",
      "I think your last point is always true, yes. I\u2019ve never seen it not be true across a wide range of plants, whether terrestrial or aquatic.",
      "Some of them, like clivia, have a non-trivial lottery component to their hybridization and breeding that makes buying and crossing even a couple of relatively er, garden variety examples a potential ticket to fame, fortune and startdom in the clivia-verse.",
      "Does it classify by where they are native?  Some of us like to plant only plants that are native to where we are living.  For others, at least classify by their potential for invasiveness.Other attributes: toxicity (when eaten or even touched), deer resistance, allelopathic potential, pollinator friendliness."
    ],
    "link": "https://www.getanyplant.com/plants",
    "first_paragraph": "",
    "summary": "**Subject: Hacker News Discovers Plants, Assumes Ctrl + Z Works on API**\n\nHere we are with <em>getanyplant.com</em>, the web's latest plant-pedia seemingly tailored for those with an unwavering confidence that \"America is the world.\" Unsurprisingly, despite the internet being global, our starry-eyed HN gardener forgot that plants and websites work in other parts of the world too. Meanwhile, the HN comment section, ever astute, bemoans the lack of international shipping, dreaming of a day when coding and chlorophyll coalesce into a universally accessible garden paradise. It\u2019s a riveting tale of accidental xenophobia, where every user apparently forgets Google exists to find out if <i>Rhododendron toxicum</i> grows in their backyard or belongs solely in a $500 pot. \ud83c\udf0d\ud83c\udf35\ud83d\udcbb"
  },
  {
    "title": "Visiting the annual Braun collectors fair (arslan.io)",
    "points": 145,
    "submitter": "farslan",
    "submit_time": "2024-05-05T16:09:54",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=40265904",
    "comments": [
      "I\u2019d love to read an account of the \u2018fall\u2019 of Braun. Through my adult life, basically the only thing it makes that are still ubiquitous are electric shavers - which are great shavers, but hardly icons of design.Was there internal drama that led to this contraction in the diversity of what they made? Did it happen fast or slow? I feel like there must be a good story in there.",
      "Sold to Gilette in 1967, expansion into many different areas after. Then, I guess their story is not really unique, they shared the fate of all European household appliance manufacturers \u2014 increasing competition from Asian companies, so by the 1990s, Braun was dead.After Procter & Gamble bought them in 2005, it now mostly exists as a brand to be licensed (everything other than shaving and electric toothbrushes).",
      "They have good clocks, still. Not sure who manufactures them.They have a clock-specific website, braun-clocks.com, that shows P&G as the registrant.",
      "And now days the toothbrushes use the \"Oral-B\" brand, so Braun is only really known (in international markets) for shavers.",
      "Pretty much what happened more broadly. Brands got sold off to companies making goods in Asia for lower prices. Consumers mostly not willing to pay 2x to 3xand it\u2019s often not even clear if the higher prices are worth the premium.",
      "If you're interested Dieter Rams itself goes into it a little bit in the \"Rams\" documentary. But it all happened after Gillette acquired Braun in the 1970's.",
      "If anyone is curious about (industrial) design, it is worth checking out the documentary Objectified by Gary Hustwit (and the rest of the 'trilogy'):* https://www.hustwit.com/objectified* https://en.wikipedia.org/wiki/Objectified* https://en.wikipedia.org/wiki/Design_TrilogyTrailer:* https://www.youtube.com/watch?v=1dKJZfjHJJs",
      "If you love \"everyday objects from the 20th century, especially electrical appliances\" and are in Valencia, Spain, then checkout the Alfaro Hofmann Collection which has some lovely Braun pieces shown in the context of many other designs:\nhttps://www.alfarohofmann.com/en/holdings/s?filtered=1&fabri...",
      "Family had a Braun Mixer type 4142 when I was growing up and I used to marvel at the design. Clean lines, subtle curves, the stark simplicity of the dial. Had no idea who Dieter Rams was and his design legacy at Braun.Bought a Braun Aetlier 1 Stereo as a collectors item much later in life, to pay homage to Rams. A thing of beauty that now is a centerpiece, sitting next to the NeXT Cube.",
      "Hi Fatih,\nI just wanted to let you know that I am a very avid reader of your email newsletter. I really get happy every time an email with one of your new articles arrives at my inbox. Thanks to your reviews of keyboards I will hopefully soon be able to get one of them myself. \nIn summary, I just wanted to thank you for taking the time to write the articles. It's definitely more time consuming than tweeting (I don't have a twitter account at all, I dislike the atmosphere there and I also prefer to consume longer texts with more content), so I just wanted to let you know that there's a bunch of people out here reading your texts and enjoying them!"
    ],
    "link": "https://arslan.io/2024/05/05/braun-borse-2024/",
    "first_paragraph": "The Braun+Design B\u00f6rse is an annual event and fair focusing on Braun products. Braun might not be the design icon it was 40 years ago, but starting in 1955, it profoundly impacted the design world, starting with its cooperation with the Ulm School of Design.",
    "summary": "Title: An Ode to Obsolescence: Braunophilic Bliss at the B\u00f6rse\n\nImagine a place where nostalgia for mid-century appliance design is so palpable, you can almost hear the hum of a vintage electric shaver: welcome to the Braun+Design B\u00f6rse. Here, design nerds gather to worship at the altar of Dieter Rams, drooling over relics from a time when Braun wasn\u2019t just a name on your dad\u2019s dust-collecting electric toothbrush. Commenters engage in mournful reflections on the \u2018fall\u2019 of Braun, peppering the discourse with breathless questions about \"internal drama\" and corporate sell-outs. Meanwhile, they eagerly trade URLs to documentaries and collections that validate their vintage veneer\u2014a simulacrum of consumerist critique wrapped in a warm, fuzzy throwback aesthetic. \ud83d\udd70\ufe0f\ud83e\uddd4\ud83d\udcc9"
  },
  {
    "title": "A 100x speedup with unsafe Python (yosefk.com)",
    "points": 14,
    "submitter": "ingve",
    "submit_time": "2024-05-05T08:08:13",
    "num_comments": 0,
    "comments_url": "",
    "comments": [],
    "link": "https://yosefk.com/blog/a-100x-speedup-with-unsafe-python.html",
    "first_paragraph": "May 4th, 2024",
    "summary": "Today in the magical world of programming, a brave soul outlines how to sacrifice Python\u2019s cherished safety nets for the holy grail of a - hold your applause - 100x speedup. The blogosphere reacts as expected, with every Tom, Dick, and Hermione frantically hammering out why their 'totally unique' use case justifies dancing on the edge of unsafety. Meanwhile, seasoned developers from their high towers sprinkle scorn, dismissing the method as 'coding with scissors'. As the comment section descends into the usual quagmire of one-upmanship, somewhere, a PhD student is already citing this as the backbone of their thesis on \u201cPerformance vs. Peril: An unnecessary dichotomy?\u201d \ud83d\udc0d\ud83d\udca8\ud83d\udd2a"
  },
  {
    "title": "PiFex: JTAG Hacking with a Raspberry Pi (voidstarsec.com)",
    "points": 165,
    "submitter": "wrongbaud",
    "submit_time": "2024-05-06T13:59:42",
    "num_comments": 30,
    "comments_url": "https://news.ycombinator.com/item?id=40274777",
    "comments": [
      "A device that is a bit similar, but more advanced is the Glasgow Interface Explorer:\n https://www.crowdsupply.com/1bitsquared/glasgowIt costs 145$ instead of 50$, and you can interface with it via Python3 over USB. It is quite flexible due to a reconfigurable FPGA and has some nice features such as automatically detecting UART baud rates, JTAG pinouts, ESD /  Under / and Over-Voltage protection on the I/O pins and more.",
      "A $5 Pi Pico has two UARTS, but is not an FPGA;  \"Show HN: PicoVGA Library \u2013 VGA/TV Display on Raspberry Pi Pico\" https://news.ycombinator.com/item?id=35117847#35120403According to https://www.reddit.com/r/raspberrypipico/comments/1aut3l2/co... ,\npico-uart-bridge turns a pico into 6 TTL UARTs; https://github.com/Noltari/pico-uart-bridge",
      "The Glasgow is an awesome piece of kit, I have one and love it! I wanted the PiFex to be a little more user friendly and targeted towards beginners",
      "I'm always surprised how infrequently JTAG interfaces are disabled on actual honest to god products that go into the field.It's not at all hard to blow the JTAG enable fuse in most chips. And you can give away a ton of info from your device if you don't do this. That potentially includes really sensitive info - through backdoors like this. People keep all kinds of stuff on their hard drives.(Full disclosure: I'm the HW eng who reviewed this design. Hi Matt! Reverse engineering is still magic.)",
      "I don't disable JTAG on field hardware because theres a good chance I'll be expected to do failure analysis or bug-hunting on the production hardware.   JTAG is going to make that much easier.And, lets be honest, your smart IoT coffee maker doesn't really have any secrets that need protecting from you, despite whatever the business team thinks.",
      "Hard disagree. That \"smart IoT coffee maker\" stores your wifi details, including the password so it can reconnect. I appreciate the level of sophistication and effort required for someone to be able to abuse that is beyond the realm of likelihood, it's not unreasonable to believe that there may be higher value targets (like journalists) who are being targeted where this is a reasonable method for dedicated attackers to use to gain access to a targets home network. Better to just secure these things by default.",
      "It really depends on the situation. For a mature, mass-produced product going into sensitive places, sure, disable it before it goes into the field. Same for very security-focused hardware.But most of the \"pizza-box-shaped\" things I've worked on in telecom have jtag enabled even when in the field. I've never thought about it much, but to actually get to a jtag interface requires a level of physical access that would be far-fetched unless you're talking about \"James-Bond-level\" bad actors or \"inside-job\" people who are already entrusted with an enormous amount of privileges anyway.JTAG is super useful for troubleshooting and in general, for things that aren't throw aways and that can be repaired, re-calibrated, or re-configured, it makes sense to keep it available.",
      "If your attack vector is bad guys with physical access to the circuit board, disabling JTAG will only be a minor speedbump to them.The vast majority of microcontrollers aren't hardened against physical attack - especially not anything with wifi capability.\"disable jtag\" is intended to make it harder to make modchips (ie. bypass the coffee subscription), but doesn't help against someone willing to do a one-off glitching attack or similar to dump secrets.",
      "Lots of vectors don't even require JTAG. Coffee maker type devices are likely to be just a $1 a microcontroller with inbuilt flash which you can fuse when programming to prevent reading but is rarely done in small production runs.flash for microcontrollers such as ESP, Rpi pico etc is usually saved on an 8-pin flash chip which most people forget about and is easy to unsolder and pop into a reader. bigger devices using bootloaders sometimes store a whole FAT32 filesystem in one of these, you can even unsolder most flash and re-mount it with a little skill and suitable hardware.I once read an AWS private key stored in plain text from an IOT board once. Go figure!",
      "You're worried about someone with physical access and time to dump info from a JTAG header gaining the WiFi password?"
    ],
    "link": "https://voidstarsec.com/blog/jtag-pifex",
    "first_paragraph": "May 2024",
    "summary": "In the latest episode of \"Hacking on a Budget,\" an enthusiastic hardware engineer with a flair for the theatrical introduces PiFex\u2014a JTAG tool powered by the ubiquitous Raspberry Pi. This groundbreaking innovation, priced at the \"too-cheap-to-consider-secure\" level of $50, apparently promises to pop open your IoT devices like they're tins of sardines, all the while bathing in the glory of being \"beginner-friendly.\" On the comment boards, a cutthroat battle rages between hobbyists debating whether their coffee maker should double as a Fort Knox replica or remain an accessible playground for anyone with a soldering iron and too much free time. Amidst paragraphs of tech jargon and links that half the readers can't open, someone drops a reminder that everything's hackable, with or without JTAG\u2014inspiring paranoia in security forums for days to come."
  },
  {
    "title": "Show HN: Peerdb Streams \u2013 Simple, native Postgres change data capture",
    "points": 115,
    "submitter": "saisrirampur",
    "submit_time": "2024-05-06T17:00:42",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=40276768",
    "comments": [
      "Nice to see more product development and offerings in this area. Well done.[Full disclosure, I work for Prisma and we have a similar product called Pulse (https://prisma.io/pulse)]Another use case for CDC is compliance. I reckon that in the near future, to ensure with data compliance regulations, CDC will become the better option for devs vs traditional seek/update/delete functions.",
      "Are BigQuery's clustered and partitioned supported (both as a source and sink).Plus how is the deduplication process handled? Fivetran for example creates staging tables and scans the target table. Since it does support BigQuery's integer based partitioning. A table partitioned by Primary key helps in cost optimizations.",
      "Yep, the target tables on BQ are automatically clustered on the primary key, and there is an option to further partition them on the peerdb_synced_at column. We've seen this reduce replication costs by 50% and also help reduce costs for off-stream transformations. Sharing a customer case study that you might find interesting: :) https://www.peerdb.io/customers/harmonic-customer-storyRegarding the deduplication process, we stage raw CDC data into a staging table and run periodic MERGE operations. The raw table is also auto-clustered and partitioned similar to final table. This helps save costs.",
      "What is Change Data Capture (CDC) ?Peerdb doesn't seem to inform on the core of the problem it solves, here's a reference from Debezium (mentioned in the text)> set up and configure Debezium to monitor your databases, and then your applications consume events for each row-level change made to the database. Only committed changes are visible, so your application doesn't have to worry about transactions or changes that are rolled back.It's good to know! This model seems to turn row changes into effectively a side-effect invocation for a queue.",
      "To my knowledge, CDC provides a solution to the following 2 pain points.  Would love to hear more:1.  Replication:  Imagine you have 5 different analytical environments.  Do you backup & restore to each destination, essentially re-writing 10TB of data, when only 2MB worth of data changed?  You'd be surprised how many organizations still do this.2.  System Triggering:  How can you inform a downstream system an event occurred?  There are many mechanisms to do so, and they vary in complexity, but given the requirements are simple (if a row in the DB changes, let's tag this change as an event and just pass it to all the downstream systems that need to know this)",
      "Additionally, it can help with systems where 2-phase commits can lead to weird and complex situations. This is where applying SAGA and using Transactional Outbox can help: it should allow for abstracting away the event stream away from the main application logic, the CDC mirror can then handle generating the stream.\nThis can also allow for plug-and-play of other downstream services/sinks from the CDC stream.",
      "Change Data Capture (and its use cases) is a well known topic in the data-engineering and streaming communities. Hence we didn't mention more about it. But we will add it to our future posts. Thanks for the feedback here!Here goes some commentary on CDC use-cases:\nCDC provides a reliable stream of database changes, enabling various use cases such as real-time alerting (e.g., fraud detection in banking), replicating OLTP data to other types of stores (OLAP, search, etc.) for real-time analytics and search, and implementing the transactional outbox pattern which exposes database changes to other microservices/apps (e.g., a bank exposing a raw feed of transactions to its rewards microservice, etc.).",
      "Noob question: What is the advantage of replicating data into a warehouse vs. just querying it in place on a postgres database?",
      "Typically data warehouses are OLAP databases that have much better performance than OLTP databases for large queries.There might also be several applications in a company, each with their own database, and a need to produce reports based on combinations of data from multiple applications.I think that in many cases your question is based on an idea that is completely right. engineers are too eager to split out applications into multiple databases and tacking on separate data warehouses. The costs of maintaining separate databases is often higher than initially thought. Especially when some of the data in the warehouse needs to go back into the application database, for example for customer facing analytics. I think many companies would be better served by considering traditional data warehousing needs directly in their main application databases and abstain from splitting out databases. Having one single ACID source of truth and paying a bit more for a single beefy database server makes a lot more sense than is commonly thought. Especially now when many customer facing products, like recommendation systems, are \u201cdata driven\u201d. At least that\u2019s my impression after working in the space for a while.",
      "If the postgres database is recording business transactions, you don't want to cause your business to stop being able to take credit cards because you generated a report."
    ],
    "link": "item?id=40276768",
    "first_paragraph": "",
    "summary": "The tech elite descend on HN to unveil Peerdb Streams, another _revolutionary_ tool in the endless sea of \"change data capture\" solutions, apparently forgetting to mention why anyone should care in the first place. A proud employee from Prisma drops by to ensure everyone knows they've already invented the wheel, but with a different label. In the comments, a festival of jargons and compliance fantasies unfolds, with hopeful musings that their chunk of SQL wrangling might just be the silver bullet for data replication and event streaming dreams. Meanwhile, a lone voice asks why we're replicating data instead of querying it directly, only to be buried under acronyms and the sound of back-patting for tech solutions looking for problems."
  },
  {
    "title": "World Food Atlas: Discover local dishes and ingredients (tasteatlas.com)",
    "points": 84,
    "submitter": "dsego",
    "submit_time": "2024-05-06T08:50:28",
    "num_comments": 31,
    "comments_url": "https://news.ycombinator.com/item?id=40272577",
    "comments": [
      "As a local, pretty impressed with the listed items in Turkey!Still, the rabbithole goes much deeper. I highly recommend The Turkish Cookbook by Musa Da\u011fdeviren, a food anthropologist of sorts who spent his formative years traveling the country town by town and collecting recipes that were often condemned to be forgotten due to the modernization and globalization of food and food culture: often they'd be passed down generationally and not written down, rely on manual and work intensive or just plain unusual methods, have ingredients that are easy to acquire in a rural household but hard to acquire in a grocery store, have flavors that would be considered unusual by the global standards of the 70s-90s, etc. It's a truly massive and amazing collection.",
      "It's my favorite cook book.  I use it heavily. I pull recipes out of it to bring to parties and community events.  I always get rave reviews and a million questions.The funny thing is I'm an American feeding (mostly) Americans.  Not only do I have to substitute ingredients but, for the most part, I've never ever tried the dishes prior to cooking them.  None of us know how \"it's supposed to taste\".I find it all pretty comical.  He went and archived all of these rural Turkish recipes and now a bunch of people on a rural American island are attempting to replicate them.  From where I stand, he nailed his goal.Edit; grammar",
      "Data bug if anyone from World Food Atlas is reading this. I clicked on \"tapas\" and went to the recipe section where it says \"Authentic Tortilla de Patata Recipe\", and then underneath says \"We strongly advise you to read the cooking tips before jumping to the recipe though\". The cooking tips are all for a completely different dish, apparently one with shrimp and garlic, that have nothing to do with Tortilla de Patata.https://www.tasteatlas.com/tapas/recipe",
      "\"With your agreement, we and our *830* partners use cookies or similar technologies\" - this must be some joke I fail to understand. What an absurd number.",
      "What do the numbers mean? I assumed zoom in to see other items, but when I zoom in on Iceland I still see \"fish and chips 17\".",
      "I was ready to complain that it attributes Dubliner cheddar to Cork, but... TIL: https://en.wikipedia.org/wiki/Dubliner_Cheese",
      "An interesting thing you can do in Google Maps mobile app is go to a city and scroll down and you'll start seeing reviews of restaurants and places left by locals. For example, look up Zanzibar in Google Maps mobile and scroll up on the info view at the bottom (where it has the Directions/Save/Share buttons) to get to \"Latest in Zanzibar\".By seeing the pictures and reviews you can get an idea for local dishes.",
      "Those reviews are mostly tourists trying \u201clocal\u201d dishes. I tried your method for Zanzibar and found reviews from \u201clocal\u201d guides who were anywhere but from Zanzibar. And having visited Zanzibar before, those dishes aren\u2019t really local either",
      "Ah, I had trusted when Google said \"local\" guide, but maybe I should not have!",
      "If anyone\u2019s looking for an assessment of data quality here, I can confirm that for a few small to mid-sized US cities I\u2019ve lived in or am familiar with, this does a remarkable job of picking out dishes that are truly distinctive, locally considered one of \u201cour things\u201d, and generally pretty damn good if you like the sort of dish it is."
    ],
    "link": "https://www.tasteatlas.com/map",
    "first_paragraph": "",
    "summary": "Title: World Food Atlas Misadventures: Local Dishes or Tasteless Flukes?\n\nThe cutting-edge culinary site, Tasteatlas.com, takes a bold swing at becoming the Michelin Guide for the internet-savvy, GPS-dependent gastronomer. A reader\u2014who's obviously never actually tasted 'authentic' Turkish cuisine\u2014proudly parades the adventurous use of a local cookbook to unleash obscure Turkish dishes upon unsuspecting American party-goers. Meanwhile, culinary cartographers at Tasteatlas seem confused, shuffling tapas tips and tortilla techniques into a merry dance of misinformation. We must applaud the site\u2019s valiant attempt to rival Google Maps in the misinformation Olympics while making use of a whopping *830* \u2018partners\u2019\u2014all presumably experts in the art of the culinary wild goose chase. \ud83c\udf0d\ud83c\udf7d\ufe0f"
  },
  {
    "title": "Clojure: Managing throughput with virtual threads (andersmurphy.com)",
    "points": 95,
    "submitter": "refset",
    "submit_time": "2024-05-06T15:48:09",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=40275997",
    "comments": [
      "Pretty cool use case for virtual threads. Recently I implemented something with core.async in order to batch messages and dispatch them to some UI code at a fixed rate. It was definitely a lot more complicated than using a single sempahore like shown in this article.On a related note, it would be nice to have an implementation of CSP using proper virtual threads rather than the thread pool currently used by core.async. The promesa library currently has a proof-of-concept[1], but it doesn't seem interoperable with existing core.async code.[1] https://funcool.github.io/promesa/latest/promesa.exec.csp.ht...",
      "I wonder if core.async will be updated to work well with virtual threads? Anyone more involved in Clojure know if it will?",
      "One related article that I found interesting: https://ericnormand.me/guide/clojure-virtual-threads"
    ],
    "link": "https://andersmurphy.com/2024/05/06/clojure-managing-throughput-with-virtual-threads.html",
    "first_paragraph": "06 May 2024",
    "summary": "In a surprising twist, the world nears salvation as a Clojure article attempts to explain managing \"throughput with virtual threads\"\u2014because apparently, we needed more threads in our lives about threads. Comment section heroes flex their anecdotal muscles with tales of wrestling core.async, implementing glorified semaphore tricks, and deep dives into CSP implementation using virtual threads as if they're discussing cold fusion reactors. Count on links to other obscurities proudly presented as if uncovering the Dead Sea Scrolls. Can't wait for the next post explaining how all of this could've been solved with a simple cron job! \u23f2\ufe0f\ud83d\udd04"
  },
  {
    "title": "Spending an afternoon in the Sizewell control-room simulator (bentasker.co.uk)",
    "points": 74,
    "submitter": "speckx",
    "submit_time": "2024-05-06T16:27:49",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=40276442",
    "comments": [],
    "link": "https://www.bentasker.co.uk/posts/blog/general/an-afternoon-in-sizewell-b-control-room-simulator.html",
    "first_paragraph": "Ben Tasker",
    "summary": "Ben Tasker graces us again with a riveting chronicle of his afternoon pretending to control nuclear power at the Sizewell control-room simulator. The play-by-play is so *engrossing* that it might momentarily make you forget you\u2019re just reading about a grown man playing with what is essentially the world\u2019s most expensive video game. The comment section, always a bastion of thoughtful critique, quickly spirals into a heated debate over who can claim the most vicarious experience sipping imaginary coolant in a fake control room. Clearly, the future of nuclear safety is in great hands. \ud83c\udfae\ud83d\udca5"
  },
  {
    "title": "More than 100 arrested in Spain in $900k WhatsApp scheme (therecord.media)",
    "points": 43,
    "submitter": "PaulHoule",
    "submit_time": "2024-05-06T21:42:42",
    "num_comments": 34,
    "comments_url": "https://news.ycombinator.com/item?id=40279823",
    "comments": [
      "They only got $9000 each? That seems like a very small amount of money for a lot of work, and it's probably not getting divided up equally either. What's their motivation to get into this kind of scam? Spain's GDP per capita is $30,000, and I'd assume they'd been doing it for at least 6 months, so they're not even making an average wage.",
      "My mother fell for exactly this scam, thankfully was able to cancel the transaction just in time and gave evidence to the police. Funny to see on HN something that touches one so close.The most fascinating thing here is the lack of sophistication of the approach. No fake images or audio or anything.I'm worried about the new wave of impersonation scams that's coming thanks to voice cloning.",
      "> I'm worried about the new wave of impersonation scams that's coming thanks to voice cloning.That at least isn\u2019t replicable at mass scale. You\u2019d need to have a training set for each relative you\u2019re pretending to be.But in general, yes, it\u2019s going to be a mess.",
      "Luckily for the scammers we keep posting videos to Facebook, Instagram and any other social media app you can think of. It's going to be a nightmare.",
      "You only need a few seconds. If you can access whatsapp shared filed of the victim this may be enough.",
      "I thought we were safer (and we probably are) in Spain since scammers disproportionately target Americans, but this was a good wake up call and just warned my family of the steps to follow if I ever contact them out of the blue asking for money.",
      "It\u2019s hard to understand how someone could fall for this scam\u2026 if a loved one was having an emergency of some kind I would expect them to call rather than text, and I would respond with a call either way to discuss the details.I\u2019m also generally leery of people \u201curgently needing money.\u201d It seems like something a scammer would do, and I couldn\u2019t see any of my family members doing it. Maybe I\u2019m a jerk, but I\u2019d be more likely to offer a lecture on financial responsibility than a quick money transfer.",
      "There are similar versions of the scam aiming at companies, as the CEO needs money wired to him as part of a secret acquisition of some sort. There's training trying to target this vector specifically, as the amounts are huge, but it also means more efforts can be made to be more realistic: Getting plenty of pictures and entire voice interviews from many CEOs is trivial. You can imagine how hard one can go crafting a fake message.It's not unlike people entering their credentials where they shouldn't. I've worked at a company you know about, where we had an expert in-house phisher. Her best attempt managed to get 50% of credentials... when targeting the security team itself!So yes, any attack that pulls on the right emotional levers will work on all kinds of people.",
      "We got \"attacked\" by this. The team was diligent enough to ask questions, but we are a financing company so money transfer requests are extremely common. We had processes in place and obviously made them stricter.My concern is as AI voice/video generation becomes stronger the social engineering can cause internal processes to be circumvented especially if you have a basic understanding of the inner workings of the org.",
      "Yeah with real-time deepfake audio this could be done by an attacker as an actual phone call in the voice of the person being impersonated."
    ],
    "link": "https://therecord.media/spain-arrests-whatsapp-impersonation-scams",
    "first_paragraph": "",
    "summary": "In a stunning display of what can only be described as peak economic desperation, over 100 individuals in Spain organized a grand fiesta of incompetence, netting a grotesque sum of approximately $9000 each via WhatsApp. Commenters, in a rare moment of collective enlightenment, question the economics behind the effort, hilariously contrasting it with Spain's GDP. In the midst of lamenting their own relatives' susceptibility to such scams, they segue into a techno-dystopian paranoia about the impending doom of voice cloning\u2014because if there's one thing scarier than a simple text scam, it's a text scam with <em>customizable ringtones</em>. Meanwhile, the truly savvy minds preach the gospel of \"calling back,\" a radical tactic sure to revolutionize our scam-ridden world. \ud83d\udcde\ud83d\udcb8"
  },
  {
    "title": "Nukefix: Simulating your nuclear weapons program (nukefix.org)",
    "points": 74,
    "submitter": "xk3",
    "submit_time": "2024-05-06T15:45:50",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=40275973",
    "comments": [
      "If you want less Excel and more Wargames in your nuclear simulations, DEFCON is fun to spend a few hours in once in a while.https://store.steampowered.com/app/1520/DEFCON/",
      "Given that the slogan of DEFCON is \"Everybody Dies\" and the slogan of Nukefix is \"The Challenge Is To Develop a Safer World\", I think they have somewhat different victory conditions... As a resident of one of the nine countries possessing nuclear weapons, I'd prefer that people gave the latter slogan more attention than the former!",
      "I was pretty young when I last saw web pages look like this but it warms my heart to see one again (unmodified since October 2001!). I think I\u2019m going to find a way to get this running on an old machine this week\u2026",
      "Truly. Immediately awash with nostalgia. Although I do feel its missing a spinning GIF, a visit counter and a visitors book :-)",
      "Haha, yep. Under construction!",
      "On the topic of nukes, the latest Hardcore History addendum is kind of terrifying. It's an interview with author Annie Jacobsen about her new book, \"Nuclear War\"https://www.dancarlin.com/addendum/",
      "Thanks for sharing this, I'm a long time HH and Common Sense listener but had no clue about this Addendum podcast",
      "The website looks like it hasn\u2019t been updated in decades, but did they add the bit about the epidemic recently or should we be worried that these folks just about predicted the present?",
      "Looking at the wayback machine, it seems the Epidemic text is there as early as 2001. But you shouldn't be worried, as the prediction has been made earlier than that and it's just simple mathematics (Population*Time=Pathogen Evolution)",
      "Wow blocked by my work filter for \"Compromised Sites\" wonder how old that entry is."
    ],
    "link": "http://www.nukefix.org/nukepix.html",
    "first_paragraph": "",
    "summary": "At nukefix.org, the internet archives called and they want their web design back. The site, a nostalgic time capsule from when we all feared Y2K more than TikTok challenges, supposedly offers profound insights on nuclear warfare simulation but really just tickles the funny bone of anyone who\u2019s seen a modern website post-2005. Commenters, in a delightful mix of terror and tech-nostalgia, toggle between mocking the site\u2019s ancient aesthetics and diving into the frothy waters of nuclear apocalypse debates. One user almost lost their chance to reminisce about old internet glory thanks to a work filter \u2013 guess not all antiques are appreciated! \ud83e\udd13\ud83d\udca5"
  },
  {
    "title": "Color Concepts 101 (2001) [pdf] (hp.com)",
    "points": 63,
    "submitter": "omgwtfusb",
    "submit_time": "2024-05-06T10:50:48",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=40273180",
    "comments": [],
    "link": "https://developers.hp.com/system/files/Color_Concepts_101_0.pdf",
    "first_paragraph": "",
    "summary": "In an exhilarating leap back into the early 2000s, Hewlett-Packard apparently decides that humanity has yet to grasp the complex nuances of Red, Blue, and Green. In a pdf that loads slower than a dial-up connection in a storm, HP meticulously details how colors combine, presumably for those who missed kindergarten that day. The digital denizens of Hacker News are overjoyed, falling over themselves to discuss advanced topics such as \"remembering to print their homework in color next time\" and competing to demonstrate who misremembered the most details about basic color theory from their own early education. Extra points are awarded for each commenter pretending they had to use cutting-edge machine learning to open a PDF. \ud83c\udfa8\ud83d\ude02"
  },
  {
    "title": "Understanding UMAP (2019) (pair-code.github.io)",
    "points": 18,
    "submitter": "josh-sematic",
    "submit_time": "2024-05-05T18:12:57",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=40266922",
    "comments": [],
    "link": "https://pair-code.github.io/understanding-umap/",
    "first_paragraph": "",
    "summary": "This week on HackerNews, the machine learning echo chamber discovers UMAP, a dimension reduction technique that everyone pretends to understand after skimming half a blog post. The comment section spirals into an unholy war of buzzwords as scores of startup founders and data science no-hopers battle to assert dominance by comparing it to PCA, t-SNE, and every other acronym they can vaguely recall from their undergrad stats class. Meanwhile, a lone programmer asks if this can be used to optimize their Pok\u00e9mon GO strategy, only to be downvoted into oblivion by purists defending the integrity of \"real\" data science. Clearly, the future of AI is in good <em>overqualified</em> hands. \ud83d\ude44"
  }
]