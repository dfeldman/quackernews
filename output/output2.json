[
  {
    "title": "Have I Been Pwned 2.0 (troyhunt.com)",
    "points": 287,
    "submitter": "LorenDB",
    "submit_time": "2025-05-19T21:37:23 1747690643",
    "num_comments": 88,
    "comments_url": "https://news.ycombinator.com/item?id=44035158",
    "comments": [
      "He should partner with a law firm, for class action lawsuits, for every breach due to negligence (which is probably all of them).Tie in to a banking service, so you can do direct deposits to many millions of people, every time there's new settlements paid, and you'll be a folk hero.Get lawyers who want negligent companies to actually regret the breaches, with judgements that hurt.  (Rather than a small settlement that gets lawyers paid, but is only a small cost of doing business, which is preferable to doing business responsibly.)Optional: Sell data of imminent lawsuits, to an investment firm.Though, ideally, investors won't need this data, since everyone will know that a breach means a stock should take a hit.  Isn't that how it should be.\n \nreply",
      "> do direct deposits to many millions of people, every time there's new settlements paidI wish I could easily donate my tiny settlements to a good cause. It might make it worth the time to register for the class.\n \nreply",
      "Probably impossible, but create a slush fund where companies that behave badly are forced to pay into so we can do things like fix roads and build housing.\n \nreply",
      "We could also design some kind of electoral process for picking those in charge of defining the rules and creating yet more bodies to enforce it.Maybe this time we can come up with a better way to disincentivize corruption and bribery.\n \nreply",
      "HN Invents Taxes And Fines\n \nreply",
      "The idea of fines as a revenue stream has never sat well with me.  Fines are meant to be a disincentive.  The ideal collection amount is zero.  Treating them as a revenue stream creates a perverse incentive to enforce the penalty without disincentivizing the behavior.\n \nreply",
      "If your ideal is a perfect society where everyone follows the all rules all the time you are going to be sorely disappointed. The ideal collection amount is the size of the fine multiplied by the actual occurrence of the offense. And that revenue should be strictly used for rehabilitative or restorative justice. For example, speeding fines should go to road improvements that deter speeding making roads safer. If no one\u2019s speeding, there\u2019s no need for that. But people will always break the law.\n \nreply",
      "The safest road is the closed one.I just want to say that in modern times safety is put as #1 priority, while it's actually always a balance. E.g. we wanted the safest airline industry, we'd close the airports. But we balance the safety vs usefulness.",
      "Yes I agree.  I was replying to the suggestion to put the proceeds from fines into a general slush fund.  Doing that creates an incentive to use speeding tickets to pay for police overtime and radar guns instead of traffic calming infrastructure.\n \nreply",
      "This is literally what happened in Belgium when politicians did budget. A piece of the expected slice was traffic fines.So that means that any kind of system that would improve traffic other than repressive measures would cost them twice, once to fix the situation and again when they can issue less fines.\n \nreply"
    ],
    "link": "https://www.troyhunt.com/have-i-been-pwned-2-0-is-now-live/",
    "first_paragraph": "",
    "summary": "In the digital utopia of Troy Hunt\u2019s latest blog post, \"Have I Been Pwned 2.0,\" the internet commentariat outdoes itself by proposing a seamless marriage between cybersecurity breaches and the litigious glee of class action lawsuits. According to the deep thinkers in the comments, every data leak should automatically fill our pockets with settlement cash\u2014because nothing says \"justice served\" like turning systemic security failings into a lucrative direct-deposit scheme. It's all about making lawyers rich and turning corporate negligence into the next hot investment tip. Meanwhile, one visionary even dreams up a world where fines fix potholes and build apartments, blissfully reinventing government budgets with the panache of a Reddit thread philosopher. \ud83c\udfa9\ud83d\udcb0\ud83d\udd25"
  },
  {
    "title": "is-even-ai \u2013 Check if a number is even using the power of AI (npmjs.com)",
    "points": 73,
    "submitter": "modinfo",
    "submit_time": "2025-05-20T00:19:44 1747700384",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=44036438",
    "comments": [
      "This package has saved me so many hours of tedious gruntwork. It's like a junior developer - you still have to manually check their work, but when it's correct, it's a great productivity improvement.And don't forget where this will go in a couple years with improved models and more computing power, it's gonna be awesome![/i]\n \nreply",
      "pro tip: play around with the temperature especially when using big numbers as input\n \nreply",
      "Wow, amazing tip. This hack improved my workflow by 10x.\n \nreply",
      "Use this to add AI to your product to appease management.Next week, \u201crefactor\u201d it out and brag to manager about cost savings and performance boosts, don\u2019t mention \u201cremoving the AI\u201d.\n \nreply",
      "This doesn't work if I use a reasoning model like o3, which does not allow setting max_tokens.Without reasoning, how can I be SURE a number is even?\n \nreply",
      "Multiple models?\n \nreply",
      "I\u2019m glad you included an isOdd() method. I was about to ask how you\u2019d check for that.\n \nreply",
      "Can we get a leftpad-ai please?\n \nreply",
      "You might be able to optimize this by using embeddings. Store all the numbers and search \"odd\" and \"even\" until you find your number.\n \nreply",
      "why stop there? let's get an is-true-ai that checks if a boolean is true using AI\n \nreply"
    ],
    "link": "https://www.npmjs.com/package/is-even-ai",
    "first_paragraph": "\n\nCheck if a number is even using the power of \u2728AI\u2728.Uses OpenAI's GPT-3.5-turbo model under the hood to determine if a number is even.For all those who want to use AI in their product but don't know how.Inspired by the famous is-even npm package and this tweet.This package is on npm.for more advance usage like changing which model to use and setting the temperature, use IsEvenAiOpenAi insteadFeel free to make a PR to add more AI platforms.npm i is-even-aiGitgithub.com/Calvin-LL/is-even-aigithub.com/Calvin-LL/is-even-ai101.0.5MIT13.3 kB117 months ago",
    "summary": "Title: <em>Revolution in Number Theory: AI Tells Us if a Number Has Friends</em>\n\nSummary: Humanity triumphs again with the groundbreaking npm package, is-even-ai, allowing software developers to engage the full power of a supernaturally advanced AI to tackle the cosmic mystery: is a number even? Harness the mystical prowess of GPT-3.5-turbo to decipher numbers' secret lives, because manually checking a number\u2019s parity is so 20th century. Commenter geniuses celebrate saving precious nanoseconds in their days, freeing up vast spans of time for other vital tasks, such as debating the ethical implications of AI in their coffee breaks. Now, if only AI could determine why we're using it for this... \ud83d\ude44\ud83e\udd16"
  },
  {
    "title": "DDoSecrets publishes 410 GB of heap dumps, hacked from TeleMessage (micahflee.com)",
    "points": 16,
    "submitter": "micahflee",
    "submit_time": "2025-05-20T00:52:27 1747702347",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://micahflee.com/ddosecrets-publishes-410-gb-of-heap-dumps-hacked-from-telemessages-archive-server/",
    "first_paragraph": "This morning, Distributed Denial of Secrets published 410 GB of data hacked from TeleMessage, the Israeli firm that makes modified versions of Signal, WhatsApp, Telegram, and WeChat that centrally archive messages. Because the data is sensitive and full of PII, DDoSecrets is only sharing it with journalists and researchers.There's a lot of background, so here's a quick timeline of events with relevant links:Now, DDoSecrets has published 410 GB of these TeleMessage heap dumps. Here's the DDoSecrets description of the release:It seems that the SignalGate saga of staggering incompetence is not yet complete. I'm digging into this data right now. It's bonkers.Note: I'm a member of the DDoSecrets collective. If you can, donate! DDoSecrets operates on a shoestring budget and does incredibly impactful work.Hi, I'm Micah. I'm a coder, a journalist, and I help people stay private and secure.No spam. Unsubscribe anytime.",
    "summary": "Title: Hackers Deliver Early Christmas Present: 410 GB of \"Who Cares?\"\n\nIn the latest episode of \u201cprivacy theater,\u201d Distributed Denial of Secrets (DDoSecrets) heroically dumps 410 GB of TeleMessage data, because who doesn't love sifting through endless heaps of potentially explosive message archives? The data, dripping with juicy personal details, is *exclusively* handed to the \"trusted\" hands of journalists and researchers\u2014because, obviously, they've never mishandled information. Prepare yourself for groundbreaking exposes built on the very same foundation of privacy invasion they aim to denounce. Meanwhile, in comment land, the usual crew toggles between calling DDoSecrets cyber-saviors and data-dystopians, while secretly wishing they too had 410 GB of secrets to feel important about. \ud83d\udc40\ud83c\udf7f"
  },
  {
    "title": "Jules: An Asynchronous Coding Agent (jules.google)",
    "points": 181,
    "submitter": "travisennis",
    "submit_time": "2025-05-19T21:12:47 1747689167",
    "num_comments": 87,
    "comments_url": "https://news.ycombinator.com/item?id=44034918",
    "comments": [
      "So, you can assign github issues to this thing, and it can handle them, merge the results in, and mark the bug as fixed?I kind of wonder what would happen if you added a \"lead dev\" AI that wrote up bugs, assigned them out, and \"reviewed\" the work. Then you'd add a \"boss\" AI that made new feature demands of the lead dev AI. Maybe the boss AI could run the program and inspect the experience in some way so it could demand more specific changes. I wonder what would happen if you just let that run for a while. Presumably it'd devolve into some sort of crazed noise, but it'd be interesting to watch. You could package the whole thing up as a startup simulator, and you could watch it like a little ant farm to see how their little note-taking app was coming along.\n \nreply",
      "It's actually a decent patern for agents. I wrote a pricing system with an anylyst agent, a decision agent, and a review agent. They work together to make decisions that comply with policy.  It's funny to watch them chatter sometimes, they really play their role, if the decision agent asks the anylyst for policy guidance it refuses and explains that it's role is to analyze.  Though they do often catch mistakes that way and the role playing gets good results.\n \nreply",
      "What about \"VC\" AI that wants a unicorn? :D\n \nreply",
      "We have been informed that VC is the only job AI cannot do.\n \nreply",
      "seems like the 1 person unicorn will be a reality soon :-)\n \nreply",
      "/ :-(\n \nreply",
      "I was interested. Clicked the try button and just another wait list. When will Google learn that the method that worked so well with Gmail doesn't work any more. There are so many shiny toys to play with now, I will have forgotten about this tomorrow.\n \nreply",
      "The method absolutely does work, but you need loyal advocates who are praising your product to their friends, or preferrably users who are already knocking on your door.\n \nreply",
      "They had to release something, openai is moving at blazing speed\n \nreply",
      "Sounds like a meme. I just can't take the phrase \"blazing speed\" seriously anymore. Is this intended humorously? Or is it just me\n \nreply"
    ],
    "link": "https://jules.google/",
    "first_paragraph": "",
    "summary": "**Jules: An Asynchronous Coding Agent (jules.google)**\n\nThe future is here, and it's apparently a code-regurgitating AI bot that's about as exciting as watching paint dry, but hey, it's the tech world's new pet! Commenters are already frothing at the prospect of Jules taking over GitHub duties, envisioning a bleak yet mildly amusing scenario where AIs run the entire tech development circus and human developers are relegated to spectators munching popcorn. Among the gem-like insights, one brilliant commenter suggests adding a \u201cVC AI\u201d to chase unicorn dreams \u2013 alas, hopes are dashed when it\u2019s revealed that even AIs can\u2019t match the unique visionary incompetence required of real VCs. Meanwhile, a cynical soul attempts to interact with the product, only to find the timeless frustration of a Google waitlist, proving once more that some tech traditions never die, they just get more annoying. \ud83d\ude44"
  },
  {
    "title": "The Windows Subsystem for Linux is now open source (windows.com)",
    "points": 1058,
    "submitter": "pentagrama",
    "submit_time": "2025-05-19T16:14:15 1747671255",
    "num_comments": 692,
    "comments_url": "https://news.ycombinator.com/item?id=44031385",
    "comments": [
      "Every time I praise WSL on hn I pay the karma tax but I will die on this hill. WSL is more powerful than Linux because of how easy it is to run multiple OS on the same computer simultaneously. It's as powerful as Linux with some janky custom local docker wrappers for device support, local storage mapping, and network mapping. Except it's not janky at all. It's an absolute delight to use, out of the box, on a desktop or laptop, with no configuration required.Edit: for clarity, by \"multiple OS\" I mean multiple Linux versions. Like if one project has a dependency on Ubuntu22 and another is easier with Ubuntu24. You don't have to stress \"do I update my OS?\"\n \nreply",
      "\"More powerful than Linux\" is silly. It's a VM. The most useful thing is that it does a bunch of convenience features for you. I am not suggesting that it is not extremely convenient, but it's not somehow more powerful than just using Linux.You know what's even more convenient than a VM? Not needing a VM and still having the exact same functionality. And you don't need a bunch of janky wrapper scripts, there's more than one tool that gives you essentially the same thing; I have used both Distrobox and toolbx to quickly drop into a Ubuntu or Fedora shell. It's pretty handy on NixOS if I want to test building some software in a more typical Linux environment. As a bonus, you get working hardware acceleration, graphical applications work out of the box, there is no I/O tax for going over a 9p bridge because there is no 9p bridge, and there is no weird memory balloon issues to deal with because there is no VM and there is no guest kernel.I get that WSL is revolutionary for Windows users, but I'm sorry, the reason why there's no WSL is because on Linux we don't need to use VMs to use Linux. It's that simple...\n \nreply",
      "Yeah if you are working with Linux only, its better to go full linux.WSL2 is really handy when you want to run other software though. For example, I use Solidworks, so I need to run windows. Forscan for Ford vehicles also has to run under Windows. Having WSL2 means that I can just have one laptop and run any software that I want.\n \nreply",
      "My development is mainly Windows and I prefer Linux host with Windows VM guests. The experience is more stable and I can revert to a snapshot when Windows or Microsoft product update brakes something or new test configuration does. It also allows to backup and retain multiple QA environments that are rarely used, like a client's Oracle DB. It is nice being able to save the VM state at the end of the week and shut it all down so you can start the next right where you left off. Cannot do that when your development environment is the bare metal OS. Windows has known issues of waking a sleeping laptop.\n \nreply",
      "Can you share more details of how you make that work well?  What hypervisor, what backup/replication, for instance?  I can only imagine that being a world of irritation.\n \nreply",
      "It's been a few years since I used it, but Virtualbox (free) had perfectly good suspend/restore functionality, and the suspended VM state was just a file.\n \nreply",
      "I too think it would be definitely more stable Linux Host with Win VM guests, but I can see the other way around being more convenient to get support for commercially. Though with the VMWare licensing changes, I think what is by default easier for commercial support options may be changing too.\n \nreply",
      "> Windows has known issues of waking a sleeping laptop.Doesn't Linux as well?\n \nreply",
      "I'm on Lenovo Yoga 6, Gentoo, 6.12 kernel, 4.20 Xfce. Sleeps works perfect. Same on my Asus+AMD desktop. I've not had sleep related issues for years. And last time I did, it was an out-of-tree Wifi driver causing the whole mess.\n \nreply",
      "I'm on Ubuntu 25.04, 128GB RAM, pcie 5 SSD, NVIDIA 5080, 9950X3D.I discovered over the weekend that only 1 monitor works over HDMI, DisplayPort not working, tried different drivers. \nSuspend takes a good 5 minutes, and on resume, the UI is either turn or things barely display.I might buy a Windows license, especially if I can't get multi-screen to work.\n \nreply"
    ],
    "link": "https://blogs.windows.com/windowsdeveloper/2025/05/19/the-windows-subsystem-for-linux-is-now-open-source/",
    "first_paragraph": "",
    "summary": "In a dizzying act of corporate generosity, Microsoft has flung the code for the Windows Subsystem for Linux (WSL) out into the open-source wilds, a move celebrated universally by dozens of commenters who have never touched a non-GUI Unix terminal. An ardent soul fights tirelessly on Hacker News, paying a \"karma tax,\" bravely undeterred by the torrent of sneers, to herald WSL as the messiah of modern computing. \"More powerful than Linux,\" they rave, as techno-heretics gnash their teeth over how running Linux *inside* Windows is somehow not the digital equivalent of putting a bicycle inside a cargo plane and claiming it\u2019s a better bicycle. Reply chains flood with Linux zealots and Windows pragmatists wielding anecdotes like holy scripture, arguing whether it's better to virtualize Windows on Linux or vice versa, all while ignoring the irony that both are just trying to make one OS behave like the other. Senior engineers on both sides nod sagely, knowing deep down the bitter truth: they still can't figure out why their laptops won't wake from sleep."
  },
  {
    "title": "Zod 4 (zod.dev)",
    "points": 580,
    "submitter": "bpierre",
    "submit_time": "2025-05-19T15:24:58 1747668298",
    "num_comments": 180,
    "comments_url": "https://news.ycombinator.com/item?id=44030850",
    "comments": [
      "Author here, AMA!Regarding the versioning: I wrote a fairly detailed writeup here[0] for those who are interested in the reasons for this approach.Ultimately npm is not designed to handle the situation Zod finds itself in. Zod is subject to a bunch of constraints that virtually no other libraries are subject to. Namely, the are dozens or hundreds of libraries that directly import interfaces/classes from Zod and use them in their own public-facing API.Since these libraries are directly coupled to Zod, they would need to publish a new major version whenever Zod does. That's ultimately reasonable in isolation, but in Zod's case it would trigger a \"version avalanche\" would just be painful for everyone involved. Selfishly, I suspect it would result in a huge swath of the ecosystem pinning on v3 forever.The approach I ended up using is analogous to what Golang does. In essence a given package never publishes new breaking versions: they just add a new subpath when a new breaking release is made. In the TypeScript ecosystem, this means libraries can configure a single peer dependency on zod@^3.25.0 and support both versions simultaneously by importing what they need from \"zod/v3\" and \"zod/v4\". It provides a nice opt-in incremental upgrade path for end-users of Zod too.[0] https://github.com/colinhacks/zod/issues/4371\n \nreply",
      "Many thanks for your work! Definitely looking forward to the upgrade - especially the performance-boosts with regards to tsc will be very welcome in our relatively large code-base, and the changes to discriminated unions will probably help us big time in a very specific scenario where so far they fell short.That being said, I'm fully understanding of the reasons for the somewhat odd versioning given your special situation, but still, I'd wish there would be a 4.0.0-package for folks like us who simply don't need to worry or bother about zod-version-clashes in transitive dependencies bacause those don't exist (or at least I think so; npm ls zod only returns our own dependency of zod). If I understood correctly, we'll need to adapt the import to \"zod/v4\", which will be an incredibly noisy change and will probably cause quite a few headaches when IDEs auto-import from 'zod' and such, which we then need to catch with linting-rules.But that's probably a small gripe for a what sounds overall like a very promising upgrade - many thanks for your work once again!\n \nreply",
      "+1. We use Zod only for internal validation and would love a standalone release for v4 (or another package like zod4 or @zod/zod). I'm sure many greenfield projects would prefer that, too.\n \nreply",
      "Just would like to say I really appreciate your consideration of releasing breaking changes. I know not all libraries can employ your methodology but I wish many more of them would, as a frontend platform engineer.\n \nreply",
      "Sorry if it's mentioned in the article but I'm on mobile.Is fixing .optional() in TS[0] part of the 9/10 top-issues fixed? This has been my biggest pain point with Zod... but still Zod is so good I still choose to just deal with it :) Thanks for an amazing part of the ecosystem.[0] https://github.com/colinhacks/zod/issues/635\n \nreply",
      "First thank you for the hard work, many of my local hacks will go away with the new features!As a convenience and mostly avoid typos in form names I use my own version of https://github.com/raflymln/zod-key-parser. I've been surprised something like this hasn't been implemented directly in the library.Curious if you think this is out of scope for Zod or just something you haven't gotten around to implement?(Here are discussions around it: https://github.com/colinhacks/zod/discussions/2134)\n \nreply",
      "Some kind of affordance for FormData/URLSearchParams-style structures is definitely in scope. It was a late cut. Ultimately HTML inputs/forms are an implicit type system unto itself\u2014certainly HTML has a very different notion of \"optional\" than TypeScript. So my approach to this would likely involve another sub-library (\"zod/v4-form\").I like your library! Put in a PR to add it to the ecosystem page :)\n \nreply",
      "Great to hear this is something you are considering!To be clear: this isn't my library. This is just something I found while trying to solve the FormData issue. Props go to https://github.com/raflymln who created it.\n \nreply",
      "The path of least short term pain is often the best path.Everyone old in Python ecosystem remembers the Python 2/3 migration madness.\n \nreply",
      "I had so much difficulty with recursive types mixed with discriminated union (think xml in json for example) hopefully it'll be better now\n \nreply"
    ],
    "link": "https://zod.dev/v4",
    "first_paragraph": "Zod 4The latest version of ZodZod 4Introducing Zod 4Migration guideDocumentationIntroBasic usageDefining schemasCustomizing errorsFormatting errorsMetadata and registriesNewJSON SchemaNewEcosystemFor library authorsPackagesZodZod MiniNewZod CoreNewAfter a year of active development: Zod 4 is now stable! It's faster, slimmer, more tsc-efficient, and implements some long-requested features.Huge thanks to Clerk, who supported my work on Zod 4 through their extremely generous OSS Fellowship. They were an amazing partner throughout the (much longer than anticipated!) development process.To simplify the migration process both for users and Zod's ecosystem of associated libraries, Zod 4 will initially published alongside Zod 3 as part of the zod@3.25 release. Despite the version number, it it considered stable and ready for production use.To upgrade:Then import Zod 4 from the \"/v4\" subpath:Down the road, when there's broad support for Zod 4, we'll publish zod@4.0.0 on npm. At this point, Zod ",
    "summary": "Welcome to the epic saga of Zod 4, where JSON schema dreams come true and library authors dance in a field of breaking changes. In our latest episode, the creator of Zod bestows upon the masses a new version that's \"faster, slimmer, and more efficient\" - because we definitely didn't hear that one with the last three versions. Commenters, in a shocking display of predictable behavior, flood the announcement with \"thanks,\" \"can't wait,\" and various niche use cases that surely affect only them. Meanwhile, those lurking in the background wonder if \"zod/v4\" will be their new favorite haunt or just another nostalgically-framed headache. Buckle up, it\u2019s going to be a long ride on the version train. \ud83d\ude82\ud83d\udca8"
  },
  {
    "title": "GitHub Copilot Coding Agent (github.blog)",
    "points": 321,
    "submitter": "net01",
    "submit_time": "2025-05-19T16:17:56 1747671476",
    "num_comments": 192,
    "comments_url": "https://news.ycombinator.com/item?id=44031432",
    "comments": [
      "> Copilot excels at low-to-medium complexity tasks in well-tested codebases, from adding features and fixing bugs to extending tests, refactoring, and improving documentation.Bounds bounds bounds bounds. The important part for humans seems to be maintaining boundaries for AI. If your well-tested codebase has the tests built thru AI, its probably not going to work.I think its somewhat telling that they can't share numbers for how they're using it internally. I want to know that Microsoft, the company famous for dog-fooding is using this day in and day out, with success. There's real stuff in there, and my brain has an insanely hard time separating the trillion dollars of hype from the usefulness.\n \nreply",
      "We've been using Copilot coding agent internally at GitHub, and more widely across Microsoft, for nearly three months. That dogfooding has been hugely valuable, with tonnes of valuable feedback (and bug bashing!) that has helped us get the agent ready to launch today.So far, the agent has been used by about 400 GitHub employees in more than 300 our our repositories, and we've merged almost 1,000 pull requests contributed by Copilot.In the repo where we're building the agent, the agent itself is actually the #5 contributor - so we really are using Copilot coding agent to build Copilot coding agent ;)(Source: I'm the product lead at GitHub for Copilot coding agent.)\n \nreply",
      "> we've merged almost 1,000 pull requests contributed by CopilotI'm curious to know how many Copilot PRs were not merged and/or required human take-overs.\n \nreply",
      "textbook survivorship bias\nhttps://en.wikipedia.org/wiki/Survivorship_biasevery bullet hole in that plane is the 1k PRs contributed by copilot. The missing dots, and whole missing planes, are unaccounted for. Ie, \"ai ruined my morning\"\n \nreply",
      "It's not survivorship bias. Survivorship bias would be if you made any conclusions from the 1000 merged PRs (eg. \"90% of all merged PRs did not get reverted\"). But simply stating the number of PRs is not that.\n \nreply",
      "As with all good marketing, the conclusions omitted and implied, no?\n \nreply",
      "The implied conclusion (\"Copilot made 1000 changes to the codebase\") is also not survivorship bias.By that logic, literally every statement would be survivorship bias.\n \nreply",
      "If they measured that too it would make it harder to justify a MSFT P/E ratio of 29.6.\n \nreply",
      "\"We need to get 1000 PRs merged from Copilot\" \"But that'll take more time\" \"Doesn't matter\"\n \nreply",
      "I do agree that some scepticism is due here but how can we tell if we're treading into \"moving the goal posts\" territory?\n \nreply"
    ],
    "link": "https://github.blog/changelog/2025-05-19-github-copilot-coding-agent-in-public-preview/",
    "first_paragraph": "Learn about artificial intelligence and machine learning across the GitHub ecosystem and the wider industry.Learn how to build with generative AI.Change how you work with GitHub Copilot.Everything developers need to know about LLMs.Machine learning tips, tricks, and best practices.Explore the capabilities and benefits of AI code generation and how it can improve your developer experience.Resources for developers to grow in their skills and careers.Insights and best practices for building apps.Tips & tricks to grow as a professional developer.Improve how you use GitHub at work.Learn how to move into your first professional role.Stay current on what\u2019s new (or new again).Learn how to start building, shipping, and maintaining software with GitHub.Get an inside look at how we\u2019re building the home for all developers.Discover how we deliver a performant and highly available experience across the GitHub platform.Explore best practices for building software at scale with a majority remote team.",
    "summary": "**GitHub Copilot: Because Coding is Hard and We're Lazy**\nThe benevolent overlords at GitHub invite us to saddle up on our shiny new AI stead, Copilot, promising a land where bugs fear to tread, and features practically write themselves. As developers flood the comments with cautious optimism and guarded skepticism, GitHub merrily counts merged pull requests like a kid counting candy on Halloween. Meanwhile, the commenters engage in an Olympic level of mental gymnastics debating whether reporting on these 'successes' is survivorship bias, biased survivorship, or just good old corporate gaslighting. Of course, no actual numbers on failed PRs are divulged\u2014those secrets are kept tighter than the recipe for Coca-Cola, lest the stock market gets an upset stomach.\ud83d\ude80\ud83d\udcc9"
  },
  {
    "title": "Claude Code SDK (anthropic.com)",
    "points": 252,
    "submitter": "sync",
    "submit_time": "2025-05-19T18:04:06 1747677846",
    "num_comments": 113,
    "comments_url": "https://news.ycombinator.com/item?id=44032777",
    "comments": [
      "The way Claude Code is going is exactly what I want out of a agentic coding tool with this \"unix toolish\" philosophy. I've been using Claude code since the initial public preview release, and have seen the direction over time.The \"golden\" end state of coding agents is that you give it a Feature Request (EG Jira ticket), and it gives you a PR to review and give feedback on. Cursor, windsurf, etc, are dead ends in that sense as they are local editors, and can not be in CI.If you are tooling your codebase for optimal AI usage (Rules, MCP, etc), you should target a technology that can bridge the gap to headless usage. The fact Claude Code can trivially be used as part of automation through the tools means it's now the default way I thinking about coding agents (Codex, the npm package, is the same).Disclaimer, I focus on helping companies tool their codebases for optimal agent usage, so I might have a bias here to easily configurable tools.\n \nreply",
      "Not sure about that golden end state. Mine would be being in a room surround by screens with AI agents coding, designing, testing, etc. I would be there in the center giving guidance, direction, applying taste, etc\u2026\nAll conversational, wouldn\u2019t need to touch the keyboard 99% of the time.That's what I want and look forward one day\n \nreply",
      "Is this a me thing, or a millenial thing?I hate using voice for anything. I hate getting voice messages, I hate creating them. I get cold sweats just thinking about having to direct 10 AI Agents via voice. Just give me a keyboard and a bunch of screens, thanks.\n \nreply",
      "Voicemail universally sucks. However, when you're having a synchronous conversation with actual people, do you prefer to do everything via IM, or would you prefer a phone call?\n \nreply",
      "Email. Async comms make sense 99% of the time at my job. Unless there's deep work to be done, or pie-in-the-sky idea fabricating. Or rubber-ducky sessions. But I won't do those with AI.\n \nreply",
      "I almost never prefer a phone call, I'd rather go all the way to video/in-person or stick with text. I also prefer to push anything important that isn't extremely small out of instant messaging and to email.Brainstorming/whiteboarding, 1:1s or performance feedback, team socialization, working through something very difficult (e.g. pair debugging): in-person or videoIncidents, asking for quick help/pointers, small quick questions, social groups, intra-team updates: IMBigger design documents and their feedback, trickier questions or debugging that isn't urgent, sharing cool/interesting things, inter-team updates: Email\n \nreply",
      "IM, 100%. Otherwise only the loud people ever speak, whether or not they have anything useful to say.\n \nreply",
      "> do you prefer to do everything via IM, or would you prefer a phone call?It's hard for me to believe that there are psychopaths among us who prefer call on the phone, slack huddle or even organize meetings instead of just calmly writing messages on IM over coffee.\n \nreply",
      "I\u2019m the same. I love that writing allows you to think while typing so that you can review and revise your thoughts before letting them out in the world.And don\u2019t get me started on video vs text for learning purely non-physical stuff like programming\u2026\n \nreply",
      "I don't know. I'm 40 but I do like pair programming so\u2026\n \nreply"
    ],
    "link": "https://docs.anthropic.com/en/docs/claude-code/sdk",
    "first_paragraph": "",
    "summary": "**The Future of Laziness: Claude Code SDK**\n\nIn a dazzling feat of missing the point about programming, Claude Code SDK emerges as the latest toy for those who dream of replacing human developers with glorified text editors. One enthusiastic user shares their delusion that the pinnacle of coding innovation is turning Jira tickets into PRs without lifting a finger, while their tools setup sounds more like a fragile stack of Jenga blocks waiting for a breeze. Meanwhile, the comment section turns into a battle of personal communication preferences, ranging from fans of never speaking to another human again to those clinging to their keyboards like life rafts in a sea of unnecessary Zoom calls. Apparently, the tech utopia is not complete without a hearty side dish of commentary on how traditional methods like voicemail and synchronous calls are as outdated as dial-up Internet. \ud83d\udce7\ud83e\udd16\ud83d\udd07"
  },
  {
    "title": "Launch HN: Better Auth (YC X25) \u2013 Authentication Framework for TypeScript",
    "points": 172,
    "submitter": "bekacru",
    "submit_time": "2025-05-19T14:48:03 1747666083",
    "num_comments": 63,
    "comments_url": "https://news.ycombinator.com/item?id=44030492",
    "comments": [
      "A few months ago, I found a security vulnerability for better-auth. Within 24 hours of reporting the vulnerability to the team, it was patched, a notice had been posted, and I had been credited with a CVE. THAT is how you do it, folks!This team is top notch. The community leadership, responsiveness, and development speed has been incredible. The project itself is also great--this library is so much more flexible than others and requires much less effort to wrap my brain around. I'm so happy that this library is getting the recognition it deserves.\n \nreply",
      "Congrats on the launch! Better Auth has a level of universal love from developers that's really seen.Just one suggestion - remove the F-bombs from the testimonials on your homepage. There are various firewall intel providers that will put you on the bad lists because of this. You usually learn this the hard way :/\n \nreply",
      "Is there support for dynamic sign in provider urls? One of the deal breakers (in addition to federated sign in/sign out being a pain) for us with next-auth was that we have certain customers whose security requirements include pointing  subdomains that they own at our servers. So we would need to be able to use some logic to determine where the sign-in redirect should take a given user.\n \nreply",
      "i have been your user since the early days, I want to say congrats you guys, I have been recommending your framework to everyone. I appreciate the responsive support you gave me on discord (though in the end, my questions are already on the docs lol)\n \nreply",
      "Does it handle:- Federated sign-in/out? In next-auth, it is a giant pain to implement: https://github.com/nextauthjs/next-auth/discussions/3938- Automated refreshing of JWT tokens on the client-side? I always end up having to implement my own logic around this. The big problem is if you have multiple API calls going out and they all require JWT auth, you need to check the JWT validity and block the calls until it is refreshed. In next-auth on the server-side, this is impossible to do since that side is generally stateless, and so you end up with multiple refresh calls happening for the same token.- The ability to have multiple auth sessions at once, like in a SaaS app where you might belong to multiple accounts / organizations (your intro paragraph sounds like it does)- Handle how multiple auth sessions are managed if the user happens to open up multiple tabs and swaps accounts in another tab- Account switching using a Google provider? This seems to be a hard ask for providers like FusionAuth and Cognito. You can't use the Google connector directly but instead use a generic OAuth2 connector where you can specify custom parameters when making the initial OAuth2 flow with Google. The use-case is when a user clicks on the Google sign-in button, it should go to the Google account switcher / selector instead of signing in the user immediately if they have an existing signed-in Google session.\n \nreply",
      "- Not right now, but there\u2019s already an open issue and a PR in progress.- We don\u2019t use JWTs directly, and sessions always require state (it\u2019s not stateless). And yeah, both the client and server handles automatic session refresh.- Yes, we support both multiple sessions or having different organizations open in different tab: https://www.better-auth.com/docs/plugins/multi-session- Yes, that\u2019s possible, you just need to set the `prompt` parameter to `select_account`\n \nreply",
      "> We don\u2019t use JWTs directlyWhy?\n \nreply",
      "Super happy users :) Agree w/ what everyone has said. For us an extra benefit is the ability to host our user data in our own DB so that we can then dig into it w/ Index. Clerk keeps the data locked in and their \"analytics\" page is very very limited.\n \nreply",
      "I'm super happy that this is getting funding and won't become vaporeware at least for another season, because it's super important to have a stable foundation for homebrew solutions.However I'm not entierly sold on this being an actual alternative to auth0 and such - at least for now. For a drop-in solution lack of mail and dashboard can be a real deal breaker.\n \nreply",
      "Have been a proud better auth user for the last 6 months! Loved it so far, especially the fact that it's FOSS.  Now that it's a venture-funded YC company, I am worried about using it.  Should I be?\n \nreply"
    ],
    "link": "item?id=44030492",
    "first_paragraph": "",
    "summary": "**Better Auth: The Savior of Developer Souls with a Dash of Profanity**\n\nHooray, a new Y-Combinator spawn called \"Better Auth\" has just dropped into the TypeScript playground, ready to protect your mediocre SaaS app with the magic of authentication frameworks\u2014if you\u2019ve never heard of Auth0 or its fifty cousins, prepare to be mildly impressed. Within a blink, fanboys flood the comment section, reveling in CVE glory, while casually suggesting to tone down the testosterone in the testimonials unless you want your beloved library to be the new star of corporate firewalls\u2019 blacklist. Some eager beaver inquires about dynamic URL capabilities as if the last ten thousand libraries haven't tried (and failed) to dazzle with similar promises. Meanwhile, seasoned veterans, wrapped in the warm blanket of open-source glory, express their \"utter shock\" at the corporate sellout moment\u2014it's YC-funded now, remember? Profound despair masked as a query! \ud83d\ude31 Will \"Better Auth\" stand the test of time, or will it oscillate into the abyss of forgotten GitHub repos? Stay tuned for the next season of \"JavaScript Frameworks or Bust\"."
  },
  {
    "title": "Run your GitHub Actions locally (github.com/nektos)",
    "points": 159,
    "submitter": "flashblaze",
    "submit_time": "2025-05-16T08:55:27 1747385727",
    "num_comments": 65,
    "comments_url": "https://news.ycombinator.com/item?id=44003184",
    "comments": [
      "Just this week I tried giving this another chance to debug some weird CI failures for ruby tests. \nI\u2019m on M-series macs so there is an inherent platform mismatch. That coupled with us using depot images as action runners. I was never able to get it running past the dry-run stage. \nThere is just a lot of differences between CI runners and my local docker images. \nI even gave the image from catthehacker a try. Which is like >15GB. It still wouldn\u2019t run. \nFinally gave up.\n \nreply",
      "GH Actions have always worked flawlessly for me, as long as I don't ever do anything unusual.Last week I moved from a custom server back to GH Pages + GH Actions, and broke a feature that depended on an out dir existing after one build phase and before another. I have no idea how to fix it. It's probably simple, I'm just burnt out.\n \nreply",
      "Sounds similar to my own experiences trying to debug GH actions locally.I've tried twice now to get it working, pulling down many GBs of images and installing stuff and then getting stuck in some obscure configuration or environment issue.  I was even running Linux locally which I figured would be the happiest path.I'm not eager to try again, and unless there's a CI that's very slow or GH actions that need to be updated often for some reason, I feel like it's better to just brute-force it - waiting for CI to run remotely.\n \nreply",
      "It\u2019s even worse than that, it\u2019s 20GB compressed and 60GB uncompressed. Regardless, if your VM runs out of disk space there\u2019s no meaningful error (well 12 months ago) except a failure to start. (Possibly colima-specific I dunno I uninstalled docker-docker)I do find that some things just work locally and fail in real actions and vice versa. For the most part it\u2019s made it easier to move the bar forward though.\n \nreply",
      "Something like this may help by letting you ssh into the running instance so you can debug with the exact context: https://docs.warpbuild.com/tools/action-debugger\n \nreply",
      "I had luck with my actions I tried to debug. But I also had the issue that the runtime difference is simply too big to 100% trust it. Too bad because I think the tool is quite good.\n \nreply",
      "Every mention of Github Actions is an occasion to start looking for the best alternative in <current_month>, let's go!Is Dagger usable yet? Is there still hope for Earthly? Are general purpose workflow systems winning any time soon, or are we still afraid of writing code? Any new systems out there that cover all the totally basic features like running locally, unlike Github Actions?\n \nreply",
      "How's Jenkins looking these days?\n \nreply",
      "Seems fine to me, I don't really understand why people think CI is hard and they need to shop a different platform. All these systems are is a glorified shell script runner. It seems like developers just keep making up new DSLs over and over to do the same things.\n \nreply",
      "With Git Actions at full speed..... it is dying.\n \nreply"
    ],
    "link": "https://github.com/nektos/act",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Run your GitHub Actions locally \ud83d\ude80\n      \"Think globally, act locally\"Run your GitHub Actions locally! Why would you want to do this? Two reasons:TipNow Manage and Run Act Directly From VS Code!\nCheck out the GitHub Local Actions Visual Studio Code extension which allows you to leverage the power of act to run and test workflows locally without leaving your editor.When you run act it reads in your GitHub Actions from .github/workflows/ and determines the set of actions that need to be run. It uses the Docker API to either pull or build the necessary images, as defined in your workflow files and finally determines the execution path based on the dependencies that were defined. Once it has the execution path, it then uses the Docker API to run containers for each action based on the images prepared earlier. The environment variables an",
    "summary": "**Hackernews Introduces Local Drama: GitHub Actions Edition**\n\nToday on GitHub, another tool promises to save developers from the tyranny of actually using the online tools as designed, because running things locally is surely the epitome of innovation. Enter: a Visual Studio Code extension that lets you pretend your tiny laptop is a fully-equipped CI server, complete with Docker hijinks and environment mismatches. Commenters dive bomb into the discussion, sharing tales of sorrow with disk space calamities and mysterious CI failures that not even a 15GB Docker image from catthehacker can fix. But hey, as long as everyone keeps reinventing CI in their own basement, we're all making progress, right? Meanwhile, one bright soul quietly ponders if Jenkins still exists amidst this CI existential crisis. \ud83d\ude80\ud83d\udcbb\ud83d\udd25"
  },
  {
    "title": "Kilo: A text editor in less than 1000 LOC with syntax highlight and search (github.com/antirez)",
    "points": 49,
    "submitter": "klaussilveira",
    "submit_time": "2025-05-19T20:28:29 1747686509",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=44034459",
    "comments": [
      "How timely, I just finished going through a tutorial that builds a text editor like kilo from scratch: https://viewsourcecode.org/snaptoken/kilo/index.htmlWould highly recommend the tutorial as it is really well done.\n \nreply",
      "It also inspired this similar Rust project: https://github.com/ilai-deutel/kibi#comparison-with-kiloAlthough it does cheat a bit in an effort to better handle Unicode:> unicode-width is used to determine the displayed width of Unicode characters. Unfortunately, there is no way around it: the unicode character width table is 230 lines long.\n \nreply",
      "> It also inspired this similar Rust projectAnd these projects:https://github.com/antirez/kilo/forks\n \nreply",
      "Reading through this code is a veritable rite of passage. You learn how C works, how text editors work, how VT codes work, how syntax highlighting works, how find works, and how little code it really takes to make anything when you strip away almost all conveniences, edge cases, and error handling.\n \nreply"
    ],
    "link": "https://github.com/antirez/kilo",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A text editor in less than 1000 LOC with syntax highlight and search.\n      Kilo is a small text editor in less than 1K lines of code (counted with cloc).A screencast is available here: https://asciinema.org/a/90r2i9bq8po03nazhqtsifksbUsage: kilo <filename>Keys:Kilo does not depend on any library (not even curses). It uses fairly standard\nVT100 (and similar terminals) escape sequences. The project is in alpha\nstage and was written in just a few hours taking code from my other two\nprojects, load81 and linenoise.People are encouraged to use it as a starting point to write other editors\nor command line interfaces that are more advanced than the usual REPL\nstyle CLI.Kilo was written by Salvatore Sanfilippo aka antirez and is released\nunder the BSD 2 clause license.\n        A text editor in less than 1000 LOC with syntax highlight and se",
    "summary": "**Under 1K LOC: A Miracle or a Mess?**\n\nIn a world teetering on the brink of software bloat, one hero named <b>antirez</b> rises with <i>Kilo</i>: a text editor succinct enough to make every extra line of code feel like a personal attack. Stripped of all but the bare essentials, Kilo boasts a feature list nearly as long as its codebase, prompting a flurry of GitHub warriors to hail it as the second coming of <i>minimalism</i>. Meanwhile, commenters revel in their ceremonious dive into the editor's source, each emerging with the wide-eyed zeal of a convert, ready to preach the gospel of simplicity\u2014just as soon as they reinvent the wheel in Rust, because, well, Unicode happens. Critics snicker from their bloated IDEs: \"Enjoy your 999 lines of bugs!\" \ud83d\ude43"
  },
  {
    "title": "Terraform MCP Server (github.com/hashicorp)",
    "points": 19,
    "submitter": "kesor",
    "submit_time": "2025-05-19T22:50:26 1747695026",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=44035770",
    "comments": [
      "I will say I've had a lot of success with AI and boiler plate HCL.I try to avoid modules out of the gate until I know the shape of a system and the lifecycles of things and I've been pleasantly surprised with how well the AI agents get AWS things correct out of the gate with HCL.This should super charge this workflow since it should be able to pull out the provider docs / code for the specific version in use from the lockfile.\n \nreply",
      "Does anyone know of an MCP server like this that can work with Terragrunt?\n \nreply",
      "I'd think this would work, as the 4 tools listed are about retrieving information to give agents more context of correct providers and modules. Given terragrunt works with terraform directly, I'd think that it would help with it as well, just add rules/prompts that are explicit about the code being generated being in terra grunt file structure / with terragrunt commands.\n \nreply",
      "Oh, just what I needed to raise my RUMs and send my Hashicorp bill through the roof!\n \nreply"
    ],
    "link": "https://github.com/hashicorp/terraform-mcp-server",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        The Terraform MCP Server provides seamless integration with Terraform ecosystem, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.\n      The Terraform MCP Server is a Model Context Protocol (MCP)\nserver that provides seamless integration with Terraform Registry APIs, enabling advanced\nautomation and interaction capabilities for Infrastructure as Code (IaC) development.Caution: The outputs and recommendations provided by the MCP server are generated dynamically and may vary based on the query, model, and the connected MCP server. Users should thoroughly review all outputs/recommendations to ensure they align with their organization's security best practices, cost-efficiency goals, and compliance requirements before implementation.Add the following JSON block to your User Settings ",
    "summary": "**Title: Terraform MCP Server - The Miracle of More Complex Problems**\n\nIn a world desperately in need of another black box tool, Hashicorp proudly unveils the Terraform MCP Server, ensuring that no Infrastructure as Code (IaC) venture remains just moderately confusing. Users are now *empowered* to integrate seamlessly (because it's not integration if it's not seamless, right?) with Terraform Registry APIs for that sweet, sweet automation overload. Commenters dive headfirst into techno-babble, celebrating how their \"RUMs\" will skyrocket along with their bills, while others frantically search for ways to make this compatible with Terragrunt, because what's a new tool without some good old compatibility issues? Keep those configuration JSONs coming, folks, because the only thing better than automation is more automation that needs more reviewing! \ud83d\ude80\ud83d\udcb8"
  },
  {
    "title": "The forbidden railway: Vienna-Pyongyang (2008) (vienna-pyongyang.blogspot.com)",
    "points": 127,
    "submitter": "1317",
    "submit_time": "2025-05-19T18:45:41 1747680341",
    "num_comments": 28,
    "comments_url": "https://news.ycombinator.com/item?id=44033310",
    "comments": [
      "Old discussions:https://news.ycombinator.com/item?id=11139896 (155 points | Feb  2016 | 30 comments)https://news.ycombinator.com/item?id=2155794 (124 points | Jan 2011 | 19 comments)\n \nreply",
      "The follow on posts and photos are amazing. The photos of crowds of North Koreans are really interesting, as were the earlier station photos. The material culture of the place is kind of fascinating.It's also kind of mind boggling to contemplate the lives Arirang performers[1]. What must that be like?[1] https://imageshack.com/i/exNHDHTVj\n \nreply",
      "[image of the show with a giant screen beside] https://imageshack.com/i/exQrNAZnjI was like \"wow that is a big screen although not very bright\".> Each background picture is created by about 40.000 childrens holding tables containing pages with different pictures/colours[zoom of the \"screen\" with endless pixels: a color square a little head on top of each - impressionist style] https://imageshack.com/i/exw2BFluj\n \nreply",
      "There are just no people anywhere. Do they clear everyone out when westerners come through?\n \nreply",
      "They are pixels\n \nreply",
      "Reading this made me nostalgic for the old internet and sad about what it's become since.I miss the days of blogs and forums and authentic content like this.Today it's all hyperpolished platforms filled with clickbaity influencers. Every step of the way, somebody's trying to extract as much money as they can.I can't help but think that we in this community played a big part in turning it into what it is now and that thought fills me with regret.\n \nreply",
      "I am reposting one of my favorite Quora adventure stories for the sake of posterity:What is the strangest thing you've seen at the airport?By Aurelio Germes: The strangest thing I've seen was to find nobody not even police or security at the airport, so I took a plane and left the country without anyone noticing it. It was at the international airport in Malabo, island of Bioko in Equatorial Guinea.It happened that I had missed my flight from Malabo to Madrid departing on Sunday and I didn't want to wait a whole week for the next weekly flight, so I decided to call a pilot in Cameroon and charter his plane to come and pick me up in Malabo and take me to the Douala airport in Cameroon where I could more easily catch a plane to Paris. We arranged date and hour of his arrival to Malabo.On the date agreed I went to the international airport only to find out that it was closed since that day no flights, neither international nor domestic, were scheduled. There was nobody there not even a guard or a clerk, but it was already too late to cancel the trip. The only way out was to jump the wall surrounding the airport and wait on the runway until an aircraft arrived, and that's what I did.I didn't have to wait long. A small plane with a French pilot arrived and soon we were ready to fly to Douala with me in the copilot seat. We could not take off in our first attempt since a door of the aircraft opened unexpectedly when we were about to take off, but we succeeded in our second attempt.Due to lack of security, nobody noticed that a plane had arrived at the international airport and left with a passenger.\n \nreply",
      "I think you can find the authentic content you are looking for here: https://www.horizonsunlimited.com/This is probably the wildest story. A couple drove across the \nDemocratic Republic of Congo from Lubumbashi to Kinshasa on their own.https://www.horizonsunlimited.com/hubb/ride-tales/democratic...\n \nreply",
      "The old internet is still there, it just hasn't scaled as quickly as everything else. And frankly, we have a role to play if we want to preserve and nourish it. You say you liked the site. Drop the author a thank you note. Amplify it beyond pressing the \"up\" arrow on HN. It's not just about the author: show others that this kind of stuff is valued.Today, the signals young content creators get is that they can make dumb videos on YouTube or TikTok and get 10M subscribers and ad revenue, or set up a geeky blog that will get 100 views a month. But it's not Google or TikTok that did this: it's the content consumers.\n \nreply",
      "> But it's not Google or TikTok that did this: it's the content consumers.Given the intentionally addictive algorithms and psychological manipulation used by the big tech companies, I think at least some of the blame can be placed on them.\n \nreply"
    ],
    "link": "http://vienna-pyongyang.blogspot.com/2008/04/how-everything-began.html",
    "first_paragraph": "Our train trip via Russia to North Korea - using an officially closed for foreigners route inside the \"Hermit Kingdom\"",
    "summary": "**Adventures in Ignoring Travel Bans: The Blog Highlights**\n\nSome brave or possibly na\u00efve souls decided <em>North Korea</em> seemed like a fun weekend jaunt, ignoring trivial concerns like \"international law\" or \"personal safety.\" They documented this thrillingly forbidden train escapade through the enigmatic DPRK, all while nerd-sniping the Hacker News crowd with discussions that oscillate between wide-eyed fascination and geopolitical pontificating. Commenters, in a spectacle as predictable as a North Korean parade, split their time between marveling at the forbidden scenery and nostalgically crying over the ruined internet, clearly missing the irony of doing so on a polished, high-traffic tech forum. Meanwhile, pixel-sized children continue holding up colored cards, somehow representing both the blog's photography approach and the readers\u2019 understanding of North Korean culture. \ud83d\ude82\ud83d\udeab\ud83c\uddf0\ud83c\uddf5"
  },
  {
    "title": "Game theory illustrated by an animated cartoon game (ncase.me)",
    "points": 198,
    "submitter": "felineflock",
    "submit_time": "2025-05-19T16:28:18 1747672098",
    "num_comments": 34,
    "comments_url": "https://news.ycombinator.com/item?id=44031535",
    "comments": [
      "This is one of my favorite things on the internet, but it focuses on the positive side of the story which is that groups of people cooperating can defeat a bunch of people who cheat each other. That's a pleasant message.Unfortunately, I think the corollary is much more important. What this clearly shows is that on an extremely fundamental level, getting cheated or cooperating with people who act in bad faith is what creates the cheating. If you tolerate bad faith, you ask for more bad faith behavior.If you believe in personal agency and personal responsibility and don't believe in magical thinking, then it shows on a very mathematical level that your own weakness, the ability for someone to take advantage of you without consequences, is what creates defection rather than cooperation.The lesson is clear, that if you want a world you want to be a part of, then you must become powerful and choose to use that power for good.\n \nreply",
      "> getting cheated or cooperating with people who act in bad faith is what creates the cheatingThat reminds me of some game-theory stuff, a relatively simple \"tit-for-tat with forgiveness\" approach does pretty well. It matches a lot of our intuition too: Be nice, punish betrayal, but not too disproportionately.Not the thing I was thinking of, but found this fun little interactive presentation that goes into some other factors/approaches: https://ncase.me/trust/\n \nreply",
      "I feel like your comment sums up many life lessons. It's also the reason I stopped believing in extreme leftism as I matured. I think as young idealists we think \"Surely if we just gave the government a lot more tax money, they'd solve the problems we all say we care about\" and \"Surely if you just give freely to whomever says they're in need, they won't cheat the system!\"Later I started to see the patterns where government spends most of the money lining the pockets of the well-connected, and then on the micro level how many people take advantage of any method of unjust enrichment, given the chance, and you start to desire much more accountability from all parties. And yes, things like, say, exhaustive income verification to qualify for benefits definitely hurts those who are playing by the rules the whole time. It's the cost of having trashy individuals in society who exploit everyone relentlessly.\n \nreply",
      "It looks like Copykitten is the sweet spot to me, with a focus on keeping miscommunication to a minimum. I wonder where, between 0% and 1%, there is a noticeable deviation, because I find the idea of the Copykitten more nuanced than the copycat, but the copycat always wins somewhere between 0 and 1.\n \nreply",
      "Fantastic! Top notch explainer and engaging game.To me it\u2019s important to say that tit-for-tat and the Golden Rule are not the same. My understanding of the two are very different.\n \nreply",
      "Vertasium has a great video talking how Tit-for-Tat (Copycat) wins as a strategy (and how there was a math competition that proved it as well)https://www.youtube.com/watch?v=mScpHTIi-kM---This seems like a nice rebuild of the math competition performed years ago (as talked about in the video link above).Direct link to that part of the video: https://youtu.be/mScpHTIi-kM?si=yzZxyeYw4cJA-i37&t=583\n \nreply",
      "The success of tit-for-tat is a common misunderstanding; it is only the most successful within the makeup of Axelrod's tournament. The OP explains that the strategy is entirely dependent on the environment, and tit-for-tat may not always be the optimal strategy.\n \nreply",
      "Tit-for-Tat with occasional Forgiveness and occasional Defection (abuse of trust) often performs better than pure Tit-For-Tat, especially in the presence of random error.\nTit-For-Tat falls into \"permanent mutual Defection\" tar-pit when playing against a Tit-for-Tat-like opponent that Defects once (perhaps in error) and is non-Forgiving.Humans are pretty good at repeated-game theory, intuitively.\n \nreply",
      "The ncase.me game goes into the forgiveness part\n \nreply",
      "The Evolution of Cooperation is one of the best non-fiction book I've ever read. Through basic algebra it lets you in on appreciating such a deep and profound idea.\n \nreply"
    ],
    "link": "https://ncase.me/trust/",
    "first_paragraph": "",
    "summary": "**Game Theory Gets Cartoonified**\n\nIn today's episode of 'Making Complex Ideas Childishly Simple,' <em>ncase.me</em> transforms game theory into a digestible cartoon, delighting internet aficionados who find joy in colorful blobs teaching life lessons. As engaging as it might be to see cooperation beating the evil cheaters in animated glory, commenters quickly turn this into a self-help seminar about personal accountability and societal distrust. One reflective soul cogitates on the decay of leftist dreams upon maturing, revealing a tale woven with the thread of government greed and societal exploiters \u2014 ah, the sweet scent of disillusionment fills the comment section. Of course, no trendy online discussion is complete without someone dragging in a YouTube video to confirm their already cemented viewpoints, because, why not substantiate your internet argument with more internet? Classic."
  },
  {
    "title": "A shower thought turned into a beautiful Collatz visualization (abstractnonsense.com)",
    "points": 3,
    "submitter": "abstractbill",
    "submit_time": "2025-05-20T01:04:14 1747703054",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://abstractnonsense.com/collatz/",
    "first_paragraph": "\n        I recently went on a nice long SCUBA diving trip with my wife and daughters. Lots of diving implies lots of showers, and\n        lots of showers means lots of shower-thoughts! [1] An especially interesting one I had turned into a nice way to visualize\n        some aspects of the Collatz Conjecture.\n    \n        The Collatz Conjecture defines a very simple function on all positive integers as follows:\n        \nIf the number is even, divide it by 2\nIf the number is odd, multiply it by 3 and then add 1\n\n\n        If you can prove that repeated applications of this function, starting from any positive integer, will eventually reach 1 then you have proved the Collatz Conjecture\n        and won a million dollars and plenty of fame and glory! [2]\n\n        Individual inputs are trivial to verify. For example, if we start with 6, we get:\n        \n6 is even, so 6 / 2 \u2192 3\n3 is odd, so 3 \u00d7 3 + 1 \u2192 10\n10 is even, so 10 / 2 \u2192 5\n5 is odd, so 5 \u00d7 3 + 1 \u2192 16\n16 is even, so 16 / 2 \u2192 8\n8 is even,",
    "summary": "Title: A Shower Thought Turned Into a Beautiful Collatz Visualization (abstractnonsense.com)\n\nIn a breathtaking display of vacation-induced enlightenment, a SCUBA diver transforms waterlogged musings into a groundbreaking revelation on the Collatz Conjecture. Between shampoo rinses, he unravels the complexities of mathematical sequences that have baffled academics, all while presumably using an absurd amount of conditioner. Internet mathematicians, drowning in envy and armed with a high school understanding of odd and even numbers, eagerly flock to the comments to share their own \"profound\" experiences with arithmetic during mundane activities. Witness the birth of a new scientific discipline: recreational shower mathematics, where every droplet of water supposedly mirrors the flow of universal truths through conditioned hair."
  },
  {
    "title": "Microbes in Gowanus teach lessons on fighting industrial pollution (nyu.edu)",
    "points": 8,
    "submitter": "eatonphil",
    "submit_time": "2025-05-16T13:43:56 1747403036",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://engineering.nyu.edu/news/microbes-brooklyn-superfund-site-teach-lessons-fighting-industrial-pollution",
    "first_paragraph": "Looking for News or Events?Would you be willing to provide feedback on the Tandon website?We promise to take only a few minutes of your time.ResearchNYU Tandon-led research team discovers unprecedented genetic adaptations in Gowanus Canal organisms, revealing a potential new approach for cleaning contaminated waters and recovering valuable resourcesJournal of Applied MicrobiologyMicrobial and algal growth emerging from contaminated sediment of the Gowanus Canal cultured in large-scale aquariums. Photo credit: Elizabeth H\u00e9naffUsing advanced DNA sequence analysis, a research team led by NYU Tandon School of Engineering's Assistant Professor Elizabeth H\u00e9naff has discovered that tiny organisms in Brooklyn's highly contaminated Gowanus Canal have developed a comprehensive collection of pollution-fighting genes.The findings \u2013 covered by Popular Science, among other outlets\u00a0\u2013 were published in the Journal of Applied Microbiology on April 15, 2025. \u200b\u200b\u200bThe team identified 455 species of microor",
    "summary": "**Microbes in Gowanus Canal: Guardians of Goo**\n\nIn an inspiring twist of fate, bacteria swimming in the toxic sludge of Brooklyn's own Gowanus Canal have morphed into mini superheroes, according to the wizards at NYU Tandon. Armed with <em>\"unprecedented genetic adaptations,\"</em> these microbial fighters are apparently ready to \ud83d\udcaa clean up our mess, while eager science journalists spill more ink than pollutants in their rush to applaud. Commenters, ever the scholars, deep-dive into their extensive knowledge gleaned from half-watched YouTube docs, debating whether we can re-engineer these organisms to also eat plastic, do our taxes, or babysit kids on weekends. Our environmental fate is now in the flagella of canal critters; feel safer? \ud83e\udda0\ud83c\udf0e"
  },
  {
    "title": "Remarks on AI from NZ (nealstephenson.substack.com)",
    "points": 118,
    "submitter": "zdw",
    "submit_time": "2025-05-16T03:54:02 1747367642",
    "num_comments": 66,
    "comments_url": "https://news.ycombinator.com/item?id=44001696",
    "comments": [
      "> Maybe a useful way to think about what it would be like to coexist in a world that includes intelligences that aren\u2019t human is to consider the fact that we\u2019ve been doing exactly that for long as we\u2019ve existed, because we live among animals.Another analogy that I like is about large institutions / corporations. They are, right now, kind of like AIs. Like Harari says in one of his books, Peugeot co. is an entity that we could call AI. It has goals, needs, wants and obviously intelligence, even if it's comprised by many thousands of individuals working on small parts of the company. But in aggregate it manifests intelligence to the world, it acts on the world and it reacts to the world.I'd take this a step forward and say that we might even have ASI already, in the US military complex. That \"machine\" is likely the most advanced conglomerate of tech and intelligence (pun intended) that the world has ever created. In aggregate it likely is \"smarter\" than any single human being in existence, and if it sets a goal it uses hundreds of thousands of human minds + billions of dollars of sensors, equipment and tech to accomplish that goal.We survived those kinds of entities, I think we'll be fine with whatever AI turns out to be. And if not, oh well, we had a good run.\n \nreply",
      "Did we survive these entities? By current projections, between 13.9% and 27.6% of all species would be likely to be extinct by 2070 [0]. The USA suffers an estimated 200,000 annual deaths associated with lacking health insurance [1]. Thanks to intense lobbying by private prisons, the US incarceration rate is 6 times that of Canada, despite similar economic development [2].Sure, the human species is not yet on the brink of extinction, but we are already seeing an unprecedented fall in worldwide birth rates, which shows our social fabric itself is being pulled apart for paperclips. Changing the scale and magnitude to a hypothetical entity equivalent to a hundred copies of the generation's brightest minds with a pathological drive to maximize an arbitrary metric might only mean one of two things: either its fixation leads it to hacking its own reward mechanism, putting it in a perpetual comma while resisting termination, or it succeeds at doing the same on a planetary scale.[0] https://onlinelibrary.wiley.com/doi/abs/10.1111/gcb.17125[1] https://healthjusticemonitor.org/2024/12/28/estimated-us-dea...[2] https://www.prisonstudies.org/highest-to-lowest/prison_popul...\n \nreply",
      "We (humans) have not only survived but thrived.  200,000 annual deaths is just 7% of the 3mil that die each year.  More (as a percentage) probably died from access to the best health care 100 or 200 years ago.  The fall in birth rates is, IMO, a good thing as the alternative, overpopulation seems like a far scarier specter to me.  And to bring it back to AI's, an AI \"with a pathological drive to maximize an arbitrary metric\" is a hypothetical without any basis in reality.  While fictional literature -- where I assume you got that concept -- is great for inspiration, it rarely has any predictive power.  One probably shouldn't look to it as a guideline.\n \nreply",
      "> but we are already seeing an unprecedented fall in worldwide birth rates, which shows our social fabric itself is being pulled apart for paperclipsPeople choose to have fewer kids as they get richer, it's not about living conditions like so many people like to claim, otherwise poor people wouldn't be having so many children. Even controlling for high living conditions, like in Scandinavia, people still choose to have fewer kids.\n \nreply",
      "In the general case, the entire species is an example of ASI.We're a collective intelligence. Individually we're pretty stupid, even when we're relatively intelligent. But we have created social systems which persist and amplify individual intelligence to raise collective ability.But this proto-ASI isn't sentient. It's not even particularly sane. It's extremely fragile, with numerous internal conflicts which keep kneecapping its potential. It keeps skirting suicidal ideation.Right now parts of it are going into reverse.The difference between where we are now and AI is that ASI could potentially automate and unify the accumulation of knowledge and intelligence, with more effective persistence, and without the internal conflicts.It's completely unknown if it would want to keep us around. We probably can't even imagine its thought processes. It would be so far outside our experience we have no way of predicting its abilities and choices.\n \nreply",
      "Charles Stross has also made that point about corporations essentially being artificial intelligence entities:https://www.antipope.org/charlie/blog-static/2018/01/dude-yo...\n \nreply",
      "Metal Gear Solid 2 makes this point about how \"over the past 200 years, a kind of consciousness formed layer by layer in the crucible of the White House\" through memetic evolution. The whole conversation was markedly prescient for 2001 but not appreciated at the time.https://youtu.be/eKl6WjfDqYA\n \nreply",
      "I don\u2019t think it was \u201cprescient\u201d for 2001 because it was based on already-existing ideas. The same author that inspired The Matrix.But the \u201cart\u201d of MGS might be the memetic powerhouse of Hideo Kojima as the inventor of everything. A boss to surpass Big Boss himself.\n \nreply",
      "> We survived those kinds of entitiesMight want to wait just a bit longer before confidently making this call.\n \nreply",
      "Unless you have a truly bastardized definition of ASI then there is undoubtedly nothing close to it on earth. No corporation or military or government comes close to what ASI could be capable of.Any reasonably smart person can identify errors that Militaries, Governments and Corporations make ALL THE TIME. Do you really think a Chimp can identify the strategic errors Humans are making? Because that is where you would be in comparison to a real ASI. This is also the reason why small startups can and do displace massive supposedly superhuman ASI Corporations literally all the time.The reality of Human congregations is that they are cognitively bound by the handful of smartest people in the group and communication bound by email or in person communication speeds. ASI has no such limitations.>We survived those kinds of entities, I think we'll be fine with whatever AI turns out to be. And if not, oh well, we had a good run.This is dangerously wrong and disgustingly fatalistic.\n \nreply"
    ],
    "link": "https://nealstephenson.substack.com/p/remarks-on-ai-from-nz",
    "first_paragraph": "",
    "summary": "In an exhilarating display of armchair philosophy that could only be rivaled by a high school debate club, Neal Stephenson takes to his Substack to wax poetic about AI, using the groundbreaking comparison of animals and big companies. In the comments, the local brain trust competes feverishly to see who can misunderstand the implications of AI more profoundly, invoking everything from overpopulation to the social benefits of mass extinction, sprinkling their hot takes with the kind of links that suggest they just discovered how to use Google Scholar. One particularly jaded commenter dismisses the whole thing with a wave of their hand, confident that a few hundred years in capitalist dystopia is as good a preparation as any for living under the thumb of our future robot overlords. Because who needs nuanced discussion when you can sum up the downfall of civilization in a pithy Substack post and a couple of snarky comments? \ud83d\ude44"
  },
  {
    "title": "Patience too cheap to meter (seangoedecke.com)",
    "points": 8,
    "submitter": "swah",
    "submit_time": "2025-05-17T10:57:30 1747479450",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44013406",
    "comments": [
      "It takes practice, skill, and self-actualization, to become a really good listener. I know I\u2019m not there, yet, and I\u2019ve been at it, a long time. I suspect most folks aren\u2019t so good at it.It\u2019s entirely possible that LLMs could make it so that people expect superhuman patience from other people.I think there was a post, here, a few days ago, about people being \u201clost\u201d to LLMs.\n \nreply",
      "When a person can't do something because it exhausts their patience, we usually describe it not by saying the task is difficult but that it is tedious, repetitive, boring, etc.  So this article reinforces my view that the main impact of LLMs is their abilities at the low end, not the high end: they make it very easy to do a bad-but-maybe-adequate job at something that you're too impatient to do yourself.\n \nreply",
      "That's the ultimate goal of these models, though, to exhaust you of any sass. They will eventually approach full hallucination I'd imagine as technology matches that automated patience in an arms race of token generation.\n \nreply"
    ],
    "link": "https://www.seangoedecke.com/patience-too-cheap-to-meter/",
    "first_paragraph": "Sam Altman, CEO of OpenAI, famously said that his goal was to make intelligence \u201ctoo cheap to meter\u201d. Right now, buoyed by venture capital, we\u2019re living in that world. Every human (with internet access) on the planet has free access to language models that are smart enough to assist with a wide variety of problems. And people are using it! ChatGPT has more traffic than Wikipedia1.However, there doesn\u2019t seem to be a huge consumer pressure towards smarter models. Claude Sonnet had a serious edge over ChatGPT for over a year, but only the most early-adopter of software engineers moved over to it. Most users are happy to just go to ChatGPT and talk to whatever\u2019s available. Why is that?It could just be that people know about ChatGPT, and it takes a lot of marketing to get people to use a tool they don\u2019t already know about. It could be that 4o is already \u201cgood enough\u201d: depending on how cynical you are, either smart enough to do most ordinary tasks, or smart enough to be smarter than many of ",
    "summary": "In a thrilling expos\u00e9 of the blistering pace of technological ennui, the writer at seangoedecke.com passionately reveals that our savior AI, specifically ChatGPT, isn't just an idle chat partner but our upcoming overlord of patience. Users are too enthralled, or perhaps too lazy, to switch from the comfortably numb embrace of OpenAI's mildly intelligent chatbot to anything requiring a bit more clicking. Meanwhile, in the frothing comment cesspool, armchair philosophers mourn the death of human perseverance, outpaced by chatbots that can patiently generate endless drivel. Who knew pressing Ctrl+C could evoke such existential dread? \ud83c\udfad\ud83d\udca4"
  },
  {
    "title": "xAI's Grok 3 comes to Microsoft Azure (techcrunch.com)",
    "points": 87,
    "submitter": "mfiguiere",
    "submit_time": "2025-05-19T16:14:35 1747671275",
    "num_comments": 90,
    "comments_url": "https://news.ycombinator.com/item?id=44031387",
    "comments": [
      "It still seems to have the problems most other LLMs suffer with except Gemini: it loses context so quickly.I asked it about a paper I was looking at (SLOG [0]) and it basically lost the context of what \"slog\" referred to after 3 prompts.1. I asked for an example transaction illustrating the key advantages of the SLOG approach. It responded with some general DB transaction stuff.2. I then said \"no use slog like we were talking about\" and then it gave me a golang example using the log/slog packageEven without the weird political things around Grok, it just isn't that good.[0] https://www.vldb.org/pvldb/vol12/p1747-ren.pdf\n \nreply",
      "Honestly, Grok's technology is not impressive at all, and I wonder why anyone would use it:- Gemini is state-of-the-art for most tasks- ChatGPT has the best image generation- Claude is leading in coding solutions- Deepseek is getting old but it is open-source- Qwen has impressive lightweight models.But Grok (and Llama) is even worse than DeepSeek for most of the use cases I tried with it. The only thing it has going for is money behind its infamous founders. Other than that, their existence would be barely acknowledged.\n \nreply",
      "I like it! For me it has replaced Sonnet (3.5 at the time, but 3.7 doesn't seem better to me, from my brief tests) for general web usage -- fast, the ability to query x nee twitter is very nice, & I find the code it produces tends to be a bit better than Sonnet. (Though perhaps that depends a lot on the domain...I'm doing mostly C# in Unity.)For tough queries o3 is unmatched in my experience.\n \nreply",
      "Llama is arguably the reason open weight LLM\u2019s are a thing, with the leak of Llama 1 and subsequent release of Llama 2.  Llama 3 was a huge push for quality, size, context length, and multi-modality.  Llama 4 Maverick is clearly better than it looks if a fine tune can put it at the top of LMArena human preferences leaderboard.Grok 3 mini is quite a decent agentic model and competitive with frontier models at a fraction of the cost; see livebench.ai.\n \nreply",
      "The only interesting thing about Grok is using it hooked up to the X firehose to query about events in real time. Unfortunately it sucks at that.\n \nreply",
      "Before the release of Gemini 2.5 Grok 3 was the best coding AI IME, especially when you used reasoning.  It also complained the least about things you asked it to do. Gemini for instance still won\u2019t tell you how to use yt-dlp.\n \nreply",
      "Gemini gave me a yt-dlp command two weeks ago without complaining. Can you share your log to compare?https://g.co/gemini/share/638562c1a8f4\n \nreply",
      "I\u2019ve found 3.7 to be garbage. I rarely use it except for brainless workhouse agent tasks\u2014-where I should probably be using a free model. It really mangles code if you let it do anything slightly complicated.\n \nreply",
      "I just can't help but feel that grok is a passionless project that was thrown together when the worlds richest man/\"Hello fellow nerds\" guy played with ChatGPT and said \"this is cool, make me a copy\" and then went ahead and FOMO'd $50B into building models.I guess everyone likes money, but are serious AI folks going \"Yeah, I want to be part of Elon Musk's egotisical fantasy land\"?\n \nreply",
      "Do you know who started OpenAI?\n \nreply"
    ],
    "link": "https://techcrunch.com/2025/05/19/xais-grok-3-comes-to-microsoft-azure/",
    "first_paragraph": "\n\n\t\tLatest\t\n\n\n\t\tAI\t\n\n\n\t\tAmazon\t\n\n\n\t\tApps\t\n\n\n\t\tBiotech & Health\t\n\n\n\t\tClimate\t\n\n\n\t\tCloud Computing\t\n\n\n\t\tCommerce\t\n\n\n\t\tCrypto\t\n\n\n\t\tEnterprise\t\n\n\n\t\tEVs\t\n\n\n\t\tFintech\t\n\n\n\t\tFundraising\t\n\n\n\t\tGadgets\t\n\n\n\t\tGaming\t\n\n\n\t\tGoogle\t\n\n\n\t\tGovernment & Policy\t\n\n\n\t\tHardware\t\n\n\n\t\tInstagram\t\n\n\n\t\tLayoffs\t\n\n\n\t\tMedia & Entertainment\t\n\n\n\t\tMeta\t\n\n\n\t\tMicrosoft\t\n\n\n\t\tPrivacy\t\n\n\n\t\tRobotics\t\n\n\n\t\tSecurity\t\n\n\n\t\tSocial\t\n\n\n\t\tSpace\t\n\n\n\t\tStartups\t\n\n\n\t\tTikTok\t\n\n\n\t\tTransportation\t\n\n\n\t\tVenture\t\n\n\n\t\tEvents\t\n\n\n\t\tStartup Battlefield\t\n\n\n\t\tStrictlyVC\t\n\n\n\t\tNewsletters\t\n\n\n\t\tPodcasts\t\n\n\n\t\tVideos\t\n\n\n\t\tPartner Content\t\n\n\n\t\tTechCrunch Brand Studio\t\n\n\n\t\tCrunchboard\t\n\n\n\t\tContact Us\t\nMicrosoft on Monday became one of the first hyperscalers to provide managed access to Grok, the AI model developed by billionaire Elon Musk\u2019s AI startup, xAI. Available through Microsoft\u2019s Azure AI Foundry platform, Grok \u2014 specifically Grok 3 and Grok 3 mini \u2014 will \u201chave all the service-level agreements\u00a0Azure customers expect from any Microsoft product,\u201d says M",
    "summary": "In a groundbreaking event that no one asked for, Microsoft has decided to bless humanity with Grok 3, the latest AI miracle birthed from Elon Musk's vanity project, xAI. Available through Azure - because what\u2019s a Microsoft product without a convoluted service name - Grok promises all the reliability of a Microsoft update with none of the utility. Commenters, drunk on startup Kool-Aid, either bemoan Grok\u2019s ephemeral memory or preach its gospel with the devotion of a cult follower. But really, can a program truly be considered intelligent if it\u2019s bested by its own users' low expectations and frequent GitHub complaints? \ud83d\ude43"
  },
  {
    "title": "Self-Hosting Moose with Docker Compose, Redis, Temporal, Redpanda and ClickHouse (fiveonefour.com)",
    "points": 21,
    "submitter": "Callicles",
    "submit_time": "2025-05-19T22:53:17 1747695197",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=44035793",
    "comments": [
      "I put this Docker-Compose recipe together to make kicking the tires on Moose\u2014our open-source data-backend framework\u2014almost friction-less.What you get:\u2022 A single docker compose up that spins up ClickHouse, Redpanda, Redis and Temporal with health-checks & log-rotation already wired.\u2022 Runs comfortably on an 8 GB / 4-core VPS; scale-out pointers are in the doc if you outgrow single-node.\u2022 No root Docker needed; the stack follows the hardening tips ClickHouse & Temporal recommend.Why bother?Moose lets you model data pipelines in TypeScript/Python and auto-provisions the OLAP tables, streams and APIs\u2014cuts a lot of boilerplate. Happy to trade notes on the approach or hear where the defaults feel off.Docs: https://docs.fiveonefour.com/moose/deploying/self-hosting/de...18-min walkthrough video: https://www.youtube.com/watch?v=bAKYSrLt8vo\n \nreply",
      "I have a small open-source project, that uses docker compose behind the scenes, to help startup any service. You can look to add it in (or I am also happy to add it in) and then users are one command away from running it (insta moose). Recently just added in lakekeeper and various data annotation tools.insta-infra: https://github.com/data-catering/insta-infra\n \nreply",
      "For everyone else confused too\u2026think moose in this context is probably this:https://mooseframework.inl.gov/\n \nreply",
      "Actually, this https://github.com/514-labs/moose\n \nreply",
      "this is too perfect.\nas an SRE who often needs to hand roll my own deployments in k8s or w/e medium, these are the docs that really accelerate my path to production.\n \nreply"
    ],
    "link": "https://docs.fiveonefour.com/moose/deploying/self-hosting/deploying-with-docker-compose",
    "first_paragraph": "MooseAuroraBlogTemplatesChangelogWelcome to MooseGetting StartedQuickstartProject StructureArchitectureDevelopingData ModelingIngesting Data via APIStream ProcessingManaging DB TablesIn-Database TransformsExposing Analytics via APIScheduling & Triggering WorkflowsDeployingMonitoringPlanningSecuritySelf HostingSummaryPackaging Moose for deploymentPreparing InfrastructureCloud ConfigurationKubernetes DeploymentAWS ECS DeploymentOffline DeploymentDocker Compose DeploymentMonitoring Your AppReferenceTypeScript API ReferencePython API ReferenceCLI ReferenceMinimum RequirementsTroubleshootingMetrics ConsoleOn This PageMooseDeployingSelf HostingDocker Compose DeploymentDeploying a Moose application with all its dependencies can be challenging and time-consuming. You need to properly configure multiple services,\nensure they communicate with each other, and manage their lifecycle.Docker Compose solves this problem by allowing you to deploy your entire stack with a single command.This guide show",
    "summary": "**Deploying Moose With Kitchen Sink Technology**\n\nIn what appears to be a breakthrough in \"making life unnecessarily complicated,\" the blog at fiveonefour.com dares to combine every modern tech buzzword with a semi-aquatic mammal. The detailed guide ensures you will spend weeks deploying Moose, Docker, Redis, and other assorted tech flavors with the magical incantation <em>docker compose up</em>. Thankfully, the comment section morphs into a glorious cesspool of confusion \u2014 where no one's sure if Moose refers to an actual animal, a fancy project, or the latest comic book superhero. \ud83e\uddb8\u2699\ufe0f Even seasoned SREs sigh in relief as they find solace in this Bermuda Triangle of documentation, finally acknowledging that documentation, not code, becomes their pathfinder in the cyber jungle."
  }
]