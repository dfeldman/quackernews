[
  {
    "title": "Phased Array Microphone (2023) (benwang.dev)",
    "points": 348,
    "submitter": "bglazer",
    "submit_time": "2024-11-22T17:10:44 1732295444",
    "num_comments": 128,
    "comments_url": "https://news.ycombinator.com/item?id=42215552",
    "comments": [
      "\"As part of the calibration, the speed of sound is also a parameter which is optimized to obtain the best model of the system, which allows this whole procedure to act as a ridiculously overengineered thermometer.\"Reminds me of the electronics adage: \"all sensors are temperature sensors, some measure other things as well.\"\n \nreply",
      "Back in high school, I built (with some parental assistance) an apparatus to measure how quickly the pressure would drop (in a pressurized cylinder) when a very small hole allowed air to leak out.Turns out, not only can you measure temperature that way, but can extrapolate the graph out to find absolute zero (IIRC my result was out by about 20 kelvin, which I think is pretty damn good for a high-school-garage project).\n \nreply",
      "I love these kind of inadvertent measurements. One of my favorite examples is that a sufficiently accurate IMU can get you relatively accurate longitude measurements from the Coriolis effect.\n \nreply",
      "Asahi Linux (and likely MacOS too) uses the resistance of the speakers coils to detect overheating of same speakers and reduces volume.\n \nreply",
      "https://github.com/AsahiLinux/speakersafetyd\n \nreply",
      "Interesting.  If the voltage across the speaker voice coil can be sampled with enough sensitivity at a fast-enough rate, you have an undocumented microphone.\n \nreply",
      "This is true of all speakers\n \nreply",
      "Is that the same thing where a flat-earther tried to measure something with an expensive laser gyro and kept finding that Earth was rotating?\n \nreply",
      "I think the most you can tell from an IMU or gyro is that there is a change in velocity in a direction aligning with East-West when there is a change in location and that the change in velocity is greater when the location changes in line with North-South. The change in velocity would be greater as one approaches the poles and lesser at the equator.Thought experiment: if I zeroed my IMU at the North pole and traveled in a straight line away from the pole along longitude zero, following the guidance of the IMU. By the time I got to 45\u00b0 latitude I\u2019d be traveling Westward at 1,180 kph (.95 Mach) to keep the IMU at zero.\n \nreply",
      "The flat earther used a fibre optic gyro. You don't \"zero\" it, it continuously outputs a measurement of its own angular rate around it's sensitive axis. For a 3-axis gyro placed still on earth, it will read about 15 degree/hour around wherever the axis of earth is oriented.\n \nreply"
    ],
    "link": "https://benwang.dev/2023/02/26/Phased-Array-Microphone.html",
    "first_paragraph": "A 192-channel phased array microphone, with FPGA data acquisition and beamforming/visualization on the GPU.\nPhased arrays allow for applications not possible with traditional directional microphones, as the directionality\ncan be changed instantly, after the recording is made, or even be focused at hundreds of thousands of points \nsimultaneously in real time.All designs are open source: Block diagram  Glamor shot To create a phased array microphone, a large number of microphones needs to be placed in an arrangement with\n a wide distribution of spacing. For a linear array, exponential spacing between microphones is found to be optimal for\n broadband signals. To create a 2d array, these symmetrical linear arrays (\u201carms\u201d) are be placed radially, which allows\nthe central (\u201chub\u201d) board to be compact. The total cost for the array is approximately $700.The length of each arm is dictated by the limits of PCB manufacturing and assembly. These boards were made at JLCPCB,\nwhere the maximum length ",
    "summary": "In an epic triumph of over-engineering, a hero amidst us mortals has conceived a 192-channel phased array microphone that not only captures voices but also measures atmospheric pressure, simulates hurricane paths, and inadvertently calibrates your kitchen scales. The geeky army on the forums is competing for the \"most unnecessary application\" award, proposing that this magnificent device could, indeed, redefine your understanding of overkill. One enlightened soul recalls their high school science fair project, likely triggering a nostalgia-induced epiphany about their misplaced career in acoustics engineering. Meanwhile, others enthusiastically misuse scientific instruments to probe into flat-earth theories and misread room temperatures\u2014a perfect example of why you should never use a chainsaw to peel an orange. \ud83e\udd13\ud83c\udfa4"
  },
  {
    "title": "MaXX Interactive Desktop -- the little brother of the great SGI Desktop on IRIX (maxxinteractive.com)",
    "points": 23,
    "submitter": "gjvc",
    "submit_time": "2024-11-22T23:21:18 1732317678",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=42218184",
    "comments": [
      "This is actually nice. Desktops were much less annoying back in the day.\n \nreply",
      "Well, they didn't serve you ads on the start menu...\n \nreply",
      "The name makes me think of Holomaxx Technologies (styled as holoMaXx technologies), the vanity DBA of one Ilarion Bilynsky, also known as SsZERO. SsZERO was a squirrely guy with an interesting USENET presence in the late nineties. At first he was a bit like the later Imari Stevenson: a spoiled, videogame-obsessed teenager whose confidence far exceeded his competence. He promised the Holomaxx Ultimate Video Game Project or UVGP, a kickass game console that would beat all others and even feature AGI, to everyone on rec.games.programmer and several other newsgroups, and became quite truculent, to the point of rudeness, when actual game devs replied with constructive criticism. He accused them all of \"thinking linearly\", as opposed to his own \"dimensional thinking\". This was a TimeCube-like epistemology of Ilarion's creation, under which a circle can be a straight line at the same time, if you rotate it by 90 degrees, given by 90(n) so 90(45) would be a line at a 45-degree angle, that still had the properties of the original circle. It was also critical to how the UVGP worked, as it would possess \"dimensional logic\" and a \"dimensional information crossover\" or DFX. If you note that \"information\" begins with I and not with F, well, you're just not thinking dimensionally my friend.Needless to say the UVGP never came to fruition, or else it exists in a higher dimension us linear thinkers just can't comprehend. Ilarion would then pivot Holomaxx into a reseller of computer and audiophile parts (thousand-dollar speaker wires and the like), as well as a bespoke web development company (I think they claimed Kazaa as a client). They are most famous, however, for unsuccessfully suing Microsoft and Yahoo! because the spam filters at those two providers filtered out correspondence originating from Holomaxx as spam.I don't know where I'm going with this except to say that until I dived in and checked out the authorship, I wondered if Ilarion were involved with this desktop project. It sounds like the sort of thing he might get involved with, especially since SGI was synonymous with \"kickass computing power\" among gamers in the 90s. Thanks for the trip down 90s USENET memory lane, MaXX Desktop!\n \nreply",
      "It's a shame that it's not (visibly) open source. There's so much that could be done at this point. The shambling corpse of SGI is dead enough that anything left of their legal department must be absolutely destroyed.\n \nreply",
      "<< All the legacy code is under the SGI Special License Agreement and not available. Binaries are available as FREE-WARE for Linux (intel) platform. However we are in the process of changing the license to BSD 3-Clause, but it is complicated.All new code under the MaXX Interactive Desktop Project is under a BSD 3-Clause License and is available at https://gitlab.com/maxxdesktop>>Read more here:https://docs.maxxinteractive.com/books/licensing/page/sgi-sp...\n \nreply"
    ],
    "link": "https://docs.maxxinteractive.com/",
    "first_paragraph": "",
    "summary": "<strong>MaXX Interactive Desktop: Nostalgia or Desperation?</strong> In a desperate attempt to revive the glory days, a website touts the reincarnation of the SGI desktop, now squeezed into something called the <em>MaXX Interactive Desktop</em>. Commenters, in a hypnotic spell of nostalgia, wax poetic about \"the good old days\" without ads and corporate overreach, somehow implying this desktop miracle is the savior they've all been waiting for. Meanwhile, someone dips into a bizarre historical dive about Holomaxx Technologies, adding unnecessary confusion and conspiracy to an already convoluted topic. The grand irony? It's not even fully open source yet. But don't worry, amidst rants about licensing and legacy code, everyone's enjoying their trip down tech's memory lane\u2014except, perhaps, those of us living in 2023."
  },
  {
    "title": "RGFW: Single-header C99 window abstraction library (github.com/colleagueriley)",
    "points": 53,
    "submitter": "klaussilveira",
    "submit_time": "2024-11-22T21:31:51 1732311111",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=42217535",
    "comments": [
      "I love single header libraries and I like the idea here of taking care of one necessity well. It seems like good modularity all around.A quick heads up, the micro UI emscripten example doesn't work on chrome or firefox. The error is: DrawElements doesn't actually prepareClientAttributes properly.\n \nreply",
      "Thanks :)\n \nreply"
    ],
    "link": "https://github.com/ColleagueRiley/RGFW",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A cross platform lightweight single-header simple-to-use window abstraction library for creating graphical programs or libraries.\n      \n\nA cross-platform lightweight single-header very simple-to-use window abstraction library for creating graphics Libraries or simple graphical programs. Written in pure C99.RGFW is a free multi-platform single-header very simple-to-use window abstraction framework for creating graphics Libraries or simple graphical programs. it is meant to be used as a very small and flexible alternative library to GLFW.The window backend supports XLib (UNIX), Cocoas (MacOS), webASM (emscripten) and WinAPI (tested on windows XP, 10 and 11, and reactOS)\nWindows 95 & 98 have also been tested with RGFW, although results are iffyWayland: to compile wayland add (RGFW_WAYLAND=1). Wayland support is very experimental and b",
    "summary": "\ud83d\ude44 Another day, another \"revolutionary\" single-header library proudly paraded by a modern-day keyboard warrior on GitHub. RGFW: because why use established, well-tested libraries when you can sprinkle your project with some experimental, might-explode-in-your-face code instead? Naturally, the adoring GitHub crowd laps it up, with praise like \"I love single header libraries,\" showcasing the ever-popular coding philosophy of *evaluating software based solely on line count*. Meanwhile, a brave soul who actually tries to use it finds that\u2014surprise, surprise\u2014it doesn't work on Chrome or Firefox. But worry not, a \"Thanks :)\" is all the support you'll get. Future-proof, clearly! \ud83d\ude80\ud83d\udc40"
  },
  {
    "title": "Show HN: A Marble Madness-inspired WebGL game we built for Netlify (5-million-devs.netlify.com)",
    "points": 430,
    "submitter": "franck",
    "submit_time": "2024-11-22T10:31:56 1732271516",
    "num_comments": 181,
    "comments_url": "https://news.ycombinator.com/item?id=42212644",
    "comments": [
      "Nice! My favorite challenge was avoiding the glowing white dots along the path.\n \nreply",
      "Yeah, they really should be some kind of powerup so you're incentivized to hit them.Right now learning about the company feels like a penalty which I doubt was the intent.Also for anyone who hits a dot and is confused how to get out of the information screen - you just press the arrows.  I tried escape and clicking for longer than I would care to admit before I realized this.Super cool idea though.\n \nreply",
      "Should we be learning about the product or the company? Only one seems valuable, no?\n \nreply",
      "It's really commendable these guys focused on making a fun game. The glowing dots are easy to avoid and even the story they tell is not intrusive. It's an understandable compromise!\n \nreply",
      "I also went for 0% speedrun challenge.\n \nreply",
      "This game is way better than it needs to be for a quick burst of advertising. Not only is the implementation fantastic, with perfect controls, but the level design is also great. I really enjoyed the multiple routes and the fact you can skip most of the advertising displays.It seems such a shame that this isn't a full game. Removing the advertising and adding more complex levels with puzzles would make for a perfect little distraction.\n \nreply",
      "I did spot one control bug, which is that if you start holding down a key while/before spawning in, it won't register.\n \nreply",
      "> Not only is the implementation fantastic, with perfect controls, but the level design is also great.I was surprised how well the WASD controls worked. Perfectly intuitive.\n \nreply",
      "I'm one of the developers who worked on this project. Happy to answer any questions.More info on the project here: https://www.littleworkshop.fr/projects/5milliondevs/\n \nreply",
      "Great work, it really captures the feeling of Marble Madness. Its maybe to deep of a thought, but I really fancy the spin of the marble, something that the original was not conveying as fancy as your version does.\n \nreply"
    ],
    "link": "https://5-million-devs.netlify.com/",
    "first_paragraph": "",
    "summary": "In a **daring** fusion of nostalgia and thinly-veiled marketing, a band of intrepid developers has unleashed a WebGL game on Netlify, sure to distract the platform's five million devs from their regular scheduled-yawn programming. Inspired by Marble Madness, but equipped with a <i>revolutionary feature</i>: glowing dots that ambush players with company info, turning a quaint game into a bizarre corporate trivia challenge. Commenters are torn between admiring the game's mechanics and mourning their forced education about Netlify's wonders. One daring soul attempted a '0% speedrun challenge', blatantly refusing to learn anything, symbolizing the silent cry of developers everywhere entrapped by the unexpected onslaught of corporate enlightenment. \ud83d\ude02\ud83d\ude2d"
  },
  {
    "title": "Understanding Google's Quantum Error Correction Breakthrough (quantum-machines.co)",
    "points": 95,
    "submitter": "GavCo",
    "submit_time": "2024-11-22T17:53:29 1732298009",
    "num_comments": 56,
    "comments_url": "https://news.ycombinator.com/item?id=42215910",
    "comments": [
      "Is this an actually good explanation? The introduction immediately made me pause:> In classical computers, error-resistant memory is achieved by duplicating bits to detect and correct errors. A method called majority voting is often used, where multiple copies of a bit are compared, and the majority value is taken as the correct bitNo in classical computers memory is corrected for using error correction not duplicating bits and majority voting. Duplicating bits would be a very wasteful strategy if you can add significantly fewer bits and achieve the same result which is what you get with error correction techniques like ECC. Maybe they got it confused with logic circuits where there\u2019s not any more efficient strategy?\n \nreply",
      "Physicist here. Classical error correction may not always be a straight up repetition code, but the concept of redundancy of information still applies (like parity checks).In a nutshell, in quantum error correction you cannot use redundancy because of the no-cloning theorem, so instead you embed the qubit subspace in a larger space (using more qubits) such that when correctable errors happen the embedded subspace moves to a different \"location\" in the larger space. When this happens it can be detected and the subspace can be brought back without affecting the states within the subspace, so the quantum information is preserved.\n \nreply",
      "While you are correct, here is a fun side fact.The electric signals inside a (classical) processor or digital logic chip are made up of many electrons. Electrons are fully fully well behaved and there are often deviations from ideal behavior. Whether a signal gets interpreted as 0 or 1 depends on which way the majority of the electrons are going. The lower the power you operate at, the fewer electrons there are per signal, and the more errors you will see.So in a way, there is a a repetition code in a classical computer (or other similar devices such as an optical fiber). Just in the hardware substrate, not in software.\n \nreply",
      "This seems like the kind of error an LLM would make.It is essentially impossible for a human to confuse error correction and \u201cmajority voting\u201d/consensus.\n \nreply",
      "I don't believe it is the result of a LLM, more like an oversimplification, or maybe a minor fuckup on the part of the author as simple majority voting is often used in redundant systems, just not for memories as there are better ways.And for a LLM result, this is what ChatGPT says when asked \"How does memory error correction differ from quantum error correction?\", among other things.> Relies on redundancy by encoding extra bits into the data using techniques like parity bits, Hamming codes, or Reed-Solomon codes.And when asked for a simplified answer> Classical memory error correction fixes mistakes in regular computer data (0s and 1s) by adding extra bits to check for and fix any errors, like a safety net catching flipped bits. Quantum error correction, on the other hand, protects delicate quantum bits (qubits), which can hold more complex information (like being 0 and 1 at the same time), from errors caused by noise or interference. Because qubits are fragile and can\u2019t be directly measured without breaking their state, quantum error correction uses clever techniques involving multiple qubits and special rules of quantum physics to detect and fix errors without ruining the quantum information.Absolutely no mention of majority voting here.EDIT: GPT-4o mini does mention majority voting as an example of a memory error correction scheme but not as the way to do it. The explanation is overall more clumsy, but generally correct, I don't know enough about quantum error correction to fact-check.\n \nreply",
      "People always have made bad assumptions or had misunderstandings. Maybe the author just doesn't understand ECC and always assumed it was consensus-based. I do things like that (I try not to write about them without verifying); I'm confident that so do you and everyone reading this.\n \nreply",
      ">Maybe the author just doesn't understand ECC and always assumed it was consensus-based.That's likely, or it was LLM output and the author didn't know enough to know it was wrong. We've seen that in a lot of tech articles lately where authors assume that something that is true-ish in one area is also true in another, and it's obvious they just don't understand other area they are writing about.\n \nreply",
      "Frankly every state of the art LLM would not make this error. Perhaps GPT3.5 would have, but the space of errors they tend to make now is in areas of ambiguity or things that require deductive reasoning, math, etc. Areas that are well described in literature they tend to not make mistakes.\n \nreply",
      "That threw me off as well. Majority voting works for industries like aviation, but that's still about checking results of computations, not all memory addresses.\n \nreply",
      "Maybe they were thinking of control systems where duplicating memory, lockstep cores and majority voting are used. You don't even have to go to space to encounter such a system, you likely have one in your car.\n \nreply"
    ],
    "link": "https://www.quantum-machines.co/blog/understanding-googles-quantum-error-correction-breakthrough/",
    "first_paragraph": "",
    "summary": "**Hacker News becomes quantum gatekeeper**\nIn an daring exercise of collective condescension, Hacker News commenters unravel the mysteries of quantum error correction, just moments after misinterpreting the sixth-grade-level introduction. As the conversation toggles between quantum aficionados and self-proclaimed LLM detectives, nuances of electron behavior in classical circuits are invoked to salvage the credibility torpedoed by the original article's alleged faux pas. The furious tapping of corrective replies only reaffirms our suspicion: no quantum superposition could encompass both the accuracy of this article and its interpretations on Hacker News. \ud83e\udd2f\ud83d\udd2c"
  },
  {
    "title": "Dear sir, you have built a compiler (2022) (rachit.pl)",
    "points": 52,
    "submitter": "azhenley",
    "submit_time": "2024-11-19T17:51:14 1732038674",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=42186244",
    "comments": [
      "Thread at the time https://news.ycombinator.com/item?id=29891428\n \nreply",
      "I get the solution for this and I know what all the terms mean. But I don't understand the problem. Whether it's facetious or hyperbole or whatever, I just don't get who or what circumstances this is addressing.This is written like a Jeopardy answer. I just don't know what the question is.Can anyone enlighten me?\n \nreply",
      "When writing programs that take other programs as inputs, and/or produce other programs as outputs, it's tempting to treat the program as only slightly more structured than its textual representation.The problem is that unless your use case is very limited and is guaranteed to stay that way, supporting more and more language constructs will quickly turn your code into a mess.Compiler design as we learn it (lex/parse, syntax tree, semantic checks, transforms, lowering to codegen) is _the_ solution to the problem of dealing with computer programs as inputs and outputs. Trying to do something less is like solving a dynamic programming problem without knowing dynamic programming: it will only work for a restricted set of inputs.\n \nreply",
      "It\u2019s a description of https://en.m.wikipedia.org/wiki/Inner-platform_effect.\n \nreply",
      "That makes total sense. I have been tempted to do this in the past. Fortunately time and resources constraints have kept it to costly sane and maintainable, performant configurations until I learned that I would never create the system I wanted and that it was probably better that I didn't anyways. I guess I've been lucky and didn't even know it.\n \nreply",
      "It's ok to build a compiler sometimes -- it's just very important to make that choice intentionally\n \nreply",
      "Indeed, the safer thing is to actually build a few toy compilers on the side so you can get a sense for what they are good for, and what level of effort is required to build and maintain it.Keeping them locked up in the \"scary CS\" closet only ends up stunting your growth.\n \nreply",
      "But can it send email?\n \nreply"
    ],
    "link": "https://rachit.pl/post/you-have-built-a-compiler/",
    "first_paragraph": "January 11, 2022Dear Sir,I am afraid to inform you that you have built a compiler.\nI know you wanted a \u201csimple prototype\u201d that would just add that\none feature to your programming model.\nYou said that \u201cSSA is an overkill\u201d and \u201cit\u2019s just way too much infrastructure\nto maintain for a simple task\u201d and yet, six months later, you have pile of\nstring mangling scripts that do not work\u2014breaking every time a user input\nslightly deviates from things you\u2019ve seen before.Surely, switching to the unstable abstract syntax tree (AST) library provided by the compiler will be the\nend of your woes; at least that way, someone else maintains a real parser and provides\nat least a semblance of sane input for you to transform.\nBut wait, the AST is massive. \u201cDo I really have to handle all 500 different AST nodes?\u201d you ask yourself?\nSurely not.\nYour users aren\u2019t crazy; they don\u2019t use all the weird features of this language.\nSo you march on, and handle the 50 AST nodes that matter, certain, that this\nwill be the ",
    "summary": "Title: \"Dear Sir, You\u2019ve Accidentally a Compiler\"\n\nFirst Paragraph: In an unexpected twist of fate, an intrepid software developer morphs a \"simple prototype\" into a nightmarish jungle of compiler architecture, despite protests of \"SSA being overkill.\" As the string scripts shatter like glass in a high school musical, our hero contemplates using an AST library, only to find himself drowning in a sea of 500 node types. But fear not\u2014most users won't touch the weird stuff, right? Cue the mad scramble to support just the \"essential\" 50 nodes, a surely manageable number for anyone who mistakes caffeine for sanity.\n\nComments: The comment section turns into an impromptu support group for existential crises, mixed with a tech Jeopardy episode where no one knows the answers. One philosopher muses over the text's resemblance to a Jeopardy clue, searching for life's compiler manual. Another enlightens us on the \"inner-platform effect,\" inadvertently crafting a perfect mirror of the original article's complexity. Meanwhile, a wise soul pontificates on intentional compiler building, subtly reminding everyone that sometimes, you just need to make sure your code can <em>also</em> send an email. \ud83d\udce7"
  },
  {
    "title": "The Deceptively Asymmetric Unit Sphere (tangramvision.com)",
    "points": 99,
    "submitter": "ThatGeoGuy",
    "submit_time": "2024-11-22T16:00:01 1732291201",
    "num_comments": 20,
    "comments_url": "https://news.ycombinator.com/item?id=42214880",
    "comments": [
      "Very nice \"visual\" introduction a topic that's usually treated very abstractly in math textbooks! If you'd like more of such a visual perspective on differential geometry, I recommend Tristan Needham's book [1].[1]: https://press.princeton.edu/books/paperback/9780691203706/vi...\n \nreply",
      "Can this playlist based on the book be a good substitute for the book?https://www.youtube.com/watch?v=mKtctCyd0rs&list=PLWEiAJhCw-...\n \nreply",
      "Depends on how much of the work you do yourself.Math is like skiing or playing the guitar, you don't get better by watching others do it.Personally I find videos useful to augment books, but rarely a substitute for them.  But I am bad about pausing, ruminating and practicing, you may be more successful than I.But practice is required IMHO.\n \nreply",
      "Well... there are some things one can get better at by watching \u2014 chess, for example. However, of course, you're right: in mathematics (and probably chess?) 90% of the learning has to be done yourself.\n \nreply",
      "Ooh thanks, looks really nice!\n \nreply",
      "Were does the notation T^2 for oriented real projective space come from?  That's just bad, because it is not a torus but a sphere, and the two are topologically very different!\n \nreply",
      "If you click through the first link there\u2019s an explanation:\u201cIn precise mathematical terms, this set of rays is called the oriented real projective plane and is commonly denoted by T^2. If you\u2019ve seen this terminology before, you\u2019ll notice that this is a torus. This is because in real-projective geometry, we also add the points and lines \u201cat infinity\u201d.\u201d\n \nreply",
      "No mention of quaternions and SLERP?\n \nreply",
      "Hey, I'm the author of this post.Quaternions and SLERP are absolutely a fundamental part of 3D vision (and game development too). However, I wanted to focus this post mainly on the question \"why is optimizing on the unit sphere difficult?\" As the post stands, it's already quite verbose.Maybe I'll find some time to do a deep dive on common Lie Groups used in computer vision e.g. SO(3), SE(3) and Sim(3) and also the common representations used for those groups.\n \nreply",
      "> Maybe I'll find some time to do a deep dive on common Lie Groups used in computer vision e.g. SO(3), SE(3) and Sim(3) and also the common representations used for those groups.+1Also, great article!\n \nreply"
    ],
    "link": "https://www.tangramvision.com/blog/the-deceptively-asymmetric-unit-sphere",
    "first_paragraph": "Let's explore if we can help accelerate your perception development and deployment.Table of ContentsPreviously, we talked about [Pinhole Obsession](https://www.tangramvision.com/blog/camera-modeling-pinhole-obsession) and the downsides of assuming a default pinhole model. We presented an alternative formulation where rays are modeled on the unit sphere \\\\(\\mathcal{S}^2\\\\) instead of the normalized image plane \\\\(\\mathbb{T}^2\\\\).We\u2019ve also previously written posts about how many problems in robotics can be formulated as [an optimization](https://www.tangramvision.com/blog/introduction-to-optimization-theory). At a high level, many continuous optimization algorithms perform the following steps- Compute a quantity to minimize \u2014 error, misalignment, risk, loss, etc.- Compute a direction along which the quantity is locally reduced- Move the parameters in the quantity-reducing direction- Repeat until the problem convergesMany continuous optimization problems are modeled on [vector spaces](ht",
    "summary": "In the latest brain-twisting installment from tangramvision.com, \"The Deceptively Asymmetric Unit Sphere,\" the website sets out to redefine confusion by dancing merrily from pinhole cameras to optimization in robotics with a soupy mix of mathematical formulations. The excitement is palpable in the comments, where readers throw around recommendations for visual learning aids and books that hardly anyone will read. One concerned netizen helpfully confuses everyone about notation, sparking an explanation that turns the humble commenter into a makeshift professor of projective planes. Meanwhile, the original author pops in to promise more jargon-laden dives into the murky waters of 3D vision, igniting hope and confusion in equal measure. \ud83d\udcda\ud83d\udcab\ud83e\udd37\u200d\u2642\ufe0f"
  },
  {
    "title": "Translating My Grandfather's Biograpy (korny.info)",
    "points": 61,
    "submitter": "pavel_lishin",
    "submit_time": "2024-11-22T18:43:36 1732301016",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=42216311",
    "comments": [
      "Very interesting.  Goed gedaan!Note the title of the book should be Een Waarlijk Vrije; i.e. the last word has a j.Curious that DeepL translated \"Gaf geen kamp\" to \"gave a camp\", since \"geen\" means no/none.  It seemed to totally ignore it or reverse it's meaning.Regarding \"droving\" perhaps \"herding\" might be a more familiar term.  And it might be more accurate; I suspect that long distance herding wasn't a common thing in the Netherlands.\n \nreply",
      "I\u2019ve got my great-grandfather\u2019s autobiography and one of the striking features is the language. It\u2019s extremely matter of fact with very little prose to connect his life together, just a lot of details like \u201cmoved to X in year Y\u201d and \u201cwent to school for X between Y and Z years\u201d. It\u2019s got a lot of facts, but little coherent narrative.If someone is important enough to warrant a biographer they\u2019ll put more work into the narrative but old autobiographies seem to be very mechanical records.\n \nreply",
      "Isn't a narrative just a way of presenting facts? Given facts, you can write a narrative. The more facts you have, the more detailed the narrative can be.\n \nreply",
      "Not exactly. Peter Turchi came up with the analogy of mapmaking for narrative which really goes a long way to making sense of this since in both it\u2019s about being able to find a sensible way to connect the details in a usable way.\n \nreply",
      "Great read ! My father has published 12 books in his native language, I am in process of converting them in English using chatgpt. This gives me idea !!\n \nreply",
      "That is an interesting project. I would like to take that to the next level, where translation is the easy part. It's converting old handwritten letters, journals, and texts with now archaic cursive, into text. We have fascinating material from before WWII, in various languages - but trying to decipher it accurately, is a challenge. As the older generations died off, it is hard to find anyone to read that text.\n \nreply",
      "Most probably the author knows this but there are some photos and information here [1]. His grandfather is a member of \"The Righteous Among the Nations\" [2].[1] https://www.yadvashem.org/righteous/stories/sietsma.html[2] https://www.yadvashem.org/righteous.html\n \nreply",
      "Thanks for sharing this, I was not aware of it and I\u2019m currently in the process of learning Hebrew, dealing with the intersection of (Jewish and Christian) culture and technology.One example is a GPT version [1] fine tuned on texts of Sefaria [2].The initiator was in direct contact with Sam Altman to kickstart it. (Personal communication).He talks about this publicly [3][1]: https://github.com/Sefaria/AppliedAI\n[2]: https://www.sefaria.org/texts\n[3]: https://m.youtube.com/watch?v=tZkJl2fk0rc\n \nreply",
      "Translation has always been interesting to me as I speak Mandarin, Swedish, and English.I think a lot of subtlety gets lost in translations, even from person to person. Is the more \"academically correct\" translation better, or is the one that captures the slang and the vibe in modern terms and memes in a way we can feel the speaker more correct?I think most people who choose the former look at translations as something that is absolute and objective, but I think translations, like most communication, needs to be subjective to both the speaker and the reader.And just as humans can get each of these \"wrong,\" LLMs can and will, too\n \nreply",
      "There\u2019s a great essay by Lydia Davis which appeared in the Paris Review in 2014 (I really should have a better citation, but oh well), which talks about the challenges of translation. To a certain extent, even if you\u2019re writing something original, you\u2019re still writing a translation in terms of trying to find a way to express the idea in your mind within the limitations of the words available to you.\n \nreply"
    ],
    "link": "https://blog.korny.info/2024/11/17/translating-my-grandfathers-biography",
    "first_paragraph": "Geek, Parent, Coder, Aussie living in the UK\n\n\nNovember 17, 2024\n\n\n\n\n        \n          9 minute read\n        \n      \nMy grandfather, Dr Kornelis Sietsma was a Dutch Reformed Church minister in wartime Amsterdam.  He preached in ways that offended the Nazi occupiers, and they deported him to the Dachau concentration camp, where he died.This was a fascinating family history to me growing up - I was named after my grandfather, and his heroic attitude and tragic death informed my view of the world.Now I have kids of my own, and I started thinking about how I could explain their great-grandfather to them.  I knew quite a few broad facts, but hadn\u2019t dug into the specific details.  Also information about him is scattered all over the place, and is mostly in dutch - there\u2019s a  dutch Wikipedia article for example, but no English one.  I thought it\u2019d be good to start building something I could put on the sietsma.com website.One important source I knew of was a short biography, written by a coll",
    "summary": "In a heartfelt attempt to connect current-gen tykes to the grand saga of Grandpappy Kornelis, a geeky Aussie expat-cum-coder decides to tackle the herculean task of piecing together a Dutch-to-English biography while likely upset about the atrocious coffee in the UK. The Herculean effort morphs into a hilarious language blunder waltz with DeepL translations as our protagonist bravely forges through misplaced camps and questionable drovings. Reader comments oscillate between 'Lost in Translation' trivia and an intellectual brawl over the narrative essence of dusty old texts, inadvertently proving that translating Granddad's dry old tales might be the perfect insomnia cure. \ud83d\udcdc\ud83d\udca4 Who knew genealogical enlightenment could be such a splendid soporific?"
  },
  {
    "title": "Amazon to invest another $4B in Anthropic (cnbc.com)",
    "points": 463,
    "submitter": "swyx",
    "submit_time": "2024-11-22T16:25:17 1732292717",
    "num_comments": 261,
    "comments_url": "https://news.ycombinator.com/item?id=42215126",
    "comments": [
      "Curious if anyone knows the logistics of these cloud provider/AI company deals.  In this case, it seems like the terms of the deal mean that Anthropic ends up spending most of the investment on AWS to pay for training.Does anthropic basically get at cost pricing on AWS?  If Amazon has any margin on their pricing, it seems like this $4B investment ends up costing them a lot less, and this is a nice way to turn a cap ex investment into AWS revenue.\n \nreply",
      "Yes exactly.This was the brilliance of the original MSFT investment into OpenAI. It was an investment in Azure scaling its AI training infra, but roundabout through a massive customer (exactly what you\u2019d want as a design partner) and getting equity.I\u2019m sure Anthropic negotiated a great deal on their largest cost center, while Amazon gets a huge customer to build out their system with.\n \nreply",
      "That\u2019s honestly one of the hardest things in engineering \u2014 identifying not just a customer to drive requirements, but a knowledgeable customer who can drive good requirements that work for a broader user base and can drive further expansion. Anthropic seems ideal for that, plus they act as a service/API provider on AWS.\n \nreply",
      "This explanation makes no sense, I could be AWS' biggest customer if they wanted to pay me for it. Something a little closer could be that the big tech companies wanted to acquire outside LLMs, not quite realizing that spending $1B on training only puts you $1B ahead.\n \nreply",
      "Yes but Amazon is not making extra money with you being their biggest customerWith Anthropic yes\n \nreply",
      "Anthropic is getting $4B in investment in a year where their revenue was about $850M. Even if Amazon had bought them outright for that much, they would not be ahead. The fact that everybody keeps repeating the claim that Amazon is \"making money\" makes this appear like some kind of scam.\n \nreply",
      "This is not how it works.First, revenue is irrelevant.Second, the investment isn't a loan that they need to repay. They are getting equity.Third, Anthropic is exclusively using AWS to train its models. Which, yes, means if AWS gives them $4B and it costs them $500M/year to pay for AWS services then after 8 years, the cash is a wash. However this ignores the second point.Fourth, there is brand association for someone who wanted to run their own single tenant instance of Claude whereby you would say \"well they train Claude on AWS, so that must be the best place to run it for our <insert Enterprise org>\" similar to OpenAI on Azure.Fifth, raising money is a signaling exercise to larger markets who want to know \"will this company exist in 5 years?\"Sixth, AWS doesn't have its own LLM (relative to Meta, MS, etc.). The market will associate Claude with Amazon now.\n \nreply",
      "The difference between things you'd say like \"it's true that...\" and \"the market will associate...\" basically is the definition of a scam.\n \nreply",
      "It\u2019s not a scam at all. Amazon doesn\u2019t have an AI story. So they invest in Anthropic, get a lot of that money back as revenue that seeds demand.Their customers now have an incentive to do AI in AWS. That drives more revenue for AWS.\n \nreply",
      "Ummm okay? A scam implies someone is getting hurt (financially, emotionally, etc.). Who's getting scammed here?\n \nreply"
    ],
    "link": "https://www.cnbc.com/2024/11/22/amazon-to-invest-another-4-billion-in-anthropic-openais-biggest-rival.html",
    "first_paragraph": "Credit CardsLoansBankingMortgagesInsuranceCredit MonitoringPersonal FinanceSmall BusinessTaxesHelp for Low Credit ScoresInvestingSELECTAll Credit CardsFind the Credit Card for YouBest Credit CardsBest Rewards Credit CardsBest Travel Credit CardsBest 0% APR Credit CardsBest Balance Transfer Credit CardsBest Cash Back Credit CardsBest Credit Card Welcome BonusesBest Credit Cards to Build CreditSELECTAll LoansFind the Best Personal Loan for YouBest Personal LoansBest Debt Consolidation LoansBest Loans to Refinance Credit Card DebtBest Loans with Fast FundingBest Small Personal LoansBest Large Personal LoansBest Personal Loans to Apply OnlineBest Student Loan RefinanceSELECTAll BankingFind the Savings Account for YouBest High Yield Savings AccountsBest Big Bank Savings AccountsBest Big Bank Checking AccountsBest No Fee Checking AccountsNo Overdraft Fee Checking AccountsBest Checking Account BonusesBest Money Market AccountsBest CDsBest Credit UnionsSELECTAll MortgagesBest MortgagesBest Mor",
    "summary": "Title: Amazon to invest another $4B in Anthropic (cnbc.com)\n\nIn an inspiring display of circular economics, Amazon announces its grand plan to invest $4B into AI startup Anthropic, cleverly ensuring that the bulk of this cash will flow right back into its own pockets via AWS. \ud83d\udcb8 Commenters, in a relentless pursuit of clarity, spiral into a deep philosophical debate on whether this is strategic genius or corporate sleight of hand. Amidst the cacophony, one pundit bravely argues that this isn't just money laundering with extra steps, it's actually about building brand loyalty\u2014because nothing screams trust like self-cannibalization. Meanwhile, others are still trying to decode if \"investing\" is just tech-bro speak for \"giving ourselves a high-five.\""
  },
  {
    "title": "Show HN: Rebels in the sky \u2013 Terminal game about space pirates (github.com/ricott1)",
    "points": 163,
    "submitter": "discoinverno",
    "submit_time": "2024-11-22T08:21:39 1732263699",
    "num_comments": 42,
    "comments_url": "https://news.ycombinator.com/item?id=42212071",
    "comments": [
      "In case the trailer link doesn't work, here's another: https://rebels.frittura.org/demo_v1.0.18.mp4\n \nreply",
      "None of these work for me. Put it on YouTube or something.\n \nreply",
      "My server got hug'd to dead, probably the ssh server won't work now either :(Hopefully this one works: https://streamable.com/huxiwr\n \nreply",
      "This one works! Hey-hey-hey.\n \nreply",
      "Video URL on the GH page is 404.https://github.com/user-attachments/assets/aaa02f04-06db-4da...\n \nreply",
      "There is a demo video here:https://github.com/ricott1/rebels-in-the-sky/tree/main/demo\n \nreply",
      "this works for me while the readme one didn't.Also, the \"thug boy\" song threw  me back to Fist of the North Start so hard I got wiplash, excellent choice.\n \nreply",
      "This link just takes forever to load for me\n \nreply",
      "This link also did not work for me.\n \nreply",
      "Weird, can you see it on the github page tho?\n \nreply"
    ],
    "link": "https://github.com/ricott1/rebels-in-the-sky",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        P2P terminal game about spacepirates playing basketball across the galaxy\n      It's the year 2101. Corporations have taken over the world.\nThe only way to be free is to join a pirate crew and start plundering the galaxy. The only mean of survival is to play basketball.Now it's your turn to go out there and make a name for yourself. Create your crew and start wandering the galaxy in search of worthy basketball opponents.The game is under heavy development and breaking changes are often introduced. If you can't continue an old game because the save file is invalid, you probably need to start a new one or open an issue to check if the save file can be migrated.Connect via SSH to try the game.ssh rebels.frittura.org -p 3788Save files are deleted after 2 days of inactivity.You need to have the rust toolchain installed --> https://www.ru",
    "summary": "Title: Show HN: Galactic Basketcases\n\nIn yet another groundbreaking attempt to combine sports and space larceny, a wild hacker has decided that the year 2101 will be best remembered for space pirates playing basketball across the cosmos. Yes, you heard it right, <em>corporate-overlord-run space setting</em> meets <em>interplanetary NBA</em>. Users can't even decide if the chaos of the broken game or the broken game links are more frustrating\u2014every shared link seems to spawn a new saga of \"404 Basketball Not Found.\" Meanwhile, comment sections are filled with invaluable feedback like \"Put it on YouTube or something,\" ensuring the developer knows just how deeply their potential audience is engaged with high-quality game troubleshooting rather than the game itself."
  },
  {
    "title": "Nash equilibria in Ballmer's binary-search interview game (quuxplusone.github.io)",
    "points": 39,
    "submitter": "xlinux",
    "submit_time": "2024-11-17T13:30:29 1731850229",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=42164107",
    "comments": [
      "One day it is hoped that enough mathematicians will have worked on the problem to have finally, definitively answered Steve Ballmer\u2019s interview question. The job will be shared between them.\n \nreply",
      "The real irony being that they show up to work just to discover that it was a software programming position.\n \nreply",
      "Just in time for the job to be replaced with AI.\n \nreply",
      "Well, Terrence Tao is trying his very best to replace himself with an AI.\n \nreply",
      "Previous comments yonder:- https://news.ycombinator.com/item?id=41434637- https://news.ycombinator.com/item?id=41463330\n \nreply",
      "With these types of trick questions, it is always interesting what is an acceptable trick and what is not.  The question did not specify whole numbers as it does not specify a random selection, but one is in bounds and the other not.\n \nreply",
      "I always felt that part of the interview process is the candidate asking clarifying questions as well as making and stating assumptions.\n \nreply",
      "It is. Or at least it was for some of us. I didn't care if the candidate ever got the right answer. I cared about the thinking, the questions, the strategies, and the conversation.\n \nreply",
      "And if some interpretations lead to trivial solutions, but one leads to a complex problem, it's likely that their intention is the latter. A kind of tacit communication\n \nreply",
      "Actually, it may just as likely be that the interviewer is looking to see if you over complicate things.  So _ask_."
    ],
    "link": "https://quuxplusone.github.io/blog/2024/09/04/the-game-is-flawed/",
    "first_paragraph": "Arthur O\u2019DwyerStuff mostly about C++\nStuff mostly about C++Nash equilibria in Ballmer\u2019s binary-search interview gameYesterday John Graham-Cumming posted about\n\u201cSteve Ballmer\u2019s incorrect binary search interview question,\u201d\nand in the Hacker News discussion, among the\npredictable \u201cinterview culture is flawed!!\u201d complaints, there was some discussion of\nwhether binary search was even the right way to solve Ballmer\u2019s puzzle. Here\u2019s a stab at\nan answer.Ballmer\u2019s puzzle boils down to:I\u2019m thinking of a number between 1 and 100. You make a series of guesses. After each guess\nI\u2019ll tell you whether my number is higher or lower. If you hit it on the first guess I\u2019ll give you $1000.\nOn the second guess, $990. On the third guess, $980. And so on; until, if you hit it on your 100th guess,\nI\u2019ll give you only $10.What is the expected value, to you, of playing this game with me?Here I\u2019ve fiddled with the numbers to keep all the payouts positive and to help separate your possible\nguesses (in teletype font",
    "summary": "In the latest tech triviality, the \"brilliant minds\" at Hacker News have ganged up to solve *Steve Ballmer's nightmare of a binary search interview conundrum*. According to the gospel of O\u2019Dwyer, it\u2019s a high-stakes intellectual smackdown between guessing a number and maximizing theoretical dollars. Commenters, armed with their PhDs in hindsight, argue over the right tricks to land a coding gig \u2014 as if any of it <em>really</em> matters when we\u2019re all just two updates away from being replaced by a snarky AI. Meanwhile, the real challenge remains unaddressed: deciphering why any of this should impress the hiring manager at a software interview. \ud83d\ude44"
  },
  {
    "title": "Rendering \"modern\" Winamp skins in the browser (jordaneldredge.com)",
    "points": 57,
    "submitter": "mariuz",
    "submit_time": "2024-11-22T16:58:35 1732294715",
    "num_comments": 17,
    "comments_url": "https://news.ycombinator.com/item?id=42215438",
    "comments": [
      "Love this project and I've been following 'winamp skins bot' on mastodon and Twitter previously for a while. Fun blast to the past: https://indieweb.social/@winampskins@botsin.spacePotentially a small correction, I think the 'new' skins were introduced with Winamp 3 not 5. 5 was released because 3 was disliked, and incorporated both features from 2 and 3 (2+3 = 5)\n \nreply",
      "Exactly how I remember it - I had only Winamp 3 and installed all those funky modern skins.\n \nreply",
      "I wonder how many of these skins are ported from other apps. I'm pretty sure the big green face shipped with SoundJam, and the one after it is definitely from Audion. (see https://blog.panic.com/facing-forward/)I still miss controlling my music through a little rocket-bike I drew. That was fun.\n \nreply",
      "I remember my two favorite skins: working iPod 4G and iPod Nano 1st gen. With functional scrollwheel and menus.Was it really since Winamp 5? IIRC, I installed them on Winamp 3.Edit: I just fell into a nostalgia spiral reading Winamp forums. It still has posts from 2000.\n \nreply",
      "Winamp 3 definitely had a more modern skin system compared to the sliced BMP files in 2.x skins.\n \nreply",
      "Apropo of nothing, for all of Spotify's UX changes, I feel like skins and visualization of the music are missing from their desktop/web client. For desktop they've taken away the full-window playlist view in favor of a sidebar-only playlist. That's one thing I miss about being able to use Winamp or Windows Media Player to play music on a desktop :'(\n \nreply",
      "Winamp skins era brings back so much nostalgia.\n \nreply",
      "I miss the visualizers.\n \nreply",
      "I'd love to see this hooked up to Navidrome, Jellyfin, or one of the other home server music solutions. Such a vibe.\n \nreply",
      "Wish we had more skinnable applications these days. UI has become so flat and boring. It\u2019s like the industry became allergic to fun.\n \nreply"
    ],
    "link": "https://jordaneldredge.com/notes/webamp-modern/",
    "first_paragraph": "TL;DR several years ago I got a proof of concept working where I was able to render highly interactive \u201cmodern\u201d Winamp skins in the browser by reverse engineering Maki byte code and implementing an interpreter for it in JavaScript. You can try the proof of concept in your browser.One of the most rewarding projects I\u2019ve worked on was Webamp. Seeing classic Winamp skins come to life in my browser via code I wrote was intoxicating and eventually inspired me to create the Winamp Skin Museum. But Webamp \u201cjust\u201d implements \u201cclassic\u201d Winamp skins, which were basically a glorified set of sprite sheets. They could change the appearance of the player but not the layout, and they could not add any custom interactions.However, after skipping Winamp 4, Winamp 5 introduced a new, dramatically more powerful, skinning engine. The new engine was powered by XML files describing the UI, which was made interactive via skinner defined scripts written in a bespoke language called MAKI (\u201dMake a killer interfa",
    "summary": "In a groundbreaking throwback to the early 2000s, Jordan Eldredge has decided to rejuvenate those eye-straining, CPU-hungry &ldquo;modern&rdquo; Winamp skins by reincarnating them in your contemporary web browser\u2014the pinnacle of unnecessary nostalgia. Enter the digital necromancer armed with Javascript, ready to perplex a new generation with the arcane arts of MAKI byte code. Commenters swoon in vintage pixel ecstasy, debating skin histories with the fervor of historians at a forgotten VHS tape convention. Minor technical inaccuracies invoke bursts of pedantry, reminding all three readers why no one discusses operating systems at parties. \u23f3\ud83c\udfa8\ud83d\udd25"
  },
  {
    "title": "FaSTer: Atari ST Digital Magazine (goto10retro.com)",
    "points": 89,
    "submitter": "rbanffy",
    "submit_time": "2024-11-22T09:33:53 1732268033",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=42212412",
    "comments": [
      "Growing up I had an Amiga but my uncle, who was a semi-pro musician, had an ST and this was connected via midi to an Akai sampler and a Roland synth that were mounted in a rack near the computer; in the rack there were some effects too. This was a dream setup in the late 80's. On the Amiga I would use tracker software[1] to make music and until I finally got a cheap sampling interface[2], I had to just use samples that I would find in the accompanying floppy of various Amiga magazines. Obviously my uncle's setup was extremely hi-fi compared to mine and so to this day I have this idea in the back of my mind that \"ST is for people who have money\" LOL.[1] https://en.wikipedia.org/wiki/Music_tracker[2] it was something like this https://www.youtube.com/watch?v=5gTWf6IGCJM\n \nreply",
      "Somebody commented in the post that the little devil logo is Beastie:https://www.goto10retro.com/p/faster-atari-st-digital-magazi...Interesting that it shows up on an Atari ST magazine. Maybe somebody there was a BSD fan in 1987?\n \nreply",
      "Specifically, it's a rendition of the daemon from the cover of the 4.2BSD UNIX System Manager's Manual[1].\u201cCover design by John Lassetter [sic], Lucasfilm, Ltd.\u201d[2][1] https://archive.org/details/smm-4.2bsd/mode/1up[2] https://archive.org/details/smm-4.2bsd/page/n1/mode/1up\n \nreply",
      "Using the \"outline\" style for fonts is, sadly, a lost art. I feel like that went away almost entirely around the turn of the century.\n \nreply",
      "Sun dog and gold runner !!!!\nI had forgotten about these, but they were somehow hidden in my brain.I used to love diskmags ( Imphobia on pcs in particular ) but the format has afaik completely disappeared, and has been superseded by the web.Thanks.\n \nreply",
      "I used to occasionally babysit a couple of kids when I was a teenager.  Babysitting wasn't really anything I had much interest in, but I would do it for this family. I couldn't wait to get the kids to bed, so that I could fire up Sundog on the family's Atari ST.\n \nreply",
      "This is an interesting intersection between the printed magazines with cover disks and the floppy collections containing \"public domain\" software, but without editorial content (e.g. the famous Amiga \"Fish Disks\": https://en.wikipedia.org/wiki/Fred_Fish#The_Amiga_Library_Di...), which were both more widespread.\n \nreply",
      "Back then I wanted to publish collected stories in floppies as Windows .HLP files. The SDK was... discouraging.And then the web happened.The company I worked for managed to publish a couple e-commerce (we didn't call it that) CD's using Windows remote access clients to dial up a server (as in using a phone) to post orders that would be delivered next day. Fun times.\n \nreply",
      "From a user perspective, I\u2019m still fond of WinHelp/CHM. It\u2019s a rather consistent and predictable format, with a standard hierarchical TOC, index, full-text search, and hyperlinking, distributed as a single file you can open on any Windows PC. The AutoHotKey documentation is a good example.\n \nreply",
      "Oh yes, but that ship sailed really fast. The idea would start from RTF files, but by the time we hit the market, the distribution channel would be gone.\n \nreply"
    ],
    "link": "https://www.goto10retro.com/p/faster-atari-st-digital-magazine",
    "first_paragraph": "",
    "summary": "Welcome to the senior citizen's corner of the internet where nostalgia is packaged into shiny digital zines for those who remember what a MIDI cable looks like. Today we dive into <em>FaSTer: Atari ST Digital Magazine</em>, a heartwarming attempt to revive the glory days of less user-friendly and more beige computers. Dive into the rich commentary where former babysitters and would-be disk jockeys recount their heroic tales of navigating pre-Y2K tech, while finding profound connections between UNIX daemons and game fonts. Surely, the peak of human innovation was indeed a floppy disk in 1987. \ud83d\udd79\ufe0f\ud83d\udcbe"
  },
  {
    "title": "From string to AST: parsing (2019) (kubuszok.com)",
    "points": 99,
    "submitter": "sph",
    "submit_time": "2024-11-22T12:35:30 1732278930",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=42213322",
    "comments": [
      "> quadruple G=(N,\u03a3,P,S), where T is a finite set of nonterminal symbols, \u03a3 a finite set of terminal symbols, P is a set of production rules and S is a start symbol.I think \"T\" is supposed to be \"N\" in that sentence[1], based solely upon the further use of \"N\" nomenclature in subsequent paragraphs1: he said, 5 years too late into a forum just discussing the article\n \nreply",
      "This was a really great read! I'm wrote the tree sitter grammar for the Unison programming language, and discovered I really like the work involved in pattern matching that writing tokenizers and parsers comes down to. It also gives you an in-depth understanding of how the language works that you've writing a parser for, and how tooling works.Like if you have an AST with the ability to map onto code that is displayed in your IDE, the algorithm for an IDE to refactor a variable name is to traverse up the AST until you get to the variable's declaration and then traverse all sibling trees, changing each matching name, but stopping a traversal whenever you encounter a new binding with same name. Code folding is to identify the categories of node that are \"foldable\" and then you hide every child of that node. Etc. It's all tree traversal algorithms.It gives you a deep appreciation for how powerful the tooling can be thanks to proper parsing.\n \nreply",
      "It's nice to review some of this theory after a week of coding my own interpreter. I have been studying about compilers at pikuma.com the whole week and reading this article after coding a parser is a great way of reviewing what I've implemented.\n \nreply",
      "I somewhat regularly stop to marvel that one of the greatest anarchist thinkers of our time is also responsible for foundational theories in linguistics that also correspond intimately with the foundational theories of computing. God bless Noam.\n \nreply",
      "Theory without examples is like traveling without a memory.\n \nreply",
      "I think this makes it sound a lot more difficult than it has to be, with the formal theory.When it's really one of the most simple things if you divide it in parts and look at it from a tokenizer (string to list of tokens) and parser on top. Where the tokenizer can usually be very simple: a loop, large switch on the current character, where a choice is made on \"what can this be\", and making it into a formal token or error. Then a simple recursive parser that can almost be a 1 to 1 copy of the (E)BNF.\n \nreply",
      "I love writing parsers like this. Add in Pratt Parsing for operator precedence and writing parsers can be really easy.\n \nreply",
      "I had exactly the same feeling as you after reading the article. And interestingly, all production parsers for all major languages are hand-written recursive descent parsers.\nOn the other hand, if you inspect the actual code for these production parsers (even for newer languages like Swift, Scala, Kotlin, or Rust), the complexity and amount of code is still quite staggering.\n \nreply",
      "Isn't a large portion of the code to get friendlier messages for the user?\n \nreply",
      "I got the impression the author was trying to add higher level reasoning to the chosen term for string to AST parsing.I felt that they were pointing out how the cognitive load of understanding is effected by word choice.\n \nreply"
    ],
    "link": "https://kubuszok.com/2019/from-string-to-ast-parsing/",
    "first_paragraph": "kubuszok.com AST playground: recursion schemes and recursive data ADT through the looking glass - lenses, prims and other optics\n\nFormal grammars\nThe Chomsky hierarchy\nRegular languages\n\nRegular expressions in practice\n\n\nContext-Free Grammars and Push-Down Automata\n\nParsers in practice\nParser combinators\n\n\nTuring machines, linear-bounded automata, unrestrained and context-sensitive grammars\n\nTurning machines and unrestrained grammars\nLinear-Bounded Automata and Context-Sensitive Grammars\n\n\nBack to parsing\nError handling\nSummary\n\n\n\nFormal grammars\nThe Chomsky hierarchy\nRegular languages\n\nRegular expressions in practice\n\n\nContext-Free Grammars and Push-Down Automata\n\nParsers in practice\nParser combinators\n\n\nTuring machines, linear-bounded automata, unrestrained and context-sensitive grammars\n\nTurning machines and unrestrained grammars\nLinear-Bounded Automata and Context-Sensitive Grammars\n\n\nBack to parsing\nError handling\nSummary\n\nWhether you have to do with data in form of CSV, JSON or a",
    "summary": "**From string to AST: parsing (2019) (kubuszok.com)**\n\nWho knew recursion and optics could be so *utterly thrilling*? Over at kubuszok.com, the digital wizards and would-be Chomskys perform lexical acrobatics while juggling ASTs, parsers, and a dizzying array of grammars in a spectacle that\u2019s more confusing than a no-context regex quiz. In the comments, self-proclaimed language parsers emerge from every crevice, wedging in experiences with their latest pet project \u2014 because clearly, anyone who's anyone has written a parser. The crowd favorite? A charming debate over whether \u2018N\u2019 or \u2018T\u2019 belongs in a formal grammar definition, truly the unsolved mystery of our time. \ud83d\ude02\ud83e\uddd9\u200d\u2642\ufe0f\ud83d\udcdc"
  },
  {
    "title": "Salmon return to lay eggs in historic habitat after dam removal project (opb.org)",
    "points": 302,
    "submitter": "gmays",
    "submit_time": "2024-11-22T13:27:12 1732282032",
    "num_comments": 207,
    "comments_url": "https://news.ycombinator.com/item?id=42213663",
    "comments": [
      ">Less than a month after four towering dams on the Klamath River were demolished, hundreds of salmon made it into waters they have been cut off from for decades to spawn in cool creeksDo we understand the mechanisms of this \"genetic memory\" (my words, no idea if its accurate or if there is a better word for it)? Butterflies knowing where to fly even though it was their grandparents that last did it - eels traveling thousands of miles to breed in a place theyve never seen - countless bird migrations - even something as simple as how it takes a human baby 12-18 months to walk but many animals walk as soon as they are born.  I would love to understand better how this knowledge is inherited\n \nreply",
      "Salmon have no \"genetic memory\" - if you release baby salmon from a hatchery that were bred from adults caught elsewhere, they remember where they were released- not where they are genetically from-, and swim back to the area of the hatchery. It appears to be regular memory learned from experience. It is believed to be mostly chemical sensing, e.g. specific smells that they are remembering and returning to.Salmon are not 100% effective at making it back to their birthplace, and some small fraction stray randomly- which is what allows them to populate new areas and re-populate others where they were wiped out. This article isn't about a lot of salmon - only hundreds, so this is probably the amount that would naturally stray to this region from others, with or without a healthy returning population.For example, some ~120k chinook salmon returned to the Columbia river this year, so if 0.01% of them strayed to the Klamath river, you'd get about this many.\n \nreply",
      "Salmon have also displayed possible geomagnetic navigation capabilities, similarly to homing pigeons.https://royalsocietypublishing.org/doi/10.1098/rsbl.2017.075...\n \nreply",
      "This is how sea turtles do it, too, and why sea turtle release has to happen on the beach despite the higher risk of predators.They get sand up their nose and calibrate based on the magnetism of the iron, iirc\n \nreply",
      "If some salmon group had been simplistically \"programmed\" to go up these waters, they would have been trying and failing to go up the river during the entire time the dam was there and so likely wiped out as a group/subspecies.It seems like the fish would have to have had some kind of way to test if the river lead to adequate spawning grounds. And if they had that, they wouldn't really need any memory of any given river.\n \nreply",
      "Looking at salmon research literature I found a study[0] with the following conclusion:This study provides convincing empirical support for fine-scale local selection against dispersal in a large Atlantic salmon meta-population, signifying that local individuals have a marked home ground advantage in reproductive fitness. These results emphasize the notion that migration and dispersal may not be beneficial in all contexts and highlight the potential for selection against dispersal and for local adaptation to drive population divergence across fine spatial scales.Seems like it might simply be that they go where they adapted to thrive.[0] https://www.science.org/doi/full/10.1126/sciadv.aav1112\n \nreply",
      "That doesn't really explain how they know to find this place, decades after the last time any member of their species visited it. It explains why evolution selected for this behavior, but the more interesting part is how it happens in an individual salmon.\n \nreply",
      "Clearly, the story that salmon go back to spawn and their birth pool is not 100% true\n \nreply",
      ">That doesn't really explain how they know to find this place, decades after the last time any member of their species visited it.Because that's not what happened. These fish managed to get there because it was a good place for them to go, not because they were 'returning' to a place they had been before. The 'return' in the title is more about the fact that they are coming back to fill a niche in an area fish were blocked from, not that these specific fish were returning to a place they had been before. It almost seems like they were intentionally muddying the waters with the language used.\n \nreply",
      "This is total and complete speculation, but possibly some sort of genetic or epigenetic driven system favoring some sort of chemical gradient/fingerprint unique to each river, maybe?\n \nreply"
    ],
    "link": "https://www.opb.org/article/2024/11/17/salmon-return-to-lay-eggs-in-historic-habitat-after-largest-dam-removal-project-in-us-history/",
    "first_paragraph": "A giant female Chinook salmon flips on her side in the shallow water and wriggles wildly, using her tail to carve out a nest in the riverbed as her body glistens in the sunlight. In another moment, males butt into each other as they jockey for a good position to fertilize eggs.These are scenes local tribes have dreamed of seeing for decades as they fought to bring down four hydroelectric dams blocking passage for struggling salmon along more than 400 miles (644 kilometers) of the Klamath River and its tributaries along the Oregon-California border.Now, less than a month after those dams came down in the largest dam removal project in U.S. history, salmon are once more returning to spawn in cool creeks that have been cut off to them for generations. Video shot by the Yurok Tribe show that hundreds of salmon have made it to tributaries between the former Iron Gate and Copco dams, a hopeful sign for the newly freed waterway.\u201cSeeing salmon spawning above the former dams fills my heart,\u201d sa",
    "summary": "In a stunning turn of events that could only be described as \"scale-shattering,\" salmon have finally overcome their century-old barrier issues and are spawning in areas they supposedly \"remember\" despite never seeing them. Apparently, tearing down dams is all it takes for these fined swimmers to reclaim their Airbnb reservations upstream. Commenters, in a flurry of obfuscation, debate whether it's genetic memory, Google Maps for Fish, or just good old-fashioned homing instincts kicked into gear by the smell of ancestral waters. Each theory is wilder than the last, proving once again that nobody reads past the headline but everyone's an armchair ichthyologist. \ud83d\udc1f\ud83e\uddd0"
  },
  {
    "title": "Show HN: Llama 3.2 Interpretability with Sparse Autoencoders (github.com/paulpauls)",
    "points": 531,
    "submitter": "PaulPauls",
    "submit_time": "2024-11-21T20:37:56 1732221476",
    "num_comments": 79,
    "comments_url": "https://news.ycombinator.com/item?id=42208383",
    "comments": [
      "For anyone who hasn\u2019t seen this before, mechanistic interpretability solves a very common problem with LLMs: when you ask a model to explain itself, you\u2019re playing a game of rhetoric where the model tries to \u201cconvince\u201d you of a reason for what it did by generating a plausible-sounding answer based on patterns in its training data. But unlike most trends of benchmark numbers getting better as models improve, more powerful models often score worse on tests designed to self-detect \u201cuntruthfulness\u201d because they have stronger rhetoric, and are therefore more compelling at justifying lies after the fact. The objective is coherence, not truth.Rhetoric isn\u2019t reasoning. True explainability, like what overfitted Sparse Autoencoders claim they offer, basically results in the causal sequence of \u201cthoughts\u201d the model went through as it produces an answer. It\u2019s the same way you may have a bunch of ephemeral thoughts in different directions while you think about anything.\n \nreply",
      "I want to point out here that people do the same: a lot of the time we don't know why we thought or did something, but we'll confabulate plausible-sounding rhetoric after the fact.\n \nreply",
      "The split-brain experiment is one of my favorites! https://www.youtube.com/watch?v=wfYbgdo8e-8\n \nreply",
      "https://en.wikipedia.org/wiki/Peace_on_Earth_(novel)\n \nreply",
      "Not in math.\n \nreply",
      "Yes in math. Formalisms come after casual thoughts, at every step.\n \nreply",
      "It's totally different: those formalisms are in a workbench, following a set of rules that either work or not.So, yes, that (math) is representative of the actual process: pattern recognition gives you spontaneous ideas, that you assess for truthfulness in conscious acts of verification.\n \nreply",
      "Math comes from brains.\n \nreply",
      "What is a casual thought that you cannot explain in math?\n \nreply",
      "That question makes no sense. You can explain anything in math, because math is a language and lets you define whatever terms and axioms you need at a given moment.(Whether or not such explanation is useful for anything is another issue entirely.)\n \nreply"
    ],
    "link": "https://github.com/PaulPauls/llama3_interpretability_sae",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A complete end-to-end pipeline for LLM interpretability with sparse autoencoders (SAEs) using Llama 3.2, written in pure PyTorch and fully reproducible.\n      \n\n\n\n\n\n\n\nSource: OpenAI - Extracting Concepts from GPT-4\nModern LLMs encode concepts by superimposing multiple features into the same neurons and then interpeting them by taking into account the linear superposition of all neurons in a layer. This concept of giving each neuron multiple interpretable meanings they activate depending on the context of other neuron activations is called superposition. Sparse Autoencoders (SAEs) are models that are inserted into a trained LLM for the purpose of projecting the activations into a very large but very sparsely activated latent space. By doing so they attempt to untangle these superimposed representations into separate, clearly interpre",
    "summary": "Title: Hacker News Discovers Neuropseudothought Unraveler: Llama 3.2 Poised to Combat AI Bullshittery\n\nIn a stunning display of misunderstood academia, Hacker News flips out over \"Llama 3.2 Interpretability with Sparse Autoencoders,\" a solution promising the Elysium of AI honesty for all three users who understand it. The comment section swiftly devolves into a digital philosophy course, where armchair experts debate whether AI lying is the new human condition or just old wine in a new bottle, citing random Wikipedia links as peer-reviewed evidence. Others invoke math as both the problem and solution, mastering the art of contradicting themselves more gracefully than any AI. Truly, Llama 3.2 and its disciples are on the brink of untangling the Gordian Knot with a sharper, yet entirely virtual, sword."
  },
  {
    "title": "Playground Wisdom: Threads Beat Async/Await (pocoo.org)",
    "points": 41,
    "submitter": "samwillis",
    "submit_time": "2024-11-18T12:07:03 1731931623",
    "num_comments": 20,
    "comments_url": "https://news.ycombinator.com/item?id=42171693",
    "comments": [
      "The article seems specific to JavaScript, C# is different.> you cannot await in a sync functionIn C# it\u2019s easy to block the current thread waiting for an async task to complete, see Task.Wait method.> since it will never resolve, you can also never await itIn C#, awaiting for things which never complete is not that bad, the standard library has Task.WhenAny() method for that.> let's talk about C#. Here the origin story is once again entirely differentOriginally, NT kernel was designed for SMP from the ground up, supports asynchronous operations on handles like files and sockets, and since NT 3.5 the kernel includes support for thread pool to dispatch IO completions: https://en.wikipedia.org/wiki/Input/output_completion_portOverlapped I/O and especially IOCP are hard to use directly. When Microsoft designed initial version of .NET, they implemented thread pool and IOCP inside the runtime, and exposed higher-level APIs to use them. Stuff like Stream.BeginRead / Stream.EndRead available since .NET 1.1 in 2003, the design pattern is called Asynchronous Programming Model (APM).Async/await language feature introduced in .NET 4.5 in 2012 is a thin layer of sugar on top of these begin/end asynchronous APIs which were always there. BTW, if you have a pair of begin/end methods, converting into async/await takes 1 line of code, see TaskFactory.FromAsync.\n \nreply",
      "You're probably right that this is leaning in on JavaScript and Python more, but I did try to make a point that the origin story for this feature is quite a bit different between languages.  C# is the originator of that feature, but the implications of that feature in C# are quite different than in for instance JavaScript or Python.  But when people have a discussion about async/await it often loses these nuances very quickly.> Async/await language feature introduced in .NET 4.5 in 2012 is a thin layer of sugar on top of these begin/end asynchronous APIs which were always there.You are absolutely right.  That said, it was a conscious decision to keep the callback model and provide \"syntactic sugar\" on top of it to make it work.  That is not the only model that could have been chosen.\n \nreply",
      "Task.Wait() is just using the normal \"thread\" (in the way the author defines it later) blocking logic to do that in said case but I think the author is trying to talk about pure async/await approaches there as an example of why you still want exactly that kind of non-async \"thread\" blocking to fall back on for differently colored functions.Task.WhenAny() is similar to Promise.any()/Promise.race(). I'm not sure this is where the author is focusing attention on though. Regardless if your execution is able to move on and out of that scope those other promises may still never finish or get cleaned up.\n \nreply",
      "> In C#, awaiting for things which never complete is not that bad, the standard library has Task.WhenAny() method for that.It's not that bad in JS either. JS has both Promise.any and Promise.race that can trivially set a timeout to prevent a function from waiting infinitely for a non-resolving promise. And as someone pointed out in the Lobsters thread, runtimes that rely on multi-threading for concurrency are also often prone to deadlocks and infinite loops [1].  import { setTimeout } from 'node:timers/promises'\n  \n  const neverResolves = new Promise(() => {})\n  \n  await Promise.any([neverResolves, setTimeout(0)])\n  await Promise.race([neverResolves, setTimeout(0)])\n  \n  console.trace()\n\n\n[1] https://lobste.rs/s/hlz4kt/threads_beat_async_await#c_cf4wa1\n \nreply",
      "As someone who has only written serious applications in single-threaded, or manually threaded C/C++, and concurrent applications in go using goroutines, channels, and all that fun stuff, I always find the discussion around async/await fascinating. Especially since it seems to be so ubiquitous in modern programming, outside of my sphere.But one thing is: I don't get it. Why can't I await in a normal function? await sounds blocking. If async functions return promises, why can't I launch multiple async functions, then await on each of them, in a non-async function that does not return a promise?I get there are answers to my questions. I get await means \"yeald if not ready\" and if the function is not async \"yeald\" is meaningless. But I find it a very strange way of thinking nonetheless.\n \nreply",
      "You can:https://hackage.haskell.org/package/async-2.2.5/docs/Control...As long as you don't mind - what did the article say? ->> transcending to a higher plane and looking down to the folks who are stitching together if statements, for loops, make side effects everywhere, and are doing highly inappropriate things with IO.\n \nreply",
      "In C# you can do a collection of Task<T>, start them and then do a Task.WaitAll() on the collection. For example a batch of web requests at the same time and then collect the results once everything is done. I'm not sure how it's done in other languages but I imagine there's something similar.\n \nreply",
      "At least in node, its because the runtime is an event loop.\n \nreply",
      "I actually think out of any language async/await makes the most sense for javascript.In the first example: there is no such thing as a blocking sleep in javascript. What people use as sleep is just a promise wrapper around a setTimeout call. setTimeout has always created microtasks, so calling a sleep inline would do nothing to halt execution.I do agree that dangling Promises are annoying and Promise.race is especially bad as it doesn't do what you expect: finish the fastest promise and cancel the other. It will actually eventually resolve both but you will only get one result.Realistically in JS you write your long running async functions to take an AbortController wrapper that also provides a sleep function, then in your outer loop you check the signal isn't aborted and the wrapper class also handles calling clearTimeout on wrapped sleep functions to stop sleeping/pending setTimeouts and exit your loop/function.\n \nreply",
      "Almost as an aside the article makes an interesting point: memory accesses can block. Presumably if it blocks because it's accessing a piece of hardware the operating system schedules another thread on that core ... but what if it blocks on a 'normal' memory access? Does it stall the core entirely? Can 'hyperthreading' briefly run another thread? Does out of order execution make it suddenly not a problem? Surely it doesn't go all the way down to the OS?\n \nreply"
    ],
    "link": "https://lucumr.pocoo.org/2024/11/18/threads-beat-async-await/",
    "first_paragraph": "written on Monday, November 18, 2024It's been a few years since I wrote about my challenges with\nasync/await-based systems and how they just seem to not support back\npressure well.  A few years later, I do not\nthink that this problem has subsided much, but my thinking and\nunderstanding have perhaps evolved a bit.  I'm now convinced that\nasync/await is, in fact, a bad abstraction for most languages, and we\nshould be aiming for something better instead and that I believe to be\nthread.In this post, I'm also going to rehash many arguments from very clever\npeople that came before me.  Nothing here is new, I just hope to bring it\nto a new group of readers.  In particular, you should really consider\nthese who highly influential pieces:As programmers, we are so used to how things work that we make some\nimplicit assumptions that really cloud our ability to think freely.  Let\nme present you with a piece of code that demonstrates this:Read that code and then answer this question: do the mouse and",
    "summary": "**Playground Wisdom: Threads Beat Async/Await**\n\nIn a dazzling display of regurgitated wisdom, an esteemed blogger at pocoo.org bravely tackles the controversial topic of threads versus async/await, pioneering the notion that everything old is new again. Armed with a cache of other people's arguments\u2014that still aren't new\u2014the author leads a crusade back to the thread land, as if threading pitfalls had suddenly vanished into thin code air. Cue the comment section: a battle royale where every coder with internet access argues about C#, JavaScript nuances, and the bewitching complexities of async candies that no one can quite swallow. Surely, this will be the thread that finally binds them all! \ud83c\udf00\ud83d\udcbb\ud83e\udd26\u200d\u2642\ufe0f"
  },
  {
    "title": "Autoflow, a Graph RAG based and conversational knowledge base tool (github.com/pingcap)",
    "points": 219,
    "submitter": "jinqueeny",
    "submit_time": "2024-11-22T02:42:14 1732243334",
    "num_comments": 31,
    "comments_url": "https://news.ycombinator.com/item?id=42210689",
    "comments": [
      "I ask \"what is TiDB\" in the demo as suggested, and it takes 2 minutes to start responding in the midst of a multi-stage workflow with several steps each of graph retrieval, vector search, generation, and response combination.Each of these is individually cool, but it strikes me as tragic that so much effort has been put into an intricate workflow and beautifully crafted UI only to culminate in a completely useless hello-world example, which after 5+ minutes of successive querying and response-building concludes with a network error.I could use this to build exactly what I need...after stripping out 80% of the features to make it streamlined and responsive.Why isn't that minimal version the default?\n \nreply",
      "It appears to be much faster on more specific questions (like the ones that are suggested after you ask it \"what is TiDB\"). I got a response in about 40s on the question \"How does TiDB's cloud-native design enhance its scalability and reliability compared to traditional MySQL databases?\"Also, what's wrong with a nice UI? It appears to mostly be components from https://ui.shadcn.com/. Is there something wrong with good frontend craft, especially for a demo where you're trying to sell something?It seems like something that is being offered as a self-contained tool that's easy for end users to play with, which isn't going to be the minimal version. I'm sure you could build something that suits your needs exactly, but it would be hard for someone else to predict your exact needs, and there's a decent chance everyone needs or wants a slightly different set of features, and that those things may not make for the most ideal demo.I am personally far from the typical profile of an AI booster, but I can't help but say something about what I feel is a middlebrow dismissal.\n \nreply",
      "What would you remove?\n \nreply",
      "Is this wholly self-hostable? I'd be curious to run something like this on a home server, have some small model via ollama slowly chew through my documents / conversations / receipts / .... and provide a chat-like search engine over the whole mess.\n \nreply",
      "Here is how I am implementing something close to what you mentioned.\nIn my setup, I make sure to create a readme.md at the root of every folder which is a document for me as well as LLM that tells me what is inside the folder and how it is relevant to my life or project. kind of a drunken brain dump for the folder .I have a cron job that executes every night and iterates through my filesystem looking for changes since the last time it ran. If it finds new files or changes, it creates embeddings and stores them in Milvus.The chat with LLM using Embeddings if not that great yet. To be fair,I have not yet tried to implement the GraphRAG or Claude's contexual RAG approaches. I have a lot of code in different programming languages, text documents, bills pdf, images. Not sure if one RAG can handle it all.I am using AWS Bedrock APIs for LLama and Claude and locally hosted Milvus\n \nreply",
      "Wondering if you have tried AnythingLLM, and if so what you thought of it.\n \nreply",
      "I have not .. but this seems to be something I must try.\n \nreply",
      "Thanks a lot, this is the first time i saw a RAG using DSPy. I wanted to know about the expected cost. A few days ago fast graphrag compared their implementation with Microsoft:> Using The Wizard of Oz, fast-graphrag costs $0.08 vs. graphrag $0.48 \u2014 a 6x costs saving that further improves with data size and number of insertions.\n \nreply",
      "I'd love to see a GraphRAG browser that collects the pages I visit automatically.\n \nreply",
      "Many years ago there used to be a Firefox extension (..or might have even been a Mozilla one..) that would store all the pages I visit. I recall its name was Breadcrumbs but I could be misremembering. Space is cheap, or at least affordable if one would exclude videos, which are probably technically more difficult to archive anyway, but sometimes one remembers having seen content that is never to be found again.I think it would be useful to have just a personal basic search engine on that kind of contents, but possibly a RAG or even a fine tuned LLM would be even cooler.Actually, e.g. Firefox could do that at least for its bookmarks and tabs, though it already does provide the function for tagging bookmarks. And I think there's probably an extension for searching tabs' contents..\n \nreply"
    ],
    "link": "https://github.com/pingcap/autoflow",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        pingcap/autoflow is a Graph RAG based and conversational knowledge base tool built with TiDB Serverless Vector Storage. Demo: https://tidb.ai\n\n\nAn open source GraphRAG (Knowledge Graph) built on top of TiDB Vector and LlamaIndex and DSPy.Perplexity-style Conversational Search page: Our platform features an advanced built-in website crawler, designed to elevate your browsing experience. This crawler effortlessly navigates official and documentation sites, ensuring comprehensive coverage and streamlined search processes through sitemap URL scraping.You can even edit the Knowledge Graph to add more information or correct any inaccuracies. This feature is particularly useful for enhancing the search experience and ensuring that the information provided is accurate and up-to-date.Embeddable JavaScript Snippet: Integrate our conversationa",
    "summary": "**Autoflow: A Tragicomedy in Code and Comments**\n\nIn the latest episode of \"Why Is This Still Loading?\", the open-source **Autoflow** tool, crafted lovingly with buzzwords like *Graph RAG*, *TiDB Serverless Vector Storage*, and other techno-jargon intended to bedazzle more than perform, finally launches its demo. Commenters stumble through a labyrinth of multi-stage workflows and flashy UI components, only to face a climax that culminates in a ceremonious network error. \ud83c\udfad One brave user, mistaking the platform for a practical aid\u2014rather than an engineering flex\u2014suggests stripping down 80% of its features to achieve basic functionality. This, shockingly, does not appear in the next update. Meanwhile, another soul dreams of turning this tortoise into a home-server snail, proving once more that hope is truly the last thing to die in the tech world. Hope springs eternal, but perhaps not as eternally as the loading screen of Autoflow."
  },
  {
    "title": "OK, I can partly explain the LLM chess weirdness now (dynomight.net)",
    "points": 444,
    "submitter": "dmazin",
    "submit_time": "2024-11-21T17:55:06 1732211706",
    "num_comments": 407,
    "comments_url": "https://news.ycombinator.com/item?id=42206817",
    "comments": [
      "I have the exact same problem with this article that I had with the previous one - the author fails to provide any data on the frequency of illegal moves.Thus it's impossible to draw any meaningful conclusions. It would be similar to if I claimed that an LLM is an expert doctor, but in my data I've filtered out all of the times it gave incorrect medical advice.\n \nreply",
      "I don't think is super relevant. I mean, it would be interesting (especially if there was a meaningful difference in the number of illegal move attempts between the different approaches, doubly so if that didn't correlate with the performance when illegal moves are removed), but I don't think it really affects the conclusions of the article: picking randomly from the set of legal moves makes for a truly terrible chess player, so clearly the LLMs are bringing something to the party such that sampling from their output performs significantly better. Splitting hairs about the capability of the LLM on its own (i.e. insisting on defining attempts at an illegal move as a game loss for the purposes of rating) seems pretty besides the point.\n \nreply",
      "> It would be similar to if I claimed that an LLM is an expert doctor, but in my data I've filtered out all of the times it gave incorrect medical adviceSharp eyes, similarly Andrew Ng and his Stanford University team pulled the same trick by having overfitting training to testing ratio for his famous cardiologist-level paper published in Nature Medicine [1].The training ratio is more than 99% and testing less than 1% which failed AI validation 101. The paper would not stand in most AI conference but being published in Nature Medicine, one of the highest impact factor journal there is and has many citations for AI in healthcare and medicine.[1] Cardiologist-level arrhythmia detection and classification in ambulatory electrocardiograms using a deep neural network:https://www.nature.com/articles/s41591-018-0268-3\n \nreply",
      "> It would be similar to if I claimed that an LLM is an expert doctor, but in my data I've filtered out all of the times it gave incorrect medical advice.Computationally it's trivial to detect illegal moves, so it's nothing like filtering out incorrect medical advice.\n \nreply",
      "> Computationally it's trivial to detect illegal movesYou're strictly correct, but the rules for chess are infamously hard to implement (as anyone who's tried to write a chess program will know), leading to minor bugs in a lot of chess programs.For example, there's this old myth about vertical castling being allowed due to ambiguity in the ruleset: https://www.futilitycloset.com/2009/12/11/outside-the-box/\n(Probably not historically accurate).If you move beyond legal positions into who wins when one side flags, the rules state that the other side should be awarded a victory if checkmate was possible with any legal sequence of moves. \nThis is so hard to check that no chess program tries to implement it, instead using simpler rules to achieve a very similar but slightly more conservative result.\n \nreply",
      "That link was new too me, thanks! However: I wrote some chess-program myself (nothing big, hobby level) and I would not call it hard to implement. Just harder than what someone might assume initially. But in the end, it is one of the simpler simulations/algorithms I did. It is just the state of the board, the state of the game (how many turns, castle rights, past positions for the repetition rule, ...) and picking one rule set if one really wants to be exact.(thinking about which rule set is correct would not be meaningful in my opinion - chess is a social construct, with only parts of it being well defined. I would not bother about the rest, at least not when implementing it)By the way: I read \"Computationally it's trivial\" as more along the lines of \"it has been done before, it is efficient to compute, one just has to do it\" versus \"this is new territory, one needs to come up with how to wire up the LLM output with an SMT solver, and we do not even know if/how it will work.\"\n \nreply",
      "I got a kick out of that link. Had certainly never heard of \"vertical castling\" previously.\n \nreply",
      "> You're strictly correct, but the rules for chess are infamously hard to implementCome on.  Yeah they're not trivial but they've been done numerous times.  There's been chess programs for almost as long as there have been computers.  Checking legal moves is a _solved problem_.Detecting valid medical advice is not.  The two are not even remotely comparable.\n \nreply",
      "> Detecting valid medical advice is not. The two are not even remotely comparable.Uh? Where exactly did I signal my support for LLM's giving medical advice?\n \nreply",
      "As I wrote in another comment - you can write scripts that correct bad math, too. But we don't use that to claim that LLMs have a good understanding of math.\n \nreply"
    ],
    "link": "https://dynomight.net/more-chess/",
    "first_paragraph": "\n\n    Updated Nov 2024\n    \nWe recently talked about a mystery: All large language models (LLMs) are terrible at chess. All, that is, except for gpt-3.5-turbo-instruct, which for some reason can play at an advanced amateur level. This is despite the fact that this model is more than a year old and much smaller than recent models. What\u2019s going on?I suggested four possible explanations:Theory 1: Large enough base models are good at chess, but this doesn\u2019t persist through instruction tuning to chat models.Theory 2: For some reason, gpt-3.5-turbo-instruct was trained on more chess data.Theory 3: There\u2019s something magical about certain LLM architectures.Theory 4: There\u2019s \u201ccompetition\u201d between different types of data, so for an LLM to play chess well, you need a large fraction of the data to be chess games.The internet offered several other theories. The most common were:Theory 5: OpenAI is cheating.Theory 6: LLMs can\u2019t actually play chess.Theory 7: Large enough base models are good at chess",
    "summary": "The Houdini Act of AI Chess: Dynomight's exquisite revelation on why specific old, tiny models outsmart their gigantic kin in the riveting game of chess has online juggernauts tripping over their pawns in bewilderment. Watch in awe as the swarm of Internet know-it-alls birth theories quicker than an LLM can blunder a checkmate, ranging from the absurd ('OpenAI is cheating') to the philosophical ('It\u2019s about the metaphysical essence of data, duh'). Comments morph into a pseudo-intellectual melee, where chess and ethical AI debates collide like mismatched socks in a laundry tornado. Evidently, the power to distinguish a legal chess move from a bishop moonwalking sideways marks the pinnacle of human achievement in this tech-obsessed realm. \ud83d\ude44"
  },
  {
    "title": "Wasp (YC W21) is hiring a framework engineer to build Laravel for JavaScript",
    "points": 0,
    "submitter": "",
    "submit_time": "2024-11-22T17:00:36 1732294836",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "item?id=42215453",
    "first_paragraph": "",
    "summary": "In a bold move that defies the natural order, Wasp (YC W21) is on the hunt for a masochistic framework engineer to reinvent the wheel by creating \"Laravel for JavaScript.\" Because, as everyone knows, what the world desperately lacks is another JavaScript framework to join the existing melee of frameworks that developers love to hate. Comment sections are already buzzing (pun intended) with veteran devs deriding the move, hobbyists drooling over a new shiny toy, and the inevitable comparisons to every other framework ever conceived. Watch as the cycle of hype and despair gets yet another player. \ud83c\udf7f"
  }
]