[
  {
    "title": "Getting AI to write good SQL (cloud.google.com)",
    "points": 138,
    "submitter": "richards",
    "submit_time": "2025-05-16T21:10:12 1747429812",
    "num_comments": 69,
    "comments_url": "https://news.ycombinator.com/item?id=44009848",
    "comments": [
      "> We will cover state-of-the-art [...] how we approach techniques that allows the system to offer virtually certified correct answers.I don't need AI to generate perfect SQL, because I am never going to trust the output enough to copy/paste it \u2014 the risk of subtle semantic errors is too high, even if the code validates.Instead, I find it helpful for AI to suggest approaches \u2014 after which I will manually craft the SQL, starting from scratch.\n \nreply",
      "Really? In my experience it\u2019s been pretty good (using Pydantic)! I read over before I execute it, but it\u2019s never done anything malicious.\n \nreply",
      "I don't trust myself to craft a prompt in natural language which completely specifies my intent as codified with the precision of a programming language.I also tend to turn to AI for advising me on difficult use cases, and most of the time it's for production code rather than one-offs.  The easy cases, I just write myself because it's more mental effort to review code for subtle errors than it is to write it.\n \nreply",
      "\"Given the prompt \"I have a database schema that contains products and orders. Write a SQL query that shows the number of orders for shoes\"\"How on earth is this an AI job?In the example you describe there are several technical things in nearly natural language and you mention two things that would be a drop down in a GUI.  For starters this assumes you know what SQL is and your data layout or \"schema\".Regardless of using AI, you need to understand the base technology.SQL is not intractable for queries, once you have worked out the relationships. The relationship complexity will be the same for an AI prompt too no matter how cool you feel.Your AI might find a customer 1:M shoes relationship or not.  I suggest that anything beyond a couple of tables model will go horribly wrong.\n \nreply",
      "If you know SQL, then yeah! But if you don't know SQL, using an AI to write a few queries & debug them is a great way to learn it.I'm pretty comfortable with sql but still found it a fabulous tool recently. I have a sql database which describes a tree of some ~600k events. Each event is in a session (via session_id). Most events have a parent event - and trees of events can involve multiple sessions.I wanted to add two derived columns to my events table. For each event, I wanted to name the root event for that event's tree and the root event within this session. I had code in typescript to do it - but unsurprisingly it was pretty slow. Well, it turns out you can write a recursive SQL query which can traverse the graph and populate those columns. I had no idea that was even possible.ChatGPT managed it pretty well - though I ended up making a bunch of tweaks to the query it suggested to simplify it. I learned a bunch of SQL in the process - and that was cool! Obviously I could have read the SQL documentation and figured it out myself, but it was faster & easier using chatgpt. Writing SQL queries is a fantastic use case for LLMs.\n \nreply",
      "What\u2019s the eventual goal of text to sql?Is it to build a copilot for a data analyst or to get business insight without going through an analyst?If it\u2019s the latter - then imho no amount of text to sql sophistication will solve the problem because it\u2019s impossible for a non analyst to understand if the sql is correct or sufficient.These don\u2019t seem like text2sql problems:> Why did we hit only 80% of our daily ecommmerce transaction yesterday?> Why is customer acquisition cost trending up?> Why was the campaign in NYC worse than the same in SF?\n \nreply",
      "> These don\u2019t seem like text2sql problems:Correct, but I would propose two things to add to your analysis:1. Natural language text is a universal input to LLM systems2. text2sql makes the foundation of retrieving the information that can help answer these higher-level questionsAnd so in my mind, the goals for text2sql might be a copilot (near-term), but the long-term is to have a good foundation for automating text2sql calls, comparing results, and pulling them into a larger workflow precisely to help answer the kinds of questions you're proposing.There's clearly much work needed to achieve that goal.\n \nreply",
      "yeah I agree with this - good text2sql is essential but just one part of a larger stack that will actually get there. Seems possible tho\n \nreply",
      "To be fair, these don\u2019t look like SQL problems either. SQL answers \u201cwhat\u201d, not \u201cwhy\u201d questions. The goal of text2sql is to free up analyst time to get through \u201cwhat\u201d much faster and - possibly- focus on \u201cwhy\u201d questions.\n \nreply",
      "My observation is the latter, but I agree the results fall short of expectations. Business will often want last minute change in reporting, don't get what they want at the right time because lack of analysts, and hope having \"infinite speed\" will solve the problem.But ofc the real issue is that if your report metrics change last minute, you're unlikely to get good report. That's a symptom of not thinking much about your metrics.Also, reports / analysis generally take time because the underlying data are messy, lots of business knowledge encoded \"out of band\", and poor data infrastructure. The smarter analytics leaders will use the AI push to invest in the foundations.\n \nreply"
    ],
    "link": "https://cloud.google.com/blog/products/databases/techniques-for-improving-text-to-sql",
    "first_paragraph": "Principal Software EngineerOur most intelligent model is now available on Vertex AIOrganizations depend on fast and accurate data-driven insights to make decisions, and SQL is at the core of how they access that data. With Gemini, Google can generate SQL directly from natural language \u2014 a.k.a. text-to-SQL. This capability increases developer and analysts\u2019 productivity and empowers non-technical users to interact directly with the data they need.Today, you can find text-to-SQL capabilities in many Google Cloud products:BigQuery Studio in the SQL Editor and SQL Generation tool, and within the Data Canvas SQL node\"Help me code\" functionality in Cloud SQL Studio (Postgres, MySQL and SQLServer), AlloyDB Studio and Cloud Spanner StudioAlloyDB AI with its direct natural language interface to the database, currently available as a public previewThrough Vertex AI, which lets you access the Gemini models that are the basis for these products directlyRecently, powerful large language models (LLMs",
    "summary": "Welcome to the future where Google, in its infinite wisdom, reinvents SQL programming for those who fear the command line. Introducing Gemini, the AI that translates desperate business queries from \"natural language\" into something resembling SQL, so even your clueless CEO can pretend to be a data analyst. In the comments, a festival of SQL purists and wide-eyed optimists spar over whether auto-generated queries are the next big thing or just another shortcut to disaster. Spoiler: most agree it\u2019s cool until it deletes the production database. \ud83e\udd16\u2328\ufe0f\ud83d\udca5"
  },
  {
    "title": "Show HN: KVSplit \u2013 Run 2-3x longer contexts on Apple Silicon (github.com/dipampaul17)",
    "points": 178,
    "submitter": "dipampaul17",
    "submit_time": "2025-05-16T20:04:58 1747425898",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=44009321",
    "comments": [
      "Looks interesting! Is there any intuition for why this should be the case? Did you discover it via that intuition, or just random experimentation?A note, your install script appears to still have a placeholder at the \"apply patch\" step. A suggestion, might be more user-friendly to fork llama.cpp and then include that as a git submodule rather than make it a \"git clone and apply patch\" step.A further note, everyone and their dog has a different local python set-up, might be nice to let people separate the llama.cpp stuff from the python stuff rather than bake in a dependence on homebrew python.\n \nreply",
      "Is this patch possible to do on MLX? I'm getting better speeds on MLX. That, combined with your approach, would finally let Mac users have long conversations at usable speeds.\n \nreply",
      "Is this any different from using --cache-type-k and --cache-type-v?\n \nreply",
      "That\u2019s what I want to know!\n \nreply",
      "Are these significantly faster/better on 64GB or 128GB Apple silicon (over 36GB or 48GB)?I've been reading that large contexts and large models are just painfully slow, even on the fastest and largest Apple silicon that money can buy.So I wonder if this helps make more use of greater memory, or if really smallish models are still where it's at for Apple silicon, practically speaking.\n \nreply",
      "I'm curious: is it possible to apply differentiated KV quantization (like K8V4) to models after they're already converted to .gguf format, or does this require rebuilding the model with special support? If it's compatible with any .gguf file, are there any limitations on model types (e.g. Mistral, Phi-3, etc.) or tokenizer configs?\n \nreply",
      "Yes, that's one of the key benefits - KVSplit works with any existing .gguf model without requiring reconstruction or special conversion. The quantization happens at runtime on the KV cache, not during model loading or conversion.This works because the KV cache is created during inference as tokens are processed, completely separate from the model weights themselves. The --kvq-key and --kvq-val flags simply tell llama.cpp how to store these intermediate tensors in memory.I've tested it successfully with:- Llama-3 models\n- Mistral models\n- Phi-2/Phi-3\n- TinyLlama\n- Qwen variantsThe only limitation is that it requires llama.cpp's Metal backend, and you need to disable Flash Attention with -fa 0 since the current FA implementation in llama.cpp bypasses the custom KV cache format. The technique itself should work with any transformer architecture that uses a standard attention mechanism.\n \nreply",
      "I thought flash attention was required for quantised KV?\n \nreply",
      "Amazing!Curious, what happens to performance? I assume you still pay the same performance price for longer context, even if you can now fit it in memory.\n \nreply",
      "I think this is true, I've found I get roughly the same iteration speed for prompt processing no matter if the cache is fp16, q8 or q4.It doesn't make sense to me though, I haven't looked into how it works inside but I would've thought it would pack vectors and then do 4-8b simd on all of them at once, but it really seems like it's not packing em.\n \nreply"
    ],
    "link": "https://github.com/dipampaul17/KVSplit",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Run larger LLMs with longer contexts on Apple Silicon by using differentiated precision for KV cache quantization. KVSplit enables 8-bit keys & 4-bit values, reducing memory by 59% with <1% quality loss. Includes benchmarking, visualization, and one-command setup. Optimized for M1/M2/M3 Macs with Metal support.\n      Differentiated KV Cache Quantization for Apple Silicon\n\nRun larger context windows and heavier LLMs on your Mac by applying different quantization precision to keys vs values in the attention mechanism's KV cache. KVSplit enables you to:The installer will:Want to see the benefits immediately? Run a quick comparison with your model:This will show you a side-by-side comparison of FP16, K8V8, K8V4, K4V8, and K4V4 with memory usage, speed, and quality metrics.Using KVSplit doesn't just save memory\u2014it often improves inferenc",
    "summary": "**HackerNews Introduces KVSplit: Because Who Needs System Stability When You Can Have Longer Tweets?**\n\nA brave GitHub warrior introduces \"KVSplit\", a miraculous solution for running text models on Apple Silicon so long that even Tolstoy would get bored. The excited peanut gallery debates over esoteric technical nuances, showcasing an adorable mix of optimism and blissful ignorance about the implications of different cache types and patch steps. Meanwhile, a chorus of commenters erupt in tech support queries, flaunting their unique setups that mix homebrew Python with patchwork code like it\u2019s a craft beer festival. The phrase \ud83d\udc0d \"optimized for M1/M2/M3\" \ud83c\udf4e is thrown around as casually as diet advice at a fast food joint, promising users the thrilling experience of longer context windows, if only they dared to tread on the bleeding edge of kv quantization sorcery. Seriously, who needs stability when you could potentially click 'Run' and watch your shiny Mac turn into an expensive space heater? \ud83d\ude80\ud83d\udcbb"
  },
  {
    "title": "Thoughts on thinking (dcurt.is)",
    "points": 256,
    "submitter": "bradgessler",
    "submit_time": "2025-05-16T19:09:55 1747422595",
    "num_comments": 168,
    "comments_url": "https://news.ycombinator.com/item?id=44008843",
    "comments": [
      "I think we are going to be seeing a vast partitioning in society in the next months and years.The process of forming expressions just is the process of conceptual and rational articulation (as per Brandom). Those who misunderstand this -- believing that concepts are ready made, then encoded and decoded from permutations of tokens, or, worse, who have no room to think of reasoning or conceptualization at all -- they will be automated away.I don't mean that their jobs will be automated: I mean that they will cede sapience and resign to becoming robotic. A robot is just a \"person whose work or activities are entirely mechanical\" (https://www.etymonline.com/search?q=robot).I'm afraid far too many are captive to the ideology of productionism (which is just a corollary of consumerism). Creative activity is not about content production. The aim of our creation is communication and mutual-transformation. Generation of digital artifacts may be useful for these purposes, but most uses seem to assume content production is the point, and that is a dark, sad, dead end.\n \nreply",
      "Completely agree.From all of my observations, the impact of LLMs on human thought quality appears largely corrosive.I\u2019m very glad my kid\u2019s school has hardcore banned them. In some class they only allow students to turn in work that was done in class, under the direct observation of the teacher. There has also been a significant increase in \u201con paper\u201d work vs work done on computer.Lest you wonder \u201cwhat does this guy know anyways?\u201d, I\u2019ll share that I grew up in a household where both parents were professors of education.Understanding the effectiveness of different methods of learning (my dad literally taught Science Methods) were a frequent topic. Active learning (creating things using what you\u2019re learning about) is so much more effective than passive, reception oriented methods. I think LLMs largely are supporting the latter.\n \nreply",
      "Anyone who has learned a second language can tell you that you aren't proficient just by memorizing vocabulary and grammar. Having a conversation and forming sentences on the fly just feels different- either as a different skill or using a different part of the brain.I also don't think the nature of LLMs being a negative crutch is new knowledge per se; when I was in school, calculus class required a graphing calculator but the higher end models (TI-92 etc) that had symbolic equation solvers were also banned, for exactly the same reason. Having something that can give an answer for you fundamentally undermines the value of the exercise in the first place, and cripples your growth while you use it.\n \nreply",
      "Well I can extract a square root by hand. We all had to learn it and got tested on it.No one to day learns that anymore. The vast, vast majority have no idea and I don\u2019t think people are dumber because of it.That is to say, I think it\u2019s not cut-and-dried. I agree you need to learn something, but something\u2019s it\u2019s okay use a tool.\n \nreply",
      "Comparing extracting a square root my hand is rather different in scope than reducing / simplifying equations entirely. The TI-92 could basically do all of your coursework for you up to college level, if memory serves.The real question isn't \"is it okay to use a tool\" but \"how does using a tool affect what you learn\".In the cases of both LLMs and symbolic solving calculators, I believe the answer is \"highly detrimental\".\n \nreply",
      "I very much agree with your sentiment here.I tried to encapsulate that to some degree when writing something (perhaps poorly?) recently actually - https://smcleod.net/2025/03/the-democratisation-paradox-what...\n \nreply",
      "Same with drawing which is easy to teach, but hard to master because of the coordination between eyes and hand. You can trace a photograph, but that just bypass the whole point and you don\u2019t exercise any of the knowledge.\n \nreply",
      "Another case in point is that memorizing vocabularies and grammar, although could seem like an efficient way to learn a language, is incredibly unrewarding. I've been learning japanese from scratch, using only real speech to absorb new words, without using dictionaries and anything else much. The first feeling of reward came immediately when I learned that \"arigatou\" means thanks (although I terribly misheard how the word sounded, but hey, at least I heard it). Then after 6 month, when I could catch and understand some simple phrases. After 6-7 years I can understand about 80% of any given speech, which is still far, but I gotta say it was a good experience.With LLM's giving you ready-made answers I feel like it's the same. It's not as rewarding because you haven't obtained the answer yourself. Although it did feel rewarding when I was interrogating an LLM about how CSRF works and it said I asked a great question when I asked whether it only applies to forms because it seems like fetch has a different kind of browser protection.\n \nreply",
      "How much hours would you estimate did you watch (I assume it was video, not just audio) in those years? What kind of material? Just curious.\n \nreply",
      "> I\u2019m very glad my kid\u2019s school has hardcore banned them.What does that mean, I\u2019m curious?The schools and university I grew up in had a \u201csingle-sanction honor code\u201d which meant if you were caught lying or cheating even once you would be expelled. And you signed the honor code at the top of every test.My more progressive friends at other schools who didn\u2019t have an honor code happily poo-pooed it as a repugnantly harsh old fashioned standard. But I don\u2019t see a better way today of enforcing \u201cdon\u2019t use AI\u201d in schools, than it.\n \nreply"
    ],
    "link": "https://dcurt.is/thinking",
    "first_paragraph": "I have been stuck. Every time I sit down to write a blog post, code a feature, or start a project, I come to the same realization: in the context of AI, what I\u2019m doing is a waste of time. It\u2019s horrifying. The fun has been sucked out of the process of creation because nothing I make organically can compete with what AI already produces\u2014or soon will. All of my original thoughts feel like early drafts of better, more complete thoughts that simply haven\u2019t yet formed inside an LLM. I used to write prolifically. I\u2019d have ideas, write them down, massage them slowly and carefully into cohesive pieces of work over time, and then\u2013when they were ready\u2013share them with the world. I\u2019d obsess for hours before sharing anything, working through the strengths and weaknesses of my thinking. Early in my career, that process brought a lot of external validation. And because I think when I write, and writing is how I form opinions and work through holes in my arguments, my writing would lead to more and bet",
    "summary": "On dcurt.is, another digital soul cries into the void about the \"horrifying\" realization that AI could outthink him, leaving his creative juices as dry as his blog updates. \ud83e\udd16 The comments section, a veritable echo chamber of techno-dystopia, passionately argues that AIs are mind-eating zombies turning humans into \"mechanical\" nobodies, with links generously provided to back their advanced paranoia. Highlights include proud Luddites celebrating their children's AI-free education like badges of honor in a world gone digital-mad. Others wax poetic about the bygone days of root extraction, turning mathematics into a nostalgic relic rather than a discipline. Altogether, a grand symphony of modern anxieties playing to an audience who might just need to unplug for a bit. \ud83c\udf10"
  },
  {
    "title": "A Research Preview of Codex (openai.com)",
    "points": 363,
    "submitter": "meetpateltech",
    "submit_time": "2025-05-16T15:02:02 1747407722",
    "num_comments": 282,
    "comments_url": "https://news.ycombinator.com/item?id=44006345",
    "comments": [
      "Some engineers on my team at Assembled and I have been a part of the alpha test of Codex, and I'll say it's been quite impressive.We\u2019ve long used local agents like Cursor and Claude Code, so we didn\u2019t expect too much. But Codex shines in a few areas:Parallel task execution: You can batch dozens of small edits (refactors, tests, boilerplate) and run them concurrently without context juggling. It's super nice to run a bunch of tasks at the same time (something that's really hard to do in Cursor, Cline, etc.)It kind of feels like a junior engineer on steroids, you just need to point it at a file or function, specify the change, and it scaffolds out most of a PR. You still need to do a lot of work to get it production ready, but it's as if you have an infinite number of junior engineers at your disposal now all working on different things.Model quality is good, but hard to say it's that much better than other models. In side-by-side tests with Cursor + Gemini 2.5-pro, naming, style and logic are relatively indistinguishable, so quality meets our bar but doesn\u2019t yet exceed it.\n \nreply",
      "If you aren't hiring junior engineers to do these kinds of things, where do you think the senior engineers you need in the future will come from?My kid recently graduated from a very good school with a degree in computer science and what she's told me about the job market is scary. It seems that, relatively speaking, there's a lot of postings for senior engineers and very little for new grads.My employer has hired recently and the flood of resumes after posting for a relatively low level position was nuts. There was just no hope of giving each candidate a fair chance and that really sucks.My kid's classmates who did find work did it mostly through personal connections.\n \nreply",
      "Hiring of juniors is basically dead these days and it has been like this for about 10 years and I hate it. I remember when I was a junior in 2014 there were actually startups who would hire cohorts of juniors (like 10 at a time, fresh out of CS degree sort of folks with almost no applied coding experience) and then train them up to senior for a few years, and then a small number will stay and the rest will go elsewhere and the company will hire their next batch of juniors. Now no one does this, everyone wants a senior no matter how simple the task. This has caused everyone in the industry to stuff their resume, so you end up in a situation where companies are looking for 10 years of experience in ecosystems that are only 5 years old.That said, back in the early 00s there was much more of a culture of everyone is expected to be self-taught and doing real web dev probably before they even get to college, so by the time they graduate they are in reality quite senior. This was true for me and a lot of my friends, but I feel like these days there are many CS grads who haven't done a lot of applied stuff. But at the same time, to be fair, this was a way easier task in the early 00s because if you knew JS/HTML/CSS/SQL, C++ and maybe some .NET language that was pretty much it you could do everything (there were virtually no frameworks), now there are thousands of frameworks and languages and ecosystems and you could spend 5+ years learning any one of them. It is no longer possible for one person to learn all of tech, people are much more specialized these days.But I agree that eventually someone is going to have to start hiring juniors again or there will be no seniors.\n \nreply",
      "I recently read an article about the US having a relatively weak occupational training.To contrast, CH and GER are known to have very robust and regulated apprenticeship programs. Meaning you start working at a much earlier age (16) and go to vocational school at the same time for about 4 years. This path is then supported with all kinds of educational stepping stones later down the line.There are many software developers who went that route in CH for example, starting with an application development apprenticeship, then getting to technical college in their mid 20's and so on.I think this model has a lot of advantages. University is for kids who like school and the academic approach to learning. Apprenticeships plus further education or an autodidactic path then casts a much broader net, where you learn practical skills much earlier.There are several advantages and disadvantages of both paths. In summary I think the academic path provides deeper CS knowledge which can be a force multiplier. The apprenticeship path leads to earlier high productivity and pragmatism.My opinion is that in combination, both being strongly supported paths, creates more opportunities for people and strengthens the economy as a whole.\n \nreply",
      "I know about this system, but I am not convinced it can work in such a dynamic field as software. When tools change all the time, you need strong fundamentals to stay afloat - which is what universities provide.Vocational training focusing on immediate fit for the market is great for companies that want to extract maximal immediate value from labour for minimal cost, but longer term is not good for engineers themselves.\n \nreply",
      "Some of this relates to a culture of job-hopping.  It seems uncommon these days to stick around at a company for many years.If your next hire is only going to stay for 1-2 years, it doesn\u2019t make sense to hire a junior team member and invest in their growth.\n \nreply",
      "> But at the same time, to be fair, this was a way easier task in the early 00sThe best junior I've hired was a big contributor to an open source library we were starting to use.I think there's still lots of opportunity for honing your skill, and showing it off, outside of schools.\n \nreply",
      "This is a bit of a game theory problem. \"Training senior engineers\" is an expensive and thankless task: you bear essentially all the cost, and most of the total benefit accrues to others as a positive externality. Griping at companies that they should undertake to provide this positive externality isn't really a constructive solution.I think some people are betting on the fact that AI can replace junior devs in 2-5 years and seniors in 10-20, when the old ones are largely gone. But that's sort of beside the point as far as most corporate decision-making.\n \nreply",
      "This hyper-fixation on replacing engineers in writing code is hilarious, and dangerous, to me. Many people, even in tech companies, have no idea how software is built, maintained, and run.I think instead we should focus on getting rid of managers and product owners.\n \nreply",
      "The people who will come out the other side are domain focused people with the engineering chops to understand the system end to end, and the customer skills to understand what needs to be built.\n \nreply"
    ],
    "link": "https://openai.com/index/introducing-codex/",
    "first_paragraph": "",
    "summary": "**Today in Silicon Valley Puppetry:** OpenAI unleashes Codex, because who needs <em>pesky</em> junior engineers when you can have an *army* of virtual code monkeys? Early users are dazzled, mostly because they've forgotten the charm of human error and the thrill of mentoring real-life, coffee-fetching juniors. Comment sections turn into nostalgic tech utopias where seniors reminisce about the good old days of hiring freshmen, now replaced by debates on whether AI will take their jobs before they manage to pay off student loans. Meanwhile, every commenter agrees on one thing: this shiny new tool is cool, but still can't decide what to order for lunch. \ud83e\udd16\ud83d\udc94"
  },
  {
    "title": "Rustls Server-Side Performance (memorysafety.org)",
    "points": 40,
    "submitter": "jaas",
    "submit_time": "2025-05-13T13:22:36 1747142556",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=43972669",
    "comments": [
      "I'm not a Rust guy and I probably won't be any time soon, but Rustls is such an exciting project in my eyes. Projects like BoringSSL are cool and noble in their intentions, but having something that's not just a hygienic codebase but an implicitly safer one feels deeply satisfying. I'm eagerly looking forward to this finding its way into production use cases.\n \nreply",
      "Also in referent news: \"The State of TLS Stacks\" by HAProxy devs https://www.haproxy.com/blog/state-of-ssl-stacks https://news.ycombinator.com/item?id=43912164TLDR OpenSSL days seem to be coming to an end, but Rustls C bindings add not production ready yet.\n \nreply",
      "It's blazingly fast.\n \nreply"
    ],
    "link": "https://www.memorysafety.org/blog/rustls-server-perf/",
    "first_paragraph": "Dirkjan OchtmanMay 13, 2025In past years, the Rustls project has been happy to receive substantial investments from the ISRG. One of our goals has been to improve performance without compromising on safety. We last posted about our performance improvements in October of 2024, and we're back to talk about another round of improvements.Rustls is a memory safe TLS implementation with a focus on performance. It is production ready and used in a wide range of applications. You can read more about its history on Wikipedia.It comes with a C API and FIPS support so that we can bring both memory safety and performance to a broad range of existing programs. This is important because OpenSSL and its derivatives, widely used across the Internet, have a long history of memory safety vulnerabilities with more being found this year. It's time for the Internet to move away from C-based TLS.In our previous post we looked at handshake latency and traffic throughput for connections on the client and the ",
    "summary": "**The Eternal March of Rustls to Save the Internet**\n\nDirkjan and friends have graciously returned to enlighten the masses on Rustls, the savior of memory safety that nobody asked for but everyone apparently needs. The latest blog post painstakingly details new performance tweaks, presumably to keep the three users who've switched from OpenSSL engaged. A commenter, who's \"not a Rust guy,\" showers unwarranted praise on Rustls for being \"exciting,\" while another chirps about its blistering speed\u2014a likely tale. Meanwhile, as the internet struggles to remember what Rustls even is, we're reminded that the OpenSSL apocalypse is nigh, but don't fret, Rustls' C API still isn\u2019t production-ready. \ud83c\udf89\ud83d\udd12\ud83d\udc22"
  },
  {
    "title": "WebGL Gray-Scott Explorer (2012) (mrob.com)",
    "points": 5,
    "submitter": "joebig",
    "submit_time": "2025-05-17T00:46:24 1747442784",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "http://www.mrob.com/pub/comp/xmorphia/ogl/index.html",
    "first_paragraph": "\n        The Gray-Scott equations can produce most of the types of patterns\n        that are possible in reaction-diffusion systems. For a complete\n        description of Gray-Scott patterns, with many examples and videos,\n        go to my Xmorphia Gray-Scott page.\n      \n\n\n\n\n\n\n        Feed rate F:\n        \n\n        \n        Decay rate k:\n        \n\n        Colours:\n        \n\n          Import/Export:\n\n\n\n\n\nUse the mouse to draw in the large image area. Alternate\n      clicks paint \"high-U\" (red in the default colours) or\n      \"low-U\" (blue).The init button makes the pattern blank, or random. Click it\n      multiple times until you get what you want.Use the list of presets to see examples of patterns from the\n      wide diversity of types available. Each preset has a\n      classification (usually a Greek letter); these are explained on\n      the separate page \n      Pearson's Classification (Extended) of Gray-Scott System\n      Parameter Values.You may also change F, k directly with the\n",
    "summary": "Today in the world of people with too much time on their hands: the <i>WebGL Gray-Scott Explorer</i> lets armchair scientists pretend they're unlocking the mysteries of dynamic systems by clicking red and blue spots on a screen. \ud83c\udfa8 If you feel too productive today, why not adjust the \"Feed rate\" and \"Decay rate\" and watch paint (not) dry in real-time! The enthusiastic comments section features amateurs debating over the optimal values of F and k, as if tweaking these parameters will somehow earn them a Nobel Prize in Chemistry. Click \"init\" multiple times to simulate what having a fresh start really feels like after wasting hours on this. \ud83d\udd04"
  },
  {
    "title": "They Were Identical 'Twinnies' Who Charmed Orwell, Camus and More (nytimes.com)",
    "points": 17,
    "submitter": "lermontov",
    "submit_time": "2025-05-16T23:18:41 1747437521",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=44010659",
    "comments": [
      "https://archive.ph/lMAj6",
      "So this is just an ad for a book.\n \nreply"
    ],
    "link": "https://www.nytimes.com/2025/05/04/books/review/the-dazzling-paget-sisters-ariane-bankes.html",
    "first_paragraph": "",
    "summary": "In a stunning display of journalistic innovation, the <i>New York Times</i> catapults societal progress backwards by decades, dedicating precious column inches to \"identical 'twinnies'\" who once charmed some old literary dudes. The article, a thinly veiled advertisement for yet another book no one needed, is lauded by commenters who seem to think the reprinting of a high school diary constitutes peak culture. Together, they reminisce about the good old days, when name-dropping existentialists in casual conversation was still in vogue. Truly, a historic day for fans of irrelevance everywhere. \ud83d\ude44"
  },
  {
    "title": "ClojureScript 1.12.42 (clojurescript.org)",
    "points": 92,
    "submitter": "Borkdude",
    "submit_time": "2025-05-16T20:20:20 1747426820",
    "num_comments": 17,
    "comments_url": "https://news.ycombinator.com/item?id=44009464",
    "comments": [
      "> We are working on restoring that original stability. With this release, you\u2019ll find that quite a few old ClojureScript libraries work again today as well as they did 14 years ago.> ClojureScript is and never was only just for rich web applications. Even in the post React-world, a large portion of the web is (sensibly) still using jQuery. If you need robust DOM manipulation, internationalization, date/time handling, color value manipulation, mathematics, programmatic animation, browser history management, accessibility support, graphics, and much more, all without committing to a framework and without bloating your final JavaScript artifact - ClojureScript is a one stop shop.\n \nreply",
      "From the outside (I haven't tried it), committing to ClojureScript for an application looks very similar to committing to a framework - it's a heavy influence in how you will write code.\n \nreply",
      "I daresay ClojureScript typically has a significant influence, but it's more social than technical. Many of the examples and tutorials are going to favor a certain style, and people who choose ClojureScript mostly do so because they like Clojure.But if you want to do tons of JavaScript interop, you can. If you want to adopt some syntax, you can (through macros). If you want to use jQuery directly, you can. If you want to use a React wrapper, you can. There's not really technical limits pushing you toward a style or architecture, although you still have the underlying limits of JavaScript and the runtime environment.\n \nreply",
      "I'm curious as to how you think this is different from say, committing to JavaScript/BundlerX/NPM or TypeScript/BundlerX/NPM? Surely those have an equally heavy influence on how you write code?\n \nreply",
      "One of my favorite things about the JVM ecosystem is how stable it is. A 5-year-old library will almost certainly Just Work. And Clojure very much follows the same spirit. There's a lot of great, useful libraries that haven't been updated in years... not because they've been abandoned but because they're _done_ and just don't require active maintenance.Immutability as a cultural value, not just a data structure.\n \nreply",
      "I wrote about one under-appreciated and still-relevant use case for Google Closure Library a while back here: https://news.ycombinator.com/item?id=41397235 - reposting it here!> If you want a rich text editor that truly is Gmail's compose editor as it has existed for the past decade - that emits the same structures that Gmail would, handles copy-pasted rich text the same way Gmail does, has the same behavior in typing inside links etc... which is especially useful if you're building an email client that Gmail users need to feel familiar on every keystroke... then following https://github.com/google/closure-library/blob/master/closur... line-for-line is still the gold standard, because it grew from the same codebase as Gmail.> I've had great success at a previous startup referencing a prebuilt Closure Library from a modern ES6+ codebase and creating a React-friendly wrapper around the editor component, and using this to power an email templating experience. Ironically, I'm within weeks of needing to do it again, thanks to Zawinski's Law https://en.wikipedia.org/wiki/Jamie_Zawinski#Zawinski's_Law - \"Every program attempts to expand until it can read mail. Those programs which cannot so expand are replaced by ones which can.\" I'll give you one guess what I'll be reaching for, archived or not.> Others have more context on the history and have written more detailed obituaries - but it's a true testament to the engineers that worked on it, that a library can be so ahead of its time that it's still an industry-leading experience [15] years after its initial release.I'm happy to see that it's being maintained! (And that project where I was planning to use it again got delayed, but it might be on deck soon!)\n \nreply",
      "Is it being maintained? From the README:> Closure Library has been archived. We no longer see it as meeting the needs of modern JavaScript development, and we recommend that users look for alternative solutions.Edit: ah I see that the Clojure folks are going to take that up. I missed that!\n \nreply",
      "While the level of commitment to backwards compatibility is commendable, I had hoped this would trigger dropping GCL instead of forking it.My surface level understanding is that GCL is a big reason why 3rd party libraries are a huge pain to use in Clojurescript.Of course this would have went completely against the project\u2019s goals, so it was never going to happen.\n \nreply",
      "At this point dropping GCL would be a breaking change. Many, many libraries rely on it.> My surface level understanding is that GCL is a big reason why 3rd party libraries are a huge pain to use in Clojurescript.I'm sure what \"huge pain\" your referring to, but I'm guessing it's dealing with name munging when externs aren't readily available. That comes from the compiler, not the library, and can be annoying. Mainly you have to make sure you reference things in ways that won't get mangled by the compiler (get x \"foo\") instead of (get x :foo). If you want to escape that you can always turn of advanced optimizations.\n \nreply",
      "I think you are conflating the Closure Library with the Closure Compiler.  They are related but not identical.  The Compiler, I think, is what makes it difficult to use externs; its \u201cadvanced optimizations\u201d can and often does break libraries that weren\u2019t written with the Compiler\u2019s quirks in mind.  But advanced optimizations is an option; if you don\u2019t need aggressive minification, function body inlining, etc. you can opt out.Shadow CLJS has made working with external libraries quite easy and IIRC it lets you set the compilation options for your libraries declaratively.\n \nreply"
    ],
    "link": "https://clojurescript.org/news/2025-05-16-release",
    "first_paragraph": "16 May 2025\nClojureScript TeamWe\u2019re happy to announce a new release of ClojureScript. If you\u2019re an existing\nuser of ClojureScript please read over the following release notes carefully.This release features two significant dependency changes. First, Google Closure\nCompiler has been updated to v20250402. This change makes Java 21 a\nrequirement for ClojureScript. The other significant change is that this release\nnow depends on the Clojure fork of Google Closure Library. Please read on for\nmore details about these changes.For a complete list of fixes, changes, and enhancements to\nClojureScript see\nhereLast year we noted that updating Google Closure Compiler would mean losing Java\n8 support. Google Closure now requires Java 21. From our perspective this change\ndoesn\u2019t seem strictly necessary, but Google is a large organization and this\nchange is likely to due to internal requirements which are hard to influence from\nthe outside. The general enthusiasm in the Clojure community around adopti",
    "summary": "**Hacker News Breaks Out Ancient Artifacts: The Return of ClojureScript and Java 21**\n\nIn an exciting display of technological necromancy, the ClojureScript team summons the spirit of Java 21 and an undead Google Closure Library to haunt their latest release. Commenters dive headfirst into the nostalgia cesspool, reminiscing about the glory days of yore when libraries were just _finished_ instead of updated. A brave soul dares to compare Clojure's commitment phobia with other JavaScript frameworks, highlighting the revolutionary concept that you can, indeed, write code in different styles (shocker!). The crowd's enthusiasm shows no bounds as they dissect the difference between the Closure Compiler and Library, with all the excitement of watching paint dry. \ud83c\udf89\ud83e\uddd9\u200d\u2642\ufe0f\ud83d\udcbe"
  },
  {
    "title": "Show HN: Merliot \u2013 plugging physical devices into LLMs (github.com/merliot)",
    "points": 3,
    "submitter": "sfeldma",
    "submit_time": "2025-05-17T01:09:38 1747444178",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://github.com/merliot/hub",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Merliot Device Hub\n      \n\n\n\nMerliot Hub is an\nAI-integrated device hub.What does that mean?  It means you can control and interact with your physical\ndevices, your security cameras, your thermometer, seamlessly using natural\nlanguage from an LLM host such as Claude Desktop\nor Cursor.  The hub is a gateway between AI and the\nphysical world.What could go wrong?Which devices?  Sorry, not any of the consumer-grade Smart devices such as\nSmart security cameras, Smart lights, and Smart thermostats.  Merliot Hub only\nsupports devices you build.  You build devices from hobby-grade components\nwhich are readily available, like Raspberry Pis, Arduinos, buttons, relays, and\nsensors.  You need maker-level skills to build the devices.  The hub includes a\nparts list and instructions for building each device.  There is no software to\nwrite; the hub",
    "summary": "Title: Show HN: Merliot \u2013 because plugging everyday items directly into Skynet is *obviously* what the world needs\n\nIn the latest episode of \"Hackers Paradise,\" we're introduced to Merliot, a mystical device that attempts to bridge the vast, uncrossed chasm between AI and every random piece of electronic junk you have lying in your garage. The creators, in a haunting tone reminiscent of every techno-thriller disaster, assure us that _nothing_ could possibly go wrong as you chat with your toaster via your latest AI friend. Commenters are gleefully swapping notes on whether their homemade blinking LED can best be used as a disco light or an alien communication device, blissfully ignoring the tiny, insignificant detail that consumer-level stability is a pipe dream. Get ready to dust off that electrical engineering degree you definitely have lying around, because Merliot doesn't use puny \"consumer-grade\" tech! \ud83e\udd16\ud83d\udd27"
  },
  {
    "title": "Coding agent in 94 lines of Ruby (radanskoric.com)",
    "points": 46,
    "submitter": "radanskoric",
    "submit_time": "2025-05-14T14:17:57 1747232277",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=43984860",
    "comments": [
      "> it's only 400 lines of Rubyalso the article:> it uses RubyLLM(which itself is a lot more code added to 400 lines claimed by the author).> Ruby leads to programmer happiness...Am I the only one who finds Ruby code cryptic and less clear than JS, Python, and Rust?As a person who's dabbled a bit in Rust and Ruby, I'm surprised people find Ruby intuitive and simple. For example:> def execute(path:)why the \"incomplete\" colon?> module Tools>   class ListFiles < RubyLLM::Toolwhat's with the \"<\"?>     param :command, desc: \"The command to execute\"again, the colons are confusing...\n \nreply",
      "This reminds me about PHP hello world programs which would take a string from GET, use it as a path, read a file from this path, and return the content in the response.\nYou could make a website while not using any knowledge about websites.Agents are the new PHP scripts!\n \nreply",
      "RubyLLM has been a joy to work with so nice to see it\u2019s being used here. This project is also great and will make it easier to build an agent that can fetch data outside of the codebase for context and/or experiment with different system prompts. I\u2019ve been a personal fan of claude code but this will be fun to work with\n \nreply",
      "This is very cool, somewhat inspiring, and (personally) very informative: I didn't actually know what \"agentic\" AI use was, but this did an excellent job (incidentally!) explaining it.Might poke around...What makes something a good potential tool, if the shell command can (technically) can do anything - like running tests?(or it is just the things requiring user permission vs not?)\n \nreply",
      "> What makes something a good potential tool, if the shell command can (technically) can do anything - like running tests?Think of it as -semantic- wrappers so the LLM can -decide- what action to take at any given moment given its context, the user prompt, and available tools names and descriptions.creating wrappers for the most used basic tools even if they all pipe to terminal unix commands can be useful.also giving it speicif knowledge base it can consult on demand like a wiki of its own stack etc\n \nreply",
      "Also it\u2019s safer than just giving unrestricted shell access to an LLM.\n \nreply"
    ],
    "link": "https://radanskoric.com/articles/coding-agent-in-ruby",
    "first_paragraph": "Software development, mostly Ruby\u201cIt\u2019s not that hard to build a fully functioning, code-editing agent.\u201dThorsten BallAn article floated into my reading list: How to Build an Agent, or: The Emperor Has No Clothes. The author, Thorsten Ball, claims building a coding agent isn\u2019t hard, then builds one in ~400 lines of Go. While reading the code, I kept thinking that a lot of it is boilerplate. My keen suspicion received confirmation when the author wrote: \u201c\u2026 most of which is boilerplate\u201d.Boilerplate? Ruby excels at eliminating boilerplate, leaving just the essence. I thought: creating this in Ruby must be even more straightforward. So I tried it. And straightforward it was!Doing the exercise in Ruby gave me two interesting realisations which I\u2019ll share at the end of the article.The good news is that the end of this article really isn\u2019t far because of how straightforward the agent was! This is some top notch drama here.Interested in trying out the final agent? Find the full code on GitHub: r",
    "summary": "**Hacker News Rediscovered Minimalism, Now With More Ruby!**\n\nIn a breathtaking display of originality that will surely redefine the confines of software engineering, a heroic Ruby enthusiast tackles the arduous task of converting a \"whopping\" 400-line Go coding agent into a mere 94 lines of what is unmistakably code. Hacker News commenters, in an exhibition of unmatched expertise, fiercely debate the clarity of Ruby syntax using their favorite battleground: confused emoji-laden comments about colons and inheritance symbols. Some praise Ruby's ability to spark \"programmer happiness,\" while others, clinging to the philosophical depths of Stack Overflow debates, question this dubious euphoria. Dive into the code on GitHub, but beware\u2014this radical reduction in line count may just be the most excitement you'll get today. \ud83c\udf89\ud83d\udc68\u200d\ud83d\udcbb\ud83d\udd25"
  },
  {
    "title": "MIT asks arXiv to withdraw preprint of paper on AI and scientific discovery (economics.mit.edu)",
    "points": 226,
    "submitter": "carabiner",
    "submit_time": "2025-05-16T15:09:25 1747408165",
    "num_comments": 122,
    "comments_url": "https://news.ycombinator.com/item?id=44006426",
    "comments": [
      "> Our understanding is that only authors of papers appearing on arXiv can submit withdrawal requests.  We have directed the author to submit such a request, but to date, the author has not done so.Between this and the subtle reference to \u201cformer second-year PhD student\u201d it makes sense that they\u2019d have to make a public statement.They do a good job of toeing the required line of privacy while also giving enough information to see what\u2019s going on.I wonder if the author thought they could leave the paper up and ride it into a new position while telling a story about voluntarily choosing to leave MIT. They probably didn\u2019t expect MIT to make a public statement about the paper and turn it into a far bigger news story than it would have been if the author quietly retracted it.\n \nreply",
      "Seeing as how the author has signed in with an account whose email address is username@mit.edu, MIT could just take over the account.Edit: this comment was only partially serious, not meant as legal advice to MIT.\n \nreply",
      "That's not how it works in the real world. That would be a fraudulent request and I suspect they'd invite legal trouble by impersonating someone else to access a computer system.Furthermore, if the author could demonstrate to arXiv that the request was fraudulent, the paper would be reinstated. The narrative would also switch to people being angry at MIT for impersonating a student to do something.\n \nreply",
      "I've done it for people who used my email to sign up for Facebook and Instagram. Presumably now they have a more rigorous verification flow but they used to let people use any email without checking. I can't have a potential criminal using a social account connected to me, so password reset and disable the account is the only rational solution. Obviously this is slightly more problematic for an institution.\n \nreply",
      ">That's not how it works in the real world. That would be a fraudulent request and I suspect they'd invite legal trouble by impersonating someone else to access a computer system.Emails are not people. You can impersonate a person, but you can't impersonate an email. If I own a company and I issue the email dick.less@privateequity.com but then have to fire him... using this email address to transfer company assets back to someone who can be responsible for them isn't fraud (for that purpose, at least). How is this not the same issue?\n \nreply",
      "This would be a coherent argument if the paper was submitted by an email address. Instead the paper was submitted by a person. The email address serves to identify the person. Only the person can redact the paper.\n \nreply",
      "If you misrepresent that you are dick.less then yes that would be fraud. They say only the authors can submit withdrawal requests, so you would have to present yourself as the author even though you aren't. That's fraud.\n \nreply",
      "> How is this not the same issue?Although not explicitly stated, i read previous comments as using dick.less@privateequity.com to cancel his personal Netflix account. (Let's say that privateequity.com allowed personal usage of company email.)I see a difference between accessing an email account and impersonating the previous account holder.\n \nreply",
      "Are you referring to an email address or an email message here?\n \nreply",
      "That kind of thing might lead to arXiv not accepting any more papers from MIT, or at least any more takedowns.\n \nreply"
    ],
    "link": "https://economics.mit.edu/news/assuring-accurate-research-record",
    "first_paragraph": "MIT\nMIT\nFollowing the posting of the preprint paper \u201cArtificial Intelligence, Scientific Discovery, and Product Innovation\u201d on arXiv in November 2024, concerns were raised about the integrity of the research. MIT conducted an internal, confidential review and\u00a0concluded that the paper should be withdrawn from public discourse.In an effort to correct the research record, MIT has contacted arXiv\u00a0to formally request that the paper be withdrawn\u00a0and\u00a0The\u00a0Quarterly Journal of Economics, where it had been submitted. The letter on behalf of the Committee on Discipline\u00a0to arXiv\u00a0states:\"Earlier this year, the COD conducted a confidential internal review based upon allegations it received regarding certain aspects of this paper.\u00a0 While\u00a0student privacy laws and MIT policy prohibit the disclosure of the outcome of this review, we are writing to inform you that MIT has no confidence in the provenance, reliability or validity of the data and has no confidence in the veracity of the research\u00a0contained i",
    "summary": "**MIT Tricks Reddit into Doing Ethics Homework**\n\nMIT, in a stroke of uncharacteristic transparency, requests the withdrawal of an AI paper from arXiv, citing the shady corners of academic integrity \u2014 or their sudden discovery of it. Commenters, furious with the lack of juicy details and hungry for drama, speculate wildly and suggest borderline-illegal hacks. Armchair lawyers and philosophers argue fervently about whether you can, in fact, *impersonate* an email address, in threadbare discussions that redefine the boundaries of missing the point. Meanwhile, the ignored PhD student plots their cinematic revenge, presumably scripting an AI-generated blockbuster where MIT's next paper is *actually* about ethics."
  },
  {
    "title": "I'm Peter Roberts, immigration attorney, who does work for YC and startups. AMA",
    "points": 176,
    "submitter": "proberts",
    "submit_time": "2025-05-16T15:05:32 1747407932",
    "num_comments": 341,
    "comments_url": "https://news.ycombinator.com/item?id=44006381",
    "comments": [
      "If an individual is transgender, not a US citizen, and has a passport with an updated gender marker (or X), can they still get a visa? Or is submitting an official document with \"wrong information\" enough for a refusal?What about existing visas?\n \nreply",
      "The short answer is Yes, this individual can still get a U.S. visa. But I'd still recommend that this person speak with an attorney before applying for a visa or traveling to the U.S.\n \nreply",
      "Hi Peter, I am a naturalized US citizen (via employment sponsored H1B to Green Card route). Prior to obtaining my citizenship I held an F1 visa to complete my PhD, and may have overstayed in the US at the end of my studies (I am not sure, this was 15+ years ago). This was never raised as an issue when I applied for my H1B, Green Card or citizenship, but is it something that could become an issue for me now if I travel as a US citizen and attempt to return to the US? Is there anything I can do proactively to address this if it is likely to be a problem? Thank you.\n \nreply",
      "Almost certainly, even if you did overstay, it's not an issue but for peace of mind, you should speak with an attorney because it sounds like you didn't overstay in a way that would have impacted your H-1B, green card, or citizenship applications. (F-1 students are admitted until D/S - duration of status - so they almost never considered overstays.)\n \nreply",
      "I'm a Canadian software developer who'd like to join an American startup so naturally I've been applying to a bunch of jobs. More specifically, I'm looking to go with TN visa.In most job applications, I need to answer the two following questions 1) Are you legally authorized to work in the US? and 2) Will you now or in the future require sponsorship? I'm looking for advice on how I should be answering these questions.For example, I believe I should technically be answering NO to 1) and YES to 2), but I'm slightly unsure about this.I've heard recently that some Canadians actually recommend answering YES to 1) as getting a TN visa is very simple and not too much harder than just hiring an American. The idea is that when you answer NO to 1) that recruiters (and especially startups who are often more naive about visas) will lump you in as being hard to hire like immigrants who come to the US on the H1B and then filter out your application.As for question 2), because the TN is a \"Nonimmigrant\" visa, does this technically mean I can answer NO here?Basically in summary, how would you recommend I answer these questions? I don't want my applications to get auto filtered, but I'd also like to be as honest as possible.\n \nreply",
      "Hi, I just spent 2 months interviewing and hiring candidates for 4 open (remote) eng positions at a US startup. Answering \"Yes\" to 1 when you don't have a green card or US citizenship would be a way to guarantee that I would rescind your offer and make a mental note to never trust you. I don't think you should do that.We actually hired some Canadian talent -- we just used an EOR in Canada. The EOR cost us about $600 a month per head as their cut, but it was worth it to get the excellent developers we have through that deal.The reason why some/many firms would filter out anyone saying NO to (1) is that getting a visa sponsored requires significant work of a specialized nature and our company certainly is not equipped to do that because we don't have people who have the time and skills to deal with the insane demands of our government to obtain the necessary document (This is not a new or partisan issue btw, I remember losing a great developer in the Obama years due to the feds giving her the run-around).\n \nreply",
      "TN is not a visa and all you need to get this status is a job offer. There's really no work of any specialized nature but some companies do get legal advice to help streamline the process and get better outcomes like reducing the probability that the person would be denied.(EDIT: it is sometimes referred to a visa and sometimes as a status but at any rate as someone who had TN status with two different US startups there was very little process around it)\n \nreply",
      "Brief reading of reddit posts by people who actually did this almost always included that the company's lawyers wrote them letters and prepared packets of materials for them to provide CBP. We don't have any lawyers. We're simply not employing people who don't have green cards. We don't have time or money to play games with the government.One important thing in seeking TN status is that the title of degree matters immensely to your employability, which goes entirely against what I stand for, as if you have a degree in economics or no degree but do a great job of writing code, I'd want to hire you. The law contains vagaries and there is a \"memo\" which suggests that they use common sense, but it's all up to a random border guard who might not know any of that to interpret everything.Anyway, you're not automatically legally allowed to work in the US and lying about it won't help. We can agree to disagree on whether we \"should\" deal with all that stuff or if we're missing out, but lying to get halfway in the door is the worst way to change an employer's mind, especially in this economy when plenty of domestic candidates are available.\n \nreply",
      "I agree with you about the dishonesty of saying yes (as I replied in another comment).That said this is a choice you're making from what sounds like more religious reasons. Your company and your choice but it's not hard to employ TNs in a startup (and I know because I had TN status with two startups so I'm a little ahead of \"brief reading of reddit posts\").TN status can also be applied for in advance by the way, doesn't have to be at the border. This wasn't an option when I had TN status but now it is.\n \nreply",
      "While I was only speaking in hypotheticals about companies that only want to hire people who have legal status (no one has asked us to help them get TN status), I'd rather do zero paperwork by hiring people with existing status, than (allegedly) \"not hard\" work to support TN hopefuls, especially given the US government is liable these days to randomly change things around and cause chaos - especially in areas likely to score political points like immigration. POTUS could declare tomorrow that every TN (in a certain industry? state? whatever) has to go home in 10 days.My attitude would certainly change though, if/when we can't find skilled people with existing work authorization, or if I had an incredibly strong personal referral.\n \nreply"
    ],
    "link": "item?id=44006381",
    "first_paragraph": "",
    "summary": "**Immigration Ironies: Ask Your Local YC Lawyer!**\n\nIn this week's thrilling installment, <em>Peter the Mighty Immigration Lawyer</em> braves the wilds of Reddit to elucidate the confounding enigmas of U.S. immigration, responding mostly with the groundbreaking advice: \"consult an attorney.\" The commenters, each desperately clawing for a crumb of personalized legal wisdom, lay out their qualifications and visa woes, likely mistaking Reddit for a free consultation booth. One high-minded tech hopeful juggles with the ethics of checkboxes, debating whether honesty is truly the best policy when facing the harsh realities of U.S. immigration forms. Meanwhile, an insurgence of startup gurus and seasoned TN visa holders weigh in, illustrating the apparently colossal revelation that answering \"yes\" to an online form can be both misleading and career-threatening. Oh, and if you're Canadian, maybe just work remotely, eh? \ud83e\udd37\u200d\u2642\ufe0f"
  },
  {
    "title": "X X^t can be faster (arxiv.org)",
    "points": 156,
    "submitter": "robinhouston",
    "submit_time": "2025-05-16T15:45:30 1747410330",
    "num_comments": 46,
    "comments_url": "https://news.ycombinator.com/item?id=44006824",
    "comments": [
      "I wish they could have modeled memory cache movements as well, somehow. It would have made the analysis more difficult but often these large matrix algorithms live or die by how cache-friendly the memory access patterns are.Splitting into 4x4 blocks is typically very nice, though. Maybe it doesn\u2019t matter so much to practical runtime.\n \nreply",
      "I wish cache analysis was exposed more broadly everywhere. Everyone I deal with seems to understand and know how to think about it, but best practices seem to be wrapped up in a lot of heuristics.I am aware of being able use hardware counters for profiling systems, but the more fine-grained exposure of what's happening at a lower level seems to be just hidden... Or I haven't found the right reference resource yet.\n \nreply",
      "Are there researchers interested in accelerating these algorithms while also keeping the maximum accuracy of the results ? This and others optimizations are trading less multiplication for more additions, but from the little I know, on floating point additions and subtractions are risky precision wise, while multiplications are harmless. Also using FMA fused multiply add operations would be beneficial.\n \nreply",
      "Additions are ok, it's subtraction when they might be close in value that is deadly.\n \nreply",
      "additions arent strictly ok. if the two addends arent close together in magnitude, then one of them is going to lose some bits\n \nreply",
      "> while also keeping the maximum accuracy of the resultsAll of these papers/algos are for the ML hype-train. ML algos are approximate anyway so no one cares about absolute accuracy, only the precision of the overall pipeline (class labels shouldn't change, at least not too much). Consider that very many papers/techniques quantize down to 8 or even 4 bits (yes sometimes even during training) for the purposes of perf.This whole research area should just be renamed to something like approximate computing so that people don't confuse it (and the goals) with classical numerical analysis.\n \nreply",
      "I get your point, neural networks could be some kind of black boxes and how the sequence of operations evolves might not be so dependent on the accuracy of each operations -- at least, it would be a good intuition to believe \"accuracy at each step matters\" but it's not rigorously proven ? We could empirically check this by training a neural net and adding some random noise at each step\n \nreply",
      "Surely nobody is tiling 4x4 blocks for ML training\n \nreply",
      "Why surely? Eg on GPU style chips today you'd tile to warpsize (or half or something like that) to target warp cooperative primitives (so called tensor cores). On AMD and NV that's like 16x16 or 32x32 depending on the data type. That's not that far from 4x4 and it's not like all chips in the world have 32-lane warps. Anyway if a trick is good enough and people start trying to shoehorn it into everything (not saying this one is) then the next gen (or the one after that or after) will just have units to support the trick (it's an expensive way to gain ground on mlperf rankings).\n \nreply",
      "The question of stability of the algorithm is interesting, the paper does not seem to discuss it though. You are correct that we should expect the algorithms to deliver different results.>This and others optimizations are trading less multiplication for more additions, but from the little I know, on floating point additions and subtractions are risky precision wise, while multiplications are harmless.Certainly not true. In general different orders of magnitude are a problem. With multiplication and division these are more serve problems, as they lead to greater changes in magnitude, although even that is a generalization.\n \nreply"
    ],
    "link": "https://arxiv.org/abs/2505.09814",
    "first_paragraph": "Work on one of the world's most important websites and make an impact on open science.arXiv Is Hiring a DevOps EngineerHelp | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n",
    "summary": "**Title: X X^t can be faster (arxiv.org)**\n\nThe denizens of the internet discover yet another groundbreaking way to inch closer to effectively doing absolutely nothing faster: improving matrix multiplication. arXiv, in a stunning display of relevance, decides it\u2019s the ideal moment to recruit a DevOps engineer\u2014a role unironically aimed at keeping the sacred servers running smoothly for exactly these types of monumental discussions. Commenters dive deep, squabbling over ephemeral nuances like memory cache movements and the black magic of floating point arithmetic, whilst bravely ignoring the existential question of whether any of this even matters in the shady realms of machine learning approximations. A hearty round of applause is due for their undaunted spirit in the face of computational futility. \ud83c\udfad\ud83d\udc4f"
  },
  {
    "title": "Show HN: Visual flow-based programming for Erlang, inspired by Node-RED (github.com/gorenje)",
    "points": 198,
    "submitter": "Towaway69",
    "submit_time": "2025-05-16T14:54:13 1747407253",
    "num_comments": 85,
    "comments_url": "https://news.ycombinator.com/item?id=44006231",
    "comments": [
      "I saw Node-RED recently, and now this. While I think these are cool (and I would rather Erlang than NodeJS), is there some code based system for these kinds of things?I know I can just write code, but I mean a DSL or some library specifically oriented around solving exactly these kinds of event driven sequencing/action problems.\n \nreply",
      "Not to my knowledge, the closest thing to a DSL for Node-RED is its flows.json format for storing flow configurations.It's a very simple array-of-object format with the graph/flow definitions defined by node ids and wires. It is fairly simple to create a minimalist interpretor for that format.Also NodeRED is a very stable piece of software that has been around for over ten years. Yet I can take a flows.json file from today and have it run on the first releases of Node-RED, i.e., the format is backward compatible yet easily extendable.> event driven sequencing/action problems.Flow based programming[1] isn't strictly event driven, it's implemented that way in NodeJS because NodeJS does not have the concept of messages, only events.Erlang has message passing between independent processes and therefore, IMHO, better suited to FBP.[1] https://jpaulm.github.io/fbp/index.html\n \nreply",
      "Firstly, thanks for the link and information on more of the roots of this kind of programming, I couldn't find this when I looked.Regarding NodeRED. I don't dispute that it's stable, but my experience actually running any nodejs based software is that it's all heavily designed for running out of a container and a massive PITA to maintain otherwise. I already have enough hassle running zigbee2mqtt on my FreeBSD home server which wouldn't work in a linux jail because I couldn't figure out how to expose the zigbee dongle to it.Secondly, the reason I wanted to run one of these was not because I wanted to use it to automate my house, but instead because I wanted to understand how it works so I could replicate it in my own weird way.\n \nreply",
      "I suggest one of Benthos' descendants, either Bento or RedPanda Connect.Configuration driven, with a transformation DSL, and good documentation (I prefer the Bento documentation over RedPanda Connect's documentation). And Benthos explicitly refused to ack a consumed message upstream unless it had been acknowledged downstream, so it wouldn't drop messages on the floor unless you explicitly told it to.\n \nreply",
      "> Node-RED is a amazing[*] tool for creating flows that describe concurrent processing, it is just a shame the NodeJS is single threaded. So why not use something that is multi-process from the ground up?That's great! But now that we are doing this, it kind of makes me wish that it was not multi-processing and Erlang, but a more mainstream language with a better library ecosystem and focused on multi-threading instead, Rust comes to mind but there could be a better one.Is there a visual flow programming language based on Rust that is relatively mature?\n \nreply",
      "> wish that it was not multi-processing and ErlangHehe - honestly I chose Erlang because I love the syntax and secondly because it is so niche. Flow based programming is niche, visual FBP is nicher, Node-RED is even nicher and Erlang is niche - it's niche all the way down ;)Have a look at Elixir which is Erlang with Ruby syntax and also has a large community.Also the intention is to be using the flow editor and not the lanuage underneath, so the end user won't even know that it's Erlang or NodeJS - I aim t stay compatible with Node-RED so that flows are actually interchangeable.So to an certain extent it doesn't matter which language is used.I did chose Erlang also because it is well suited to flow based programming being message based and flow based programming is all about passing immutable objects amongst independent processes .... that's Erlang in a nutshell.\n \nreply",
      ">  makes me wish that it was not multi-processing and Erlang, but a more mainstream language with a better library ecosystem and focused on multi-threading instead, Rust comes to mind but there could be a better one.I am not quite following, why would we drop multi-processing with isolated tiny heaps with a few KBs each and move to multi-threading with a large multi-megabyte stacks per thread and all sharing and writing to the same heap? It seems like a step backward.> Rust comes to mind but there could be a better one.I can see the excitement, but at the same time this is becoming a meme. I mean the drive-by comments of \"why don't your rewrite it in Rust\" on every repo or \"show HN\" post. It's kind of like nodejs from years past: \"why don't your write in nodejs, it's webscale!\". The problem is, after a while it starts to have an inverse dose response: it makes people run away from Rust just based on that kind of stuff.\n \nreply",
      ">I am not quite following, why would we drop multi-processing with isolated tiny heaps with a few KBs each and move to multi-threading with a large multi-megabyte stacks per thread and all sharing and writing to the same heap? It seems like a step backward.Performance typically, hard to work in parallel on large amount of data performantly without multiple thread sharing a heap and you typically don't need large amount of threads because you don't actually have that many real cores to run them on.Lots of little share nothing process are great conceptually but that does create significant overhead.\n \nreply",
      "> Lots of little share nothing process are great conceptually but that does create significant overhead.It doesn't, really? I have clusters running 1M+ Erlang processes comfortably per node.> you typically don't need large amount of threadsExactly, that's why Erlang only spawns just the right amount of threads. One scheduler thread per CPU, then a bunch of long running CPU task threads (same number as CPUs as well), plus some to do IO (10-20) and that's it.\n \nreply",
      "> it kind of makes me wish that it was not multi-processing and Erlang, but a more mainstream language with a better library ecosystem and focused on multi-threading instead, Rust comes to mind but there could be a better oneGo sounds like a good candidate.\n \nreply"
    ],
    "link": "https://github.com/gorenje/erlang-red",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Visual low-code flow-based programming environment for Erlang, inspired by Node-RED.\n      An experiment to replace Node-REDs existing NodeJS backend with an Erlang equivalent that is 100% compatible[1] to existing flow code.The goal is bring the advantages of low-code visual flow-based programming to a programming language that is designed for message passing and concurrency from the ground up, hence Erlang.[1] = 100% won't be possible since function nodes that are coded in Javascript aren't supported (or aren't intended to be supported - unless someone has a workaround)Node-RED is a amazing[*] tool for creating flows that describe concurrent processing, it is just a shame the NodeJS is single threaded. So why not use something that is multi-process from the ground up? Concurrency is guaranteed and included.Also Erlang isn't the mo",
    "summary": "**Show HN: Visual flow-based programming for Erlang, inspired by Node-RED**\n\nA brave soul ventures forth to meld the barely-touched realm of Erlang with the visual delights of Node-RED, creating something nobody asked for but which will surely consume many a weekend of hapless hobbyists. The commendable goal: slay the single-threaded beast of NodeJS with the multi-process prowess of Erlang, because _obviously_ the problem with Node-RED was the backend language and not its sometimes bewildering logic spaghetti. In the comment sections, spectators leap to discuss everything _except_ the project's actual utility, quickly spiraling into a tech-stack comparison brawl armed with the inevitable \"Why not Rust?\" and a touch of nostalgic web-scale memes. Truly, a spectacle of template-flavored bike shedding! \ud83e\udd2f\ud83d\udeb4\u200d\u2642\ufe0f\ud83d\udcbb"
  },
  {
    "title": "Show HN: A C-Suite AI Agent Meant for SMB (askcaa.com)",
    "points": 9,
    "submitter": "iamasuperuser",
    "submit_time": "2025-05-13T21:34:01 1747172041",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=43977982",
    "comments": [
      "This reads like a product advertisement IMO, not a Show HN post.\n \nreply",
      "Not just any product ad, but some AI slop product ad.\n \nreply",
      "Convince me this is better than just using an LLM.\n \nreply",
      "> Benefit from the estimated 12:1 ROI for this investment with AICan I see the details of this estimate?\n \nreply",
      "> Why would I want to use this service?\n  > You get Fortune 500 level expert business answers in minutes, so you can spend less time searching for solutions and more time growing your business.\n\nprompt: \"You are a Fortuna 500 level business expert. Create a business plan\".\n \nreply",
      "Hey, FYI, on mobile the black text is unreadable where it crosses over darker parts of the background meeting room image\n \nreply",
      "A C-Suite AI Agent meant for Small / Medium Businesses who could benefit from Fortune 500 type c-Suite boardroom experience.\n \nreply",
      "Yes. It\u2019s well known that SMBs would immensely benefit from the same practices Fortune 500 companies adopt. /s\n \nreply",
      "Yippee\n \nreply"
    ],
    "link": "https://askcaa.com/",
    "first_paragraph": "",
    "summary": "The latest miracle in AI, <em>askcaa.com</em>, proudly pitches itself as a C-Suite operative in digital form for SMBs, because nothing screams \"innovation\" like rebranding old AI tech in business jargon. Commenters swiftly turn into ad critics, spotting the post as a thinly-veiled infomercial, yet another delectable serving of AI stew. Doubts bloom like algae in a pond\u2014can this be better than yanking answers from a regular algorithm? Meanwhile, a cry from the mobile users adrift in the sea of poor UI design remains as unanswered as the dubious promise of a 12:1 ROI. JSGlobal MBA degrees are evidently now downloadable in app form. \ud83c\udf93\ud83d\ude80"
  },
  {
    "title": "Show HN: Solidis \u2013 Tiny TS Redis client, no deps, for serverless (github.com/vcms-io)",
    "points": 31,
    "submitter": "jayl-e-e",
    "submit_time": "2025-05-16T21:20:15 1747430415",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://github.com/vcms-io/solidis",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        High-performance, SOLID-structured RESP client for Redis and other RESP-compatible servers\n      \n\n\nHigh-performance, SOLID-structured RESP client for Redis and other RESP-compatible servers\n\nOverview \u2022\n  Features \u2022\n  Installation \u2022\n  Usage \u2022\n  Configuration \u2022\n  Advanced \u2022\n  Errors \u2022\n  License\n\n\n\n\n\n\n\nSolidis is a modern RESP client built with SOLID principles, zero dependencies, and enterprise-grade performance in mind. It supports both RESP2 and RESP3 protocols and is optimized for modern JavaScript/TypeScript applications.The library is designed for minimal bundle size with maximum type safety and performance:High PerformanceProtocol SupportAdvanced FeaturesType SafetyExtensibilityLightweightSolidis offers two client implementations:The basic client contains minimal functionality to reduce bundle size. You need to extend it with s",
    "summary": "**Today in Hacker News Regurgitations**: A brave Hacker News soul unveils *Solidis*, another \"revolutionary\" Redis client that promises the moon, while carefully crafted using the ancient rites of the SOLID principles, but with no dependencies - because who needs friends when you\u2019re serverless, right? The comments are an adorable mix of admiration from those who think adding \"High-Performance\" to a readme instantly doubles the speed, and the usual TypeScript accolade parade, marveling at how \"minimal bundle size\" is a bigger achievement than landing on the moon. Isn\u2019t modern software development just a heartwarming blend of buzzwords and bundle sizes? \ud83d\ude80\ud83d\udc7d"
  },
  {
    "title": "The Magic Hours: The Films and Hidden Life of Terrence Malick (lrb.co.uk)",
    "points": 48,
    "submitter": "mitchbob",
    "submit_time": "2025-05-16T18:23:26 1747419806",
    "num_comments": 29,
    "comments_url": "https://news.ycombinator.com/item?id=44008412",
    "comments": [
      "I watched Tree of Life in the cinema. I was spellbound. It spoke directly to me, no mental processing of a story, I was tuned to this film. I didn't feel its time. \nAs the film ended a girl behind me said to her friends 'this was the biggest piece of shit I have ever seen'. I understood her and it was a perfectly fine opinion. She didn't 'get it', but it didn't have to do with taste or intelligence or anything like this. She was just not able to receive it - as if it was a signal sent she could not process.Our wedding rings have these words from the film engraved: 'unless you love, your life will flash by'. We married late - our kids were already almost at school. The love in the words is about the love of your family, just like in the film.And why the Thin Red Line is perfect - just view the \"Swing Scene\" as a work of religious art: https://www.youtube.com/watch?v=s40YpEsVkxk\nThe inner monologue of Ben Chaplin's private Bell about what the role of love is when you encounter war, asking 'Who lit this flame in us' is a visual prayer.(And yes, this is Miranda Otto, aka Eowyn)\n \nreply",
      "I think I loved everything about The Tree of Life except for the scenes with Sean Penn. Whatever mysterious antipathy the girl behind you in the cinema felt for the movie, I felt for Sean Penn. The kind and probably accurate interpretation is that actors are at the mercy of their directors and editors in movies like this, but his scenes don't feel like they're part of the same movie.\n \nreply",
      "I am with you. I wept uncontrollably at times watching Tree of Life.\n \nreply",
      "I know what you mean, I had the same effect from the David Lynch Dune movie. I went in blind, had no idea what I was about to see other than that it was scifi.Put it on and didn't even make it to a chair before I was spellbound. I stood for the whole movie, feeling as if ages had passed while I was rooted to the ground like a mountain watching seasons pass in stop motion.I've watched it maybe 6 times since, nothing has quite recaptured that perfect first watch.\n \nreply",
      "Like the first line says, he is probably the least known famous director. That is, he is not an activist and not flashy, doesn't make a lot of movies, and the general public simply doesn't know about him. But all the other movie directors and famous actors know him and kind of idolize him.When Thin Red Line came out in 1998 he hadn't done a movie since 1978 (Days of Heaven) and yet he snagged all the famous actors to play in it: Sean Penn, Jim Caviezel (though he wasn't as famous then), George Clooney, Jared Leto, Nick Nolte, John Travolta  and others. It's like they were tripping over themselves to be in his film.But I can't fault the general public for not knowing him either. His movies are more \"artsy\" so he is like like an American version of Andrey Tarkovsky -- you have to really be in the mood for his movies, like watching Stalker or Mirror by Tarkovsky.\n \nreply",
      "If you haven't seen it, A Hidden Life has the most Tarkovsky feel to it for me. It felt very inspired by Mirror, specifically. I say that as a person who loves both films, too.I can't believe the author of the article so blithely dismissed To The Wonder, Knight of Cups, and The New World. The New World is probably my favorite of all Malick's films so far.\n \nreply",
      "IIRC Travolta was a furious that his role was brutally cut to almost nothing after shooting a decent amount of footage, and at least a couple of well known actors were fully out of the final cut.They were indeed tripping to be in the film, that's one thing I remember clearly, rumours of some actors begging to be in the movie for free.\n \nreply",
      "Kind of like a \"musician's musician\"\u2014ones whose names come up often in interviews with famous musicians, and often have covers of their songs by more-famous artists become very popular, but are largely out of the limelight, at least relative to their fame and influence in certain circles.\n \nreply",
      "His movies may be \"artsy\" but he had a big influence on cinema. I watched Badlands for the first time a couple of years ago and I kept having to remind myself that it was made in 1973, not 1993 or 2003. It just seems like a film that's out of place in time, but that seems to be because it influenced later films.\n \nreply",
      "They were falling over themselves to make *a* movie with him. Not so much *another* movie with him. I just happened to watch a video about that this morning: https://www.youtube.com/watch?v=qqoQoN-Pb5I\n \nreply"
    ],
    "link": "https://www.lrb.co.uk/the-paper/v47/n09/david-thomson/cool-tricking",
    "first_paragraph": "London Review of BooksMore search OptionsBrowse by SubjectTerrence Malick\u200b is the quietest of American movie directors. He gives no interviews; he avoids talkshows and festival appearances; he doesn\u2019t feed us stories of what he was doing and why. For decades, he has done his best to avoid being photographed. He isn\u2019t a \u2018known American\u2019 or a spokesman for himself in the way of Scorsese, Coppola, Tarantino, Spike Lee or just about any other director. For fifty years he has been involving us in questions about cinema \u2013 what it is, what it might be, whether it matters. He has perplexed his admirers; several of his films are regarded by some as masterpieces and by others as misguided asides. Above all, he has insisted on beauty, and his films have us wondering whether beauty is truth or a trick. He is a real person. I met him once and talked with him. He was amiable and decent, or distant.John Bleasdale\u2019s The Magic Hours is both a monument to unstoppable research and, in the end, an admissi",
    "summary": "**The Reclusive Genius of Nothing, Apparently**\n\nIn a stunning display of scholarly navel-gazing, John Bleasdale\u2019s article in the <em>London Review of Books</em> concocts a verbose monument to Terrence Malick, the director who apparently hates the spotlight more than a vampire. Commenters, in a mesmerizing feat of melodrama, recount being \u2018spellbound\u2019 by Malick's films, with life-altering experiences so profound they're practically religious encounters. One heartbroken commenter even shares a tragic tale of marital dedication to Malick's philosophizing in *The Tree of Life*. Others engage in the intellectual equivalent of comparing whose invisible Malick-inspired tattoo is bigger. Cue slow clap for the echo chamber where discussing a recluse becomes a spectator sport. \ud83c\udfac\ud83d\udc7b"
  },
  {
    "title": "The Collapse of GPT (acm.org)",
    "points": 55,
    "submitter": "pseudolus",
    "submit_time": "2025-05-16T23:27:24 1747438044",
    "num_comments": 47,
    "comments_url": "https://news.ycombinator.com/item?id=44010705",
    "comments": [
      "This reminds me of the Monsanto case, where they sued a farmer (and won) for using patented seeds that the farmer obtained from a local grain elevator which happened to contain some of Monsanto's seeds.Should it happen I hope we call it Slop Wars.\n \nreply",
      "The reality is that for the most part, any corpus created after 2022 is going to be seriously polluted.\n \nreply",
      "I'd say 2007 or so.There wasn't any known active AI back then, but statistics on popular ideas and internet content was already a thing, and speech pollution based on those assessments had already started to spread fast, manually outputted.Sure, a lot of good content came out since then. But the amount of garbage... it's immense and very difficult to sort out automatically.The major issue is that this garbage then _became_ the norm. Only people who lived back then can remember what it was. For new folk, it looks just like a generational shift. However, it is quite obvious that some aspects of this shift were... unnatural (in the sense of not being spontaneous cultural manifestations).\n \nreply",
      "The \"core reasoning\" part of AI may be increasingly important to improve, and its \"database of factual knowledge\" aspects may be less and less important, maybe increasingly a hindrance. So more focused and specialized training may take over toward increasing reasoning precision, and not this never-ending stream of new data.So maybe we'll get better reasoning and therefore better generated data/content in the wild, without this negative feedback loop everyone is worried about.\n \nreply",
      "What core reasoning?\n \nreply",
      "For example, I just asked o3 \"how many Is are in antidisestablishmentarianism\", and this was its train-of-thought output:------The user wants to know how many \u201cI\u201ds are in the word \u201cantidisestablishmentarianism.\u201d They probably mean the letter \"I\" in lowercase, though the question was a little broader with \"Is.\"I\u2019ll treat it case-insensitively and count the total occurrences of the letter \"i\" (both uppercase and lowercase). I can count them manually now, or use a tool for faster analysis.Analyzed\nword = \"antidisestablishmentarianism\"\nword_lower = word.lower()\nword_lower.count('i')5\nThe user asked how many \"I\"s are in \"antidisestablishmentarianism.\" I\u2019m taking it to mean whether it\u2019s counting \"i\" or \"I\", and I\u2019ll consider them as the same for simplicity. So, I\u2019ll count the 5 occurrences of \"i\" in the word. I manually broke it down and verified there are indeed five \"i\"s, so the final count should be 5. Pretty straightforward, now that it's all clear!DoneThere are 5 \u201ci\u201ds in \u201cantidisestablishmentarianism.\u201d------You can come up with complicated definitions of \"core reasoning\" where this doesn't count, and I understand there's great demand for such definitions, but this clearly satisfies common-sense understanding of the term.\n \nreply",
      "You seem to be arguing that bollocks couched in flowery language is a stretch goal of AI.Are you sure?\n \nreply",
      "That really depends on expectations.If AI is meant to sound nearly identical to a human, you don't need more training data.If its meant to act as a natural language encyclopedia, we'll never get there with LLMs which amount to natural language processing on top of a massively compressed dataset.\n \nreply",
      "I've read the Google page \"Getting AI to write good SQL: Text-to-SQL techniques explained\" and it looks like all the usual bollocks.... and sigh ... it look like I'm twiddling with a noddy!\n \nreply",
      "I've heard that OpenAI and many AI labs put watermarks [0] in their LLM outputs to detect AI-generated content and filter it out.[0] Like statistics of words, etc.\n \nreply"
    ],
    "link": "https://cacm.acm.org/news/the-collapse-of-gpt/",
    "first_paragraph": "",
    "summary": "In the latest tech tragedy, ACM warns us of the <i>utter collapse</i> of GPT, prompting a frenzy among armchair commenters armed with PhDs from the University of Reddit. One visionary parallels the catastrophe to Monsanto suing over seed drift, coining the potential legal battle \"Slop Wars.\" Meanwhile, the peanut gallery debates the potency of AI 'core reasoning' with all the clarity of a drunk texting at 3 AM. As the prophecies of a trash-filled corpus come true, we're reassured by another user's profound discovery that AI generating SQL is still, shockingly, just \"bollocks.\" Clearly, we're on the brink of enlightenment, or perhaps just another thrilling episode of digital dumpster fires. \ud83d\udca5\ud83d\uddd1\ufe0f"
  },
  {
    "title": "MCP: An In-Depth Guide (With Cloudflare, Sentry, GitHub, Cline) (speakeasy.com)",
    "points": 4,
    "submitter": "ritzaco",
    "submit_time": "2025-05-13T12:47:04 1747140424",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.speakeasy.com/mcp/mcp-tutorial",
    "first_paragraph": "",
    "summary": "In another riveting episode of \"Modern Cyclists Pretend\", speakeasy.com brings us an in-depth guide so incomprehensively detailed that reading it is akin to deciphering the Voynich Manuscript, but with more buzzwords. This pi\u00e8ce de r\u00e9sistance features such indispensable tools as Cloudflare and GitHub, artfully discussed in a manner that ensures the average reader remains blissfully unaware of their actual usage. \ud83d\ude43 Meanwhile, the comment section has erupted into a battlefield where weekend tech warriors one-up each other with tales of their heroic exploits in copying and pasting error codes, as if the survival of the internet depended on it. Godspeed, reader, for you'll need it to conquer this digital Everest. \ud83c\udfd4\ufe0f\ud83d\udcbb"
  },
  {
    "title": "Methodical Banality (aeon.co)",
    "points": 28,
    "submitter": "CharlesW",
    "submit_time": "2025-05-16T20:39:30 1747427970",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=44009621",
    "comments": [
      "Similar problem with law. Rules based order is not ONLY about laws, it is about ethics which is represented, imperfectly, thru law. That is why most professions which deal with humans have ethical codes, oaths, so even people who do not have same morals ( or do not care about them, but want the job ) can do job in accordance with ethic frame law is based on.And if people follow only laws, without understanding of ethics behind those laws, we get very strange and oppressive society. Rules based order is system of rules which helps to make meaningful, better life for everyone while minimizing harm we do to each other.So fascism, as journalist use it currently, is a lack of effort for minimization of harm we do to each other. Never heard anything scarier than that.Law is not a goal but a means.\n \nreply",
      "> They internalised the qualities of their models\u2019 prose as much as possible, and also kept a sort of verbal rainy-day fund in something called a commonplace book, which is to say that, as they read, they transcribed a stockpile of salient words, metaphors, turns of phrase and clich\u00e9s \u2013 usually organised thematically \u2013 that they would then draw upon while writing.I'm reminded of an excellent passage from \"Lives of the Great Pianists\" by former New York Times music critic Harold Schonberg when speaking on the strength of Beethoven's musical extemporization:\"How much Beethoven prepared his improvisations we do not know. Most pianists did prepare, knowing full well that sooner or later they would be called upon to supply an improvisation on 'Batti, batti' or a similar well-known tune. And all pianists had at their command a thorough supply of passagework by the yard, which they could snip off and use for any possible contingency. But when Beethoven improvised, prepared passagework or no, it was evident to his hearers that after a while he was on his own, idea pouring after idea. Then he would get carried away, pound the piano, and the strings of the delicate Viennese instruments would pop, or hammers would break.\"Speaking on a purely personal level, I am mostly unconcerned with the amount of purple prose a writer chooses to embellish their work with - because I'm always internally stripping away the literary wrapping paper to get at the heart of the idea itself.\n \nreply",
      "This is why communist / soviet countries were declining. Most people get confused how can anyone label what happened in those countries as decline, they build factories, they catapulted peasants, serfs into city dwellers, they made huge scientific progress. Those people do not realize that soviet countries did it after it was done in  west. For example Large Panel System building so pervasively used in communist block was invented and used 50 years before in England. Inventiveness  was limited only into areas that the regime deemed necessary. And even those areas were not free to pursue scientific method, having go back and forth between photos, books and letters from relatives, from west + back and forth between \"government ideologist\" responsible for \"right\" way of thinking made any effort to move human endeavor into higher levels impossible.https://www.socialismrealised.eu/normalistion-everyday-life/\n \nreply",
      "I guess the ussr originally were vibrant and full of innovation but especially the 30s purges killed it off.\n \nreply",
      "Social change was global. It had different local outcomes.1918 was end of 2WW, most of Europe went from monarchy to democracy, except Russia which went from monarchy to autocracy. This change had orders of magnitude less victims in west.1917 - 1990 soviets killed more of their own fellow citizens than Hitler did kill any citizen. so if soviets / current Russian establishment says Nazis were bad, then logically they have to say that they were bigger monsters themselves.And if we talking about 6 million people dead in Holocaust, than current Russian establishment killed 1/6 of that amount in current war ON Ukraine. Just think about that perverse disaster currently happening and we live like it does not matter...A lot of Russian capital from selling natural gas to Europe went to US.... most of NY diamond district is about Russian money. at least 30 % of Israelis are descendants of Russians. These thing mean nothing to anyone.EDIT: 1918 was end of 1WW of course...EDIT2:Also, Germany was prohibited to have army by The Treaty of Versailles 1919.1922 - Rapallo treaty was treaty between Germany and Russia. where Germany build factories on Russian soil with assistance of bolsheviks. they were building tanks, airplanes, chemical weapons (Shikhany / Tomka ),... so Russia was solely responsible that Germany had weapons with which they started 2wwand Germany was solely responsible that Russia had copied weapon designs and had manufacturing capability to be in position to sign 1939 Molotov\u2013Ribbentrop Pact and attack western Europe TOGETHER with Nazi Germany. small pause in realations after NSDAP won is just that PAUSE.Russians say that 2WW started 1942 because that is year when Germany attacked Germany allied Russia.For western Europe 2WW started at 1939 when Germany AND Russia attacked Polland.For Chinese 2WW started 1937 when japan invaded china.chemical weapons kind of relations with fascist Italy were nonstop.\n \nreply",
      "Don\u2019t confuse \u201ccasualties\u201d with \u201cdeaths\u201d!The Ukraine war has had nowhere near one million dead. More like a couple of hundred thousand at most.\n \nreply",
      "If you prison someone in your basement and do not give them food and water, you are killer. Even tho you did not directly stopped their physiological functions.If YOU act in a way that result of that act is death, then they are victim of YOUR act.Current Russian establishment are responsible for situation which will not happen without them doing activities to start, sustain this situation. Situation which kills people. Current Russian establishments are therefor killers.EDIT : this says 500 000 in 2023, 2 years ago. \nhttps://www.nytimes.com/2023/08/18/us/politics/ukraine-russi...this says roughly 200 000 in 2025\nhttps://www.bbc.com/news/articles/cgkm7lly61doEDIT2: people from current Russian establishment acknowledged 22 million dead because of soviets. so even then we are talking about more people dead than Germany, for soviet regime deaths.. so real number are not lower than 22 million (Russian gov) and not higher than 62 million ( R.J.Rummel university of Hawaii.EDIT3: Victims \u2263 dead.For victims AS casualties (physical, mental, economic,...) we have to add BILLIONS more. So lets stay in tens of millions. It is simpler to calculate.\n \nreply",
      "Above poster is just trying to clarify that \"casualties\" means \"dead or injured\". Generally many more are injured than killed in war, so the number of causualties will be higher than the number of deaths.\n \nreply",
      "Precisely.Conversely, the \"loss of working age men\" in both Ukraine and Russia is much higher than the death toll from the war for various reasons: poor demographics, emigration, disability, permanently increased standing army size, reduced health care quality, etc...\n \nreply",
      "so these additional numbers are also direct result of acts of Russian establishment.so they are not MINUS,they are PLUS just in other column.So Russian establishment is not only killer, but also on top of that they are terroristic toward their own citizen.yes i meant only dead."
    ],
    "link": "https://aeon.co/essays/who-needs-ai-text-generation-when-theres-erasmus-of-rotterdam",
    "first_paragraph": "Illustration by Gustave Dor\u00e9 (1832-83) for the novel Gargantua by Fran\u00e7ois Rabelais. Photo by Getty Imagesby Hannah Katznelson\u00a0+ BIOIllustration by Gustave Dor\u00e9 (1832-83) for the novel Gargantua by Fran\u00e7ois Rabelais. Photo by Getty Imagesis a PhD candidate in the Department of Comparative Literature at the University of California, Berkeley and a member of the Renaissance and Early Modern Studies Designated Emphasis programme.Edited byMarina BenjaminThe Renaissance scholar and educator Erasmus of Rotterdam opens his polemical treatise The Ciceronian (1528) by describing the utterly dysfunctional writing process of a character named Nosoponus. The Ciceronian is structured as a dialogue, with two mature writers, Bulephorus and Hypologus, trying to talk Nosoponus out of his paralysing obsession with stylistic perfection. Nosoponus explains that it would take him weeks of fruitless writing and rewriting to produce a casual letter in which he asks a friend to return some borrowed books. He ",
    "summary": "In a staggering feat of mental gymnastics and blazing originality, <em>aeon.co</em> graciously enlightens us with the tale of Nosoponus, the Renaissance-era procrastinator obsessed with crafting the perfect letter. This deep dive into historical irrelevance is presented by Hannah Katznelson, a PhD candidate whose educational credentials are flaunted as if they add crucial weight to the groundbreaking revelation that, yes, people have always wasted time. Meanwhile, the comment section blossoms into a forlorn battlefield where armchair historians and legal philosophers conflate every conceivable historical atrocity to showcase their moral superiority, clearly unfazed by their tenuous grasp on historical dates and consequences. If you crave a dose of painfully strained connections between the Renaissance and modern-day legal ethics, sprinkled with a heaping dose of self-righteous indignation, look no further\u2014commenters here serve up more confusion than a poorly organized commonplace book. \ud83e\udd2f\ud83d\udcdc"
  }
]