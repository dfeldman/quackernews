[
  {
    "title": "The tiny chip that powers Montreal subway tickets (righto.com)",
    "points": 383,
    "submitter": "todsacerdoti",
    "submit_time": "2024-06-23T17:22:52",
    "num_comments": 198,
    "comments_url": "https://news.ycombinator.com/item?id=40769001",
    "comments": [],
    "link": "http://www.righto.com/2024/06/montreal-mifare-ultralight-nfc.html",
    "first_paragraph": "",
    "summary": "In a stunning revelation that has rocked the three people who still ride public transport by choice, righto.com exposes the eldritch technologies behind Montreal's subway tickets. Discover how a tiny chip, barely smarter than the comment section of this blog, manages to keep the trains less late than usual. Meanwhile, our enlightened tech warlocks in the comments bravely argue whether a potato could be engineered to do the same job, because surely, anything with wires sticking out must be a computer. \ud83e\udd54\ud83d\udcbb"
  },
  {
    "title": "I am using AI to drop hats outside my window onto New Yorkers (dropofahat.zone)",
    "points": 870,
    "submitter": "jimhi",
    "submit_time": "2024-06-23T13:49:30",
    "num_comments": 261,
    "comments_url": "https://news.ycombinator.com/item?id=40767459",
    "comments": [],
    "link": "https://dropofahat.zone/",
    "first_paragraph": "",
    "summary": "The pioneering technologist at dropofahat.zone finally answers the age-old question no one asked: what happens when you drop hats on unsuspecting New Yorkers? Using the kind of AI typically reserved for slightly more consequential applications, this visionary ensures that the sidewalk fashion disasters aren't just left to random chance. Meanwhile, the comments section becomes a battleground where keyboard warriors clash over pressing issues like the ethics of airborne millinery and the aerodynamics of fedoras. It's a brave new world, where artificial intelligence meets artificial necessity. \ud83c\udfa9\ud83e\udd16"
  },
  {
    "title": "How to Do The Jhanas (nadia.xyz)",
    "points": 10,
    "submitter": "mandliya",
    "submit_time": "2024-06-23T23:32:17",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=40771514",
    "comments": [],
    "link": "https://nadia.xyz/jhanas",
    "first_paragraph": "June 13, 2024",
    "summary": "On the corners of the internet where most users can't tell a Jhana from a Jumanji, nadia.xyz dives deep into detailing precisely how anyone with too much free time can achieve these traditional meditative absorptions. The step-by-step guide promises <i>enlightenment</i> or your existential dread back. Meanwhile, in the comment section, adults who confuse their intermittent fasting hype with spiritual ascension assure one another that, yes, *this* is the shortcut to Nirvana they've all been waiting for since their last life coach ghosted them. \ud83e\uddd8\u200d\u2642\ufe0f\ud83d\udcab\ud83d\udd49\ufe0f"
  },
  {
    "title": "Formal methods: Just good engineering practice? (brooker.co.za)",
    "points": 25,
    "submitter": "ot",
    "submit_time": "2024-06-21T21:25:33",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=40753989",
    "comments": [],
    "link": "https://brooker.co.za/blog/2024/04/17/formal.html",
    "first_paragraph": "Yes. The answer is yes. In your face, Betteridge.",
    "summary": "In an astonishing display of keyboard courage, a blogger at brooker.co.za tackles the complex, mysterious dilemma of whether formal methods in engineering are just good practice. Spoiler alert: the answer is *yes*. Cue the chorus of commenters who treat this revelation like the decoding of the Rosetta Stone, each eager to share their half-baked stories of 'that one time in a code review'. Meanwhile, others engage in chest-beating contests over who can name-drop the most obscure formal method. \ud83d\ude44 Who needs decades of research when you have blog comments?"
  },
  {
    "title": "LINQPad \u2013 The .NET Programmer's Playground (linqpad.net)",
    "points": 91,
    "submitter": "wofo",
    "submit_time": "2024-06-23T20:02:33",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=40770171",
    "comments": [],
    "link": "https://www.linqpad.net/",
    "first_paragraph": "LINQPad is not just for LINQ queries, but any C#/F#/VB expression, statement block or program.\r\n\t\t\t\t\t\r\n\t\t\t\tPut an end to those hundreds of Visual Studio Console projects cluttering your source folder and join the revolution of LINQPad scripters and incremental developers.",
    "summary": "Title: Programmers Discover Single-Use Plastic Equivalents for Code\n\nThe year is 2023 and developers, desperately clinging to their Edge-only browser bookmarks, stumble across LINQPad, mistaking it for something other than a glorified Notepad for their half-baked C# musings. LINQPad promises to end the tyranny of \"Visual Studio clutter\", which apparently was a major issue for three people. Commenters, armed with the collective foresight of a soap dish, celebrate by planning how they\u2019ll script their next FizzBuzz implementation into oblivion. \"Revolutionary,\" they type with one hand, while Ctrl+C-ing boilerplate code with the other. \ud83d\ude44"
  },
  {
    "title": "Y combinator codex (phoe.github.io)",
    "points": 53,
    "submitter": "082349872349872",
    "submit_time": "2024-06-23T19:06:12",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=40769759",
    "comments": [],
    "link": "https://phoe.github.io/codex.html",
    "first_paragraph": "The Y Combinator Codex is a calligraphy piece I've created.",
    "summary": "The self-appointed literary geniuses of the tech bubble have birthed yet another distraction from the crushing void of their day jobs: the Y Combinator Codex. A techie with a brush declares himself the Michelangelo of Markdown as he scribbles startup jargon in faux-medieval script. The comment section, ever a bastion of unearned confidence, overflows with brogrammers who now fancy themselves art critics after reading half a Wikipedia article on the Renaissance. Watch in <em>awe</em> as they debate the anachronistic virtues of using Comic Sans in Gutenberg\u2019s press. \ud83c\udfa8\ud83d\udd8b\ufe0f"
  },
  {
    "title": "Detecting hallucinations in large language models using semantic entropy (nature.com)",
    "points": 68,
    "submitter": "Tomte",
    "submit_time": "2024-06-23T18:32:10",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=40769496",
    "comments": [],
    "link": "https://www.nature.com/articles/s41586-024-07421-0",
    "first_paragraph": "Thank you for visiting nature.com. You are using a browser version with limited support for CSS. To obtain\n            the best experience, we recommend you use a more up to date browser (or turn off compatibility mode in\n            Internet Explorer). In the meantime, to ensure continued support, we are displaying the site without styles\n            and JavaScript.",
    "summary": "Title: Detecting Hallucinations in Large Language Models Using Semantic Entropy (nature.com)\n\nFuturistic AI researchers discover how to <i>'detect hallucinations'</i> in <i style=\"font-style: italic;\">chatbots</i>, probably by asking them if they've seen any good memes lately. Nature.com kindly advises upgrading from your Neanderthal-era browser if you want to actually read about these pivotal findings without the site looking like a text-only adventure game from 1985. Meanwhile, the comment section transforms into a support group where confused readers attempt to outwit one another with their patchy understanding of basic terminology. Spoiler: they don\u2019t know what semantic entropy is, but they've definitely got opinions on it! \ud83e\udd16\ud83d\udcab"
  },
  {
    "title": "Llama.ttf: A font which is also an LLM (fuglede.github.io)",
    "points": 361,
    "submitter": "fuglede_",
    "submit_time": "2024-06-23T12:01:45",
    "num_comments": 97,
    "comments_url": "https://news.ycombinator.com/item?id=40766791",
    "comments": [],
    "link": "https://fuglede.github.io/llama.ttf/",
    "first_paragraph": "llama.ttf is a font file which is also a large language model and an inference engine for that model.",
    "summary": "**Llama.ttf: The Typeface That Thinks Too Much**\n\nIn a world desperate for more gimmicks, a brave soul has finally combined the thrilling adventures of typography with the existential dread of AI, giving us \"llama.ttf\", a font that also tries to finish your sentences. Who needs coherent design or privacy when your text can second-guess you in real-time? Commenters, awestruck by their inability to discern technology from magic, are already proposing marriage to their new font overlord, basking in the glow of their screens as they ponder, \"Can it also make coffee?\" Likely not, but at least now your grocery list can judge you."
  },
  {
    "title": "Deriving Dependently-Typed OOP from First Principles (arxiv.org)",
    "points": 45,
    "submitter": "matt_d",
    "submit_time": "2024-06-23T19:19:01",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=40769867",
    "comments": [],
    "link": "https://arxiv.org/abs/2403.06707",
    "first_paragraph": "Help | Advanced Search",
    "summary": "In an act of intellectual heroism meant to cure the world of ignorance, a brave soul pens *Deriving Dependently-Typed OOP from First Principles*, another magnum opus destined to gather dust in arXiv's hallowed digital corridors. Internet wizards flock to the comments section to decode this gospel, leveraging all the rigorous training they've received from unmoderated Facebook debates and YouTube videos. Watch in awe as these titans of comment warfare boldly assert their contradictory opinions, all while confidently misinterpreting the foundational theories. Bystanders are left wondering whether to laugh, cry, or just enroll in a proper computer science class. \ud83e\udd37\u200d\u2642\ufe0f"
  },
  {
    "title": "Much Ado About First Folios \u2014 the world's largest Shakespeare collection reopens (npr.org)",
    "points": 26,
    "submitter": "bookofjoe",
    "submit_time": "2024-06-23T18:06:52",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=40769325",
    "comments": [],
    "link": "https://www.npr.org/2024/06/19/nx-s1-4950096/folger-shakespeare-library-renovation",
    "first_paragraph": "Bob Mondello",
    "summary": "In a startling display of originality, NPR reports that a bunch of really old books are still old but now you can look at them again. Bob Mondello, tragically sidelined from real journalistic endeavors, waxes poetic over these dusty tomes, as online pundits in the comments section prepare for battle over which high school forced them to appreciate the Bard more. Critics and fans alike unite in missing the point by squabbling over whether \"Shakespeare was overrated\" or if he indeed invented the human condition. No one considers that maybe, just maybe, there's a reason we're still talking about a playwright from the 16th century. But hey, anything for a click, right?"
  },
  {
    "title": "Arbitrary shell command evaluation in Org Mode (GNU Emacs) (seclists.org)",
    "points": 77,
    "submitter": "todsacerdoti",
    "submit_time": "2024-06-23T15:38:19",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=40768225",
    "comments": [],
    "link": "https://seclists.org/oss-sec/2024/q2/296",
    "first_paragraph": "",
    "summary": "The GNU Emacs community collectively gasped as another stunning revelation hit: executing arbitrary shell commands in Org Mode might just involve some security risks\u2014who knew? A fervent supporter in the hackernews cesspool eagerly points out that \"this is actually a feature, not a bug,\" thereby achieving an intellectual peak unsurpassed this century. Meanwhile, countless Emacs zealots defend their labyrinthine editor against vile accusations of being \"user-friendly\" or \"safe,\" by reiterating the ancient chant: \"It's not a bug, it's a way of life.\" \ud83d\ude44 Remind me again why you think your text editor shouldn\u2019t occasionally work like a slick, covert malware delivery system?"
  },
  {
    "title": "Picolisp a Railroad Simulation (picolisp-explored.com)",
    "points": 90,
    "submitter": "todsacerdoti",
    "submit_time": "2024-06-23T14:16:56",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=40767645",
    "comments": [],
    "link": "https://picolisp-explored.com/a-railroad-simulation-with-des",
    "first_paragraph": "8 min read",
    "summary": "In an earth-shattering eight-minute nostalgia trip, \"Picolisp a Railroad Simulation\" programmers pretend it's still 1955, coding in a language obscure enough to make even your grandpa squint. Commenters, in a breathtaking display of missing the point, debate fiercely whether using Picolisp is more akin to sorcery or just regular masochism. Meanwhile, the rest of the world continues on, blissfully unaware that someone simulated a choo-choo train in a programming language fewer people understand than Esperanto. \ud83d\ude82\ud83d\udcbb"
  },
  {
    "title": "Writing an IR from Scratch and survive to write a post (farena.in)",
    "points": 12,
    "submitter": "matt_d",
    "submit_time": "2024-06-23T20:39:35",
    "num_comments": 0,
    "comments_url": "",
    "comments": [],
    "link": "https://farena.in/compilers/programming/writing-an-ir-from-scratch/",
    "first_paragraph": "Compiler Engineer at Quarkslab",
    "summary": "In a desperate attempt to feel relevant, a Compiler Engineer at Quarkslab decides to write an Intermediate Representation (IR) from scratch, because clearly, the world was in dire shortage of those. As expected, the blog post detailing this Herculean effort is met with wild enthusiasm from dozens of readers, each clamoring to declare that they too, vaguely understand compiler terms, thanks to that one computer science class they half-slept through. In the comments section, the few souls who actually grasp the content battle it out over esoteric compiler optimizations, while one brave commenter admits they just came for the cool code snippets. Oh, the thrill of niche blogging!"
  },
  {
    "title": "The End-of-Line Story (2004) (rfc-editor.org)",
    "points": 25,
    "submitter": "susam",
    "submit_time": "2024-06-22T12:55:53",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=40758802",
    "comments": [],
    "link": "https://www.rfc-editor.org/old/EOLstory.txt",
    "first_paragraph": "",
    "summary": "In the latest scintillating entry to the RFC series, \"The End-of-Line Story\", internet history buffs experience the equivalent of reading beige paint dry. This riveting narrative takes us through the tumultuous decision of how to end a text line, inspiring couch philosophers and armchair developers to battle fiercely over the profound implications of CR vs LF. Comment sections quickly devolve into a warzone of passive-aggression where every keyboard warrior champions their preferred newline character as if it describes their entire personality. Clearly, everyone involved has nothing better to do. \ud83d\ude44"
  },
  {
    "title": "Timeliness without datagrams using QUIC (quic.video)",
    "points": 157,
    "submitter": "wofo",
    "submit_time": "2024-06-23T09:40:34",
    "num_comments": 154,
    "comments_url": "https://news.ycombinator.com/item?id=40766079",
    "comments": [],
    "link": "https://quic.video/blog/never-use-datagrams/",
    "first_paragraph": "Click-bait title, but hear me out.",
    "summary": "In this week's episode of \"Revolutionizing the Web with Obnoxious Titles,\" a budding web prophet decides to reinvent video streaming - wait for it - without using datagrams. Because who needs efficiency in 2023? The comments section, a tragicomic spectacle of misunderstanding, sees masses confusing QUIC for a fast food delivery service, while a lonely IT student attempts to explain the actual concept between sobs. Let the meaningful discourse commence! \ud83c\udf7f\ud83d\ude29"
  },
  {
    "title": "\"We argue that mitochondria are the processor of the cell\" (2022) (cell.com)",
    "points": 74,
    "submitter": "breck",
    "submit_time": "2024-06-23T12:15:49",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=40766869",
    "comments": [],
    "link": "https://www.cell.com/action/showPdf?pii=S1550-4131%2822%2900459-4",
    "first_paragraph": "",
    "summary": "In a breathtaking display of stating the obvious that could only thrill the desk chairs at Cell.com, a groundbreaking article heroically proclaims that mitochondria function like processors in cells. Spoiler alert: This stunner has biologist hobbyists and tenth-grade biology textbooks alike shaking in their boots. The comment section, a veritable hive of \"actually\" neckbeards, is alight with furious contributions about how they knew it first and are tragically unrecognized for their high school science fair triumps. Join the excitement, as mitochondria ignite thrills probably nowhere else but here.\n\ud83d\udd2c\ud83d\udca1"
  },
  {
    "title": "Asynchronous Consensus Without Trusted Setup or Public-Key Cryptography (iacr.org)",
    "points": 109,
    "submitter": "simonpure",
    "submit_time": "2024-06-23T13:22:23",
    "num_comments": 37,
    "comments_url": "https://news.ycombinator.com/item?id=40767299",
    "comments": [],
    "link": "https://eprint.iacr.org/2024/677",
    "first_paragraph": "Byzantine consensus is a fundamental building block in distributed cryptographic problems. Despite decades of research, most existing asynchronous consensus protocols require a strong trusted setup and expensive public-key cryptography. In this paper, we study asynchronous Byzantine consensus protocols that do not rely on a trusted setup and do not use public-key cryptography such as digital signatures. We give an Asynchronous Common Subset (ACS) protocol whose security is only based on cryptographic hash functions modeled as a random oracle. Our protocol has $O(\\kappa n^3)$ total communication and runs in expected $O(1)$ rounds. The fact that we use only cryptographic hash functions also means that our protocol is post-quantum secure. The minimal use of cryptography and the small number of rounds make our protocol practical. We implement our protocol and evaluate it in a geo-distributed setting with up to 128  machines. Our experimental evaluation shows that our protocol is more effic",
    "summary": "**Asynchronous Blabber Without Party Tricks**\n\nIn a groundbreaking act of academic defiance, a group of cryptowizards have dazzled us mere mortals by conjuring up a Byzantine consensus protocol with no trusted setups or pricy public-key sparkle. Their mystical \"Asynchronous Common Subset\" protocol evidently thrives on mere hash functions and sheer willpower, sporting a delightful complexity of $O(\\kappa n^3)$ and a blazing speed of $O(1)$ rounds. Commenters, cloaked in their supreme knowledge, chime in with everything from quantum doomsday forecasts to sarcastic applause for rediscovering 1992 cryptography, all while presumably wearing wizard hats and stroking patchy beards. Brace yourself for hash functions saving the world, one consensus at a time. \u2728\ud83e\uddd9\u200d\u2642\ufe0f\ud83d\udcbe"
  },
  {
    "title": "Start all of your commands with a comma (2009) (rhodesmill.org)",
    "points": 306,
    "submitter": "vmbrasseur",
    "submit_time": "2024-06-23T18:12:02",
    "num_comments": 116,
    "comments_url": "https://news.ycombinator.com/item?id=40769362",
    "comments": [],
    "link": "https://rhodesmill.org/brandon/2009/commands-with-comma/",
    "first_paragraph": "by Brandon Rhodes\n  \u2022 Home",
    "summary": "The developer masses stumble across Brandon Rhodes\u2019 groundbreaking decree: prepend your commands with a comma for maximum inefficiency and dubious advantages. As expected, the comment section becomes a battlefield where keystroke savants debate the esoteric beauty of adding unnecessary punctuation to their sacred terminal rituals. Meanwhile, productivity plummets, but who cares? The real programmers can now recognize each other by their secret handshake: the superfluous comma."
  },
  {
    "title": "SquirrelFS: Using the Rust compiler to check file-system crash consistency (arxiv.org)",
    "points": 63,
    "submitter": "belter",
    "submit_time": "2024-06-23T14:02:08",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=40767529",
    "comments": [],
    "link": "https://arxiv.org/abs/2406.09649",
    "first_paragraph": "Help | Advanced Search",
    "summary": "In a dazzling feat of over-engineering, the technology masochists of the internet have birthed SquirrelFS, employing the Rust compiler's unforgiving embrace to ensure your cat photos and cryptocurrency receipts withstand the apocalypse. Commenters, aflame with the passion that only arguing over programming languages can ignite, duel with their keyboards, heralding this as the second coming of file-system sanctity. Because nothing spells reliability quite like making sure your resume remains intact after you accidentally spill LaCroix on your Raspberry Pi. \ud83d\udcbe\ud83d\udc3f\ufe0f\ud83d\udd25"
  }
]