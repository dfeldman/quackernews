[
  {
    "title": "Microsoft donates the Mono Project to the Wine team (mono-project.com)",
    "points": 753,
    "submitter": "itherseed",
    "submit_time": "2024-08-27T18:34:09",
    "num_comments": 236,
    "comments_url": "https://news.ycombinator.com/item?id=41371106",
    "comments": [
      "I worked on Mono a lot back in the early 2000s (back in the SVN days before it moved to Git, even). This move makes a lot of sense. Things evolved a lot over the years. Mono's legacy goals, which are to be a portable CLR (.NET) runtime for platforms that Microsoft didn't care about, don't make much sense today.Mono made a lot of sense for running places where full .NET didn't, like in full AOT environments like on the iPhone where you can't JIT, or for random architectures that don't matter anymore but once did for Linux (Alpha, Itanium, PPC, MIPs, etc.). When Microsoft bought Xamarin (which itself was born out of the ashes of the Novell shutdown of the Mono effort) and started the DotNET Core efforts to make .NET more portable itself and less a system-provided framework and merge in a lot of the stuff Mono did a single more focused project made more sense.Mono was still left out there to support the edge cases where DotNET Core didn't make sense, which was mostly things like being a backend for Wine stuff in some cases, some GNOME Desktop stuff (via GTK#, which is pretty dead now), and older niche use cases (second life and Unity still embed mono as a runtime for their systems). The project was limping, though, and sharing a standard library but different runtimes after much merging. Mono's runtime was always a little more portable (C instead of C++) and more accessible to experiment with, but we need that less and less, but it's still perfect for Wine. So, having it live on in Wine makes sense. It's a natural fit.\n \nreply",
      "Is there somewhere where someone new to the ecosystem can get a simple introduction to all of these different terms and which ones are still relevant today? I looked into .NET somewhat recently and came away with the apparently mistaken impression that Mono was how .NET did cross-platform. I guess I must have been reading old docs, but I'm pretty sure they were at least semi-official.Is there good documentation somewhere for getting set up to develop with modern .NET on Linux?\n \nreply",
      "Mono was, but newer versions of .NET run on Linux and Mac.You can install at the link below, and then making a project is just `dotnet new console` and run with `dotnet run`https://learn.microsoft.com/en-us/dotnet/core/install/linux\n \nreply",
      "For historical context: this was before the conclusion of the antitrust case that led Microsoft to start softening its stance toward open source. https://en.wikipedia.org/wiki/United_States_v._Microsoft_Cor....This was the same year Antitrust came out: https://en.wikipedia.org/wiki/Antitrust_(film)Any support for open source or cross-platform stuff was a bulwark against claims of monopoly abuse, but none of it worked well enough to be a true replacement. Mono worked for some purposes, but it was far from the first party support cross-platform .NET gets today. Nowadays it sounds like .NET Core + third-party GUI libraries is the way to go.\n \nreply",
      "> Nowadays it sounds like .NET Core + third-party GUI libraries is the way to go.For reference for those unfamiliar with the terms:.NET Core was the name given to the cross-platform fork of the .NET runtime.It was forked out of .NET 4.x and dropped support for a lot of things in the first versions.It ran on various distributions of Linux and MacOS.At the same time there were forks of other libraries/frameworks in the .NET ecosystem to have 'Core' variants. Often these were dropping support for legacy parts of their code so that they could run on Core.Later versions of .NET Core brought over support for a many of the things that had been dropped..NET Core and .NET had stand-alone versions until .NET Core was renamed to . NET and became .NET 5.So, if you want to do the most modern cross-platform C# you would use .NET 9.\n \nreply",
      "Okay, this helps a lot! So .NET Core is now out of date, and any version of .NET >= 5 is cross-platform and has no Core variant?\n \nreply",
      "That's correct\n \nreply",
      "Good write up that wonderfully encapsulates how stupid Microsoft\u2019s naming is - you didn\u2019t even mention .NET standard.I love .NET. It\u2019s a great stack, especially for backend web apps. Blazor is a great SPA framework too. But I loathe how Microsoft continue to handle just about everything that isn\u2019t the framework and C# / F#. It\u2019s laughable.\n \nreply",
      "Well, to be fair .NET Standard wasn't a framework, it was a standards/compatibility label and compilation target..NET Standard includes various versions of things that MS doesn't even touch.I stopped doing .NET stuff before .NET 5 so I'm not hugely up to date with the latest shenanigans.\n \nreply",
      "Oh don\u2019t get me wrong - I wasn\u2019t criticising your write up. It was concise and still relevant.It\u2019s just funny for newcomers to peel back the onion more. Writing a source generator? Target .NET standard 2.0 (not even 2.1) for a whole host of reasons.\n \nreply"
    ],
    "link": "https://www.mono-project.com/",
    "first_paragraph": "The Mono Project (mono/mono) (\u2018original mono\u2019) has been an important part of the .NET ecosystem since it was launched in 2001. Microsoft became the steward of the Mono Project when it acquired Xamarin in 2016.The last major release of the Mono Project was in July 2019, with minor patch releases since that time. The last patch release was February 2024.We are happy to announce that the WineHQ organization will be taking over as the stewards of the Mono Project upstream at wine-mono / Mono \u00b7 GitLab (winehq.org).  Source code in existing mono/mono and other repos will remain available, although repos may be archived. Binaries will remain available for up to four years.Microsoft maintains a modern fork of Mono runtime in the dotnet/runtime repo and has been progressively moving workloads to that fork. That work is now complete, and we recommend that active Mono users and maintainers of Mono-based app frameworks migrate to .NET which includes work from this fork.We want to recognize that th",
    "summary": "### Microsoft Freecycles Mono to Wine: An Auspicious Hand-Me-Down\n\nIn an <em>earth-shattering</em> act of altruistic spring cleaning, Microsoft has graciously handed off the Mono Project to the Wine team. Shockingly, this revelation has led the venerable tech commentariat to churn out nostalgic trips down memory lane, complete with citations of obscure architectures and tales from the SVN dark ages. True to form, the comment section swiftly transformed into a muddled symposium, with various experts knotting themselves in techno-jargon about .NET\u2019s labyrinthine evolution. Meanwhile, everyone else is contemplating whether it was truly generosity or just Microsoft cleaning its attic. \ud83e\uddf9\ud83d\udcbf\ud83c\udf77"
  },
  {
    "title": "Faster CRDTs (2021) (josephg.com)",
    "points": 169,
    "submitter": "bpierre",
    "submit_time": "2024-08-27T20:47:28",
    "num_comments": 42,
    "comments_url": "https://news.ycombinator.com/item?id=41372833",
    "comments": [
      "> And why 32 entries? I ran this benchmark with a bunch of different bucket sizes and 32 worked well. I have no idea why that worked out to be the best.If you were using 2-byte ints, this is likely because cache lines are 64 bytes, so 32 entries would be exactly one cache line, letting each cache line hold an entire bucket, thus reducing those expensive main memory transfers.\n \nreply",
      "This is one of those rare articles which, although much of the material is over my head, I couldn't stop reading because it's written so well.\n \nreply",
      "What are some real world apps using CRDTs that have really good experiences?IIRC Notion was supposed to be one of them but realistically taking notes with two people in Notion is almost unusable compared to Google Docs.\n \nreply",
      "Thymer[1] uses CRDTs for everything. It's an IDE for tasks and planning. It's a multiplayer app, end-to-end encrypted and offline first, optionally self-hosted, and an entire workspace is a single graph. So CRDTs were the logical choice.All operations in Thymer get reduced to a handful of CRDT transformations. It doesn't matter whether you are moving or copying text, changing \"frontmatter\" attributes, dragging cards, uploading files, or adding tags. It's all done with the same handful of CRDT operations. Although this was a lot of extra work up front (we're not using any libraries) the benefits make it totally worth it. When your application state is a single graph you can move text between pages, link between pages (with backlinks), have transclusions, and do all sorts of cool stuff without having to worry about synchronization. CRDTs guarantee that all clients converge to the same state. And because CRDTs are by their nature append-only you get point-in-time versioning for free! We did end up having to make a couple of compromises for performance, though. Version history is not available offline (too much data) and in some cases we resort to last-writer-wins conflict resolution. On balance I think CRDTs are very much worth it, especially if you design an app with CRDTs in mind from day one. I probably wouldn't use CRDTs if I had to retrofit multiplayer in a more conventional AJAX app. Mutations in CRDTs are first applied optimistically, and then when the authoritative sequence of events is determined all clients need to revert their state to the last shared state and then re-apply all events in the correct order (thereby guaranteeing that all clients end up in the same state). Sometimes your app might need to revert and re-apply days worth of changes if you've been offline for a while. This all happens behind the scenes and the user doesn't know how many tree transformations are happening in the background but I guess my point is that CRDTs affect the design of the entire application. Most apps that are popular today were designed back when CRDT transformations were not yet well understood.[1] https://thymer.com (almost ready for beta)\n \nreply",
      "This looks really cool, signed up for the beta!\n \nreply",
      "Today Notion is a last-write-wins system with limited intention-preserving operations for list data (like block ordering). Text is last-write-wins, each block text or property is a last-write-wins register. We're working on a new CRDT format for block text.\n \nreply",
      "Do you use last-write-wins using the received order of operations on the server or using a logical clock?I believe that for Notion the collaboration use case is more important than async editing, so a CRDT makes more sense, but for text editing apps that favor asynchronous collaboration maybe explicit conflict resolution is more reasonable.\n \nreply",
      "No clocks on the write side\n \nreply",
      "Most of iCloud's services use CRDTs underneath I believe. That includes Notes, Reminders and possibly Photos as well. FoundationDB is some of the backend as well. I was told this by a drunken former Apple SRE in a bar :)\n \nreply",
      "Indeed, Apple Notes has a reasonably sophisticated CRDT, including support for tables: https://github.com/dunhamsteve/notesutils/blob/master/notes....\n \nreply"
    ],
    "link": "https://josephg.com/blog/crdts-go-brrr/",
    "first_paragraph": "July 31 2021A few years ago I was really bothered by an academic paper.Some researchers in France put together a comparison showing lots of ways you could implement realtime collaborative editing (like Google Docs). They implemented lots of algorithms - CRDTs and OT algorithms and stuff. And they benchmarked them all to see how they perform. (Cool!!) Some algorithms worked reasonably well. But others took upwards of 3 seconds to process simple paste operations from their editing sessions. Yikes!Which algorithm was that? Well, this is awkward but .. it was mine. I mean, I didn't invent it - but it was the algorithm I was using for ShareJS. The algorithm we used for Google Wave. The algorithm which - hang on - I knew for a fact didn't take 3 seconds to process large paste events. Whats going on here?I took a closer look at the paper. In their implementation when a user pasted a big chunk of text (like 1000 characters), instead of creating 1 operation with 1000 characters, their code spli",
    "summary": "2021, the year we unearth the **archaeological remains** of CRDT research, and boy, did we find a winner. Amidst tales of French researchers damning algorithms with faint praise (\"works *reasonably* well\" is academic for \"it's pretty bad\"), one brave soul discovers his algorithm didn't really suck\u2014it was just implemented wrongly for a benchmark. Meanwhile, in the hallowed comments section, tech enthusiasts and aspirational developers engage in a battle of wits over buckets and cache lines, flex their misunderstood understanding of optimizations, and perennially speculate on the *real* secrets behind Apple's success\u2014likely sourced from dubious barroom intel. Welcome to tech discourse, where everyone's an expert until the benchmarks come in."
  },
  {
    "title": "A Collection of Free Public APIs That Is Tested Daily (freepublicapis.com)",
    "points": 234,
    "submitter": "abhas9",
    "submit_time": "2024-08-27T18:38:59",
    "num_comments": 49,
    "comments_url": "https://news.ycombinator.com/item?id=41371170",
    "comments": [
      "I'm glad to see https://isevenapi.xyz/ made the list.\n \nreply",
      "I love their pricing options include larger ranges of numbers, and enterprise class also includes negative numbers. ha ha.Best part is that 'sign up' links to https://archive.org/donate/\n \nreply",
      "I think their ad placement is even better than their pricing.API Result:GET https://api.isevenapi.xyz/api/iseven/6/{\"ad\":\"Buy isEvenCoin, the hottest new cryptocurrency!\",\"iseven\":true}\n \nreply",
      "{\"ad\":\"Looking for someone to do yard work. Must have a hoolahoop. 760-555-7562\",\"iseven\":true}\n    {\"ad\":\"FOR SALE - collection of old people call 253-555-7212\",\"iseven\":true}\n    {\"ad\":\"Auto Repair Service: Free pick-up and delivery. Try us once, you'll never go anywhere again. Email dave57@qotmail.com\",\"iseven\":true}\n\n    $ curl https://api.isevenapi.xyz/api/iseven/9999999\n    {\"error\":\"Number out of range. Upgrade to isEven API Premium or Enterprise.\"}\n\n    $ curl https://api.isevenapi.xyz/api/iseven/2e21\n    {\"error\":\"what is this I don't even\"}\n \nreply",
      "What I really want is isoddapi.xyz.Just like the npm package, all it should do is call isevenapi.xyz and invert the result.\n \nreply",
      "I'd like to see isfizzbuzz.xyz.Ideally, before 11:30 AM ET this Friday.\n \nreply",
      "I hope someone sets up isthirteenapi.xyz.\n \nreply",
      "isprimeapi.xyz would be helpful.\n \nreply",
      "I Seven API vs is Even API. Can't say I saw it the right way at first.\n \nreply",
      "I feel like one of the categories they are missing is 'APIs that can be done in one line of JavaScript\"I'm not saying these shouldn't exist, I think they're pretty funny, but everything in its place.\n \nreply"
    ],
    "link": "https://www.freepublicapis.com/",
    "first_paragraph": "SearchFavoritesGeneralMetricsDo SomethingCategoriesFHGRSearchFavoritesGeneralMetricsDo SomethingCategoriesFHGRSearchAPIs with the highest Health Scores. Health is calculated from latency, error rate and reliability.API providing information about characters, locations, and episodes from the Rick and Morty show. Supports GraphQL and REST endpoints for querying data.3 Endpoints100 API HealthAn API for public holiday data. Supports over 100 countries. Provides information on holidays and long weekends.1 Endpoint100 API HealthFree UK postcode lookup API and datasets. Search, validate and reverse geocode postcodes. Open sourced project.2 Endpoints100 API HealthBrowse 47,000+ automated reports, view aggregated data, merge and download data, compare reports1 Endpoint100 API HealthA free REST API for random Kanye West quotes (Kanye as a Service)1 Endpoint100 API HealthAPI providing data on Harry Potter characters and spells. Includes routes for all characters, specific character by ID, Hogwart",
    "summary": "In an age where <em>literally anything</em> can be turned into an API, freepublicapis.com trundles forth, offering up such technologically pivotal endpoints as Kanye West's musings and the sacred holiday schedule of over 100 countries. The laudable quest to keep these crucibles of modern civilization <i>tested daily</i> is no small feat, considering they also peddle data on the intricate worlds of Harry Potter and Rick & Morty, presumably because someone, somewhere, urgently needs to automate their fan fiction. Meanwhile, in the fathomless depths of the comment section, bright minds tirelessly mull over the existential necessity of isevenapi.xyz, whimsically debating the dire need for its sibling, isoddapi.xyz, because knowing if a number is odd or even via a paid request is the pinnacle of modern problem solving. Heaven forbid the JavaScript one-liner that could replace their entire business model."
  },
  {
    "title": "The Monospace Web (owickstrom.github.io)",
    "points": 203,
    "submitter": "mrunseen",
    "submit_time": "2024-08-27T17:09:56",
    "num_comments": 44,
    "comments_url": "https://news.ycombinator.com/item?id=41370020",
    "comments": [
      "Ooh, this is the thread to ask my question in. A few years ago I ran across a ... I think a video game walkthrough? maybe?  which was written to be read in monospace font, and it was full justified perfectly all the way through (thousands of lines!) SOLELY through word choice.Anyone know what I'm talking about and have a link?\n \nreply",
      "Cf. also http://tom7.org/bovex/ (a layout engine that tries to achieve a similar effect by rephrasing the input using an LLM).\n \nreply",
      "That's called bricktext[0], it used to be a thing you'd occasionally see on usenet and places like GameFAQs.[0] http://www.catb.org/esr/jargon/html/B/bricktext.html  (Also wow Google has completely erased this concept from its search results.)\n \nreply",
      "I vaguely recall seeing a GameFAQs walkthrough that did this, and I think it might have been for a Final Fantasy game of some kind, but unfortunately I can't remember more than that.\n \nreply",
      "GameFAQ was enough! FOUND IT! Thank you!https://gamefaqs.gamespot.com/snes/588741-super-metroid/faqs...\n \nreply",
      "this gets discussed, or at least mentioned, often on hn, e.g.https://news.ycombinator.com/item?id=28651093 (this very faq)https://news.ycombinator.com/item?id=40773880 (jart's commit)https://news.ycombinator.com/item?id=40605970 (tom7's gnujpl)and bonus: recently i've been enjoying http://arlyle.sdf.org/(unfortunately, links do not work in preformatted text on hn)\n \nreply",
      "Wow, this is wild! Maintaining perfect justification solely through word choice is... quite a writing constraint, lol. I don't think I've seen this done before.\n \nreply",
      "I betcha it wasn\u2019t perfectly through word choice alone as I can think of a few \u201ctricks\u201d that could be deployed undetectably.\n \nreply",
      "This is why the internet exists.Incredible catharsis. Love it.\n \nreply",
      "Laravel does something similar. Each line of multi-line comments are exactly 3 characters shorter than the previous line.https://github.com/laravel/laravel/blob/11.x/config/database...\n \nreply"
    ],
    "link": "https://owickstrom.github.io/the-monospace-web/",
    "first_paragraph": "Monospace fonts are dear to many of us. Some find them more readable,\nconsistent, and beautiful, than their proportional alternatives. Maybe\nwe\u2019re just brainwashed from spending years in terminals? Or are we\nhopelessly nostalgic? I\u2019m not sure. But I like them, and that\u2019s why I\nstarted experimenting with all-monospace Web.On this page, I use a monospace grid to align text and draw diagrams.\nIt\u2019s generated from a simple Markdown document (using Pandoc), and the\nCSS and a tiny bit of Javascript renders it on the grid. The page is\nresponsive, shrinking in character-sized steps. Standard elements should\njust work, at least that\u2019s the goal. It\u2019s semantic HTML,\nrendered as if we were back in the 70s.All right, but is this even a good idea? It\u2019s a technical and\ncreative challenge and I like the aestethic. If you\u2019d like to use it,\nfeel free to fork or copy the bits you need, respecting the license. I\nmight update it over time with improvements and support for more\nstandard elements.This documen",
    "summary": "In the latest nostalgic tech upheaval, a brave coder has taken the daring leap back to the 70s, slapping monospace fonts across the web because, well, aesthetics trump usability every time. \ud83d\udd79\ufe0f Watch as the masses rattle their sabers in the comments, diving deep into arcane topics like \"bricktext\" and a mystifying gems of monospaced GameFAQs walkthroughs. Commenters oscillate between marvel and confusion, briefly forgetting the topic while on a treasure hunt across dead links and ancient posts. Who needs modern typography standards when you can strain your eyes and relive the golden era of ASCII art?"
  },
  {
    "title": "Sainsbury Wing contractors find 1990 letter from donor (theartnewspaper.com)",
    "points": 254,
    "submitter": "bpierre",
    "submit_time": "2024-08-27T15:49:27",
    "num_comments": 64,
    "comments_url": "https://news.ycombinator.com/item?id=41368866",
    "comments": [
      "This sort of thing is brilliant. Folks put things inside walls a lot.When doing a bathroom repair I needed a few additional tiles that would be impossible to find (was an old house). Guess what I found when we busted open the wall\u2026 the leftover tiles from when the house was built like 70 years prior! I could almost feel some tile layer from generations prior giving me a little smile and pat on the back.\n \nreply",
      "Pretty sure that was laziness, not foresight on their behalf. Builders leave a lot of trash in walls.Not very useful to find once you've crushed up half the existing tiling.Breaking up the 50 year old concrete pad near my house, I found old 1970s crushed beer cans buried under the concrete (the kind that predate the attached pull-tab). Kind of a neat link through time, imagining them sweating in the same sort of heat that I was.Of course, it might also explain some of the other 'questionable' issues in the construction that I keep finding...\n \nreply",
      "I think this is a case of both. For example my parents did a remodel of a 19th century house and found a bag of glass catseye marbles in the ceiling.\n \nreply",
      "The customary place to put those is in the attic, where they can be easily found.https://alsyedconstruction.com/what-is-attic-stock-in-constr...\n \nreply",
      "This reminds me of the letter in the pond https://thatcanadiangirl.co.uk/2008/05/30/the-letter-in-the-...\n \nreply",
      "The columns: https://atlive-wp.s3.eu-west-2.amazonaws.com/wp-content/uplo...\n \nreply",
      "I think it's two of the five columns on the right in this image: https://images.adsttc.com/media/images/6352/6dc1/66b7/442f/b...Note that they are absent from this render: https://images.adsttc.com/media/images/6352/6d02/da69/b45e/2...> located on the ground floor near the former cloakroom, halfway between the street entrance and the stairs and lift leading down to the basement. Three adjacent structural columns have needed to be retained.\n \nreply",
      "That first link is spot on. Looking at the third image in the article, they are standing next to the destroyed column, and it is clearly one of the columns you indicated.https://cdn.sanity.io/images/cxgd3urn/production/0a733d1463e...\n \nreply",
      "Why would the architect want those columns to be there? It makes absolutely no sense.\n \nreply",
      "In architecture, there is this phenomenon where people may have an irrational fear of collapse. Adding (the suggestion of) redundant structural support may take away that fear.\n \nreply"
    ],
    "link": "https://www.theartnewspaper.com/2024/08/27/sainsbury-wing-contractors-find-1990-letter-from-donor-anticipating-their-demolition-of-false-columns",
    "first_paragraph": "\"To those who find this letter\": In July 1990 John Sainsbury (Lord Sainsbury of Preston Candover) left a typed and signed note in one of the false columns during building work on the lobby of the new Sainsbury Wing of London's National Gallery Sainsbury: AP Photo/Ann Purkiss. Letter: Courtesy of the National Gallery and by permission of the Sainsbury familyA \u201ctime capsule\u201d has been discovered at London\u2019s National Gallery, buried deep in a column in the foyer of the Sainsbury Wing. It is a letter recording that one of the wing\u2019s funders, John Sainsbury (Lord Sainsbury of Preston Candover), believed the architects had committed a serious \u201cmistake\u201d. The 1990 letter, typed on Sainsbury\u2019s supermarket notepaper, has recently been deposited in the gallery\u2019s archive as an historic document.John Sainsbury is critical in the letter of the American post-Modernist architect Robert Venturi and his professional partner and wife Denise Scott Brown for inserting two large false columns in the gallery\u2019",
    "summary": "**This Week in Time Capsule Archeology**: Contractors at London's Sainsbury Wing stumbled upon a 1990 rant masquerading as a *profound* historical artifact \u2014 a tetchy letter from donor John Sainsbury. Expertly hidden in a faux column, the note critiques the architectural choices of using, you guessed it, fake columns. Commenters wax nostalgic about the charming uselessness of discoveries behind walls, from inadvertently preserved bathroom tiles to nostalgic beer cans, proving everyone loves a good wall surprise. Meanwhile, architectural debates rage on about whether fake support beams soothe existential dread or just clutter a pretty facade. Mocking past decisions: a timeless hobby! \ud83c\udfdb\ufe0f\ud83d\ude02"
  },
  {
    "title": "Blitzortung \u2013 real time lightning strikes around the world (blitzortung.org)",
    "points": 152,
    "submitter": "thunderbong",
    "submit_time": "2024-08-27T17:21:56",
    "num_comments": 53,
    "comments_url": "https://news.ycombinator.com/item?id=41370187",
    "comments": [
      "For my kids, I have a virtual light switch in HomeKit called \"Shower Is Safe\". It's pinned to the top of the Home app.I use the Home Assistant integration to fetch this data and run some calculations on the past few minutes of lightning activity. Since the API returns lightning strike time and bearing from a given location, I can (in combination with wind direction) determine if the lightning is approaching or receding.If it's approaching and less than 30 minutes away (or if any strike is within 20 miles in any direction), it turns off the light switch. It then waits until it's been receding for at least 15 minutes (and with no more detections within 20 miles) before switching \"Shower is Safe\" back on.I can (and do) override it if I notice it's potentially hazardous to shower.\n \nreply",
      "Wait, why would showering in a lightning storm not be safe? Do you expect the lightning to discharge in the pipes of your house? How?Or is it that your children would be scared if the power goes out when they're showering? That I understand.\n \nreply",
      "Yes, especially in older homes or homes with poor grounding. Lightning can discharge through water supply lines[0]. There are even cases of toilets exploding due to lightning strikes[1]. (Google for more)Sure, it's exceedingly rare. But it's also exceedingly easy to avoid. I've taught my kids that some decisions are easier when defined as binary rules; judgment calls in cases like this just don't offer any tangible benefit other than \"I showered an hour earlier than I would have otherwise.\"[0]: https://www.weather.gov/safety/lightning-indoors[1]: https://fox8.com/news/lightning-blows-up-toilet-after-travel...MythBusters even did a bit on it. They rated it \"plausible\".\n \nreply",
      "Ok, blanket advice from US governmental agencies and a Mythbusters episode with electrical and water installations that seem... Very DIY and not up to code? I mean it is mythbusters... IDK.I suspect power outage in the shower is more dangerous in my case than any other electrical issue... I guess it may be more of a US issue, especially since I am not finding any advice from EU agencies on the matter?...\n \nreply",
      "I learned a few months ago showering in lightning is dangerous.\n \nreply",
      "You can't just say that without explaining why.I live on the 8/10 floor of a building that gets yearly lightning rod inspections. All piping has been replaced with polypropylene (clean water) or PVC (dirty) and even when it was metal, the electrical and water systems were far apart from one another. Even if they were not far apart, all wiring is underground. The transformer is inside a nearby building and also has lightning rods/wires and all wiring to and from it is underground. There is literally no scenario apart from ball lightning coming through my bathroom window while I shower that I can think of\n \nreply",
      "What other automations do you have? This one seems so specific I am curious what else you have going on!\n \nreply",
      "Would you be willing to explain/share the automation for this?\n \nreply",
      "Nice, what are the odds though? I searched around but couldn\u2019t find any hard stats.Is this like nuclear bunker in my basement type of precaution?\n \nreply",
      "Yes, it's exceedingly rare. But it's one of those \"avoiding this activity for an hour could prevent you from dying painfully\" things, so we don't shower/bathe/wash dishes when there's lightning.\n \nreply"
    ],
    "link": "https://www.blitzortung.org/en/live_lightning_maps.php",
    "first_paragraph": "\n\nA worldwide, real-time, community collaborative lightning location network. \u00a9 2003-2024 Blitzortung.org Contributors\n\n\n\n\n\n\n\n\nThis website uses cookies\n\n\n\nWe use cookies to personalise content, to analyse our traffic, and to show advertisements. Displaying advertisements could share information about your use of our site with advertising partners who may combine it with other information that you are provided to them or that they have collected from your use of their services. Choose the type of cookies you're happy for us to use (you can change them anytime), or just accept.\n\n\n\nCertain types of cookie are essential to use our site. We store the time and the selection of your consent anonymously under the identification stored in cookie \"ID\".\n\n\n\n\n\nTechnically necessary\nNecessary cookies make a website usable by enabling basic functions like page navigation and access to secure areas of the website. The website cannot function properly without these cookies.\n\n\n\n\nPreferences\nPreference ",
    "summary": "<b>Welcome to Blitzortung.org</b>, where the thrill of tracking lightning strikes is only overshadowed by the sheer paranoia it fosters in suburban homes. Obsessive dads everywhere can now harness real-time data to fuel their latest home automation: the <em>\"Shower Is Safe\"</em> light switch. This groundbreaking use of technology proves essential, because nothing says \"parenting done right\" like teaching your kids to fear a shower during a storm based on what's probably <i>overestimated risks.</i> In the comment section, witness a bizarre blend of amateur electricians, skeptical Europeans, and would-be meteorologists debating whether lightning can really turn your plumbing into a pipe bomb. Spoiler: it's not likely, but why miss the chance to create an overly complicated home gadget?"
  },
  {
    "title": "Taskwarrior \u2013 CLI Task Management (taskwarrior.org)",
    "points": 65,
    "submitter": "httbs",
    "submit_time": "2024-08-27T20:17:24",
    "num_comments": 23,
    "comments_url": "https://news.ycombinator.com/item?id=41372482",
    "comments": [
      "Been using taskwarrior (and the really great TUI interface https://github.com/kdheepak/taskwarrior-tui) for about 6 months now. My favorite things:- really fast day-to-day navigation using vim-like controls in the TUI- automatic sorting using due date, task dependencies (A must be done for B to start), age, etc.- task dependencies. This is really helpful for me- decent enough cross-device sync with syncthing (I already had it up and running)- ability to produce reports. E.g. what tasks did I complete for project X last month?- whole system has a good set of hooks into it, making it relatively hackableDownsides:\n- was slightly intimidating at first. If you're starting out, definitely start on the simple end, and slowly add complexity to your setup (creating tasks -> due dates -> using projects -> creating task dependencies -> using contexts for work/play/study -> ... -> ...)\n \nreply",
      "In case anyone else is interested in seeing the schema I ran a few example commands through this and the dumped my ~/.task/taskchampion.sqlite3 database out to SQL: https://gist.github.com/simonw/ab208b18b6c3ab31ea3feb70f6502...It's mainly JSON data stored in some simple tables, with full historic change tracking modeled as JSON too.Here's that example loaded into Datasette Lite: https://lite.datasette.io/?sql=https://gist.github.com/simon...\n \nreply",
      "Taskwarrior officially provides bash/zsh/fish completion scripts.If you're a PowerShell or nushell user and need autocompletion for Taskwarrior, try https://github.com/sigoden/argc-completions.Argc-completions provides multi-shell completions for over 1000 commands, including Taskwarrior.\n \nreply",
      "Self plug, I'm developing a minimal gui for Taskwarrior, focused on keyboard navigation.https://github.com/tmahmood/taskwarrior-web/Task warrior is the my core of task management, as I've ADHD,I lost track of my task if it's not easily visible, this ui helps me with that. It shows timer for active task on the top.Future plan is to integrate time warrior too.\n \nreply",
      "Thank you for posting. I\u2019m of the same mind, so I appreciate you working on this publicly. I\u2019ve bookmarked it to check it out next time I get frustrated haha (I have a \u201cproductivity things to try\u201d bookmark folder)\n \nreply",
      "I LOVE taskwarrior but I feel any TODO software that can't easily be synced across devices is a nonstarter these days.Sure I could throw the sqlite db in Dropbox or something, but there's no good way to manage the TODOs on a phone.Every 6-12 months I'll give it another try and love it but feel it's just too limiting for most personal tasks.I do like to use it for work tasks that aren't tracked in Jira...so stuff I generally only care about when I'm at a computer.\n \nreply",
      "https://taskwarrior.org/docs/commands/synchronize/> The synchronize command, which first appeared in version 2.3.0, allows your Taskwarrior instance to share tasks with other instances. You can have several instances making local changes all of which sync to a single server, and they will all be kept up to date, with changes flowing from instance to instance.    $ task sync\n    Syncing with foo.example.com:53589\n\n    Sync successful.  1 changes uploaded.\n\nThere was a site inthe.am which provided sync service.  While that's been shut down, the code is available on https://github.com/coddingtonbear/inthe.am - the local hosting wasn't ever finished or not designed with that in mind ( https://github.com/coddingtonbear/inthe.am )\n \nreply",
      "There IS an android implementation on the play store I think.  I ended up just running task warrior on a VPS and shelling in though.  But that UI sucks on a phone.\n \nreply",
      "Love taskwarrior. Looking forward\nThere's a great TUI; https://github.com/kdheepak/taskwarrior-tuiI wish cross-device-sync was feasible, but it's pretty good.\n \nreply",
      "I've had good success using Syncthing to keep my tasks in sync between my phone, laptop, desktop, etc. Point it at your Taskwarrior data folder and you're off.\n \nreply"
    ],
    "link": "https://taskwarrior.org/",
    "first_paragraph": "Taskwarrior is Free and Open Source Software that manages your TODO list from the command line.It is flexible, fast, and unobtrusive.\nIt does its job then gets out of your way.New User?\u00a0\u00a0\u00a0Start\nhere...This patch release to Taskwarrior 3.0.0 addresses a few minor issues in the 3.0.0 release: improvements to task news, better error handling and documentation, and fixes for interactions with hooks. It also fixes an issue with the release tarball, #3294.Taskwarrior 3.0 brings new, more reliable task-storage and sync support, based on TaskChampion.\nIt has been in the works for several years, and is now available at on GitHub.\nSee https://taskwarrior.org/docs/upgrade-3/ for more information on this upgrade \u2013 including steps to take before installing the new version.Need help?\nTake a look at our support page.Looking to learn?\nTake a look at our online documentation.Try our FAQ, a growing list of curated questions and answers.Copyright \u00a9 2024 Gothenburg Bit FactoryPowered by Hugo",
    "summary": "**Taskwarrior: For When You Absolutely, Positively Have to Overengineer Your ToDo List**\n\nIn an exciting turn of events, Taskwarrior pushes out another \"critical\" update to their glorified command-line diary app. Now you can sync your tasks to nowhere important faster than ever before, because let\u2019s face it, accidentally stuffing your grocery list into a SQLite database is a problem everyone had yesterday, right? Meanwhile, the comment section becomes a fascinating soup of GitHub links, self-help tutorials, and confessions of tech-induced anxiety. If you love typing more to manage fewer things, this is the tech party you've been invited to\u2014RSVP with your favorite shell command! \ud83c\udf89"
  },
  {
    "title": "ChartDB \u2013 Free and open source, database design editor (chartdb.io)",
    "points": 13,
    "submitter": "nikolay",
    "submit_time": "2024-08-27T22:38:49",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://chartdb.io/",
    "first_paragraph": "Free and open source, database design editor.No signup -> get a diagram in just 15secFree and open source, DB design editor. No signup ->  get a diagram in just 15secFree and open source, database design editor.No signup -> get a diagram in just 15secFree and open source, database design editor. No signup ->get a diagram in just 15secEditorBuild diagrams with a few clicks, see the full picture, export SQL scripts, customize your editor, and more.Build diagrams with a few clicks, see the full picture, export SQL scripts, customize your editor, and more.Build diagrams with a few clicks, see the full picture, export SQL scripts, customize your editor, and more.Import / Export100% VisuallyDBsDesign for your databasePostgreSQLReadyMySQLReadySQL ServerReadySQLiteReadyMariaDBWIPPacked with featuresImport -> Edit -> Export \u2728Ready to get started?Ready to get started?Ready to get started?Instant ImportA single query to retrieve your entire DB schemaFastFastAI Export AI to generate the DDL for yo",
    "summary": "In the webbed depths of \"innovation,\" another groundbreaking tool - ChartDB \u2013 emerges to save us all exactly 15 seconds. Developers, strapped to their ergonomic chairs, now amplify productivity by bypassing the signup process to <em>instantly</em> spew diagrams. The tool smugly offers an entire buffet of database compatibilities, proving once again that if it's open source, it must be like manna from the heavens. Meanwhile, the comment section transforms into a battleground where SQL warriors boast about their DB-design speedruns, while quietly googling what \u201cDDL\u201d stands for. \ud83d\ude0e\ud83d\ude80"
  },
  {
    "title": "KLEE Symbolic Execution Engine (github.com/klee)",
    "points": 43,
    "submitter": "nateb2022",
    "submit_time": "2024-08-27T19:43:54",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=41372059",
    "comments": [
      "The project's webpage is a more helpful starting point than the repository: https://klee-se.org/\n \nreply",
      "Is anyone actually using symbolic execution in industry these days? I personally like it but I feel like fuzzing has completely taken over in terms of academic research at least.\n \nreply",
      "I\u2019ve been using Triton a lot lately to make sense of heavily obfuscated code. The ability to translate a symbolic \u201ctrace\u201d into an LLVM bitcode listing is super useful. You can do a lot of optimizations from there easily to recover the original code:https://github.com/JonathanSalwan/Triton/wiki\n \nreply",
      "Your deobfuscating process would make a good blog post :)\n \nreply",
      "I would like to - but unable to find any libraries / engines that would function in a some sort of 'mocked' environment. for example - i need to cover all execution paths for only single function with high cyclomatic complexity, given all other stuff is mocked. Maybe it would be called unit test mix with se. also for dynamic languages such as php/python/ruby.\n \nreply",
      "does Kani count?https://github.com/model-checking/kani\n \nreply",
      "It should! Kani\u2019s used by AWS\u2019 Firecracker hypervisor.\n \nreply"
    ],
    "link": "https://github.com/klee/klee",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        KLEE Symbolic Execution Engine\n      \n\nKLEE is a symbolic virtual machine built on top of the LLVM compiler\ninfrastructure. Currently, there are two primary components:The core symbolic virtual machine engine; this is responsible for\nexecuting LLVM bitcode modules with support for symbolic\nvalues. This is comprised of the code in lib/.A POSIX/Linux emulation layer oriented towards supporting uClibc,\nwith additional support for making parts of the operating system\nenvironment symbolic.Additionally, there is a simple library for replaying computed inputs\non native code (for closed programs). There is also a more complicated\ninfrastructure for replaying the inputs generated for the POSIX/Linux\nemulation layer, which handles running native programs in an\nenvironment that matches a computed test input, including setting up\nfiles, pipes, ",
    "summary": "**Welcome to the jungle of KLEE, where symbolic execution meets developer indifference.** In an exciting blend of acronyms and jargon, KLEE, the vaunted symbolic execution engine, conquers LLVM bitcodes with the grace of a sleepy sloth. Commenters, lost in a maze of \"is anyone actually using this?\" meet the enthusiastic echo chamber of a whopping three people pretending to care. Meanwhile, the quest to deobfuscate the abstractions into something resembling practical usage turns into a blogging prompt, because apparently documenting your struggles is more achievable than solving them. \ud83d\ude44"
  },
  {
    "title": "If Your World Is Not Enchanted, You're Not Paying Attention (theconvivialsociety.substack.com)",
    "points": 39,
    "submitter": "passwordoops",
    "submit_time": "2024-08-25T13:59:55",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=41347368",
    "comments": [
      "I personally find software development to be enchanting and am often thankful to have a job like this.I get to make in the comfort of my home creations where I am only limited by my knowledge, imagination, and attention. I can experiment easily and explore completely different designs with an ease that any other discipline would be envious of. And then I can allow millions or billions to have access my creation with ease.That seems pretty enchanting and almost god-like and magical to me.\n \nreply",
      "I recommend the youtube channel Posy. He only uploads about once a month but every time it is an exploration of something that seems so simple but it sparks that child like wonder in the world. The good sense of humour helps as well.https://www.youtube.com/c/PosyMusic\n \nreply",
      "Second that. He's got some of the highest production quality YouTube has to offer. High effort content.Here's the one that got me hooked:https://www.youtube.com/watch?v=NSS6yAMZF78\n \nreply",
      "This is the same video that got me hooked! I love Posy. It always feels magical to know that there are so many other curious people in the world. HN feels like a natural gathering point for that crowd as well.\n \nreply",
      "Humanity's greatest skill is ignoring the beauty that surrounds us.\n \nreply",
      "And secondly self deception!\n \nreply",
      "Self deception is our #1 skill. That's why we couldn't progress before science. It's also what makes us see beauty when there's none.\n \nreply",
      "We \"couldn't progress before science\" but developed metallurgy, mining, sailing, astronomy, democracy, ... well before the enlightenment and the development of the scientific method? Heck, we domesticated plants and animals before recorded history.Perhaps you're talking about empiricism rather than science? Empiricism is old as the hills, presumably these discoveries were made from observation and experimentation. The scientific method builds on empiricism, but incorporates mechanisms to make it more difficult to fool ourselves (such as reproducibility and peer review), and so is distinct.As for \"seeing beauty where there is none,\" that's nonsense. Beauty is in the eye of the beholder. If you see it, it's real. You can critique someone else's ideas of beauty, you can disagree with them, but to say that they are somehow objectively wrong is just chauvinism.You may as well tell someone that when they're thinking, it's just the illusion of thinking. Or when they're enjoying a meal you dislike, they're only imagining that they're enjoying it. What would that even mean?\n \nreply",
      "I think it\u2019s more appropriate to say that self-deception is a consequence of overfitting based on other primal instincts. Our #1 skill lies in pattern recognition and imitation. A lot of time, it\u2019s faulty because it\u2019s guided by fear/anxiety for perfectly valid reasons of survival.\n \nreply",
      "\"Our three greatest skills are ignoring the beauty that surrounds us, self-deception, and an almost fanatical dedication to the pope.\"\n \nreply"
    ],
    "link": "https://theconvivialsociety.substack.com/p/if-your-world-is-not-enchanted-youre",
    "first_paragraph": "",
    "summary": "Title: Your World Is Enchanted If You're Pretentious Enough\n\nIn the latest installment from liberal arts graduates who wax philosophical on Substack, \"If Your World Is Not Enchanted, You're Not Paying Attention\" offers a refreshingly condescending take on why your unenchanting life is because you're just not trying hard enough. Armchair philosophers in the comments are quick to equate basic coding tasks with magical god-like feats, evidently mistaking \"comfortable home office\" for \"Mount Olympus.\" Meanwhile, the YouTube culture vultures descend to preach about \"high production quality\" enlightenment through Posy's monthly video drops\u2014because nothing screams intellectual like getting your existential insights sandwiched between ads for Squarespace. And don't forget the classic Hacker News pedantry parade, where every comment is a competition to prove who can be the most esoterically cynical. \ud83e\uddd9\u2728\ud83d\udc68\u200d\ud83d\udcbb"
  },
  {
    "title": "Knockknock: Simple, secure, and stealthy port knocking implementation (github.com/moxie0)",
    "points": 9,
    "submitter": "Bluestein",
    "submit_time": "2024-08-24T11:49:53",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=41337469",
    "comments": [
      "Knockknock was one of my favorite things back in the day. I love Moxie's mindset. Nowadays I put Wireguard in front of everything.\n \nreply",
      "I used to use lots of port knocking setups to hide my ssh port. That was, until I discovered Tailscale's SSH setup. Now my SSH is run over wireguard which is very stealthy.\n \nreply",
      "Same. It's amazing not having my server hammered by malicious actors and hardening it by not even offering the ssh service on the primary network interface\n \nreply",
      "A similar tool that's actively developed was posted a few days ago.https://news.ycombinator.com/item?id=41327735> Show HN: Ruroco \u2013 like port knocking, but betterhttps://github.com/beac0n/ruroco\n \nreply",
      "this is from 2012, must be run as root, uses python 2, and requires \"hping3\"\n \nreply"
    ],
    "link": "https://github.com/moxie0/knockknock",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A simple, secure, and stealthy port knocking implementation that does not use libpcap or bind to a socket interface.\n      \n        A simple, secure, and stealthy port knocking implementation that does not use libpcap or bind to a socket interface.\n      ",
    "summary": "**Another day, another <i>\"revolutionary\"</i> tool on Hacker News**: Meet Knockknock, a port knocking implementation so <i>\"simple, secure, and stealthy\"</i> that commenters are tripping over themselves to reminisce about the good ol' days and plug their current VPN setups. One nostalgic soul missed talking about <em>SSH over Wireguard</em> so much they almost sent a teary-eyed testimony. Meanwhile, someone points out that Knockknock is practically a dusty relic from 2012, requiring ancient rituals like <em>Python 2</em> and <em>hping3</em>. But don't worry, the Hacker News wisdom circle quickly rallies to discuss Ruroco\u2014because why address legacy software issues when you can chase the next shiny thing? \ud83d\ude80\ud83d\udd76\ufe0f"
  },
  {
    "title": "Vulnerabilities show why STARTTLS should be avoided if possible (2021) (apnic.net)",
    "points": 66,
    "submitter": "fanf2",
    "submit_time": "2024-08-27T17:42:03",
    "num_comments": 35,
    "comments_url": "https://news.ycombinator.com/item?id=41370420",
    "comments": [
      "xxx"
    ],
    "link": "https://blog.apnic.net/2021/11/18/vulnerabilities-show-why-starttls-should-be-avoided-if-possible/",
    "first_paragraph": "",
    "summary": "In the latest episode of \"Why We Can't Have Nice Things,\" a spirited text adventure on apnic.net suggests we should just dump STARTTLS like last week's garbage. It turns out STARTTLS might be more hole than protocol, opening emails up to spoofing, snooping, and good old fashioned data swiping. Commenters, in a display of collective wisdom that could power a small LED, debate whether using carrier pigeons would be safer. Meanwhile, everyone ignores the simple joy of not sending sensitive information over email at all.\ud83d\udd4a\ufe0f\ud83d\udca1"
  },
  {
    "title": "DisTrO \u2013 a family of low latency distributed optimizers (github.com/nousresearch)",
    "points": 60,
    "submitter": "SchwKatze",
    "submit_time": "2024-08-27T18:32:37",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=41371083",
    "comments": [
      "There's no information about what this is, beyond a teaser of a loss graph. Really hoping this is something that gets released to the world, not hidden behind closed doors.\n \nreply",
      "Paper & code in the next couple months. We're workin on em :)\n \nreply",
      "This seems huge no? Couldn't this enable \"community based\" ai training at home?\n \nreply",
      "Most of the information about this is in this PDF (I hate when people publish interesting information exclusively in PDFs): https://raw.githubusercontent.com/NousResearch/DisTrO/main/A...I converted it to Markdown (using Gemini 1.5 Pro) and pasted it into a Gist here: https://gist.github.com/simonw/46a33d66e069efe5c10b63625fdab...From the abstract:> Training large scale neural networks typically involves sharing gradients between all accelerators, which necessitates specialized, high-speed interconnects. To address this, we introduce DisTrO, a family of architecture-agnostic and network-agnostic distributed optimizers that reduces the inter-GPU communication requirements by four to five orders of magnitude without relying on amortized analysis, enabling low-latency training of large neural networks on slow internet bandwidths with heterogeneous networking hardware.This could be a HUGE deal.Currently if you want to train giant LLMs you need a big pile of GPUs in the same location as each other due to the amount of information that needs to shuffle between them during training.If DisTrO works as intended, it will be possible to train models using GPUs in different places - potentially enabling SETI@home style training where thousands of people with gaming PCs at home could donate their GPU time to a large training effort.Their tweet about this has more: https://twitter.com/NousResearch/status/1828121648383566270> Nous Research is proud to release a preliminary report on DisTrO (Distributed Training Over-the-Internet) a family of architecture-agnostic and network-agnostic distributed optimizers that reduces the inter-GPU communication requirements by 1000x to 10,000x without relying on amortized analysis, and matches AdamW+All-Reduce in convergence rates. This enables low-latency training of large neural networks on slow internet bandwidths with heterogeneous networking hardware.> DisTrO can increase the resilience and robustness of training LLMs by minimizing dependency on a single entity for computation. DisTrO is one step towards a more secure and equitable environment for all participants involved in building LLMs.> Without relying on a single company to manage and control the training process, researchers and institutions can have more freedom to collaborate and experiment with new techniques, algorithms, and models. This increased competition fosters innovation, drives progress, and ultimately benefits society as a whole.\n \nreply",
      "Awwww snaaaaap, decentralized skyneeet here we goooooo! Kidding of course, but very exciting breakthrough if this pans out.\n \nreply",
      "As much as I liked the team, there is really no information other than the loss graph :(\n \nreply",
      "That\u2019s not quite true. They also tested benchmarks and compared with an AdamW trained model.\n \nreply",
      "Not reproducible, so this doesn\u2019t exist.\n \nreply",
      "Look at the PDF in simonw\u2019s first link. There\u2019s plenty of information. One part looked like the communication requirements were reduced down to under 100MB. That suggests a communication rate that could be handled by dirt-cheap instances spread across the globe. Like on vast.ai or something.\n \nreply",
      "I'd love to believe it's true but I suspect they're overstating the result, or it's a fluke. Presumably teams at large firms like Meta would have put a lot of effort into checking whether not-synchronise-every-step training could match synchronise-every-step training before investing hundreds of millions of dollars into the low-latency, high-throughput network hardware necessary for the latter.\n \nreply"
    ],
    "link": "https://github.com/NousResearch/DisTrO",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Distributed Training Over-The-Internet\n      This is the repository for DisTrO (Distributed Training Over-The-Internet), a family of low latency distributed optimizers that reduce inter-GPU communication requirements by three to four orders of magnitude.Join us on Discord if you're interested in helping research and build the future of distributed training.\n        Distributed Training Over-The-Internet\n      ",
    "summary": "<b>DisTrO: The Magic Bullet for At-Home AI or Yet Another Vaporware?</b> \ud83d\ude02 The GitHub jungle drums are beating wild with both promises and skepticism about DisTrO, a revolutionary optimizer that claims to slay today's dragon: inter-GPU chatter. While the repo gods tease with \"loss graphs\" and vague promises of upcoming paper launches, the comment cavalcade swings from blind hope to stark techno-pessimism <i>(\"couldn't this be community-based AI training at home???\")</i>. The real gem: a PDF buried behind links, promising tech paradise for all\u2014while feedback swings between adulation, accusation of overhype, and the desperate cries of those trying to navigate the repo's tech jargon quicksand. Start your decentralized Skynet or continue playing Skyrim at home\u2014DisTrO's future hangs by the thread of a community Discord chat. \ud83c\udfae\ud83d\udcac"
  },
  {
    "title": "EasyPost (YC S13) Is Hiring (easypost.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2024-08-27T21:01:46",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.easypost.com/careers",
    "first_paragraph": "Solve complex shipping logistics problems with a single integration.Access our developer resources and learn how to easily integrate with the EasyPost API.Explore our company resources to learn more about EasyPost and the shipping industry.Our team of problem solvers brings a modern approach to shipping logistics. We collaborate across departments, ask challenging questions, explore new solutions, and take accountability for our wins and mistakes.As industry experts, we're working not only to help our customers make sense of the industry, but to define where it's headed. We are looking for candidates who are approachable, dynamic, inventive, intelligent, and reliable to join our team in unpacking the future of shipping.How can modern, flexible technology improve the customer experience of shipping? What if every business was able to offer same-day shipping? How much waste would be removed from the environment if all our shipments were consolidated into one delivery per week? At EasyPos",
    "summary": "At <em>EasyPost</em> (because spelling it normally was too mainstream), aspiring tech bros now have the golden opportunity to untangle the exhilarating enigma of... shipping logistics. \ud83d\udce6\ud83d\ude80 With a \"single integration\" that probably involves furiously Googling Stack Overflow until something, anything, works, you too can join the ranks of 'industry experts' who spend their days hypothesizing about game-changing deliveries like once-a-week shipping utopias. The comments section gleefully oscillates between self-proclaimed JavaScript ninjas who believe rewriting the entire delivery industry in Node.js is a mere npm install away, and disillusioned souls questioning if their coding prowess could be better utilized in deciphering the cryptic assembly manual of their new IKEA table instead. Join now, and help us redefine the future of how long you can stare at a \"Your package is 5 stops away\" notification! \ud83d\udcbb\ud83d\ude9a"
  },
  {
    "title": "How Chrome Accessibility Works (googlesource.com)",
    "points": 33,
    "submitter": "lelandfe",
    "submit_time": "2024-08-27T19:41:59",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=41372028",
    "comments": [
      "xxx"
    ],
    "link": "https://chromium.googlesource.com/chromium/src/+/main/docs/accessibility/browser/how_a11y_works.md",
    "first_paragraph": "This document explains the technical details behind Chrome accessibility code by starting at a high level and progressively adding more levels of detail.Please read the accessibility overview first.As described in the overview, every platform has its own accessibility APIs that are used by both assistive technology and sometimes by automation software. To better understand the challenges of accessibility support in Chromium, let\u2018s first explore what it\u2019s like to build an accessible application using a standard UI toolkit.Examples of standard toolkits would be Win32 UI controls or .NET components on Windows, or Cocoa NSViews on macOS, or Android Views via Java or Kotlin. When you use such a toolkit to build an application, a lot of accessibility comes for free.Typically every UI element - including containers and grouping elements - gets its own corresponding accessibility element, implementing that platform\u2018s accessibility API. So if you add a button, checkbox, scroll container, or tex",
    "summary": "Welcome to another thrilling deep dive, this time courtesy of <em>Google</em>, into how Chrome stumbles through the minefield of basic accessibility without entirely blowing itself up! \ud83c\udf89 The document graciously begins \"at a high level\"\u2014presumably for those readers who manage to crawl out from under the developer-speak that soon morphs into the main feature. According to the gospel of Chrome devs, mastering accessibility is as easy as using some out-of-the-box UI toolkits, after which everything \"comes for free\" \u2013 which, if true, results in the world\u2019s worst BOGO sale. Meanwhile, the comment section is a delightful cesspool of coders who toggle between scratching their heads and patting their own backs, proudly swapping tales from their last heroic battle with a checkbox."
  },
  {
    "title": "Launch HN: Bucket Robotics (YC S24) \u2013 Defect detection for molded and cast parts",
    "points": 75,
    "submitter": "lasermatts",
    "submit_time": "2024-08-27T14:12:45",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=41367750",
    "comments": [
      "xxx"
    ],
    "link": "item?id=41367750",
    "first_paragraph": "",
    "summary": "In this week's exciting episode of \"Humans Somehow Still Exist in Start-Uplandia,\" Bucket Robotics, fresh out of the Y Combinator womb, proposes a **revolutionary** technology to ensure that your plastic widgets are slightly less terrible. Witness in awe as they deploy their AI-powered, blockchain-enhanced defect detectors poised to save humanity from slightly askew bobbleheads. Meanwhile in the comments, armchair engineers and three-time dropout VCs battle fiercely over who can most loudly misinterpret the concept of \"tolerance\" and \"precision\" \ud83d\ude44. Grab your popcorn and watch civilization advance one negligible specification at a time."
  },
  {
    "title": "Slime mold simulation in Rust using WASM and WebGPU (github.com/plul)",
    "points": 16,
    "submitter": "sshine",
    "submit_time": "2024-08-23T05:46:53",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=41326461",
    "comments": [
      "I was curious to see this simulation running but there does not seem to be a running demo.I don't know if this is your creation or not, but I would really recommend having a running demo before publicizing work.  It is a sad reality in software that, no matter how much time and artistry is placed into a work, it needs to be rapidly consumable for it to be properly shared.Speaking for myself, I have a backlog of at least 50 projects, with at least 5 I jump around actively, while learning foreign languages, hiking, and living life.  As much as I want to see a slime mold simulation, if it doesn't run when I check the repo with a demo link that functions on my phone, my curiosity will have to end there.5 minute later:  alright so my curiosity didn't end.  It looks like the project is using 'just' for command running (for those unfamiliar, https://github.com/casey/just).  It isn't my preferred way to do things but you probably have it already like I do.20 minutes later:  alright so after cloning the repo and running \"just demo 512x512\" (it needs a resolution), it doesn't run.  It uses assert statements so the application crashes when it fails assertions.  We are in trouble because it doesn't gracefully select a texture format.  I printed what my gpu supports and tried to find a best match.After that, it doesn't support the requested blend mode, so I switched it to one that my gpu supports.When making a gpu app, make sure to adapt based upon the capabilities a GPU supports.  It isn't much harder to do this, while making it significantly more accessible for anyone using it -- even for fun or experimenting.While it runs, it doesn't do anything -- likely because it isn't running with the expected texture format and blend modes.Unfortunately, while I really want to see a slime mold simulation, I have to stop now before I refactor this entire project and make it consumable for anyone curious.  Then I will have a working \"slime mold simulation\" at the end of the day, and I am not sure how helpful that would be to anyone, including myself.\n \nreply",
      "It's not clear that the author of the project is the one who posted, it may never have intended to get this attention. Given it only has the one commit & mentions having been presented, I imagine this project is \"done\".\n \nreply",
      "Would be great to see a running demo.That said, I've recently become very fascinated with slime molds, particularly Physarum polycephalum.  I bought a kit to grow one on agar plates, and it's fascinating to witness its behavior in contrast to growing a fungus or a plant.  It's surprising the kind of decisions it makes.  Sometimes it focuses entirely on one piece of food, then gets \"bored\" and starts exploring its surroundings.  It forms networks between pieces of food, but not to the extent that I was expecting.  It's rather single-minded at times.  Perhaps that will change the older and bigger it gets.  Nevertheless, I can see why creating a simulation of one would be an engaging project.\n \nreply"
    ],
    "link": "https://github.com/plul/slime-mold-simulation",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Fun with wgpu: Simulating slime mold\n      This project was presented as a talk at Copenhagen Rust Meetup on 2024-03-27.\nA link to the recording will be placed here once it is up on Youtube.For patternfly-yew, the following was done:This is vendored and version controlled.\n        Fun with wgpu: Simulating slime mold\n      ",
    "summary": "Title: Modern Geek Problems Require Modern Geek Solutions\n\nHere we go again, folks \ud83d\ude02 Another intrepid developer decides that the best use of 2024 technology is simulating slime mold behavior in Rust, because <i>clearly</i>, the world was missing that. Despite announcing this critical work at a Copenhagen meetup, the project's Github repo is as barren as shoppers' faces realizing the YouTube link is pending. Commenters rise from the digital underbrush, showing their prowess by critiquing the absence of a working demo. \"If I can't see simulated slime mold on my smartphone while climbing Mount Everest, is it even science?\" Keep tinkering, heroes, your backlog of 50 projects won't finish themselves while you engage in vital discussions about fungus simulation. \ud83e\udd13"
  },
  {
    "title": "The Simple Algorithm That Ants Use to Build Bridges (2018) (quantamagazine.org)",
    "points": 50,
    "submitter": "silverkite",
    "submit_time": "2024-08-24T14:29:38",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=41338581",
    "comments": [
      "xxx"
    ],
    "link": "https://www.quantamagazine.org/the-simple-algorithm-that-ants-use-to-build-bridges-20180226/",
    "first_paragraph": "\nAn editorially independent publication supported by the Simons Foundation.\n\nGet the latest news delivered to your inbox.\nCreate a reading list by clicking the Read Later icon next to the articles you wish to save.Type search term(s) and press enterPopular\n                                    SearchesFebruary 26, 2018Vaishakh ManoharContributing WriterFebruary 26, 2018Army ants form colonies of millions yet have no permanent home. They march through the jungle each night in search of new foraging ground. Along the way they perform logistical feats that would make a four-star general proud, including building bridges with their own bodies.Much like the swarms of cheap, dumb robots that I explored in my recent article, army ants manage this coordination with no leader and with minimal cognitive resources. An individual army ant is practically blind and has a minuscule brain that couldn\u2019t begin to fathom their elaborate collective movement. \u201cThere is no leader, no architect ant saying \u2018we ",
    "summary": "In an *astonishing* revelation on quantamagazine.org, where complex concepts are reduced to ant-sized thoughts, we learn that army ants can, indeed, do things without a PowerPoint presentation or a middle manager. Who knew creatures with brains the size of a speck could achieve logistical wonders without a single coffee break or team-building exercise? In the comment section, self-proclaimed entomologists and amateur philosophers converge, fiercely debating whether humans could learn from ants, or if this is all just a prelude to an insect uprising. Collective intelligence, it seems, stops short at the internet."
  },
  {
    "title": "Rustproofing Linux (Part 1/4 Leaking Addresses) (2023) (nccgroup.com)",
    "points": 57,
    "submitter": "wglb",
    "submit_time": "2024-08-27T17:34:52",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=41370344",
    "comments": [
      "Summary: a naive port of a kernel driver from C to Rust can easily introduce information leak vulnerabilities, which in kernel-style C were automatically prevented by preprocessor trickery.\n \nreply",
      "More like: the Linux kernel re-implementation of Rust \"print\" has a bug that causes it to not adhere to Linux kernel conventions.I'd expect that now that the bug has been reported, it'd be fixed by just hashing pointer addresses before printing them.I also expect that \"reimplementing X in a different programming language\" introduces logic bugs, like the one above, and that those involved have deemed what they get out of it worth the effort of hashing these sort of bugs long term.From the kernel pov, all of these bugs are safety issues, so the article authors are surprised the unsafe keyword is not required to introduce them, but from Rust's pov, they are just logic bugs, which safe Rust does not protect against. One of the main challenges those working on Rust in the kernel will have is figuring out how to educate other kernel developers about Rust (what it does and does not protect against, setting the right expectations, etc.). I think these articles are a great step in that direction.\n \nreply",
      "> article authors are surprised the unsafe keyword is not requiredThe often surprising part of raw pointers to system programmers newly dabbling in Rust is that every operation on them is safe, except for deref. You can freely take addresses and do pointer arithmetic on them without having to deal with unsafe, and only have to tell the compiler that you know what you are doing when you either load or store something through them.\n \nreply",
      "> is figuring out how to educate other kernel developers about RustWhy have one class of logic errors when you can have two?\n \nreply",
      "Why have any? Zero errors is trivially achievable by not writing code.\n \nreply",
      "Why try to improve anything when you could just keep the original implementation around for forever?\n \nreply",
      "As they say, if it ain't broke, don't fix it\n \nreply",
      "I think \"pitfalls of porting Linux C to Rust\" would be a more descriptive title, if verbose.\n \nreply"
    ],
    "link": "https://research.nccgroup.com/2023/02/06/rustproofing-linux-part-1-4-leaking-addresses/",
    "first_paragraph": "Enter a search termFebruary 6, 20239 mins readRust is a programming\nlanguage guaranteeing memory and thread safety while still being able to\naccess raw memory and hardware. This sounds impossible, and it is,\nthat\u2019s why Rust has an unsafe keyword which allows a\nprogrammer to dereference a raw pointer and perform some other dangerous\noperations. The dangerous code is effectively contained to\nunsafe blocks, which makes Rust an interesting option for\nembedded and system programming, where it could potentially be used to\nreplace C, which has a long history of memory safety\nvulnerabilities.The Linux Kernel, like many other\noperating system kernels, has a long history of memory and thread safety vulnerabilities. The Rust for Linux\nproject aims to add Rust language support to the Linux Kernel and\ntry to improve the security situation. Serious efforts to bring Rust\ninto the mainline started in April 2021 and after\nmany patch iterations, minimal Rust support has been merged into Linux\n6.1.With r",
    "summary": "**Rustproofing Linux (Part 1/4 Leaking Addresses) (2023) (nccgroup.com)**\n\nOnce again, the eternally hopeful Rust evangelists are valiantly attempting to shove square pegs through round kernel holes. This time, they\u2019re shocked\u2014<em>shocked!</em>\u2014to discover that naively porting C to Rust introduces new exciting types of bugs, rather than casting a magic <i>memory safety</i> shield over the whole endeavor. The comment section becomes a delightful circus of condescension, with Linux old-timers and Rusty newbies alike trading jabs about the futility of blending oil with water, while simultaneously solving no problems that actually exist. One could argue this is the tech equivalent of trying to teach a cat to bark, but that might be insulting to both the cat and the nature of barking."
  },
  {
    "title": "Anthropic publishes the 'system prompts' that make Claude tick (techcrunch.com)",
    "points": 346,
    "submitter": "gemanor",
    "submit_time": "2024-08-27T04:45:46",
    "num_comments": 216,
    "comments_url": "https://news.ycombinator.com/item?id=41364637",
    "comments": [
      "xxx"
    ],
    "link": "https://techcrunch.com/2024/08/26/anthropic-publishes-the-system-prompt-that-makes-claude-tick/",
    "first_paragraph": "CommentGenerative AI models aren\u2019t actually humanlike. They have no intelligence or personality \u2014 they\u2019re simply statistical systems predicting the likeliest next words in a sentence. But like interns at a tyrannical workplace, they do follow instructions without complaint \u2014 including initial \u201csystem prompts\u201d that prime the models with their basic qualities and what they should and shouldn\u2019t do.Every generative AI vendor, from OpenAI to Anthropic, uses system prompts to prevent (or at least try to prevent) models from behaving badly, and to steer the general tone and sentiment of the models\u2019 replies. For instance, a prompt might tell a model it should be polite but never apologetic, or to be honest about the fact that it can\u2019t know everything.But vendors usually keep system prompts close to the chest \u2014 presumably for competitive reasons, but also perhaps because knowing the system prompt may suggest ways to circumvent it. The only way to expose GPT-4o\u2018s system prompt, for example, is t",
    "summary": "Anthropic decides to share the \"magic whispers\" that make their AI, Claude, less of a digital calamity and more of a manageable nuisance. In the noblest act of transparency, they reveal the secret sauce that stops Claude from turning into an internet troll. Much like sharing a secret recipe that consists of two parts water and one part air, readers everywhere are astounded by the complexity of telling a chatbot \"don't be evil.\" Watch as the comments section descends into an intellectual void, with tech enthusiasts juggling half-understood AI principles and privacy advocates mourning the death of secrecy in the age of digital oversharing. \ud83d\ude44\ud83e\udd16"
  }
]