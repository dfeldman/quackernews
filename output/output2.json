[
  {
    "title": "Plain Vanilla Web (plainvanillaweb.com)",
    "points": 667,
    "submitter": "andrewrn",
    "submit_time": "2025-05-11T16:31:58 1746981118",
    "num_comments": 351,
    "comments_url": "https://news.ycombinator.com/item?id=43954896",
    "comments": [
      "I've transcended the vanilla/framework arguments in favor of \"do we even need a website for this?\".I've discovered that when you start getting really cynical about the actual need for a web application - especially in B2B SaaS - you may become surprised at how far you can take the business without touching a browser.A vast majority of the hours I've spent building web sites & applications has been devoted to administrative-style UI/UX wherein we are ultimately giving the admin a way to mutate fields in a database somewhere such that the application behaves to the customer's expectations. In many situations, it is clearly 100x faster/easier/less bullshit to send the business a template of the configuration (Excel files) and then load+merge their results directly into the same SQL tables.The web provides one type of UI/UX. It isn't the only way for users to interact with your product or business. Email and flat files are far more flexible than any web solution.\n \nreply",
      "I sell urns online and my website just has an email link. No shopping cart. A brick-and-mortor urn shop would never have a shopping cart, so why would a virtual one?I've purchased specialized woodworking tools online that simply involved filling out a form. I later received the parts with an invoice to send payment. You can simply not pay if you choose not to.There are so many way to do commerce both on and offline and if you squint and look closely you'll find interesting people doing interesting things all around you.\n \nreply",
      "I live in south east Asia and the phenomenon of a \"hotline\" openend my eyes.Every business is basically a phone number that you can message. It does not matter if you buy a pizza or furniture, book a hotel or need someone to clean your sofa.No need to fill in forms.\n \nreply",
      "I agree. Having seem enormous amounts of effort wasted on implementing fancy web apps by Digital-first consultancies (they reject BAs, but substitute designers) in the B2B space, I think there does need to be more education for the people who procure this stuff (especially in government) who get ripped off routinely.\n \nreply",
      "Especially for internal tooling that is little more than CRUD, I find the web to be most useful when a consultant is brought in to build it once or when an internal team can't be allocated to help maintain it.If you have even a small bandwidth to maintain it over time, quick and simple solutions like an Excel template and a few custom scripts work great and often end up being more flexible as your end user is mostly working with raw data.\n \nreply",
      "This is how 100% B2B worked before there was B2B SaaS, and it's still how 99% of B2B works today.\n \nreply",
      "I'm not against frameworks, but in many cases, they're unnecessary. I've always questioned why we should add 100KB of JavaScript to a page before writing a single line of real code.My team and I built https://restofworld.org without any frameworks. The feedback, from surveys, outreach, and unsolicited emails, has been overwhelmingly positive, especially around usability and reading experience.We might adopt a framework eventually (I do appreciate how their opinionated structure can cut down on endless debates), but for now, plain JavaScript serves us really well.\n \nreply",
      "I think that this comment is a great example of the total disconnect these conversations always have.On the one hand we have lots of people on here who are building full-featured web apps, not websites, on teams of 30+. These people look at frameworkless options and immediately have a dozen different questions about how your frameworkless design handles a dozen different features that their use case absolutely requires, and the answer is that it doesn't handle those features because it doesn't require them because it's a blog.Meanwhile there are also a lot of people on here who have never worked on a large-scale web app and wonder why frameworks even exist when it's so obviously easy to build a blog without them.It would be nice if we could just agree that the web hosts an enormous spectrum of different kinds of software and make it clear what kind of software we're talking about when we were opining about frameworks\u2014whether for or against.In this case: this is a WordPress blog.\n \nreply",
      "Many years ago\u20142002!\u2014Joel Spolsky wrote this:https://www.joelonsoftware.com/2002/05/06/five-worlds/His thesis was that before arguing about software development tools, practices, anything really, it's vital to establish what kind of development you're doing, because each \"world\" has its own requirements that in turn motivate different practices and tools.The worlds he quoted were Shrink-wrap; Internal; Embedded; Games; and Throwaway. Shrink-wrap is no longer a thing for most developers, and we can probably name some others today that didn't exist then. But the basic advice he gave then matches what you're saying today:We need to anchor arguments about tooling in a statement about the type of development we're trying to address, and we need to appreciate that the needs of each world are different.\n \nreply",
      "100% this. The biggest problem I see is understanding the context of what you are building.  Even inside a SaaS company. Are you building a feature that is a core part of the service or just a test shot to see if its possible to sell,or maybe you already sold something to a customer that is not your target customer. Yhey still need it and should get it. But maybe its more important to be quick and dirty. if its a core part, Then you need to make sure the architecture is good and maybe even add more test then normal. Context matter so much\n \nreply"
    ],
    "link": "https://plainvanillaweb.com/index.html",
    "first_paragraph": "\n            An explainer for doing web development using only vanilla techniques. \n            No tools, no frameworks \u2014 just HTML, CSS, and JavaScript.\n        \n                This is an overview of the major techniques used to make web sites and web applications\n                without making use of build tools or frameworks, with just an editor, a browser, and web standards.\n            \n                Specifically, that means these topics:\n            \n                This tutorial is meant for those who already know their way around HTML, CSS and JavaScript. If you're just starting out learning web development and are looking for resources to get going, then this is not the site for you yet. \n                You can get started at The Odin Project Foundations Course \n                or the MDN Learn web development learning path. \n            \n                Modern web development frameworks are powerful in their ability to develop rich well-structured web applications quickly",
    "summary": "At <em>Plain Vanilla Web</em>, a nostalgic ode to a time where websites were as simple as your granddad's Nokia, someone has decided to eschew modern web technologies in favor of raw HTML, CSS, and a sprinkle of vanilla JavaScript. The audience, well-versed in tech jargon yet likely struggling to center a div without flexbox, is treated to a tutorial as vintage as a rotary phone. Commenters quickly turn this minimalism into a philosophical brawl over whether websites are even necessary, leading to revelations that half the world still operates via fax and carrier pigeons. Ultimately, we learn that every problem in web development was actually solved by 2002, and everything since is just decorative icing on a very stale cake."
  },
  {
    "title": "Why Bell Labs Worked (1517.substack.com)",
    "points": 89,
    "submitter": "areoform",
    "submit_time": "2025-05-11T20:47:20 1746996440",
    "num_comments": 50,
    "comments_url": "https://news.ycombinator.com/item?id=43957010",
    "comments": [
      "In a way, it's similar to the connection between \"boredom\" and creativity. When you don't have much to do, you can do anything, including novel and awesome things. It, of course, takes the right kind of person, or a right group of persons. Give such people a way to not think about the daily bread, and allow them to build what they want to build, study what they want to study, think about what they want to think about.It feels anti-efficient. It looks wasteful. It requires faith in the power of reason and the creative spirit. All these things are hard to pull off in a public corporation, unless it's swimming in excess cash, like AT&T and Google did back in the day.Notably, a lot of European science in 16-19 centuries was advanced by well-off people who did not need to earn their upkeep, the useless, idle class, as some said. Truth be told, not all of them advanced sciences and arts though.OTOH the rational, orderly living, when every minute is filled with some predefined meaning, pre-assigned task, allows very little room for creativity, and gives relatively little incentive to invent new things. Some see it as a noble ideal, and, understandably, a fiscal ideal, too.Maybe a society needs excess sometimes, needs to burn billions on weird stuff, because it gives a chance to to something genuinely new and revolutionary to be born and grow to a viable stage. In a funny way, the same monopolies that gouge prices for the common person also collect the resources necessary for such advances, that benefit that same common person (but not necessarily that same monopoly). It's an unsetllting thought to have.\n \nreply",
      "This is what I think the biggest benefit to having a significant UBI. Sure, lots of folks who currently are in \u201cbullshit jobs\u201d would sit around and watch one screen or another but! A lot, probably more than we imagine, would get bored and\u2026 do something. Often that something would be amazing.But lizard brains gotta keep folks under their thumb and horde resources. Alas.\n \nreply",
      "UBI isn't going to get us there.  Give everyone more cash and the rent-seeking _WILL_ suck harder.  Same problem with blindly raising the minimum wage and not instead addressing the root issue.Basic econ 101: inelastic demand means supply can be as expensive as the limited number who are lucky enough to get it are able to afford.Bell Labs, generally think tanks, they work by paying _enough_ to raise someone to the capitalist society equivalent of a Noble.Want to fix the problem for everyone in society, not just an 'intellectual elite'?  Gotta regulate the market, put enough supply into it that the price is forced to drop and the average __PURCHASE POWER__ raises even without otherwise raising wages.\n \nreply",
      "This has been tried, very honestly, and it mostly sucked, then crashed. The calculation argument [1] kills it. The optimization problem which the market solves in a chaotic and decentralized way through price discovery and trading is intractable otherwise, not with all the computing power of the planet. It also requires prediction of people's needs (ignoring desires), and it's a problem more ill-posed than prediction of weather.The market of course needs regulation, or, rather, stewardship: from protection of property rights all the way to limiting monopolies, dumping, etc. The market must remain free and varied in order to do its economic work for the benefit of the society. No better mechanism has been invented for last few millennia.Redistribution to provide a safety net to those in trouble is usually a good thing to have, but it does not require to dismantle the market. It mostly requires an agreement in the society.[1]: https://en.m.wikipedia.org/wiki/Economic_calculation_problem\n \nreply",
      "I know this is going to be an unpopular take, but isn't the idea of socialism that you make a unitary democratic government fill the role of Huge Monopoly Foundation so you can do stuff like fund research labs and be accountable to the public?\n \nreply",
      "It's the statist idea. Socialism in practice usually involves regulating the market heavily, or into oblivion altogether, and giving the State a huge redistribution power. See my comment nearby on why such a setup fails to work.A socialism where the only way to work is to own a part of an enterprise (so no \"exploitation\"is possible) would likely work much better, and not even require a huge state. It would be rather inflexible though, or mutate back into capitalism as some workers would accumulate larger shares of enterprises.\n \nreply",
      "Hardly. Socialism is about workers/communities owning the means of production. Research labs these days are mostly funded by the public. That's just about allocation of government resources.\n \nreply",
      "> The freedom to waste time. The freedom to waste resources. And the autonomy to decide how.As the article notes, several companies (Apple, Google, etc.) could (currently) afford to fund such a lab, but there is no way their management and shareholders would approve.There's a reason for this: research labs seem to benefit competitors as much as (or more than) the companies that fund them. This wasn't an issue for AT&T when it was a monopoly, but it is now. Personally I don't see it as a problem (since one home run innovation could pay for the entire lab) but company managers and shareholders do.On the other hand, Apple does seem to have a de facto AI lab with a good deal of resource waste, so maybe that's good.\n \nreply",
      ">> The freedom to waste time. The freedom to waste resources. And the autonomy to decide how.> As the article notes, several companies (Apple, Google, etc.) could (currently) afford to fund such a lab, but there is no way their management and shareholders would approve.Google did set up such a lab. The mission of Google Brain was literally to hire smart people and let them do work on whatever they want. (\"Google Brain team members set their own research agenda, with the team as a whole maintaining a portfolio of projects across different time horizons and levels of risk.\" -- https://research.google.com/teams/brain/). Unsurprisingly, Google Brain is the place that originated the Transformer that powers the current AI craze (and many, many, many other AI innovations).\n \nreply",
      "And they shut it down. In 2023.The current tech giants spend a lot of money on \"research,\" where research means optimizing parts of the product line to the 10^nth order of magnitude.Arguably, Google Brain was one such lab. Albeit with more freedom than normal.Which is fine, it's their money. But then they (and the broader public) shouldn't bemoan the lack of fundamental advances and a slowdown in the pace of discovery and change.\n \nreply"
    ],
    "link": "https://1517.substack.com/p/why-bell-labs-worked",
    "first_paragraph": "",
    "summary": "Title: Boredom Fuels the Fire of Innovation, or So the Romantics Claim\n\nAh, the golden age of Bell Labs, where creative spirits ran wild, funded by the boundless coffers of AT&T\u2019s quasi-monopolistic bliss. Subscribers to the <em>romanticized past,</em> both author and commenters alike, wax poetic about the keys to unlocking human creativity: just stop worrying about petty things like food and shelter! \ud83c\udfa8 Critics, waving their fists at the capitalist sky, debate the merits of UBI, market regulation, and reviving dead Soviet economic models. Meanwhile, everyone conveniently forgets to address why modern giants like Google quietly kill off their pet \"innovation\" projects when the ROI starts looking grim. Ah, to dream the utopian dream amidst the ruins of pragmatism."
  },
  {
    "title": "Car companies are in a billion-dollar software war (insideevs.com)",
    "points": 198,
    "submitter": "rntn",
    "submit_time": "2025-05-11T17:51:04 1746985864",
    "num_comments": 336,
    "comments_url": "https://news.ycombinator.com/item?id=43955525",
    "comments": [
      "As someone who works professionally on embedded software devices that update over the internet, car companies are stuck not because they can't get software talent, but because they have no ability to actually build the electronics alongside the software, which is ultimately what constrains embedded software.\nWithout the right hardware, the constraints are just insurmountable, you can not do X feature because board A doesn't have the API to your MCU, or it runs some dogshit speed communication system that means you have 500ms lag. The feature is just unworkable, and if the PMs push it anyways you get what happens for the legacy car makers, terrible underpowered infotainment systems with no central design philosophy, stuck in an awkward, bad, middle between a full software stack and all buttons for everything. Their model of integrating 3rd party vendor computers just doesn't really work for this kind of thing; Tesla, Rivian, and the Chinese EV makers all manufacture all their own electronics, which lets them achieve the outcome. But you can not just roll all your own electronics in a year.\n \nreply",
      "This also works the opposite way. If the software roadmap does not inform the hardware requirements, then minimization of the bill of materials will lead to the selection of crappy hardware chips.\n \nreply",
      "I understand the concept, but the question I have is why?These companies have huge wallets, and can surely scoop up a smaller automative microcontroller company and bring it in-house? It seems like a problem than enough money could solve quickly, but they've been doing horribly at this for decades now.\n \nreply",
      "I work in one of the big three - the culture here is more waterfall and less agile. They decided at some point \u2018we don\u2019t need to be experts in building systems, we should only be good at spec\u2019cing them and putting them together\u2019\nThis leads to a mindset of relying on suppliers for changing even one line of code and at their mercy. \nTalent leaves because they didn\u2019t get to do any of the fun stuff. \nAnd you\u2019re left with bunch of MBAs trying to wing it in what is available which is - no talent, bunch of admineers, and a long list of supplier bills. \nThey go for cheapest component they can spec for a given feature cutting 4MB memory will save 5 cents per car, we sell half a million cars, that\u2019s big savings!\nI can go on and on about this, but one of us even tried to be Tesla trying to build our own zonal architecture - and are currently struggling due to costs, tarrifs and turnover. \nAlso you can\u2019t overnight change this mindset - building vs assembling. But there has to be some way and I\u2019m too about to walk out the door due to ~10yrs of frustrations.\n \nreply",
      "> They go for cheapest component they can spec for a given feature cutting 4MB memory will save 5 cents per car, we sell half a million cars, that\u2019s big savings!I'm tired. Been out in the sun all day. Explain this to me please.When I do the math I get 500000 * $0.05 = $25000That's a small drop in a large bucket of their gross income or net profits.\n \nreply",
      "> They decided at some point \u2018we don\u2019t need to be experts in building systems...So they've just chosen death. Fantastic, great to hear.\n \nreply",
      "The answer is that current car platforms were designed with flexibility as first goal.Car companies realized early on they could outsource component development and production to 3rd parties and they could make them bid each other to further lower the prices.So their platforms were optimized to be able to swap component vendors very easily (to achieve lowest costs).Of course the vendors are not 100% interchangeable and building a platform to accommodate everyone has to make sacrifices.Aka target the least common denominator across all vendors.\n \nreply",
      "too bad computers aren't spark plugs\n \nreply",
      "To be fair, this seemed to be the right strategy since they were able to be profitable in a very crowded market. Yes, the new companies try to verticalize everything from components to software, but none of them seem profitable (marginally Tesla passes the bar, but not so sure if you took away all the subsidies and carbon offsets).So maybe the legacy guys were right all along?\n \nreply",
      "I can tell you this works if your product doesn\u2019t need frequent upgrades/updates and isn\u2019t cohesive. \nIn legacy auto world, you ask for one line of code change and the supplier slaps 100k bill. \nThis is generally why things look old, outdated, carried over and buggy.\n \nreply"
    ],
    "link": "https://insideevs.com/features/759153/car-companies-software-companies/",
    "first_paragraph": "Chime in with article commenting.Ford announced this week that\u00a0it is merging FNV4, its project to develop a next-generation electrical architecture designed to unlock new functionality and upgradeability for both EVs and internal-combustion cars, with its existing architecture, seemingly confirming reports that the project has not gone as planned. It\u2019s another in a long, long line of false starts in the race for legacy automakers to develop true \u201csoftware-defined vehicles\u201d (SDVs), and further proof of just how hard the task is.It\u2019ll be worth the effort. Software-first architectures reduce costs, increase flexibility and\u2014perhaps most importantly\u2014allow automakers to move faster, without being slowed down by a complex web of suppliers creating their own code. Though becoming a leader in SDVs will be just as challenging as becoming an electric vehicle powerhouse, it\u2019s also equally important. Consumers have had it with clunky, slow automotive technology, and the modern car is so computerize",
    "summary": "In a **bold** move that surprises precisely no one, Ford clumsily attempts to merge FNV4 with its existing tech like a toddler with a jigsaw puzzle, proving that software innovation in cars is just as lumbering and graceless as their physical designs. Online armchair engineers come out in droves, ready to explain punishingly obvious facts about electronics, architecture, and the semantic despair of working in automotive software. Commenters trade war stories of backward corporate cultures and revel in the kind of masochistic glee only found in the most soul-sucking bureaucracies. Meanwhile, cutting 5 cents on memory chips is hailed as a corporate triumph, because who needs functioning software when you can add to the shareholders' dividend checks? \ud83e\udd16\ud83d\ude97\ud83d\udcb8"
  },
  {
    "title": "Scraperr \u2013 A Self Hosted Webscraper (github.com/jaypyles)",
    "points": 100,
    "submitter": "jpyles",
    "submit_time": "2025-05-11T18:29:18 1746988158",
    "num_comments": 35,
    "comments_url": "https://news.ycombinator.com/item?id=43955842",
    "comments": [
      "Shameless plug: prefix any URL with https://pure.md/ to get the pure markdown of that page. Useful for direct piping into an LLM. Has bot detection avoidance, proxy rotation, and headless JS rendering built in.\n \nreply",
      "Anyone have any experience webscraping from a Starlink IP? My assumption is you could stay under the radar due to cg nat, but it's not exactly something I want to be the first to find out about.\n \nreply",
      "My preferred \"self-hosted\" webscraper is a local, single binary called xidel [1]. The feature I really like is that it can also follow links.[1] https://github.com/benibela/xidel\n \nreply",
      "Wow, it's written in Pascal! That surely brings me to memory lane.\n \nreply",
      "Funny, I saw this HN headline just after banning another scraper's IP rangeYou're welcome to scrape my sites but please do it ethically. Idk how to define that but some examples of things I consider not cool:- Scraping without a contact method, or at least some unique identifier (like your project's codename), in the user agent string.This is common practice, see e.g.: <https://en.wikipedia.org/wiki/User-Agent_header#Format_for_a...>. Many sites mention in public API guidelines to include an email address so you can be contacted in case of problems. If you don't include this and you're causing trouble, all I can do is ban your IP address altogether (or entire ranges: if you hop between several IPs I'll have to assume you have access to the whole range). Nobody likes IP bans: you have to get a new IP, your provider has a burned IP address, the next customer runs into issues... don't be this person, include an identifier.- Timing out the request after a few seconds.Some pages on my site involve number crunching and take 20 seconds to load. I could add complexity to do this async instead, but, by having it live, the regular users get the latest info and they know to just wait a few seconds and everybody is happy. Even the scrapers can get the info, I'm fine computing those pages for you. But if you ask for me to do work and then walk away, that's just rude. It shows up in my logs as HTTP status 499 and I'll ban scrapers that I notice doing this regularly- Ignoring robots.txt.I have exactly 1 entry in there, and that's a caching proxy for another site that is struggling with load. If you ignore the robots file and just crawl the thing from A to Z at a high rate, that causes a lot of requests to the upstream site for updating stale caches. You can obviously expect a ban because it's again just a waste of resources\n \nreply",
      "What sort of pages require 20 seconds to generate? This is extremely slow by most web standards and even your users would be frustrated by this. It sounds like poorly designed database queries with unindexed joins.Google will also abandon page loads that take too long, and will demote rankings for that page (or the entire site!)\n \nreply",
      "> It sounds like poorly designed database queries with unindexed joinsNeither of those assumptions are correct. As an example, one page needs to look through 2.5 million records to find where the world record holder changed because it provides stats on who held the most records, held them for the greatest cumulative time, etc. The only thing to do would be introducing caching layers for parts of the computation, but for the number of users this system has, it's just not worth spending more development time than I already have. Also keep in mind it's a free web service and I don't run ads or anything, it's just a fan project for a game> Google will ... demote rankings for that page (or the entire site!)Google employs anticompetitive practices to maintain the search monopoly. We need more diversity in search engines, I don't know how else to encourage people to use something instead of, or at least in addition to, Google, besides by making Google Search just not competitive anymore. Google's crawler cannot access my site in the first place (but their other crawlers can; I'm pretty selective about this). My sites never show up in Google searches, on purposeIt's also not the whole site that's slow, it's when you click on a handful of specific pages. If that makes those pages not appear in search results, that's fine. Besides that it's not my loss, it's not like any other site has the info so people will find their way to the main page and click on what they want to see\n \nreply",
      "Like I said then, you need indexes on those columns which you filter on in this table. Search a table of 2.5 million records for a value is still blazing fast if you use indexes correctly. I\u2019m talking about 0.01 seconds or less. Even with tables much larger.I agree about Google being shit. However, my website makes my living, and feeds and clothes my children, so I have to play along to their rules, or suffer.Please take your slowest performing query and run it with EXPLAIN in front. And share that (or dump it into an LLM and it will tell you have to fix it)\n \nreply",
      "> It sounds like poorly designed database queries with unindexed joins.I find it amusing that you think every database operation imaginable can be performed in less than 20 seconds if we throw in a few indexes. Some things are slow no matter how much you optimise them.The GP could have implemented them as async endpoints, or callbacks, but obviously they've already considered those options.\n \nreply",
      "It's the kind of prescriptive cargo culting that is responsible for a significant fraction of pain involved in software engineering, right up there with DRY and KISS and shitty management.I bet the GP abstracts out a function the second there's a third callsite too, regardless of where it's used or how it will evolved - only to add an options argument and blow up the cyclomatic complexity three days later.\n \nreply"
    ],
    "link": "https://github.com/jaypyles/Scraperr",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Self-hosted webscraper.\n      A powerful self-hosted web scraping solutionScraperr enables you to extract data from websites with precision using XPath selectors. This self-hosted application provides a clean interface to manage scraping jobs, view results, and export data.\ud83d\udcda Check out the docs for a comprehensive quickstart guide and detailed information.When using Scraperr, please remember to:Disclaimer: Scraperr is intended for use only on websites that explicitly permit scraping. The creator accepts no responsibility for misuse of this tool.This project is licensed under the MIT License. See the LICENSE file for details.Development made easier with the webapp template.To get started, simply run make build up-dev.\n        Self-hosted webscraper.\n      ",
    "summary": "**Scraperr \u2013 Revolutionizing Data Harvesting, One Ethical Dilemma at a Time**\n\nIn a daring leap over the lowest of ethical bars, <em>Scraperr</em> thunders onto the self-hosted scene to scrape websites that say it's okay to scrape them, because asking for permission is still in vogue. As the creator heroically absolves themselves of any users' digital misdemeanors, the comment section morphs into a hive of self-congratulation and unasked advice. Here we see Github\u2019s finest, juggling legality, ethics, and self-righteous tech solutions that no one asked for\u2014because someone must save the internet from its own data. Meanwhile, a lone voice reminisces about Pascal, sparking nostalgia for a simpler, less scrape-y time. \ud83d\ude80\ud83d\udc68\u200d\ud83d\udcbb"
  },
  {
    "title": "High-school shop students attract skilled-trades job offers (wsj.com)",
    "points": 130,
    "submitter": "lxm",
    "submit_time": "2025-05-11T15:31:39 1746977499",
    "num_comments": 200,
    "comments_url": "https://news.ycombinator.com/item?id=43954488",
    "comments": [
      "https://archive.ph/sWpS1",
      "A friend is dropping out of IT to pursue welding - but knows the money just isn\u2019t there. She\u2019s starting a 5:30am 10 hour shift at a manufacturer to be able to move onto welding and CNC. She\u2019s autistic so can struggle sometimes but is also one of the smartest people I know and does physics puzzles for fun and builds shit all the time.Skilled trade jobs value paying your dues. Its more about that than aptitude it seems to me.Sorry high schoolers, $70k a year is not happening - this kid is privileged as fuck.\n \nreply",
      "\"Sorry high schoolers, $70k a year is not happening - this kid is privileged as fuck.\"My oldest son is 17 years old and graduated one semester early from high school.He now works full-time as a welder and heavy equipment mechanic with a base rate of $25/hour and will get many, many hours of overtime this summer.He will easily gross > 70k this year.Granted, this is in the Bay Area (so add some inflation there) and he has certain physical and interpersonal attributes[1] that make him special ... but this is, indeed, happening and my impression is that it would be repeatable for others like him.FWIW, he's very proud of himself and we're very proud of him but ... we're also trying to impress upon him that wages - however high - are not a path to wealth and security.  Owning things is[2].[1] He's a big strong guy, projects as aged 20+ and is very outgoing and charismatic.[2] https://en.wikipedia.org/wiki/Capital_in_the_Twenty-First_Ce...\n \nreply",
      "\"many hours of overtime this summer.\"I think the biggest misconception with any of the trades jobs is that yes, you can make 70K+, even 100K+, but that involves lots of overtime.\n \nreply",
      "Yeah, is it really a good  indicator if you need to work 20 hours overtime every week to make the median household income? That's just exploitation.We also just know that, blue or white, there is no raise structure in society anymore. You can't just do honest work or even be loyal and expect it to pay off financially.\n \nreply",
      "> or even be loyalWhat's loyalty got to do with this? I'm not \"loyal\" to my employer and I don't know anyone who is. If I find a job that pays better, and offers better conditions, I'll take it. Why would anyone do anything else, and why would anyone put any value on that?\n \nreply",
      "Tribal knowledge and company familiarity should justify the employer in offering raises to keep the employee around. Hiring someone new almost assuredly costs more in both the front-end and the back-end.\n \nreply",
      "I'm not sure what the rest of the US market is like, but the Bay Area has a huge shortage of tradespeople because of the 2008 housing crash and very high cost of living pricing folks out. I knew of this but became much more acutely aware when I started doing transit advocacy. Getting folks to build/maintain HVAC systems, weld, drive buses, etc is getting increasingly difficult.If your son can avoid having to buy into the Bay Area housing market (by living on property you own/pay for), he can make good money and probably will have little trouble finding work for years to come.\n \nreply",
      "By comparison I was making $75k in the Bay Area as an entry level software engineer with no overtime and only because I was afraid of negotiating higher (I think 85-90 was on the table).This isn\u2019t to take anything away from your son\u2019s achievements and congrats to him and you all should of course be proud of his accomplishments. I think though it\u2019s useful to compare and contrast blue collar and white collar wages in terms of effort per dollar earned as well when discussing options to kids. There\u2019s nothing wrong with working harder for that amount, especially when you love the work because then you get even more pride out of it, but some kids may want to work harder in the \u201cshort\u201d term via a professional education for the long term easier path or have better job stability even in the face of physical ailments.\n \nreply",
      "Some people like physical work and don\u2019t place high value on office jobs [1][2][1] I did not say some people don\u2019t enjoy physical work but do physical work anyway.[2] I did not say there is anything wrong with a preference for office jobs.\n \nreply"
    ],
    "link": "https://www.wsj.com/lifestyle/careers/skilled-trades-high-school-recruitment-fd9f8257",
    "first_paragraph": "",
    "summary": "**High-schoolers Lure Skilled-Trades With Their Youthful Naivety**\n\nIn a stunning development reported with breathless admiration by the Wall Street Journal, teenagers in shop class are apparently the new hot commodity for skilled labor markets desperate enough to consider anyone who can tell a wrench from a hammer. Comment sections, those bastions of verifiable socioeconomic analysis, become battlegrounds where proud parents flaunt their child-prodigy welders who scoff at the poverty line by working back-breaking hours in the \u2018land of opportunity\u2019\u2014the Bay Area. Critics ardently point out that surviving on a starvation wage for 70 hours a week isn't a career but economic desperation dressed as opportunity. Meanwhile, disillusioned IT dropouts remind us that loyalty in the workforce is as outdated as the idea that manual labor is compensated fairly anywhere but in parental anecdotes. \ud83e\udd11\ud83d\udcb8\ud83d\udee0\ufe0f"
  },
  {
    "title": "Burrito Now, Pay Later (enterprisevalue.substack.com)",
    "points": 93,
    "submitter": "gwintrob",
    "submit_time": "2025-05-11T20:09:04 1746994144",
    "num_comments": 141,
    "comments_url": "https://news.ycombinator.com/item?id=43956723",
    "comments": [
      "One reason is that someone\u2019s or a company\u2019s income doesn\u2019t always align perfectly with when they want to buy things.\n\nWhen we're talking about financing the construction of a new downtown office tower, a new apartment complex, or the unexpected maintenance of your business's whole auto fleet, I can absolutely see the argument that credit is mechanism of greasing the wheels of the economy and allowing things to happen that otherwise would not be able to happen if everyone had to wait until they were table to save all of the cash and pay upfront.    This logic doesn\u2019t change just because the thing being financed is a burrito.\n\nWhen we're talking about food, the absolute most basic human need, I start to question whether or not this is actually a good thing and is instead just a temporary band-aid over a much more serious economic problem that would be better off getting solved more permanently with a different economic or political tool.\n \nreply",
      "Food is a basic human need, paying someone to make a burrito for you and then hand deliver it to your house is not. There is no shortage of food in america. In brazil, many people don\u2019t eat meat because it\u2019s too expensive, and get the vast majority of their calories from beans and rice. you can also do this in america, but almost no one does outside of college students because food is cheap enough relative to wages that people can generally afford to eat a wide variety of foods.The bigger problem with BNPL, in my view, is that a lot of people are not able to understand the concept of credit. I knew people in my hometown who got a credit card, and their reaction to having a $3k credit limit was the exact same as if they had gotten $3k deposited into their bank account. I\u2019m honestly not sure whether they understood that they didn\u2019t just randomly get given $3k. I saw this happen multiple times. But it sounds very patronizing to say the \u201cthere\u2019s a lot of poor people who don\u2019t understand credit, so we need to prevent them from having access to any so they don\u2019t get the chance to screw themselves\u201d, so I understand why no one does.\n \nreply",
      "I agree entirely with this sentiment. It almost feels like it's our ages \"Keeping up with the Joneses\". Even if 30-50% of your social circle can afford it without incurring debt if it becomes the social norm we'll all keep doing it. It's unfortunate but I don't know how this generation learns this lesson.\n \nreply",
      "\u201cFear of sounding patronizing\u201d sounds like a cocktail party problem.  If that\u2019s stopping someone - being made fun of by another member of their elite class - that\u2019s a recipe for failure.\n \nreply",
      "There are many, many stupid people who would benefit from being protected from themselves. How far down that path we want to walk as a society is an eternal debate.\n \nreply",
      "You're right, and anybody that tries to convince us otherwise is the enemy, or a friend of the enemy.Now our world is all about maximum profit extraction. Interest.How about no more public education, you get a loan for it. What, that's what your taxes pay for? Well, it's not enough, too bad. The masters say that you can't possibly pay enough tax to give your child an education. But they'll give you a loan for it, with interest.Coming very soon to a reality near you. And I thought we were done with being peasants.\n \nreply",
      "Expected debt levels are more a function of personal time preference/utility nonlinearity w.r.t. wealth than they are a function of ambient economic conditions. When broke people win the lottery, they usually end up broke again.\n \nreply",
      "I think that is about the most gentle way you can put it. This is an echo of 2008 and the notion that this is normal is so absurd to me. It comes off as super out of touch. Financing groceries is dystopian.\n \nreply",
      "I agree.  Just because you can price, trade, and provide liquidity for \"a thing\" doesn't mean \"that thing\" can, or should, be financialized.\n \nreply",
      "But but but \u201ccomplete market\u201d!The deployment of Econ-degree lingo doesn\u2019t help the case.\n \nreply"
    ],
    "link": "https://enterprisevalue.substack.com/p/burrito-now-pay-later",
    "first_paragraph": "",
    "summary": "In a stunning leap of financial innovation, enterprisevalue.substack.com presents \"Burrito Now, Pay Later,\" a compelling saga about the dystopian reality where even the humble burrito isn't safe from the financial overlords' clutches. As expected, the comment section lights up with financial acumen, with responders oscillating between dread and denial. One notably enlightening contributor equates ignorance of basic finance to a revolutionary act against the hellscape of neo-feudalism, wherein we can't even trust our layman's grasp of credit without a PhD in economic doomscrolling. Meanwhile, patronizing tales of \"the poor don't get it\" ripple through, reminding everyone that it's not just the economy that's broken, but perhaps also our heart\u2014or at least what's left of it after being collateralized into a securitized debt obligation. \ud83d\ude31\ud83d\udcb8"
  },
  {
    "title": "LSP client in Clojure in 200 lines of code (vlaaad.github.io)",
    "points": 98,
    "submitter": "vlaaad",
    "submit_time": "2025-05-11T17:38:38 1746985118",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=43955397",
    "comments": [
      "This is the most Java-y Clojure I\u2019ve probably ever read. Just use Java? It\u2019s so verbose and complex for what it is doing. Breaking this down into smaller functions and using core.async would make it even more succinct.Just want to emphasize this because clojure is indeed a small, lesser known language that has a hard enough time attracting users. This is not what anyone would consider an idiomatic example of using clojure.\n \nreply",
      "Would it be 200 lines of Java? It'd be 200 lines of just for the boilerplate. It isn't really a selling point of Clojure because it is subjective, but low-syntax high-terseness look of the code is in itself a reward for using the language.And there isn't anything especially wrong with sticking to Java primitives if someone is comfortable with them. They work fine for Java programmers. The dude doesn't need to learn a new async library to write an LSP client if he doesn't feel like it. Code works, its easy to read, easy to understand and modify.\n \nreply",
      "Line count is not very useful to compare without the context of standard library size, third-party dependencies, etc. The code in TFA depends[1] on a JSON library[2] that is about a thousand lines of code (excluding tests) wrapping a Java library for JSON decoding.Then there's other things to consider, like the fact that this LSP client, while succinct, pays not only the cost of loading Jackson, but also the cost of loading clojure.core, which is quite non-trivial[3]. Startup time for LSP servers and clients definitely matters to some, considering that e.g. even clojure-lsp recommends running native executables over JAR files[4]. Can't find documentation proving it's for quick startup, but it's a plausible rationale for their recommendation of a binary over a JAR.Note: I have used Clojure professionally and in hobby projects. I think it's nice that one can interactively develop a minimal LSP client and the resulting amount of work is roughly 200 lines of code. I say \"minimal\" because it's unclear how this client deals with offsets reported by LSP servers, which are all given as offsets in a UTF-16 encoded string. In any case, I still think advertising \"LSP client in 200 lines of code\" hides valuable information regarding functionality, implementation, \"actual\" code size, and trade-offs made in the choice of technology stack.[1] https://github.com/vlaaad/lsp-clj-client/blob/a567e66/deps.e...[2] https://github.com/metosin/jsonista/blob/c8f2b62/project.clj...[3] https://clojure-goes-fast.com/blog/clojures-slow-start/#cloj...[4] https://clojure-lsp.io/installation/#embedded-jar-legacy-exe...\n \nreply",
      "5 hours, 66 points, and still no comments. So we're all thinking the same thing?\n \nreply",
      "My thoughts are \"cool!, neat!\"But I don't feel like the world particularly needs to hear my singleton exclamations, no reason to add unnecessary noise, this isn't reddit.\n \nreply",
      "Yeah I feel yah; But to bolster the post:I now want to hear more as to why Defold now has a clojure repl! I noticed some musings around some native bindings in gh issues which is \"interesting\" but I'm not quite getting it. I guess off to the forums I go!\n \nreply",
      "What same things?\n \nreply"
    ],
    "link": "https://vlaaad.github.io/lsp-client-in-200-lines-of-code",
    "first_paragraph": "Awhile ago I was prototyping integrating LLMs with LSP to enable a language model to answer questions about code while having access to code navigation tools provided by language servers. I wasn\u2019t that successful with this prototype, but I found it cool that I could write a minimal LSP client in around 200 lines of code. Of course, it was very helpful that I previously wrote a much more featureful LSP client for the Defold editor\u2026 So let me share with you a minimal LSP client, written in Clojure, in under 200 lines. Also, at the end of the post, I\u2019ll share my thoughts on the LSP.Who is the target audience of this blog post? I don\u2019t even know\u2026 Clojure developers writing code editors? There are, like, 3 of us! Okay, let\u2019s try to change the scope of this exercise a bit: let\u2019s build a command line linter that uses a language server to do the work. Surely that wouldn\u2019t be a problem\u2026Some terminology and scope first. LSP stands for Language Server Protocol, a standard that defines how some te",
    "summary": "**Hacker Heroes Solve Everything**: Once again, the indomitable forces of Hacker News have assembled to marvel at the LSP client in Clojure crammed into a paltry 200 lines, a magnanimous feat only slightly overshadowed by the collective dismay over its Java-like verbosity. \ud83e\udd13 One valiant commenter points out the inefficiency of line counts as a metric without a telethon for context, drawing parallels to ingredients in a keto cake. Meanwhile, another pioneer nearly dislocates a shoulder patting themselves on the back for not turning Hacker News into Reddit with their \"cool! neat!\" restraint. In true fashion, the echoing silence in the comment section sings volumes, with a lone tinkerer wandering off to forums in search of why anyone would bolt a Clojure REPL to Defold. The article, an enigmatic puzzle for niche enthusiasts, continues to hover in the realm of \"I guess you had to be there.\" \ud83d\udee0\ud83d\udcbb"
  },
  {
    "title": "Title of work deciphered in sealed Herculaneum scroll via digital unwrapping (finebooksmagazine.com)",
    "points": 176,
    "submitter": "namanyayg",
    "submit_time": "2025-05-11T14:02:03 1746972123",
    "num_comments": 76,
    "comments_url": "https://news.ycombinator.com/item?id=43953883",
    "comments": [
      "There is a PBS documentary about this very thing and how it got started. Very cool and worth the watch. Needless to say, the researcher had quite a few hurdles to overcome.https://www.youtube.com/watch?v=cw44V49Fz9U\n \nreply",
      "\"Video unavailable\nThe uploader has not made this video available in your country\"So much for the global internet.\n \nreply",
      "VPN\n \nreply",
      "probably similar video: https://www.youtube.com/watch?v=Z_L1oN8y7Bs\n \nreply",
      "This is really exciting. If you're not aware, the scrolls at Herculaneum are an entire pagan library from the first century. They're burned, hard to recover, mostly still buried. Being able to decode them without physically digging them up and damaging them is awesome.Who knows what we could find. So many books have been lost.\n \nreply",
      "Seems a bit confusing to call it a \"pagan library\" when it's just the personal library of a very rich ancient Roman.The ancient Roman elite often had extensive personal libraries which they shared with their friends, almost like a very primitive book publishing industry.\n \nreply",
      "From the Christian, anyone who wasn't part of the Christian or Jewish faiths was considered pagan. In the first century CE, Epicureans were part of the broader category of Hellenistic pagan philosophers\u2014which included Stoics, Platonists, and others\u2014who were polytheistic or at least non-Christian. So since Philodemus makes up most of the library here, it's pretty safe to call it a \"pagan\" library.\n \nreply",
      "But there is no reason to situate it in a Christian context. We are in a global multi religious community here. I could call your comment bad, supported by it being a trite semantic argument without relevancy for the subject. But that would do nothing to further the discussion here. Calling the library non-confucianist would be even more correct as Platonists are an important foundation for Christian thought. Though a completely useless labeling just as the pegan label.\n \nreply",
      "> Calling the library non-confucianist would be even more correct as Platonists are an important foundation for Christian thought.Epicureans aren't Platonists. We know that the library went heavy on Epicurean texts.The word \"pagan\" is still used by Classicists today.\n \nreply",
      "There is a reason to situate it in a roman context. Rome eventually becomes christianized and it makes sense to talk about before and after that. Obviously the old still influences the new, its not a hard line, but it is a major change in roman society.\n \nreply"
    ],
    "link": "https://www.finebooksmagazine.com/fine-books-news/title-work-deciphered-sealed-herculaneum-scroll-digital-unwrapping",
    "first_paragraph": "For book news, special columns, auction reports, events, and more.The scroll's titleThe Bodleian Libraries and the Vesuvius Challenge have announced that for the first time researchers have found the title and author inside of a sealed scroll from Herculaneum.Using \u2018virtual unwrapping\u2019, the scroll PHerc. 172 which is housed at the Bodleian Libraries at the University of Oxford has been identified as On Vices by the Greek philosopher Philodemus. The ethical treatise, known in full as On Vices\u00a0and Their Opposite Virtues and In Whom They Are and About What, provides guidance for cultivating a virtuous life. In recognition of this achievement, researchers have been awarded the Vesuvius Challenge First Title Prize which includes prize money of $60,000.Following the scanning of the scroll in July 2024 at the Diamond Light Source in Harwell, the Vesuvius Challenge released the data publicly, inviting researchers worldwide to contribute to deciphering the text. While the first images of the in",
    "summary": "**Tech-Savvy Bookworms Celebrate Ancient Sticky Notes**\n\nIn an unparalleled display of technological overkill, Oxford \"scientists\" have managed to digitally open a BBQ-flavored potato chip, otherwise known as a Herculaneum scroll. Reveling in their decoding fiesta\u2014which discovered the groundbreaking title *On Vices by Philodemus* \u2014 the researchers are now $60,000 richer, because reading is apparently a lucrative game show now. Meanwhile, in the trivial pursuit section of the internet, commenters clash over whether calling a stack of Epicurean dissertations a \"pagan library\" is historically insensitive or just a fun fact for your next pretentious dinner party. As always, constructive dialogue triumphs \ud83e\udd73."
  },
  {
    "title": "Monitoring my Minecraft server with OpenTelemetry and Prometheus (dash0.com)",
    "points": 45,
    "submitter": "mmanciop",
    "submit_time": "2025-05-08T11:03:14 1746702194",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=43925005",
    "comments": [
      "Monitoring and metric collection makes a lot of sense when you run a production system, or a personal but critical system.Promoting a telemetry solution when it comes to a hobby server, which you host for yourself and which can\u2019t bankrupt you by running up a massive AWS bill, doesn\u2019t seem to make much sense when you can simply bottle it up in Docker and recreate at will (mount volumes for logs and persistent data, back it up, and you\u2019re good).With games like Minecraft in particular there\u2019s value in being able to have multiple servers with different worlds, perhaps different mods, etc. What I think could be a more interesting exercise is a dashboard for friends or family that allows to manage the lifetime and configuration of their respective containers.\n \nreply",
      "I am currently planning adding monitoring to some toy apps I hosted on a raspberry pi cluster. The intent is that this might safe me time and stress further down the road. If a new version makes performance worse, I want to see that in the data. If resource needs go up, I want to know that before it's time to move, so that I can plan without any kind of scheduling stress. (I also want to do this in part as an exercise which is partial motivation for the cluster and most things I built that run on it. But don't tell anyone!)Am I misguided?\n \nreply",
      "Have you never just built something for fun?\n \nreply",
      "[flagged]",
      "Why are you doing this?\n \nreply",
      "Hi gippity\n \nreply"
    ],
    "link": "https://www.dash0.com/blog/monitoring-minecraft-with-opentelemetry",
    "first_paragraph": "One of the secret pleasures of life is to be paid for things you would do for free. On a completely unrelated note, this blog post documents my time figuring out how to monitor a Minecraft server with OpenTelemetry, Prometheus and Dash0.The Minecraft Server repository on GitHub provides step-by-step setup instructions you can follow along.I want a Minecraft server for multiplayer, where I can do mischief with the kids. And hopefully do not embarrass myself too much by being repeatedly killed by angry chickens or whatever.Kids these days think Java is not a cool programming language. Little do they know that it powers one of the games they love most: Minecraft.(Well, technically the \u201coriginal\u201d Minecraft server is written in Java. Microsoft made things confusing by adding the Bedrock server, which reportedly uses a combination of C, C# and Java, and is different in terms of gameplay from vanilla in subtle ways. Opinions on Reddit differ on why Bedrock needed to exist in the first place.)",
    "summary": "In an earth-shattering blog that's sure to save the Minecraft multiverse, a daring innovator has combined the raw excitement of watching grass grow with the thrill of reading server logs by setting up OpenTelemetry and Prometheus to monitor a Minecraft server. Parents and mischievous children rejoice: now your backyard server hacks are armed with the same industry-standard diagnostics as a pizza delivery app. Comments are a delightful mix of misplaced server envy and thinly veiled regret, as readers struggle to determine if turning a leisure activity into a sysadmin boot camp is a stroke of genius or a cry for help. As always, the real game is played in the comments section, where the standards of success are as ill-defined and varied as the countless Minecraft mods apparently needing expert monitoring."
  },
  {
    "title": "Writing an LLM from scratch, part 13 \u2013 attention heads are dumb (gilesthomas.com)",
    "points": 199,
    "submitter": "gpjt",
    "submit_time": "2025-05-08T21:06:02 1746738362",
    "num_comments": 29,
    "comments_url": "https://news.ycombinator.com/item?id=43931366",
    "comments": [
      "The most clarifying post I've read on attention is from Cosma Shalizi[0] who points out that \"Attention\" is quite literally just a re-discovery/re-invention of Kernel smoothing. Probably less helpful if you don't come from a quantitative background, but if you do it makes it shockingly clarifying.Once you realize this \"Multi-headed Attention\" is just kernel smoothing with more kernels and doing some linear transformation on the results of these (in practice: average or add)!0. http://bactra.org/notebooks/nn-attention-and-transformers.ht...\n \nreply",
      "It's a useful realization, too, since ways of approximating kernel functions are already well-studied. Google themselves have been publishing in this area for years, e.g. https://research.google/blog/rethinking-attention-with-perfo...> To resolve these issues, we introduce the Performer, a Transformer architecture with attention mechanisms that scale linearly, thus enabling faster training while allowing the model to process longer lengths, as required for certain image datasets such as ImageNet64 and text datasets such as PG-19. The Performer uses an efficient (linear) generalized attention framework, which allows a broad class of attention mechanisms based on different similarity measures (kernels). The framework is implemented by our novel Fast Attention Via Positive Orthogonal Random Features (FAVOR+) algorithm, which provides scalable low-variance and unbiased estimation of attention mechanisms that can be expressed by random feature map decompositions (in particular, regular softmax-attention). We obtain strong accuracy guarantees for this method while preserving linear space and time complexity, which can also be applied to standalone softmax operations.\n \nreply",
      "For those who don't know the term \"kernel smoothing\", it just means    \u2211\u1d62 y\u1d62 \u00b7 K(x\u1d62, x\u2092) \u2044 (\u2211\u2c7c K(x\u2c7c, x\u2092))\n\nIn regular attention, we let K(x\u1d62, x\u2092) = exp(<x\u1d62, x\u2092>).Note that in Attention we use K(q\u1d62, k\u2092) where the q (query) and k (key) vectors are not the same.Unless you define K(x\u1d62, x\u2092) = exp(<W_q x\u1d62, W_k x\u2092>) as you do in self-attention.There are also some attention mechanisms that don't use the normalization term, (\u2211\u2c7c K(x\u2c7c, x\u2092)), but most do.\n \nreply",
      "> \u2211\u1d62 y\u1d62 \u00b7 K(x\u1d62, x\u2092) \u2044 (\u2211\u2c7c K(x\u2c7c, x\u2092))That clarifies things...\n \nreply",
      "In kernel methods the kernel is typically given, and things like positional embeddings, layer normalization, causal masking, and so on are missing. Kernel methods did not take off partly due to their computational complexity (quadratic in sample size), and transforms did precisely because they were parallelizable, and thus computationally efficient, compared with the RNNs and LSTMs that came before them.Reductions of one architecture to another are usually more enlightening from a theoretical perspective than a practical one.\n \nreply",
      "Wow, thanks for referencing that. What a very detailed and long read!\n \nreply",
      "This looks very interesting.\nThe easiest way to navigate to the start of this series of articles seems to be\n https://www.gilesthomas.com/til-deep-dives/page/2Now if I only could find some time...\n \nreply",
      "maybe it renders differently on mobile but this was the first entry for me. you can use the nav at the end to continue to the next parthttps://www.gilesthomas.com/2024/12/llm-from-scratch-1\n \nreply",
      "https://news.ycombinator.com/from?site=gilesthomas.com\n \nreply",
      "Too bad the book seems to be using Python and some external library like tiktokens just from chapter 2, meaning that it'll basically stop working next week or so, like everything Python, making the whole thing much harder to follow in the future.Meanwhile i learned the basics of machine learning and (mainly) neural networks from a book written in 1997[0] - which i read last year[1]. It barely had any code and that code was written in C, meaning it'd still more or less work (though i didn't had to try it since the book descriptions were fine on their own).Now, Python was supposedly designed to look kinda like pseudocode, so using it for a book could be fine, but at least it should avoid relying on external libraries that do not come with the language itself - and preferably stick to stuff that have equivalent to other languages too.[0] https://www.cs.cmu.edu/~tom/mlbook.html[1] which is why i make this comment (and to address the apparent downvotes): even if i get the book now i might end up reading it in 3-4 years. Stuff not working will be a major obstacle. If the book is good, it might end up been recommended by people 2-3 years from now and some people may end up getting it and/or reading it even later in time. So it is important for the book to be self-contained, at least when it comes to books that try to teach the theory/ideas behind things.\n \nreply"
    ],
    "link": "https://www.gilesthomas.com/2025/05/llm-from-scratch-13-taking-stock-part-1-attention-heads-are-dumb",
    "first_paragraph": "Now that I've finished chapter 3 of\nSebastian Raschka's book\n\"Build a Large Language Model (from Scratch)\" --\nhaving worked my way through multi-head attention in the last post --\nI thought it would be worth pausing to take stock before moving on to Chapter 4.There are two things I want to cover, the \"why\" of self-attention, and some thoughts\non context lengths.  This post is on the \"why\" -- that is, why do the particular\nset of matrix multiplications described in the book do what we want them to do?As always, this is something I'm doing\nprimarily to get things clear in my own head -- with the possible extra benefit of it\nbeing of use to other people out there.  I will, of course, run it past multiple\nLLMs to make sure I'm not posting total nonsense, but caveat lector!Let's get into it.  As I wrote in\npart 8 of this series:I think it's also worth noting that [what's in the book is] very much a \"mechanistic\" explanation -- it says how we do these calculations\n  without saying why. I thi",
    "summary": "In the latest installment of \"Discovering the Obvious,\" our fearless blogger dives headlong into the murky waters of matrix multiplications that nobody asked about. While our hero ponders the cosmic mysteries of self-attention, readers are treated to a eureka moment as they realize it's just glorified kernel smoothing\u2014or in simpler terms, old wine in new buzzwords. The comment section, that bastion of lost productivity, quickly becomes a battleground for who can drop the most obscure reference, with special points awarded for using links that no human will ever click on. As always, caveat lector, because the only thing you're guaranteed to take away from this series is a healthy dose of confusion masked as enlightenment."
  },
  {
    "title": "I hacked my clock to control my focus (paepper.com)",
    "points": 13,
    "submitter": "rcarmo",
    "submit_time": "2025-05-11T23:12:42 1747005162",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=43958082",
    "comments": [
      "I like to set timers. I use the taskbar timer in xfce to set it to say 30mins, and then I work on getting something done in that time. It works really well. Not sure if this has a common name.This was really helpful when I redid the FastComments admin area, as that was a big slog of UI work that I quickly got tired of. This was before Claude :)\n \nreply",
      "is there something similar for macOS?\n \nreply",
      "This is neat. Low cost, built from stolen parts. 10/10 engineering.\n \nreply"
    ],
    "link": "https://www.paepper.com/blog/posts/how-i-hacked-my-clock-to-control-my-focus.md/",
    "first_paragraph": "\n\n\n\n\n        2 minutes\n\n        \n      I often get distracted.I obviously don\u2019t like it.So I decided to turn my computer\u2019s clock into a constant reminder to help me focus.This hack requires:Install Panel Date Format from the GNOME Extensions website.Create a file named focus.sh in your preferred location:Make it executable:For easy access from any terminal:Now you can type focus.sh Coding or focus.sh Marketing and your clock features a persistent reminder of your intended focus.Screenshot of how it looks like when the focus is set to 'Agents'This hack works because it piggybacks on an existing behavior pattern rather than trying to create a new one.You could extend this with:Hear my takes on machine learning and solopreneurship:\n\nproductivity\nbash\n\n\nTools\n\n\n\n\n\n\n\n\n        290 Words\n      \n\n\n\n\n\n\n        \n          May 11, 2025\n        \n\n         \n          \n        \n      ",
    "summary": "**I Hacked My Clock To Control My Focus and All I Got Was This Lousy Blog Post**\n\nA groundbreaking revelation comes from a modern Da Vinci who concludes that the ultimate lifehack is reprogramming a GNOME clock via a shell script to display \"focus\" reminders, because regular sticky notes are just too mainstream. Armed with an iron will and too much free time, our hero demonstrates how changing \"13:45\" to \"13:45 Coding\" is a Herculean task equivalent to reinventing the wheel, but with more script errors. Comments are a mix of low-effort digital applause and someone earnestly asking \"is there something similar for macOS?\" because installing a whole operating system for a clock tweak seems reasonable. Truly, we're witnessing the pinnacle of procrastination disguised as <em>productivity hacking</em>. \ud83d\udc4f\ud83d\udc0c\ud83d\udcbb"
  },
  {
    "title": "Avoiding AI is hard \u2013 but our freedom to opt out must be protected (theconversation.com)",
    "points": 28,
    "submitter": "gnabgib",
    "submit_time": "2025-05-12T00:09:48 1747008588",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=43958382",
    "comments": [
      "> Imagine applying for a job, only to find out that an algorithm powered by artificial intelligence (AI) rejected your resume before a human even saw it. Or imagine visiting a doctor where treatment options are chosen by a machine you can\u2019t question.I wonder when/if the opposite will be as much of an article hook:\"Imagine applying for a job, only to find out that a human rejected your resume before an algorithm powered by artificial intelligence (AI) even saw it. Or imagine visiting a doctor where treatment options are chosen by a human you can\u2019t question.\"The implicit assumption is that it's preferred that humans do the work. In the first case, probably most would assume an AI is... ruthless? biased? Both exist for humans too. Not that the current state of AI resume processing is necessarily \"good\".In the second, I don't understand as no competent licensed doctor chooses the treatment options (absent an emergency); they presumably know the only reasonable options, discuss them with the patient, answer questions, and the patient chooses.\n \nreply",
      "Humans can be held accountable. Machines can't. AI dilutes responsibility.\n \nreply",
      "AI didn't bring anything new to the table, this is a human problem. https://www.youtube.com/watch?v=x0YGZPycMEU\n \nreply",
      "How fortunate that AIs are tools operated by humans, and can't cause worse responsibility issues than when a human employee is required to blindly follow a canned procedure.\n \nreply",
      "What do you mean held accountable?  No HR human is going to jail for overlooking your resume.If you mean that a human can be fired when they overlook a resume, an AI system can be be similarly rejected and no longer used.\n \nreply",
      "Humans can be held accountable when they discriminate against groups of people. Try holding a company accountable for that when they're using an AI system.\n \nreply",
      "You cannot punish an AI - it has no sense of ethics or morality, nor a conscience. An AI cannot be made to feel shame. You cannot punish an AI for transgressing.A person can be held responsible, even when it's indirect responsibility, in a way that serves as a warning to others, to avoid certain behaviors.It just seems wrong to allow machines to make decisions affecting humans, when those machines are incapable of experiencing the the world as a human being does. And yet, people are eager to offload the responsibility onto machines, to escape responsibility themselves.\n \nreply",
      ">Or imagine visiting a doctor where treatment options are chosen by a human you can\u2019t questionThat really struck a chord with me.  I've been struggling with chronic sinusitis, without really much success.  I had ChatGPT o3 do a deep research on my specific symptoms and test results, including a negative allergy (on my shoulder) test but that the doctor observed allergic reactions in my sinuses.ChatGPT seemed to do a great job, and in particular came up with a pointer to an NIH reference that showed 25% of patients in a study showed \"local rhinitis\" (isolated allergic reactions) in their sinuses that didn't show elsewhere.  I asked my ENT if I could be experiencing a local reaction in my sinuses that didn't show up in my shoulder, and he completely dismissed that idea with \"That's not how allergies work, they cause a reaction all over the body.\"However, I will say that I've been taking one of the second gen allergy meds for the last 2 weeks and the sinus issues have been resolved and staying resolved, but I do need another couple months to really have a good data point.The funny thing is that this Dr is a evening programmer, and every time I see him we are talking about how amazing the different LLMs are for programming.  He also really seems to keep up with new ENT tech, he was telling me all about a new \"KPAP\" algorithm that they are working on FDA approval for and apparently is much less annoying to use than CPAP.  But he didn't have any interest in looking at the at the NIH reference.\n \nreply",
      "> In the second, I don't understand as no competent licensed doctor chooses the treatment options (absent an emergency); they presumably know the only reasonable options, discuss them with the patient, answer questions, and the patient chooses.I wish that were the case, but in my experience it is not. Every time I've seen a doctor, they offered only one medication, unless I requested a different one.\n \nreply",
      "There's a few possible reasons this can happen.First is that the side effect profile of one option is much better known or tolerated, so the doctor will default to it.Second is that the doctor knows the insurance company / government plan will require attempting to treat a condition with a standard cheaper treatment before they will pay for the newer, more expensive option.There's always the third case where the doctor is overworked, lazy or prideful and doesn't consider the patient may have some input on which treatment they would like, since they didn't go to medical school and what would they know anyway?\n \nreply"
    ],
    "link": "https://theconversation.com/avoiding-ai-is-hard-but-our-freedom-to-opt-out-must-be-protected-255873",
    "first_paragraph": "",
    "summary": "**AI Overlords And Our Rights To Complain Online**\n\nIn the newest luddite manifesto from The Conversation, fear mongers bemoan the erosion of humanity as AI now scours resumes and gatekeeps medical advice. Commenters, charged with the arduous task of defending their internet-acquired medical degrees, argue whether it's better to be neglected by a machine or a human. Meanwhile, profound YouTube links are tossed into discussions like holy grenades, offering salvation through viewed minutes rather than understanding. One must ponder - is it the AI's we can't question, or the unseen algorithms guiding every 'enlightened' rebuttal in this digital echo chamber? \ud83e\udd14"
  },
  {
    "title": "One-Click RCE in Asus's Preinstalled Driver Software (mrbruh.com)",
    "points": 418,
    "submitter": "MrBruh",
    "submit_time": "2025-05-11T05:11:18 1746940278",
    "num_comments": 199,
    "comments_url": "https://news.ycombinator.com/item?id=43951588",
    "comments": [
      "Responsible Disclosures and their consequences have been a disaster for the human race. Companies need to feel a lot more pain a lot more often in order for them to take the security of their customers a lot more serious. If you just give them month to fix an issue and spoon-feed them the solution it's just another ticket in their Backlog. But if every other security issue becomes enough news online that their CEOs are involved and a solution must be find in hours not month, they will become a lot more proactive. Of course it's the end users that would suffer most from this. But then again, they buy ASUS so they suffer already...\n \nreply",
      "I think ASUS' turnaround time on this was quite good, I don't see the problem here. ASUS didn't deny the bug, didn't threaten to prosecute anyone for reverse engineering their software, and quickly patched their software. I have no doubt that before the days of responsible disclosure, this process would've taken months and might have involved the police.Normal people don't care about vulnerabilities. They use phones that haven't received updates in three years to do their finances. If you spam the news with CVEs, people will just get tired of hearing about how every company sucks and become apathetic once there's a real threat.The EU is working on a different solution. Stores are not permitted to sell products with known vulnerabilities under new cybersecurity regulations. That means if ASUS keeps fucking up, their motherboards become dead stock and stores won't want to sell their hardware anymore. That's not just computer hardware, but also smart fridges and smart washing machines. Discover a vulnerability in your dish washer and you may end up costing the dish washer industry millions in unusable stock if their vendors haven't bothered to add a way to update the firmware.\n \nreply",
      "\"Stores are not permitted to sell products with known vulnerabilities under new cybersecurity regulations.\"Do stores have to patch known vulnerabilities before releasing the product to customers or can customers install the patch?\n \nreply",
      "> Stores are not permitted to sell products with known vulnerabilities under new cybersecurity regulations.What are the specifics on that? Like does the vulnerability need to be public or is it enough if just the vendor knows about it? Does everyone need to stop selling it right away if new vulnerability is discovered or do they some time patch it? I'm pretty sure software like Windows almost definitely has some unfixed vulnerabilities that Microsoft knows about and is in process of fixing every single day of the year. Currently even if they do have a fix, they would end up postponing it until next patch Tuesday.And what even is \"vulnerability\" in this context? Remote RCE? DRM bypass?\n \nreply",
      ">They say \u201cThis issue is limited to motherboards and does not affect laptops, desktop computers\u201d, however this affects any computer including desktops/laptops that have DriverHub installed>instead of them saying it allows for arbitrary/remote code execution they say it \u201cmay allow untrusted sources to affect system behaviour\u201d.Sounds like Asus did in fact deny the bug.\n \nreply",
      "\"Responsible\" disclosure is paradoxically named because actually it is completely irresponsible. The vast majority of corporations handle disclosures badly in that they do not fix in time (i.e. a week), do not attribute properly, do not inform their users and do not learn from their mistakes. Irresponsibly delayed limited disclosure reinforces those behaviors.The actually responsible thing to do is to disclose immediately, fully and publically (and maybe anonymously to protect yourself). Only after the affected company has repeatedly demonstrated that they do react properly, they might earn the right for a very time-limited heads-up of say 5 work days or something.That irresponsibly delayed limited disclosure is even called \"responsible disclosure\" is an instance of newspeak.\n \nreply",
      "I make software. If you discover a vulnerability, why would you put my tens of thousands of users at risk, instead of emailing me and have the vulnerability fixed in an hour before disclosing?I get that companies sit on vulnerabilities, but isn't fair warning... fair?\n \nreply",
      "> why would you put my tens of thousands of users at risk, instead of emailing me and have the vulnerability fixed in an hour before disclosingYou've got it backwards.The vuln exists, so the users are already at risk; you don't know who else knows about the vuln, besides the people who reported it.Disclosing as soon as known means your customers can decide for themselves what action they want to take. Maybe they wait for you, maybe they kill the service temporarily, maybe they kill it permanently. That's their choice to make.Denying your customers information until you've had time to fix the vuln, is really just about taking away their agency in order to protect your company's bottom line, by not letting them know they're at risk until you can say, \"but we fixed it already, so you don't need to stop using us to secure yourself, just update!\"\n \nreply",
      "You're making an assumption that doesn't match reality - vulnerability discovery doesn't work like some efficient market. Yes, intelligence agencies and sophisticated criminal groups might find 0-days, but they typically target selectively, not deploying exploits universally.The real threat comes from the vast number of opportunistic attackers who lack the skills to discover vulnerabilities themselves but are perfectly capable of weaponizing public disclosures and proof-of-concepts. These bottom-feeders represent a much larger attack surface that only materializes after public disclosure.Responsible disclosure gives vendors time to patch before this larger wave of attackers gets access to the vulnerability information. It's not about protecting company reputation - it's about minimizing the window of mass exploitation.Timing the disclosure to match the fix release is actually the most practical approach for everyone involved. It eliminates the difficult choice customers would otherwise face - either disrupt their service entirely or knowingly remain vulnerable.Most organizations simply can't afford the downtime from abruptly cutting off a service, nor can they accept the risk of continuing with a known vulnerability. Providing the fix simultaneously with disclosure allows for orderly patch deployment without service interruption.This coordinated approach minimizes disruption while still addressing the security issue - a balanced solution that protects both the security and continuity needs of end users.\n \nreply",
      "I understand the arguments for the current system, I just don't agree that disruption is worse than loss of agency. Your position inevitably ends up arguing for a paternalistic approach, as you are when you say> It eliminates the difficult choice customers would otherwise face - either disrupt their service entirely or knowingly remain vulnerable.You decided they are better off not having to make that choice, so you make it for them whether they like it or not.In fact, you made the worst choice for them, because you chose that they'd remain unknowingly vulnerable, so they can't even put in temporary mitigations or extra monitoring, or know to be on the lookout for anything strange.> Most organizations simply can't afford the downtime from abruptly cutting off a service, nor can they accept the risk of continuing with a known vulnerability.Now this is an interesting part, because the first half is true depending on the service, but bad (that's a BCDR or internet outage issue waiting to happen), and the second half is just wrong (show me a company that doesn't know and accept that they have past-SLA vulns unpatched, criticals included, and I'll show you a company that's lying either to themselves or their customers).> This coordinated approach minimizes disruption while still addressing the security issue - a balanced solution that protects both the security and continuity needs of end users.This is not a balanced approach, this is a lowest-common-denominator approach that favors service providers over service users. You don't know if it protects someone's security needs, because people have different security needs: a journalist being targeted by a state actor can have the same iphone as someone's retired grandma, or infotainment system, or home assistant, etc.I've managed bug bounty and unpaid disclosure programs, professionally, and I know firsthand that it's the company's interests that responsible disclosure serves, first and foremost.\n \nreply"
    ],
    "link": "https://mrbruh.com/asusdriverhub/",
    "first_paragraph": "This story begins with a conversation about new PC parts.After ignoring the advice from my friend, I bought a new ASUS motherboard for my PC. I was a little concerned about having a BIOS that would by default silently install software into my OS in the background. But it could be turned off so I figured I would just do that.Immediately after logging into Windows I was hit with a notification requesting admin permissions to complete the installation of ASUS DriverHub, because I forgot to change the BIOS option. Since I needed to get a WiFi driver for the motherboard anyway, I got curious and installed it.I don\u2019t have a screenshot of DriverHub but it showed a popup exactly like this in the bottom-right of my screenDriverHub is an interesting piece of driver software because it doesn\u2019t have any GUI. Instead it\u2019s just a background process that communicates with the website driverhub.asus.com and tells you what drivers to install for your system and which ones need updating. Naturally I wan",
    "summary": "**One-Click RCE in Asus's Preinstalled Driver Software: A Short Tale of Collective Misery**\n\nIn an enlightening display of digital ineptitude, a freshly minted ASUS motherboard owner discovers the preinstalled update sorcery called DriverHub, only to realize it's an open invite for any remote script kiddie to take a joyride through his new PC. Commenters engage in a battle of philosophies: some play digital messiah believing public shaming of companies will usher in a cybersecurity utopia, while others unleash verbose defenses of \"responsible disclosure,\" a term they admire for its Orwellian flare. Meanwhile, ASUS scrambles to patch things up, proving once again that the S in IoT stands for security. Everyone misses the irony that they are debating the ethics of vulnerability disclosure on a machine likely compromised the moment it connected to WiFi."
  },
  {
    "title": "An online exhibition of pretty software bugs (glitchgallery.org)",
    "points": 62,
    "submitter": "tobr",
    "submit_time": "2025-05-11T17:29:16 1746984556",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://glitchgallery.org/",
    "first_paragraph": "Welcome to the Glitch Gallery, an online exhibition of pretty software bugs! This is a museum of accidental art, an enthusiastic embrace of mistakes, a celebration of emergent beauty. Learn more?Below you can browse the exhibits in our collection. If you have ever encountered such an accidental artwork yourself, we invite you to submit it to us!Interpolation Space Agencylarsan, 2018Snoflake IIthea Piko Nwawa, 2022Snoflake IIIthea Piko Nwawa, 2022Snoflake IIIIthea Piko Nwawa, 2022Sky Hits the LimitTobias Rittig, 2021Random WorldManawyrm, 2013pure chaosJana Marie Hemsing, 2023Pixel NoiseOranciuc Ivan, 2024PDF ink streaksPierre Marshall, 2016Multidimensional MotionIthea Piko Nwawa, 2023maze: endless yet predictableHenderson Reed Hummel, 2023Colorful Imaginations of an Old Graphics Processing UnitError, 2022VertexAttribPointer Icurved-ruler, ~2017VertexAttribPointer IIcurved-ruler, ~2017VertexAttribPointer IIIcurved-ruler, ~2017Functional FractalisatorMarvin Borner, 2024Erosion Icurved-rul",
    "summary": "**Online Arts and (Coding) Crafts: GlitchGallery Trivializes Software Screw-Ups**\n\nIn today's episode of *\"When Devs Accidentally Art,\"* the Glitch Gallery unveils an assortment of quirky coding mishaps that someone decided should be hung on the metaphorical refrigerator of the internet like children's macaroni art. This virtual dumpster dive celebrates errors that programmers would usually Ctrl+Z into oblivion, but here, they're placed on a pedestal for public gawking. Without irony, eager visitors and participants indulge in captions like <em>\"Interpolation Space Agency\"</em> and <em>\"PDF ink streaks\"</em>, debating whether a misplaced pixel elevates a bug to post-modern expressionism or just a desperate need for validation in comment sections. Welcome to the Met, but for code that broke somewhere along the way. \ud83d\udc7e\ud83c\udfa8"
  },
  {
    "title": "The most valuable commodity in the world is friction (kyla.substack.com)",
    "points": 165,
    "submitter": "walterbell",
    "submit_time": "2025-05-09T01:45:16 1746755116",
    "num_comments": 75,
    "comments_url": "https://news.ycombinator.com/item?id=43933091",
    "comments": [
      "I get the idea, and it's a pretty good one.But the headline is really bad. It's not a commodity and it's not valuable. It is what creates value; it's what makes value meaningful.Don't get hung up on the headline. It's a thesis equivalent to the notion that art comes from struggle against some kind of limitation. That limitation is usually arbitrary (the form of poetry, the rules of a game, the difficulty of oil paint and brush), but the result is meaningful despite and because of it.\n \nreply",
      "I\u2019ve had this in my head as well \u201cconstraints yield art\u201d. But it\u2019s also required to engineering\n \nreply",
      "\u03a4\u03ad\u03c7\u03bd\u03b7, as the Greeks called it.\n \nreply",
      "Texel, as the Dutch call it.\n \nreply",
      "Heh, from the headline I expected this to be another blog post about how to find your market niche and what you can monetize, ultimately.Instead I got a pretty interesting article about human nature and the economy as a whole.\n \nreply",
      "The art in poetry is poetry, which includes all forms of it, so the poet isn't limited to any specific form, and many did write in different forms. Similarly unclear what was arbitrary about oil paints, what was a similarly colorful alternative without such limits?\n \nreply",
      ">The art in poetry is poetry, which includes all forms of itOnly in abstract - before you get to do it. When you do start to write a specific poem this doesn't hold anymore, and a big part of the art is fitting the form you chose.\n \nreply",
      "Not just in abstract - mixed poetry exists in reality, so it holds at the level of an individual poem as well.\n \nreply",
      "I mean poetry is an arrangement of symbols, generally symbols that are related in their representation: assonance, dissonance, rhyme, meter, stress, meaning\u2026The poet is limited to symbols. And every poet comes up against these limitations.\n \nreply",
      "> It's not a commodity and it's not valuable.Commodities only have the commodity-value (i.e. price); actual value (i.e. something's worth/weight/utility/what something means to you) is unrelated to commodification. Most valuable things in your life likely have no meaningful commodity value. Very much including the concept of friction.If only commodities are \"valuable\", the word has lost all value.\n \nreply"
    ],
    "link": "https://kyla.substack.com/p/the-most-valuable-commodity-in-the",
    "first_paragraph": "",
    "summary": "In a thrilling misadventure titled \"The most valuable commodity in the world is friction,\" a blogger dives headfirst into the philosophical abyss of labeling friction as if it's something you could trade on the NYSE. The commenters, <em>ever the connoisseurs of pedantry</em>, eagerly squabble over the misuse of \"commodity,\" art forms, and Greek terminology, clearly having little else to do. One enlightened soul expected a crash course in niche markets, only to stumble into a reflection on human nature, evidently disappointed by the lack of tips on monetization. Meanwhile, another struggles with the poetic forms and constraints, desperately seeking a loophole in the rules of Parnassus. Between profound misunderstandings and the inevitable semantic bickering, it's a miracle any value was derived from the discussion at all."
  },
  {
    "title": "I built a native Windows Todo app in pure C (278 KB, no frameworks) (github.com/efeckc17)",
    "points": 267,
    "submitter": "toxi360",
    "submit_time": "2025-05-11T15:57:39 1746979059",
    "num_comments": 145,
    "comments_url": "https://news.ycombinator.com/item?id=43954649",
    "comments": [
      "There is something I like about win32 gui programming. It's a little idiosyncratic, but if you read Raymond Chen's blog you'll see why.The win32 API has its origins on the 8088 processor and doing things a certain way results in saving 40 bytes of code or uses one less register or something.I wrote a lot of toy gui apps using mingw and Petzold's book back in the day. Writing custom controls, drawing graphics and text, handling scrolling, hit testing etc was all a lot of fun.I see in your app you're using strcpy, sprintf.  Any kind of serious programming you should be using the length-checked variants.  I'm surprised the compiler didn't spew.You'll also find that the Win32 API has a lot of replacements for what's in the C standard library.  If you really want to try and get the executable size down, see if you can write your app using only <Windows.h> and no cstdlib.  Instead of memset() you've got ZeroMemory(), instead of memcpy() you've got CopyMemory().At some point writing raw C code becomes painful.  Still, I think doing your first few attempts in raw C is the best way to learn.  Managing all the minutiae gives you a great sense of what's going on while you're learning.If you want to play more with win32 gui programming, I'd have a look at the WTL (Windows Template Library). It's a C++ wrapper around the win32 API and makes it much easier to reason about what's going on.\n \nreply",
      "At minimum, these days, if you dont use strncpy instead of strcpy, you\u2019ll have to suffer through every man and his dog (or AI tool) forever telling you to do otherwise. (For me this is one of the main arguments of using zig, a lot of these common pitfalls are minimized by using zig, but c is fine as well)\n \nreply",
      "Heh, and if you use strncpy() you'll have to suffer through me lecturing you on why strncpy() is the wrong function to use as well.\n \nreply",
      "strncpy is more or less perfect in my line of work where a lot of binary protocols have fixed size string fields (char x[32]) etc.The padding is needed to make packets hashable and not leak uninitialized bytes.You just never assume a string is null terminated when reading, using strnlen or strncpy when reading as well.\n \nreply",
      "Yep, that's intended use case for strncpy().It's not really suitable for general purpose programming like the OP is doing.  It won't null terminate the string if the buffer is filled, which will cause you all sorts of problems. If the buffer is not filled, it will write extra null bytes to fill the buffer (not a problem, but unnecessary).On freebsd you have strlcpy(), Windows has strcpy_s() which will do what the OP needs. I remember someone trying to import strlcpy() into Linux, but Ulrich Drepper had a fit and said no.You just never assume a string is null terminated when reading, using strnlen or strncpy when reading as well.Not really possible when dealing with operating system level APIs that expect and require null-terminated strings.  It's safer and less error-prone to keep everything null terminated at all times.Or just write in C++ and use std::string, or literally any other language. C is terrible when it comes to text strings.\n \nreply",
      "Instead of memset() you've got ZeroMemory(), instead of memcpy() you've got CopyMemory().I believe MSVC intrinsics will use the rep stos/movs instructions, which are even smaller than calling functions (which includes the size of their import table entries too.)\n \nreply",
      "I spent a lot of time doing that and to be honest, I miss the ability to develop for native UIs with native code.\n \nreply",
      "> Instead of memset() you've got ZeroMemory(), instead of memcpy() you've got CopyMemory().What is or was the purpose of providing these instead of the existing Windows C std?\n \nreply",
      "It's worth remembering that Windows 1.x and 2.x predates the C89 standard. This also explains why WINAPI calling convention was inherited from Pascal instead of C. The C standard library was \"just another competitor\" at the time.\n \nreply",
      "You could write code without using libc / the C runtime. You still can.\n \nreply"
    ],
    "link": "https://github.com/Efeckc17/simple-todo-c",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A lightweight, native Windows Todo application built with pure C and the Win32 API.\n      \n\n\nA modern, native Windows Todo application built with C and Win32 API. This project demonstrates advanced Windows GUI programming and system integration capabilities.The application stores todos in a binary file:Install MinGW-w64:Clone the repository:Build the project:The project uses the following key components:This project is licensed under the MIT License - see the LICENSE file for details.Contributions are welcome! Please feel free to submit a Pull Request.Toxi360 - @Efeckc17Project Link: https://github.com/Efeckc17/simple-todo-c\n        A lightweight, native Windows Todo application built with pure C and the Win32 API.\n      ",
    "summary": "In a daring return to 1995, a brave soul unveils a Todo app that thwarts modern programming luxuries, relying instead on pure C and Win32 API masochism, all squeezed into a quaint 278 KB executable. The tech necromancers of Hacker News, finding solace in the app's archaic embrace, wag fingers about the perils of strcpy and the esoteric delights of Windows memory management functions like <em>ZeroMemory()</em>. Watch in awe as these paladins of past programming argue passionately over string handling and system calls, as though drawing runes to ward off the evil spirits of high-level languages.\ud83d\udc7b Meanwhile, any potential users have likely fled back to their bloat-laden apps, afraid of the arcane incantations needed to manage a simple todo list."
  },
  {
    "title": "ToyDB rewritten: a distributed SQL database in Rust, for education (github.com/erikgrinaker)",
    "points": 27,
    "submitter": "erikgrinaker",
    "submit_time": "2025-05-11T19:49:09 1746992949",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=43956547",
    "comments": [
      "Hi, Erik! Nice to see this on the HN front page.Have you considered using this as a test bed to explore alternative architectures and approaches? The classical Volcano architecture used here has been established for many decades, and it could be fun exercise to see what can be done to improve on it, while remaining true to the original goal of having something that's purely for educational purposes.\n \nreply",
      "Super cool project and the code is delightfully readable as well!I had the pleasure of having Erik advise me for my thesis on distributed databases a few years ago. I\u2019m very lucky to have had the chance to tap into his knowledge on all things distributed systems. On top of being super knowledgeable he\u2019s also a terrific teacher!\n \nreply"
    ],
    "link": "https://github.com/erikgrinaker/toydb",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Distributed SQL database in Rust, written as an educational project\n      Distributed SQL database in Rust, built from scratch as an educational project. Main features:Raft distributed consensus for linearizable state machine replication.ACID transactions with MVCC-based snapshot isolation.Pluggable storage engine with BitCask and in-memory backends.Iterator-based query engine with heuristic optimization and time-travel\nsupport.SQL interface including joins, aggregates, and transactions.I originally wrote toyDB in 2020 to learn more about database internals. Since then, I've spent\nseveral years building real distributed SQL databases at\nCockroachDB and\nNeon. Based on this experience, I've rewritten toyDB as a\nsimple illustration of the architecture and concepts behind distributed SQL databases.toyDB is intended to be simple and unde",
    "summary": "Title: Hackers-in-Training Rejoice Over ToyDB: The Diet Coke of SQL Databases\n\n<i>\"We read every piece of feedback and take your input very seriously,\"</i> claims the GitHub page of ToyDB, the latest in sandbox adventures masquerading as educational tools. ToyDB reappears, dressed in shiny Rust armor, proposing nothing less than the technological equivalent of performing brain surgery with a spoon. It\u2019s essentially what happens when the love child of an SQL tutorial and a Rust crash course gets too ambitious. Meanwhile, over in the comments, starry-eyed sycophants (sorry, \u201ceducational users\u201d) heap praise on ToyDB's creator like he\u2019s single-handedly rewritten the database canon, blissfully ignoring that this \"cutting-edge\" revival is basically the software version of reheated leftovers. \ud83e\udd13\ud83d\ude80"
  },
  {
    "title": "Leaving Google (airs.com)",
    "points": 440,
    "submitter": "todsacerdoti",
    "submit_time": "2025-05-11T03:01:56 1746932516",
    "num_comments": 275,
    "comments_url": "https://news.ycombinator.com/item?id=43950976",
    "comments": [
      "When I worked at Google, Ian Lance Taylor was in the pool of randomly assigned code reviewers.  He was polite, firm, and informative.  It speaks well of Taylor and the project that he was doing this kind of review--- it's a version of the YC advice about founders doing customer support.And maybe I'm shallow, but it was a thrill to see his initials show up on my code reviews.  Thanks for all your work on golang.\n \nreply",
      "What a nice praise. It is refreshing to see someone being remembered as 'polite'. It is a critical life-lesson I've learned myself, it is better to be considered things like polite, kind and nice instead of smart, 10x <whatever>, capable.\n \nreply",
      "I've found a lot of value in the habits of politeness, especially in  written communication. It's disappointing when it's not a first class citizen in a company culture for things like code review. There are plenty of rationalizations for how it might not be needed, but that just feels like laziness.\n \nreply",
      "I personally prefer to be given brutal honesty. Overly polite people often annoy me because they hide information or they can't get to the point or their point is hidden within layers of wishy-washy mush that I need to correctly parse and then respond correctly to.Politeness is absolutely necessary, and I hate seeing callous impoliteness in wider society (e.g. towards service workers).I suspect I would severely struggle in a deeply polite society (stereo-typically Asian?). I can relax the most around very direct people (Dutch?).I am continually stressed when dealing with anyone that absolutely needs politeness. Example 1: a very close friend who can be triggered by anything reminding them of their abusive ex. Example 2: a self-centred acquaintance that needs pandering (however isn't polite in return).There's a balance - but it's hard to find. Perhaps I'm confusing two different dimensions, politeness and honesty?Edit: This is a wishy-washy comment. Difficult topic, straight-jacketed conflict, interpersonal stuff that is hard to understand and talk about.\n \nreply",
      "I think that \"polite\" and \"honest\" and \"direct\" are orthogonal.It is possible to be direct, honest, and polite.You should consider the possibility that you're mistaken in linking \"rude\" with \"direct\"\n \nreply",
      "> I think that \"polite\" and \"honest\" and \"direct\" are orthogonal.They are certainly correlated so not orthogonal, its much harder to not be rude when you communicate a complaint than with praise.You need to put much more effort in when you complain about something to not be seen as rude, that means they are not orthogonal. It also means many will just not do it since its too much work.\n \nreply",
      "Or it means you haven\u2019t practiced and some parts of the space are more difficult for you to traverse individually but still orthogonal objectively. I would say that something isn\u2019t orthogonal if it is impossible to be both. It is clearly possible, just not practiced or easy.I could grant there is also an objective friction surface, a fourth scalar describing how difficult it is to be direct, honest, and polite at once.\n \nreply",
      "I don't have time for the overly polite fluff talk to the expense of practical and real communication. It is hard to be caring and direct.   Being triggered by anything can be ptsd, and/or a self defense mechanism for incompetence, so it's important to work out what is going on in these cases. But yes, it is absolutely possible to be caring and gracious while still being direct when you exclude the people who will over react as a self defense mechanism as a result of valid or invalid reasons.\n \nreply",
      "I think you can be polite and direct, but at the cost of being verbose and awkward.\n \nreply",
      "If you see someone do it well (the word \u2018genteel\u2019 comes to mind) you can find that verbos it and awkwardness will detract from both the directness and honesty.\u2018Traditional\u2019 etiquette books are actually pretty good at this stuff: one definition of etiquette is to never out another ill at ease or uncomfortable. Discomfort is contagious especially through body language, so the first thing you must do is be comfortable yourself with the feedback you\u2019re giving.\n \nreply"
    ],
    "link": "https://www.airs.com/blog/archives/670",
    "first_paragraph": "Airs \u2013 Ian Lance TaylorI\u2019ve left Google after working there for 19 years.For most of that time I\u2019ve been fortunate in being able to work on the Go programming language. Go was started by Rob Pike, Ken Thompson, and Robert Griesemer in the fall of 2007. I joined the team in June, 2008, about the same time as Russ Cox. I\u2019ve been very lucky to be able to work with such remarkable people on such an interesting project.I am astonished at how much use Go has gotten over the years. Go has reached the status of being just another programming language, one that any programmer can choose when appropriate. That is far beyond what any of us expected in the early days, when our best hope was that Go might serve as an example for useful ideas that other languages and programming environments could adopt.I started on Go by adding a Go frontend to the GCC compiler. The Go project already had a compiler, of course, based on the Inferno C compiler. Having two compilers helped ensure that the language wa",
    "summary": "<b>Leaving Google: A Heartbreaking Tale of Endless Goodbyes and Politeness</b>\nIn a predictable twist of fate, another programming luminary, Ian Lance Taylor, escapes the golden handcuffs of Google after a grueling 19-year tour of duty, mostly spent crafting yet another programming language. Taylor celebrates his freedom by penning a nostalgic ode to Go, presumably while contemplating how it merely ascended to become \"just another programming language.\" Meanwhile, the commenters engage in a tedious yet fiercely competitive sport of intellectual noodling over the philosophical conundrum: Can one be both polite and honest, or is that as mythical as a bug-free release? Cue the crowd gasping as they realize that the real Go was the friends they made along the way\u2014or lost over code reviews\u2014depending on how polite they pretended to be.\n\n<i>\"Polite and life-changing,\" they remark earnestly from their ergonomic chairs adorned with 'Google alumni' cushions, hearts swollen with pride or maybe just indigestion from the free lunch.</i"
  },
  {
    "title": "Ink and Algorithms: Techniques, tools and the craft of pen plotting (penplotter.art)",
    "points": 52,
    "submitter": "selvan",
    "submit_time": "2025-05-08T08:14:38 1746692078",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=43924178",
    "comments": [
      "Awesome!I've rigged my 3D printer to use as a 2D plotter, and had a ton of fun programming it to draw fractals like the Dragon Curve [1].I also made a tool to do cursive handwriting/calligraphy with it, to make fancy postcards and whatnot [2].Guess this would fit right on that blog :D[1] https://www.instagram.com/p/BlJ8dgmAaTA/?utm_source=ig_web_c...[2] https://www.youtube.com/watch?v=V45cj0-GQyQ\n \nreply",
      "Do you have a blog post with more technical details and closeups? It may be good to post here.\n \nreply",
      "Very nice resource, pen plotters are so fun. One of my favorite subreddits is /r/plotterart - feels like one of the last few hobby-related subreddits I can go to that retained the feeling of early days subreddits, just people showing cool stuff they've made.\n \nreply",
      "More of this please.The plotter shown reminded me of the lowly harmonograph [1]. As old or older than Scientific American.[1] https://en.wikipedia.org/wiki/Harmonograph\n \nreply"
    ],
    "link": "https://penplotter.art/",
    "first_paragraph": "",
    "summary": "At *Ink and Algorithms*, enthusiasts muster up the ancient art of pen plotting, marvel at the cosmic significance of using a 3D printer to make 2D line art, and reminisce about the creation of cursive handwriting like it\u2019s the renaissance of ink itself. One genius commenter, lightning bolt of inspiration that they are, converts their 3D disaster into a 2D novelty, eager to share their fractal masterpieces and \"fancy postcards\" to the adulation of dozens. Another brave soul queries for more technical breadcrumbs, presumably to save their failing plotter project in the basement. Meanwhile, a nostalgic lurker praises the \"early days\" of Reddit where swapping photos of pen plots qualified as peak social interaction. Truly, the crafters of lines and loops are penning their way into an exhilarating oblivion of irrelevance. \ud83d\udd8b\ufe0f\ud83c\udf00"
  },
  {
    "title": "Synder (YC S21) Is Hiring (ycombinator.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2025-05-11T17:00:00 1746982800",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.ycombinator.com/companies/synder/jobs/2Wnbc1f-business-development-representative",
    "first_paragraph": "Easy accounting for e-commerceAbout Synder\n\nSynder is an easy accounting platform helping accounting professionals and business owners to record, reconcile and recognize online sales and subscriptions.\n\nFor additional background:About the RoleWe are seeking an experienced Business Development Representative with a minimum of 3 years of experience. In this role, you will be responsible for identifying and nurturing potential leads to drive growth and expand our user base. You will play a crucial role in our sales process by building a pipeline of qualified leads and setting the stage for successful customer acquisition.\n\nWhat You Will Do\nWhat You NeedSynder is an easy accounting platform focused on e-commerce companies.For additional background:\u00a9 2025 Y Combinator",
    "summary": "Title: <em>\"Disrupting Double-Entry: Synder's Noble Quest to Save E-Commerce from Basic Math Skills\"</em>\n\nIn a stunning display of Silicon Valley audacity, Synder (YC S21) claims to 'revolutionize' the arcane ritual known as e-commerce accounting. Their platform promises to rescue business owners and accounting professionals from the soul-crushing task of understanding their own financial records. Meanwhile, the hiring post reveals a desperate need for a Business Development Representative to somehow convince the world that adding a tech layer to Excel spreadsheets is the pinnacle of innovation. Commenters, dazzled by the buzzwords and cozy YC blanket, trip over themselves to marvel at the groundbreaking concept of...checking if numbers match. \ud83d\ude44"
  }
]