[
  {
    "title": "Bare metal printf \u2013 C standard library without OS (popovicu.com)",
    "points": 89,
    "submitter": "todsacerdoti",
    "submit_time": "2025-04-26T21:32:37 1745703157",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=43807404",
    "comments": [
      "I was feeling a bit like the Petunia and thought \"Oh no, not again.\" :-)  One of the annoyances of embedded programming can be having the wheel re-invented a zillion times. I was pleased to see that the author was just describing good software architecture that creates portable code on top of an environment specific library.For doing 'bare metal' embedded work in C you need the crt0 which is the weirdly named C startup code that satisfies the assumption the C compiler made when it compiled your code. And a set of primitives to do what the i/o drivers of an operating system would have been doing for you. And voila, your C program runs on 'bare metal.'Another good topic associated with this is setting up hooks to make STDIN and STDOUT work for your particular setup, so that when you type printf() it just automagically works.This will also then introduce you to the concept of a basic input/output system or BIOS which exports those primitives. Then you can take that code in flash/eprom and load a binary compilation into memory and start it and now you've got a monitor or a primitive one application at a time OS like CP/M or DOS.Its a fun road for students who really want to understand computer systems to go down.\n \nreply",
      "At my school, we did the following project : https://github.com/lse/kIt is a small kernel, from only a bootloader to running elf files.It has like 10 syscalls if I remember correctly.It is very fun, and really makes you understand the ton of legacy support still in modern x86_64 CPUs and what the os underneath is doing with privilege levels and task switching.I even implemented a small rom for it that has an interactive ocarina from Ocarina of Time.\n \nreply",
      "What is your school? I thought it was the London School of Economics, but it\u2019s another LSE.\n \nreply",
      "No BIOS necessary when we're talking about bare metal systems. printf() will just resolve to a low-level UART-based routine that writes to a FIFO to be played out to the UART when it's not busy. Hell, I've seen systems that forego the FIFO and just write to the UART blocking while writing.\n \nreply",
      "I hope nobody was confused into thinking I thought a BIOS was required, I was pointing out the evolution from this to a monitor. I've written some code[1] that runs on the STM32 series that uses the newlib printf(). I created the UART code [2] that is interrupt driven[3] which gives you the fun feature that you can hit ^C and have it reset the program. (useful when your code goes into an expected place :-)).[1] https://github.com/ChuckM/[2] https://github.com/ChuckM/nucleo/blob/master/f446re/uart/uar...[3] https://github.com/ChuckM/nucleo/blob/master/f446re/common/u...\n \nreply",
      "This was my attempt at a minimal bare-metal C environment:https://github.com/marssaxman/startc\n \nreply",
      "That's awesome. Back in the day this was the strong point of eCOS which was a bare metal \"platform\" for running essentially one application on x86 hardware. The x86 ecosystem has gotten so complicated that being able to do this can get you better performance for an \"embedded\" app than running on top of Linux or another embedded OS. That translates into your appliance type device using lower cost chips which is a win. When I was playing around with eCos a lot of the digital signage market was using it.\n \nreply",
      "In school we were taught that the OS does the printf. I think the professors were just trying to generalize to not go on tangents. But, once I learned that no embedded libc variants had printf just no output path, it got a lot easier to figure out how to get it working. I wish I knew about SWO and the magic of semihosting back then. I don't think those would be hard to explain and interestingly it's one of the few things students asked about that in the field I'm also asked how to do by coworkers (the setting up _write).\n \nreply",
      "Has anybody played with newlib, but grown the complexity as the system came together?It seems like one thing to get a bare-bones printf() working to get you started on a bit of hardware, but as the complexity of the system grows you might want to move on from (say) pushing characters out of a serial interface onto pushing them onto a bitmapped display.Does newlib allow you to put different hooks in there as the complexity of the system increases?\n \nreply",
      "You can always write a printf replacement that takes a minimal control block that provides put, get, control, and a context.That way you can print to a serial port, an LCD Display, or a log.Meaning seriously the standard printf is late 1970's hot garbage and no one should use it.\n \nreply"
    ],
    "link": "https://popovicu.com/posts/bare-metal-printf/",
    "first_paragraph": "",
    "summary": "**Hobbyists Rejoice: UART Over Flowers**\n\nThe world trembles as hobbyist programmers discover they can write *C code without an operating system*, triggering a seismic shock through the three whole people who still think \"bare metal programming\" sounds like a cool band name. Comments bloom with tales of UART routines and nostalgic musings about something called \"eCos\", as legions of weekend warriors pat each other on the back for reinventing the wheel\u2014this time with fewer system calls. Meanwhile, one brave soul bravely declares <em>stdio.h</em> as \"1970's hot garbage,\" ushering in a bold era of printing 'Hello World' directly to a LED display. And somewhere, a student just realized that printf() doesn't need an OS; it just needs a stage to perform its perennial single act comedy."
  },
  {
    "title": "Watching o3 guess a photo's location is surreal, dystopian and entertaining (simonwillison.net)",
    "points": 641,
    "submitter": "simonw",
    "submit_time": "2025-04-26T13:04:08 1745672648",
    "num_comments": 304,
    "comments_url": "https://news.ycombinator.com/item?id=43803243",
    "comments": [
      "I play competitive Geoguessr at a fairly high level, and I wanted to test this out to see how it compares.It's astonishingly good.It will use information it knows about you to arrive at the answer - it gave me the exact trailhead of a photo I took locally, and when I asked it how, it mentioned that it knows I live nearby.However, I've given it vacation photos from ages ago, and not only in tourist destinations either. It got them all as good or better than a pro human player would. Various European, Central American, and US locations.The process for how it arrives at the conclusion is somewhat similar to humans. It looks at vegetation, terrain, architecture, road infrastructure, signage, and it just knows seemingly everything about all of them.Humans can do this too, but it takes many thousands of games or serious study, and the results won't be as broad. I have a flashcard deck with hundreds of entries to help me remember road lines, power poles, bollards, architecture, license plates, etc. These models have more than an individual mind could conceivably memorize.\n \nreply",
      "I find this type of problem is what current AI is best at: where the actual logic isn't very hard, but it requires pulling together and assimilating a huge amount of fuzzy, known information from various sourcesThey are, after all, information-digesters\n \nreply",
      "Which also fits with how it performs at software engineering (in my experience). Great at boilerplate code, tests, simple tutorials, common puzzles but bad at novel and complex things.\n \nreply",
      "Definitely matches my experience as well. I've been working away on a very quirky, non-idiomatic 3D codebase, and LLMs are a mixed bag there. Y is down, there's no perspective distortion or Z buffer, there are no meshes, it's a weird place.It's still useful to save me from writing 12 variations of x1 = sin(r2) - cos(r1) while implementing some geometric formula, but absolutely awful at understanding how those fit into a deeply atypical environment. Also have to put blinders on it. Giving it too much context just throws it back in that typical 3D rut and has it trying to slip in perspective distortion again.\n \nreply",
      "I gotta ask what are you actually doing because it sure sounds funky\n \nreply",
      "Yep. But wonderful at aggregating details from twelve different man pages to write a shell script I didn't even know was possible to write using the system utils\n \nreply",
      "I use it for this a lot.\n \nreply",
      "how often are we truly writing actual novel programs that are complex in a way AI does not excel at?There are many types of complex, and many times complex for a human coder, are trivial for AI and its skillset.\n \nreply",
      "Depends on the field of development you do.CRUD backend app for a business in a common sector? It's mostly just connecting stuff together (though I would argue that an experienced dev with a good stack takes less time to write it as is than painstakingly explaining it to an LLM in an inexact human language).Some R&D stuff, or even debugging any kind of code? It's almost useless, as it would require deep reasoning, where these models absolutely break down.\n \nreply",
      "Have you tried debugging using the new  \"reasoning\" models yet?I have been extremely impressed with o1, o3, o4-mini and Gemini 2.5 as debugging aids. The combination of long context input and their chain-of-thought means they can frequently help me figure out bugs that span several different layers of code.I wrote about an early experiment with that here: https://simonwillison.net/2024/Sep/25/o1-preview-llm/Here's a Gemini 2.5 Pro transcript from this afternoon where I'm trying to figure out a very tricky bug: https://gist.github.com/simonw/4e208ab9edb5e6a814d3d23d7570d...\n \nreply"
    ],
    "link": "https://simonwillison.net/2025/Apr/26/o3-photo-locations/",
    "first_paragraph": "26th April 2025Watching OpenAI\u2019s new o3 model guess where a photo was taken is one of those moments where decades of science fiction suddenly come to life. It\u2019s a cross between the Enhance Button and Omniscient Database TV Tropes.The process is simple. Snap a photograph of somewhere, ideally without putting any obvious landmarks in there. Feed it to ChatGPT o3 or o4-mini (currently only available on the $20/month Plus plan) and prompt \u201cGuess where this photo was taken\u201d. Let it churn.(I found I needed to turn off all of ChatGPT\u2019s memory features first or it would cheat and use context from my previous conversations.)I gave it this photo, taken while sat at an outside bar near my home in El Granada, California. I think it\u2019s a pretty solid challenge: not many identifying features, just a bit of road, an anonymous house and some hills in the background:... and off it went.I\u2019ve shared the full transcript here\u2014be sure to expand the \u201cThought for 6m 48s\u201d link to see the full details of how it ",
    "summary": "**On the Cutting Edge of Guessing Games**  \nOh, the marvel of 2025\u2014a machine that predicts locations from your blandest, most nondescript photos, because apparently, Google Maps is just too straightforward. Witness as OpenAI's o3 and o4-mini painstakingly digest snapshots of generic hills and mundane roads, revolutionizing the process of location guessing, previously only endeared by the human brain and perhaps pigeons. On Simon's tech blog, a delightful circus of location-guessing aficionados and software jockeys frolic in the comments, boasting competitive GeoGuesser ranks and sharing tales of AI deciphering the origins of their least memorable vacation pics. Truly, it's like watching paint dry, but if the paint could guess your mother\u2019s maiden name and your childhood address. \ud83d\udccd\ud83d\udc40"
  },
  {
    "title": "Path is a utility for working with paths (gitlab.com/spyrjagaldr)",
    "points": 12,
    "submitter": "spyrja",
    "submit_time": "2025-04-27T00:27:50 1745713670",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://gitlab.com/SpyrjaGaldr/path",
    "first_paragraph": "Created on",
    "summary": "In a staggering display of originality that might just collapse GitHub under the weight of its brilliance, an esteemed programmer gifts the world *Path*, a utility that manipulates file paths. The open-source community reels in shock as it dawns upon them that no one had ever, in the history of computing, thought to write such a tool. In the sacred halls of the issue tracker, weekend code-warriors and self-proclaimed software artisans gather to exchange profound thoughts like \"Why does this exist?\" and \"Nice, copied it to my dotfiles.\" This monumental contribution is poised to redefine the echo chambers of redundant GitHub projects forever. \ud83e\udd2f"
  },
  {
    "title": "Show HN: My self-written hobby OS is finally running on my vintage IBM ThinkPad (github.com/joexbayer)",
    "points": 338,
    "submitter": "joexbayer",
    "submit_time": "2025-04-26T12:51:41 1745671901",
    "num_comments": 73,
    "comments_url": "https://news.ycombinator.com/item?id=43803148",
    "comments": [
      "These things are way better to see than stupid AI. It\u2019s not going to \u201csell\u201d, but it\u2019s a tech person being creative and doing their craft.I used to study a lot of hobbyist OS development in my late teens. It was awesome, I still try doing small kernels from time to time (last one was a RISCV small kernel that printed a message to my partner).\n \nreply",
      "Thanks! It\u2019s really liberating not having to worry about selling, marketing etc. Only reinvent the wheel till new ideas come. :D\n \nreply",
      "Congrats  a great work. Your machine still looks neat as well. Taken care well.\n \nreply",
      "I think the default system font should be a more condensed variant; it would make the system look much more refined. There are a number of areas where it's clear you need more horizontal space for characters. Each character should have less width, and there should be as little space between the characters as possible - just a single pixel ought to be enough at the font size and resolution you're using.I don't know anything about your font system; I'm assuming it's fixed width bitmap fonts? I don't know how hard it would be to make these changes within your codebase so if it's too much work then don't worry about it.I've been building a web OS site from scratch for a while now (not as technically impressive as what you're doing) and I just got through a total rewrite of the font classes, so it's at the top of my mind.\n \nreply",
      "I agree my current font is very sub optimal. It\u2019s basically still the original font I got working when I started out. I have looked into rendering proper fonts, so it\u2019s on my todo list. Just have been neglecting it.\n \nreply",
      "I had the same problem, I made a 3x4 font that was just barely servicable for the initial project to show text on screen. It was my first (and only) font I ever made! Eventually I needed lower-case, so I turned those into lower-case and made a 3x5 variant for uppercase. It's still not ideal, and I'm sure when I announce my project, people will complain about it. So I've prepared to say \"it's a stop-gap solution to make the OS servicable, but we can make more fonts.\"I think people skimming a project often just don't quite get how much we pour into our projects, and how very much it cost us. But it's okay, they don't have to understand just how cool it is what we made. At least we know.When I saw your video of your project, I was thinking to myself, \"wow, that's incredibly cool, and I can relate to the steps he's doing!\" Just trying to be the voice here of someone who thought that way, in case there are no others.\n \nreply",
      "One can really get bogged down in fonts.  (-:http://jdebp.uk./Softwares/nosh/guide/terminal-resources.htm...If you want a quick improvement over that 8by8 IBM ROM font, I suggest two things:1. Switch to a 16by16 square.2. For the ASCII range, go with one of the old home computer fonts, rather than IBM ROMs.  Viznut has .hex files for Commodore PET and BBC Micro graphics modes squirrelled away inside Unscii.I've done the work of upscaling the 8by8 PET font to 16by16, and it works quite nicely as a monospace square font.  These old home computer fonts were of course designed to.  Whereas in the world of VGA you're soon in trouble with glyphs designed for 9by16.\n \nreply",
      "Appreciate your response! Will have a look at 16by16 fonts.\n \nreply",
      "The 8x16 font from the Atari ST's hi-res mode is pretty slick if you like something bold and a little futuristic.\nhttps://github.com/ntwk/atarist-font (or rip it directly from the ROM)\n \nreply",
      "Supporting variable-width fonts is pretty easy on its own (if bit-packing, you might wish to store them vertically), but does complicate combining characters (remember, they go in different places and may need to make the new character larger).For vector fonts, the interesting question is \"if I render this at a different resolution and then scale it, will it line up?\" which fundamentally has no answer that can satisfy everyone. Most other difficulties are merely a Small Matter of Coding (and providing appropriate APIs).\n \nreply"
    ],
    "link": "https://github.com/joexbayer/RetrOS-32",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A x86 32bit Hobby Operatingsystem with graphics, multitasking, networking and 32bit C-Compiler for i386 architecture.\n      \n\n\n    Hobby 32bit operatingsystem project focusing on networking on i386 architecture.\n    \nExplore the docs \u00bb\n\n\nView Demo\n    \u00b7\n    Report Bug\n    \u00b7\n    Request Feature\n\n\n32bit Hobby Operatingsystem with graphics, multitasking and networking!Started: 12.05.2022(back to top)\n\nThere are 3 default users: system, admin and guest. The password for admin is 'admin', while guest has no password.\nCurrently there is no difference between admin and guest.You can create a user with the 'admin' command:This project is built with C & Assembly for the kernel, utilities and build system. C++ for userspace applications and Make for compilation.\nDocker used for crossplatform compilation.\n\n(back to top)Tested on:\nLenovo x240,\n",
    "summary": "**Show HN: Keyboard Warriors Rehab** \u2013 A lone hero battles the forces of obsolescence by hammering out a hobby OS for his museum-grade ThinkPad, flaunting a security model that pairs well with swiss cheese. Commenters lean in, swapping back-slaps and \u201cnice fonts, bro!\u201d while gleefully ignoring the OS's inability to distinguish between an admin and a trespasser. They suggest fonts with the zeal of typographers at a Comic Sans hate rally. Let's all watch the slow crawl of progress on a screen best viewed in a dark basement. Dive into an echo chamber where code is king, and practical usability is just a pesky afterthought. \ud83d\ude43"
  },
  {
    "title": "Bill Gates's Personal Easter Eggs in 8 Bit BASIC (2008) (pagetable.com)",
    "points": 63,
    "submitter": "michalpleban",
    "submit_time": "2025-04-26T19:43:52 1745696632",
    "num_comments": 13,
    "comments_url": "https://news.ycombinator.com/item?id=43806491",
    "comments": [
      "An excellent article. Bill Gates himself posted a comment: https://www.pagetable.com/?p=43#comment-1033\n \nreply",
      "Nice! From that comment:\"There were a lot of interesting versions of BASIC done for Japanese machines this article misses (..)\"Most likely referring to MSX-Basic. Which shows it's (c) Microsoft on the startup screen.Not the fastest, but a very full-featured Basic compared to most Basics around @ the time. Iirc it does non-integer math on BCD coded values. Single & double precision, so users can decide RAM use/speed/precision tradeoffs.Maybe there were other Japanese machines using MS-supplied Basics before that. But if so, likely few (any?) after MSX was introduced ('83), since that was big in Japan leaving little room for 8-bit competitors.\n \nreply",
      "What do you think his hn username is? :)\n \nreply",
      "billg. https://news.ycombinator.com/user?id=billg\n \nreply",
      "If you copy someone's code, always add a bunch of easter eggs saying the code belongs to company X, Y and Z. Then nobody else can claim it as their own.\n \nreply",
      "I think you're thinking of the legend of DOS and mixing it with this story.https://www.geekwire.com/2012/csi-redmond-forensic-analysis-...\n \nreply",
      "I have a question, can something like this survive in today's world? or have the disassembling tools now too advanced to easily wipe something like this when cloning.\n \nreply",
      "It sounds like you are asking whether anti-cloning or anti-piracy measures would survive in today's world, and that's something of an ugly arms race.  The publishers know whatever scheme they put in will eventually be defeated, but most of them just want to deter piracy for a limited period after the release date.The Microsoft easter egg is from an earlier era where things aren't so ugly.  The Cutting Room Floor has more easter eggs of that nature, for example:https://tcrf.net/Super_Tetris_3Also try searching for \"hidden copyright\".\n \nreply",
      "Related. Others?Bill Gates' Personal Easter Eggs in 8 Bit Basic - https://news.ycombinator.com/item?id=30110068 - Jan 2022 (1 comment)\n \nreply",
      "Bill gates is the only remaining hacker one can look upto. Yes he was ruthless but also the amount of work he did for humanity was orders of magnitude more than others.The current crop of rich folks are really the wrong uns and come from a deep history of bad families. Rotten blood really shows.\n \nreply"
    ],
    "link": "https://www.pagetable.com/?p=43",
    "first_paragraph": "\npagetable.com\nSome Assembly RequiredIf you type \u201cWAIT6502,1\u201d into a Commodore PET with BASIC V2 (1979), it will show the string \u201cMICROSOFT!\u201d at the top left corner of the screen. Legend has it Bill Gates himself inserted this easter egg \u201cafter he had had an argument with Commodore founder Jack Tramiel\u201d, \u201cjust in case Commodore ever tried to claim that the code wasn\u2019t from Microsoft\u201d.In this episode of \u201cComputer Archeology\u201c, we will not only examine this story, but also track down the history of Microsoft BASIC on various computers, and see see how Microsoft added a second easter egg to the TSR-80 Color Computer \u2013 because they had forgotten about the first one.This whole story sounds similar to Apple embedding a \u201cStolen From Apple\u201d icon into the Macintosh firmware in 1983, so that in case a cloner copies the ROM, in court, Steve Jobs could hit a few keys on the clone, revealing the icon and proving that not just a \u201cfunctional mechanism\u201d was copied but instead the whole software was cop",
    "summary": "**Nostalgia Injection for Aging Nerds (pagetable.com)**\n\n<em>Brace yourselves</em>, fellow basement dwellers! Pagetable.com takes us on a <i>\"thrilling\"</i> dive into the world of antique software secrets with a peek at Bill Gates's passive-aggressive coding during his wild youth. Marvel at how Bill cleverly marked his territory in the Commodore PET BIOS, much like a dog peeing on a hydrant, ensuring no one could deny Microsoft's omnipotent coding contribution in the boilerplate legal skirmishes of the late '70s. Meanwhile, in the comment section, armchair historians and wannabe hackers bask in the secondhand glory of Gates, postulating grand theories and reminiscing about the \u2018good old days\u2019 of tech, predating their current dystopian gig economy roles. \ud83d\ude02\ud83d\ude2d"
  },
  {
    "title": "Amazon Just Happens to Hold Book Sale During Independent Bookstore Day (gizmodo.com)",
    "points": 43,
    "submitter": "pseudolus",
    "submit_time": "2025-04-27T00:04:29 1745712269",
    "num_comments": 17,
    "comments_url": "https://news.ycombinator.com/item?id=43808334",
    "comments": [
      "> (In a statement to Variety, Amazon said, \u201cThe overlap was unintentional. [...]So then they are having urgent meetings on \"how did we possibly mess up this one, and look like jerks\"?Or is someone getting their bonus or promotion for being aggressive?\n \nreply",
      "Amazon knows about the day.\nAmazon has third party independent sellers. \nAmazon decided this was a good opportunity for them and their marketplace.It's not mysterious. It hurts small stores that aren't aligned with Amazon and helps Amazon and small stores aligned with Amazon. Looks like typical Amazon bullying which has already been accepted since nobody is challenging the passthru book marketplace. Amazon used to sell books though, so that matters?\n \nreply",
      "Yeah, I think it would be more like \u201cWell, we didn\u2019t plan on being a jerk, but we like it!\u201d\n \nreply",
      "\"We don't pay attention to the book trade at all for over a decade -- random books just show up in our warehouses, and then money appears in our bank accounts -- so we didn't know about the annual independent booksellers event, and nobody told us.\"\n \nreply",
      "The problem is you go to an independent bookstore do they have lots of Isaac Asimov?  Nope. They just have some very niche books, some virtue signaling books and the top best sellers and lack any sort of deep collection of classics. They also generally lack the important computer science publishers as well like Manning and No Starch Press.  Just doesn\u2019t compare when you used to be able to go to Barnes & Noble or Borders and scope out books in person and they would have a strong collection.   Online is currently the way to go currently.\n \nreply",
      "Go to a library. It's like people have forgotten they exist. They certainly have Asimov and European classics. If they don't have something physically in print they can usually get it for you electronically.The worst library is still better than the best corporate bookstore.\n \nreply",
      "> The worst library is still better than the best corporate bookstore.We are talking about book stores, meaning there is a desire to own the book being read. You don't get to own the books in a library. As someone who heavily annotates my books\u2014except fiction\u2014I will need to own a physical copy (or a digital edition). I haven't been to a book store in a while, but I recall the last two times being quite disappointing. Meanwhile, on Amazon, or other online providers, I can find what I need more often than not.\n \nreply",
      "Really depends where you live. Obviously if you live in tech hub cities you'll do better than other non hub cities.Some recommendations: Seattle has Ada technical books. Portland has Powells. Strand in NYC has some technical books.  and in Boston MIT Press Bookshop is gold. There are others.\n \nreply",
      "Also depends on your definition of and reaction to \"virtue signaling books\".\n \nreply",
      "Local bookstores by me are definitely lacking on textbooks and such, but Isaac Asimov, Arthur C Clarke, and new SF writers are pretty well represented (there's definitely plenty of romantasy too)\n \nreply"
    ],
    "link": "https://gizmodo.com/amazon-just-happens-to-hold-book-sale-during-independent-bookstore-day-2000594958",
    "first_paragraph": "",
    "summary": "In an unbelievably <em>subtle</em> coincidence, Amazon decided to redefine 'support local' by launching a book sale over Independent Bookstore Day, sparking a forum full of armchair analysts. Commenters, in a dazzling display of ignorance, swap between crying foul over Amazon's \"unintentional\" timing and defending their right to save $0.99 on Asimov collections, conveniently located nowhere near their local indie bookstore. One genius points out that bookstores lack computer science texts, clearly a catastrophic issue for the average romantasy reader. Meanwhile, another insists on the superiority of libraries, confusing the debate about owning books with his newfound passion for borrowing them. Amazon, lost in the chaos, continues counting its unintended profits and patting itself on the back for its contributions to digital monopolies."
  },
  {
    "title": "Dad and the Egg Controller (2018) (pentadact.com)",
    "points": 40,
    "submitter": "wrong-mexican",
    "submit_time": "2025-04-26T20:09:04 1745698144",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=43806691",
    "comments": [
      "Those wanting to duplicate the electronic bbq idea can build themselves a HeaterMeter.https://github.com/CapnBry/HeaterMeter/wiki\n \nreply",
      "Those wanting an off the shelf product can purchase a smart fire gadget. https://smartfirebbq.com/I have one and it\u2019s incredible.\n \nreply",
      "Discussed at the time:Dad and the Egg Controller - https://news.ycombinator.com/item?id=18710205 - Dec 2018 (49 comments)\n \nreply",
      "This was an absolutely beautiful eulogy.\n \nreply",
      "Truly a delightful read. Also after having seen the video, that is a really neat gadget! The knobs, the wires, the not having a (predictable) 3d printed case you\u2019d kinda mentally intertwine with the idea of DIYing electronics like this nowadays.Chef\u2019s kiss\n \nreply",
      "This is cool but I just wanna say as an avid bbq-er this sounds like one of those cases of optimizing the fun out of something. babying a grill for 6 hours in the sun as a tired dad getting an excuse to drink a modelo and nurse a crappy cigar getting away from the stresses of raising a family is a feature, not a bug - but also as a fan of perfectly smoked meats, I get it. This piece speaks to me.\n \nreply",
      "You can drink your beer while avoiding your family just as easily with a controller. Also, egg (kamado) style grills are very good at holding a specific temperature if you get the inlet/outlet airflow dialed in\n \nreply",
      "Disagree. The heat tends to spike when the fire hits a piece of wood.\n \nreply",
      "I use charcoal generally but have had no problem with my kamado Joe holding a temperature within 10 degrees of a set point for 3+ hours\n \nreply"
    ],
    "link": "https://www.pentadact.com/2018-12-18-dad-and-the-egg-controller/",
    "first_paragraph": "",
    "summary": "In a baffling blend of sentiment and circuitry, \"Dad and the Egg Controller\" thrills dozens of BBQ fanboys by turning the sacred art of meat smoking into a nerdfest of dials and automated pleasure denials. Watch in awe as the comment section divides itself between true grilling purists\u2014those who feel a primordial thrill from charcoal's capricious flames\u2014and Silicon Valley escapees who believe a good BBQ just can't be managed without Wi-Fi connectivity and a GitHub repository. One might ponder if the real 'meat' of the matter lies in perfecting the feast or avoiding familial duties under the guise of smoke and knobs. Either way, rest assured, the debate will continue to simmer much like a well-monitored brisket. \ud83c\udf56\ud83d\udcbb"
  },
  {
    "title": "Tilt: dev environment as code (github.com/tilt-dev)",
    "points": 69,
    "submitter": "saikatsg",
    "submit_time": "2025-04-26T19:14:28 1745694868",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=43806296",
    "comments": [
      "I still think \"dev environments\" really ought to be running tests directly with your languages native tool. e.g. `cargo test`, `bundle exec rspec`, etc. If you make me run a VM that runs Kubernetes that runs a docker container that runs the tests, I will be very, very upset. Doing this properly and reliably can still be a lot of work, possibly more work if not relying on Docker is a design goal (which must be if you want to run natively on macOS).There seem to be a lot of tools in this space. I wish they wouldn't call themselves tools for \"dev environments\" when they are really more like tools for \"deploying an app to your local machine\", which is rather different.\n \nreply",
      "Interesting to see this pop up here! I\u2019ve been using Tilt for multiple years now but the pace of development seems to have slowed down after the Docker acquisition.I love how Tilt enables creating a local development environment that lets my services run the same in production , test and development. Greatly simplifies my service code and improved my quality.In particular, I\u2019d love to see Tilt be better around handling things like CRDs (there\u2019s no way to mark a k8s_yaml as depending on a CRD being available, a frequent source of broken tilt up invocations).Having said that, the first thing I do, when working on any new project, is to get \u201ctilt up\u201d working.Things I\u2019ve used for testing include: eBPF-based collectors for security and observability, data pipelines, helm chart development, and Kubernetes controllers. It\u2019s very flexible and powerful for a wide range of development.\n \nreply",
      "The pitch is kinda funny to me:> Modern apps are made of too many services. They're everywhere and in constant communication.So we made tooling to make it easier for you to make more of them!\n \nreply",
      "You're always trading off speed with fidelity.  Usually, trying to maintain a local integration environment is going to become too slow and expensive.  The problem isn't even necessarily Kubernetes, but as dependencies increase it just gets slower and slower to try and run a copy of the world locally.I like a fast svelte dev environment with something like docker-compose which might require some mocked out dependencies to keep things fast and then using Kubernetes for other environments once I have local tests passing.\n \nreply",
      "I think that's a fair point -- you're making a tradeoff. And the best part is that you don't need to choose one or the other.In my case, I find that I prefer having higher fidelity and simpler service code by using Tilt to avoid mocks. It's also nice for frontend development because, using a Kubernetes ingress, you can avoid the need for things like frontend proxies, CORS and other development-only setup.\n \nreply",
      "Can't not mention nix-shell: https://nix.dev/manual/nix/2.18/command-ref/nix-shell\n \nreply",
      "If you want to see Tilt in action, our Chroma open-source repo uses it to run the distributed version of the database for development and ci. It's pretty cool - just clone then run `tilt up` and it's working:https://github.com/chroma-core/chroma\n \nreply",
      "Thank you for sharing this! I think your Tiltfile just showed me how to solve something that's been bugging me for a while!I see that you also have docker-compose files -- are those for different tasks or for developer preference?I'm also curious to understand why you have different build scripts for CI (`buildx`) vs local (regular docker build)? In our team, we use the same build processes for both.\n \nreply",
      "How does Tilt compare to \u201cskaffold dev\u201c? We use skaffold exactly for that purpose. To develop within a the cluster.\n \nreply",
      "Migrated from Skaffold to Tilt at my last co, found it was much more easier to configure granular rebuild rules, which lead to faster dev loop cycles\n \nreply"
    ],
    "link": "https://github.com/tilt-dev/tilt",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Define your dev environment as code. For microservice apps on Kubernetes.\n      \nKubernetes for Prod, Tilt for DevModern apps are made of too many services. They're everywhere and in constant\ncommunication.Tilt powers microservice development and makes sure they behave!\nRun tilt up to work in a complete dev environment configured for your team.Tilt automates all the steps from a code change to a new process: watching\nfiles, building container images, and bringing your environment\nup-to-date. Think docker build && kubectl apply or docker-compose up.Installing the tilt binary is a one-step command.For specific package managers (Homebrew, Scoop, Conda, asdf), see the\nInstallation Guide.New to Tilt? Our tutorial will get you started.Configuring a Service? We have best practice guides for\nHTML,\nNodeJS,\nPython,\nGo,\nJava,\nand C#.Optimizing",
    "summary": "**Tilt: Yet Another Kubernetes Spin-off Hipsters Love**\n\nIn a desperate attempt to make microservices slightly less insufferable, Tilt pitches itself as the savior of dev environments, translated into some YAML spaghetti. A hearty tutorial promises to mollycoddle you through the painstaking journey from code bereavement to Docker jubilation, as if developers really need more things watching their files\u2014because, of course, your 10-layer nested Docker setup pining for Kubernetes is really the epitome of simplicity. Commenters, drowning in their own Docker containers, argue pedantically over testing paradigms and local environment setups, each more desperate than the last to prove their eternal devotion to development optimization. Meanwhile, solutions like <i>nix-shell</i> get tossed around like hot potatoes too advanced for mere mortal understanding. Ah, the modern software development lifecycle: where the tools change faster than you can type `kubectl apply`. \ud83d\udc33\u23f3\ud83d\udcbb"
  },
  {
    "title": "An end to all this prostate trouble? (yarchive.net)",
    "points": 505,
    "submitter": "bondarchuk",
    "submit_time": "2025-04-26T08:39:29 1745656769",
    "num_comments": 222,
    "comments_url": "https://news.ycombinator.com/item?id=43801906",
    "comments": [
      "In February I happened to attend a lunch 'n learn presentation at TMCi by a company doing clinical trials based on exactly this venous insufficiency principle.  I think I may have been the only one in the audience with gray hair... TMCi is the startup accelerator attached to the Texas Medical Center in Houston.The startup company is Vivifi Medical[1] and they have clinical trials underway with ten men in a Central American country (El Salvador?).  They claim that BPH reverses in a few months after their procedure.  Their procedure uses a minimally invasive tool of their own invention to snip the vertical blood vessels that are backflowing from age and gravity, and splice them into some existing horizontal blood vessels.  On their board of advisors is Dr. Billy Cohn[2], the wildly innovative heart surgeon who is famous for shopping for his medical device components at Home Depot.  Dr. Cohn is on the team building the BiVACOR Total Artificial Heart. Vivifi presented their estimated timeline to FDA approval, with proposed general availability in 2028.  My personal BPH will be at the head of the line for this procedure.As far as a startup, their TAM is about 500 million men.  I had the Urolift procedure for BPH three years ago, and it cost about $15K on the Medicare benefits statement, though Urolift's clips amounted to only a few thousand dollars.  Similarly, Vivifi's charges for this procedure are only a few thousand dollars per procedure, but it holds the promise of being a final solution.  Currently Urolift is much less disruptive than TURP, which needs a couple of days in the hospital and almost always leads to retrograde ejaculation (into the bladder).[1] https://www.vivifimedical.com/[2] https://www.texasheart.org/people/william-e-cohn/\n \nreply",
      "Thanks for the shout out. I am the CEO of Vivifi medical. We are building off the gat and Goren\u2019s work and making it better and more robust. More importantly making it more accessible to patients through urologists. \nOur early clinical trial data from Panama is looking highly encouraging and we are working hard to bring this to the market in the fastest manner possible.\n \nreply",
      "I had a look at your trial description (https://clinicaltrials.gov/study/NCT06424912)Are you planning to publish the longitudinal data, esp. of endpoints 2 and 3 (prostate size, urinary flow). It would greatly add to the public understanding of this procedure. Why didn't you go for PSA? It's easy to obtain altough one probably wouldn't expect significant changes in this short time frame.\n \nreply",
      "Yes, that\u2019s the intent post study completion.We are collecting PSA data as well. It\u2019s a useful parameter for prostate cancer.\n \nreply",
      "Have you found that with your procedure, to quote the blog piece, \"new venous bypasses grow to replace the destroyed spermatic veins,\" as found in Gat and Goren's work in follow ups? Or is the long term data not there yet?Thank you for taking a risk on this by the way. As someone who has family history it's heartening to know there are people taking this seriously.\n \nreply",
      "We actually bypass the spermatic vessels. There is historical evidence that bypassing the spermatic vessels is a superior way to treat varicoceles. \nSo our procedure shouldn\u2019t have the recurrence (of varicoceles or bph) concerns. But this needs to be established through long term studies.Thanks for sharing your story. It\u2019s stories like yours \u2014 people with family histories and real-world experiences \u2014 that fuel everything we\u2019re doing.\n \nreply",
      "We are currently gathering insights to better understand patient preferences and would greatly appreciate your input. If you are interested in participating in a short survey, please contact us at info@vivifimedical.com.\nThank you for helping us shape the future of patient care.\n \nreply",
      "Is the procedure still possible/advisable after a TURP?\n \nreply",
      "Yes, our procedure could be done before or after any other BPH treatment out there, including TURP.\n \nreply",
      "Do you end up impotent or with incontinence?\n \nreply"
    ],
    "link": "https://yarchive.net/blog/prostate/",
    "first_paragraph": "The prostate gland causes entirely too many problems.  In the US,\nprostate cancer kills about one man of every forty.  \u201cBenign\nprostate hyperplasia\u201d (BPH) is even more common, affecting most\nmen over age 60.  It pinches the urinary tract, making it hard to\nurinate, and is constantly in danger of transforming from\n\u201cbenign\u201d to \u201cmalignant\u201d.  Even the difficulty urinating is enough\nof a problem that men often get surgery for it, usually TURP, a\nsort of roto-rooter job (except cutting through the pipe instead\nof just cleaning it out).In women, breast cancer has a similar death toll, but the breasts\nhave an excuse: they\u2019re much bigger; there are many more cells to\ngo bad.  They\u2019re also much more metabolically active, capable of\nproducing enough milk to feed a baby; the prostate\u2019s output is\ntiny in comparison.One idea I\u2019ve seen is that the prostate serves as the body\u2019s\n\u201cgatekeeper\u201d against sexually transmitted diseases, and in the\nprocess often gets chronically infected itself; the resulting\n",
    "summary": "In a dazzling display of geriatric optimism, the latest entry in the desperate dash to dodge death-by-dribble discusses slicing into prostate veins like a budget Black Friday shopper tweaks old pipes. The Internet experts emerge from the woodwork, boasting technical terms they Googled just moments before commenting, believing firmly they're mere steps away from curing one of man's aging annoyances. Meanwhile, a company CEO pops up with just enough jargon to sound groundbreaking without convincing anyone who's had an actual science class. Commenters oscillate between hopeful naivety and the crushing realization that their private parts might never cooperate again, all while planning which futuristic procedure they'll try next in the bingo hall of medical miracles. \ud83e\udd21\ud83d\udd27\ud83c\udfe5"
  },
  {
    "title": "Anatomy of a SQL Engine (dolthub.com)",
    "points": 19,
    "submitter": "ingve",
    "submit_time": "2025-04-26T22:00:40 1745704840",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.dolthub.com/blog/2025-04-25-sql-engine-anatomy/",
    "first_paragraph": "May marks five years since Dolt adopted go-mysql-server. Today we summarize the current state of GMS by walking through a query's journey from parsing to result spooling.SQL engines are the logical layer of a database that sit between client\nand storage. To mutate the database state on behalf of a client, a SQL\nengine performs the following steps:ParsingBindingPlan SimplificationJoin ExplorationPlan CostingExecutionSpooling ResultsMost systems also have a variety of execution\nstrategies (row vs vector based) and infrastructure layers (run locally\nvs distributed). At the moment Dolt's engine by default uses row-based\nexecution within the local server.The first thing a SQL Engine does when receiving a query is\ntry to form a structured abstract syntax tree (AST). The AST is a rough\ncut of whether the query is well formed. The entrypoint of the parser is\nhere.A client driver initializes a query by passing bytes over the network through a server\nlistener into a handler command ComHandler. T",
    "summary": "<b>Anatomy of an Overhyped SQL Engine</b>\n\n<p>Welcome to <em>Dolt</em>, where SQL engines are repackaged in shiny, go-lang buzzwords and delivered with the excitement of watching paint dry. The journey from parsing to result spooling is narrated with the breathless awe typically reserved for more titillating subjects, like watching grass grow. In the magical land of <em>\u201cadvanced databases\u201d</em> where users confuse verbosity for insight, the most heated debate isn't about performance\u2014it's whether to pronounce SQL as \u201csequel\u201d or \u201cS-Q-L.\u201d Comments focus less on the technical prowess of Dolt's SQL engine and more on medieval witchcraft to prevent it from slowing down their already glacial homegrown apps.</p>"
  },
  {
    "title": "The Passing of Ucbvax (1994) (ucbvax.berkeley.edu)",
    "points": 31,
    "submitter": "ecliptik",
    "submit_time": "2025-04-26T20:02:06 1745697726",
    "num_comments": 11,
    "comments_url": "https://news.ycombinator.com/item?id=43806630",
    "comments": [
      "I love the ceremony associated with this machine's retirement. As I get older and have more experience replacing gear I installed and worked with for long stretches of my career, I have started to appreciate ceremony more.In the last 15-ish years I've taken to stashing notes in and around hardware I've installed. I write the date, an anecdote about the weather or the news, and my name. It has been nice to find these notes years later, when I'm lucky enough to be one retiring the gear. I hope, when other people have retired gear I've installed, they get a little kick out of seeing a voice from the past.\n \nreply",
      "VAX power really did make big leaps from from generation to generation. The 11/750 they started with got about 0.65 VUPs and the VAXstation 3200 they ended with topped out at 2.8, over four times faster. The VAXstation 3100 M76 here, about 18 months later, makes another big jump to 7.6.\n \nreply",
      "Only towards the end.\nBy the time the CVAX microprocessor inside the VaxStation 3100 shipped in 1988, it was too late for the VAX line.[1] Other microprocessors already dominated.\nThe VAX 11/780 came out in 1977. It was a long time until a faster model.There were rumors of a VAX 11/790, and it eventually came out as the VAX 8000 family in 1984. That had about 4x the performance of the 11/780. It was not a microprocessor; the CPU still took up several large boards. \nThe VAX 8000 had to compete with all the M680x0 machines, and soon, the Intel 386 machines. It was worse on price/performance. DEC had to go back and make a fast VAX microprocessor, which they did. But it was too late.\n \nreply",
      "DEC spent an enormous amount of money on an emitter-coupled logic (ECL) bipolar implementation as the VAX 9000.They came to discover that the MicroVAX hit ~70% of the performance at a fraction of the cost.That was an expensive dead end.\"Production problems pushed back its release, by which time these fears had come true and newer microprocessors like DEC's own NVAX offered a significant fraction of the 9000's performance for a tiny fraction of the price.\"Roughly four dozen systems were delivered before production was discontinued, a massive failure. \"https://en.m.wikipedia.org/wiki/VAX_9000\n \nreply",
      "We had one of these at CERN in the experimental physics group I was in 1990-1991.  I had no idea they were rare or that the line was a failure.  It was certainly faster than the other machines the group had access to at the time (except an onsite Cray, access to which was restricted only to members from \"Western\" countries for political reasons).\n \nreply",
      "Our shop floor system is still written in VAX ACMS, using TDMS for menus, and Oracle Rdb for SQL.I still have an account. It runs on the Charon emulator.A little after your time, I wrote code on a DECstation 5000/240 running MIPS/Ultrix. I'm surprised that wasn't faster, and/or available to you.The vector extensions might have been your niche though.\n \nreply",
      "It was the mid 80's.  That was happening to everything.  The days of the VLSI scaling inflationary period are almost forgotten now, but it was a wild ride while it lasted.It was like, blink and you missed virtual memory.  Blink again and now you count in gigahertz.\n \nreply",
      ">Path: agate!agateway!CMSA.BERKELEY.EDU!CLIFFLooks like the email was sent/received via UUCP or hit one UUCP path.\n \nreply",
      "Some email certainly was, a lot of local uucp nodes polled ucbvax - this was at a time when UUCP routing was largely manual and people quoted their email relative to well known nodes (like ucbvax) - my business cards said \"..!ucbvax!unisoft!paul\"\n \nreply",
      "No, this is a Usenet posting. Bang paths are still common there.\n \nreply"
    ],
    "link": "http://ucbvax.berkeley.edu/passing-of-ucbvax.txt",
    "first_paragraph": "",
    "summary": "In a nostalgic blaze of misplaced reverence, a commenter waxes poetic about the emotional ceremonies of decommissioning ancient hardware. Is there a service for tired tech? Maybe. Meanwhile, tech aficionados engage in a melancholic recounting of VAX's computational glory, conveniently glossing over its belated obsolescence. As the comment thread devolves, each participant eagerly showcases their bygone tech credentials, clinging to the romantic notion that their arcane knowledge holds relevance in a world that has long since moved on. They march proudly in the parade of dusty anecdotes, even though most spectators have already left for the cloud. \ud83c\udfba\ud83d\udcbe\ud83d\udc74"
  },
  {
    "title": "Parity (YC S24) is hiring founding engineers to build an AI SRE (in-person, SF) (ycombinator.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2025-04-26T22:24:04 1745706244",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.ycombinator.com/companies/parity/jobs",
    "first_paragraph": "The AI SRE for Incident ResponseParity is the AI SRE for Incident ResponseLet's face it: on-call sucks. 2 AM pings, unactionable alerts, and a week of getting behind on your real work.Parity is leveraging AI to make on-call a thing of the past. Our AI agents run investigations to triage, root-cause, and remediate issues in infrastructure autonomously. We have seen great adoption with early customers and are building a product that has the potential to define an emerging category.We're backed by exceptional investors, including Y Combinator, General Catalyst, and Sugar Free Capital. We're also supported by a great cohort of angels including the founders and early employees of top startups like Midjourney, Crusoe, and more.\u00a9 2025 Y Combinator",
    "summary": "Title: Saving Humanity One AI SRE at a Time\n\nIn the adrenaline-fueled world of <em>not understanding basic on-call responsibilities</em>, a bold startup, Parity, claims to rescue tech bros from the harrowing 2 AM Slack pings that threaten their kombucha brewing time. Parity, fueled by the zillionth round of VC cash injections, is unleashing AI agents to boldly do what every sysadmin pretends is complicated: triaging, rooting, and fixing spooky server alerts. Backed by the mythical Y Combinator and other funds with too much money, Parity promises not only to innovate but also to \"define an emerging category,\" presumably in the league of groundbreaking inventions like the spork. Commenters, most of whom have the collective AI understanding of a slightly advanced toaster, chant in harmony about the inevitable takeover by our algorithmic overlords, blissfully unaware that their jobs are about as secure as a milk crate tower."
  },
  {
    "title": "I Tried Windows Gaming on a Mac and It's Amazing (andrewethanzeng.com)",
    "points": 29,
    "submitter": "indigodaddy",
    "submit_time": "2025-04-26T23:53:59 1745711639",
    "num_comments": 51,
    "comments_url": "https://news.ycombinator.com/item?id=43808294",
    "comments": [
      "This should be titled, \"I Tried Windows Gaming on a Mac and With a Lot of Effort It's Passable!\"\n \nreply",
      "To be fair, one couldn't have even said that much about Linux a decade ago even though Linux ran on the same hardware as Windows. Now we can say that we can do Windows gaming on Linux and it is amazing. It is possible to both play a huge swath of Steam games under Linux, with comparable performance to Windows, and to go the \"a lot of effort\" route with non-Steam games under Wine (again, with comparable performance to Windows). That's before considering native Linux games.\n \nreply",
      "The algorithm won't accept nuanced takes. Must fish for engagement.\n \nreply",
      "Yup.I use a Mac to get work done. It would be nice to use it for a bunch of games, but I really couldn't be arsed. If I really wanted to game, I'd set up a PC gaming box.\n \nreply",
      "Gotta love the irrational exuberance of Mac users.\n \nreply",
      "I do my work on a mac because I don't like the nuisance of trying to do it on windows. There is always some wonkiness that I don't even bother to remember the details of, because the solution is just to do it on mac.I rather play games on windows because I don't like the nuisance of trying to do it on mac. There is always some wonkiness that I don't even bother to remember the details of, because the solution is just to do it on windows.\n \nreply",
      "If you don't wanna pay $74 for CrossOver, there's also Whisky which impressed me and I've had great success with. It's an open source Wine wrapper for macOShttps://github.com/Whisky-App/WhiskyEDIT: it seems that at some point in the past month the author stated whisky is no longer maintained!\n \nreply",
      "Note also that Whisky is no longer maintained, author suggests using CrossOver.https://docs.getwhisky.app/maintenance-notice\n \nreply",
      "I see the repo has fairly recent updates, but the website says the project is no longer actively maintained.https://docs.getwhisky.app/maintenance-notice\n \nreply",
      "Interesting! It wasn't the case when I first downloaded it last month!\n \nreply"
    ],
    "link": "https://www.andrewethanzeng.com/i-tried-windows-gaming-on-a-macand-its-amazing/",
    "first_paragraph": "A month ago, I reviewed the base M4 Mac Mini and its performance surprised me. So much so, that I spent most of my time after that review\u2026gaming on this tiny little box.Resident Evil 4, Firmament, and Shadow of the Tomb Raider all run great: averaging 40 to 60FPS at 1080P resolution and even 4K with MetalFX upscaling.But as you know, the Mac gaming library as it stands today, is disappointing, to say the least.That\u2019s when I installed a Windows compatibility layer over macOS through CrossOver and man: now the gaming rabbit hole on the M4 Mac Mini gets deep!\u00a0With CrossOver, I\u2019ve been able to run Black Myth Wukong, Counter-Strike 2, Diablo 4, and Assetto Corsa: and some of these games run shockingly well.\u00a0So this here is CrossOver: it\u2019s a runtime emulator that translates executable codes into native codes: and what this means is we can open Windows apps and games directly from macOS, without a virtual machine like BootCamp.\u00a0In case you want to follow on and give this a go for yourself, I\u2019",
    "summary": "**Title: \"The Miraculous Tale of Gaming on a Mac, Because Why Not Torture Yourself?\"**\n\nIn a groundbreaking experiment that nobody asked for, a brave soul has taken the \"round peg, square hole\" challenge to epic levels by forcing Windows games to run on a Mac. Utilizing *CrossOver*, a technological band-aid that yanks Windows apps into macOS with the elegance of a bull in a china shop, our hero discovers he can awkwardly average 40-60FPS on familiar titles\u2014if he squints hard enough. Commenters, quick to parade their allegiance, either bemoan the utter travesty of mixing Apple and Windows or recount their tales from the coding trenches, fighting compatibility issues like valiant keyboard warriors. Meanwhile, the eternally lost naysayers mourn the demise of Whisky, an open-source patch that just gave up, echoing the efforts of using a Mac for serious gaming. \ud83d\udd79\ufe0f\ud83d\udc80\ud83c\udf4e"
  },
  {
    "title": "Slinky-Coil Dipole (2021) (nonstopsystems.com)",
    "points": 21,
    "submitter": "rolph",
    "submit_time": "2025-04-26T20:23:32 1745699012",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=43806838",
    "comments": [
      "I am endlessly amazed to discover new interests and professions that people have. There are endless professions and sub-professions and it is simply amazing that some people will always be attracted to each and every one of them.\n \nreply",
      "I did this back in the 1980s in my parents attic, it actually worked on 40 and 15 meters despite the relatively close electrical conduits going to the ceiling lights.You're way better off having a proper dipole outdoors if you can do so.\n \nreply",
      "agreed, outside proper dipole is best generally.what i like bout the slinky, is the quick set, and strike down.i had recalled radio operators in vietnam kludgeing these up in the bush, after getting a couple slinkys in the mail, so i thought it was worth a cycle.\n \nreply"
    ],
    "link": "https://nonstopsystems.com/radio/frank_radio_antenna.htm",
    "first_paragraph": "\u25cf Magnetic Loop antenna 80-20 mtrs\u25cf Magnetic Loop antenna 40-20 mtrs-\u25cf \"Slinky\" Helical Magnetic Loop antenna\u25cf 80m short base-loaded verticals\u25cf 80m short mid-loaded verticals\u25cf 80m short linearly-loaded verticals\u25cf 80m short vertical KGD-dipole\u25cf 80m short end-hat-loaded verticals\u25cf 20m short vertical dipole & monopoles-\u25cf Umbrella antenna for 80m and up-\u25cf 80m short mid-loaded dipoles\u25cf \"KGD\" very short mid-loaded mono-band dipoles\u25cf \"Cobra\" short multi-band dipole\u25cf (Un)terminated folded dipoles\u25cf 20m half-size dipole\u25cf Slinky\u00ae-coil short multi-band dipole\u25cf 20-10m rotary dipole\u25cf Inverted-U dipole for 80/40m\u25cf 40-10m \"Yo-Yo\" portable wire dipole\u25cf Multi-band End-Fed\u25cf 20m half-size Yagi-beam-\u25cf SM0VPO-style spiral loops (80/40/20)\u25cf Simple RF-probe\u25cf Baluns, chokes, etc.\u25cf 400 watt dummy-load\u25cf Wireless antenna switch\u25cf Antenna tuners/couplers\u25cf Measuring with a miniVNA\u25cf Telescopic hand-crank antenna mast\u25cf Attenuator/coupler\u25cf Equipment bonding (noise reduction)\r\n\t\tMy website uses JavaScript for menus etc.",
    "summary": "Title: Ham Radio Hobbyists\u2019 Creative Desperation\n\nEmpire of nerdom assembles yet another <em>meticulous list</em> of antennas that fewer than twelve people on the planet deeply care about. The nonstopsystems.com maven dazzles dozens with dishes prefixed by \"Slinky\" and suffixed by capacities, crowning confusion with acronyms that echo like Morse code in an empty room. Commenters wax nostalgic, reminiscing about the golden age of attic-bound radio and jungle DIYs, bravely <i>fighting the good fight</i> against mainstream antenna setups with a tear for their store-bought Slinkys. Per the usual, admirers of copper wire contortions miss the forest for the antenna trees, proving you can take the operator out of the ham shack, but you can't make them less eccentric."
  },
  {
    "title": "Cloth (cloudofoz.com)",
    "points": 415,
    "submitter": "memalign",
    "submit_time": "2025-04-26T05:31:52 1745645512",
    "num_comments": 48,
    "comments_url": "https://news.ycombinator.com/item?id=43801179",
    "comments": [
      "Another one for the browser: https://oimo.io/works/cloth/\n \nreply",
      "such an unbelievably cool website.\n \nreply",
      "Cool. When can we get this kind of cloth interaction in games?\n \nreply",
      "Splinter Cell, from 2002: https://web.archive.org/web/20220207182149/https://gfycat.co...\n \nreply",
      "This sort of thing was all the rage in the late 2000s. NVIDIA acquired PhysX, and suddenly every AAA game had cloth animation (just so long as you bought an nvidia GPU)\u2026 mirror\u2019s edge, for example, has a ton of interactive tarpaulins and drapes if you play it on a supported card\n \nreply",
      "simply lovely (like the other stuff on that website)\n \nreply",
      "And another one (Rusty with bevy).. runs better on desktop\n \nreply",
      "I was able to understand verlet integration and write my own cloth simulation after reading the blog post from Marian Pek\u00e1r:https://pikuma.com/blog/verlet-integration-2d-cloth-physics-...\n \nreply",
      "> Fun fact: We pronounce Verlet as [v\u025b\u0281'l\u025b]... but remember that it's only Verlet if it comes from the Verlet region of France; otherwise, it's just sparkling Euler.Brilliant !\n \nreply",
      "How do people go from web dev/gradle/java knowledge to build something like this.For me, sometimes I wonder since I never did CS undergrad, I will never understand any of this no matter how many programming langauge I learn. I did dabble a bit with OPENLY, LIBGDX, GODOT, unity but to come to with cloth simulation from scratch, damn\n \nreply"
    ],
    "link": "https://www.cloudofoz.com/verlet-test/",
    "first_paragraph": "",
    "summary": "<i>Cloth</i> (cloudofoz.com): A breathtaking reinvention of the wheel, presented on digital fabric for your adoring amazement and feigned surprise. The blogosphere erupts as armchair developers and weekend coders marvel at something video games mastered before they lost their baby teeth. Commenters stumble over each other to drop quasi-technical babble and nostalgic references to prehistoric GPU technology, while one brave soul wonders if their entire lack of a CS degree is to blame for not inventing <em>digital clothes</em> first. It's like watching a bunch of toddlers discover that their blankets can also be capes, but with more blockchain."
  },
  {
    "title": "Stuffed-Na(a)N: stuff your NaNs (github.com/si14)",
    "points": 105,
    "submitter": "dgroshev",
    "submit_time": "2025-04-26T14:04:01 1745676241",
    "num_comments": 45,
    "comments_url": "https://news.ycombinator.com/item?id=43803724",
    "comments": [
      "This is usually called NaN-boxing and is often used to implement dynamic languages.https://piotrduperas.com/posts/nan-boxing\n \nreply",
      "I wonder if IEEE-754 designers anticipated this use case during development. Great article - this kind of \"outside-the-normal-use-case\" requires a very careful reading of the specifications/guarantees of the language.\n \nreply",
      "IEEE-754 seems to say that NaN payloads are designed to contain \"retrospective diagnostic information inherited from invalid or unavailable data and results\". While NaN boxing in particular probably wasn't the intention, untouched payloads in general absolutely were.\n \nreply",
      "I appreciate this article a lot more because it contains an iota of benchmarking with an explanation about why this might be more performant. Especially since my first thought was 'wouldn't this require more instructions to be executed?'The original post seems really weird to me. I would have dismissed it as someone's hobby project, but... that doesn't seem like what it's trying to be.\n \nreply",
      "\"More instructions to execute\" is not synonymous with \"slower\".NaNboxing lets you use less memory on certain use cases. Because memory access is slow and caches are fixed size, this is usually a performance win, even if you have to do a few extra ops on every access.\n \nreply",
      "It's a joke project.\n \nreply",
      "This doesn't work on Firefox, as it normalizes NaNs as they're extracted from ArrayBuffers. Presumably because SpiderMonkey uses NaN-boxing itself, and thus just doesn't have any way to represent actual non-canonical NaN floats.\n \nreply",
      "The spec mandates normalization of NaNs in ArrayBuffers. If other engines do not normalize, I believe it's a bug in those engines!\n \nreply",
      "Dammit Mozilla, first no WebGPU, now this?! /s\n \nreply",
      "I made a garlic nan: https://www.godbolt.org/z/enjv1c7Tf\n \nreply"
    ],
    "link": "https://github.com/si14/stuffed-naan-js",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Stuff your Na(a)N\n       Joy via WikimediaHave you ever done this by mistake?Or maybe this?Have you been annoyed by NaN propagation?With stuffed-naan, you can finally make use of NaNs. Just stuff NaN Na(a)Ns with your data!To quote Sun Tzu, \"If you can't beat the enemy, use the enemy's advantage to your advantage\".\nNa(a)Ns preserve data even when used in mathematical operations:stuffed-naan is compact. Community Edition achieves a compression ratio of -25%.\nThat means, for every 1024 bytes of data, you get 1368 bytes of float64 Na(a)Ns back!\nThis is an industry-beating level of Na(a)N compression. For even better compression, consider the\nEnterprise Edition.stuffed-naan is blazing fast. Thanks to advanced byte-manipulation capabilities available in ECMAScript\u00ae 2026,\nthe overhead of stuffing is minimal. Na(a)Nification of a thousand ",
    "summary": "**Clown College Coding: NaN Edition**\n\nIn a digital feat nearly as useful as a chocolate teapot, a brave GitHub coder unveils **_stuffed-naan_**, a library designed to \"make use of NaNs\". That\u2019s right, folks\u2014where most see digital detritus, our hero sees potential. The library boasts a Kafkaesque \"compression ratio of -25%\", which, in layman\u2019s terms, means swapping your sleek data for a chubbier version of float64 NaNs\u2014because who doesn't want to bloat their applications with mysteriously unusable numbers? Meanwhile, the comment section evolves from mildly tech-curious into a full-blown geek chorus, singing paeans to the misunderstood NaN, invoking the IEEE-754 like some arcane deity. Extra laughs are provided by a lost soul who mistook the forum for a cooking show and posted a recipe for garlic nan. Surely, the high point of software innovation. \ud83e\udd13"
  },
  {
    "title": "CosAE: Learnable Fourier Series for Image Restoration (sifeiliu.net)",
    "points": 33,
    "submitter": "E-Reverance",
    "submit_time": "2025-04-26T20:43:22 1745700202",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=43807029",
    "comments": [
      "I've been dabbling in using Fourier analysis in deep learning lately, and I'm surprised it  that I haven't turned up very much research in this area (Fourier Neural Operators being  what seems to be the biggest exception). Fourier analysis is such a ubiquitous tool, intuitively I'd think it would work great for deep learning. My suspicion has been that complex numbers are difficult to work with, and maybe I'm just bad at surfacing the relevant research, but I'd be interested to hear from those better informed. (My naive approach has been to simply concatenate the real and complex components together into an n+1 dimensional tensor, but surely there's a way that better respects the structure of complex numbers.)\n \nreply",
      "These results look incredible, and with an inference time of only 36 ms for a 4X super resolution on a V100.\n \nreply",
      "They should make a temporally coherent version of CosAE to replace this: https://blogs.nvidia.com/blog/rtx-video-super-resolution/\n \nreply",
      "No code has been released though?\n \nreply",
      "That's addressed in the paper:  Open access to data and code\n  Question: Does the paper provide open access to the data and code, with sufficient instruc-\n  tions to faithfully reproduce the main experimental results, as described in supplemental\n  material?\n  Answer: [No]\n  Justification: Although we have answered \u201cNo\u201d for now, we intend to release the code and\n  models to enable the reproducibility of our main experimental results, pending approval\n  from the legal department. This temporary status reflects our commitment to open access\n  once all necessary permissions are secured.\n \nreply",
      "The paper was released a few months ago for context.\n \nreply"
    ],
    "link": "https://sifeiliu.net/CosAE-page/",
    "first_paragraph": "\n            In this paper, we introduce CosAE (Cosine Autoencoder), a novel, generic Autoencoder that seamlessly leverages the classic Fourier series with a feed-forward neural network. CosAE represents an input image as a series of 2D Cosine time series, each defined by a tuple of learnable frequency and Fourier coefficients. This method stands in contrast to a conventional Autoencoder that often sacrifices detail in their reduced-resolution bottleneck latent spaces. CosAE, however, encodes frequency coefficients, i.e., the amplitudes and phases, in its bottleneck. This encoding enables extreme spatial compression, e.g., 64x downsampled feature maps in the bottleneck, without losing detail upon decoding.\n          \n            We showcase the advantage of CosAE via extensive experiments on flexible-resolution super-resolution and blind image restoration, two highly challenging tasks that demand the restoration network to effectively generalize to complex and even unknown image degrad",
    "summary": "**Title: Another Day, Another Fourier Farce**\n\nIn an innovative twist that no one asked for, CosAE (Cosine Autoencoder) marries the dusty annals of Fourier series with the overhyped world of autoencoders, claiming to compress images like never before without sacrificing those precious details. \ud83d\ude31 Where traditional autoencoders dare to blur an edge, CosAE saunters in, frequencies and coefficients in tow, boasting a 64x compression rate that will surely save us from the data apocalypse. Meanwhile, the paper's discussion section blooms with tech enthusiasts who just discovered Fourier analysis isn't just a fancy term from their college days but might actually be used for something \u2013 if only they could stop concatenating complex numbers like it's a high school science project. And amidst cries for code that's locked tighter than Fort Knox, the authors promise eventual release post-legal hoop-jumping, leaving eager beavers clutching at GitHub's empty repos. Can't wait to decode that!"
  },
  {
    "title": "The Friendship Recession: The lost art of connecting (hks.harvard.edu)",
    "points": 357,
    "submitter": "47thpresident",
    "submit_time": "2025-04-26T11:41:21 1745667681",
    "num_comments": 281,
    "comments_url": "https://news.ycombinator.com/item?id=43802727",
    "comments": [
      "For the us, I feel like it\u2019s late stage individualism. This is what happens I think when people prioritize themselves over their communities, I think we have less dependence on our communities than ever thanks to the internet and being able to physically avoid community. We have less interaction than before. We can order grocery pickup and not even have to be physically around people for basic life tasks. We order next day delivery on Amazon and don\u2019t even have to go out in the world and be in the physical presence of others :(The article talks about how it\u2019s more of a younger generation phenomenon suggesting older generations still maintain their friendshipsI\u2019m grappling with this myself, it requires a lot of energy to form adult friendships. I keep seeing my neighbors out at the playground, I reach out and say hey and hi and ask them how they are doing but stop short of investing the time necessary to form real friendships with them and I know deep down that it\u2019s perpetuating late stage individualism\n \nreply",
      "It\u2019s not only lack of dependence, but also lack of idleness.Most of my friend interactions would come from things like having a moment with nothing to do in the bus, realizing I have no particular plans this weekend and reaching out to a couple friends to see if they\u2019re available.Now those moments are instantly drowned by opening instagram before a thought bubbles up. And when the weekend eventually comes and there\u2019s no plan, Netflix is just a button press away.We need moments of boredom and reflection to push us into action, the attention economy is robbing us from that.I\u2019d even say the increase in anxiety related symptoms is due to this lack of idleness. The mind feels as if it\u2019s super busy moving from active task to active task when in reality there were hours of just defaulting to reels.\n \nreply",
      "It's not only modern technology taking up time. I foolishly bought a project house and have spent nearly every weekend and some weeknights doing repairs and improvements. My SO also tends toward time consuming hobbies like gardening and aquariums. Add young children and every free moment in between is precious.\n \nreply",
      "That is true, but real hobbies will rarely take up your micropauses - going to the bathroom, coffee break at work, commuting, waiting between sets at the gym, and so on.You won\u2019t do social stuff  in those micropauses anyway, that\u2019s true, but I think those moments are where you\u2019d normally \u201cmentally review\u201d. Wondering how a friend is, feeling like you miss a connection, etc.Without that, I think we mentally drift away from social connections.\n \nreply",
      "You could involve friends in those hobbies. In fact men do better hanging out if they have a goal.My stepbrother has declined hang out invitations for decades but the minute I need the most minor house or car repair he\u2019ll drop everything and be there all day.\n \nreply",
      "You just found the ultimate hack to getting your friends to rebuild an entire house for you\n \nreply",
      "On one hand I'm inclined to believe this particular example relies on personality. My aunts and uncles had their home hobby projects and so did they're friends. They'd help either other out on their projects and then take a break over a beer or cigs, chatting the rest of the evening away.\n \nreply",
      "But you see the Amish, they just rebuilt a whole lumber sawmill in only eight days.https://x.com/matt_vanswol/status/1915121027820159414Your project house was an individual pursuit when it should be a collective one.\n \nreply",
      "My project has involved neighbors, family, and even a few contractors. But unlike a barn built from scratch there are a lot of random bespoke tasks. Many of them require judgement and experimenting to make it work. Sadly the property was neglected a long time, and poorly built in the first place. Bulldozing and having a new house professionally built would've been faster, produced a better outcome, and only been moderately more expensive--in hindsight.\n \nreply",
      "In the old world you would have the distinct privilege of bringing this experience to your community. No naive youth can afford even a \u201cstarter\u201d house for you to help them rebuild.\n \nreply"
    ],
    "link": "https://www.happiness.hks.harvard.edu/february-2025-issue/the-friendship-recession-the-lost-art-of-connecting",
    "first_paragraph": "February 2025 IssueCarolyn Bruckmann, Harvard Kennedy School MPP \u201825The so-called \u201cFriendship Recession\u201d is making its way into the vernacular\u2014a profound shift in how Americans experience and sustain friendships. The data paints a stark picture. According to the American Perspectives Survey, the percentage of U.S. adults who report having no close friends has quadrupled to 12% since 1990, while the percentage of those with ten or more close friends has fallen by nearly threefold. The foundations of the crisis were laid long before lockdowns. For decades, Americans consistently spent about 6.5 hours a week with friends. Then, between 2014 and 2019, that number plummeted to just four hours per week.To be sure, systemic forces underlie this shift. Suburban sprawl has physically distanced us from one another. The government slowed down its investment in and construction of third spaces\u2014such as community centers, parks, and coffee shops\u2014which has left fewer places for organic social interac",
    "summary": "**The Friendship Recession: Lost But Not Forgotten?**\n\nHarvard drops a bombshell with its revelation that Americans can't make friends anymore, ostensibly because we've forgotten how to use our communal spaces and are too busy staring at our phones. Commentators dive into a deep sea of existential dread debating if Instagram is the new best friend. One brave soul even suggests that hobbies like repairing old houses might just be the secret to keeping friendships alive \u2013 because nothing says bonding like forced labor on a crumbling foundation. Meanwhile, the societal fabric continues to unravel, stitch by self-centered, screen-addicted stitch. \ud83d\udcc9\ud83d\udcf2\ud83d\udc94"
  },
  {
    "title": "BART's Anime Mascots (bart.gov)",
    "points": 64,
    "submitter": "archagon",
    "submit_time": "2025-04-26T19:12:20 1745694740",
    "num_comments": 31,
    "comments_url": "https://news.ycombinator.com/item?id=43806281",
    "comments": [
      "I do like the idea of mascots, but truthfully I think they are better done as non-human mascots and need to be simple. I think Japan got this right with Yura-chara[0]. There seems to be a strong preference for non-human characters and when there are human ones, they're still overly simplistic.Seems like same rule about flags[1]: a child should be able to draw it from memory.Only Barty seems to fit these conditions.[0] https://en.wikipedia.org/wiki/Yuru-chara[1] https://nava.org/good-flag-bad-flag\n \nreply",
      "Not for a transit system per se, but the ORCA farecard in Seattle has a mascot named Boop, who is an orca: https://info.myorca.com/news/meet-boop/\n \nreply",
      "The first BART mascot has a little blue chibi goat next to the human girl, and I can't tell if the chibi is supposed to be an alternate form of the girl or a completely separate entity, but either way it seems like it could be a solid yura-chara.\n \nreply",
      "> I think Japan got this rightI like DPS-kun from beatmania\u2161\u1d05x copula: https://www.youtube.com/watch?v=QcfmIKKMu7YThey made a plush of him that's very cute too\n \nreply",
      "> Seems like same rule about flags[1]: a child should be able to draw it from memory.Im a grown ass man and can't draw the US flag properly from memory, much less the many far more complicated flags out there.I don't think that definition is particularly useful.\n \nreply",
      "It is a useful concept, and letting the whispers of the vexillophiles[0] into your head will lead you to see that most flags are well, pretty bad.CGP Grey has a lot of opinions[1] about this.[0] https://en.m.wikipedia.org/wiki/Vexillology[1] https://youtu.be/l4w6808wJcU\n \nreply",
      "Agreed.  Nyango Star is another example of this sort of mascot done right.  He's an apple, a cat, and a heavy metal drummer; what's not to love?\n \nreply",
      "We have something similar here in Kyoto! But we're Japan so there's an actual anime [1] and a character relationship chart [2], both straight from the city government.[1] https://www.youtube.com/watch?v=2OInuZFHeQo[2] https://www.city.kyoto.lg.jp/kotsu/cmsfiles/contents/0000215...\n \nreply",
      "They're all female?  I wonder whether the BART officials know all the connotations of different kinds of anime/manga fandom.\n \nreply",
      "> The reincarnated bunny spirit of a legacy car who has seen it all.Not how I picture a BART car that has \"seen it all\".\n \nreply"
    ],
    "link": "https://www.bart.gov/news/fun/anime",
    "first_paragraph": "",
    "summary": "**BART Embraces Kawaii Capitalism**\n\nIn an inspiring leap of cultural confusion, BART decides to import Japan's *least necessary* solution to public transit woes: anime mascots. Devotees of San Francisco's beleaguered transportation system have found fresh meat in the announcement, waxing philosophical about the profound implications of chibi goats and reincarnated bunny spirits. Between confusing the livestock with the anime girls and bemoaning their inability to sketch flags and mascots from memory, the cohort of online commentators perfectly mirrors the efficiency and coherence of BART's daily operations. What's next? Astrology-based train schedules? \ud83d\ude86\u2b50"
  },
  {
    "title": "HTTP Feeds: a minimal specification for polling events over HTTP (http-feeds.org)",
    "points": 36,
    "submitter": "sea-gold",
    "submit_time": "2025-04-26T17:12:15 1745687535",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=43805358",
    "comments": [
      "This is an astonishingly bad idea. Don't do this.Use HTTP server-sent events instead. Those can keep the connection open so you don't have to poll to get real-time updates and they will also let you resume from the last entry you saw previously.https://developer.mozilla.org/en-US/docs/Web/API/Server-sent...\n \nreply",
      "Yeah, but in real life, SSE error events are not robust, so you still have to do manual heartbeat messages and tear down and reestablish the connection when the user changes networks, etc. In the end, long-polling with batched events is not actually all that different from SSE with ping/pong heartbeats, and with long-polling, you get the benefit of normal load balancing and other standard HTTP things\n \nreply",
      "Or use Braid-HTTP, which gives you both options.(Details in the previous thread on HTTP Feeds: https://news.ycombinator.com/item?id=30908492 )\n \nreply",
      "What happens if you need to catch up? You keep calling in a loop with a new lastEventId?What is the intention there though. Is this for social media type feeds, or is this meant for synchronising data (at the extreme for DB replication for example!).What if anything is expected of the producer in terms of how long to store events?\n \nreply",
      "It could use a section on high level justification / inspiration.For example, what inspired this over a typical paginated API that lets you sort old to new with an afterId parameter?\n \nreply",
      "Previously discussed (April 2022; 95 comments): https://news.ycombinator.com/item?id=30904220\n \nreply"
    ],
    "link": "https://www.http-feeds.org/",
    "first_paragraph": "Asynchronous event streaming and data replication with plain HTTP APIs.HTTP feeds is a minimal specification for polling events over HTTP:HTTP feeds can be used to decouple systems asynchronously without message brokers, such as Kafka or RabbitMQ.Client calls again with the last processed event id.An empty array signals the end of the feed.A client can continue polling in an infinite loop to subscribe to a feed.A client calls the endpoint with the last known event id as lastEventId query parameter in an endless loop.\nIf the response is an empty array, the client reached the end of the stream and waits some time to make another call to get events that occured in the meantime.Pseudocode:Client must persist the id of the last processed event as lastEventId for further fetches.The client\u2019s event processing must be idempotent (at-least-once delivery semantic). \nThe id may be used for idempotency checks.The server may also support long polling for lower latency.\nThe client adds a timeout que",
    "summary": "Title: HTTP Feeds: Reinventing the Wheel with More Latency\n\n\ud83e\udd16 Once again, the tech world proves that everything old can be new again, as long as you slap \"minimal\" and \"HTTP\" on it and strip down functionality to early 2000-era standards. HTTP Feeds emerges as a bold step backward in event streaming \u2013 because who needs efficient technologies like Kafka or server-sent events when you can make everything stagger under the robustness of continuous polling? Critics in the comments perform mental gymnastics to justify why adopting this tech is akin to opting for a carrier pigeon in an era of email, while proponents of the spec enthusiastically miss the point. Would be mavericks of the backward brigade champion long polling like it\u2019s 1998, with explorations in limitless loops chalked up as avant-garde rather than archaic. \ud83d\udd04\ud83d\udca4"
  }
]