[
  {
    "title": "Crows Are Even Smarter Than We Thought (nautil.us)",
    "points": 77,
    "submitter": "dnetesn",
    "submit_time": "2024-08-30T22:46:59",
    "num_comments": 39,
    "comments_url": "https://news.ycombinator.com/item?id=41405195",
    "comments": [
      "Have posted this before, but it really left an impression about crows, and the bond between their mates:Years ago I was putting out the garbage in the back alley behind our building where I lived on the 8th floor. A crow attacked me out of the blue. Distracted by the attack, the back door slammed shut behind me. Since my key was only good for the front door, I had to walk around the building. That damn crow followed me the entire time, dive bombing my head, and screaming bloody murder at me. It was a little spooky.When I finally got back inside and upstairs, I went and looked out the living room window, which looked out the same direction as the back alley. The crow had flown back around and was at the 8th floor looking in the window, from the other side of the pigeon netting we had on our balcony. On the inside of the pigeon netting, was another crow, desperately trying to figure out how it could escape. Not really sure how it had got itself through the pigeon netting in the first place.I went out and sliced a hole through the netting and the trapped crow quickly joined its mate outside, who finally stopped screaming bloody murder. To this day it still amazes me that the crow's mate, knew which apartment I lived in and spotted me downstairs.\n \nreply",
      "Sometimes I wonder whether we're being watched by a super intelligent species beyond our current detection that occasionally places objects in certain configurations in front of the smarter of our species throughout history, and writes articles based on their observations titled things like, \"homo sapiens smarter than previously known: demonstrates understanding of unified theory of electromagnetic waves through RF send/receive devices\"\n \nreply",
      "Found Gary Larson's alt account.You should turn it into a short movie using AI. I have thought something similar but more along the lines that in the universe above us, we are 3 days into a science experiment and either a) they don't know we exist or b) the look in with their microscope and see patterns for cities or c) they have a statistical measure of how many have developed ecosystems and set off a nuclear weapon. But on the scales they are viewing, the known universe might fit into a 50cm sphere (their dimensions).\n \nreply",
      "Honestly I envision this concept a lot; I was first inspired by Men in Black where a cat has a universe in a bauble attached to a collar around its neck. The bauble looks like a marble.\n \nreply",
      "No, it most definitely is not.\n \nreply",
      "Is a joke, it is very much in the theme of humans as test subjects, a common gag in his comics.\n \nreply",
      "We're not the only intelligent life on earth. We cant even define intelligence or measure it meaningfully. If we accept that human children are smart, then we must accept that species at equivalent levels of cognition are as well.Elephants, crows, dolphins, octopi, chimps, orang utan are all clearly very smart, and more intelligent than a human child.Besides being biologically irrelevant, the separation between humans and animals creates this weird divide where we constantly assume that we are the only intelligent life. It feels to me a bit like thinking the earth is the center of the universe. Maybe one day we'll understand better what other minds are like and we'll understand better how we are not alone or special.\n \nreply",
      "Ted Chiang has an excellent short story on this subject, regarding the construction of the Arecibo radio telescope as told from the perspective of a parrot: https://en.wikipedia.org/wiki/The_Great_Silence_(short_story...It's very short. Worth a quick read and a long thought.\n \nreply",
      "IMO all life is intelligent in some way or form. Evolution itself is even intelligent in that it\u2019s a learning system that adapts and solves problems.\n \nreply",
      "> This kind of feat, according to animal behavior researchers, requires the ability to form \u201cmental templates.\u201d Essentially, a mental template is an image in the mind of what a particular object looks like, even when that object is not present.As someone with aphantasia, can I get points for recreating something I've seen _without_ having an \"image in the mind\"?\n \nreply"
    ],
    "link": "https://nautil.us/crows-are-even-smarter-than-we-thought-820066/",
    "first_paragraph": "Art+ScienceBiology + BeyondCosmosCultureEarthLifeMindOceanOne QuestionQuanta AbstractionsRewildingScience Philanthropy AllianceSpark of ScienceThe PortholeThe Reality IssueThe Rebel IssueWomen in Science & Engineering\nNew evidence suggests the corvid family has surprising mental abilities.  \nNew evidence suggests the corvid family has surprising mental abilities.  Crows and ravens, which belong to the corvid family, are known for their high intelligence, playful natures, and strong personalities. They hold grudges against each other, do basic statistics, perform acrobatics, and even host funerals for deceased family members. But we keep learning new things about the savvy of these birds, and how widespread that savvy is among the corvid family.Earlier this year, a team of researchers from Lomonosov Moscow State University in Russia and the University of Bristol found that a species of crow called the hooded crow\u2014which has a gray bust and black tail and head feathers, making it look lik",
    "summary": "Title: Crows Outsmart Humans Yet Again\n\nIn an astonishing display of feathered genius, crows continue to outwit the naked apes (humans) who can barely manage to use Google Maps without assistance. According to groundbreaking research that basically reiterates what every birdwatcher already knows, these black-clad avians play chess at funerals, calculating their next emotional manipulation. Meanwhile, the comment section morphs into a baffling mix of conspiracy theories about celestial overlords observing us in snow globes and insider jokes about Gary Larson as if the fate of human intelligence hinges on understanding a Far Side cartoon. Are we sure we're not part of the crows' elaborate experiment? Maybe those bird brains are just punking us for kicks. \ud83e\udd2f\ud83d\udc26\ud83d\udca1"
  },
  {
    "title": "CIEL Is an Extended Lisp (ciel-lang.org)",
    "points": 281,
    "submitter": "todsacerdoti",
    "submit_time": "2024-08-30T15:04:19",
    "num_comments": 72,
    "comments_url": "https://news.ycombinator.com/item?id=41401415",
    "comments": [
      "Having a standard set ofwell documented things ready to go as if they were part of the core language, all with a single snazzy name, is soo important. I love this; Maybe it can become the new standard target. All it needs now is a good mascot or logo.\n \nreply",
      "Where is this documentation? Honestly I don't see much here. I'd call this a readme, not documentation.\n \nreply",
      "How so?? You should have a sidebar with menu entries. Try on http://ciel-lang.org/#/librariesoh, the sidebar disappears quickly when we scroll and it disappears when we click on \"show me\"\u2026 not great.\n \nreply",
      "I was on mobile when I looked and I never saw the sidebar. Might be something that needs fixing. Love the project regardless.\n \nreply",
      "Follow-up: apparently there is a sidebar. In my defense, on mobile, the sidebar is closed by default, and you have to click the tiny hamburger menu in the very bottom left of the screen. I did not see this.\n \nreply",
      "thank you (both) for the feedback. I added links to the documentation at the end of the landing page.\n \nreply",
      "It's linked on the GitHub front page, for some reason it's not in this link at all.\n \nreply",
      "Could this get a wrapper for building ncurses & sdl cores so that maybe one day lem could run right on top of ciel and a true lisp environment could emerge?  https://news.ycombinator.com/item?id=41357409\n \nreply",
      "I like to bring up Joker (https://github.com/candid82/joker) whenever there is a discussion of some lisp that is fast and convenient.Clojure syntax implemented in Go.I'm not affiliated I just think it's brilliant.CEIL's example in Joker:  (prn {:a 1 :b 2 :c 3})\n\nGist for downloading, installing and executing the above example: https://gist.github.com/lsh-0/f7df23777ef35a8cc3d85e1dcbf0eb...Executing script took 2.1s overall. Execution of example took 0.007s.\n \nreply",
      "Can you easily compile a binary?(I assume you just use standard CL methods?)> [CIEL custom REPL ] has a shell pass-through: try !ls (available in the ciel-user package)That's a kickass feature.\n \nreply"
    ],
    "link": "http://ciel-lang.org/",
    "first_paragraph": "CIEL Is an Extended Lisp\nGitHub\nShow me\n$ ./myscript.lisp\n\nYou need JavaScript to see the rest of the doc :( Just look at the GitHub repository. Cheers, EWW user maybe?\n",
    "summary": "<h1>CIEL: Because What We Really Needed Was More Lisp</h1>\n\nThe great minds of programming have bestowed upon us <em>CIEL</em>, another Lisp incarnation, because the couple of dozen already in existence just weren't satisfying the niche, unspoken needs of the three people who still get excited about parentheses. A GitHub link promises to show more, but only if you've sworn your undying loyalty to JavaScript first. Commenters oscillate between hailing it as the <i>next big thing</i> and not being able to find the documentation unless they stand on one foot and squint. Of course, everyone loves the project despite its invisibility to the naked eye on mobile devices\u2014because what says 'cutting-edge software' better than a UI you can't actually navigate?"
  },
  {
    "title": "Dinosaur Footprints on Either Side of the Atlantic Are Matching Sets (gizmodo.com)",
    "points": 13,
    "submitter": "nickthegreek",
    "submit_time": "2024-08-26T15:53:39",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=41358432",
    "comments": [
      "Previous discussion: https://news.ycombinator.com/item?id=41352656\n \nreply",
      "turns out Moses was a dinosaur\n \nreply"
    ],
    "link": "https://gizmodo.com/dinosaur-footprints-on-either-side-of-the-atlantic-are-matching-sets-2000490979",
    "first_paragraph": "",
    "summary": "Gizmodo unearths a pivotal article that revolutionizes our understanding by confirming that yes, dinosaurs had feet. Eager commenters on Hacker News quickly triangulate the truth, logically deducing that Moses must have been a Diplodocus because nothing screams \"parting the Red Sea\" like a giant reptilian tail. One luminary even suggests renaming the Atlantic Ocean to \"The Dinosaur Stomp Pool\" in honor of these matching footprints. The thread is a Jurassic-sized playground of paleontological puns and era-specific expertise, proving once again that the only thing vaster than an ocean is the depth of HN's collective dinosaur knowledge. \ud83e\udd95\ud83d\udc63"
  },
  {
    "title": "Using Fibonacci numbers to convert from miles to kilometers and vice versa (catonmat.net)",
    "points": 178,
    "submitter": "thunderbong",
    "submit_time": "2024-08-28T13:48:41",
    "num_comments": 71,
    "comments_url": "https://news.ycombinator.com/item?id=41379500",
    "comments": [
      "\"just express the original number as a sum of Fibonacci numbers\"This is aways possible, see Zeckendorf's theorem.https://en.m.wikipedia.org/wiki/Zeckendorf%27s_theorem\n \nreply",
      "As amusing as this is, I could not tell you offhand how to express 121 as a sum of fibonacci numbers. I mean I could figure it out, but I could also either multiply by 1.5 (121mi ~180km) or by 2/3 (121km ~80mi) and it would probably be a little bit faster than the fibonacci way.\n \nreply",
      "For 121, I ratio 130:80, then because I started ten under I subtract half that at the end. So about 75.\n \nreply",
      "As suggested elsewhere, this is more of a party trick then a practical approach to convert between km and miles.The Wikipedia entry does suggest a greedy algorithm (at each step choosing the largest fib number that fits) though, using that we have121 = 89 + 21 + 8 + 3\n \nreply",
      "Or by the definition that the ratio between consecutive fib numbers approaches Phi, just multiply by 1.618? Though at that point might as well just use the real conversion ratio.In other news, \u03c0\u00b2 \u2248 g.\n \nreply",
      "I find it interesting, but I question how practical it is for regular use.On a recent trip, I was driving in Canada in a car bought in the United States that did not have the metric values on the speedometer. But all of the posted speed limits were in values of 5 kph. Once you get that (roughly) 100 kph = 62 mph and 10 kph = 6 mph, there are some simple quick divisions or subtractions to convert the speed limit to close enough.- 50 kph = (100 kph) / 2 = 62 mph / 2 = 31 mph- 80 kph = 100 kph - 2 * 10 kph = 62 mph - 2 * 6 mph = 50 mph\n \nreply",
      "I use the fib conversions quite regularly.Both of your examples are actually easy Fibonacci numbers.50kph - 5 is a fib number, and the previous number is 3. I can go 50->30 without any math at all.And 80kph, well 8 is also a fib number. And the previous is 5. I can go 80->50 without any math at all.120kph is close to 13, so I know 120kph is somewhere below 80mph. I always divide any remainder by 2, so I would quick math my way to 120->75. That's accepatably close to the real answer of 74.4Same thing with 110kph. That's close to 13, so I'd quick math to 70 mph (130->80, remainder is 20, subtract half the remainder). That's acceptably close to the real answer of 68.2\n \nreply",
      "Instead of halving the remainder, you can do 3/5 - since it\u2019s always going to be a multiple of five - so 120kph is going to be more like 74mph because it\u2019s 10kph less than 130, and 10kph=25kph\u224823mph=6mphAlso, this doesn\u2019t only work with Fibonacci numbers, it works with any Lucas sequence, since they all tend to phi, so as well as 2-3-5-8-13 you can also use the higher numbers from 1-3-4-7-11 to fill in some gaps and help estimate.And as a bonus, it means if you know A kph is equal to B mph, you also know that A mph is ~equal to A+B kph.So given your result above of 120kph=74.4mph, I would estimate 120mph\u2248194kph. And it turns out it\u2019s actually 193.1koh, so\u2026 not far off.\n \nreply",
      "To mult by 1.6:  double it four times then divide by 10.  Eg. 55mph = 110, 220, 440, 880, 88.0 kphTo divde by 1.6, multiply by 10, then divide by 2 4x.  Eg\n: 200 kph, 2000, 1000, 500, 250, 125 mph\n \nreply",
      "I always just use either 6/10 or 2/3, depending on which one is easiest to do in my head.Yes, this means both 90 and 100 km/h both covert to 60mph. Close enough!\n \nreply"
    ],
    "link": "https://catonmat.net/fibonacci-miles-kilometers",
    "first_paragraph": "I recently learned an interesting fact about Fibonacci numbers while watching a random number theory video on YouTube. Fibonacci numbers can be used to approximately convert from miles to kilometers and back.Here is how.Take two consecutive Fibonacci numbers, for example 5 and 8.And you're done converting. No kidding \u2013 there are 8 kilometers in 5 miles. To convert back just read the result from the other end \u2013 there are 5 miles in 8 km!Another example.Let's take two consecutive Fibonacci numbers 21 and 34. What this tells us is that there are approximately 34 km in 21 miles and vice versa. (The exact answer is 33.79 km.)Mind = blown. Completely.But that's not all \u2013 if you need to convert a number that is not a Fibonacci number, just express the original number as a sum of Fibonacci numbers and do the conversion for each Fibonacci number separately. For example, how many kilometers are there in 100 miles?Number 100 can be expressed as a sum of Fibonacci numbers 89 + 8 + 3.Now, the Fibon",
    "summary": "At <em>catonmat.net</em>, mathematical innovation meets mid-life crisis as someone discovers the groundbreaking idea that Fibonacci numbers can approximate the conversion from miles to kilometers. Watch in awe as basic arithmetic becomes a convoluted mess of Fibonacci sequences, because why multiply by 1.6 when you can flex your number theory kung fu in everyday situations? Comments range from a practical \u201cjust multiply by 1.6\u201d to an overly enthusiastic math fan plotting road speeds using esoteric sequences better suited to a Dan Brown novel. Because who doesn\u2019t need a little more complexity while trying to figure out if they're speeding in a foreign country? \ud83d\ude44\ud83e\udd13"
  },
  {
    "title": "To Nerves from Elixir (underjord.io)",
    "points": 59,
    "submitter": "lawik",
    "submit_time": "2024-08-30T20:05:39",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=41403971",
    "comments": [
      "what piqued my interest: nerves boots with only barebones linux and the otp/beam vm, effectively turning elixir into the embedded os [0][0] https://wiki.alopex.li/NervesNotes\n \nreply",
      "What kinds of cool things are people doing with this?\n \nreply",
      "I once built a firmware for the Pimoroni Keybow with it: https://xn--gckvb8fzb.com/projects/kiwi/\n \nreply",
      "Not sure if they still do, but farm.bot was using Nerves.\n \nreply",
      "The jacked up spacing in the config/target.exs code block is preventing me from moving on in the article - my eyes!\n \nreply"
    ],
    "link": "https://underjord.io/to-nerves-from-elixir.html",
    "first_paragraph": "\n            Underjord is a tiny, wholesome team doing Elixir consulting and contract work. If\n            you\n            like\n            the writing you should really try the code. See our services for more\n            information.\n        I adore Nerves. I recently joined the core team. And I\u2019ll be doing my best to help people get along with this lovely way to co-mingle hardware and massively concurrent reliable software.Assuming you have a comfortable Elixir & Erlang installed, preferrably the most recent. Most conveniently through asdf/mise, but I don\u2019t judge. Instructions are lifted from the official docs but I will try to keep it leaner as I assume you are comfortable with Elixir.Install deps for your OS:Have a Raspberry Pi computer (not the Picos, those are microcontrollers), with SD-card, available. It will assume a Raspberry Pi Zero, ie. using rpi0 for referring to the target system. You can replace that in any command with another supported system:The mix burn should prompt",
    "summary": "Underjord, a *tiny* yet *wholesome* troupe of Elixir fanatics, graces the world with their revelation: hardware meets software in a matrimony only possible through the witchcraft of Nerves. If the article piqued your interest, beware\u2014commenters wielding URLs like digital Excaliburs are all too eager to showcase their pedestrian projects. Meanwhile, one soul laments over jarring whitespace in code samples as if it were a life-altering typo in the Dead Sea Scrolls. \ud83e\udd13 Join in the frenzy where keystrokes are more valued than sanity!"
  },
  {
    "title": "Jerry (YC S17) Is Hiring Lead Product (New Product, B2B GenAI Platform) (ashbyhq.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2024-08-31T01:00:42",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://jobs.ashbyhq.com/Jerry/d972d5ea-c671-49a9-b964-5fe829f075cf",
    "first_paragraph": "",
    "summary": "At Jerry (YC S17), a company nobody heard of until now, someone accidentally approved a budget for a \"Lead Product\" to manage a \"New Product\" for a \"B2B GenAI Platform.\" Presumably, this new AI will automate middle management and send calendar invites, revolutionizing business by adding yet more buzzwords to email headers. Over in the comment section, the usual suspects argue violently over which JavaScript framework the new product will ignore in favor of using something trendy. One brave soul attempts to suggest that maybe, just maybe, the new AI - whatever it does - should sort of work sometimes, but is immediately shouted down by chants of \"MVP!\" and cries for more blockchain."
  },
  {
    "title": "AnandTech Farewell (anandtech.com)",
    "points": 2279,
    "submitter": "janice1999",
    "submit_time": "2024-08-30T12:05:23",
    "num_comments": 449,
    "comments_url": "https://news.ycombinator.com/item?id=41399872",
    "comments": [
      "> Finally, I\u2019d like to end this piece with a comment on the Cable TV-ification of the web. A core belief that Anand and I have held dear for years, and is still on our About page to this day, is AnandTech\u2019s rebuke of sensationalism, link baiting, and the path to shallow 10-o'clock-news reporting. It has been our mission over the past 27 years to inform and educate our readers by providing high-quality contentThat\u2019s the core of it. And too bad they\u2019re off. Finding a news outlet that isn\u2019t \u201ctweeting\u201d an article and isn\u2019t a blog post on HN was great. And while they mention Tom\u2019s hardware. It always felt (to me) less verbose where I needed it.Fair well.\n \nreply",
      "Google captured the web with their search product. Then they monopolised it with Adsense.\n \nreply",
      "And absolutely did not optimize for returning quality information.\n \nreply",
      "Tangential - your last line made me think about what \"Fare well\" means. Weird that I come across it so often, but never stopped to think what it means. :)\n \nreply",
      "> Tangential - your last line made me think about what \"Fare well\" means.Fare is unrelated to fair:> From Middle English farewel, from fare wel! (and the variants with the personal pronoun \"fare ye well\" and \"fare you well\" used in the Renaissance), an imperative expression, possibly further derived from Old English far wel!, equivalent to fare (\u201cto fare, travel, journey\u201d) +\u200e well.** https://en.wiktionary.org/wiki/farewell#Etymology* https://en.wiktionary.org/wiki/fareSo to say \"farewell\" to someones is \"have a good journey (in life?)\".\n \nreply",
      "In German there's a similar word, \"fahren\", which means driving or traveling. In Dutch the word \"varen\" mean to sail or in an older sense of the word \"to move\".I can only assume, but considering the Dutch \"vaarwel\" is so close to English, I'm going to guess it means \"Go well\" - or more poetically when speaking of one's path in life: may fate treat you well.\n \nreply",
      "The Dutch word \"welvarend\" (literally \"well-sailing\") translates to \"prosperous\" in English. So \"vaarwel\" or \"farewell\" is kind of a medieval way of saying \"live long and prosper\". :-)\n \nreply",
      "You just gave me jamais vu.\n \nreply",
      "\u201cWe dont play silly cheap web traffic games\u201d [proceeds to pointlessly split every article across 10 pages]\n \nreply",
      "farewell*\n \nreply"
    ],
    "link": "https://www.anandtech.com/show/21542/end-of-the-road-an-anandtech-farewell",
    "first_paragraph": "It is with great sadness that I find myself penning the hardest news post I\u2019ve ever needed to write here at AnandTech. After over 27 years of covering the wide \u2013 and wild \u2013 word of computing hardware, today is AnandTech\u2019s final day of publication.For better or worse, we\u2019ve reached the end of a long journey \u2013 one that started with a review of an AMD processor, and has ended with the review of an AMD processor. It\u2019s fittingly poetic, but it is also a testament to the fact that we\u2019ve spent the last 27 years doing what we love, covering the chips that are the lifeblood of the computing industry.A lot of things have changed in the last quarter-century \u2013 in 1997 NVIDIA had yet to even coin the term \u201cGPU\u201d \u2013 and we\u2019ve been fortunate to watch the world of hardware continue to evolve over the time period. We\u2019ve gone from boxy desktop computers and laptops that today we\u2019d charitably classify as portable desktops, to pocket computers where even the cheapest budget device puts the fastest PC of 199",
    "summary": "**AnandTech Throws in the Towel: A Tale of AMD Beginnings and Endings**\n\nIn what could be mistaken for a tragic Silicon Valley opera, AnandTech proclaims its *heartbreaking* demise after 27 years of what we'll call \"innovative nostalgia\". Yes, from bulky beige boxes to AMD's latest silicon slices, they've churned out content for the kind of readers who still brag about installing Linux on a toaster. Commenters, in a dazzling display of obliviousness, swung between pseudo-philosophical rants about the etymology of \"Farewell\" \ud83e\udd37\u200d\u2642\ufe0f and lamenting the 'dystopian decline' into clickbait \u2013 blissfully unaware that their beloved shrine was apparently just another tech tabloid in archaic disguise. And oh, the irony of complaining about multi-page articles in their swansong of comments - truly, an ode to missing the point."
  },
  {
    "title": "Our slowly growing Unix monoculture (utcc.utoronto.ca)",
    "points": 34,
    "submitter": "matt_d",
    "submit_time": "2024-08-30T21:33:16",
    "num_comments": 39,
    "comments_url": "https://news.ycombinator.com/item?id=41404704",
    "comments": [
      "As I read this, my homelab toilet servers in the next room are running x86 64-bit Ubuntu. My Framework 16 laptop is running x86 64-bit Ubuntu. My RPi 5 is running 64-bit Ubuntu (though that one is ARM). I used to have half a dozen dual-boot Linux distros on my fun laptop, and now it's just Ubuntu. I know those aren't the same as having other forms of Unix, but I think it echoes that even within the Linux ecosystem, Ubuntu has become the de-facto standard for a lot of people.I have never been a fan of CentOS, and SunOS was so long ago I barely remember it, and I've never tried FreeBSD, but I do want the FOSS-OS ecosystem to thrive and not collapse into Canonical alone (especially given that I don't entirely love some of their recent moves).\n \nreply",
      "I'm wondering if/when this will extend to dev machines at work.  Macs seem very firmly entrenched but, IMHO, the experience isn't that great.\n \nreply",
      "Why not Debian?\n \nreply",
      "> homelab toilet servers....go on?\n \nreply",
      "It's pretty self-explanatory?https://i.imgur.com/QqjsPge.jpg\n \nreply",
      "I was expecting like \"terrible old server that I refer to as toilet because it's terrible\" but this is so much better. Bravo.\n \nreply",
      "\u2026did you need that sign to be custom printed?\n \nreply",
      "I actually got it as a Christmas present from my step-mom who runs a print shop. :D\n \nreply",
      "...who let's a cat in their data center!?  and where did the mouse go!?\n \nreply",
      "\"Mouse? Where we're going, we don't need mice.\"\n \nreply"
    ],
    "link": "https://utcc.utoronto.ca/%7Ecks/space/blog/sysadmin/OurGrowingUnixMonoculture",
    "first_paragraph": "",
    "summary": "In this week's episode of \"Why Am I Still Using Anything But Ubuntu?\" we explore the thrilling universe of a commenter's tech menagerie, featuring the *exciting* lineup of Ubuntu-only systems. Watch in awe as they accidentally reveal the crushing homogeneity of their server setup, inspiring a riveting discussion among others who might dare use Macs or (gasp!) Debian. Meanwhile, a wildcard commenter introduces the concept of \"homelab toilet servers,\" proving that not all heroes wear capes; some just need a sign from their step-mom's print shop. Will Ubuntu conquer all, or will a lone, wild Mac user hold out in the wild? Stay tuned for more tales from the monoculture frontier. \ud83d\ude31\ud83d\udebd\ud83d\udcbb"
  },
  {
    "title": "500 Python Interpreters (izzys.casa)",
    "points": 81,
    "submitter": "SAHChandler",
    "submit_time": "2024-08-30T18:26:46",
    "num_comments": 13,
    "comments_url": "https://news.ycombinator.com/item?id=41403286",
    "comments": [
      "When they say per interpreter GIL in PEP 684, is that per thread?  I wasn't aware of multiple interpreters in one process.\n \nreply",
      "Afaik, you could have multiple CPython interpreters per process before, but the GIL was global to the address space, not a per interpreter instance. I believe the GIL work also put interpreter state behind a single struct instead of a handful of global variables.This could be totes wrong, all from memory, too tired to fact check.\n \nreply",
      "These were two separate and mostly unrelated PEPs but otherwise that's correct.\n \nreply",
      "Thanks for corroborating, I'll have to trust you.Putting interpreter state behind a struct allows for multiple CPython instances per address space and each can no run on their own thread independently, they all get their own GI(L) lock. These interpreter instances would still have their own Global to This interpreter Lock, but not a Global lock for all CPython interpreters running in a process (like it was before with interpreter state in globals).Unrelated but complementary. We could remove the GIL, making Python multithreaded, but if interpreter state was still in a handful globals, you could have only one interpreter per process.Again, could be totes wrong.\n \nreply",
      "No not per thread. Each interpreter is capable of spawning threads, all of which share that interpreter's gil\n \nreply",
      "> \"No matter what happens there is going to be a lock occurring. No two PyThreadStates can execute Python bytecode at the same time. However, they can execute multiple C calls at the same time which is why for long running pure C operations extension and embedding developers are encouraged to release the GIL temporarily.\"Very exciting!  I wonder what the first set of motivating applications are and what kind of performance gains are they expecting.\n \nreply",
      "I was hoping for it to be an HTTP status code.\n \nreply",
      "I'm lo0king forward to it, but debugging this stuff is going to be another level of hard.\n \nreply",
      "You posted this 11 days ago and it's been posted by two other people in the interim. (Why is this version of the post more popular?)\n \nreply",
      "Sometimes articles just don't get traction and then they're invited to resubmit (by dang, the moderator). Since the submitter submitted it twice, that was probably what happened here.As to why it's \"more popular\", I guess you mean is getting more upvotes, that's part of the trick with submissions. Post it on a slow Friday work day before a holiday and you'll get more clicks than some other days or times.\n \nreply"
    ],
    "link": "https://izzys.casa/2024/08/463-python-interpreters/",
    "first_paragraph": "",
    "summary": "In the technicolor dream world of <i>500 Python Interpreters</i>, hobbyist programmers gather to chew on the latest, incomprehensible change to Python\u2019s Global Interpreter Lock (GIL) that absolutely no one was asking for. \ud83d\udca4 As commenters bravely battle the fog of their own confusion, one hero dares to muse if this arcane update could be an HTTP status code, echoing the silent prayers of developers wishing for more straightforward updates. \ud83d\ude4f Meanwhile, others predict the debugging nightmares on the horizon, proving that masochism is alive and well in the Python community. At this rate, the next update might just introduce a Global Confusion Lock, sparing us all from understanding anything ever again. \ud83d\udc0d\ud83d\udc94"
  },
  {
    "title": "Lem: Emacs-like editor written in Common Lisp (lem-project.github.io)",
    "points": 176,
    "submitter": "amarsahinovic",
    "submit_time": "2024-08-26T14:22:38",
    "num_comments": 41,
    "comments_url": "https://news.ycombinator.com/item?id=41357409",
    "comments": [
      "Has anyone used this? I was just thinking the other day that it would be nice to have an emacs-like editor written in such a way that it made performance and parallelism easier, especially around multithreading.A real killer feature would be some kind of emacs-lisp compatibility layer so that you could load existing third-party emacs modules, but I imagine the complexity of that is so off the charts that it would be unrealistic.Has anyone successfully packaged it for NixOS? I see this aborted attempt here: https://github.com/NixOS/nixpkgs/issues/250777 (linked from https://github.com/lem-project/lem/issues/890). If not, I guess I might just try patching the binaries rather than trying to build it from scratch, since I don't have any experience building common lisp projects in nix.\n \nreply",
      ">Has anyone used this?I have, it's awesome.  There are some rough edges and some niceties/third party packages from emacs that I missed, so I ended up going back, but lem is very promising.\n \nreply",
      "> niceties/third party packages from emacs that I missedWas it magit?\n \nreply",
      "Lem has Legit. While missing some features, it works well enough for the daily add/stage/commit loop that makes up 90% of my git commands. It also uses less git commands so it's a fair bit snappier than Magit on large repos.I can see the lack of org-mode being a dealbreaker for some, but I personally use markdown for my notes/docs so no issue there.\n \nreply",
      "It\u2019s always magit\n \nreply",
      "> A real killer feature would be some kind of emacs-lisp compatibility layer so that you could load existing third-party emacs modules, but I imagine the complexity of that is so off the charts that it would be unrealistic.Yeah while completely unrealistic some way to make interfacing with emacs packages would be nice.There seems to be a magit like interface in the works: https://lisp-journey.gitlab.io/blog/oh-no-i-started-a-magit-...\n \nreply",
      "Yes I'm waiting for a nixos package. I have used it a bit through the Docker image and it's super cool. I can see it succeeding emacs. Seems like it's even more hackable than the latter, since it's all written in Common Lisp (there's no C core).\n \nreply",
      "Emacs is pretty snappy these days, what kind of performance problems are you seeing with it?\n \nreply",
      "Huh?I (used to) use it almost exclusively with eglot lsp to python language server (Jedi I think). I run emacsfoacosx 29.2 and now .3. And I\u2019ve used it since 1996 on emacs 18 on a b/w sun workstation.But most recently on the last 2020 intel MacBook Pro.The cursor moving speed through a source file is atrocious. Maybe 3 - 4 lines per second vertical and similarly horizontal.The shell just freezes on long lines and forget about font lock for multi MB json.All of these tasks would be hard a decade ago but now aren\u2019t even table stakes.It just /feels/ sluggish.I reluctantly just gave up. It was fast way back then but I think workloads have changed. I tried zed for a bit but have now reluctantly gone to pycharm CE. If you accept the different windowing metaphor and add bindings for C-a and C-e and friends (some are standard) it\u2019s not bad. And never sluggish (same hardware).I love emacs but for my outlandish workload of python programming and wrangling multi MB text output it just doesn\u2019t perform.I speculate it isn\u2019t straight line speed but threading that is hurting perceived latency.\n \nreply",
      "I use emacs every day, with a minimal config, and would never describe it as snappy.  The entire thing is single threaded so the UI locks up at the slightest provocation, like for example when firing network requests whilst packages are updating.\n \nreply"
    ],
    "link": "https://lem-project.github.io/#",
    "first_paragraph": "\n\nAfter installing lem, you can start developing in Common Lisp at once.In addition, many languages are supported with Lem\u2019s built-in LSP support.If you come from Emacs or Vim, you will feel right at home.It is an established fact that John McCarthy shared alien tech with the world in 1958 when he introduced us to Lisp. We continue that great tradition.Lem is written and extensible in Common Lisp.Since version 2.0, a GUI version is also available.It brings graphics and mouse support, as well as games and over 180\ncolour themes.Start developing on Lisp at once.Full-featured REPL and interactive debugger, with Paredit and a third-party Pareto (lispy-mode) mode.Open a tree view of the current project,use project-aware commands.Terminal integration, multiple cursors, interactive grep, directory mode, tabs, Git interface, keyboard macros,and support for:C, Scheme, Go, JavaScript, TypeScript, Python, Rust, Elixir, Haskell, Java, Nim, Dart, OCaml, Scala, Swift, Lua, shell, asmMarkdown, ASCII,",
    "summary": "**Lem: A Lisp odyssey for the Emacs-weary magicians**\n\nIn another thrilling twist of the technosphere, the Lisp world gifts us <em>Lem</em>, an editor so desperately clinging to relevance that it hopes the spirit of John McCarthy will shepherd lost Vim wizards and Emacs elders into its comforting yet arcane embrace. Equipped with an alleged 180 color themes and \"games\" (because we obviously expect our text editors to double as retro consoles), Lem promises to soup up your coding sessions with the very tech once rumored to be alien. Meanwhile, the comment section throbs with detached nostalgia and the faint aroma of desperation, as brave souls mingle hopes of Emacs-lisp compatibility with chuckles about how \"snappy\" Emacs has either become or failed to be\u2014depending on which side of the Lem you butter. Can Lem truly replace Emacs, or will it be yet another altar for the cult of parentheses? Only time (and perhaps a few UI lockups) will tell. \ud83c\udfae\ud83d\udcbb"
  },
  {
    "title": "Three Critical Questions to Turn the Table During Technical Interviews (bellmar.medium.com)",
    "points": 26,
    "submitter": "mbellotti",
    "submit_time": "2024-08-30T20:25:14",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=41404117",
    "comments": [
      "Summary: \"Create an account to read the full story.\"\n \nreply",
      "Insightful!\n \nreply",
      "Not sure the author realized this, but there's an interesting contradiction here.> In hiring, we standardize questions to help mitigate bias and make more accurate comparisons across a group of candidates.> The people on the ground, close to the problem are often your best bet, but organizations find it difficult to handle anything they can\u2019t standardize and normalize.Standardizing is more fair, but at the cost (or benefit) of minimizing interesting outcomes.\n \nreply",
      "https://archive.is/aCVkR\n \nreply",
      "https://archive.is/aCVkR\n \nreply",
      "These are ok generic questions, but not great. And I would encourage people to do learn as much as possible about the org/team they are interviewing for. If there's not much public info, then this is where you ask the questions to find out if this is work you're going to enjoy or if you're gonna end up in another round of interviews in 6 months.\n \nreply",
      "Interviewers HATE him.\n \nreply",
      "Great suggestions\n \nreply",
      "> In every round, the interviewer should leave with the impression that you answered their questions as honestly as possible because you\u2019re looking for the right fit, not just a job.This is precisely what I despise about \"job interviews\". What you ask in the \"Do you have any questions?\" section of the interview should be irrelevant. I don't want to have to ask questions when I don't care about the answers just because that's what \"top candidates\" are supposed to do. What you're actually measuring is how much the person you're talking to is willing to read articles like this to come up with fake questions to ask as part of a fake performance so you'll hire them.\n \nreply",
      "FWIW at the big tech companies I\u2019ve worked at, that part of the interview does not have any impact on hiring decisions.\n \nreply"
    ],
    "link": "https://bellmar.medium.com/three-critical-questions-to-turn-the-table-during-technical-interviews-dd1594c278b8",
    "first_paragraph": "",
    "summary": "In an earth-shattering revelation on Medium, a hopeful tech guru unveils *Three Critical Questions to Turn the Table During Technical Interviews*, promising to crack the code to disrupt the interviewer-interviewee power dynamics quicker than you can say \"pair programming.\" The comment section, a marvelous wasteland of would-be Zuckerbergs, clashes between disillusionment over job interview theatrics and tactical dissections on how to outsmart an HR strategy that Googled \"how to handle smart alecks.\" One commenter channels the spirit of an insider trading scandal\u2014yet it\u2019s just about irrelevant interview questions, not stocks. \ud83d\udcbc\ud83d\ude44 Meanwhile, links to web archives float around, suggesting this ancient wisdom might just break the internet\u2014or at least a couple of brain cells. \ud83d\udcda\ud83d\udca5"
  },
  {
    "title": "Language and shell in Go with 92% test coverage and instant CI/CD [video] (youtube.com)",
    "points": 107,
    "submitter": "todsacerdoti",
    "submit_time": "2024-08-30T15:09:03",
    "num_comments": 29,
    "comments_url": "https://news.ycombinator.com/item?id=41401463",
    "comments": [
      "Hey, it's my talk, AMA :)If you're interested in Elvish, you may also be interested in the talk on its design - https://www.youtube.com/watch?v=wrl9foNXdgM\n \nreply",
      "Does elvish have a command history limit? Or is it configurable? I like a nearly infinite history.\n \nreply",
      "History entries are kept indefinitely.\n \nreply",
      "Do you have a link to a copy of the video with captions?  YouTube autogen doesn't cut it unfortunately.  Or perhaps a written-form version (slide deck + transcript)?What's in the 8% not covered by testing?\n \nreply",
      "I don't have a version with captions, sorry. You can find the slidedeck at https://github.com/elves/elvish/blob/master/website/slides/2...The remaining 8% mostly falls into the following categories:- Code that use OS functionalities that are cumbersome to mock in tests- Code paths that are triggered relatively rarely and I was simply too lazy to add tests for themNothing is impossible to cover, but for whatever reason it was too much work for me when I wrote the code.However, it's worth mentioning that I only settled on the transcript test pattern fairly recently, and if I were to rewrite or refactor some of the untested code today I would add tests for them, because the cost of adding tests has been lowered considerably. So Elvish's test coverage is still increasing slowly as the cost of testing decreases.\n \nreply",
      "Hey, thanks again for the talk and for answering my fork bomb question with a live demo!\n \nreply",
      "Thanks for your question and glad that you enjoyed it!\n \nreply",
      "I thought you handled the question really well. To be honest the whole talk was excellent. I'm gutted I missed it in person.\n \nreply",
      "There were a lot of aspects of this talk that I thought were really great.  The willingness to try something unscripted, diving into the code repo live (e.g. to show where fuzzing is used), and the discussions of the reasoning behind the design choices.  Great job @xiaq.  This really makes me want to try elvish out, and I usually am quite skeptical of new shells.\n \nreply",
      "Thanks! Glad that the talk is working as a marketing pitch for Elvish :)\n \nreply"
    ],
    "link": "https://www.youtube.com/watch?v=YzIiUjgnSsA",
    "first_paragraph": "",
    "summary": "In a valiant <em>attempt</em> to revolutionize the crowded market of shell languages with yet another entrant, an eager developer showcases \"Language and Shell in Go with 92% test coverage and instant CI/CD,\" a video that proliferates a whopping 92% assurance of bug-free boredom, leaving the tantalizing 8% as a hacker's playground. The comments section becomes an impromptu AMA, morphing from tech inquiry to fanbase creation as valiant keyboard warriors leave no repository link unclicked and no slide deck unseen in their quest to uncover the secrets of infinite command histories and OS-sensitive code paths. Offering the occasional pat-on-the-back and obligatory \"great job\" phrase, the discussion spirals into a feel-good echo chamber. Apparently, shouting into the void with technical jargon and half-baked demos now qualifies as <i>engaging content</i> on YouTube. \ud83e\udd13"
  },
  {
    "title": "Pocket-Godot: Starter Kit for mobile game development using Godot (github.com/lukky-nl)",
    "points": 68,
    "submitter": "console-log",
    "submit_time": "2024-08-30T14:45:02",
    "num_comments": 13,
    "comments_url": "https://news.ycombinator.com/item?id=41401237",
    "comments": [
      "Step up your README game... at least link to your Youtube and say more docs coming soon.\n \nreply",
      "To me it's strange when people write a starter kit for the engine that supports mobile platforms out of the box. Is mobile support there just for marketing...?\n \nreply",
      "It's not strange at all, you just have to investigate beyond the surface.\n \nreply",
      "As someone who has recently been doing Godot mobile development with Cursor as my IDE, this repo and the video in another comment gave me some quick thoughts.1. The main thing the library seems to offer is some pre-packaged libraries for mobile touch controls in GDScript, the custom language for the Godot game dev framework.2. I have recently come across similar problems to what that this library tries to solve.3. However, the way I went about solving it was basically using Claude and ChatGPT as my co-developers and asking them to answer coding questions. Here\u2019s a quick example prompt about coding GDScript similar to some of the attributes of the library: https://chatgpt.com/share/c8e713e3-0662-4c7d-8645-9a76b0c032...4. An optimistic perspective from all the above is that AI coding assistants can make it easier for people to develop libraries like this faster.5. A negative view would be that AI coding assistants mean people don\u2019t necessarily need \u201clibraries\u201d like this if an LLM can spit out the same results in a couple queries (rather than hunting around Github or the internet for pre-packaged code).\n \nreply",
      "> Here\u2019s a quick example promptYou almost certainly should not be updating the character.position both every frame (in _process) and in response to a MouseMotion event. That makes no sense.\n \nreply",
      "Yep, it is definitely worth clarifying that all the code has to be reviewed manually still. An aside is that the LLMs (both Claude and GPT) have common failure modes in using Godot 3 syntax instead of 4, etc.I meant to make the point that, having worked on mobile game dev recently, if the behavior I'm thinking of seems simple, my workflow instincts have become to go to LLMs first rather than Github. Very possible this is a bad reflex. Just one I've observed directly from my experience implementing similar functionality as the parent library.It looks like spywaregorilla's comment was downvoted at least once but I think it was making the valid point sarcastically that the idea of \"LLM generated code replacing commonly used libraries is a bad one.\" My original post was positing on whether this might be a future trend though.Also want to recognize the author of the library (prophesi) commented down below and definitely applaud their work in packaging and open sourcing their work plus making the tutorial video.\n \nreply",
      "> 5. A negative view would be that AI coding assistants mean people don\u2019t necessarily need \u201clibraries\u201d like this if an LLM can spit out the same results in a couple queries (rather than hunting around Github or the internet for pre-packaged code).Why use a library when the LLM can spit of a unique reimplementation of the library logic every time you need it?The future is terrifying.\n \nreply",
      "People like having standards, that's why. They make processes more simply repeatable and experience more easily transferrable\n \nreply",
      "An LLM that just replies with an executable?\n \nreply",
      "Maybe do a README at least before posting to HN? I compile Godot daily, but have been ignoring everything but GNU/Linux as a target platform. I don't see anything particularly unique about this being for mobile besides some pretty basic joypad and screendrag stuff.\n \nreply"
    ],
    "link": "https://github.com/lukky-nl/Pocket-Godot",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Starter Kit for mobile game development using Godot\n      \n        Starter Kit for mobile game development using Godot\n      ",
    "summary": "**Pocket-Godot: GitHub's Latest Mobile Game Dev Buzzkill**\n\nInternet heroes converge on a fresh GitHub repository, \"Pocket-Godot: Starter Kit for Mobile Game Development,\" where the ambitious can pretend that adding minimal mobile controls in GDScript makes them game developers. Comment-section wizards debate fiercely over the relevance of pre-packaged libraries when AI can clearly vomit out similar code on command. One genius suggests a README might help\u2014presumably because they're nostalgic for the good old days of actual documentation rather than the \"watch my YouTube\" era. Meanwhile, the echoes of \"Why use a library?\" resonate, blissfully ignorant that consistency is what keeps the digital world from devolving into an episode of <em>Black Mirror</em>."
  },
  {
    "title": "Expect \u00e2\u20ac\u201c Linux tool for automating interactive programs (die.net)",
    "points": 9,
    "submitter": "actinium226",
    "submit_time": "2024-08-30T23:17:38",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=41405364",
    "comments": [
      "I used expect a ton years ago, for AIX system janitoring. A lot of things required telnet\u2019ing into proto-ncurses mainframe applications and going through menus, typing and selecting stuff etc.The actual productive workflow is to do your task with autoexpect, and then refine the generated output:\nhttps://linux.die.net/man/1/autoexpect\n \nreply",
      "Many years ago I used the Perl version of Expect (https://metacpan.org/pod/Expect) to automate several workflows that wanted manual inputs.I thought that it was far better than the TCL Expect because I could also use other CPAN modules and have Perl's regular expressions to parse the system's output.Expect is a great tool to have in your toolkit.\n \nreply",
      "Arguably, Tcl can do GUIs much easily and can integrate C less awkwardly than Perl. Both have their use cases, at any rate, and more people should use Tcl, Perl and any version of Expect. Nowadays it falls into the category of tools that were once somewhat used, but now are obscure, like fold/fmt, nl, comm and pr.\n \nreply",
      "> Perl version of Expect (https://metacpan.org/pod/Expect)Still a great answer and latest update in March this year.\n \nreply",
      "claude.ai just suggested this as a tool for automating a workflow that involves ssh'ing into another machine and running some commands as sudo. I'm surprised I've never heard of this tool before. It works great for this scenario and the script can be used a reference to go in manually.\n \nreply",
      "Good example of an LLM suggesting something useful, even if just RTFM for forgotten tools.O\u2019Reilly put out a book about expect back in the old days (1995).I used expect a few times to automate remote admin, and even to scrape terminal-based applications.\n \nreply"
    ],
    "link": "https://linux.die.net/man/1/expect",
    "first_paragraph": "",
    "summary": "Welcome to the digital archeology dig where hopeful technologists rediscover the ancient tool of <em>Expect</em>, something that enchanted IT wizards back when high-speed internet meant a second phone line. In a thrilling twist, the echoes of Perl versus Tcl debates ripple through the void, reminding everyone why \"cross-platform\" is the tech equivalent of saying \"I know a shortcut\" on a family trip. Meanwhile, a lone AI, <em>claude.ai</em>, heroically slogs through forgotten manuals to school its human overlords on tools they've ignored in their quest to install yet another JavaScript framework. Ah, Expect, a relic now pulled out of the digital sarcophagus for one more automation hurrah, as commenters wax nostalgic, misty-eyed, ready to fight over whose obsolete tech is less irrelevant. \ud83e\uddd9\u200d\u2642\ufe0f\ud83d\udc68\u200d\ud83d\udcbb\u2728"
  },
  {
    "title": "Experience the Apollo 11 Lunar Landing (firstmenonthemoon.com)",
    "points": 150,
    "submitter": "marvinborner",
    "submit_time": "2024-08-30T13:52:46",
    "num_comments": 35,
    "comments_url": "https://news.ycombinator.com/item?id=41400723",
    "comments": [
      "Do yourself a favor and look up moon landing 4k on youtube. There\u2019s some amazing immersive stuff now: https://youtu.be/boFZ3cAws20There\u2019s also a few amazing first person videos from space walks on the ISS: https://youtu.be/AmrrSfiMxGAThe footage from Artemis is gonna be incredible.Also highly recommend this \u201care we going?\u201d Talk on engineering issues in Artemis: https://youtu.be/OoJsPvmFixU\nWhich is where I learned about this report from NASA called \u201cWhat Made Apollo a Success\u201d: https://ntrs.nasa.gov/api/citations/19720005243/downloads/19...\n \nreply",
      "Thanks!I liked reading this extensive accunt of all apollo missions and what each accomplished --A Man on the Moon: The Voyages of the Apollo Astronauts\nAndrew Chaikin\nhttps://www.amazon.in/Man-Moon-Voyages-Apollo-Astronauts/dp/...I wish there was an \"annotated verison\" or enthusiast discussion forum that corss-linked footage like this to the corresponding passages in the book so we can live it more fully\n \nreply",
      "The Apollo Lunar Surface Journal, and the accompanying Apollo Flight Journal, are transcripts of the audio recordings, with accompanying audio/video, and annotations from post mission briefings, and interviews with the astronauts in the 1990s. There is an overwhelming amount of detail. Dave Scott of Apollo 15 was a particularly enthusiastic participant in this, but not the only one. It really is a tremendous resource for Apollo. \nhttps://www.nasa.gov/history/alsj/\nhttps://www.nasa.gov/history/afj/\n \nreply",
      "I would like to add that everyone should check the incredible documentary \"For All Mankind\" scored by Brian Eno.\n \nreply",
      "> amazing [...] space walksThe upcoming Polaris Dawn spacewalk will be live streamed. Its cameras were said to be a priority. It's on day 3. Launch is currently waiting on reentry weather.\n \nreply",
      "Another chance to recommend a book that I learnt about from HN: I highly recommend the book, Sunburst and Luminary; http://www.sunburstandluminary.com/SLhome.htmlA technical pleasure and also very good glimpse into the Apollo team - working together, to land on the moon. It is a fun easy read, written by the fellow in charge of programming the guidance computer on the lunar lander. It is also a great snapshot of that time in history, the excitement of Apollo, and with the frustration of the Vietnam war going on, some protests, etc. Just a hint - the main programmer, was an English major, and his use of the right words, were a key factor in the success of of creating an efficient and effective computer language\n \nreply",
      "Awesome to see this. One of my favorite songs to listen to that can get a pumped up feeling is Go! by Public Service Broadcasting where they use the voices from here in the song. I knew the source was Apollo landing, and it's cool to listen to the words from their origination.[0] https://www.youtube.com/watch?v=BHIo6qwJarI\n \nreply",
      "Gives me the chills, sooo good.\n \nreply",
      "I love the calm communications. The feeling of everything possible thought out.Regarding moon landing videos, I also enjoyed the \"story\" of the computer on board  which is told in this great presentation [1]: Light Years Ahead | The 1969 Apollo Guidance Computer by Robert Wills. Definitely worth a watch if you fancy the moon landing.[1]: https://www.youtube.com/watch?v=B1J2RMorJXM\n \nreply",
      "That was a very good presentation. Thanks for posting. I probably would never come across otherwise\n \nreply"
    ],
    "link": "https://www.firstmenonthemoon.com",
    "first_paragraph": "\n    In 1969, the entire world watched as three men\n    explored the unknown. Watch, listen, and relive the excitement of\n    the Apollo 11 lunar landing as experienced minute-by-minute by the courageous\n    crew of Apollo 11 and Mission Control.\n  \n    Are we Go for Powered Descent?\n  \n              Thamtech wants to make more sites like this. If you are interested, we'd\n              love to be able to email when we have something new to share.\n            ",
    "summary": "**Old News Repackaged for Internet Points**\n\nA website revives the thrill of 1969's Apollo 11 lunar landing because evidently, experiencing history in high-res textures and clickable timelines is the only way we modern humans can process achievement. Commenters rush to prove they too can Google exceptional space-related content, filling the void with URL dumps that masquerade as conversation. One brave soul mixes nostalgia with a book recommendation, doubtlessly assuming the rest of us can read. The iconic 'space vibe' soundtrack suggestion appears obligatory, completing the ritual summoning of the armchair astronaut club. \ud83d\ude80\ud83d\udca4"
  },
  {
    "title": "Architectural Effects on Maximum Dependency Lengths of Recurrent Neural Networks (arxiv.org)",
    "points": 14,
    "submitter": "PaulHoule",
    "submit_time": "2024-08-30T21:17:53",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://arxiv.org/abs/2408.11946",
    "first_paragraph": "The Accessibility Forum starts next week! Sign up and join us in September.arXiv's Accessibility Forum starts next month!Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n",
    "summary": "**Title: The Mirage of Clarity Through Neural Rehash**\n\nThe hallowed digital halls of arXiv echo once more with the thunderous keystrokes of tireless researchers desperate to prove the indomitable link between long architecturally-induced dependency lengths and recurrent neural network performance. Finally, a topic that eight indiscriminate readers and the author's mother care deeply about. Commenters, who definitely didn't read the paper, argue fervently about the ethical implications of neural networks, while one brave hero asks if this will improve his phone battery life. \ud83e\udd13 In this era of peak computational wonkery, who needs readability when one can drown in glorious, sanctimonious jargon? \ud83e\uddd0"
  },
  {
    "title": "UK researchers find Alzheimer's-like brain changes in long Covid patients (uky.edu)",
    "points": 79,
    "submitter": "amichail",
    "submit_time": "2024-08-30T21:38:08",
    "num_comments": 45,
    "comments_url": "https://news.ycombinator.com/item?id=41404748",
    "comments": [
      "It's quite possible that the causality goes the other direction, and a baseline population of brain disorders is being ascribed to the last notable thing that happened to them (which has also happened to ~ the entire population at this point).\n \nreply",
      "UK meaning the University of Kentucky, not the United Kingdom.\n \nreply",
      "Then the title is clickbait; without too much insult intended towards Kentucky.\n \nreply",
      "Why? Would this be more interesting if they were in the UK?\n \nreply",
      "Kind of, in the sense that it sounds like a global news headline, vs. 'University of Exeter researchers find [...]' published by exeter.ac.uk, on this globally read site.\n \nreply",
      "It's global news to me. Hello from Australia!Edit: Ah wait, I think I get what you mean. By \"global news\" you mean it's been deemed worthy of sharing to an international audience by media outlets, as opposed to a crowdsourcing news source like HN. Is that right?\n \nreply",
      "I mean when you write 'UK researchers find', especially to a global audience (which UoKentucky PR dept may not particularly have but HN does (Hello from the (the!) UK)) that it sounds more like the country UK than the.. no offence intended but not exactly world renowned university. (I've heard of Kentucky, probably my first time hearing of its university in its own right - though I might have assumed it had one.)\n \nreply",
      "It seems like a fairly mediocre institution, at least in terms of research output: https://www.nature.com/nature-index/institution-outputs/gene...Not entirely surprised we'd never heard of it.\n \nreply",
      "I feel like it would be trusted a little bit more if it was a study by the NHS from the UK rather than something from Kentucky.\n \nreply",
      "I was just reading on the BBC that people were having to go overseas for critical surgeries because the NHS so woefully incompetent that people were on many years long waiting list.  So maybe put \"NHS excellence\" on the shelf next to \"Empire\" as UK delusions that have long since passed.U of Kentucky is a pretty decent school, ~25k students with (from personal experience) excellent Civil Engineering and Chemistry schools, at least.\n \nreply"
    ],
    "link": "https://uknow.uky.edu/research/uk-researchers-find-alzheimer-s-brain-changes-long-covid-patients",
    "first_paragraph": "LEXINGTON, Ky (Aug. 30, 2024)\u00a0\u2014 New research from the University of Kentucky\u2019s\u00a0Sanders-Brown Center on Aging\u00a0shows compelling evidence that the cognitive impairments observed in long COVID patients share striking similarities with those seen in Alzheimer\u2019s disease and related dementias.\u00a0The study, published in\u00a0Alzheimer\u2019s & Dementia: The Journal of the Alzheimer\u2019s Association, highlights a potential commonality in brain disorders across these conditions that could pave the way for new avenues in research and treatment.The study was a global effort, funded by a multitude of grants from the U.S. National Institutes of Health, the Alzheimer\u2019s Association and international organizations. The project also brought together experts from various fields of neuroscience.\u00a0Researchers at the UK College of Medicine led the study, including Yang Jiang, Ph.D., professor in the Department of Behavioral Science; Chris Norris, Ph.D., professor in the Department of Pharmacology and Nutritional Sciences; ",
    "summary": "In an earth-shattering revelation from an academic power player, the University of Kentucky, researchers have declared *long COVID* is the new Alzheimer\u2019s. The global scientific community, in a desperate bid to sound profound, compared brain fuzziness from a two-year-old pandemic to a devastating neurological disease\u2014and funded it lavishly. Meanwhile, the Internet commentariat gleefully mix up \"UK researchers\" with visions of London fog, suggesting that anything from Kentucky is inherently suspect. \u201cOh, it\u2019s from *that* UK! Less crumpets, more basketball, and casserole,\" they scoff, overlooking the content to critique the source. Only the keenest point out that calling out global relevance from Kentucky might just stretch the term a bit too far. \ud83c\udf0d\ud83e\udd14"
  },
  {
    "title": "Libntruprime is a microlibrary for the Streamlined NTRU Prime cryptosyst (cr.yp.to)",
    "points": 7,
    "submitter": "zdw",
    "submit_time": "2024-08-26T03:43:47",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://libntruprime.cr.yp.to/",
    "first_paragraph": "libntruprime is a microlibrary for the\nStreamlined NTRU Prime\ncryptosystem.\nStreamlined NTRU Prime (sntrup) is a lattice-based cryptosystem with the following features:libntruprime has a very simple stateless API\nbased on the SUPERCOP API,\nwith wire-format inputs and outputs,\nproviding functions\nthat directly match the KEM operations provided by the sntrup specification,\nsuch as functionsfor the sntrup1277 KEM.Internally,\nlibntruprime includes implementations designed to work portably across CPUs,\nand implementations designed for higher performance\non Intel/AMD CPUs with AVX2 instructions.\nlibntruprime includes automatic run-time selection of implementations.libntruprime is intended to be\ncalled by larger multi-function libraries\n(such as traditional cryptographic libraries),\nincluding libraries in other languages via FFI.\nThe idea is that libntruprime takes responsibility\nfor the details of sntrup computation,\nincluding optimization, timing-attack protection, and (in ongoing work) ver",
    "summary": "In an utterly riveting display of \"innovation,\" some _bright sparks_ have unleashed <em>libntruprime</em> upon the world. At last! A \"microlibrary\" perfectly tailored for both rank amateurs dreaming of cryptographic fame and the three other people who know what \"Streamlined NTRU Prime\" even is. Comment sections blaze with armchair cryptographers zealously overestimating how their high school coding project somehow qualifies them to critique lattice-based cryptosystems. God forbid any of them actually try to implement it; rest assured, they'll keep arguing about its \uff02potential optimizations\uff02 under their rock. \ud83d\ude44"
  },
  {
    "title": "Regex Crossword (mathspp.com)",
    "points": 54,
    "submitter": "cab404",
    "submit_time": "2024-08-28T10:28:28",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=41378002",
    "comments": [
      "I'm surprised nobody's mentioned the Regex Crossword game site [0], it's shown up on HN several times [1][2] and has a fantastic user-submitted puzzle section (that includes the MIT Mystery Hunt puzzle [3]) and a puzzle builder.0: https://regexcrossword.com/1: https://news.ycombinator.com/from?site=regexcrossword.com2: Most discussed posting: https://news.ycombinator.com/item?id=86740393: https://regexcrossword.com/playerpuzzles/8cbea27f-c4c5-4d11-...\n \nreply",
      "> I'm surprised nobody's mentionedThere's a lot of these. An embarrassment of riches!\n \nreply",
      "I really love this kind of thing. I made one called 'redoku' a long long time ago. It generates random challenges. Try it here: https://padolsey.github.io/redoku/\n \nreply",
      "A good puzzle poses a problem for you to solve. A regex puzzle? now you have two problems to solve.\n \nreply",
      "This is a Mystery Hunt puzzle, so solving the obvious puzzle is only the first step of solving the puzzle. You will need to do something with the puzzle solution to somehow get a word or short phrase.I remember doing this one by hand over a decade ago. Fond memories.https://puzzles.mit.edu/\n \nreply",
      "Yes, the original is here: https://puzzles.mit.edu/2013/coinheist.com/rubik/a_regular_c...\n \nreply",
      "Edited - never mind, this is obviously random strings of characters.\n \nreply",
      "I'm going to have to print this one out lol. Very creative.\n \nreply",
      "I remember playing this in a browser. I'll try to find where.edit: https://jimbly.github.io/regex-crossword/\n \nreply",
      "oops there went my afternoon\n \nreply"
    ],
    "link": "https://mathspp.com/blog/problems/regex-crossword",
    "first_paragraph": "Can you solve this crossword where all hints are regular expressions?At EuroPython 2024 I watched a lightning talk about the art of puzzle solving.\nIn it, the speaker showed the regex crossword puzzle that you can see above, that I took from this URL.\nYou are supposed to fill the hexagonal grid with letters so that all of the regular expressions shown match.If you don't know regular expressions, the puzzle only uses a simple subset of the syntax:You can look this up and then you will be able to solve the challenge.\nYou can also use the site regex101 to help you check what each regular expression means.Give it some thought!In the spirit of the puzzle hunting community, I will not share my solved grid here.\nIf you need help, feel free to email me and we can talk it over.P.S. if I understood correctly, in the puzzle hunting community you're not supposed to just fill in the grid.\nIn some way, somehow, you are supposed to be able to extract an English word or phrase from that filled puzzle ",
    "summary": "**Regex Crosswords: Because Sudoku Was Too Mainstream**\n\nOnce again, the brilliance of using convoluted regex patterns in a *puzzle* has surfaced, plunging the few mortals who understand both regex and social interaction into excitement. One daring soul ventured from the safe confines of a Python conference to challenge us to fill hexagons with alphabets. Because, why make life simple when you can make it <em>absolutely agonizing</em> with a dash of regex? Commentators rejoice in nostalgia, with some boasting about obscure variations like 'redoku', while others seemingly ready to sacrifice their afternoon to decode patterns that were probably never meant to be understood by the average human. In the end, both the article and the comments serve as a delightful reminder that no matter how useless the challenge, you will find someone on the internet who has \"fond memories\" of suffering through it. \ud83d\ude02"
  },
  {
    "title": "Home Assistant Presence Simulation (github.com/slashback100)",
    "points": 100,
    "submitter": "edward",
    "submit_time": "2024-08-28T13:01:54",
    "num_comments": 69,
    "comments_url": "https://news.ycombinator.com/item?id=41379015",
    "comments": [
      "Just a note to anyone interested in trying out Home Assistant:It's amazing _but_ do NOT use a raspberry pi to run it. Save yourself a ton of headaches and buy a mini pc (there was a list of used mini pcs posted here yesterday from ebay). Also I recommend using HAOS (or whatever the \"we install and run the whole OS\" option is called) so that you can use things like plugins without messing around with docker. I love docker but trust me, life is easier on HAOS.I liked HA but felt like it wasn't really \"stable\". I used a Pi 3 for a while, then a Pi 4 decked out (highest ram, NVME storage, super nice case, etc) and still felt like it was unstable. I chalked this up to HA but then rolled the dice on a Beelink mini pc and it has been rock solid ever since. Also don't be misled by the lower price of the Pi, I paid more for my Pi 4 setup than the Beelink (or about the same).I blamed everything from the Zigbee/Z-wave dongles, to HAOS, to HA itself, etc but in the end it was RPi. The 4 was the last Pi I'll ever buy.EDIT: I was in a hurry and didn't add my normal disclaimer when I talk about the RPi's:Yes I know some of you have a Pi 1 that been running you entire life since it first came out and you think I'm full of crap. I've owned every Pi 1-4 and never been truly happy with them. I bought them \"raw\" and sourced all the parts myself, I bought high-end (at least in price) kits with everything included, I bought all official accessories (like power), they always were just that little bit unstable.It would work great for days/weeks then randomly not be reachable (wired or wireless). I spent just shy of $200 for my last \"builds\" which included a NVME drive (240G, lest you think this is where the cost was), RPi case, RPi NVME hat, RPi 4 8gb model, SD card, power, etc and the result was still instability. I don't know what to tell you. Maybe I'm a moron but my experience with them has not been great. That said I want to love them and I loved my RPi 1B even with all it's warts, a $35 \"credit card sized\" computer was awesome. Maybe I just don't want to tinker as much anymore and value stability.\n \nreply",
      "100% this, my rpi3 kept running out of ram running all the services I wanted on home assistant so I moved it to proxmox and use the roi+touchscreen as a dedicated web client for the interface nowBe careful with the beelinks though, I have one with a nice ryzen API that's basically useless because the USB gave out and it's a chicken and the egg problem trying to get Bluetooth on it.  Haven't gotten around to attempt manually configuring Bluetooth on the SSD yet (from another computer) or otherwise fixing those ports\n \nreply",
      "I've been running it for a year on a RPi 2, via WiFi, from a SD card *and* a Zigbee dongle, which is basically what everyone seems to say you should not do, and never had a single issue with it. I don't think these issues have anything to do with HA itself but rather the extensions people install on it.\n \nreply",
      "I think it also has to do with how many devices you have on it and how often they update state. I have 300+ IP devices and have to run it on a mini PC because RPi was too slow. No custom plugins or extensions, just a few basic integrations.\n \nreply",
      "I want to go the other way and say DO NOT use HAOS if you know anything about docker. If you have ANY experience working under linux/docker just don't bother with HAOS and save yourself the headache. You will have an incredibly better experience just running your HASS docker container by yourself.HAOS caused so many issues for me while it tried to set up the other containers (such as Node Red), specially during home assistant updates, and it also made the whole UI extremely confusing because it would \"redirect\" some things to HAOS while others would be done inside HASS itself. With it auto trying to manage the containers it was also never clear when things were still booting/loading or crash looping and when you had issues the extremely limited access HAOS gives you was painful to deal with.As with other personal anecdotes in this thread, it may not be relevant to you, but I'd share my own experience as well, as someone that has had HASS running for 6+ years now.\n \nreply",
      "i\u2019d recommend buying \u201chome assistant green\u201d, it\u2019s plug n play:https://www.home-assistant.io/green/\n \nreply",
      "Counterpoint: I've been running HAOS on an RPi 2 and 3 for several years without a single issue, and I do use a z-wave dongle but no Zigbee. I only do basic stuff with it (a few automations for my z-wave thermostat and switches, AdGuard Home), but it's been rock solid for me.I only had issues once, when I tried to run the Unifi Network Application addon. A RPi is not strong enough for that, but I just uninstalled it and moved on.\n \nreply",
      "HAOS is absolutely terrible when it faces filesystem corruption.  I faced this a few times when my HAOS image crashed.  You can't even get it to fsck on boot when it happens.  I think that's one big reason people on RPIs have issues.  The FS is on an SD card, SD cards are flakey, and there's no good rescue path when the FS has issues.I guess USB power is also historically not great on RPI.  I haven't played with them in a few years but I remember needing powered hubs.  That might explain issues with Zigbee and Z-wave dongles.  Note also the '700 series' z-wave dongles have a lot of issues.  You can update the firmware to fix some.  Mine's been flakey and I'm on the latest firmware from ~2 weeks ago that's supposed to fix all of that.I was running HAOS on VirtualBox, with the disk image on ZFS.  I switched to running docker out of the same ZFS filesystem and it's much faster and more reliable, notably I don't get random filesystem corruption.  Anecdote.  YMMV.\n \nreply",
      "I\u2019m not familiar with virtualbox, do you have any idea why HAOS on VB+ZFS was corrupting vs Docker+ZFS?\n \nreply",
      "I wasn't sure. I had some kernel panics that I didn't dig deeply into, and I would sometimes use the image outside the VM to fsck it when HAOS would subsequently not recover.\n \nreply"
    ],
    "link": "https://github.com/slashback100/presence_simulation",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Home Assistant Presence Simulation\n      Please \u2b50 this repo if you find it usefulThis Home Assistant component aim to provide a presence simulation in your home while you are away. It will turn on & off lights, switches, covers... based on your history.It will look in the DB for the states history of all the entities configured in the component for a period corresponding to a delta variable defined in the component.\nIt will apply to the entites the same state (and some attributes like brightness and rgb_color) as it was delta days ago, in order to simulate your presence.\nIf the service is running longer than the number of days defined as the delta, the component will simply be reset and start over, until the stop service is called.Supported entities domains:The history integration must be activated - which it is by default. The peri",
    "summary": "**Hobbyists Play God While Away From Home**: The GitHub repository for \"Home Assistant Presence Simulation\" promises to fool both burglars and your cat by randomly flicking your lights on and off, just like you would if you were neglecting your friendships to fiddle with overpriced smart home gear. Enthusiasts in the comments go to war over the hardware best suited to run their unstable life simulations, with tales of Raspberry Pi disasters spreading faster than their ability to type out \"NEVER AGAIN!!!\" A chorus of DIY veterans and newbies alike blend seamlessly into a rich tapestry of tech support horror stories, showing off how spending more money on gadgets somehow enables them to cling desperately to their diminishing sanity. **Key takeaway**: If your automated home requires more troubleshooting than your lasagna recipe, maybe, just maybe, you've missed the point of technology. \ud83e\udd16\ud83d\udca1\ud83d\udd27"
  }
]