[
  {
    "title": "So you think you know box shadows? (dgerrells.com)",
    "points": 483,
    "submitter": "yohannesk",
    "submit_time": "2024-07-21T12:38:39",
    "num_comments": 68,
    "comments_url": "https://news.ycombinator.com/item?id=41024664",
    "comments": [
      "This was awesome\n \nreply",
      "> However, using a transparent color significantly slowed down the number that can be drawn too which doesn't make as much sense to me. I'd imagine that with hardware today transparency should be somewhat free.That's because transparency limits how you can batch draws on the GPU. With opaque draws, you can use the depth buffer and draw in any order you like e.g. maximizing batching. With transparency, you need to draw things in the right order for blending to work (painters order).\n \nreply",
      "I think it's more complex than that. While web browsers do use GPU rendering, they're not game engines. They don't draw every single object on the screen every frame, that could easily cause lag on a large complex page.Chromium in particular tries to minimize the total number of layers. It renders each layer into a pixel map, then for each frame it composites all of the visible layers into the final image.That works really well in practice because you often have lots of layers that move around but don't actually change their pixels. So those don't need to be rendered (rasterized) every frame, just composited.If you have a bunch of box shadows without transparency, Chromium will rasterize the whole thing once as a single layer.If you have a bunch of box shadows with transparency, Chromium might create a separate layer for each one. That's probably suboptimal in this particular case, but imagine if your partially transparent box shadows had to also slide around the page independently.\n \nreply",
      "> They don't draw every single object on the screen every frame, that could easily cause lag on a large complex page.Games draw every single object on the screen every frame. They don't lag, quite the opposite in fact!\n \nreply",
      "Reverse-painter's-order beats painter's-order since it lets you skip fully-occluded objects:  Start with a buffer that's fully transparent (\u03b1=0.0)\n  for each face from front to back:\n    for each pixel of the face:\n      draw the pixel, blending 1.0-buffer.\u03b1 of the new pixel into whatever's already in the buffer\n      (if buffer.\u03b1 == 1.0 you can just skip it entirely, just like for depth buffering)\n  go back and double check your math relating to transparent objects behind other transparent objects\n\nThe tricky part is if you have faces that overlap in a cycle (can happen legitimately), or that penetrate each other (often avoidable if you think about it).\n \nreply",
      "The game engines I've dealt with separate opaque and transparent geometry.It is generally good to render opaque geometry back to front to reduce overdraw, but not going so far as sorting the objects. We would do stuff like render the hands first in an FPS or render the skybox last in most games.Now for the transparent layer: First occlusion is handled by the z-buffer as usual. If you render from front to back I assume you render to another buffer first and then composite to the framebuffer? If you render from back to front you don't need alpha in your framebuffer and can assume each rendered pixel is opaque, not needing that composite.There's also order independent transparency stuff though which IIRC does need another buffer, which requires a composite but then saves you having to sort the objects.\n \nreply",
      "GPUs also do not like overdraw, so it's generally good idea to avoid having many transparent elements on top of each other, its also the reason why drawing more triangles vs. transparent texture is generally better.\n \nreply",
      "The \"Ordering\" step doesn't really matter that much. You're usually doing a sort anyway prior to submitting the drawcall. What hurts is the overdraw. If you're doing opaque rendering, you get to render front to back, rendering only what actually appears on the final framebuffer. The number of pixels (after the depth pass) is proportional to the framebuffer. When you're doing transparent rendering you render back to front, and you have to render a tonne of the scene that will eventually be (partially) obscured by other random polys. We call that overdraw. The amount of pixels through the shader pipeline balloons to be proportional to the size of your mesh.If you're doing non-overlapping stuff, you'd actually expect (almost) no slowdown from transparency, since you'd have to touch every pixel once anyway, and the only thing that changed is the shader formula.\n \nreply",
      "Can't you mathematically work out how to change the colors/opacity to rearrange the job?\n \nreply",
      "Having that knowledge sounds just as expensive if the operations aren't commutative.\n \nreply"
    ],
    "link": "https://dgerrells.com/blog/how-not-to-use-box-shadows",
    "first_paragraph": "Box shadows. I love them.Four years ago I found out my m1 can render a stupid number of these bad boys and so I set out to see just how far you can push them and boy did I. If you are looking for a how to use box shadows to get the look of the latest UX trend, this is not the right article for you. But if you like some janky creativity, stay tuned.I want to share some of the worst possible things one can do with box shadows all on a single div. Things which shouldn't work at all yet somehow they do. But before getting into that, a question must be answered.What exactly is a box shadow?A box shadow is a kind of drop shadow. And a drop shadow is a kind of image filter that is very popular in graphic design due to how versatile it is at adding an approximation of depth to composition.The filter takes the raster of an image and shifts the pixels along the x and y axis. It will draw these pixels as a single color behind the source image. This gives an illusion of depth by dropping the outli",
    "summary": "**Tech Blogger Unravels the Sorcery of Box Shadows**\nIn a riveting display of unnecessary graphical excess, dgerrells.com plunges into the misunderstood art of abusing CSS box shadows, pushing the limits of both browser patience and design sensibility. \ud83c\udfa8\ud83e\udd26\u200d\u2642\ufe0f With an M1 chip and a reckless disregard for web performance, the author joyously shares how to cripple your site's loading time with janky effects on a single div. Meanwhile, commenters engage in a tragicomic display of techno-jargon, flexing their GPU knowledge to rationalize why their web pages look like a PowerPoint slide from 1998. No practical application here\u2014just geeky showboating and niche-ridden debate making the comments section an unparalleled spectator sport. \ud83c\udf7f\ud83d\udc7e High fives all around for making the simple complicated!"
  },
  {
    "title": "rr \u2013 record and replay debugger for C/C++ (rr-project.org)",
    "points": 317,
    "submitter": "levzettelin",
    "submit_time": "2024-07-21T08:54:13",
    "num_comments": 110,
    "comments_url": "https://news.ycombinator.com/item?id=41023547",
    "comments": [
      "GDBs built-in reverse debugging:   https://www.sourceware.org/gdb/wiki/ProcessRecord/TutorialI assume rr provides more features and flexibility. Anyway I want to mention that GDB itself can already reverse debug for some time now.\n \nreply",
      "If you want to mention this, then you very clearly haven't actually tried it. The implementation in GDB is more convenient than rr (you can start/stop recording at will), but it is also orders of magnitude less efficient. It's only usable for very small code snippets. Otherwise it takes effectively forever and/or runs out of resources.\n \nreply",
      "> runs out of resources\n\nRAM?  What kind of dev box runs out of RAM in 2024?  I built a 64GB RAM dev box during COVID-19 crisis.  I have never once come close to using all that RAM, even with a squillion Chrome tabs open.Still, thank you to share your first-hand experience.  Did you ask the GDB Dev team for any feedback on the slow performance?\n \nreply",
      "Uuh, any kind of dev box that requires more RAM than available? I promise you that storing that much data about the runtime can be really memory consumptive.\n \nreply",
      "rr predates the one in gdb if I am not mistaken\n \nreply",
      "rr was introduced in 2014 [1].gdb reverse debugging was introduced in 2009 [2].You can see a fairly comprehensive history of time travel debugging here [3].Not to say the built-in gdb reverse debugging was any good. It had (has?) like 1,000,000% overhead which is basically unusable. At least some implementations in the history that were introduced earlier only had ~1,000% overhead or less in general. Yes, a literal 1,000x overhead difference.[1] https://robert.ocallahan.org/2014/03/introducing-rr.html[2] https://www.sourceware.org/gdb/wiki/ReverseDebug[3] https://jakob.engbloms.se/archives/1564\n \nreply",
      "Actually the gdb implementation predates rr, but (as an rr maintainer) I have to say that it is vastly inferior to rr. It's about 1000x slower than rr, and can't record across system calls or multiple threads or processes. It's so limited it's really a different feature.\n \nreply",
      "I've used rr very sucessfully for reverse engineering a large code base using a break on variable change combined with reverse-continue. Took the time to extract critical logic way down.\n \nreply",
      "That sounds very interesting; Do you have a write-up on this that you are willing to share?\n \nreply",
      "This is the usual killer feature of something like rr. You debug, look at some variable: `p whatever`. You see that its value is wrong. You want to know where this wrong value came from, so you `watch -l whatever` and `rc`. Bam!\n \nreply"
    ],
    "link": "https://rr-project.org/",
    "first_paragraph": "Last updated Fri Oct 18 17:19\n\n\n      Start by using rr to record your application:\n      $ rr record /your/application --args\n...\nFAIL: oh no!\n\n      The entire execution, including the failure, was saved to disk.\n      That recording can now be debugged.\n      $ rr replay\nGNU gdb (GDB) ...\n...\n0x4cee2050 in _start () from /lib/ld-linux.so.2\n(gdb)\n\n      Remember, you're debugging the recorded trace\n      deterministically; not a live, nondeterministic\n      execution.  The replayed execution's address spaces, register\n      contents, syscall data etc are exactly the same in every run.\n    \n      Most of the common gdb commands can be used.\n      (gdb) break mozilla::dom::HTMLMediaElement::HTMLMediaElement\n...\n(gdb) continue\nContinuing.\n...\nBreakpoint 1, mozilla::dom::HTMLMediaElement::HTMLMediaElement (this=0x61362f70, aNodeInfo=...)\n...\n\n      If you need to restart the debugging session, for example\n      because you missed breaking on some critical execution point, no\n      proble",
    "summary": "**rr \u2013 the Time-Traveling Debugger You Didn\u2019t Ask For But Definitely Need**\n\nWelcome, brave souls, to the magical realm of <em>rr</em>, the unparalleled debugger that seeks to send you spinning back through your code as if you're a second-rate Doctor Who. Tools like this promise to save developers from their buggy nightmares, encapsulating all the pain of a crash in a neat little recording you can play over and over, because obviously, watching your code fail once isn\u2019t enough. \ud83d\udd04\ud83d\udca5\n\nIn the dust-filled corners of online forums, developers spar over the virtues of <em>rr</em> versus the ancient arts of GDB's reverse debugging. Some claims escalate so quickly you might think they're debugging the fabric of reality itself. \"My dev box never runs out of RAM!\" one chants, clutching their pearls and 64GB of ego, while another mutters darkly about overhead percentages like a warlock cursing in hex code. Debugger wars, because what else are you going to do at 3 AM?"
  },
  {
    "title": "Glisp: Graphical Lisp (glisp.app)",
    "points": 108,
    "submitter": "lioeters",
    "submit_time": "2024-07-21T16:34:18",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=41026214",
    "comments": [
      "Great project. I am mostly impressed that Glisp provides a great experience of reversely modifying code by dragging the ui.Personally, I really agree with the philosophy of code for design. I often feel that code is more useful than gui in many cases. I developed Glicol (https://glicol.org) for live composition and sound design so that I don't need to open DAW for music improvisation.  In addition, I have always thought that there should be a better way to make slides. I have tried revealjs and now use remark, but I hope there will be a simpler way to achieve programmatic specification like keynote magic move.Btw, I am also very curious about the philosophical comparison between Glisp and the LOGO language https://en.wikipedia.org/wiki/Logo_(programming_language)\n \nreply",
      "wow, <3 your livecoding language!\n \nreply",
      "this looks alot more like an SVG in s-expressions\n \nreply",
      "Reminds me of: https://docs.racket-lang.org/quick/index.html\n \nreply",
      "More info here, mostly in Japanese with auto-translate option:https://scrapbox.io/glisp/What is Glisp? https://scrapbox.io/glisp/Glisp%E3%81%A8%E3%81%AF%3F\n \nreply",
      "Very similar to https://100r.co/site/ronin.htmlHas anybody used both in anger?\n \nreply",
      "If not already taken, GRAphical liSP (grasp) would also have been a fun name!\n \nreply",
      "The project's GitHub page has a few more details about GLisp:https://github.com/baku89/glisp\n \nreply"
    ],
    "link": "https://glisp.app/commit:e7fbaae/",
    "first_paragraph": "",
    "summary": "In the latest round of mechanically reinventing the wheel, the internet stumbles upon <em>Glisp: Graphical Lisp</em>, an adventure in dragging UI elements around to pretend you're coding. Innovative! Or so says a developer who apparently just discovered that SVGs can be manipulated with Lisp-like syntax. Meanwhile, enthusiasts in the comments reinvent their own wheels, comparing everything from ancient LOGO languages to obscure live coding tools, while desperately trying to find philosophical depth in dragging shapes around a screen. \"Great project,\" cries one user, likely echoing their satisfaction in finding yet another way to avoid traditional software development. \ud83c\udfa8\ud83e\udd16"
  },
  {
    "title": "What is the significance of the character \"j\" at the end of a Roman Numeral? (2013) (genealogy.stackexchange.com)",
    "points": 405,
    "submitter": "kamaraju",
    "submit_time": "2024-07-21T05:31:59",
    "num_comments": 158,
    "comments_url": "https://news.ycombinator.com/item?id=41022653",
    "comments": [
      "The Dutch digraph ij originated from the same custom. Originally written ii, later ij, and pronounced as a long i (English \"ee\"), the sound later shifted to be similar to English \"eye\", see the Dutch names for the cities Berlijn and Parijs. Meanwhile, the long i sound is now written as ie. IJ is the only Dutch digraph that tends to be treated as a single letter and is capitalized as such. In education in the Netherlands it is taught as the 25th letter instead of y, which does not occur in native Dutch words, and in the phone book it used to be sorted together (mixed) with y. But since the advent of computers it is generally sorted as i followed by j. There are a few place names like Ysselsteyn where Y is pronounced as IJ.\n \nreply",
      "I'm pretty sure I was taught the letter y (I-grec) as part of the alfabet and not the ij (I'm Dutch as well). The other day I was surprised to see that an alfabet song that my kid was watching used the ij instead of the y. And I thought you were talking about IJsselstein, but saw there's indeed also Ysselsteyn, and they're not the same town (though pronounced the same). Interestingly we've then 3 ways to write the same sound (though y can also be pronounced as 'ee', e.g. Yvonne); y, ij, ei, oh, and I suppose 'ey' should be counted as well though that's not used in modern spelling. Cool\n \nreply",
      "My Mum is an Australian Yvonne and married my Dutch father Jan. When we spent a whole year in the Netherlands back in 1971, Dutch acquaintances would always pronounce her name something like Yuh-vonna, quite different to how in English it is said like Ee-vonn. (My Dad's name is pronounced like Yun of course)And yes as a 7 year old Aussie it was interesting learning that the digram \"ij\" was the 25th letter on the Dutch alphabet\n \nreply",
      "That's strange. Standard Dutch pronunciation of that name, transliterated back to English spelling, would be Ee-vonna.\n \nreply",
      "I know several Yvonne's and we'd all pronounce it Ee-vonna.\n \nreply",
      "One of the things that blew my mind when I took a few semesters of Dutch in college is that the language occasionally gets amended (or more precisely, the way it's taught in schools is amended, although after a generation or two of delay the effects are the same) to fix inconsistencies. I can't remember if clarifying 'ij' and 'y' was one of those, but I remember the professor telling us about how a while back people were upset when they updated the spelling of the word \"pannenkoek\" (which I think had previously been spelled \"pannekoek\"), which some people apparently still haven't gotten over after almost three decades[1].I wish there were enough willpower for something similar for English, but it's probably too late to reach any sort of compromise on whether to use a \"u\" in words like \"color\"/\"colour\".[1]: https://dutchreview.com/news/dutch-government-argue-over-spe...\n \nreply",
      "The French do something similar, as do the Germans.  They've had relatively little luck with substantial changes recently, though.  The 1990 French reforms were rather trivial.  For example. the placement of the diaeresis was shifted to the first vowel in some digraphs.  So \"aigu\u00eb\" (acute, sharp) is now \"aig\u00fce\" since it is two syllables, but the former spelling misleadingly hints at three syllables.  That one seems to have been well-accepted.  Many of the other reforms have been only partially accepted, or explicitly rejected by many speakers.   (I don't think I am ever going to get used to \"ognon\" for onion.)\n \nreply",
      "Well, I think the difference is that for Dutch, people are mostly colocated, i.e. share the same space and have a national curriculum to guide the use.For English, it's quite different because many countries list it as their official language but may have diverged spellings and meanings and there is no single body to direct the curriculum. The most notable is the US vs. British English and the u in colo(u)r is a mere spelling example. Consider surgery or elevator, which are bigger discrepancies. I remember from my school days, as a non-native speaker, these were much more troublesome and we had a special test just to check we could tell which is which in US and GB English.\n \nreply",
      "> For English, it's quite different because many countries list it as their official language but may have diverged spellings and meanings and there is no single body to direct the curriculum. The most notable is the USThe US doesn't have an official language, though most institutions operate primarily in English, and all US states that have one or more official languages include English on that list.\n \nreply",
      "Nor does the US have an official curriculum. In the 80s, there was a wide variation both between and within states as to what a student with a high school diploma might have been expected to know. When the state of Illinois increased the graduation requirement for high school students from 1 to 2 years of mathematics, my high school added a second-year general math class because too many students couldn\u2019t pass pre-algebra because fractions were beyond their ken. (The graduation requirement was subsequently amended such that no math below algebra could be counted for graduation and then later that students needed to have taken at least math up to the level of algebra and geometry because of districts stretching algebra I into a two-year sequence).\n \nreply"
    ],
    "link": "https://genealogy.stackexchange.com/questions/3748/what-is-the-significance-of-the-character-j-at-the-end-of-a-roman-numeral",
    "first_paragraph": "",
    "summary": "Genealogy enthusiasts and self-declared linguists collide in a spectacular display of extremely niche knowledge, scrutinizing the significance of the letter \"j\" in Roman numerals with all the intensity of a toddler spelling out their name for the first time. Commenters dive into an <i>exhilarating</i> exploration of the Dutch digraph 'ij', turning a simple typographical query into a full-blown cultural, historical, and phonetic odyssey \u2014 because why not complicate things? Amidst the excited albeit baffling discourse, a brave few attempt to connect these revelations to their personal anecdotes, <em>heroically</em> tying Jan's and Yvonne\u2019s mispronounced mishaps to the grander scheme of Dutch alphabetical reforms. Clearly, the path to understanding the enigma of the Roman numeral system is paved with digraphs, mispronunciations, and a sprinkle of existential despair over educational reforms. \ud83d\udcda\ud83d\udd0d"
  },
  {
    "title": "A brief history of Dell Unix (2008) (technologists.com)",
    "points": 81,
    "submitter": "fanf2",
    "submit_time": "2024-07-21T14:42:02",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=41025450",
    "comments": [
      "Does anyone know what happened to Jeremy Chatfield (mentioned in the article)?  He disappeared off the face of the earth around 2014, and I assumed may have passed away but I've not been able to find out.\n \nreply",
      "Quite plausible. Dell still sells lots of Linux machines which come with a slightly customized Ubuntu, but support is not very good.My employer bought me a $20k workstation a few years back. Hardware was 100% mainstream x86_64. It was expensive simply because it had a massive amount of ECC RAM and a big Xeon CPU. Anyway, it was pretty shocking to discover that the machine bootlooped straight out of the box.Easy to fix, just boot from a live USB and install another Linux distribution, which I was planning to do anyway, but quite disappointing for an expensive product from a manufacturer that supposedly supports Linux and sells tons of servers. Hopefully, as Microsoft looses some leverage, we can get good Linux support from other manufacturers.\n \nreply",
      "I think you might have replied to the wrong comment\n \nreply",
      "I didn\u2019t know Chatfield, but I knew Ron McDowell (also mentioned).Ron passed away in 2012. The last thing he worked on was FreeBSD\u2019s bsdconfig(8).\n \nreply",
      "I find people, though mostly US people, and yeah, his online activity drops off in late Nov 2014. You can easily find several of his presences, including on HN, under the handle jezchatfield.For whatever reason, he reminds me of edw519, who used to be quite well-known around these parts.I reached out to Jeremy's family members and linked to this thread. Will update if I hear back.\n \nreply",
      "Dells run freebsd just fine. I've managed probably 25 years of rackmount Dell by preference. Not that I don't hate iDrac and how they wantonly reprogram the SAS hba.\n \nreply",
      "> The business rationale for Dell UNIX was to sell Dell hardware. But the majority of the copies of Dell UNIX ended up running on other vendors\u2019 machines.I wonder if Microsoft threatened Dell with price hikes (or offered price decreases) for their software if they didn't push Dell Unix\n \nreply"
    ],
    "link": "https://notes.technologists.com/notes/2008/01/10/a-brief-history-of-dell-unix/",
    "first_paragraph": "https://technologists.com/[update December 2021: files for 86Box install at https://technologists.com/DellUnix2.2.1/\nupdate December 2020: Dell Unix on 86Box \u201cToday let me present Dell Unix more properly, with 1024\u00d7768, 256 colors video and proper networking using emulated VGA and NIC.\u201d\nupdate \u00a0March 2012: Antoni Sawicki has Dell SVR4 running\nunder Qemu/Bochs, and subsequently reports that he\u00a0has\nDell Unix \u201cworking correctly\u201d \u00a0under VirtualBox. CHS]\u201cDell UNIX? I didn\u2019t know there was such a thing.\u201dA couple of weeks ago I had my new XO with me for breakfast at a nearby bakery caf\u00e9.\u00a0Other patrons were\u00a0drawn to seeing an XO for the first time, including a Linux person from Dell. I mentioned Dell UNIX and we talked a little about the people who had worked on Dell UNIX. He expressed surprise that mention of Dell UNIX evokes the above quote so often and pointed out that Emacs source still has #ifdef for Dell UNIX.Quick Googling doesn\u2019t reveal useful history of Dell UNIX, so here\u2019s my version",
    "summary": "Title: Rediscovering the Lost City of Dell UNIX\n\nIn a thrilling display of digital archaeology, technologists.com offers a dizzying update on Dell UNIX, complete with 256 color display graphics that must have the ghost of Steve Jobs swirling in envy. As if spun from the fabric of ancient enchanted tape drives, a commenter heroically name-drops past coworkers in a bewitching attempt to summon the spirits of UNIX developers long gone. Meanwhile, others veer off into tangents about their own Linux misadventures, setting off a tragic comedic opera of support calls and misshipped hardware. True to the nature of tech forums, existential questions about long-lost forum acquaintances dominate the discourse, proving nothing fuels nostalgia quite like an obsolete UNIX version on misplaced hardware."
  },
  {
    "title": "Show HN: Shade/Bs \u2013 Modern Web UIs Without Node.js (masoftware.net)",
    "points": 5,
    "submitter": "mannders",
    "submit_time": "2024-07-21T23:28:01",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://ui.masoftware.net/",
    "first_paragraph": "shade/bs is a modern bootstrap\n\t\t\t\t\tcomponent theme,\n\t\t\t\t\twithout a dependency on javascript frameworks.\n\t\t\t\tIt's perfect for building reactive SPAs easily using \n\t\t\t\t\t\thypermedia,  or static sites that don't need bloated frameworks. More examples coming soon... John DoeProject UpdateThe project is on schedule and we have\n\t\t\t\t\tcompleted the first milestone successfully.Jane SmithMeeting ReminderDon't forget about the meeting scheduled for\n\t\t\t\t\ttomorrow at 10 AM.Robert BrownInvoice AttachedPlease find the attached invoice for the\n\t\t\t\t\tservices provided last month.Emily DavisClient FeedbackThe client has provided feedback on the recent\n\t\t\t\t\tdeliverables. Please review.Michael WilsonSchedule ChangeThere has been a change in the project\n\t\t\t\t\tschedule. Check the updated timeline.Sarah JohnsonWeekly ReportThe weekly report is ready for review. Please\n\t\t\t\t\tprovide your feedback.David LeeNew AssignmentYou have been assigned a new task. Please check\n\t\t\t\t\tthe details in the project portal.Laura ",
    "summary": "**Hackers Rejoint the Retro Revolution in Modern Disguise**\n\nIn a dazzling display of technological backwardness thinly veiled as innovation, the web development community at Hacker News loses its collective mind over \"shade/bs\", a groundbreaking solution for those who find the 1990s too futuristic. This modern miracle of a bootstrap component theme promises to liberate the masses from the oppressive chains of Javascript frameworks, enabling the creation of \"reactive SPAs\" that nobody asked for\u2014using *hypermedia*, no less! Cue the raucous applause from commenters fawning over yet another way to make web development as convoluted as possible, while eagerly anticipating \"more examples\" like kids at a low-budget magic show. \ud83c\udfa9\u2728 Meanwhile, *real* developers just update their dependencies and get back to work."
  },
  {
    "title": "James C. Scott, author of Seeing Like a State, has died (poast.org)",
    "points": 73,
    "submitter": "FreakLegion",
    "submit_time": "2024-07-21T22:33:29",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=41028887",
    "comments": [
      "The concepts in Seeing Like A State are very relevant to programmers and to anyone trying to \u201cchange the world\u201d with technology. One of the main points is that for a state to manage many people it tends to use power (hard and soft) to homogenize the populace. My belief is that tech necessarily does the same thing. Everyone in your app has permissions defined by some enum, a limited number of actions available, content moderation machinery.This has effects that are inescapable, especially in the fields of medicine, mental health, social engagement. Tech makes our levers to move the Earth more efficient, but at the cost of a lack of diversity of thought, lifestyle, and value.\n \nreply",
      "Diversity in [the featuresets of] software systems has led to reduced security. The only systems without the \u201crails\u201d to keep the user on-track and out of danger zones are those that provide the user with the ability to program it themselves.Must it be this way? Can we provide the complexity of flexibility while protecting our users\u2019 finances and other important information? I don\u2019t know if we can, but our track record isn\u2019t good.\n \nreply",
      "> Diversity in [the featuresets of] software systems has led to reduced securitycitation needed.one anecdote that comes to mind, the gnu build system had an odd assortment of machines. when they were hacked (very targeted attack) they only noticed because the malware crashed on a R6000 mips cpu or something.\n \nreply",
      "\"Seeing Like A State\" is a superb book, but I'll always remember Scott for \"The Art of Not Being Governed.\" I was a history major in college, and seeing history from the point of view of non-state peoples was revelatory for a young student. I greatly enjoyed it, truly one of those experiences in life where my mind was opened and expanded in a new direction. I'll forever remember him for that, and be grateful for his contribution to my way of viewing the world.\n \nreply",
      "+1. I had simply never considered that one reason to not be a user of the dominant technology (writing, agriculture) was that adopting would mean losing control over one\u2019s group\u2019s destiny.Gives you a different lens on enterprise software adoption and implementation!\n \nreply",
      "I met him once but never took a class. I wish I had because I enjoyed listening to\nhim. Deeply knowledgeable and great intellect. We spoke mostly about the Making of the English Working Class by E. P. Thompson, which is worth reading by everyone in the US and UK (and elsewhere). The other great book by James C. Scott is Weapons of the Weak.\n \nreply",
      "Two Cheers For Anarchism was a book that challenged my priors:https://en.wikipedia.org/wiki/Two_Cheers_for_AnarchismI'm not an anarchist, but it's a wonderful read and includes a quote that has shaped my life ever since:> \u201cOne need not have an actual conspiracy to achieve the practical effects of a conspiracy. More regimes have been brought, piecemeal, to their knees by what was once called \u2018Irish Democracy,\u2019 the silent, dogged resistance, withdrawal and truculence of millions of ordinary people, than by revolutionary vanguards or rioting mobs.\u201d\n \nreply",
      "Seeing like a state is a very though-provoking book which I thoroughly enjoyed. I should give it a re-read.\n \nreply",
      "https://en.wikipedia.org/wiki/James_C._Scott\n \nreply"
    ],
    "link": "https://nitter.poast.org/GerardoMunck/status/1815059432382067053",
    "first_paragraph": "",
    "summary": "**James C. Scott Passes, Internet Misunderstands His Work Ironically**\n\nIn a tragic twist of fate, James C. Scott, the luminary behind \"Seeing Like a State,\" is no longer with us, prompting legions of commentators to showcase their unique blend of superficial reading comprehension and eagerness to relate everything back to tech. One avid fan equates state control mechanisms with app permissions\u2014as if reducing centuries of sociopolitical theory to software development settings is peak insight. Another enlightens us by confusing diversity in software \"featuresets\" with security issues, complete with a fascinatingly irrelevant anecdote about hacked build systems. Meanwhile, a history major reminisces about college days, unwittingly proving that nostalgia is just history seen through rose-colored filters. As the internet does its best to intellectualize and warp Scott's intricate ideas into bite-sized misinterpretations, one can only hope the irony isn't lost in the digital void. \ud83d\ude02"
  },
  {
    "title": "Microsoft points finger at the EU for not being able to lock down Windows (neowin.net)",
    "points": 16,
    "submitter": "mywacaday",
    "submit_time": "2024-07-22T00:03:36",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=41029590",
    "comments": [
      "Would a bad driver update potentially have had similar consequences? (real question)If so, this feels like a red herring.\n \nreply",
      "Drivers undergo a vetting process by Microsoft (at least, the ones that are signed and offered as updates)  = quality control through their control of the channel.This has been the case at least since the late 90s if I remember correctly.\n \nreply",
      "WHQL has had some pretty awful drivers pushed through it. Granted, this was quite some time ago, early 2000s-ish, but they've lead to BSODs etc with nVidia drivers.\n \nreply",
      "Yes, of course. Plenty of storage and chipset drivers have caused no-boot scenarios.\n \nreply",
      "I\u2019m afraid that one morning, we\u2019ll wake up, Windows is unbootable globally, and it\u2019s because the desktop Widgets had a hardcoded certificate expire, causing an infinite taskbar crash.Which actually happened in one of the Windows 11 preview releases.\n \nreply",
      "Grewt, can the EU force Microsoft to open up their Linkedin API as well?\n \nreply",
      ">The document states that Microsoft is obligated to make available its APIs in its Windows Client and Server operating systems that are used by its security products to third-party security software makersI guess even M/S has a hard time with reading comprehension.  \"make available\" does not mean \"no lock down\".  So does that mean when someone boots windows into Safe Mode, they are breaking the law in the EU ?  I do not think so.\n \nreply",
      "> \u201cThe document states that Microsoft is obligated to make available its APIs in its Windows Client and Server operating systems that are used by its security products to third-party security software makers.\u201dWhich means, if Microsoft had made a more carefully scoped way of extending the kernel, or even avoided extending the kernel at all for their own security products, they would have perfectly been at liberty to demand it for everyone else.\n \nreply",
      "\"Current Microsoft points finger at Past Microsoft for ...\"Isn't a headline that will ever exist, therefore they'll point fingers at any entity (EU being the most recent) that's making them do things they don't want to do in order to further an unrelated agenda.Let no catastrophe go unexploited, as they say.\n \nreply"
    ],
    "link": "https://www.neowin.net/news/microsoft-points-finger-at-the-eu-for-not-being-able-to-lock-down-windows/",
    "first_paragraph": "\n3 hours ago\n\n7 hours ago\n\n8 hours ago\n\n8 hours ago\n\n7 hours ago\n\n10 hours ago\n\n12 hours ago\n\n13 hours ago\n\n11 hours ago\n\nJul 20, 2024\n\nJul 20, 2024\n\nJul 19, 2024\n\nJul 19, 2024\n\nJul 19, 2024\n\nJul 18, 2024\n\nJul 18, 2024\n\nJul 20, 2024\n\nJul 20, 2024\n\nJul 19, 2024\n\nJul 19, 2024\n\nJul 15, 2024\n\nJul 14, 2024\n\nJul 14, 2024\n\nJul 9, 2024\n\nDec 31, 2023\n\nOct 14, 2023\n\nJul 7, 2024\n\nJul 7, 2024\n\nJun 30, 2024\n\nJun 29, 2024\n\nMay 23, 2024\n\nMay 21, 2024\n\nMay 7, 2024\n\nMar 24, 2024\n\n10 hours ago\n\n12 hours ago\n\nJul 19, 2024\n\nJul 19, 2024\n\nJul 14, 2024\n\nMay 19, 2024\n\nApr 20, 2024\n\nMar 23, 2024\n\n3 hours ago\n\n19 hours ago\n\nJul 20, 2024\n\nJul 20, 2024\n\n\nPaul Hill\n\nNeowin\n                \u00b7\n    \n\n    Jul 21, 2024 10:58 EDT\n    \n         \u00b7 Hot!\n\nwith 21 comments\n\nAn article published by The Wall Street Journal today ended with an interesting point raised by a Microsoft spokesman regarding the security of the Windows operating system. The spokesman, while not quoted verbatim, is said to have told the WSJ that a 200",
    "summary": "**Microsoft Blames EU for Its Windows Issues: A Shocker!**\n\nIn a thrilling twist no one saw coming, Microsoft shifts blame onto the EU for preventing a total lockdown of their sieve-like Windows OS. As if rehearsed in a bad soap opera, a Microsoft spokesperson dramatically revealed to the *Wall Street Journal* that the big bad EU is stopping their heroic efforts to \"secure\" Windows. Commenters, diving into their usual tech-expert modes, argue over the impact of bad drivers like they're debating the finer points of quantum physics. Forget about actual security concerns, let's argue semantics and hypothetical scenarios until we're all blue-screened! \ud83e\udd26\u200d\u264f\ufe0f"
  },
  {
    "title": "Mining JIT traces for missing optimizations with Z3 (pypy.org)",
    "points": 95,
    "submitter": "matt_d",
    "submit_time": "2024-07-20T17:56:57",
    "num_comments": 32,
    "comments_url": "https://news.ycombinator.com/item?id=41018308",
    "comments": [
      "From the article:> (x & c1) | (x & c1) ==\n  x & (c1 | c2)Is this a typo? Shoud the second c1 be c2 instead?\n \nreply",
      "Why not do this at a higher level on the python source itself?I ask because z3 has been used for type inference (Typpete) and for solving equations written in Python.\n \nreply",
      "There is more runtime information in the traces and more opportunities for optimization.\n \nreply",
      "How does the PyPy JIT compare to the JIT in the upcoming CPython 3.13?\n \nreply",
      "Very different technologies. The PyPy JIT is a tracing JIT where hot paths of execution are identified, then that specific path is compiled and optimized. Same as LuaJIT.The CPython JIT is a newer and less invasive technique called copy-and-patch[1]. It's a lot less powerful, but a lot easier to plug into an existing language implementation: known sequences of python bytecode are mapped to templates of machine code[1] https://en.wikipedia.org/wiki/Copy-and-patch\n \nreply",
      "I'm a bit surprised that copy-and-patch is \"new\". I remember writing a JIT framework that did something similar back in the aughts and I got the idea from reading docs that were already old then.I understand people at IBM  were doing it industrially for Java bytecode in the late 90s under the name quasi-static compilation, and the DyC/Tempo folks were doing similar things over in C land under different names. There were some minor differences due to the technology of the day, but it was broadly similar. For example, explicitly building to IR was uncommon outside Java land and register scheduling didn't have a lot of choices to make. The Java stuff even allowed the template specializations to exist on other computers and be dynamically loaded and validated over the network, for thin-client reasons. Very cool for the early 2000s.\n \nreply",
      "Compile enough traces with the accompanying optimizations and you have solid training data for an LLM that can suggest optimizations based on JIT traces.\n \nreply",
      "If you already know what the optimizations are, you don't need AI to optimize them. Just write optimizations in the compiler. That's literally one of the biggest jobs of the compiler already.\n \nreply",
      "All the minimized inefficiencies that are found by my script are already optimizations. They just happen to be rather specific patterns, so they need to be suitably generalized. There's another Regehr etal paper about how to do that automatically:\nhttps://dl.acm.org/doi/10.1145/3649837(llm's aren't involved, it's all based on z3)I don't plan on implementing something like this for now, I'd rather take the inefficiencies and manually extract optimizations out of them and implement them in PyPy's jit.\n \nreply",
      "You are not wrongAlphaZero-type systems were unable to significantly improve over near-optimal solvers such as z3.\n \nreply"
    ],
    "link": "https://pypy.org/posts/2024/07/mining-jit-traces-missing-optimizations-z3.html",
    "first_paragraph": "\nCF Bolz-Tereick\n\n\n2024-07-19 17:01\n Comments\nIn my last post I've described how to use Z3 to find simple local peephole\noptimization patterns\nfor the integer operations in PyPy's JIT. An example is int_and(x, 0) ->\n0. In this post I want to scale up the problem of identifying possible\noptimizations to much bigger instruction sequences, also using Z3. For that, I\nam starting with the JIT traces of real benchmarks, after they have been\noptimized by the optimizer of PyPy's JIT. Then we can ask Z3 to find\ninefficient integer operations in those traces.Starting from the optimized traces of real programs has some big\nadvantages over the \"classical\" superoptimization approach of generating and\nthen trying all possible sequences of instructions. It avoids the\ncombinatorical explosion that happens with the latter approach. Also, starting\nfrom the traces of benchmarks or (even better) actual programs makes sure that\nwe actually care about the missing optimizations\nthat are found in this way. An",
    "summary": "**Mining JIT Game of Optimization Bingo with Z3**\n\nIn a tech saga that nobody asked for but everybody got, CF Bolz-Tereick decides the world needs to scrape JIT traces for <i>inefficiencies</i> like a digital raccoon going through the garbage bins of PyPy's optimizer. In the comments, armchair programmers oscillate between microscopic critiques (\"<em>Is this a typo?</em>\") and existential queries about AI's role in coding optimizations\u2014because <em>clearly</em>, scripting inefficiencies is now an AI's job, except for when it\u2019s not. Meanwhile, a history lesson unfolds on the aging techniques of JIT as nostalgic programmers reminisce over \"the good old days\" of simpler code times. Tune in next week for another episode of \"Optimizing the Optimizer: Why Do It Smarter When You Can Do It Harder?\" \ud83e\udd16\ud83d\udcbe\ud83d\udd27"
  },
  {
    "title": "txtai: Open-source vector search and RAG for minimalists (neuml.github.io)",
    "points": 108,
    "submitter": "dmezzetti",
    "submit_time": "2024-07-21T11:39:11",
    "num_comments": 17,
    "comments_url": "https://news.ycombinator.com/item?id=41024362",
    "comments": [
      "So here's something I've been wanting to do for a while, but have kinda been struggling to figure out _how_ to do it. txtai looks like it has all the tools necessary to do the job, I'm just not sure which tool(s), and how I'd use them.Basically, I'd like to be able to take PDFs of, say, D&D books, extract that data (this step is, at least, something I can already do), and load it into an LLM to be able to ask questions like:* What does the feat \"Sentinel\" do?* Who is Elminster?* Which God(s) do Elves worship in Faer\u00fbn?* Where I can I find the spell \"Crusader's Mantle\"?And so on. Given this data is all under copyright, I'd probably have to stick to using a local LLM to avoid problems. And, while I wouldn't expect it to have good answers to all (or possibly any!) of those questions, I'd nevertheless love to be able to give it a try.I'm just not sure where to start - I think I'd want to fine-tune an existing model since this is all natural language content, but I get a bit lost after that. Do I need to pre-process the content to add extra information that I can't fetch relatively automatically. e.g., page numbers are simple to add in, but would I need to mark out things like chapter/section headings, or in-character vs out-of-character text? Do I need to add all the content in as a series of questions and answers, like \"What information is on page 52 of the Player's Handbook? => <text of page>\"?\n \nreply",
      "First I would calculate the number of tokens you actually need.  If its less than 32k there are plenty of ways to pull this off without RAG.  If more (millions), you should understand RAG is an approximation technique and results may not be as high quality.  If wayyyy more (billions), you might actually want to finetune\n \nreply",
      "Fine-tuning is almost certainly the wrong way to go about this. It's not a good way of adding small amounts of new knowledge to a model because the existing knowledge tends to overwhelm anything you attempt to add in the fine-tuning steps.Look into different RAG and tool usage mechanisms instead. You might even be able to get good results from dumping large amounts of information into a long context model like Gemini Flash.\n \nreply",
      "No fine-tuning is necessary. You can use something reasonably good at RAG that's small enough to run locally like the Command-R model run by Ollama and a small embedding model like Nomic. There are dozens of simple interfaces that will let you import files to create a RAG knowledgebase to interact with as you describe, AnythingLLM is a popular one. Just point it at your locally-running LLM or tell them to download one using the interface. Behind the scenes they store everything in LanceDB or similar and perform the searching for you when you submit a prompt in the simple chat interface.\n \nreply",
      "Based on what you're looking to do, it sounds like Retrieval Augmented Generation (RAG) should help. This article has an example on how to do that with txtai: https://neuml.hashnode.dev/build-rag-pipelines-with-txtaiRAG sounds sophisticated but it's actually quite simple. For each question, a database (vector database, keyword, relational etc) is first searched. The top n results are then inserted into a prompt and that is what is run with the LLM.Before fine-tuning, I'd try that out first. I'm planning to have another example notebook out soon building on this.\n \nreply",
      "Ah, that's very helpful, thanks! I'll have a dig into this at some point relatively soon.An example of how I might provide references with page numbers or chapter names would be great (even if this means a more complex text-extraction pipeline). As would examples showing anything I can do to indicate differences that are obvious to me but that an LLM would be unlikely to pick up, such as the previously mentioned in-character vs out-of-character distinction. This is mostly relevant for asking questions about the setting, where in-character information might be suspect (\"unreliable narrator\"), while out-of-character information is generally fully accurate.Tangentially, is this something that I could reasonably experiment with without a GPU? While I do have a 4090, it's in my Windows gaming machine, which isn't really set up for AI/LLM/etc development.\n \nreply",
      "Will do, I'll have the new notebooks published within the next couple weeks.In terms of a no GPU setup, yes it's possible but it will be slow. As long as you're OK with slow response times, then it will eventually come back with answers.\n \nreply",
      "I\u2019ve been building a RAG mini app with txtai these past few weeks and it\u2019s been pretty smooth. I\u2019m between this and llamaindex as the backend for a larger app I want to build for a small-to-midsize customer.With the (potentially) obvious bias towards your own framework, are there situations in which you would not recommend it for a particular application?\n \nreply",
      "Glad to hear txtai is on your list.I recently wrote an article (https://medium.com/neuml/vector-search-rag-landscape-a-revie...) comparing txtai with other popular frameworks. I was expecting to find some really interesting and innovative things in the others. But from my perspective I was underwhelmed.I'm a big fan of simplicity and none of them are following that strategy. Agentic workflows seem like a big fancy term but I don't see the value currently. Things are hard enough as it is.If your team is already using another framework, I'm sure anything can work. Some of the other projects are VC-backed with larger teams. In some cases, that may be important.\n \nreply",
      "I\u2019ve done something similar, but using duckDB as the backend/vector store. You can use embeddings from wherever. My demo uses OpenAI.https://github.com/patricktrainer/duckdb-embedding-search\n \nreply"
    ],
    "link": "https://neuml.github.io/txtai/",
    "first_paragraph": "\n\n\nAll-in-one embeddings database\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntxtai is an all-in-one embeddings database for semantic search, LLM orchestration and language model workflows.\nEmbeddings databases are a union of vector indexes (sparse and dense), graph networks and relational databases. This enables vector search with SQL, topic modeling, retrieval augmented generation (RAG) and more.Embeddings databases can stand on their own and/or serve as a powerful knowledge source for large language model (LLM) prompts.Summary of txtai features:txtai is built with Python 3.8+, Hugging Face Transformers, Sentence Transformers and FastAPI. txtai is open-source under an Apache 2.0 license.Interested in an easy and secure way to run hosted txtai applications? Then join the txtai.cloud preview to learn more.",
    "summary": "Welcome to the cutting-edge world of <i>txtai</i>, an <em>all-in-one embeddings database</em> perfect for hobbyists aiming to make their D&D sessions searchable like a Google for the magically inclined. Eager devs dive into comments, fumbling around with whether to use RAG, extracting Elminster's entire life story without a hitch, or just opening a good old PDF themselves. Someone, helpfully, spams a link to their \"smooth\" txtai project, coyly mentioning just how underwhelming other tools are\u2014because, you know, simplicity equates to superiority in the software jungle. Meanwhile, another commenter dreams of running RAG without a GPU, proving that you can indeed try to bake a cake without an oven."
  },
  {
    "title": "Polymorphic Shellcode (2023) (neugierig.org)",
    "points": 4,
    "submitter": "evmar",
    "submit_time": "2024-07-16T18:17:55",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://neugierig.org/software/blog/2023/03/polymorphic-shellcode.html",
    "first_paragraph": "You're reading a single entry.\nGo back to the front page for more.As part of my emulator explorations I went down a curiosity rabbit hole about\npolymorphic shellcode and learned about something fun I'd like to share with\nyou!The world of exploits is pretty sophisticated and if you're not into it it can\nbe hard to follow. (I recently saw some Twitter poll go by that was like \"does\nanyone actually understand any posts from the\nProject Zero blog?\") I personally\nlove reading about it \u2014 my earliest computer wizard friends came from the\nhacking scene \u2014 but in this post I aim to be high level enough that an\ninterested reader who isn't as into it could follow.Shellcode is roughly \"the code the\nattacker wants to inject into the attacked system\". It is typically a small\nsnippet just used as the initial stage of an attack that bootstraps into remote\naccess or downloading more code. And all I knew about polymorphic shellcode is\nthat it refers to shellcode that somehow changes its form to be more d",
    "summary": "In a thrilling display of digital archeology, a brave blogger at neugierig.org dives headfirst into the \"exhilarating\" world of polymorphic shellcode, apparently discovering its existence just after watching a high-brow Twitter poll. \ud83d\ude02 Fear not, dear reader, for our intrepid explorer promises to dumb it down enough so even you, yes YOU, can grasp the sophisticated art of cybersecurity jargon. Commenters leap into action to one-up each other with half-baked tales of their own pixels of glory from the golden days of dial-up conquests, because nothing says \"hacker\" like flexing in blog comments. Strap in for more self-aggrandizing discourse where everyone definitely knows more than you do. \ud83d\ude44"
  },
  {
    "title": "Inkbase: Programmable Ink (2022) (inkandswitch.com)",
    "points": 108,
    "submitter": "surprisetalk",
    "submit_time": "2024-07-16T14:06:51",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=40976765",
    "comments": [
      "If you are into this kind of thing, you might like these essays from 2021:1. https://mlajtos.mu/posts/new-kind-of-paper2. https://mlajtos.mu/posts/new-kind-of-paper-23. https://mlajtos.mu/posts/new-kind-of-paper-34. https://mlajtos.mu/posts/new-kind-of-paper-4I mention various tech (APL, Sketchpad, RAND tablet, Pascaline, VisiCalc, etc.) while showing of demos of calculator designed for iPad & Pencil. I hope writing about Apple Math Notes when I get my hands on it.\n \nreply",
      "I am a big fan of LiquidText (https://www.liquidtext.net). It lets you link across and move conceptual blocks around rather intuitively, but is not a generic note-taking application.\n \nreply",
      "Pretty cool ideas. If simple calculations were built into the apps I use, I would make daily use for napkin math.I've dipped my toe into the pen input tablet world a few times (often unimpressed), but recently committed to a new iPad Air with the latest Pencil Pro.I write on paper and whiteboards every day for software design and todo lists and just general musing. But recently had an itch for the advantages of digital. And I'm really happy so far. A lot comes down to the app you choose and how convenient the UI/UX is, but the killer features I'm going to hate living without:1. Infinite canvas. Never have to truncate a sentence or messily cross the spine or flip a page. So much context, I just pan and zoom to what I want to focus on.2. Rearrange rather than rewrite. Long-press turns my pen tool into a lasso, then I drag however.3. Very productive erasing. Using the new squeeze gesture, my pen is instantly an eraser and only takes one pass.In my opinion, nothing beats a whiteboard for conversations about software. It's one of the biggest losses from the pivot to remote work. My ultimate goal is to bring convenient whiteboarding to zoom calls. But so far I'm really enjoying it in place of the pad of paper that's on my desk.\n \nreply",
      "I second those killer features.Which software/apps are your favorites? I love Goodnotes, but not having infinitve canvas is a problem for me indeed. A bit weird to have physical constraints employed on a device living in the digital world where it should not apply.\n \nreply",
      "Concepts.app right now. My only gripe is shortcut bindings are not arbitrarily configurable and for color selection I have to tap a pretty darn small target area.But no others have infinite canvas that I could find.Otherwise the standard notes app is good. I don't need fluff.\n \nreply",
      "It has been a while, but I've used Notability for teaching purposes over the pandemic. I can't recall why, but there was an exodus from Notability to Goodnotes at some point, so you may already have insight into the two.\n \nreply",
      "Really surprised that the references skip from 1988 (Viewpoint: Toward a Computer for Visual Thinkers) to 2010 (INK-12) totally overlooking:- Momenta- Go Corp.'s PenPoint- Aha! Inkwriter (which became the basis for Microsoft's Journal)- Dan Bricklin's pen software- the academic exercises Denim and Silk which were written in Javaor even extant tools such as:- https://www.inftyproject.org/en/software.html- or the facility to do math in text input fields drawing software such as Freehand or Illustrator- or https://ryven.org where one can drag in programming elements and annotate with a penI've been a big believe in this sort of thing for a long while now, and would be glad of it becoming more workable and available and popular.I'd love to have a piece of software which was:- freeform, allowing both writing and drawing- yet still allowed capturing data structures and referring to things by some meaningful handle- programmable --- even just a formula pane such as Lotus Improv had would be great\n \nreply",
      "You might be interested in at least some aspects of Decker: http://beyondloom.com/decker/\n \nreply",
      "Have you seen Apple Math Notes? Impressive first version with great promise for the future.\n \nreply",
      "I'd need for someone to make another tablet running the Mac OS w/ a Wacom EMR digitizer.\n \nreply"
    ],
    "link": "https://www.inkandswitch.com/inkbase/",
    "first_paragraph": "",
    "summary": "Title: \"Inkbase: The Revolutionary Art of Reinventing the Wheel\"\n\nIn an audacious display of originality, <em>Inkbase</em> revives ancient technology by daring to combine the concept of writing with digital devices, heralding an avant-garde future where one can both write AND calculate on a screen. Our enlightened tech hobbyists dive into the comments with all the fervor of Columbus discovering Ohio, musing deeply on pressing existential crises like infinite canvases, squeezing the last ounce of utility from their digital pens, and the titanic struggle between pressing a tiny color selection target. Connoisseurs of redundant tech debates helpfully discuss migrating from Notability to Goodnotes as if swapping deck chairs on the Titanic, each claiming superiority in this post-post-paper apocalypse. Meanwhile, dreams of the monumental capability to drag programming elements in <i>Ryven.org</i> or crafting grand theories on digital napkins continue to inflate the digital ether, soaring far beyond the grasp of mundane office stationery."
  },
  {
    "title": "Continue (YC S23) Is Hiring a Software Engineer in San Francisco (ycombinator.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2024-07-21T21:02:30",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.ycombinator.com/companies/continue/jobs/smcxRnM-software-engineer",
    "first_paragraph": "The leading open-source AI code assistantContinue is seeking an outstanding software engineer to help us build state-of-the-art autocomplete and codebase retrieval, who thinks rigorously and pays attention to the smallest details. In this role, you will work on fundamental, but highly open-ended problems where deliberate measurement, rapid experimentation, and empathy for users push forward the product.About youPlease keep in mind that we are describing the background that we imagine would best fit the role. If you don\u2019t meet all the requirements, but you are confident that you are up for the task, we absolutely want to get to know you!What you will doWe\u2019re a startup, so you\u2019ll have to be ready to do whatever is required to accomplish our mission. However, you can definitely expect to:We believe there is an opportunity to create a future where developers are amplified, not automated. This is why we are building the leading open-source AI code assistant and layering an enterprise produc",
    "summary": "**YC\u2019s Latest Unicorn Wannabe Begs for Code Minions**\n\nIn a groundbreaking display of self-delusion, the startup \"Continue\" (because *why not* pick a verb for a company name?) is now trawling for software engineers who can transform spaghetti code into slightly less embarrassing spaghetti code. They seek a \"rigorous\" coder with a love for \"rapid experimentation\" \u2014 which is obviously Silicon Valley speak for \"do it fast and pray it works.\" Prospective hires should be thrilled at the vagueness of \u201cdoing whatever is required,\u201d hinting at a thrilling future of 80-hour weeks under the guise of \"empowering developers.\" Comment sections are predictably ablaze with keyboard warriors asserting code messiahs will save the world, apparently by making autocomplete slightly less infuriating. \ud83d\ude44"
  },
  {
    "title": "Stremio OS Is Now Available for Raspberry Pi 5 and 4 (stremio.com)",
    "points": 26,
    "submitter": "commoner",
    "submit_time": "2024-07-21T17:39:52",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=41026663",
    "comments": [
      "> What is Stremio?> Stremio is a modern media center that gives you the freedom to watch everything you want.https://www.stremio.com\n \nreply",
      "Is it a fork of something? I'm surprised it's coming out of the blue\n \nreply",
      "I don't know it's not, but it's been around a while, if coming out of the blue it wasn't recent.\n \nreply",
      "Lineage Os, the android custom rom\n \nreply",
      "Seems to be limited to running on Android\n \nreply",
      "Used it for 2 weeks, shows, movies kept buffering even though it's supposed to use BitTorrent. Switched back to popcorn time, no issues since.\n \nreply",
      "I've been using Stremio for about a year now and have been very happy with it, if I had an Rpi I'd definitely give this a try.\n \nreply"
    ],
    "link": "https://blog.stremio.com/stremio-os-is-now-available-for-raspberry-pi-5-4/",
    "first_paragraph": "",
    "summary": "In a world where redundancy is the spice of life, the <em>revolutionary</em> Stremio OS graces not one, but two versions of the Raspberry Pi. Brace yourselves, tech enthusiasts and homebrew media pirates alike, as you witness another media center promising to seamlessly consolidate your borderline illegal streaming activities. Commenters, torn between confusion and misplaced enthusiasm, engage in a tale as old as time: \"Is this even new?\" \"Why does it buffer more than my 90s dial-up?\" Meanwhile, one brave soul, armed with a year of loyalty to Stremio, pledges allegiance to this ambiguous newcomer\u2014probably the only person ready to gamble their Raspberry Pi on this <i>exciting</i> venture. \ud83c\udfac\ud83c\udf7f\ud83d\udc22"
  },
  {
    "title": "Rosey Grier: From NFL Football to Knitting and Needlework (2023) (crochetconcupiscence.com)",
    "points": 13,
    "submitter": "DoreenMichele",
    "submit_time": "2024-07-16T18:47:34",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.crochetconcupiscence.com/unique-1970s-crocheter-pro-football-player-rosey-grier/",
    "first_paragraph": "",
    "summary": "In an astounding twist of fate that could only occur on the internet, crochetconcupiscence.com manages to peak our collective disbelief by chronicling Rosey Grier\u2019s journey from NFL brute to knitting nanny. Who knew that swapping pigskins for pincushions could provide such fodder for endless, insufferable commentary? Readers, mostly those who still think <em>\"real men don\u2019t knit\"</em>, tumble out of the woodwork to express their shock, awe, and unsolicited opinions on traditional gender roles. Ultimately, everyone learns a crucial lesson: the internet never forgets, and neither does grandma."
  },
  {
    "title": "French Acrobatic Artist\u2019s Low-Gravity Invention (core77.com)",
    "points": 39,
    "submitter": "halfdaft",
    "submit_time": "2024-07-21T21:15:04",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=41028190",
    "comments": [
      "This is something a performer could take pretty much anywhere. Versus a massive 40 foot long crane or complicated wire setup, this is a big improvement.\n \nreply",
      "Colin Furze did it a year ago. https://youtu.be/gSDtNkKPiDgAnd wires with counter weights have been used in movies since forever.\n \nreply",
      "This French dude has been doing it for years. At least 2021.\n \nreply",
      "Great video. OP's is something that many people can make and much faster, given the low tech of it, so I appreciate that too.\n \nreply",
      "I can't imagine why it would not just run of that plate after a trivial amount of movement.It does look like it would be pretty easy to make with just some bent metal and exercise weights. Colin Furze's one worked well too, maybe this 'invention' was influenced by his. There are many of these on youtube, some years old.\n \nreply",
      "You can see it so just that at the very end. If you look closely the plate itself is also spinning.\n \nreply"
    ],
    "link": "https://www.core77.com/posts/133036/Acrobatic-Artist-Bastien-Dausses-Incredible-Low-Gravity-Invention",
    "first_paragraph": "French acrobatic artist Bastien Dausse's work is \"centered on (im)balance and the desire to play with gravity.\" To that end, Dausse co-founded a troupe, Compagnie Barks, whose performances are centered around gravity and the subversion of it. For their Moon performance, they use this impressive anti-gravity device he invented:The object is calibrated to simulate lunar gravity, which is 1/6th the level of Earth's.In the video below, you can see how he clicks into it. It's impressively low-tech.Enter a caption (optional)There are tons of entertaining performances using this device, and you can see them here or here. I could see this being popular at amusement parks or fairs as a cool low tech \"Moon Walk Simulator\"; a lot simpler to set up and work with than cables and pulleys though more dependent on accurate participant weighing for best use. Also I wonder if the disc could be made slightly concave to keep the rocker more secure in placement.Test it out; it only takes a single click to ",
    "summary": "<h1>Behold French Innovations: Acrobatic Moon Shoes!</h1>\n<p>In a stunning display of ignoring decades of existing technology, French \"acrobatical\" wizard Bastien Dausse has reinvented the (moon)wheel with his anti-gravity device that claims to replicate lunar frolicking. \ud83c\udf11 Dausse's contraption, a marvel in the arts of redundancy, is apparently cooler because it\u2019s simpler and, crucially, French. Meanwhile, in the still-trying-to-be-helpful comment section, viewers engage in a duet of \"been there, done that\" and not-so-subtle plugs for other YouTube inventors. \ud83c\udfaa </p>\n<p>Because who needs NASA or physics when you have an acrobat and a dream? </p>"
  },
  {
    "title": "PgManage: Modern, cross platform graphical database client (github.com/commandprompt)",
    "points": 111,
    "submitter": "thunderbong",
    "submit_time": "2024-07-21T12:20:13",
    "num_comments": 39,
    "comments_url": "https://news.ycombinator.com/item?id=41024576",
    "comments": [
      "Just tried this out, and although it visually looks ok it doesn't seem to even support basic connectivity options like unix sockets.eg the hostname field for new connections must be a hostname or IP address, and can't take things like `/var/run/postgresql`.That's super unfortunate. :(---As a data point, the program seems to create config files (on Linux) under `~/.config/PgManage` and `~/.pgmanage`.  If you delete the application after testing, you might as well nuke those two dirs as well.\n \nreply",
      "looks like you can just use a connection URL, https://www.postgresql.org/docs/current/libpq-connect.html#L..., it's possible to use it to connect to a unix socket that way.\n \nreply",
      "Ahhh cool, good thinking.  I've already moved on, but might take another look at a future point. :)\n \nreply",
      "The this onehttps://dbgate.org/\n \nreply",
      "libpq normally connects to a unix socket by being given 'localhost' as the hostname or no hostname at all.IIRC it'll also accept a path -as- a hostname but I'm guessing from your phrasing the field validation won't.\n \nreply",
      "Are you sure about localhost? I'm not familiar with other libpq clients, but psql definitely always resolves localhost to an IP address for me.You're right about it accepting a path (and defaulting to a compile-time selected UNIX socket path).\n \nreply",
      "> libpq normally connects to a unix socket by being given 'localhost' as the hostname or no hostname at all.'localhost' for a unix socket doesn't sound right.  'localhost' is a specific network address and has a default configuration in pg_hba.conf (127.0.0.1) for itself.  It's different to the 'local' entry in pg_hba.conf that's specifically for unix sockets.And yeah, the field validation in the IDE required some kind of value in the hostname field, and wouldn't take a path (ie /var/...etc), so no kind of fallback behaviour seemed workable. :(\n \nreply",
      "localhost as unix socket shortcut is actually MySQL behavior: https://dev.mysql.com/doc/c-api/8.4/en/mysql-real-connect.ht...\n \nreply",
      "This is great! OmniDB, which PgManage is based off of, was one of the very few free SQL IDEs that supported a debugger. Granted, the debugger UI was pretty clunky, but it did work.https://github.com/OmniDB/plpgsql_debugger\n \nreply",
      "Is there an existing comparison between pgManage and pgAdmin somewhere?At first glance, it seems they serve the same purpose. Am i missing something? (besides the support for some other DBs - but pgManage states to target postgres primarily)\n \nreply"
    ],
    "link": "https://github.com/commandprompt/pgmanage",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Web tool for database management\n      PgManage is a modern Postgres-centric graphical database client, though we will be adding features for\ndevelopers the initial focus is on the \"management\" of Postgres.We proudly leverage all of the great work done by the original\n(now dormant) project https://github.com/OmniDB/OmniDBWebsite & Downloads: https://www.commandprompt.com/products/pgmanage/Full Documentation: https://pgmanage.readthedocs.io/en/latest/clone pgmanage repository; change to the root directory of cloned repository,  activate virtualenv:Activate the Python virtual environment created in the previous step:Install Python dependencies using pip:Navigate to the pgmanage/app/static/assets/js/pgmanage_frontend/ directory and install Node.js dependencies using npm (Node.js version 18.x is required):Start a development front-end s",
    "summary": "Title: <em>PgManage: An Ode to Redundancy and Minimal Connectivity</em>\n\nFirst Paragraph: In an exhilarating leap backwards, PgManage emerges as the new hero for anyone who craves the nostalgia of limited database connectivity and the thrill of manual documentation scavenger hunts. The soaring aspirations of handling Postgres databases with a \"modern\" GUI collide spectacularly with the mundane reality of not supporting unix sockets, leaving users in an emotional turmoil paralleled only by the drama in the comment section. Fans of the defunct OmniDB might find solace in PgManage\u2019s debugger, a relic of an age when software frustrations were a rite of passage. Skeptics and enthusiasts alike spar in the comments, trying to ascertain whether PgManage is just a shadow of PgAdmin or a beacon of missed potential. \ud83c\udfad\ud83d\udc94"
  },
  {
    "title": "The Plague of Lust: A History of Venereal Disease in Antiquity (1901 Edition) (publicdomainreview.org)",
    "points": 16,
    "submitter": "Petiver",
    "submit_time": "2024-07-19T18:15:43",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=41009371",
    "comments": [
      "```\nWe learn misogynistic pejoratives like \u201cmeriochane\u201d, given to Cleopatra by Horace and company, which Rosenbaum translates as \u201cthe woman who gapes wide for ten thousand men\u201d\n```Well, no. Rosenbaum discusses \u03bc\u03c5\u03bf\u03c7\u03ac\u03bd\u03b7 on pg. 14, a word found in Galen's Glossary of Hippocrates. Galen:\u03bc\u03c5<\u03c1>\u03b9\u03bf\u03c7\u03ac\u03bd\u03b7\u00b7 \u1f10\u03c0\u03af\u03b8\u03b5\u03c4\u03bf\u03bd \u03c7\u03b1\u03c3\u03ba\u03bf\u03cd\u03c3\u03b7\u03c2. \u03b5\u1f30 \u03b4\u1f72 \u03bc\u03c5\u03c1\u03b9\u03bf\u03c7\u03b1\u03cd\u03bd\u03b7 \u03b3\u03c1\u03ac\u03c6\u03bf\u03b9\u03c4\u03bf, \u1f21 \u1f10\u03c0\u1f76\n\u03bc\u03c5\u03c1\u03af\u03bf\u03b9\u03c2 \u1f02\u03bd \u03b5\u1f34\u03b7 \u03c7\u03b1\u03c5\u03bd\u03bf\u03c5\u03bc\u03ad\u03bd\u03b7.My trans. \"Muriochane/Muiochane: A name for a woman yawning. But if it is to be written 'thousand relaxer', it should be a woman who relaxes [ie., her legs] for a thousand.\"This \"yawn\" or \"yawn after something\" can be similar in Greek usage to our \"drool after.\"The \"Cleopatra\" claim is internet garbage, nowhere in Rosenbaum, and I wonder if an AI summarizer picked it up from Reddit or something? All Rosenbaum does is quote Erotian in that discussion, who says \"\u03bc\u03b7\u03c1\u03b9\u03bf\u03c7\u03ac\u03bd\u03b7 \u1f44\u03bd\u03bf\u03bc\u03b1 \u03b3\u03c5\u03bd\u03b1\u03b9\u03ba\u03cc\u03c2,\" Meriochane is the name of a woman.There's another related word from the Suda, \u03bc\u03c5\u03c3\u03ac\u03c7\u03bd\u03b7, which it attributes to Archilochus as a reference (name for?) a prostitute.\n \nreply",
      "Archive.org version with a better viewer. (Both sites have a PDF download.) https://archive.org/details/plagueoflustbein01rose\n \nreply",
      "> During a medical residency in 1830s BerlinShould be dated to the year 1830 since 1901 edition is just a translation into English\n \nreply"
    ],
    "link": "https://publicdomainreview.org/collection/the-plague-of-lust/",
    "first_paragraph": "Search The Public Domain ReviewJulius Rosenbaum, The Plague of Lust: Being a History of Venereal Disease in Classical Antiquity, vol. 1 (Paris: Charles Carrington, 1901).During a medical residency in 1830s Berlin, Dr. Julius Rosenbaum turned his mind toward the afflictions of ancient genitals. Six years later, he published a two-volume tome on the subject of sexually transmitted diseases in antiquity, which was translated into English in 1901 by \u201cAn Oxford M.A.\u201d as The Plague of Lust. The translation came with a caution: \u201cNeedless to say the Book in no way appeals,\u2014or is meant to appeal,\u2014to the general reading public.\u201dFrom the beginning of Rosenbaum\u2019s treatise, Greek and Roman men are exempt from blame for their boils and sores \u2014 illness always festers on the outskirts. \u201cOnly with the object of procreating offspring was the Greek husband to rest in the arms of his spouse\u201d, he explains. Corruption came from the \u201cslave-women\u201d to whom husbands would courageously turn to \u201cavoid greater evi",
    "summary": "Title: An Itchy Look into Togas and Tumults\n\nIn the digital catacombs of Public Domain Review, the bold adventurers of internet academia have unearthed a dusty gem: \"The Plague of Lust.\" Dr. Julius Rosenbaum, a man deeply intrigued by the nether itches of antiquity, dedicates an entire book to the sores and secrets of ancient loins. It\u2019s a gritty tale where Greek husbands perilously leap from chaste marital beds into the dangerous laps of \"slave-women\" to avoid \u2013 God forbid \u2013 the monotony of monogamy. Amidst Rosenbaum's tour of ancient venereal escapades, commenters, wielding their half-baked Google PhDs, duel over mistranslations and misattributions, proving once again that the internet is humanity's true <em>den of iniquity</em>. \ud83e\udd13\ud83d\udcdc\ud83d\udd0d"
  },
  {
    "title": "Show HN: Moocable \u2013 find people studying the same online course/book (moocable.com)",
    "points": 58,
    "submitter": "junaid_97",
    "submit_time": "2024-07-21T13:34:17",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=41024964",
    "comments": [
      "I've been trying to put together a study group all week!Is it possible to add a new course to the library?  I'd like to make a group for CSS for JavaScript Developers by Josh W Comeau [1] but it seems like I can only make a group for courses in the library.1: https://css-for-js.dev/\n \nreply",
      "Added the course: https://moocable.com/mooc/view/css-for-javascript-developers...\n \nreply",
      "Awesome, thanks so much!\n \nreply",
      "Congrats on the launch. Have you personally ever had success getting a study partner on one of these sites? Might work for you if you get a subreddit to recommend your site as a way to find study buddies.\n \nreply",
      "What a great idea.I literally had this idea in the last week.I have an abundance of helpers (friends, local meetup, IRC, Discord) for what I\u2019m learning, but I\u2019m driving them tired. LLMs help but hallucinate.\n \nreply",
      "Thanks :)I have come across multiple subreddits + niche forums/websites that try to solve this problem. But, I felt something was missing. I couldn't put my finger on it.Then, I realized...it was \"specificity\". By adding constrains (course/book, timezones...) you can have clear goals - and, hopefully - better outcomes.\n \nreply",
      "I\u2019m stuck with the \u201cchecking your browser\u201d message on Safari for iPhone.\n \nreply",
      "Hey Junaid, I'm working on a similar idea, but with AI matching, do you want to meet?\n \nreply",
      "Moo-cable\n \nreply",
      "ha!I keep explaining the name to my friends. I guess most people don't know the abbreviation \"MOOC\".They are like \"Oh, it's Moo-cable?...\"I'm like \"No, it's MOOC-able\"Cause you are able to complete the MOOCs.Then, they ask \"Oh, I see. Now, what's a MOOC?\"\n \nreply"
    ],
    "link": "https://moocable.com/",
    "first_paragraph": "See moreSee this alsoSee this alsoMost-mentioned courses on HackernewsSee this also",
    "summary": "Title: Moocable.com: For When You Absolutely, Positively Have To Find Another Procrastinator Pretending to Learn Online\n\nIn a world where solitary confinement isn't enough for self-learners, Moocable.com emerges as a beacon of unnecessary social interaction. Now, armchair scholars have a new digital playground to discover others who can also pretend to study the same online course or book. Comment sections explode with the joy of adding niche courses not already dominated by two other keen learners, while others celebrate the groundbreaking realization that adding standardized tags like 'timezone' might just prevent you from coordinating with someone who's tomorrow today. Meanwhile, someone's still stuck on the Safari loading screen \u2013 perhaps a metaphor for their educational journey. \ud83d\ude05\ud83c\udf93"
  },
  {
    "title": "The data that powers AI is disappearing fast (nytimes.com)",
    "points": 77,
    "submitter": "sgammon",
    "submit_time": "2024-07-21T19:05:36",
    "num_comments": 105,
    "comments_url": "https://news.ycombinator.com/item?id=41027320",
    "comments": [
      "xxx"
    ],
    "link": "https://www.nytimes.com/2024/07/19/technology/ai-data-restrictions.html",
    "first_paragraph": "",
    "summary": "In an alarming trend only noticed by the brightest minds at nytimes.com, the world's supply of data \u2014 which, like oil or clean oxygen, is obviously irreplaceable \u2014 is vanishing at an unprecedented rate. Tech aficionados in the comments, skimming the article during their arduous 15-minute Silicon Valley commutes, nod sagely at the imminent demise of all AI everywhere, while simultaneously debating which data-deprived AI bot is still smart enough to manage their crypto portfolios. \ud83d\udcc9\ud83e\udd16 As each commenter vies for the crown of \"Most Profound Thought-Leader in a Virtual Echo Chamber,\" the internet collectively prays for a day when the only things disappearing faster than data are these comments."
  }
]