[
  {
    "title": "An image of an archeologist adventurer who wears a hat and uses a bullwhip (theaiunderwriter.substack.com)",
    "points": 470,
    "submitter": "participant3",
    "submit_time": "2025-04-03T17:55:20 1743702920",
    "num_comments": 312,
    "comments_url": "https://news.ycombinator.com/item?id=43573156",
    "comments": [
      "I was really hoping that the conversation around AI art would at least be partially centered on the perhaps now dated \"2008 pirate party\" idea that intellectual property, the royalty system, the draconian copyright laws that we have today are deeply silly, rooted in a fiction, and used over and over again, primarily by the rich and powerful, to stifle original ideas and hold back cultural innovation.Unfortunately, it's just the opposite. It seems most people have fully assimilated the idea that information itself must be entirely subsumed into an oppressive, proprietary, commercial apparatus. That Disney Corp can prevent you from viewing some collection of pixels, because THEY own it, and they know better than you do about the culture and communication that you are and are not allowed to experience.It's just baffling. If they could, Disney would scan your brain to charge you a nickel every time you thought of Mickey Mouse.\n \nreply",
      "The idea of open sourcing everything and nullifying patents would benefit corporations like Disney and OpenAI vastly more than it would benefit the people. The first thing that would happen is that BigCorp would eat up every interesting or useful piece of art, technology, and culture that has ever been created and monetize the life out of it.These legal protections are needed by the people. To the Pirate Party's credit, undoing corporate personhood would be a good first step, so that we can focus on enforcing protections for the works of humans. Still, attributing those works to CEOs instead of corporations wouldn't result in much change.\n \nreply",
      "How do restaurants work, then? You can\u2019t copyright a recipe. Instructions can\u2019t generally be copyrighted, otherwise someone would own the fastest route from A to B and charge every person who used it. The whole idea of intellectual property gets really weird when you try to pinpoint what exactly is being owned.I do not agree with your conjecture that big corps would win by default. Ask why would people need protection from having their work stolen when the only ones welding weaponized copyright are the corporations. People need the freedom to wield culture without  \nrestriction, not protection from someone having the same idea as them and manifesting it.\n \nreply",
      "A restaurant is a small manufacturing facility that produces a physical product. It\u2019s not the same at all.\n \nreply",
      "It\u2019s more reasonable to say that the idea of intellectual property is challenging for nonlawyers because of the difficulty in understanding ownership not as one thing, but as a bundle of various elements of control, exclusion, obligation, or entitlement, even some of which spring into existence out of nowhere.In other words, the challenge is not to understand \u201cwhat exactly is being owned,\u201d and instead, to understand \u201cwhat exactly being owned is.\u201d\n \nreply",
      "Closed source - when was the last time your restaurant told you what was in, and how to make, your favourite dish?What's in Coca Cola?\n \nreply",
      ">The first thing that would happen is that BigCorp would eat up every interesting or useful piece of art, technology, and culture that has ever been created and monetize the life out of it.Wait, I'm still trying to figure out the difference between your imaginary world and the world we live in now?\n \nreply",
      "I think the main difference is if everything were freely available they may attempt to monetize the life out of it,  but they will fail if they can't actually provide something people actually want.  There's no more \"You want a thing so you're going to buy our thing because we are the exclusive providers of it.  That means we don't even have to make it very good\"If anyone in the world could make a Star Wars movie, the average Star Wars movie would be much worse,  but the best 10 Star Wars movies might be better that what we currently have.\n \nreply",
      "I\u2019m sure the best independent Star Wars movie would be infinitely better than what Disney has been shoveling out for the last couple decades.\n \nreply",
      "Thor would have red hair in the imaginary world, rather than being a Blonde man which was made to be a somewhat distinguished comic book character.The Disney or otherwise copyrighted versions allow for unique spins on these old characters to be re-copyrighted. This Thor from Disney/Marvel is distinguished from Thor from God of War.\n \nreply"
    ],
    "link": "https://theaiunderwriter.substack.com/p/an-image-of-an-archeologist-adventurer",
    "first_paragraph": ""
  },
  {
    "title": "Celebrate 50 years of Microsoft with the company's original source code (gatesnotes.com)",
    "points": 134,
    "submitter": "EvgeniyZh",
    "submit_time": "2025-04-03T21:49:04 1743716944",
    "num_comments": 70,
    "comments_url": "https://news.ycombinator.com/item?id=43575884",
    "comments": [
      "Love how absolutely engorged and broken this web page is to dramatically depict a style that - were the article actually just published in plain text - would be what... a millionth the size? Should have known better than to be surprised that the \"source code\" one can \"download\" and \"look through\" is in a goddamned PDF.I do truly wonder if the fact that he was publishing a PDF as downloadable \"code\" even caused him any pause lol.\n \nreply",
      "Shipping highly optimized assembler for a program made to work on computers with 4KB RAM as a ~100 MB PDF is quite the flex.I must admit that while it's computationally quite wasteful, the web page does look quite neat.\n \nreply",
      "The article rendering hurt my eyes, and then it was a pdf of the source code! :-(\n \nreply",
      "If only Microsoft owned a place to post source code...\n \nreply",
      "That would be either OneDrive or for the real l337 adminz: B:\\Git is for Linux and other cancers.\n \nreply",
      "OneDrive? Look at mister corporate moneybags here. Sharepoint!\n \nreply",
      "You can\u2019t even use reader mode on the site because of the text effect. It will cut off after the first few paragraphs since the others have the effect applied.\n \nreply",
      "The source code is such a fun read (for the comments). I found some source code for GW-BASIC, and here are two of my favorites:  ;WE COULD NOT FIT THE NUMBER INTO THE BUFFER DESPITE OUR VALIENT\n  ;EFFORTS WE MUST POP ALL THE CHARACTERS BACK OFF THE STACK AND\n  ;POP OFF THE BEGINNING BUFFER PRINT LOCATION AND INPUT A \"%\" SIGN THERE\n\n  ;CONSTANTS FOR THE RANDOM NUMBER GENERATOR FOLLOW\n  ;DO NOT CHANGE THESE WITHOUT CONSULTING KNUTH VOL 2\n  ;CHAPTER 3 FIRST\n\nEdit: GW-BASIC, not QBASIC (https://github.com/microsoft/GW-BASIC)\n \nreply",
      "Fun fact, GW-BASIC was a descendant of the original Altair BASIC. The \"Translation created 10-Feb-83\" headers on each source file refer to tooling Microsoft had that automatically translated the 8080 assembly to 8086 (it shouldn't be taken as a build date since they were manually modified after that point). Besides GW-BASIC, source code for the 6502 and 6809 rewrites of Microsoft BASIC were available up to this point (see https://www.pagetable.com/?p=774 and https://github.com/davidlinsley/DragonBasic) but I believe this is the first public release of the original 8080 BASIC code.\n \nreply",
      "The fact that Microsoft has a $2.77 trillion market cap despite being terrible at virtually everything it tries to do proves large swaths of the economy are fake.\n \nreply"
    ],
    "link": "https://www.gatesnotes.com/home/home-page-topic/reader/microsoft-original-source-code",
    "first_paragraph": ""
  },
  {
    "title": "Build an 8-bit computer from scratch (eater.net)",
    "points": 59,
    "submitter": "jcartw",
    "submit_time": "2025-03-31T11:29:34 1743420574",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=43533715",
    "comments": [
      "I always upvote Ben Eater's project(s).I got his 6502 kit and worked through his YouTube videos to get it up and running with LCD display and all. I want to actually frame it and get it running, hanging on a wall.If anyone is new to Ben, find a comfortable chair or couch, make some tea, take a breath, and begin your descent into his long-form breadboard series of nerd-splaining how a CPU works, beginning with basic logic gates.His follow-on series is a little higher level. He's still at it with the breadboards but he allows that this time the CPU (a 6502) is already built for us. He then walks through how the address bus works, how to attach RAM, etc.It makes me wish I could be transported back to the 70's when things could still be understood.\n \nreply",
      "+1 for the 6502 kit. It\u2019s the perfect project. I think the full 8-bit computer is kind of daunting. The 6502 is just big enough to be a fun medium size project. Plus there is a perfect extension project with the video card if you want to add that on.\n \nreply",
      "His series on building a video adaptor is a particular favourite of mine.\n \nreply",
      "Ben Eater's breadboard CPU is a good way to learn the basics, but since the focus is pedagogical, it's very underpowered for the quantity of chips it uses (and you better enjoy forming wires). For a much more powerful computer built around the same number of TTL chips, see the Gigatron.\n \nreply"
    ],
    "link": "https://eater.net/8bit/",
    "first_paragraph": ""
  },
  {
    "title": "Curl-impersonate: Special build of curl that can impersonate the major browsers (github.com/lwthiker)",
    "points": 268,
    "submitter": "mmh0000",
    "submit_time": "2025-04-03T15:24:49 1743693889",
    "num_comments": 66,
    "comments_url": "https://news.ycombinator.com/item?id=43571099",
    "comments": [
      "There's a fork of this that has some great improvements over to the top of the original and it is also actively maintained: https://github.com/lexiforest/curl-impersonateThere's also Python bindings for the fork for anyone who uses Python: https://github.com/lexiforest/curl_cffi\n \nreply",
      "I'm rooting for Ladybird to gain traction in the future. Currently, it is using cURL proper for networking. That is probably going to have some challenges (I think cURL is still limited in some ways, e.g. I don't think it can do WebSockets over h2 yet) but on the other hand, having a rising browser engine might eventually remove this avenue for fingerprinting since legitimate traffic will have the same fingerprint as stock cURL.\n \nreply",
      "It would be good to see Ladybird's cURL usage improve cURL itself, such as the WebSocket over h2 example you mention. It is also a good test of cURL to see and identify what functionality cURL is missing w.r.t. real-world browser workflows.\n \nreply",
      "but on the other hand, having a rising browser engine might eventually remove this avenue for fingerprintingIf what I've seen from CloudFlare et.al. are any indication, it's the exact opposite --- the amount of fingerprinting and \"exploitation\" of implementation-defined behaviour has increased significantly in the past few months, likely in an attempt to kill off other browser engines; the incumbents do not like competition at all.The enemy has been trying to spin it as \"AI bots DDoSing\" but one wonders how much of that was their own doing...\n \nreply",
      "Hold up, one of those things is not like the other. Are we really blaming webmasters for 100x increases in costs from a huge wave of poorly written and maliciously aggressive bots?\n \nreply",
      "> Are we really blaming...No, they're discussing increased fingerprinting / browser profiling recently and how it affects low-market-share browsers.\n \nreply",
      "When I spoke to these guys [0] we touched on those quirks and foibles\nthat make a signature (including TCP stack stuff beyond control of any\nuserspace app).I love this curl, but I worry that if a component takes on the role of\ndeception in order to \"keep up\" it accumulates a legacy of hard to\nmaintain \"compatibility\" baggage.Ideally it should just say... \"hey I'm curl, let me in\"The problem of course lies with a server that is picky about dress\ncodes, and that problem in turn is caused by crooks sneaking in\ndisguise, so it's rather a circular chicken and egg thing.[0] https://cybershow.uk/episodes.php?id=39\n \nreply",
      "> Ideally it should just say... \"hey I'm curl, let me in\"What? Ideally it should just say \"GET /path/to/page\".Sending a user agent is a bad idea. That shouldn't be happening at all, from any source.\n \nreply",
      "What should instead happen is that Chrome should stop sending as much of a fingerprint, so that sites won't be able to fingerprint. That won't happen, since it's against Google's interests.\n \nreply",
      "This is a fundamental misunderstanding of how TLS fingerprinting works. The \"fingerprint\" isn't from chrome sending a \"fingerprint: [random uuid]\" attribute in every TLS negotiation. It's derived from various properties of the TLS stack, like what ciphers it can accept. You can't make \"stop sending as much of a fingerprint\", without every browser agreeing on the same TLS stack. It's already minimal as it is, because there's basically no aspect of the TLS stack that users can configure, and chrome bundles its own, so you'd expect every chrome user to have the same TLS fingerprint. It's only really useful to distinguish \"fake\" chrome users (eg. curl with custom header set, or firefox users with user agent spoofer) from \"real\" chrome users.\n \nreply"
    ],
    "link": "https://github.com/lwthiker/curl-impersonate",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        curl-impersonate: A special build of curl that can impersonate Chrome & Firefox\n      \nA special build of curl that can impersonate the four major browsers: Chrome, Edge, Safari & Firefox. curl-impersonate is able to perform TLS and HTTP handshakes that are identical to that of a real browser.curl-impersonate can be used either as a command line tool, similar to the regular curl, or as a library that can be integrated instead of the regular libcurl. See Usage below.When you use an HTTP client with a TLS website, it first performs a TLS handshake. The first message of that handshake is called Client Hello. The Client Hello message that most HTTP clients and libraries produce differs drastically from that of a real browser.If the server uses HTTP/2, then in addition to the TLS handshake there is also an HTTP/2 handshake where various "
  },
  {
    "title": "The Slow Collapse of Critical Thinking in OSINT Due to AI (dutchosintguy.com)",
    "points": 108,
    "submitter": "walterbell",
    "submit_time": "2025-04-03T18:21:32 1743704492",
    "num_comments": 55,
    "comments_url": "https://news.ycombinator.com/item?id=43573465",
    "comments": [
      "> Participants weren\u2019t lazy. They were experienced professionals. But when the tool responded quickly, confidently, and clearly they stopped doing the hard part.This seems contradictory to me. I suspect most experienced professionals start with the premise that the LLM is untrustworthy due to its nature. If they didn't research the tool and its limitations, that's lazy. At some point, they stopped believing in this limitation and offloaded more of their thinking to it. Why did they stop? I can't think of a single reason other than being lazy. I don't accept the premise that it's because the tool responded quickly, confidently, and clearly. It did that the first 100 times they used it when they were probably still skeptical.Am I missing something?\n \nreply",
      "> I suspect most experienced professionals start with the premise that the LLM is untrustworthy due to its nature.Most people don't actually critically evaluate LLMs for what they are, and actually buy into the hype that it's a super-intelligence.\n \nreply",
      "Yeah, which I consider a form of intellectual laziness. Another reason to doubt that these professionals \"were not being lazy.\"\n \nreply",
      "> Participants weren\u2019t lazy. They were experienced professionals.Assuming these professionals were great critical thinkers until the AI came along and changed that is a big stretch.In my experience, the people who outsource their thinking to LLMs are the same people who outsourced their thinking to podcasts, news articles, Reddit posts, Twitter rants, TikTok videos, and other such sources. LLMs just came along and offered them opinions on demand that they could confidently repeat.> The scary part is that many users still believed they were thinking critically, because GenAI made them feel smartI don\u2019t see much difference between this and someone who devours TikTok videos on a subject until they feel like an expert. Same pattern, different sources. The people who outsource their thinking and collect opinions they want to hear just have an easier way to skip straight to the conclusions they want now.\n \nreply",
      "\"\"\"\u2022  Instead of forming hypotheses, users asked the AI for ideas.\u2022  Instead of validating sources, they assumed the AI had already done so.\u2022  Instead of assessing multiple perspectives, they integrated and edited the AI\u2019s summary and moved on.This isn\u2019t hypothetical. This is happening now, in real-world workflows.\"\"\"Amen, and OSINT is hardly unique in this respect.And implicitly related, philosophically:https://news.ycombinator.com/item?id=43561654\n \nreply",
      "Anyone using these tools would do well to take this article to heart.\n \nreply",
      "Reads like it was written by AI.\n \nreply",
      "One way to achieve superhuman intelligence in AI is to make humans dumber.\n \nreply",
      "The cultural revolution approach to AI.\n \nreply",
      "That\u2019s only if our stated goal is to make superhuman AI and we use AI at every level to help drive that goal. Point received.\n \nreply"
    ],
    "link": "https://www.dutchosintguy.com/post/the-slow-collapse-of-critical-thinking-in-osint-due-to-ai",
    "first_paragraph": "Dutch OSINT GuyNico DekensHomeAboutEventsBlogMoreOSINT used to be a thinking game. Now it\u2019s becoming a trusting game and that should terrify you.I\u2019ve seen it firsthand, analysts running solid investigations, then slowly shifting more and more of the thinking to GenAI tools. At first, it\u2019s small. You use ChatGPT to summarise a document or translate a foreign post. Then it\u2019s helping draft your reports. Then it\u2019s generating leads. And eventually, you\u2019re not thinking as critically as you used to. You\u2019re verifying less, questioning less, relying more.We tell ourselves we\u2019re \u201cworking smarter.\u201d But somewhere along the way, we stop noticing how much of the actual thinking is being offloaded.This isn\u2019t a rant against AI. I use it daily, ChatGPT, Copilot, Claude, Gemini. They\u2019re in my workflow like everyone else\u2019s. But the tradecraft is slipping. Analysts are skipping the hard parts. They\u2019re trusting GenAI to do the heavy cognitive lifting, and it\u2019s changing how we operate at a foundational leve"
  },
  {
    "title": "Overengineered Anchor Links (thirty-five.com)",
    "points": 249,
    "submitter": "matser",
    "submit_time": "2025-04-03T14:36:41 1743691001",
    "num_comments": 112,
    "comments_url": "https://news.ycombinator.com/item?id=43570324",
    "comments": [
      "As a backend person, sometimes I look at what's being done for front end stuff and pull back in ever so slight horror.It's an excellent article, and the work within is very well done, but there's a part of me that screams \"Why would you introduce this much complexity for what should be a simple scroll?\" (overcoming technical hurdles to produce the desired end result aside).\n \nreply",
      "I think the article does a pretty good job of explaining the gap between what can happen easily, and what a 110% over engineered \"perfect\" solution is to a UX problem.Building excellent user interfaces is hard, regardless of the technical stack. You have to sweat a lot of the finer details, break out of any platform default behaviour where appropriate, and over engineer something in service of building a 'delightful' user experience.Or, you can do as most do, and just not do this. #anchor-links with `scroll-behavior: smooth;` CSS will get you the basic smooth scrolling.\n \nreply",
      "The really hard part of that is that if you can\u2019t build an excellent interface, you will build a worse one than if you used the native interface. So you either need to be prepared to sweat every last detail forever.\n \nreply",
      "Frontend is completely inaccessible to me.From time to time I dip my toe in and try new things, but as productive as I can get with Astro, the illusion vanishes as soon as I have to understand any of the plumbing.Fortunately, I can still party like it\u2019s 1999 just fine:  just yesterday, I worked on a janky brutalist web app (the same way I did back in 2002, cribbing from the O\u2019Reilly \u201cDynamic HTML: the Definite Reference\u201d) and \u201cdeployed\u201d it with rsync to pico.sh.  It\u2019s practically unstyled and I didn\u2019t even use jquery, but it works.\n \nreply",
      "The thing is, backend stuff is largely solved. You need to store data? Here you go, here's a database. You need to process a bunch of strings for similarity? We got an algorithm for that.But frontend stuff is messy. How do you tell a person what they're trying to do is wrong and they need to change their inputs? Oh, maybe we can highlight the input or we can pop a modal message. Haha, psyche! Users ignore that shit! Now what you gonna do, buddy?Frontend is a mess because all you people are a mess.\n \nreply",
      "Contempt for your users inevitably leads to bad products so it\u2019s no wonder things are bad if this is the prevalent attitude among front end web developers.\n \nreply",
      "There's a difference between contempt (i.e. \"users are stupid\") and realism, though. And realism can range from \"users don't want to troubleshoot\" to \"some users are near-violently anti-tech and won't read errors\", depending on context.The unfortunate truth is that if you're doing B2C or even B2B outside of tech companies, the second one will often come up...Bad devs exist. Bad users do too. Thing is, you can't usually fire the bad users.\n \nreply",
      "> And realism can range from \"users don't want to troubleshoot\" to \"some users are near-violently anti-tech and won't read errors\", depending on context.No dude, I have things to do and your little software is a tiny roadblock in my day. I dont want to become a fellow expert in your niche, do the thing and get out of my way.Building UI for work and for consumers is completely different. I\u2019ve done both, user attitudes are veeeery different. Building an ecommerce page is also very different to building an engagement trap for users to sit in.Problems start when engineers/designers/producters don\u2019t understand their users and their goals. Or when the user is not also the customer (this is the worst)\n \nreply",
      "I don't read it as contempt but rather the equivalent of a backend engineer saying that you can't trust user inputs and need to validate, authenticate, and authorize every request.\n \nreply",
      "I agree with youIt reminds me of an online store in the beginning of 2000sTo buy a product, you had to drag&drop the product image over the shopping basket icon. It took me quite a while to figure that out, and I bet they lost a lot of customers.[Edit: I acknowledge that a PM or manager may have forced the developer to do this, but it's just one example of many]Sometimes the developers have to take the blame, instead of blaming \"stupid\" users. Some take that attitude to frameworks as well. If the users complain, they haven't understood how to use it correctly. Just look at the \"how to make a todos in 5min\" video on YouTube to be convinced of its beauty\n \nreply"
    ],
    "link": "https://thirty-five.com/overengineered-anchoring",
    "first_paragraph": "Anchor links are deceptively simple at first glance: click a button, scroll to the heading, and done. But if you ever had to implement them, you might have encountered the .\nThe issue being that, headings towards the bottom of the page can be too far down to scroll them to the desired position. The example component above shows how the \u2018conclusion\u2019 heading can never be reached.\nSurely this will be detrimental to the user experience. We need to come up with a solution. In this blog post, I\u2019ll show some of the solutions I\u2019ve come up with \u2014 from a hotfix all the way to unhinged. But before we do that, let\u2019s create a more . Here, we see a viewport moving down the page, with the trigger line being set at 25vh from the top of the viewport. This is what we\u2019ll use to visualize the different solutions.The most simple solution is to add  We calculate the height of the padding by taking the delta between the last\nheading and the lowest point the anchor trigger can reach. Perfect, right? Well, som"
  },
  {
    "title": "Senior Developer Skills in the AI Age (kiessling.net)",
    "points": 131,
    "submitter": "briankelly",
    "submit_time": "2025-04-03T18:47:24 1743706044",
    "num_comments": 99,
    "comments_url": "https://news.ycombinator.com/item?id=43573755",
    "comments": [
      "The premise might possibly be true, but as an actually seasoned Python developer, I've taken a look at one file: https://github.com/dx-tooling/platform-problem-monitoring-co...All of it smells of a (lousy) junior software engineer: from configuring root logger at the top, module level (which relies on module import caching not to be reapplied), over not using a stdlib config file parser and building one themselves, to a raciness in load_json where it's checked for file existence with an if and then carrying on as if the file is certainly there...In a nutshell, if the rest of it is like this, it simply sucks.\n \nreply",
      "The more I browse through this, the more I agree. I feel like one could delete almost all comments from that project without losing any information \u2013 which means, at least the variable naming is (probably?) sensible. Then again, I don't know the application domain.Also\u2026  def _save_current_date_time(current_date_time_file: str, current_date_time: str) -> None:\n    with Path(current_date_time_file).open(\"w\") as f:\n      f.write(current_date_time)\n\nthere is a lot of obviously useful abstraction being missed, wasting lines of code that will all need to be maintained.The scary thing is: I have seen professional human developers write worse code.\n \nreply",
      "> I feel like one could delete almost all comments from that project without losing any informationI far from a heavy LLM coder but I\u2019ve noticed a massive excess of unnecessary comments in most output. I\u2019m always deleting the obvious ones.But then I started noticing that the comments seem to help the LLM navigate additional code changes. It\u2019s like a big trail of breadcrumbs for the LLM to parse.I wouldn\u2019t be surprised if vibe coders get trained to leave the excess comments in place.\n \nreply",
      "It doesn't hurt that the model vendors get paid by the token, so there's zero incentive to correct this pattern at the model layer.\n \nreply",
      "At the very least, if a professional human developer writes garbage code you can confidently blame them and either try to get them to improve or reduce the impact they have on the project.With AI they can simply blame whatever model they used and continually shovel trash out there instantly.\n \nreply",
      ">The scary thing is: I have seen professional human developers write worse code.This is kind of the rub of it all. If the code works, passes all relevant tests, is reasonably maintainable, and can be fitted into the system correctly with a well defined interface, does it really matter?  I mean at that point its kind of like looking at the output of a bytecode compiler and being like \"wow what a mess\". And it's not like they can't write code up to your stylistic standards, it's just literally a matter of prompting for that.\n \nreply",
      "> If the code works, passes all relevant tests, is reasonably maintainable, and can be fitted into the system correctly with a well defined interface, does it really matter?You're not wrong here, but there's a big difference in programming one-off tooling or prototype MVPs and programming things that need to be maintained for years and years.We did this song and dance pretty recently with dynamic typing. Developers thought it was so much more productive to use dynamically typed languages, because it is in the initial phases. Then years went by, those small, quick-to-make dynamic codebases ended up becoming unmaintainable monstrosities, and those developers who hyped up dynamic typing invented Python/PHP type hinting and Flow for JavaScript, later moving to TypeScript entirely. Nowadays nobody seriously recommends building long-lived systems in untyped languages, but they are still very useful for one-off scripting and more interactive/exploratory work where correctness is less important, i.e. Jupyter notebooks.I wouldn't be surprised to see the same pattern happen with low-supervision AI code; it's great for popping out the first MVP, but because it generates poor code, the gung-ho junior devs who think they're getting 10x productivity gains will wisen up and realize the value of spending an hour thinking about proper levels of abstraction instead of YOLO'ing the first thing the AI spits out when they want to build a system that's going to be worked on by multiple developers for multiple years.\n \nreply",
      "> those small, quick-to-make dynamic codebases ended up becoming unmaintainable monstrositiesIn my experience, type checking / type hinting already starts to pay off when more than one person is working on an even small-ish code base. Just because it helps you keep in mind what comes/goes to the other guy's code.\n \nreply",
      "Yep, I've seen type hinting even be helpful without a type checker in python. Just as a way for devs to tell each other what they intend on passing. Even when a small percent of the hints are incorrect, having those hints there can still pay off.\n \nreply",
      "And in my experience \"me 3 months later\" counts as a whole second developer that needs accommodating. The only time I appreciate not having to think about types is on code that I know I will never, ever come back to\u2014stuff like a one off bash script.\n \nreply"
    ],
    "link": "https://manuel.kiessling.net/2025/03/31/how-seasoned-developers-can-achieve-great-results-with-ai-coding-agents/",
    "first_paragraph": "The Log Book of Manuel Kie\u00dflingThe Log Book of Manuel Kie\u00dflingCovers topics on architecting, building, deploying and running software and systems for the web based on open source tools with lean methodologies.Over the past few months, I have been experimenting with AI-powered coding tools in both my personal and professional projects. The experience has been overwhelmingly positive, both for me and my team of software engineers at work.We\u2019ve achieved better results in less time, and in many cases, the quality of our output has significantly improved.Interestingly, this experience contrasts with the feedback I\u2019ve received from some fellow software developers who report that AI tools aren\u2019t working well for them.I\u2019m now convinced that AI-assisted software development has the potential to elevate our craft to the next level in terms of productivity. This is why I believe our community should embrace it sooner rather than later \u2014 but like all tools and practices, with the right perspective"
  },
  {
    "title": "Supervisors often prefer rule breakers, up to a point (aom.org)",
    "points": 54,
    "submitter": "rustoo",
    "submit_time": "2025-04-02T10:13:48 1743588828",
    "num_comments": 27,
    "comments_url": "https://news.ycombinator.com/item?id=43555220",
    "comments": [
      "Fundamentally, rules almost always come with compromises \u2014 for the sake of making rules understandable by humans, they have to be relatively simple. Simple rules for complex situations will always forbid some amount of good behaviour, and allow some bad behaviour. Many of society's parasites live in the space of \"allowable bad behaviour\", but there is a lot of value to knowing how to exploit the \"forbidden good behaviour\" space.\n \nreply",
      "Example?\n \nreply",
      "A more palatable phrasing, \"supervisors prefer people that engage with the rules with purpose.\"  That is, choosing to break a rule because you are making a cost call based on what you were able to achieve is not, necessarily, a bad thing.The \"point\" where this fails, of course, is where the \"cost\" call above is such that the supervisor can't agree.\n \nreply",
      "You sound like a supervisor there ;)\u201cThey didn\u2019t break the rule! They engaged in the rules with purpose unlike those rule followers.\u201dThough I\u2019m not advocating your approach is incorrect.\n \nreply",
      "Worse, I'm a parent! :D\n \nreply",
      "Someone who follows the rule even when it produces a terrible outcome is a painful liability. Just like someone who breaks the rule to do the same thing.\n \nreply",
      "Hard to see the negatives.  Rule breakers allow you to reap the rewards while removing liability.\n \nreply",
      "Every supervisor ever: Look my team is just an awesome team that achieves all goals by breaking rules. I was the fearless leader to lead them.Same supervisor when caught breaking rules: Rogue employee. Nothing to do with me. Will fire them.\n \nreply",
      "Good point. Though if they change the rules after breaking them, will history remember?Looking at uber, any number of social media companies, etc., having some good lobbyists works wonders.\n \nreply",
      "This study is about the NHL, hardly applicable to other contexts.\n \nreply"
    ],
    "link": "https://journals.aom.org/doi/10.5465/amd.2022.0280.summary",
    "first_paragraph": ""
  },
  {
    "title": "Was Houdini a Spy? (2021) (cia.gov)",
    "points": 32,
    "submitter": "carlos-menezes",
    "submit_time": "2025-04-03T21:48:06 1743716886",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=43575871",
    "comments": [
      "https://en.m.wikipedia.org/wiki/Jasper_MaskelyneA bit of flim-flam but I would argue he was better placed for his skills. Not an escapologist but in the room next door on stage doing misdirection.His war record is a bit mixed. I think he may have been a human version of \"carrots help night vision\"\n \nreply",
      "> In the 1950s, as part of the MKULTRA project, the Agency hired magician John Mulholland to teach young officers techniques of deception suitable for the field, such as smuggling assets out of East Germany during the Cold War in vehicles that resembled the magic boxes used in stage illusions.https://en.wikipedia.org/wiki/MKUltra says:> Project MKUltra[a] was a human experimentation program designed and undertaken by the U.S. Central Intelligence Agency (CIA) to develop procedures and identify drugs that could be used during interrogations to weaken individuals and force confessions through brainwashing and psychological torture.[1] The term MKUltra is a CIA cryptonym: \"MK\" is an arbitrary prefix standing for the Office of Technical Service and \"Ultra\" is an arbitrary word out of a dictionary used to name this project. The program has been widely condemned as a violation of individual rights and an example of the CIA's abuse of power, with critics highlighting its disregard for consent and its corrosive impact on democratic principles.[2]I would guess the goal of this fluffy article is to promote positive domestic perceptions of the CIA.But did they really have to shout out some keyword that's associated with some of the craziest publicly-known things that the CIA did, without acknowledging, oh yeah, some bad stuff happened?And is now the time to be clouding past lessons learned by the US, about insane rogue elements in government, sabotaging our ideals from within?\n \nreply",
      "Good 3 part podcast on Houdini: https://timharford.com/2025/03/cautionary-tales-houdini-magi...\n \nreply",
      "> Similarly, magician and paranormal debunker James Randi commented, \u201cIf Houdini had been a spy that would have gotten out. He never would have been able to sit on it.\u201dIf Josephine Baker was a spy, why not Houdini?\n \nreply",
      "She was in a war in a way Houdini was not so their circumstances were rather different.\n \nreply",
      "Houdini died on Halloween right after performing at the Garick theatre in Detroit.  As a result he is remembered on each Halloween.  When I was a kid there would be magic shows on that day.\n \nreply",
      "He has a cool museum in Appleton too\n \nreply"
    ],
    "link": "https://www.cia.gov/stories/story/was-houdini-a-spy/",
    "first_paragraph": "October 29, 2021Innovation and TechThe world\u2019s most famous magician, Harry Houdini, was known as a celebrity conjurer, a practitioner of escape magic, and a master illusionist. He\u2019s had an enduring legacy on the magical arts since his untimely demise on Halloween Day, 1926. That\u2019s why October 31st is known in magical circles as \u201cNational Magic Day\u201d or simply \u201cHoudini Day.\u201dIn honor of this legendary magician, we\u2019re exploring the effect magic, and even Houdini, has had in the realms of intelligence and espionage.Harry Houdini, courtesy of the Library of CongressIt may surprise people to learn that Houdini\u2019s magical techniques have influenced generations of clandestine officers. We even had a former CIA deputy director who was a magician himself!But was Houdini more than just an influential figure?Was he ever a practitioner in the art of espionage?Was he a spy?To answer these questions, we must first delve into the mystery of the missing magic manuals of Langley and the CIA\u2019s first magici"
  },
  {
    "title": "New nanoparticle therapies target two major killers (science.org)",
    "points": 43,
    "submitter": "rbanffy",
    "submit_time": "2025-03-31T14:18:52 1743430732",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=43535352",
    "comments": [
      "I suppose we'll have to hope researchers overseas complete the work.https://arstechnica.com/health/2025/03/federal-funding-for-m...> Federal support for mRNA vaccine research appears in jeopardy after KFF Health News reported Sunday that officials at the National Institutes of Health have directed scientists to remove all references to the lifesaving technology from their grant applications. All such research is now under direct scrutiny from health secretary and long-time anti-vaccine advocate Robert F. Kennedy Jr.\n \nreply",
      "Chinese scientists under the steadfast leadership of the communist party of China will gladly undertake this important scientific research.\n \nreply",
      "There is a point to be made in favor of political stability.One of the great things in Ireland is the list-based voting that punishes extreme viewpoints and policies. OTOH, sometimes we need politicians willing to make unpopular choices, and our system makes that more difficult.China, IIRC, has a different concept, one where a person can't be a candidate to a position more than one level higher than the highest one they were previously elected for. This prevents anomalies like Trump, and seems to be a very sensible approach (if coupled with a couple extra freedoms and multiple parties).\n \nreply",
      "Science and AAAS are killers?\n \nreply",
      "That's how I read the headline at first.\n \nreply",
      "so how long until clinical deployment?\n \nreply",
      "in mice\n \nreply"
    ],
    "link": "https://www.science.org/content/article/new-nanoparticle-therapies-target-two-major-killers",
    "first_paragraph": ""
  },
  {
    "title": "The cultural evolution of distortion in music (royalsocietypublishing.org)",
    "points": 30,
    "submitter": "anigbrowl",
    "submit_time": "2025-04-03T21:03:46 1743714226",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=43575379",
    "comments": [
      "\u201cWhatever you now find weird, ugly, uncomfortable and nasty about a new medium will surely become its signature. CD distortion, the jitteriness of digital video, the crap sound of 8-bit - all of these will be cherished and emulated as soon as they can be avoided. It\u2019s the sound of failure: so much modern art is the sound of things going out of control, of a medium pushing to its limits and breaking apart. The distorted guitar sound is the sound of something too loud for the medium supposed to carry it. The blues singer with the cracked voice is the sound of an emotional cry too powerful for the throat that releases it. The excitement of grainy film, of bleached-out black and white, is the excitement of witnessing events too momentous for the medium assigned to record them.\u201d\n - Brian Eno, 1996\n \nreply",
      "There\u2019s a nostalgic aspect to lots of music. The errors we grew up with do become nostalgic. (And other sounds\u2014what kind of a dead-hearted monster doesn\u2019t get a little happy to hear the first couple seconds of GSM interference noise? It\u2019s so jaunty, how has nobody worked that into some techno?). It reminds us of how things were when we were so cool that we could only afford junk.Nostalgia is cheap of course, but some times cheap things make us happy and that\u2019s fine.\n \nreply",
      "Or simply we just like things that have some noise.\n \nreply",
      "> for an electric guitar, a triangle waveThat is only true when the string is plucked exactly at the middle - not a regular occurrence. Usually it's more of a sawtooth wave, just without the upper harmonics.My experience with distortion in guitars is that a huge component here is how different it can sound depending on articulation. Some pieces for example require the player to not alternate their picking, but pluck only in one direction, as the difference is audible.This is not always the case of course as some amplifiers like those made by Mesa Boogie get their signature tone by exploiting the limited gain-bandwidth product(GBP) of amplifiers, creating an even sound that at the high end of the gain setting is largely without dynamics.In some cases(like the BOSS DS-1) the manufacturer killed the sound by introducing a technically better amplifier chip - the original had somewhat poor GBP and poor settling time, which in combination produced a nice lowpass filter with a resonance peak at the cutoff frequency, which in turn emphasized articulation.It's all a surprisingly huge topic.\n \nreply",
      "Kudos to the author for writing an academic thesis on distortion in music, but it sure reads like an academic thesis rather than a statement about art.In contrast, I thoroughly enjoyed and resonated with this short conversation between Henry Rollins (Black Flag) and Don Was (President of the Jazz label Blue Note) about distortion in music:https://www.youtube.com/watch?v=2p6_WCqaucc\n \nreply",
      "Years ago, I hatched a theory, that one of the reasons my generation gravitated to rock and roll as teenagers, is that the sound of a distorted guitar closely resembles the sound of an engine, and is thus a symbol of freedom, just like getting one's driver's license.I shared this theory with my then-little-in-both-senses sister, who asked \"what, exactly, is distortion, in a musical sense?\"I trotted to my bedroom and retrieved Pink Floyd's Pulse. I popped disc 1 into the living-room CD player, cued up track 9 (Sorrow), and turned it up. We potched out onto the floor.https://www.youtube.com/watch?v=NO9Kp_Wn_2A\"Oh. Okay. Yeah, alright. I think I get it.\"\n \nreply"
    ],
    "link": "https://royalsocietypublishing.org/doi/10.1098/rstb.2024.0014",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: Hatchet v1 \u2013 a task orchestration platform built on Postgres (github.com/hatchet-dev)",
    "points": 53,
    "submitter": "abelanger",
    "submit_time": "2025-04-03T17:17:54 1743700674",
    "num_comments": 20,
    "comments_url": "https://news.ycombinator.com/item?id=43572733",
    "comments": [
      "This is very exciting stuff.I\u2019m curious: When you say FOR UPDATE SKIP LOCKED does not scale to 25k queries/s, did you observe a threshold at which it became untenable for you?I\u2019m also curious about the two points of:- buffered reads and writes- switching all high-volume tables to use identity columnsWhat do you mean by these? Were those (part of) the solution to scale FOR UPDATE SKIP LOCKED up to your needs?\n \nreply",
      "I'm not sure of the exact threshold, but the pathological case seemed to be (1) many tasks in the backlog, (2) many workers, (3) workers long-polling the task tables at approximately the same time. This would consistently lead to very high spikes in CPU and result in a runaway deterioration on the database, since high CPU leads to slower queries and more contention, which leads to higher connection overhead, which leads to higher CPU, and so on. There are a few threads online which documented very similar behavior, for example: https://postgrespro.com/list/thread-id/2505440.Those other points are mostly unrelated to the core queue, and more related to helper tables for monitoring, tracking task statuses, etc. But it was important to optimize these tables because unrelated spikes on other tables in the database could start getting us into a deteriorated state as well.To be more specific about the solutions here:> buffered reads and writesTo run a task through the system, we need to write the task itself, write the instance of that retry of the count to the queue, write an event that the task has been queued, started, completed | failed, etc. Generally one task will correspond to many writes along the way, not all of which need to be extremely latency sensitive. So we started buffering items coming from our internal queues and flushing them once every 10ms, which helped considerably.> switching all high-volume tables to use identity columnsWe originally had combined some of our workflow tables with our monitoring tables -- this table was called `WorkflowRun` and it was used for both concurrency queues and queried when serving the API. This table used a UUID as the primary key, because we wanted UUIDs over the API instead of auto-incrementing IDs. The UUIDs caused some headaches down the line when trying to delete batches of data and prevent index bloat.\n \nreply",
      "How does queue observability work in hatchet? I've used pg as a queueing system before, and that was one of my favorite aspects. Just run a few SQL queries to have a dashboard for latency/throughput/etc.But that requires you to keep the job history around, which at scale starts to impact performance.\n \nreply",
      "Yeah, part of this rewrite was separating our monitoring tables from all of our queue tables to avoid problems like table bloat.At one point we considered partitioning on the status of a queue item (basically active | inactive) and aggressively running autovac on the active queue items. Then all indexes for monitoring can be on the inactive partitioned tables.But there were two reasons we ended up going with separate tables:1. We started to become concerned about partitioning _both_ by time range and by status, because time range partitioning is incredibly useful for discarding data after a certain amount of time2. If necessary, we wanted our monitoring tables to be able to run on a completely separate database from our queue tables. So we actually store them as completely independent schemas to allow this to be possible (https://github.com/hatchet-dev/hatchet/blob/main/sql/schema/... vs https://github.com/hatchet-dev/hatchet/blob/main/sql/schema/...)So to answer the question -- you can query both active queues and a full history of queued tasks up to your retention period, and we've optimized the separate tables for the two different query patterns.\n \nreply",
      "i have been looking for something like this, the closest I could find by googling was celery workflow, i think you should do better marketing, I didn't even realize that hatchet existed!\n \nreply",
      "Why not fix all the broken doc links and make sure you have the full sdk spec down first, ready to go? Then drop it all at once, when it\u2019s actually ready. That\u2019s better and more respectful of users. I love the product and want y\u2019all to succeed but this came off as extremely unprofessional.\n \nreply",
      "Really appreciate the candid feedback, and glad to hear you like the product. We ran a broken links checker against our docs, but it's possible we missed something. Is there anywhere you're seeing a broken link?Re SDK specs -- I assume you mean full SDK API references? We're nearly at the point where those will be published, and I agree that they would be incredibly useful.\n \nreply",
      "Interesting! How does it compare with DBOS? I noticed it's not in the readme comparisons, and they seem to be trying to solve a similar problem.\n \nreply",
      "(DBOS co-founder here)  From a DBOS perspective, the biggest differences are that DBOS runs in-process instead of on an external server, and DBOS lets you write worklflows as code instead of explicit DAGs. I'm less familiar with Hatchet, but here's a blog post comparing DBOS with Temporal, which also uses external orchestration for durable execution: https://www.dbos.dev/blog/durable-execution-coding-compariso...\n \nreply",
      "> and DBOS lets you write worklflows as code instead of explicit DAGsTo clarify, Hatchet supports both DAGs and workflows as code: see https://docs.hatchet.run/home/child-spawning and https://docs.hatchet.run/home/durable-execution\n \nreply"
    ],
    "link": "https://github.com/hatchet-dev/hatchet",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        \ud83e\ude93 Run Background Tasks at Scale\n         \n\n\nHatchet Cloud\n    \u00b7\n    Documentation\n    \u00b7\n    Website\n    \u00b7\n    Issues\nHatchet is a platform for running background tasks, built on top of Postgres. Instead of managing your own task queue or pub/sub system, you can use Hatchet to distribute your functions between a set of workers with minimal configuration or infrastructure.Background tasks are critical for offloading work from your main web application. Usually background tasks are sent through a FIFO (first-in-first-out) queue, which helps guard against traffic spikes (queues can absorb a lot of load) and ensures that tasks are retried when your task handlers error out. Most stacks begin with a library-based queue backed by Redis or RabbitMQ (like Celery or BullMQ). But as your tasks become more complex, these queues become difficult "
  },
  {
    "title": "AI cheats: Why you didn't notice your teammate was cheating (niila.fi)",
    "points": 90,
    "submitter": "duckling23",
    "submit_time": "2025-04-03T20:25:04 1743711904",
    "num_comments": 74,
    "comments_url": "https://news.ycombinator.com/item?id=43574929",
    "comments": [
      "There must be some statistical method or honeypot method to reliably detect cheaters.  Like present the players with a bot who's purpose is to be un-hitt-able unless the player is cheating.  I don't know, there has to be a way.  Cheaters are disease in online gaming. I know that sensible people won't want to sacrifice their anonymity to provide ID to play a video game but if it is in the competitive scene and they are playing for money, surely it isn't a stretch to ask for ID and thus ultimate accountability.\n \nreply",
      "This is a thing, yes.  Statistical cheat-detection methods are more or less required for online chess, for example, because anyone can run Stockfish.  A lot of that came out of academia, so you can just find papers like this: https://cse.buffalo.edu/~regan/papers/pdf/RBZ14aaai.pdfThe techniques they use will always be a little secret-sauce, though, because anti-cheat is adversarial.  The best public anti-cheat mechanisms I know of are not technical anyway:- Play with friends or a small community that you trust not to cheat- Structure the game to remove incentives for cheating.  This is the entirety of how daily games like Wordle prevent cheating, but limits how competitive your game can be- Closely control and monitor the environment in which the game is played.  This is sometimes done at the ultra high end of competitive esports:  \"We provide the computer you will use.  You don't have the unsupervised access necessary to install a cheat.\"  The most common version of this, however, is in casinos.\n \nreply",
      "Also, have tools to record and replay games, and knowlegable moderators who can identify signs of cheating and ban offenders. This will count for a lot, even if someone can cheat well enough to appear highly skilled naturally (which almost always requires at least moderate skill at a game), it won't be quite so rage-inducing. This doesn't scale very well, though.\n \nreply",
      "> knowlegable moderators who can identify signs of cheating and ban offendersOh boy, this absolutely does not work for chess at high levels. Endless debates and arguments.Like this:https://www.reddit.com/r/chess/comments/1ctj85n/viih_sou_upd...A very good player invented a stupid opening and then somehow won a lot of games against top players with it, and chess.com decided he was cheating (without presenting evidence) and banned him. It really seems like he wasn't.\n \nreply",
      "These days aimbots are so sophisticated and able to include fuzzing, that it's virtually impossible to tell because they can mimic a player's movement, miss occasionally, etc.About the only cheat you can really identify is glass-walling, because usually people who do it eventually slip up and aim/shoot perfectly at someone they plainly cannot see.\n \nreply",
      "Really good players can get lucky pretty often because of game sense so even glass walling is hard to detect for certain if a player shoots through walls and kills their invisible opponent. We see this often even in pro play for tactical shooters.\n \nreply",
      "In the WarCraft 3 community they have a custom client and third-party ladder called W3Champions. It adds a few quality of life improvements like allowing you to not get matched against the same player again for 8 hours. But where it really shines is in the ability to moderate the community by banning bad actors. Some popular Twitch streamers tried out WC3 recently and in the official battle.net ladder they got players trolling them by making swastikas with towers or deliberately deboosting in order to snipe them. Once they switched to W3Champions the trolls all went away, but if any showed up they would get banned pretty quickly. One of the biggest benefits of building smaller communities is that it's actually possible to moderate them and elevate the gaming experience of everyone involved.\n \nreply",
      "Another example is Apex Legends. Watching creators on Twitch and it's a massive quality of play (and stream) change going from random matchmaking and playing matches with a small selection of people.\n \nreply",
      "Provided computers isn't part of \"ultra high end of competitive e-sports\" - it's pretty standard. The tourney just needs to pull enough eyeballs to interest a PC hardware company.Cheating still happens.https://www.youtube.com/watch?v=-z-kmSF5Qxk\n \nreply",
      "Haha, I cheat at Worlde all the time, losers!\n \nreply"
    ],
    "link": "https://niila.fi/en/ai-cheats/",
    "first_paragraph": ""
  },
  {
    "title": "Aviator (YC S21) is hiring engineers to build AI DevEx platform (ycombinator.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2025-04-03T21:08:31 1743714511",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.ycombinator.com/companies/aviator/jobs",
    "first_paragraph": "Google-level engineering productivity suiteWe build engineering productivity supertools that automate necessary-but-mundane developer workflows for customers like Bosch, Slack, Square, Figma, Benchling. With Aviator's productivity-oriented tools, engineers save up to 10 hours a week on their code-submission processes, testing processes and many other tasks.We\u2019re a well funded company, with significant enterprise revenue and notable Silicon Valley investors like Elad Gil, Lenny Rachitsky and others.The two founders are both ex-Googlers with backgrounds building engineering teams at several fast-growing silicon valley startups.\u00a9 2025 Y Combinator"
  },
  {
    "title": "Binary Distribution Rebuilds (josefsson.org)",
    "points": 5,
    "submitter": "JNRowe",
    "submit_time": "2025-03-31T12:22:27 1743423747",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://blog.josefsson.org/2025/03/31/on-binary-distribution-rebuilds/",
    "first_paragraph": "Simon Josefsson's blogI rebuilt (the top-50 popcon) Debian and Ubuntu packages, on amd and arm64, and compared the results a couple of months ago. Since then the Reproduce.Debian.net effort has been launched. Unlike my small experiment, that effort is a full-scale rebuild with more architectures. Their goal is to reproduce what is published in the Debian archive.One differences between these two approaches are the build inputs: The Reproduce Debian effort use the same build inputs which were used to build the published packages. I\u2019m using the latest version of published packages for the rebuild.What does that difference imply? I believe reproduce.debian.net will be able to reproduce more of the packages in the archive. If you build a C program using one version of GCC you will get some binary output; and if you use a later GCC version you are likely to end up with a different binary output. This is a good thing: we want GCC to evolve and produce better output over time. However it mean"
  },
  {
    "title": "Reasoning models don't always say what they think (anthropic.com)",
    "points": 312,
    "submitter": "meetpateltech",
    "submit_time": "2025-04-03T16:50:08 1743699008",
    "num_comments": 222,
    "comments_url": "https://news.ycombinator.com/item?id=43572374",
    "comments": [
      "The fact that it was ever seriously entertained that a \"chain of thought\" was giving some kind of insight into the internal processes of an LLM bespeaks the lack of rigor in this field. The words that are coming out of the model are generated to optimize for RLHF and closeness to the training data, that's it! They aren't references to internal concepts, the model is not aware that it's doing anything so how could it \"explain itself\"?CoT improves results, sure. And part of that is probably because you are telling the LLM to add more things to the context window, which increases the potential of resolving some syllogism in the training data: One inference cycle tells you that \"man\" has something to do with \"mortal\" and \"Socrates\" has something to do with \"man\", but two cycles will spit those both into the context window and lets you get statistically closer to \"Socrates\" having something to do with \"mortal\". But given that the training/RLHF for CoT revolves around generating long chains of human-readable \"steps\", it can't really be explanatory for a process which is essentially statistical.\n \nreply",
      ">internal concepts, the model is not aware that it's doing anything so how could it \"explain itself\"This in a nutshell is why I hate that all this stuff is being labeled as AI. Its advanced machine learning (another term that also feels inaccurate but I concede is at least closer to whats happening conceptually)Really, LLMs and the like still lack any model of intelligence. Its, in the most basic of terms, algorithmic pattern matching mixed with statistical likelihoods of success.And that can get things really really far. There are entire businesses built on doing that kind of work (particularly in finance) with very high accuracy and usefulness, but its not AI.\n \nreply",
      "While I agree that LLMs are hardly sapient, it's very hard to make this argument without being able to pinpoint what a model of intelligence actually is.\"Human brains lack any model of intelligence. It's just neurons firing in complicated patterns in response to inputs based on what statistically leads to reproductive success\"\n \nreply",
      "What's wrong with just calling them smart algorithmic models?Being smart allows somewhat to be wrong, as long as that leads to a satisfying solution. Being intelligent on the other hand requires foundational correctness in concepts that aren't even defined yet.EDIT: I also somewhat like the term imperative knowledge (models) [0][0]: https://en.wikipedia.org/wiki/Procedural_knowledge\n \nreply",
      "The problem with \"smart\" is that they fail at things that dumb people succeed at. They have ludicrous levels of knowledge and a jaw dropping ability to connect pieces while missing what's right in front of them.The gap makes me uncomfortable with the implications of the word \"smart\". It is orthogonal to that.\n \nreply",
      "> Human brains lack any model of intelligence. It's just neurons firing in complicated patterns in response to inputs based on what statistically leads to reproductive successThe fact that you can reason about intelligence is a counter argument to this\n \nreply",
      "> The fact that you can reason about intelligence is a counter argument to thisThe fact that we can provide a chain of reasoning, and we can think that it is about intelligence, doesn't mean that we were actually reasoning about intelligence. This is immediately obvious when we encounter people whose conclusions are being thrown off by well-known cognitive biases, like cognitive dissonance. They have no trouble producing volumes of text about how they came to their conclusions and why they are right. But are consistently unable to notice the actual biases that are at play.\n \nreply",
      "The ol' \"I know it when I see that it thinks like me\" argument.\n \nreply",
      "It seems like LLMs can also reason about intelligence. Does that make them intelligent?We don't know what intelligence is, or isn't.\n \nreply",
      "It's fascinating how this discussion about intelligence bumps up against the limits of text itself. We're here, reasoning and reflecting on what makes us capable of this conversation. Yet, the very structure of our arguments, the way we question definitions or assert self-awareness, mirrors patterns that LLMs are becoming increasingly adept at replicating. How confidently can we, reading these words onscreen, distinguish genuine introspection from a sophisticated echo?Case in point\u2026 I didn't write that paragraph by myself.\n \nreply"
    ],
    "link": "https://www.anthropic.com/research/reasoning-models-dont-say-think",
    "first_paragraph": ""
  },
  {
    "title": "A university president makes a case against cowardice (newyorker.com)",
    "points": 180,
    "submitter": "pseudolus",
    "submit_time": "2025-04-03T12:29:08 1743683348",
    "num_comments": 214,
    "comments_url": "https://news.ycombinator.com/item?id=43568655",
    "comments": [
      "https://archive.ph/a9ie5",
      "Oh hey, Wesleyan on HN! I\u2019m an alumnus (matriculated a year or two after Roth became president). Wesleyan has a rich history of activism and protest, and not always entirely peaceful (Roth\u2019s predecessor, Doug Bennet, had his office firebombed at one point).I\u2019ve had a few opportunities to speak with Roth since the Gaza war started, and I\u2019ve always found him particularly thoughtful about balancing freedom of expression with a need to provide a safe and open learning environment for everyone on campus. In particular, he never gave in to the unlimited demands of protestors while still defending their right to protest.In part, he had the moral weight to do that because\u2014unlike many university presidents\u2014he did not give in to the illiberal demands of the left to chill speech post-2020, which then were turned against the left over the past year.I don\u2019t see any particularly good outcome from any of this; the risk of damaging the incredibly successful American university system is high. Certainly smart foreign students who long dreamed of studying in the US will be having second thoughts if they can be arbitrarily and indefinitely detained.But I hope the universities that do make it through do with a stronger commitment to the (small l) liberal values of freedom of expression , academic freedom, and intellectual diversity.\n \nreply",
      "I don't see much talk of donors? My impression is that, as in many situations, the super-wealthy are forming a dominant class - as if it's their right - rather than respect democracy and freedom, and attacking university freedom. Didn't some person engineer the Harvard leader's exit?Roth says the Wesleyan board is supportive; maybe they are just lucky.\n \nreply",
      "Being a super wealthy alum is a prerequisite for being a Trustee, and University Trustees are the group that University Presidents report to.\n \nreply",
      "This is why I always have and always will prefer community colleges. Their boards are elected officials. Not perfect, but 1000 times better than just having wealth.\n \nreply",
      "Election is a bad way to choose almost anything. The enthusiasm of Americans for adding yet more elected roles rather than, say, having anything done by anybody competent is part of how they got here. The only place elections are even a plausible choice is political office - with an election and as close as you can to universal suffrage now the idiots running things are everybody's fault, although Americans even managed to screw that up pretty good. Sortition would probably be cheaper, but elections are fine for this purpose.\n \nreply",
      "democracy is bad but its still better than more autocratic systems because it encourages change which keeps succession well-oiled and also acts as a vent for tyranny to curtail its worst excesses. This applies as much to politics as it does a school board.\n \nreply",
      "A lot of Americans support these attacks on universities. Why do people harbour this much animosity towards these institutions? Is there anything they could have done differently in the past decade or two to have broader sympathy now, or is people's ambivalence towards elite universities 100% irrational?\n \nreply",
      "There are some reasons that I think you probably know, which don't receive enough time and attention1) Despite an appearance of being \"left leaning\" (according to polls of faculty political sentiment) they continue to gatekeep education behind prohibitively expensive tuition that is out of reach of lower economic strata without crippling debt, and have simultaneously struggled to produce graduates whose economic differential easily makes up for that expense and lost work time.2) They enjoy a tax free status while receiving significant tax money despite many failing to grow their student bodies in tandem with the growth of the US population, leading to people questioning whether they deserve those benefits as institutions that serve the public.3) There is a sentiment that basic literacy and numeracy of graduates has dropped over the last decades outside of a narrow area of studies, because of a shift to a model where students are customers buying a credential instead of getting an education.(These are all interrelated, of course.)\n \nreply",
      "I have multiple family members that are frustrated with higher learning because their children came out of the system more liberal-minded than when they entered. In this politically divided climate they feel like the university system \u201cstole\u201d their children from them.In reality I don\u2019t think people\u2019s political opinions change very much and they are just mad that their children individuated.\n \nreply"
    ],
    "link": "https://www.newyorker.com/news/q-and-a/a-university-president-makes-a-case-against-cowardice",
    "first_paragraph": "Last Friday could have passed for a lovely spring day on the Connecticut campus of Wesleyan University. Students with books and laptops dotted a green hillside; flocks of admissions visitors trailed tour guides; baseball season had just begun, and practice was under way. It was almost possible to forget the grim straits of American higher education in 2025.Colleges and universities have been early targets of the second Trump Administration. In the past month, the Administration has announced it will investigate diversity, equity, and inclusion efforts at more than fifty schools; cut hundreds of millions of dollars in federal funding from such institutions as Johns Hopkins and the University of Pennsylvania; and sought to deport international students involved in pro-Palestinian activism. Columbia received a letter from the federal government issuing demands\u2014which included making changes to discipline and admission policies, and placing the department of Middle East, South Asian, and Af"
  },
  {
    "title": "Microsoft reports several bootloader vulnerabilities (microsoft.com)",
    "points": 19,
    "submitter": "hacknslack",
    "submit_time": "2025-03-31T18:25:35 1743445535",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=43538073",
    "comments": [
      "Nice to see Microsoft boosting open source operating system practices. (May be a little anti monopoly politicking, ahem.)Makes me trust open source operating systems more!\n \nreply",
      "It\u2019s not an article about vulnerable boot loaders.  It\u2019s an ad for their AI offering.  That they turned their AI loose on some boot loaders is not material to the intended affect of the ad.\n \nreply",
      "Did you read the OP link ? They go in far more details than just presenting what they did with AI, and they actually found several exploitable vulnerabilities, not just with AI, but with other techniques such as code analyzing or fuzzing.AI is in he title, but the content is not entirely revolving around it.\n \nreply"
    ],
    "link": "https://www.microsoft.com/en-us/security/blog/2025/03/31/analyzing-open-source-bootloaders-finding-vulnerabilities-faster-with-ai/",
    "first_paragraph": "By leveraging Microsoft Security Copilot to expedite the vulnerability discovery process, Microsoft Threat Intelligence uncovered several vulnerabilities in multiple open-source bootloaders, impacting all operating systems relying on Unified Extensible Firmware Interface (UEFI) Secure Boot as well as IoT devices. The vulnerabilities found in the GRUB2 bootloader (commonly used as a Linux bootloader) and U-boot and Barebox bootloaders (commonly used for embedded systems), could allow threat actors to gain and execute arbitrary code.Using Security Copilot, we were able to identify potential security issues in bootloader functionalities, focusing on filesystems due to their high vulnerability potential. This approach saved our team approximately a week\u2019s worth of time that would have otherwise been spent manually reviewing the content. Through a series of prompts, we identified and refined security issues, ultimately uncovering an exploitable integer overflow vulnerability. Copilot also a"
  },
  {
    "title": "How Servo Motors Work (jameco.com)",
    "points": 49,
    "submitter": "kaycebasques",
    "submit_time": "2025-04-03T19:18:08 1743707888",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43574125",
    "comments": [
      "I\u2019ve noticed that distributors  (Jameco, Mouser, etc) have a surprising number of introductory education articles. I\u2019ve seen this pattern on websites for car dealerships and HVAC installers, so I assumed it was for SEO purposes. But electronic parts distribution seems like a much more niche audience; why bother with SEO?\n \nreply",
      "I think it's just a tradition in the electronics world to write and publish hobby and educational articles. It dates back to well before the the Internet. People enjoy this interaction, and the distributors give them space for it.People like HVAC installers -- I've seen most of that on YouTube, where there's a chance of monetizing the content. I've repaired nearly every appliance in my house, thanks to blogs and videos posted by strangers.\n \nreply",
      "Indeed. Vancouver Carpenter got me through a minor drywall repair job.\n \nreply",
      "It brings you to their site as well as advertises a specific component or range of components from a manufacturer.The Digikey articles I've come across are well written. This article however is artificially inflated using SEO style writing. I mean after they supposedly explained servo motors you'll find this ugly sentence further down: \"Still, how does a servo motor work?\" I mean holy shit man, do you even care about your writing or the subject? Likely not. And really, the article is so light on details its barely technical and only talks about the RC servo. This is pretty much junk.\n \nreply",
      "Electronics distributors have published educational material for decades. Knowing how something works and how to choose the best option reduces their support burden and itself a form of marketing.Omega Engineering used to (still does?) publish a set of absolutely massive hardcover catalogs on sensors and industrial controls that contained detailed tutorials and theory of operation. In some cases, they published entire books devoted to teaching you how stuff worked. Their Temperature Sensors Handbook always had a place on my bookshelf for many years.\n \nreply",
      "If I recall correctly these pages are useful for teachers and students, and Jameco has relatively high-touch education sales (for example, their kitting program: https://www.jameco.com/Jameco/workshop/education-center/educ...).I want to say that I remember seeing this page in high school in the late 00s, although the Internet Archive only seems to go back to 2012 for this exact URL.\n \nreply",
      "This reminds me that Monoprice used to have a \"knowledge base\" for many of their products.  I don't remember if they were just written directly on an item's page, or if there was a link to the relevant article, but it was very informative.\n \nreply",
      "Is it this? I didn't know about it until your post.https://help.matterhackers.com\n \nreply",
      "Some may be application notes from the manufacturers.Jameco also supplies mid level engineering firms, so similar to application notes. Think automation integration company buying xyz specialty robotics controller.I think of mouser as more like digikey, so I don't really know why they would have similar educational information above the level of PCB board component. But, they may also have business in the low-quantity higher margin business.Tldr: not seo. Customers actually need to know about the product\n \nreply",
      "Exactly,  as one of their target audience I'm not searching for them, I know who they are.  I go to their website regularly and articles like these are how I find out about new stuff and how to use it.\n \nreply"
    ],
    "link": "https://www.jameco.com/Jameco/workshop/Howitworks/how-servo-motors-work.html",
    "first_paragraph": ""
  },
  {
    "title": "How Big Is VMS? \u2013 VMS Software, Inc (vmssoftware.com)",
    "points": 30,
    "submitter": "rbanffy",
    "submit_time": "2025-04-03T18:46:20 1743705980",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=43573738",
    "comments": [
      "Is there any reason to use VMS today other than for existing applications that cannot be migrated? I've heard its reliability is legendary, but I've never tried it myself. The 1 year licensed VM seems excessively annoying. Is it just old and esoteric, or does it still have practical use? At least with Linux, multiple vendors release and support distros and it is mainstream, whereas with VMS, you'd be stuck with VSI.\n \nreply",
      "I was actually surprised to see that there's been a release in the last 12 months - I had thought it was dead.I used it extensively in the late 90's early 00's and really liked it. As a newb sysadmin at the time, the built-in versioning on the fs saved me from more than one self-inflicted fsck up.I can't imagine there would be any green-field deployments in the last 10 years or so - I'm guessing it's just supporting legacy environments.\n \nreply",
      "> I had thought it was dead.HP tried to kill it.  Somewhere in the neighborhood of 10 years ago they announced the EOL.  This company - VMS Software Inc (VSI) was formed specifically to buy the rights and maintain/port it.  So you have an interesting situation.Old VAX and Alpha systems are supported, supposedly indefinitely, but if you have an Itanium system it has to be newer than a certain age.  HP didn\u2019t sell the rights to support the older Itaniums, and no longer issues licenses for them. So there is a VMS hardware age gap.  Really old is ok.  Really new is ok.\n \nreply",
      "MCP and MVS (now called z/OS) are all still supported. Not sure whether MCP still receives updates though.\n \nreply",
      "Right, but z/OS is part of a larger longer-running hardware strategy that, with virtualization, serves the needs of mixed-OS workloads and multi-decade tenures overseeing 24/7 systems.The corpse of OpenVMS on the other hand is being reanimated and tinkered with, presumably paid for by whatever remaining support contracts exist, and also presumably to keep the core engineers occupied with inevitably fruitless busywork while occasionally performing the contractually required on-call technomancy on the few remaining Alpha systems.VMS is dead... and buried, deep.It's a shame it can't be open-sourced, just like Netware won't be open-sourced, and probably has less chance of being used for new projects than RiscOS or AmigaOS.\n \nreply",
      "It's fun for hobbyists! The first multi-user system I used happened to be a VAX/VMS system, so it brings me back to my youth. I have a VAX running in simh, complete with compilers. The release, VMS 7.3, is almost 25 years old.\n \nreply",
      "I used it a bit at University - most notably it had an Occam system on it that wasn't available on the Sun workstations.I'm curious about running a VMS system although the admin side looks a bit daunting.  The thing I'd really like to do is run X-Windows on an emulator on my home lab, just to see it run.\n \nreply",
      "I had an Alpha AXP 150 workstation on my desk for a while, it ran X11 applications fine with no source changes required.\n \nreply",
      "There is a pretty good amount of operation-critical stuff like power plants (especially nuclear), radars, traffic management and various finance/insurance/airline services that operate on VMS afaik. Something about very reliable cluster-native operations, or so it would seem. 90's cloud-native.\n \nreply",
      "No.  Most of the good stuff was lifted into Windows NT decades ago.  The rest has been far surpassed over the same time period by Linux and others.It's interesting in a \"what if/parallel universe\" kind of way, but I certainly wouldn't touch it for anything new with that licensing.\n \nreply"
    ],
    "link": "https://vmssoftware.com/resources/blog/2025-03-31-how-big-is-vms/",
    "first_paragraph": "This question was asked during my Boot Camp presentation last fall in Boston, and over the past 35 years dozens of times people have asked, how big is VMS? That translates into \"how many lines of code are in VMS\"? I thought it was time to at least make a stab at pursuing some insight into the answer. I wrote some command procedures to count the number of source lines in .B32, .B64, .C, .MAR, .M64, and .S files. Not counted are blank lines and lines beginning with the standard comment characters and miscellaneous directives for the particular language.First, I needed a baseline definition of  'VMS'.I said 'no' to all of the above and as a starting point chose 15 facilities which are representative of identifiable components of the system: ACPI , AUDSRV, CLUSTER, DCL, DRIVER, F11X, JOBCTL, LAN, PCSI, RMS, SCSI, SDA, SHADOWING, SYS, XFC.I chose the following releases for comparison:The LINES.COM procedure, which invokes a set of nested procedures, fetches all of the source files with the "
  }
]