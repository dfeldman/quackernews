[
  {
    "title": "Resizable Structs in Zig (tristanpemble.com)",
    "points": 75,
    "submitter": "rvrb",
    "submit_time": "2025-07-26T21:43:57 1753566237",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=44697131",
    "comments": [
      "> Zig does not, and will not, have VLAs in the language spec. Instead, you can allocate a slice on the heap. If you want to have the data on the stack, use an array as a bounded backing store, and work with a slice into it[.]Too bad, aligned byte-typed VLAs (and a license to retype them as a struct) are what you need to get stack allocation across ABI boundaries the way Swift does it. (A long long time ago, SOM, IBM\u2019s answer to Microsoft\u2019s COM, did this in C with alloca instead of VLAs, but that\u2019s the same thing.) I guess I\u2019ll have to use something else instead.reply",
      "Note that not having runtime-known stack allocations is a key piece of the puzzle in Zig's upcoming async I/O strategy because it allows the compiler to calculate upper bound stack usage for a given function call.At a fundamental level, runtime-known stack allocation harms code reusability.Edit: commenters identified 2 more puzzle pieces below, but there's still one that didn't get asked about yet :Preply",
      "> Note that not having runtime-known stack allocations is a key piece of the puzzle in Zig's upcoming async I/O strategy because it allows the compiler to calculate upper bound stack usage for a given function call.That\u2019s a genuinely interesting point. I don\u2019t think known sizes for locals are a hard requirement here, though threading this needle in a lower-level fashion than Swift would need some subtle language design.Fundamentally, what you want to do is construct an (inevitably) runtime-sized type (the coroutine) out of (by problem statement) runtime-sized pieces (the activation frames, itself composed out of individual, possibly runtime-sized locals). It\u2019s true that you can\u2019t then allow the activations to perform arbitrary allocas. You can, however, allow them to do allocas whose sizes (and alignments) are known at the time the coroutine is constructed, with some bookkeeping burden morally equivalent to maintaining a frame pointer, which seems fair. (In Swift terms, you can construct a generic type if you know what type arguments are passed to it.) And that\u2019s enough to have a local of type of unknown size pulled in from a dynamic library, for example.Again, I\u2019m not sure how a language could express this constraint on allocas without being Swift (and hiding the whole thing from the user completely) or C (and forcing the user to maintain the frames by hand), so thank you for drawing my attention to this question. But I\u2019m not ready to give up on it just yet.> At a fundamental level, runtime-known stack allocation harms code reusability.This is an assertion, not an argument, so it doesn\u2019t really have any points I could respond to. I guess my view is this: there are programs that can be written with alloca and can\u2019t be written without (unless you introduce a fully general allocator, which brings fragmentation problems, or a parallel stack, which is silly but was in fact used to implement alloca historically). One other example I can give in addition to locals of dynamically-linked types is a bytecode interpreter that allocates virtual frames on the host stack. So I guess that\u2019s the other side of being opinionated\u2014those whose opinions don\u2019t match are turned away.Frankly, I don\u2019t even know why I\u2019m defending alloca this hard. I\u2019m not actually happy with the status quo of just yoloing a hopefully maybe sufficiently large stack. I guess the sticking point is that you seem to think alloca is obviously the wrong thing, when it\u2019s not even close to obvious to me what the right thing is.reply",
      "Alloca is a fundmentally insecure way of doing allocations. Languages that promote alloca will find themselves stuck in a morass of security messes and buffer overflows. If Zig were to adopt alloca, it would make the catastrophic mistake that plagued C for over several decades and introduce permanently unfixable security issues for another generation of programming languages.reply",
      "> there's still one that didn't get asked about yet :PC libraries?reply",
      "Or function pointers (especially given that Zig's been moving towards encouraging vtables over static dispatch)?reply",
      "Bingo. That completes the picture: https://github.com/ziglang/zig/issues/23367reply",
      "How does this work given... recursion?Even on languages without VLAs one can implement a simulacra of them with recursion.reply",
      "All Zig code is in one compilation unit, so the compiler has access to the entire function call graph. Cycles in the graph (recursion) cause an error. To break cycles in the graph, one must use a language builtin to call a function using a different stack (probably obtained via heap allocation).reply",
      "Does this mean it's impossible in Zig to do strictly Stack related recursion and just by the mere inclusion of a recursive function your implicitly getting heap allocations alongside?reply"
    ],
    "link": "https://tristanpemble.com/resizable-structs-in-zig/",
    "first_paragraph": "July 26, 2025In this post I will make the case for the concept of a \u201cruntime resizable struct\u201d in Zig. I will then design an API by exploiting Zig\u2019s powerful comptime functionality.If you want to skip straight to the implementation, a minimal proof of concept is available as a package on GitHub.Arrays and many-item pointersZig has support for many kinds of collection types in its standard library. All of them can broadly be broken down to two primitive backing types for contiguous data storage:[N]T \u2013 arrays, when you always know the length at compile time.[*]T \u2013 many-item pointers, when you may not know the length at compile time.You may be wondering about slices. Slices can be thought of as syntax sugar around a many-item pointer and a length:// A desugared slice type\nconst PersonSlice = struct {\n    ptr: [*]Person,\n    len: usize,\n};\nOnce you allocate the slice, you can\u2019t grow or shrink its memory without reallocating. That\u2019s why we have std.ArrayList, which is just a wrapper around "
  },
  {
    "title": "Personal aviation is about to get interesting (2023) (elidourado.com)",
    "points": 34,
    "submitter": "JumpCrisscross",
    "submit_time": "2025-07-26T23:03:26 1753571006",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=44697590",
    "comments": [
      "For those not tracking: this article is about the MOSAIC rules, which the FAA announced this week is now approved (Final Rule).  In 90 days the new Sport Pilot rules will go into effect and allow Sport Pilots (a certification less stringent than Private Pilot) the ability to fly aircraft of much higher performance.  Over the next year, new certification rules will go into effect allowing manufacturers to manufacture much more high performance aircraft under the Light Sport rules.  There are some details, but the big picture is that the allowable performance for these \u201centry level\u201d classes just got a lot higher.Is it good? Well, a lot of people are cheering the change.  The FAA doesn\u2019t normally make things easier for the average Joe.  This will make it easier for an inexperienced (but still fairly wealthy) pilot to get their hands on a real hot rod of a plane. There\u2019s probably some additional risk, but the FAA has clearly recognized that one of the biggest dangers too flying a high performance aircraft is having to land fast.  200 kts vs 100 kts doesn\u2019t make a big difference in risk in straight and level flight, but landing at 80 kts vs 55 kts does make a difference.I don\u2019t know where I stand exactly.  It\u2019s a big jump.  Surely this is going to cause some old geezer to be screaming through a congested area and not be able to keep up with the ATC traffic calls because he\u2019s never gone this fast before, and he\u2019ll have a midair collision.  Surely this is going to cause someone to buy a \u201clight sport\u201d aircraft with 280 hp and a huge prop and they\u2019re going to crash taking off.  But I think that overall I\u2019m just being overly cautious, and most Sport Pilots are too poor to afford a plane that burns 15 gallons of avgas an hour, so most of the new planes under MOSAIC won\u2019t be that powerful.  I am curious to see what kind of new aircraft become available, and what the long term safety impacts will be.Edit: for about five minutes my post said \u201cnot approved\u201d when I meant to type that MOSAIC is \u201cnow approved\u201dreply",
      "I\u2019m going to add a list of things that I think are going to be cool to see:- New engine options.  Previously getting an engine certified was a big expense, so there wasn\u2019t a lot of advancement.  Now I think that higher performing Light Sport aircraft can be made with non-certified engines or components.  All electronic ignitions, variable valve timing, electronic fuel injection, it\u2019s all on the table now, and it gets to exist in a factory manufactured plane, not just experimentals.- New avionics.  The light sport category got to put some neat digital avionics in their panels because they weren\u2019t certified.  They had portable ADS-B transmitters that were legal.  These options will now be open to faster planes too.- Importing light sports from around the world.  Lots of European light sport planes couldn\u2019t be imported in the past because they weren\u2019t certified but were too fast for American light sport rules.  Now a lot of them will be able to be imported as soon as the rules allow.- Cheaper complex trainers.  Allowing variable pitch props and retractable gear in the light sport category will hopefully  mean there will be a plane that comes along that allows you to build time in the complex category without spending the money that usually comes with these types of planes.- there\u2019s probably a bunch of other things we\u2019ll see that I haven\u2019t thought of, and I am curious to see whatever that is as well.reply",
      "Any idea if the FAA will change the rules regarding having ADHD and a private pilots license?It's really disheartening to know that I'm not allowed to fly recreationally from time to time because I take a stimulant medication to help finish university.reply",
      "> landing at 80 kts vs 55 kts does make a differenceMost single-engine aircraft were already restricted to 61 knot stall speed (and I think all MOSAIC-eligible ones were).I\u2019m a big proponent of MOSAIC (as I was of BasicMed), even though the MOSAIC rule change won\u2019t directly help me.reply",
      "The precious light sport rules limited stall speeds to 45 kts.  Jumping to 59 kts for sport pilots adds a huge amount of aircraft to the allowable list for a sport pilot.reply",
      "Sport pilots can\u2019t operate in airspace requiring two-way radio communication, without separate instruction and endorsement. 14 CFR 61.315(c)(7)All pilots are limited to 200hp or less, and non-complex aircraft without separate instruction and endorsement. 14 CFR 61.31(e) & (f)https://www.ecfr.gov/current/title-14/chapter-I/subchapter-D...reply",
      "Wouldn\u2019t this problem be obviated by simply mandating sufficiently high third party liability insurance?Then it will be the much less likely to be gamed insurance market effectively deciding who gets to fly the higher performance aircraft.reply",
      "By and large the affordability will keep a lot of people from anything too high performance and dangerous.  But there will be a few dead doctors who weren\u2019t dissuaded by high premiums and high gas bills.reply",
      "The goal of regulation should not be \"make reckless endangerment expensive enough that only the plutocrats can afford to do it\".reply",
      "Can\u2019t support MOSAIC enough. I\u2019ve owned a composite LSA called a Flight Design for about 5 years, been in arguments with a lot of old timers about the safety aspects but I consider revolutionary and far safer than a certified aircraft than the statistics will tell you.For example it has a ballistic parachute that will bring the entire aircraft to the ground. Unlike the Lycomings and Continentals the engine wasn\u2019t designed in the 1950s. It\u2019s equipped with real time satellite weather, GPS autopilot, Avionics that would cost you $15-20k to put in a Cessna due to all the red tape.I will get a lot of heat for this but I think the FAA has killed a lot of people. If pilots had low cost access to things like glass cockpits, satellite weather, inexpensive autopilot, and a healthy ecosystem of cheap, modern aircraft with modern engines (Basic things like fuel injection) a lot of pilots might still be alive right now.reply"
    ],
    "link": "https://www.elidourado.com/p/personal-aviation",
    "first_paragraph": ""
  },
  {
    "title": "Asyncio: A library with too many sharp corners (sailor.li)",
    "points": 29,
    "submitter": "chubot",
    "submit_time": "2025-07-26T23:35:20 1753572920",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=44697761",
    "comments": [
      "the real problem is python, great at the start of a project, by the end i am dying to rewrite in java.reply",
      "Python needs a version 4 to make a clean break:- runtime optionally type checked interfaces- make depending on system python an antipattern- a reasonable package manager with lockfiles and transitive dependency versions- package org namespaces- steps towards hermetic builds with less linking against system libraries and dependencies- cleanup and slimming down of the standard library. Removal of cruft. Less \"batteries included\" so people lean more on packages and enforcing good practices with packages.reply",
      "uv solves or improves 2,3,5. (It's scary how often lately I find myself saying or seeing someone say that)---For posterity -    make depending on system python an antipattern\n\nuv is virtual env, uv managed python executable first, \nopt in to system python packages only    a reasonable package manager with lockfiles and transitive dependency versions\n\nuv.lock, check. I think base pip also has transitive dependencies, though, and has since 2020?    steps towards hermetic builds with less linking against system libraries and dependencies\n\nI know there's build isolation for dependencies in uv, I'm not sure it solves the problem you haveWhat is it you mean by package org namespaces?reply",
      "The latest versions of Python 3 already have or can do most of these things.reply",
      "They do not enforce it. It's not about \"can do\". It's about defaults and enforcing stricter standards.Python is too flexible. It produces sloppy code.And in no world are Python builds and dependencies solved. It's a major headache.reply",
      "If you want Python to be like TypeScript, why don't you just write a typescript then?reply",
      "Personally, I do; my only interactions with Python are unwilling (work or AI-related code). Given that I don't have much of a choice in the matter, I'd like to see Python improve as a language and as an ecosystem. I hope that one day I will not feel dread upon encountering it in the wild.reply",
      "Either python needs to be a language geared at code no longer than 1000 loc, or it needs tools to enable safely building large scale apps.reply",
      "Sounds like trading one problem for anotherreply",
      "idk maybe im old, but most of the high scale serious systems i have seen are in a language like java or c++. big important python systems are mostly from startups that succeeded and have trouble migrating offreply"
    ],
    "link": "https://sailor.li/asyncio",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: QuickTunes: Apple Music player for Mac with iPod vibes (furnacecreek.org)",
    "points": 29,
    "submitter": "albertru90",
    "submit_time": "2025-07-26T23:43:26 1753573406",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44697798",
    "comments": [
      "Modern player is not only about UIUX but also which music storage it supports, DLNA, Plex, Jellyfin, that\u2019s the main feature users will be checking. If it\u2019s just AppleMusic player.reply",
      "The name seems awfully close to QuickTune, another frontend to Apple Music.https://marioaguzman.github.io/quicktune/reply",
      "Reminiscent of Spot for Linux, another great shortcut-oriented streaming interface for those of you who ditched the Mac: https://github.com/xou816/spotreply"
    ],
    "link": "https://furnacecreek.org/quicktunes/",
    "first_paragraph": "QuickTunes is a simple and fast Apple Music client for macOS. It aims to bring the\n\t\t\t\t\t\tsimplicity of music players from the early 2000s like the iPod to your Mac. With QuickTunes, you\n\t\t\t\t\t\tcan easily drill into your playlists, albums, artists, and songs, pick something, and press\n\t\t\t\t\t\tPlay.\n\t\t\t\t\tThe app is optimized to make navigating your music library a breeze with buttery smooth\n\t\t\t\t\t\tscrolling, keyboard navigation, and multi-touch gestures. The beautiful floating player makes it\n\t\t\t\t\t\teasy to control the currently-playing song, skip songs, shuffle, repeat, and more.As you resize the app's main window, the layout adapts dynamically, so whether you prefer a\n\t\t\t\t\t\tsimple iPod-style layout or a multi-pane window, there's something for you. You can further\n\t\t\t\t\t\tcustomize the appearance of the app to suit your liking in the Settings window.If you want to quickly find a song, album, or playlist, just hit \u2318F to bring up a floating\n\t\t\t\t\t\tSpotlight-style search box. You can search eithe"
  },
  {
    "title": "Epic Recall, Epic Fail (taipology.substack.com)",
    "points": 65,
    "submitter": "hunglee2",
    "submit_time": "2025-07-26T21:17:35 1753564655",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=44696973",
    "comments": [
      "> bushy-tailed young volunteers asking you if you\u2019d like to recall your local KMT legislator to \u201cprotect Taiwan and Counter China\u201d because \u201cthey\u2019re all in cahoots with the CCP\u201d and \u201cwe have to protect our democracy before its too late.\u201dThe CCP refuse to meet or engage with DPP, they'll only meet with the KMT. Meanwhile, KMT cut tons of Taiwan's defense spending in the legislature. But sure, it's all propaganda and fear mongering?reply",
      "> bunch of people were wearing T-shirts with the slogan \u201cI am the impurity.\u201dReminds me of what happened in Bangladesh. Protestors opposed the leader, the leader calls them razakar (genociders, referring to the 1971 genocide), and they ironically started chanting \"Who are we? Razakar, razakar!\".Of course, once she fled the country, the actual razakars ended up making a bid for power based on all the apparent support they had gotten (\"look at our numbers!\") and now are in line to run the country. And those who called themselves razakars now seem to regret it, realising that they were used and thrown away. This kind of negative polarisation ends up hurting way more.Important rule of war-strategy: Always give your enemy a way out. Or they will carve a way out, and that would get ugly.reply",
      "I think it's really hard to take a political commentary article seriously when it includes images of opponent supporters crying.May as well just say \"Libruls BTFO\"reply",
      "> You know what would make the people happy? If they just got to governing instead of grandstanding and brawling and actually tried to form a consensus instead of shouting each other down and trying to achieve absolute power. I mean, isn\u2019t that what democracy is supposed to be about?Kind of hard to do that when leadership doesn't control the legislature. See the Biden years after losing the House in 2022, Trump after losing the House in 2018, Obama after losing the house in 2010, Bush losing the House in 2006, and so on. Why does legislative compromise look like it comes easier in some countries than other? Not a snarky remark, an open question. German conservatives routinely coalition with social democrats, vice versa in Denmark, Switzerland has had a permanent grand coalition for a long while now, etc.I'd like to add that existentialism in Taiwan is entirely warranted, and that denialism about an imminent military invasion was also widespread in Ukraine right up until Febuary 2022. That doesn't excuse poor domestic governance (though poor is likely a stretch, objectively the performance of the economy is very high, currently the PPP/capita is about the same as Denmark), but it does explain the priorities in messaging.reply",
      "I've read this a few times and I'm not sure what point you're trying to make. There are just as many examples of shared control in leadership/legislature that have resulted in lessreply",
      "The failed recall vote was trying to solve political gridlock for the DPP by winning enough seats for a legislative majority. My point is that in a well functioning system, this shouldn't be a step the DPP should take if they could get good results by compromising with the KMT/TPP. Having said that, I think the KMT/TPP are poorly aligned for Taiwan's interests, so this makes the situation extremely difficult.reply",
      "Politics is a tricky thing to handicap. The media is easily manipulated. I started asking the guys working the subway, my section 8 tenants, and the uber drivers in 2024 who they were voting for. Overwhelmingly Trump. The blacks were overwhelmingly blaming the immigrant surge for the increase in rent. I rely on these signals more than the mediareply",
      "toxic as usual... she will forever agree with Chinese as that's her tribe. Her criticism to the ruling party can just as well apply to KMT, they should focus on economics but no, they had to axe the budget indiscriminately like a bunch of brutes to show loyalty to their CCP mastersreply",
      "This comment appears to be explicitly racist by refusing to engage with the content of the author's arguments and instead explicitly dismissing it on the grounds of the author's race. Not only is it racist, it's profoundly incurious and shuts down discourse.> \"What is the author saying?\"> \"Who cares, she's chinese.\"I find that repugnant.It also seems to be an illogical non-sequitur since the article is about a political system of three political parties headed by ethnically han-chinese people on island with a 90% ethnically han-chinese population.reply",
      "Given this is an article about Taiwan, surely the more logical conclusion is that \u201cChinese\u201d refers to the PRC? Otherwise, as you say, it makes little sense. The rest of the comment is still low quality.This alternative interpretation doesn\u2019t seem to have much basis either, since the author is apparently native Taiwanese, but perhaps the GP is accusing her of PRC loyalties?reply"
    ],
    "link": "https://taipology.substack.com/p/epic-recall-epic-fail",
    "first_paragraph": ""
  },
  {
    "title": "How We Rooted Copilot (eye.security)",
    "points": 241,
    "submitter": "uponasmile",
    "submit_time": "2025-07-26T16:06:09 1753545969",
    "num_comments": 100,
    "comments_url": "https://news.ycombinator.com/item?id=44695098",
    "comments": [
      "OK, I think I understand what this is about: the vulnerability that they reported (and Microsoft fixed) is that there was a trick you could use to run your own code with root privileges inside the container - when the system was designed to have you only execute code as a non-root user.It turned out not to really matter, because the container itself was still secured - you couldn't make network requests from it and you couldn't break out of it, so really all you could do with root was mess up a container that only you had access to anyway.reply",
      "I have to give Microsoft props here. Most companies don't bother to lock things down well enough, but they were thorough.reply",
      "I would give the one engineer the credit for doing things better, not Microsoft. Microsoft overall culture of security is terrible. Look at the CISA report.reply",
      "Microsoft has islands of security excellence in what these days is a sea of mediocrity.reply",
      "What CISA report?reply",
      "I\u2019m guessing they mean this one:https://www.cisa.gov/news-events/bulletins/sb25-167> Microsoft--Microsoft 365 Copilot> Description Ai command injection in M365 Copilot allows an unauthorized attacker to disclose information over a network.> Published 2025-06-11> CVSS Score 9.3> Source Info CVE-2025-32711https://www.cve.org/CVERecord?id=CVE-2025-32711And maybe they are referring to this engineer from the linked advisory notes?https://msrc.microsoft.com/update-guide/vulnerability/CVE-20...> Acknowledgements>  Arantes (@es7evam on X) with Microsoft\nAim Labs (Part of Aim Security)reply",
      "I don\u2019t know specifically how this container was implemented, but Microsoft has a standard way to do isolated Python sandboxes:\nhttps://learn.microsoft.com/en-us/azure/container-apps/sessi...\nHopefully this feature is using that or something similar.reply",
      "It seems weird to me that copilot sometimes refuses to execute code but sometimes allows it. What exactly are they aiming for?reply",
      "They're not. It's better to think of Copilot as a collaborative storytelling session with a text autocomplete system, which some other program is rudely hijacking to insert the result of running certain commands.Sometimes the (completion randomly selected from the outputs of the) predictive text model goes \"yes, and\". Other times, it goes \"no, because\". As observed in the article, if it's autocompleting the result of many \"yes, and\"s, the story is probably going to have another \"yes, and\" next, but if a story starts off with a certain kind of demand, it's probably going to continue with a refusal.reply",
      "funny how it sounds kind of the opposite of how people might work. Get enough 'no's from someone and they might finally cave in. get enough 'yes'es and they might get sick of doing everything you ask.reply"
    ],
    "link": "https://research.eye.security/how-we-rooted-copilot/",
    "first_paragraph": "Microsoft has silently pushed an update back in April 2025 for Copilot Enterprise, enabling a live Python sandbox running Jupyter Notebook that can execute code in the backend. Well, that sounds like a terrific idea, let\u2019s explore it for a bit!It turns out to be easy to have it execute exactly the code we want to on the underlying system using Jupyter Notebook syntax %command.Well, it worked most of the time. It feels like telling an 8-year-old child to do something. If it\u2019s in a good mood (probably because it just had an ice cream), Copilot enthusiastically complies, but if it is hungry, it starts to become reluctant or passive-aggressively explains you how the world works according to its vision.Increasing our frustration tolerance by having some ice cream ourselves, we explore further. It seems to be executing Linux commands as the \u2018ubuntu\u2019 user in a miniconda environment. Funny thing is that the user ubuntu is in the sudo group, but there is no sudo binary on the filesystem. Copilo"
  },
  {
    "title": "Purple Earth hypothesis (wikipedia.org)",
    "points": 167,
    "submitter": "colinprince",
    "submit_time": "2025-07-24T00:43:38 1753317818",
    "num_comments": 50,
    "comments_url": "https://news.ycombinator.com/item?id=44665644",
    "comments": [
      "\"Retinal-containing cell membranes exhibit a single light absorption peak centered in the energy-rich green-yellow region of the visible spectrum, but transmit and reflect red and blue light, resulting in a magenta color.[5] Chlorophyll pigments, in contrast, absorb red and blue light, but little or no green light [..]\"I wonder why no plant evolved to use both and make the more even efficient use of light. These plats would appear dark, maybe almost black. They could live between all the green plants from their scraps so to speak.\"However, the porphyrin-based nature of chlorophyll had created an evolutionary trap[citation needed], dictating that chlorophyllic organisms cannot re-adapt to absorb the energy-rich and now-available green light, and therefore ended up reflecting and presenting a greenish color.\"Yes, but why?reply",
      "> Yes, but why?Scientific writing style is not always very good at highlighting the unknowns. \"We don't know this\" doesn't make very convincingly looking text, so people tend to avoid admitting it up front.But you are, of course, correct to ask.Like another comments said, this is an open question.One theory is, that while the algae floating in water were absorbing broad spectrum, the algae growing attached at the bottom of the water evolved to chlorophyll to capture whatever was left at the edges of the spectrum. And then later land-based plants would have evolved from the water plants that were already attaching themselves to the bottom. But then why are also the current ocean-floating algae green now?http://hyperphysics.phy-astr.gsu.edu/hbase/Biology/imgbio/pl...Another theory is that a perfectly-absorbing leaf would somehow absorb too much energy and get overheated, and that it was better to absorb only part of the available light.None of these theories are fully convincing, so the question remains open.reply",
      "According to the article, at least todays retinal-based photosynthesis is anoxygenic and does not invole carbon fixation. At night, these cells metabolism stops. Chlorophyllic photosynthesis with attached carbon fixation allows the cell to build up starch during the day, which it breathes under the use of oxygen at night, so the cell remains active during the night. Looks like a big evolutionary advantage to me.\nAlso, light is not the limiting factor for plant growth, it\u2018s usually water or nutrient availability.reply",
      "carbon fixation is a completely separate process.  in principle you could hook up a sufficiently engineered cell to electrodes and do the carbon fixation part in the dark by supplying it with juice from the mains.accordingly there is no particular reason for purple photon assimilation to not be attached to carbon fixation... though i suppose as the electron energy levels dont quite match up it might be a schlep to get purples to make sugar.reply",
      "> \"We don't know this\" doesn't make very convincingly looking text, so people tend to avoid admitting it up front.Saying definitively that we don't know something (1) requires an investment of time to verify that lack of knowledge, and (2) can become incorrect at any time.If you want to do something with the answer but find that it doesn't exist, sure make a note of that to request that someone could maybe try to find out. But if it's just a curiosity rather than directly relevant, why bother?reply",
      "How about this: it takes energy to build a photo-synthesis machine. A machine like this won't consume all photons but only some range of electromagnetic spectrum. This is because you need to have such structure to allow light to pass through the outer part of the body of the organism, but be absorbed at a very specific place inside. This is why multi-junction solar cells exist, to use more of the solar spectrum. It would cost a plant more energy to build such a multi-layered chloroplast, so perhaps having just a single layer using a single range of the spectrum is the most optimal (at least as a local maximum).reply",
      "While all the phototrophs that are able to split water and produce free oxygen use chlorophyll a, which absorbs only red light and violet light, resulting in a blue-green color, which can be seen as such in some lichens and cyanobacteria, most of them have some accessory pigments, which absorb other parts of the solar spectrum, and then transfer the energy to chlorophyll a.The green algae, which live only in shallow waters, and the terrestrial plants use as accessory pigment only chlorophyll b, which absorbs a different band of red light than chlorophyll a and also blue light, resulting in a green color.This is enough for green algae and land plants, because where they live there is abundant light. For land plants the problem is that they have too much light, not too little, with the exception of those which grow under the shadow of trees.On the other hand, most marine algae use accessory pigments that absorb much more of the solar spectrum, so that the color of chlorophyll is no longer visible and they have overall colors like red, yellow or brown, even very dark brown. This enables such algae to live down to greater depths in the water, where there is less solar light.So there are a lot of living beings that make very efficient use of light.Moreover, under water there are many places where practically all light is captured, by multiple layers of algae and bacteria, each layer absorbing some part of the solar spectrum. Even the near infrared light is absorbed by a bottom layer of bacteria, which do not produce oxygen, because the energy of infrared photons is insufficient to split water.reply",
      "technically the energy in green is also not enough to split water, which (IIRC) is why PSII must ping pong the photon through multiple collector complexes to achieve an electron with enough energy to crack water.reply",
      "I asked this same question last week and got some good answers: https://news.ycombinator.com/item?id=44630224Three things that stood out to me:- Terrestrial plants evolved from green algae.  There are other colors of photosynthetic algae.  The advantage of absorbing red and blue may have been about avoiding competition with nearby red algae (which absorbs green), and about how blue light penetrates more deeply.- The trick is not capturing as much energy as possible, but rather capturing and routing energy to the reaction centers such that it neither overshoots nor undershoots the energy necessary for the reaction.  This works better with two absorption peaks instead of one (more here: https://www.quantamagazine.org/why-are-plants-green-to-reduc...).  The absorption peaks of chlorophyll are both adequately distant from one another, and also more or less centered on the visible (i.e. most energetic) spectrum emitted by the sun.- The idea that the green-yellow region of the visible spectrum is most energetic is, if not a misconception, at least more complex that it seems (https://www.oceanopticsbook.info/view/light-and-radiometry/l...).reply",
      "As far as I understand it, this is a still debated question. One theory is it's about evaporating water: Plausible photomolecular effect leading to water evaporation exceeding the thermal limit (https://www.pnas.org/doi/10.1073/pnas.2312751120).There are black plants though! And they're studied for the same kind of questions. E.g. The Functional Significance of Black-Pigmented Leaves: Photosynthesis, Photoprotection and Productivity in Ophiopogon planiscapus \u2018Nigrescens\u2019 (https://pmc.ncbi.nlm.nih.gov/articles/PMC3691134/)reply"
    ],
    "link": "https://en.wikipedia.org/wiki/Purple_Earth_hypothesis",
    "first_paragraph": "The Purple Earth Hypothesis  (PEH) is an astrobiological hypothesis, first proposed by molecular biologist Shiladitya DasSarma in 2007,[1] that the earliest photosynthetic life forms of Early Earth were based on the simpler molecule retinal rather than the more complex porphyrin-based chlorophyll, making the surface biosphere appear purplish rather than its current greenish color.[2][3] It is estimated to have occurred between 3.5 and 2.4 billion years ago during the Archean eon, prior to the Great Oxygenation Event and Huronian glaciation.[4]\nRetinal-containing cell membranes exhibit a single light absorption peak centered in the energy-rich green-yellow region of the visible spectrum, but transmit and reflect red and blue light, resulting in a magenta color.[5] Chlorophyll pigments, in contrast, absorb red and blue light, but little or no green light, which results in the characteristic green reflection of plants, green algae, cyanobacteria and other organisms with chlorophyllic orga"
  },
  {
    "title": "What went wrong for Yahoo (homeip.net)",
    "points": 108,
    "submitter": "giuliomagnifico",
    "submit_time": "2025-07-26T18:25:13 1753554313",
    "num_comments": 113,
    "comments_url": "https://news.ycombinator.com/item?id=44696033",
    "comments": [
      "> In 1998, Yahoo turned down the opportunity to acquire Google for $1 million. Yahoo made six acquisitions that year, spending $107.3 million.> In 2002, Google offered to sell again for $1 billion. Yahoo hesitated and Google raised its price to $3 billion. Yahoo declined at the higher price. Google went on to become a trillion dollar company.> Yahoo attempted to acquire Facebook for $1 billion in 2006, but Mark Zuckerberg turned down the offer. Had Yahoo increased its offer by just $100 million, Facebook\u2019s board would have forced Zuckerberg to take it. Facebook also became a trillion dollar company.In inclined to believe that neither would have become trillion dollar companies if they had been acquired by Yahoo.reply",
      "> In inclined to believe that neither would have become trillion dollar companies if they had been acquired by Yahoo.Having worked for Yahoo, I have to agree. Acquisitions were always seen in terms of \"what can they do for the Yahoo brand?\" and \"How can we cut costs by migrating this to Yahoo tech?\", not \"How can we grow this business?\". A Yahoo owned Facebook would have been suffocated like Tumblr and Flickr were.reply",
      "So it would have been a net positive for society. :-)reply",
      "In inclined to believe that neither would have become trillion dollar companies if they had been acquired by Yahoo.I absolutely agree.One fundamental reason why Yahoo failed is that they prioritized short-term revenue from search partners, over long-term reputation. One of the key people behind that was Prabhakar Raghavan.And now, Prabhakar Raghavan is at Google. Where he has proceeded to make the same mistake, with the result that Google Search quality fell off of a cliff.If Google had been acquired by Yahoo, he would have been in a position to destroy Google earlier than he actually did.See https://www.wheresyoured.at/the-men-who-killed-google/ for more.reply",
      "Now I want a counter factual story about Yahoo acquiring Facebook, which then never flourishes into the influential network it became. What happens to society? Would we have the same political climate?reply",
      "I feel like SOUTHLAND TALES, a movie written and shot before the iPhone was released, is quite helpful here. The movie emphasizes all of our post-9/11 failings in American culture at a time before Facebook or Twitter or any of the social media nonsense people blame the current awfulness on. The problems we face as Americans are far deeper than \"cell phones\" or \"the Internet\".reply",
      "Those problems are American problems. They are human problems. You see them everywhere not just here.reply",
      "I want to know this too! If I invent a time machine, I'll message you but till then here's my ungrounded take (Obviously everything here is my personal opinion and not evidenced)The current political climate has mainly happened because capital interest has taken control of unregulated news and opinion. Meta are a particularly bad example of this, but as long as there's money to be made by providing a platform for polarising politics and fake news, then I think someone will do so.Who knows, maybe in that alternate universe you'd be posting \"if Yahoo hadn't made such savy choices, I wonder if we would have the political climate we have today?\"reply",
      "> The current political climate has mainly happened because capital interest has taken control of unregulated news and opinion.We're seeing the opposite, though. As the traditional media companies declined and the masses gained a greater ability to voice their own views, polarization increased.As someone who tries to avoid the news and politics, it's pretty easy to avoid the companies selling them. But I keep running into them because there are lots of users on Hacker News/Reddit/etc. who try to interject it into every discussion they can . Invariably, these people don't come at it from the point of view that they might be wrong and the other side might be right; they act like zealous crusaders on a mission to vanquish evil.reply",
      "It's because of the fragmentation of news sources that can now be customized to one's preference with any finely sliced political cant desired. Three television networks maintained a measure of neutrality in their reporting. Mainstream print media did too albeit to a lesser extent. Wackjobs had a hard time finding each other to form a tribe that would destabilize society.reply"
    ],
    "link": "https://dfarq.homeip.net/what-went-wrong-for-yahoo/",
    "first_paragraph": ""
  },
  {
    "title": "Paul Dirac and the religion of mathematical beauty (2011) [video] (youtube.com)",
    "points": 28,
    "submitter": "magnifique",
    "submit_time": "2025-07-26T22:32:45 1753569165",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=44697437",
    "comments": [
      "Recently learned of this from the german-spoken podcast AstroGeo. If someone wants to listen to this Large Numbers Hypothesis story in podcast form, I enjoyed that episode: https://astrogeo.de/expandierende-erde-zu-grosse-zahlen-und-... (no affiliation)reply",
      "See also perhaps the 1960 article/essay \"The Unreasonable Effectiveness of Mathematics in the Natural Sciences\":* https://en.wikipedia.org/wiki/The_Unreasonable_Effectiveness...reply"
    ],
    "link": "https://www.youtube.com/watch?v=jPwo1XsKKXg",
    "first_paragraph": ""
  },
  {
    "title": "Rust running on every GPU (rust-gpu.github.io)",
    "points": 477,
    "submitter": "littlestymaar",
    "submit_time": "2025-07-26T10:08:09 1753524489",
    "num_comments": 161,
    "comments_url": "https://news.ycombinator.com/item?id=44692876",
    "comments": [
      "Certainly impressive that this is possible!However, for my use cases (running on arbitrary client hardware) I generally distrust any abstractions over the GPU api, as the entire point is to leverage the low level details of the gpu. Treating those details as a nuisance leads to bugs and performance loss, because each target is meaningfully different.To overcome this, a similar system should be brought forward by the vendors. However, since they failed to settle their arguments, I imagine the platform differences are significant. There are exceptions to this (e.g Angle), but they only arrive at stability by limiting the feature set (and so performance).Its good that this approach at least allows conditional compilation, that helps for sure.reply",
      "Rust is a system language, so you should have the control you need. We intend to bring GPU details and APIs into the language and core / std lib, and expose GPU and driver stuff to the `cfg()` system.(Author here)reply",
      "Who is we here? I'm curious to hear more about your ambitions here, since surly pulling in wgpu or something similar seems out-of-scope for the traditionally lean Rust stdlib.reply",
      "Many of us working on Rust + GPUs in various projects have discussed starting a GPU working group to explore some of these questions:https://gist.github.com/LegNeato/a1fb3e3a9795af05f22920709d9...Agreed, I don't think we'd ever pull in things like wgpu, but we might create APIs or traits wgpu could use to improve perf/safety/ergonomics/interoperability.reply",
      "Hears an idea,Get Nvidia, AMD, Intel and whoever else you can get into a room. Get LLVMs boys into the same room.Compile LLVMIR directly into hardware instructions fed into the GPU, get them to open up.Having to target an API is part of the problem, get them to allow you to write Rust that directly compiles into the code that will run on the GPU, not something that becomes something else, that becomes spirv that controls a driver that will eventually run on the GPU.reply",
      "Sounds sort of like the idea behind MLIR and it's GPU dialects.* https://mlir.llvm.org/docs/Dialects/NVGPU/* https://mlir.llvm.org/docs/Dialects/AMDGPU/* https://mlir.llvm.org/docs/Dialects/XeGPU/reply",
      "Very likely something along those lines.Effectively standardise passing operations off to a coprocessor. C++ is moving into that direction with stdexec and the linear algebra library and SIMD.I don\u2019t see why Rust wouldn\u2019t also do that.Effectively why must I write a GPU kernel to have an algorithm execute on the GPU, we\u2019re talking about memory wrangling and linear algebra almost all of the time when dealing with GPU in any way whatsoever. I don\u2019t see why we need a different interface and API layer for that.OpenGL et al abstract some of the linear algebra away from you which is nice until you need to give a damn about the assumptions they made that are no longer valid. I would rather that code be in a library in the language of your choice that you can inspect and understand than hidden somewhere in a driver behind 3 layers of abstraction.reply",
      ">I would rather that code be in a library in the language of your choice that you can inspect and understand than hidden somewhere in a driver behind 3 layers of abstraction.I agree that, that would be ideal. Hopefully, that can happen one day with c++, rust and other languages. So far Mojo seems to be the only language close to that vision.reply",
      "These are just wrappers around intrinsics that exist in LLVM already.reply",
      "Hell will freeze over, then go into negative Kelvin temperatures before you see nVidia agreeing in earnest to do so. They make too much money on NOT GETTING COMMODITIZED. nVidia even changed CUDA to make API not compatible with interpreters.It's the same reason Safari is in such a sorry state. Why make web browser better, when it could cannibalize your app store?reply"
    ],
    "link": "https://rust-gpu.github.io/blog/2025/07/25/rust-on-every-gpu/",
    "first_paragraph": "I've built a demo of a single\nshared Rust codebase that runs on every major GPU platform:The same compute logic runs on all targets, written entirely in regular Rust. No shader\nor kernel languages are used.The code is available on GitHub.GPUs are typically programmed using specialized languages like\nWGSL,\nGLSL,\nMSL,\nHLSL,\nSlang, or\nTriton. These languages are GPU-specific and\nseparate from the host application's language and tooling, increasing complexity and\nduplicating logic across CPU and GPU code.Some of us in the Rust community are taking a different approach and want to program\nGPUs by compiling standard Rust code directly to GPU targets. Three main projects make\nthis possible1:Rust GPU: Compiles Rust code to\nSPIR-V, the binary format used by\nVulkan and other modern GPU APIs. This allows GPU code to\nbe written entirely in Rust and used in any Vulkan-compatible workflow.Rust CUDA: Compiles Rust code to NVVM\nIR, enabling execution on\nNVIDIA GPUs through the CUDA runtime.Naga: A GPU"
  },
  {
    "title": "Getting decent error reports in Bash when you're using 'set -e' (utcc.utoronto.ca)",
    "points": 58,
    "submitter": "zdw",
    "submit_time": "2025-07-24T04:40:27 1753332027",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=44666984",
    "comments": [
      "You can just do  trap 'caller 1' ERR\n\nshould do the same thing. Also you should set \"errtrace\" (-E) and possibly \"nounset\" (-u) and \"pipefail\".reply",
      "or even use caller to print a full backtrace: https://news.ycombinator.com/item?id=44636927reply",
      "FWIW, I've grown the following which handles a few more cases. For some reason I wasn't aware of `caller` ...    set -e\n\n    is-oil()\n    {\n        test -n \"$OIL_VERSION\"\n    }\n\n    set -E || is-oil\n\n    trap 'echo \"$BASH_SOURCE:$LINENO: error: failure during early startup! Details unavailable.\"' ERR\n\n    magic_exitvalue=$(($(kill -l CONT)+128))\n\n    backtrace()\n    {\n        {\n            local status=$?\n            if [ \"$status\" -eq \"$magic_exitvalue\" ]\n            then\n                echo '(omit backtrace)'\n                exit \"$magic_exitvalue\"\n            fi\n            local max file line func argc argvi i j\n            echo\n            echo 'Panic! Something failed unexpectedly.' \"(status $status)\"\n            echo 'While executing' \"$BASH_COMMAND\"\n            echo\n            echo Backtrace:\n            echo\n            max=${#BASH_LINENO[@]}\n            let max-- # The top-most frame is \"special\".\n            argvi=${BASH_ARGC[0]}\n            for ((i=1;i<max;++i))\n            do\n                file=${BASH_SOURCE[i]}\n                line=${BASH_LINENO[i-1]}\n                func=${FUNCNAME[i]}\n                argc=${BASH_ARGC[i]}\n                printf '%s:%d: ... in %q' \"$file\" \"$line\" \"$func\"\n                # BASH_ARGV: ... bar foo ...\n                # argvi          ^\n                # argvi+argc             ^\n                for ((j=argc-1; j>=0; --j))\n                do\n                    printf ' %q' ${BASH_ARGV[argvi+j]}\n                done\n                let argvi+=argc || true\n                printf '\\n'\n            done\n\n            if true\n            then\n                file=${BASH_SOURCE[i]}\n                line=${BASH_LINENO[i-1]}\n                printf '%s:%d: ... at top level\\n' \"$file\" \"$line\"\n            fi\n        } >&2\n        exit \"$magic_exitvalue\"\n        unreachable\n    }\n    shopt -s extdebug\n    trap 'backtrace' ERRreply",
      "I think you should be able to get rid of the is-oil part, because set -E was implemented last year    $ osh -c 'set -E; set -o |grep errtrace'\n    set -o errtrace\n\nI'd be interested in any bug reports if it doesn't behave the same way(The Oils runtime supports FUNCNAME BASH_SOURCE and all that, but there is room for a much better introspection API.  It actually has a JSON crash report with a shell stack dump, but it probably needs some polish.)reply",
      "What the hell. This is cool and all but I'm looking at it as a signal I should move up one tier in language (eg: to Perl, PHP, Python or Ruby)reply",
      "I actually tried rewriting this in Python, but gave up since Python's startup latency is atrocious if you have even a few imports (and using a socket to a pre-existing server is fundamentally unable to preserve enough process context related to the terminal). Perl would probably be a better fit but it's $CURRENTYEAR and I've managed to avoid learning Perl every year so far, and I don't want to break my streak just for this.The Bash code is not only fast but pretty easy to understand (other than perhaps the header, which I never have to change).reply",
      "Maybe try ruby, or you could use go (yeah, have to compile)reply",
      "But trap doesn't \"stack\" (like e.g. defer in Go) so if you do this it's not available for other purposes like cleanupreply",
      "Yes.  This also means that if you use a third-party shell library which uses \u201ctrap\u201d internally (like shunit2), you can\u2019t use \u201ctrap\u201d in your own script at all.reply",
      "not sure what you mean, you can have separate ERR and EXIT traps that run independently.reply"
    ],
    "link": "https://utcc.utoronto.ca/~cks/space/blog/programming/BashGoodSetEReports",
    "first_paragraph": " You're probably reading this page because you've attempted to\naccess some part of my blog (Wandering\nThoughts) or CSpace, the wiki thing it's\npart of. Unfortunately whatever you're using to do so has a HTTP\nUser-Agent header value that is too generic or otherwise excessively\nsuspicious. Unfortunately, as of early 2025 there's a plague of\nhigh volume crawlers (apparently in part to gather data for LLM\ntraining) that behave like this. To reduce the load on Wandering Thoughts I'm experimenting with\n(attempting to) block all of them, and you've run into this.  All HTTP User-Agent headers should clearly identify what they\nare, and for non-browser user agents, they should identify not just\nthe software involved but also who specifically is using that software.\nAn extremely generic value such as \"Go-http-client/1.1\"\nis not something that I consider acceptable any more. "
  },
  {
    "title": "Tinyio: A tiny (~200 line) event loop for Python (github.com/patrick-kidger)",
    "points": 26,
    "submitter": "tehnub",
    "submit_time": "2025-07-22T22:02:21 1753221741",
    "num_comments": 11,
    "comments_url": "https://news.ycombinator.com/item?id=44653509",
    "comments": [
      "Oh neat! This is my library. Happy to answer any questions.(Though it's really a pretty tiny library that just does what it says on the tin, not sure how many questions there can be. :D )reply",
      "This is a fun path to explore. Prior art was an earlier Python asynchronous experiment called Tulip, from GVR himself: https://www.dropbox.com/scl/fi/r3w0b50p3m26je12v93ww/SFMeetu...reply",
      "I have a function I want to be a coroutine, but it has zero yield statements, so it is just a normal function?\n  \n  You can distinguish it from a normal Python function by putting if False: yield somewhere inside its body. Another common trick is to put a yield statement after the final return statement. Bit ugly but oh well.\n\nI'm fairly unfamiliar with python and I don't quite understand what this is actually doing. Does it change anything in the execution or is it just to mark it in a way for IDEs to do something with?reply",
      "Yes. If a function contains the yield statement, calling that function returns a generator instead of executing its body. For example, here's defining and calling a regular function:  >>> def foo_function():\n  ...     print('In a function!')\n  ...     return\n  ...\n  >>> foo_function()\n  In a function!\n\nAnd here's defining and calling a generator:  >>> def foo_generator():\n  ...     print('In a generator!')\n  ...     return\n  ...     yield\n  ...\n  >>> foo_generator()\n  <generator object foo_generator at 0x10321aa40>\n  >>> next(foo_generator())\n  In a generator!\n  Traceback (most recent call last):\n    File \"<python-input-6>\", line 1, in <module>\n      next(foo_generator())\n      ~~~~^^^^^^^^^^^^^^^^^\n  StopIteration\n\nNotice that the generator's body isn't evaluated until you consume the generator. StopIteration isn't actually an error in usual cases. It just says that the generator doesn't have any more values to return and has exited. For example, that's how Python's for-loop works:  >>> for _ in foo_generator():\n  ...     continue\n  ...\n  In bar!\n\nHere it executes the generator's body (including the print() call) until it gets to the return statement. Because it's a generator, it returns as normal and then raises a StopIteration exception, which tells the loop to stop looping.reply",
      "> Somewhat unusually, our syntax uses yield rather than await, but the behaviour is the same. Await another coroutine with yield coro. Await on multiple with yield [coro1, coro2, ...] (a 'gather' in asyncio terminology; a 'nursery' in trio terminology).Why, though?reply",
      "> The reason is that await does not offer a suspension point to an event loop (it just calls `__await__` and maybe that offers a suspension point), so if we wanted to use that syntax then we'd need to replace `yield coro` with something like await `tinyio.Task(coro)`. The traditional syntax is not worth the extra class.reply",
      "From the readme:> \u201dEver used asyncio and wished you hadn't?\u201dYes, that\u2019s me. I always found the yield-based approach to coroutines much easier to reason about. It\u2019s just a generator function.reply",
      "In https://github.com/patrick-kidger/tinyio/blob/main/tinyio/__... there's    from ._core import (\n        Loop as Loop,\n        sleep as sleep,\n        ...\n    )\n\nDoes using `<name> as <name>` change the runtime behaviour at all? Or is it a stylistic choice?reply",
      "This is how static type checkers are told that an imported object is part of the public API for that file. (In addition to anything else present in that file.)C.f. \"the intention here is that only names imported using the form X as X will be exported\" from PEP484. [1]I'm generally a fan of the style of putting all the implementation in private modules (whose names start with an underscore) and then using __init__.py files solely to declare the public API.[1] https://peps.python.org/pep-0484/reply",
      "Twisted, revisited?reply"
    ],
    "link": "https://github.com/patrick-kidger/tinyio",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n        Ever used asyncio and wished you hadn't? A tiny (~200 lines) event loop for Python.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Ever used asyncio and wished you hadn't?tinyio is a dead-simple event loop for Python, born out of my frustration with trying to get robust error handling with asyncio. (I'm not the only one running into its sharp corners: link1, link2.)This is an alternative for the simple use-cases, where you just need an event loop, and want to crash the whole thing if anything goes wrong. (Raising an exception in every coroutine so it can clean up its resources.)Create a loop with tinyio.Loop(). It has a single method, .run(c"
  },
  {
    "title": "Arvo P\u00c3\u00a4rt at 90 (theguardian.com)",
    "points": 35,
    "submitter": "merrier",
    "submit_time": "2025-07-26T21:03:03 1753563783",
    "num_comments": 11,
    "comments_url": "https://news.ycombinator.com/item?id=44696894",
    "comments": [
      "Got worried for a moment: this is a profile on him, not an obituary.P\u00e4rt leans towards a form of minimalism, which not everyone likes. Some of the works I personally lean towards are:* \"Cantus in memoriam Benjamin Britten\": https://www.youtube.com/watch?v=bvfvO3dJqFY* \"De Profundis\": https://www.youtube.com/watch?v=0vOSKaKJ1QY* \"Te Deum\"\u2020 (~30m): https://www.youtube.com/watch?v=jNxbT0MESTY* \"Fratres\" (for cello and piano): https://www.youtube.com/watch?v=v4XMjsYeMig* \"Fratres\" (for violin and piano):  https://www.youtube.com/watch?v=7PS5QMsGaRw* \"Fratres\" (for violin, chambre orchestra, percussion): https://www.youtube.com/watch?v=i9I-6QPT8Is* the Tabula rasa album: https://www.youtube.com/watch?v=7YqF69HLkj8If you're going to listen to a choral work, it's worth looking first for recordings by the  Estonian Philharmonic Chamber Choir, as P\u00e4rt often collaborates with them (sits in on performances, recordings; he's Estonian himself so there's a 'cultural collection').\u2020 On a historical note, the \"Te Deum\" is one of the earliest Christians hymns we know about (and that is still used), apparently dating back to before 500 AD: https://en.wikipedia.org/wiki/Te_Deumreply",
      "Tabula Rasa is such a beautiful modern masterpiece.reply",
      "There's a slower and arguably better version of P\u00e4rt's \"De Profundis\":* https://www.youtube.com/watch?v=twzmflIdYmwreply",
      "\u201cSarah was ninety years old\u201d is one of the most beautiful and haunting pieces of music ever written. If you don\u2019t know it, check it outreply",
      "Bach and Part are the two composers who make music not just of man but of the glory of God Himself. IYKYK.reply",
      "Carnatic, Qawwali and many more central Asian musics as well, i.e. https://en.wikipedia.org/wiki/Pran_Nath_(musician) to pick a particularly influential person to the Western canonreply",
      "Not a fan of P\u00e4rt myself, but Zelenka is a good one to pair with Bach (they were contemporaries and knew each other, holding each other in high esteem).reply",
      "You mean \"god\", right?reply",
      "\"God\" is capitalized for the same reason \"Earth\" or \"the Universe\" is capitalized. What precisely is meant may differ, but it's rich even for a materialist to argue that the name for the personification of the ground of being shouldn't be capitalized (https://en.wikipedia.org/wiki/Conceptions_of_God)reply",
      "These two composers certainly meant God.reply"
    ],
    "link": "https://www.theguardian.com/music/2025/jul/24/the-god-of-small-things-celebrating-arvo-part-at-90",
    "first_paragraph": "The Estonian composer\u2019s music of simplicity, spirituality \u2013 and silence \u2013 is universally appealing and enduringly rewarding. We pay tribute ahead of his milestone birthdayIn many ways Arvo P\u00e4rt and John Williams\u2019s music couldn\u2019t be further apart. One celebrates simplicity, purity, and draws much of its inspiration from sacred texts; the other captures strong emotions in sweeping orchestral scores. And yet the two men are today\u2019s most performed contemporary composers. Bachtrack\u2019s annual survey of classical music performed across the world placed P\u00e4rt second (John Williams is in the top spot) in 2023 and 2024. In 2022, P\u00e4rt was first, Williams second. This year, P\u00e4rt might return to No 1 as concert halls and festivals worldwide celebrate his 90th birthday, on 11 September.Unlike many of his contemporaries, P\u00e4rt has found a way to speak across boundaries of culture, creed and generation. In the world of contemporary classical music, where complexity and empty virtuosity often dominate, P\u00e4"
  },
  {
    "title": "Torqued Accelerator Using Radiation from the Sun (Tars) for Interstellar Payload (arxiv.org)",
    "points": 17,
    "submitter": "virgildotcodes",
    "submit_time": "2025-07-26T22:39:19 1753569559",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://arxiv.org/abs/2507.17615",
    "first_paragraph": "Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "Algos and Code Performance: Your Code Works but Can It Handle Real Traffic? (beon.tech)",
    "points": 9,
    "submitter": "Telstrom90",
    "submit_time": "2025-07-23T14:44:38 1753281878",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=44659792",
    "comments": [
      "Rule 1 for performance optimization: measure before trying to make any changes. It\u2019s easy to waste a lot of time and energy optimizing something that isn\u2019t actually going to meaningfully improve your web app\u2019s performance.Personally, I like Sentry. They have a pretty generous free tier and a great code/db tracing tool.(And yes I see that the author lists \u2018measure\u2019 as their second point. I think they\u2019re mistaken.)reply",
      "This article is also very easy to misinterpret.This article cannot be read by software developers that still fall into premature optimizations traps.Basically, you must be first experienced or this kind of advice will hurt your codebase.reply"
    ],
    "link": "https://beon.tech/blog/optimizing-algorithms-code-performance",
    "first_paragraph": ""
  },
  {
    "title": "Coronary artery calcium testing can reveal plaque in arteries, but is underused (nytimes.com)",
    "points": 25,
    "submitter": "brandonb",
    "submit_time": "2025-07-26T21:45:07 1753566307",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=44697145",
    "comments": [
      "My cardiologist pointed out that hard calcified plaques are unlikely to come loose, so unless there\u2019s significant narrowing, they\u2019re not a big problem. However, that situation correlates with a high calcium score. So the calcium score is not always correlated to risk.A CT angiogram distinguishes soft vs. hard plaques (and shows narrowing), so that\u2019s the ultimate way to clarify the situation. (Bearing in mind radiation exposure risk and cost, of course.)reply",
      "It is free where I am but the radiation is a problem: maybe every 5 years is OK?reply",
      "Before getting a CAC scan, I'd probably do these tests first:* ApoB - about 20% of people with normal cholesterol results will have abnormal ApoB, and be at risk of heart disease.* Lp(a) - the strongest hereditary risk factor for heart disease.* hs-CRP - inflammation roughly doubles your risk of heart disease* HbA1c - insulin resistance is a risk factor for just about everything.* eGFR - estimates the volume of liquid your kidneys can filter, and is an input to the latest heart disease risk models (PREVENT).Easy to order online: https://www.empirical.health/product/comprehensive-health-pa...CAC is great for detecting calcified plaque in your coronary arteries. But before you have calcified plaque, the above risk factors tell you about the buildup of soft plaque. And 4 out of 5 of them are modifiable through lifestyle, exercise, and medication.reply",
      "My cardiologist did all of these except the eGFR. My calcium score was fairly high, but not high enough to be concerning since my cholesterol is controlled and my diet and exercise regime are good now. Until the CAC was done, I had no idea if I had any or not. It's better to deal with cholesterol earlier than I did.reply",
      "CAC is the right test for people who already have identified that they have major risk factors such as metabolic syndrome/T2D, high cholesterol, etc. It identifies whether heart disease has already advanced enough that the risk factor has become a risk.Some of the tests you list (like A1C) are baseline things everyone should get checked every year. Agreed that the others could provide value for those who want to know more about their risk level; however, it\u2019s uncommon for those tests to turn up positives without one of the baselines having already raised at least a yellow flag.None of the tests you listed will tell you whether you have any soft plaque buildup. They just tell you more about your risk factors. However, there are ultrasound tests that can detect increased blood pressure in major arteries, which IIRC does reflect soft plaque buildup.reply",
      "This test is also being heavily misused and misinterpreted in some online communities. There are a lot of people posting CAC scan results after something like a year of keto dieting in their 20s or 30s and using that to conclude that the saturated fat connection to atherosclerosis is a myth or that high cholesterol is fine.These tests don\u2019t have perfect accuracy and resolution, so low or zero results don\u2019t mean that a lifetime of high cholesterol won\u2019t catch up with someone in their 60s and 70s, yet a lot of podcasters and social media influencers are making those claims.reply",
      "Is this a keto diet that's mainly leafy greens with healthy protein like salmon?  Or is this the \"keto\" diet of bacon and steak and as much fast as one can shove in the food-hole?reply",
      "> keto diet that's mainly leafy greens with healthy protein like salmon?A ketogenic diet is 70% fat.It\u2019s literally impossible to get into keto with a diet of leafy greens and salmon. You would have to augment with a lot of fat from some other source. Salmon has too much protein and not enough fat to even come close to keto ratios.You must be thinking of a different diet. A lot of people think keto is another word for low carb, but a real keto diet is very low carb and low protein.reply",
      "I don\u2019t understand why some prople claim that diet does not impact cholesterol. I did \u2018keto\u2019 with bacon/steak/chicken/etc for 3 months, got bloodwork done before and after and  my LDL went through the roof.reply",
      "There\u2019s an offshoot of the keto community that has become die-hard cholesterol deniers. They don\u2019t necessarily argue that keto doesn\u2019t raise cholesterol. They argue that it doesn\u2019t matter to have high cholesterol. They believe doctors and science are wrong on the subject. They think statins are evil. They embrace a few fringe doctors who agree with them.If you do try keto again, bacon and such are the worst way to do it. Getting your fat content from a monounsaturated source like avocado oil can be helpful. Taking statins is also a good idea.reply"
    ],
    "link": "https://www.nytimes.com/2025/07/26/health/coronary-artery-calcium-heart.html",
    "first_paragraph": ""
  },
  {
    "title": "SV AI Startups Are Embracing China's Controversial '996' Work Schedule (wired.com)",
    "points": 12,
    "submitter": "AndrewDucker",
    "submit_time": "2025-07-23T10:06:32 1753265192",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44657480",
    "comments": [
      "https://archive.is/J5uMpreply",
      "Every time I am stressed by work, I think of this obnoxious work \"ethic\", and I feel better.In other news, what happened to AI? Isn't it supposed to make life easier? Work for one weekend day, no health insurance, etc - we back to preindustrial oligarchy, fam?reply",
      "I interviewed at one AI startup that basically was doing this.  From what I could tell, they were feeling pressured to get something out fast since there is so much money and competition.What was odd was that they were already doing this for about 6 months and needed people who could build things, the founder was very frustrated.  Technically it looked like there were severely over complicating their code base (I never saw it, this was just based on discussions) and needed people to fix their perf issues/etc, which AI is very bad at.reply"
    ],
    "link": "https://www.wired.com/story/silicon-valley-china-996-work-schedule/",
    "first_paragraph": "Would you like to work nearly double the standard 40-hour week? It\u2019s a question that many startups in the US are asking prospective employees\u2014and to get the job, the answer needs to be an unequivocal yes. These companies are embracing an intense schedule, first popularized in mainland China, known as \u201c996,\u201d or 9 am to 9 pm, six days a week. In other words, it\u2019s a 72-hour work week.The 996 phenomenon in China gave rise to major protests and accusations of \u201cmodern slavery,\u201d with critics blaming the schedule for a spate of worker deaths. Despite the negative connotations overseas, US firms, many of them working on artificial intelligence, are adopting both the schedule and its nickname as they race to compete against each other\u2014and with China. Adrian Kinnersley, a serial entrepreneur who runs both a staffing and recruitment company and an employment compliance startup, has been surprised by how many startups are going all-in on 996. \u201cIt's becoming increasingly common,\u201d he says. \u201cWe have m"
  },
  {
    "title": "Millet mystery: Why staple crop failed to take root in ancient Japanese kitchens (phys.org)",
    "points": 15,
    "submitter": "PaulHoule",
    "submit_time": "2025-07-23T15:47:45 1753285665",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://phys.org/news/2025-07-millet-mystery-staple-crop-root.html",
    "first_paragraph": ""
  },
  {
    "title": "Test Results for AMD Zen 5 (agner.org)",
    "points": 197,
    "submitter": "matt_d",
    "submit_time": "2025-07-26T18:44:57 1753555497",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=44696167",
    "comments": [
      "Vector ALU instruction latencies are understandably listed as 2 and higher, but this is not strictly the case. From AMD's Zen 5 optimization manual [1], we have    The floating point schedulers have a slow region, in the oldest entries of a scheduler and only when the scheduler is full. If an operation is in the slow region and it is dependent on a 1-cycle latency operation, it will see a 1 cycle latency penalty.\n    There is no penalty for operations in the slow region that depend on longer latency operations or loads.\n    There is no penalty for any operations in the fast region.\n    To write a latency test that does not see this penalty, the test needs to keep the FP schedulers from filling up.\n    The latency test could interleave NOPs to prevent the scheduler from filling up.\n\nBasically, short vector code sequences that don't fill up the scheduler will have better latency.[1] https://www.amd.com/content/dam/amd/en/documents/processor-t...reply",
      "This matches my experience with Zen in basically any generation. Once you've used all of the tricks and exhausted all of the memory and storage bandwidth, you'll still have compute left.It's often faster to use one less core than you hit constraints at so that the processor can juggle them between cores to balance the thermal load as opposed to trying to keep it completely saturated.reply",
      "https://web.archive.org/web/20250726202105/https://www.agner...reply",
      "This reminds me: has anyone ever figured out why Zen 3 was missing memory renaming, but it came back in Zen 4 and Zen 5?reply",
      "AMD had two leapfrogging CPU design teams. Memory renaming was added by the team that did Zen2, presumably the Zen3 team couldn't import it in time for some reason.reply",
      "Are there any good resources on how does one obtain all of this information?reply",
      "The linked PDF in the post contains a section on how the values are measured and a link to the test suite. Search in [1] for \"How the values were measured\". For another project that measures the same/very similar values you can check out [2]. They have a paper about the tool they are using [3].There is also AMD's \"Software Optimization Guide\" that might contain some background information. [4] has many direct attachments, AMD tends to break direct links. Intel should have similar docs, but I am currently more focused on AMD, so I only have those links at hand.[1] https://www.agner.org/optimize/instruction_tables.pdf[2] https://www.uops.info/background.html[3] https://arxiv.org/abs/1911.03282[4] https://bugzilla.kernel.org/show_bug.cgi?id=206537reply",
      "> All vector units have full 512 bits capabilities except for memory writes. A 512-bit vector write instruction is executed as two 256-bit writes.That sounds like a weird design choice. Curious if this will affect memcpy-heavy workloads.Writes aside, Zen5 is taking much longer to roll out than I thought, and some of AMD's positioning is (almost expectedly) misleading, especially around AI.AMD's website claims Zen5 is the \"Leading CPU for AI\" (<https://www.amd.com/en/products/processors/server/epyc/ai.ht...>), but I strongly doubt that. First, they compare Zen5 (9965), which is still largely unavailable, to Xeon2 (8280), a 2 generations older processor. Xeon4 is abundantly available and comes with AMX, an exclusive feature to Intel. I doubt AVX-512 support with a 512-bit physical path and even twice as many cores will be enough to compete with that (if we consider just the ALU throughput rather than the overall system & memory).reply",
      "Well, when you consider that AVX 512 instructions have 2 or 3 reads per 1 write, there's a degree of sense here.Consider the standard matrix multiplication primitive the FMAC / multiply and accumulate: 3 reads and one write if I'm counting correctly .... (Output = A * B + C, three reads one output).reply",
      "AMD CPUs tend to have more memory bandwidth than Intel CPUs and inference is CPU bound, so their claim seems accurate to me.Whether the core does a 512-bit write in 1 cycle or 2 because it is two 256-bit writes is immaterial. Memory bandwidth is bottlenecked by 64GB/sec per CCX. You need to use cores from multiple CCXs to get full bandwidth.That said, the EYPC 9175F has 614.4GB/sec memory bandwidth and should be able to use all of it. I have one, although the machine is not yet assembled (Supermicro took 7 weeks to send me a motherboard, which delayed assembly), so I have no confirmed that it can use all of it yet.reply"
    ],
    "link": "https://www.agner.org/forum/viewtopic.php?t=287&start=10",
    "first_paragraph": ""
  },
  {
    "title": "Large ancient Hawaiian petroglyphs uncovered by waves on Oahu (sfgate.com)",
    "points": 72,
    "submitter": "c420",
    "submit_time": "2025-07-22T23:05:07 1753225507",
    "num_comments": 20,
    "comments_url": "https://news.ycombinator.com/item?id=44654031",
    "comments": [
      "Warning for others, this website opened a new tab, forwarded to Booking.com and hijacked my back button.reply",
      "AP story: https://apnews.com/article/hawaiian-petroglyphs-tides-ocean-...reply",
      "That's wild. I vaguely thought sfgate was a reasonably reputable site.reply",
      "A ton of news websites do this now, navigating to a \u201cBefore you go\u2026\u201d page when you hit the back button. I\u2019ve always suspected this kind of behavior has a lot to do with why people don\u2019t read articles anymore. You know what you\u2019re getting when you open a comment section on Reddit, Hacker News, or Twitter. The majority of other websites are going to be borderline impossible to view on mobile.reply",
      "Chrome with JS disabled works good enough for me on mobile. It's also easy to whitelist specific sites. But mostly, if I get a blank page I just go back.reply",
      "I just use Brave and its builtin ad blocking on iOS. This is the killer app of these days.Very few sites really work with js disabled.reply",
      "That is extremely interesting. Booking.com is driving a lot of traffic, as I have outlined previously on HN:https://news.ycombinator.com/item?id=44481590reply",
      "Trying to wrap my head around the term \"cultural practitioner\", even after looking it up. Don't we all transmit our culture?reply",
      "\u201cOne who demonstrates and interprets cultural practices to people from other cultures, often as a means of cultural preservation.\u201dhttps://en.m.wiktionary.org/wiki/cultural_practitionerImagine a \u201ctour guide\u201d focused on their own culture.reply",
      "Depending on the age of the petroglyphs, would be directly or indirectly related to:Characteristics for the Occurrence of a High-Current, Z-Pinch Aurora as Recorded in Antiquity (2003)https://archive.org/details/anthony-peratt-characteristics-f...Characteristics For The Occurrence Of A High Current Z Pinch Aurora As Recorded In Antiquity Part II: Directionality And Source (2007)https://archive.org/details/characteristics-for-the-occurren...reply"
    ],
    "link": "https://www.sfgate.com/hawaii/article/hawaii-petroglyphs-uncovered-20780579.php",
    "first_paragraph": ""
  }
]