[
  {
    "title": "Claudia \u2013 Desktop companion for Claude code (claudiacode.com)",
    "points": 306,
    "submitter": "zerealshadowban",
    "submit_time": "2025-08-17T17:26:56 1755451616",
    "num_comments": 155,
    "comments_url": "https://news.ycombinator.com/item?id=44933255",
    "comments": [
      "On the one hand, it's good that we're seeing a lot of exploration in this space.On the other, the trend seems to be everyone developing a million disparate tools that largely replicate the same functionality with the primary variation being greater-or-lesser lock-in to a particular set of services.This is about the third tool this week I've taken a quick look at and thought \"I don't see what this offers me that I don't already have with Roo, except only using Claude.\"We're going to have to hit a collapse and consolidation cycle eventually, here. There's absolutely room for multiple options to thrive, but most of what I've seen lately has been \"reimplement more or less the same thing in a slightly different wrapper.\"reply",
      "I think the thing is that most of the people implementing stuff for Claude have already realized it\u2019s just the best option available for\u2026 basically everything. I\u2019ve switched to different models before, but I always come back to Sonnet or Opus for doing anything sensible.reply",
      "Claude may be arguably the best model, but why decide unilaterally for your users that they _have_ to use it?If there's no particular feature that only Claude offers, this is just needless vendor lock-in. And what happens if another lab releases a model that suddenly trounces Claude at coding? Your users will leave for an app that supports the new hotness, and you won't be able to keep them because of a short-sighted architecture that cannot swap model providers.reply",
      "This is true for now.I built some workflows using Claude\u2019s API and now wish I had used a wrapper so I could easily switch to try gpt-5 for the cost savings.reply",
      "And then the providers ship a landmark feature or overhaul themselves. Especially as their models advance.Wrappers constantly live in the support and feature parity of today.Anthropic\u2019s Claude Code will look a hell of a lot different a year from now, probably more like an OS for developers and Claude Agent non-tech. Regardless they are eating the stack.Pricing/usage will be very simple - a fixed subscription and we will no longer know the tokenomics because the provider will have greatly abstracted and optimized the cost per token, favoring a model that they can optimize margin against a fixed revenue floor.reply",
      "I'm more optimistic. Open source and open weights will eat this whole space.Training is capital-intensive, yes, but so far it appears that there will always be some entities willing to train models and release them for free. All it takes is a slowdown at the frontier for the open models to catch up.The money is in the hardware, not the software.reply",
      "I still can't figure out how to set up a completely free, completely private/no-accounts method of connecting an IDE to LM Studio. I thought it would be \"Continue\" extension for VS Code, but even for local LM integration it insists I sign-in to their service before continuing.reply",
      "Roo code in vs code, and qwen coder in lm studio is a decent local only combo.reply",
      "Strongly seconding Roo Code. I am using it in VSCodium and it's the perfect partner for a fully local coding workflow (nearly 100% open-source too so no vendor is going to pry it from my hand, \"ever\").Qwen Coder 30B is my main driver in this configuration and in my experience is quite capable. It runs at 80 tok/s on my M3 Max and I'm able to use it for about 30-50% of my coding tasks, the most menial ones. I am exploring ways to RL its approach to coding so it fits my style a bit more and it's a very exciting prospect whenever I manage to figure it out.The missing link is autocomplete since Roo only solves the agent part. Continue.dev does a decent job at that but you really want to pair it with a high performance, large context model (so it fits multiple code sections + your recent changes + context about the repo and gives fast suggestions) and that doesn't seem feasible or enjoyable yet in a fully local setup.reply",
      "Huh? I have Continue on Codium talking to ollama, all local, and I never signed up to nuffin\u2019reply"
    ],
    "link": "https://claudiacode.com/",
    "first_paragraph": ""
  },
  {
    "title": "Clojure Async Flow Guide (clojure.github.io)",
    "points": 9,
    "submitter": "simonpure",
    "submit_time": "2025-08-18T00:52:03 1755478323",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44936309",
    "comments": [
      "Is Clojure still a thing? I sure would hope so, but I haven't seen much of Clojure activity in HN recently.reply",
      "The language itself is still getting updates, a new major release was just dropped a month or two ago.I do find that for about 5 years things seemed to be slowing down. Though I keep seeing it pop up, and new exciting projects seem to pop up from time to time.Just today I saw an article about Dyna3, a relational programming language for AI and ML that was implemented on top of Clojure.I miss the Strange Loop conference. I think a lot of Clojure buzz was generated there. Clojure West and a few others so a decent job, but the quality of the talks at Strange Loop were second to none. Not that it was a Clojure specific conference, but it had that focus on elegance that I don't see very often, and the organizer was a something like the Prince of Clojure, if I recall correctly.I'm still enjoying the language, and all my projects still build and run just fine.The major frustration I have with the platform is 3D graphics. That's a JVM issue overall though.reply",
      ":yes #{of course it is}reply"
    ],
    "link": "https://clojure.github.io/core.async/flow-guide.html",
    "first_paragraph": "The flow library enables a strict separation application logic from the deployment concerns of topology, execution, communication, lifecycle, monitoring and error handling.You provide logic to flow in the form of step-fns, which are wrapped into running processes, executing in a loop. Flow manages the life cycle of the process and handles incoming and outgoing messages by putting or taking them on channels. Step-fns do not access channels directly or hold state, making them easy to test in isolation and reuse.Step functions have four arities:The describe arity must return a static description of the step-fn\u2019s :params, :ins, and :outs. Each of these is a map of name (a keyword) to docstring.For example, the describe arity might return this description for a simple step-fn:The names used for input and output channels should be distinct (no overlap).The init arity is called once by the process to takes a set of args from the flow def (corresponding to the params returned from the describe"
  },
  {
    "title": "Llama-Scan: Convert PDFs to Text W Local LLMs (github.com/ngafar)",
    "points": 58,
    "submitter": "nawazgafar",
    "submit_time": "2025-08-17T21:40:47 1755466847",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=44935169",
    "comments": [
      "\u201cTurn images and diagrams into detailed text descriptions.\u201dI\u2019d just prefer that any images and diagrams are copied over, and rendered into a popular format like markdown.reply",
      "By 1990 Omnipage 3 and its successors were 'good enough' and with their compact dictionaries and letter form recognition were miracles of their time at ~300MB installed.In 2025 LLMs can 'fake it' using Trilobites of memory and Petaflops.  It's funny actually, like a supercomputer being emulated in real time on a really fast Jacquard loom.  By 2027 even simple hand held calculator addition will be billed in kilowatt-hours.reply",
      "https://en.wikipedia.org/wiki/TrilobiteTrilobites? Those were truly primitve computers.reply",
      "If you think 1990's ocr- even 2000's OCR is remotely as good as modern OCR... I`v3 g0ta bnedge to sell.reply",
      "I really wanted this to be good. Unfortunately it converted a page that contained a table that is usually very hard for converters to properly convert and I got a full page with \"! Picture 1:\" and nothing else. On top of that, it hung at page 17 of a 25 page document and never resumed.reply",
      "Author here, that sucks. I'd love to recreate this locally. Would you be willing to share the PDF?reply",
      "I\u2019ve been trying to convert a dense 60 page paper document to Markdown today from photos taken on my iPhone. I know this is probably not the best way to do it but it\u2019s still been surprising to find that even the latest cloud models are struggling to process many of the pages. Lots of hallucination and \u201cI can\u2019t see the text\u201d (when the photo is perfectly clear). Lots of retrying different models, switching between LLMs and old fashioned OCR, reading and correcting mistakes myself. It\u2019s still faster than doing the whole transcription manually but I thought the tech was further along.reply",
      "Try this:https://github.com/rednote-hilab/dots.ocrreply",
      "The code is MIT, and the weights are labeled MIT although the actual license file in the weights repo seems to be mostly Apache 2 https://huggingface.co/rednote-hilab/dots.ocr/blob/main/NOTI...Seems to weigh about 6GB which feels reasonable to manage locallyreply",
      "Looking at the code, this converts PDF pages to images, then transcribes each image. I might have expected a pdftotext post-processor. The complexity of PDF I guess ...reply"
    ],
    "link": "https://github.com/ngafar/llama-scan",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Transcribe PDFs with local LLMs\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.A tool for converting PDFs to text files using Ollama.Install using pip:or uv:Basic usage:Process specific pages with custom width:Use a different Ollama model:\n        Transcribe PDFs with local LLMs\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page."
  },
  {
    "title": "The Enterprise Experience (churchofturing.github.io)",
    "points": 233,
    "submitter": "Improvement",
    "submit_time": "2025-08-17T16:53:03 1755449583",
    "num_comments": 63,
    "comments_url": "https://news.ycombinator.com/item?id=44932980",
    "comments": [
      "Always worth keeping in mind Remy's Law of Enterprise Software (https://thedailywtf.com/articles/graceful-depredations): if a piece of software is in any way described as being \u201centerprise\u201d, it\u2019s a piece of garbage.Joking aside, I was intrigued by the list of good things at the end of the post.  Some I could understand, but some seemed to fall into that strange category of things that people say are good but really seem only to lead to more of the things they say are bad.  In this list we have:> There are actual opportunities for career development.Does \"career development\" just mean \"more money\"?  If so, why not just say \"there are opportunities to make more money\"?  If not, what is \"career development\" that is not just becoming more deeply buried in an organization with the various dysfunctions described in the rest of the post?> It's satisfying to write software used by millions of people.Is it still satisfying if that software is bad, or harms many of those people?reply",
      "> Does \"career development\" just mean \"more money\"? If so, why not just say \"there are opportunities to make more money\"? If not, what is \"career development\" that is not just becoming more deeply buried in an organization with the various dysfunctions described in the rest of the post?In life, everyone that thinks a lot is eventually confronted with the reality that we're all just minor players within much bigger systems. When you follow this thread, pretty deep questions start to fall out like \"how can I be just in an unjust society?\". Or \"what's the best way that I, as an individual, can have a positive impact on my community?\". Or \"Is there any point in trying to change systems given my small role within them?\".To these types of questions there's various different responses and consequences. Some people dive in feet first and engage heavily with the mechanisms they have to enact change (such as local politics, grass roots political movements, activism etc). Some people, overwhelmed by the weight of the system, disengage entirely.Now to answer your question, I believe in the work that we're doing (or else I probably wouldn't have joined). Career development at the company isn't just more money (though that's obviously a component), it's being given more responsibilities alongside the capacity to enact more and more change.Faced with a dysfunctional organisation that you're a part of, what do you do? The options as I see it are roughly:- Change companies, and acknowledge that the dysfunction is insurmountable.- Do your job and stay at the position you're in.- Embed deeper into the dysfunctional organisation, with the view that you can be an agent for positive change.>Is it still satisfying if that software is bad, or harms many of those people?To some people, yes. There are people out there that take satisfaction in doing harm. Not me, nor do I believe the work I do is harmful. I didn't think I had to be so granular as to say \"It's satisfying to write software I believe is a net positive to society used by millions\".reply",
      "Thanks for your thoughtful reply.  I see what you're saying, although with the way the world is going, I'm increasingly doubtful of the potential of that approach, because it seems that companies are becoming more brazen about explicitly selecting for their narrow and immediate self-interest.  In other words, the more you use your responsibility and influence to enact change, the more likely you'll just lose that responsibility and influence (i.e., get fired, demoted, or just shunted away to places where you can make less of a difference).  However, that's not entirely the case everywhere yet, and it sounds like maybe you've found a place that's big but still not entirely evil, which sounds promising.  :-)In any case, I didn't mean to imply that what you're doing is any more objectionable than anything I or a zillion other people do when we make the same tradeoffs you allude to.  What I was mostly reacting to was that you mentioned those things in the section on things you viewed positively, whereas they seem to me like they still incorporate a tradeoff involving a significant amount of badness.  Perhaps though you simply meant they were tipped at least slightly toward the positive side on balance, which makes sense.reply",
      "> Does \"career development\" just mean \"more money\"?Big companies means more opportunities to lead bugger project. At a big company, it\u2019s not uncommon to in-house what would\u2019ve been an entire startup\u2019s product. And depending on the environment, you may work on several of those project over the course of a few years. Or if you want to try your hand at leading bigger teams, that\u2019s usually easier to find in a big company.> Is it still satisfying if that software is bad, or harms many of those people?There\u2019s nothing inherently good about startups and small companies. The good or bad is case-by-case.reply",
      "> Big companies means more opportunities to lead bugger project. At a big company, it\u2019s not uncommon to in-house what would\u2019ve been an entire startup\u2019s product. And depending on the environment, you may work on several of those project over the course of a few years. Or if you want to try your hand at leading bigger teams, that\u2019s usually easier to find in a big company.Okay, so career development means \"bigger projects\"?> There\u2019s nothing inherently good about startups and small companies. The good or bad is case-by-case.Well, maybe not, but I think the post illustrates some ways big companies are worse.  I'd say that, all else being equal, companies tend to get bigger by becoming more doggedly focused on money, which tends to lead to doing evil things because you no longer see refraining from doing so as important compared to making money.  Also, all else equal, a company that does something bad on a small scale is likely less bad than one that does something bad on a large scale.reply",
      "I don\u2019t think enterprise software is by definition bad. You can absolutely make good enterprise software, but doing that while adhering to the morass of requirements is a skill unto itself.And something that most people in an enterprise are just not all that interested in, since they\u2019re never judged on how pleasant the software they deliver is to use.Hell, they not ever see any of the users interacting with the software. I\u2019ve been at $ENTERPRISE for 7 years, and I\u2019ve visited our users exactly once.reply",
      "In my experience enterprises do not want to pay for excellent software, simply because it is expensive. I would love to work on software that was:- in more than two AWS regions- required screen reader / disability support- required multi-language support- required multi-cloud- actually needed a big Hadoop cluster - most enterprise data processing can be done on a MacBook Pro M4.reply",
      "> Does \"career development\" just mean \"more money\"?If you want to become a researcher in data science or developper evangelist for instance, you'll need a org that can sustain your work.Or if you want to be a micro service architect, you'll be booed in a 3 people shop but heartfully welcomed in 3000 people companies.Same for engineering manager paths, it only makes sense if you have the headcount.> software is bad, or harmsWhat you work on doesn't need to be Enterprise software. Hopefully it isn't.reply",
      "> heartfully welcomed in 3000 people companiesUnfortunately, because most of those 3000 will think about the fact their org is 3000 people. Not that the user base for the new product is 5 people using it only on the weekend.reply",
      "> if a piece of software is in any way described as being \u201centerprise\u201d, it\u2019s a piece of garbage.if safety standards are written in blood then enterprise software is written in lawsuitsreply"
    ],
    "link": "https://churchofturing.github.io/the-enterprise-experience.html",
    "first_paragraph": "It's the 18th of August. Today is a special day for me, as it marks my one-year anniversary of working at\n      $ENTERPRISE.\n      Before this I had been a professional software developer for the best part of a decade, but entirely in startups\n      and SMEs. This time last year I made the\n      decision to sell out and hit the big leagues for fun and financial profit. After my interview the only feedback I received was that I didn't have much exposure to enterprise software\n      development, which was completely true. At the time I took this criticism to heart; only later did I realise it\n      was a compliment. In celebration I thought it'd be fun to put some of my observations to paper. They're not so much\n      observations as just unfiltered snark, but I'm enjoying the cathartic feeling of getting it out.If you too work at $ENTERPRISE or its relatives and disagree with anything you've read, congratulations and\n      long may it last.On those first days of excitement, I opened my "
  },
  {
    "title": "LL3M: Large Language 3D Modelers (threedle.github.io)",
    "points": 367,
    "submitter": "simonpure",
    "submit_time": "2025-08-17T11:20:20 1755429620",
    "num_comments": 157,
    "comments_url": "https://news.ycombinator.com/item?id=44930808",
    "comments": [
      "I've had surprising success with meshy.ai as part of a workflow to go from images my friends want to good 3D models. The workflow is1. Have gpt5 or really any image model, midjourney retexture is also good, convert the original image to something closer to a matte rendered mesh, IE remove extraneous detail and any transparency / other confusing volumetric effects2. Throw it in meshy.ai image to 3D mode, select the best one or maybe return to 1 with a different simplified image style if I don't like the results3. Pull it into blender and make whatever mods I want in mesh editing mode, eg specific fits and sizing to assemble with other stuff, add some asymmetry to an almost-symmetric thing because the model has strong symmetry priors and turning them off in the UI doesn't realllyyy turn them off, or model on top of the AI'd mesh to get a cleaner one for further processing.The meshes are fairly OK structure wise, clearly some sort of marching cubes or perhaps dual contouring approach on top of a NeRF-ish generator.I'm an extremely fast mechanical CAD user and a mediocre blender artist, so getting an AI starting point is quite handy to block out the overall shape and let me just do edits. EG a friend wants to recreate a particular statue of a human, tweaking some T-posed generic human model into the right pose and proportions would have taken me \"more hours than I'm willing to give him for this\" ie I wouldn't have done it, but with this workflow it was 5 minutes of AI and then an hour of fussing in Blender to go from the solid model to the curvilinear wireframe style of the original statue.reply",
      "> 1. [\u2026] convert the original image to something closer to a matte rendered mesh [\u2026]Sounds interesting. Do you have any example images like that you could share? I understand the part about making transparent surfaces not transparent. But I\u2019m not sure how the whole image looks like after this step.Also, would you be willing to share the prompt you type to achieve this?reply",
      "GPT-5 is a text only model. ChatGPT uses 4o for images stillreply",
      "The naming is very confusing. I thought the underlying model was gpt image 1 in the api but transparently shown as part of the same chat model in the UI?reply",
      "As someone using Blender for ~7 years, with over 1000 answers on Blender Stack Exchange and total score of 48.000:This tool is maybe useful if you want to learn Python, in particular Blender Python API basics, I don't really see other usage of this. All examples given are extremely simple to do; please don't use a tool like this, because it takes your prompt and generates the most bland version of it possible. It really takes only about a day to go through some tutorials and learn how to make models like these in Blender, with solid color or some basic textures. The other thousands of days  is what you would spend on creating correct topology, making an armature, animating, making more advanced shaders, creating parametric geometry nodes setups... But simple models like these you can create effortlessly, and those will be YOUR models, the way (roughly, of course) how you imagined them. After a few weeks you're probably going to model them faster than the time it takes for prompt engineering. By that time your imagination, skill in Blender and understanding of 3D technicalities will improve, and it will keep improving moving onward. And what will you learn using this AI?I think meshy.ai is much more promising, but still I think I'd only consider using it if I wanted to convert photo/render into a mesh with a texture properly positioned onto it, to then refine the mesh by sculpting - and sculpting is one of my weakest skills in Blender. BTW I made a test showcasing how meshy.ai works: https://blender.stackexchange.com/a/319797/60486reply",
      "As someone who has tried to go through blender tutorials for multiple days, I can tell you, there is no chance I can get close to any of these examples.I think you might be projecting your abilities a bit too much.As someone who wants to make and use 3d models, not someone who wants to be a 3d model artist, this tech is insanely useful.reply",
      "I'm surprised if anything.All examples are really just primitives either extruded in one step or the same and maybe 5 of them together.I don't want to sound mean but these are reachable with just another day at it. They really are.reply",
      ">I don't want to sound mean but these are reachable with just another day at it. They really are.Semi-related, understanding Sketchup took a couple of false starts for me. The first time I tried it, I could not make heads or tails of what I was doing. I must have spent hours trying to figure out how to model a desk, and I gave up. Tried again a year or two later, and it just didn't click.The third try, a couple years later, it suddenly made sense, and what started as modeling a new desk out turned into modeling my room, then modeling the whole house, and now I've got a rough model of my neighborhood. And it's so easy, once you know how - there's obviously a rabbit hole of detail work one can fall down into, but the basics aren't bad.reply",
      "This is like for 2d art saying line art is just using the pen tool. Sure anyone can reproduce a single stroke, but figuring out what strokes to make has such a high skill ceiling.reply",
      "No, the meshes involved are in the same ballpark as children's drawings for 2D art.I'm sure the most difficult part here is just understanding blender UI. Clearly more difficult than picking up a pencil. But, a tutorial video should suffice.For the chair example you pick a face on the default cube and the use the extrude tool on the left. Now you have a base.Add 4 more cubes, and do the same. Now you have legs.Then boolean them.For the hat? Use a sphere, go to the sculpt tab and go ham.There are way better ways to do this, of course. But really, there is not such a high degree of skill involved here, nor that being just a little more patient (one more day of trying) is that much to ask.reply"
    ],
    "link": "https://threedle.github.io/ll3m/",
    "first_paragraph": "\nLL3M uses a team of large language models to write Python code that creates and edits 3D assets in Blender.\n      Given user text instructions, the agents are capable of creating expressive shapes from scratch, and realizing\n      complex, precise geometric manipulations in code.\n\n      Whereas previous uses of code-writing LLMs for 3D creation have focused on specific subtasks or constrained\n      procedural programs and primitives, our method is able to create unconstrained assets with geometry, layout, and\n      appearance.\n\n      With high-level code as a 3D representation, our pipeline is natively a loop of iterative refinement and\n      co-creation: agents perform automatic code and visual self-critique, and users can provide continuous high-level\n      feedback. Further editing avenues are enabled by the clear code and the parameters transparent in the generated\n      Blender nodes and structures.\n    \nOur method includes three phases: initial creation, automatic refinement, an"
  },
  {
    "title": "Show HN: Doxx \u2013 Terminal .docx viewer inspired by Glow (github.com/bgreenwell)",
    "points": 73,
    "submitter": "w108bmg",
    "submit_time": "2025-08-17T19:52:03 1755460323",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=44934391",
    "comments": [
      "It looks fantastic! That's going into my toolbox that's for sure.It's refreshing to see something that isn't another chatbot.reply",
      "Can you use this to basically cat the output and then you can grep the docx?pandoc can do thisreply",
      "Maybe? I don't use Pandoc directly (fantastic program, but I only use it thorugh Quarto and Rmarkdown), but something like `doxx document.docx --export text | grep \"search term\"` should work just like `cat`+`grep`, but with better table structure and no intermediate conversion needed like pandoc.reply",
      "Great project! Looking forward to trying it out in my law practice.The name causes miscues and carries negative connotations, though, on account of its homonym verb (doxxing).reply",
      "It's 100% intentional wordplay! \"Doxxing\" documents by exposing their contents in the terminal instead of keeping them locked in Microsoft Word. The whole project is about \"liberation from Office\" so the pun felt perfect. I'm honestly not too creative so I was bouncing around with Google Gemini on some \"clever\" names.reply",
      "I am genuinely curious, as to how this would be a solution for a law practice? How many lawyers are SSH'd into servers? Or am I being ignorant?reply",
      "As a non-lawyer who\u2019s nonetheless been asked to help to review internal documents en masse - the idea of a fully scriptable <50ms switch time between documents is quite appealing. AI can help with initial screening, but there are many situations where humans are asked or required to do review at scale.reply",
      "I hate Word but sometimes have to deal with it when I would rather just have plain text. (Among other reasons, Word is notorious for making it difficult to select text to copy and paste, especially when dealing with legal citations and quotations.) Furthermore, the structure of documents is important to understanding them, especially in the law. So it seems like it would be useful to work with the text of the documents without locking horns with M$.Scripting uses interest me too. Perhaps pandoc will still be a better option, but I'm also a sucker for TUIs and _Charm projects!reply",
      "I'm working to improve the copy/paste. Right now, you can copy everything, but not select snippets to copy/paste (ways around this, though). Hopefully have it working in the next week!reply",
      "It doesn't have to be used over SSH, some lawyers might be comfortable using the terminal for local workreply"
    ],
    "link": "https://github.com/bgreenwell/doxx",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Expose the contents of .docx files without leaving your terminal. Fast, safe, and smart \u2014 no Office required!\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Expose .docx files in your terminal \u2014 no Microsoft Word required\n\n\ud83d\udea7 Under Active Development: New features and improvements are being added regularly. Check back often for updates!doxx is a lightning-fast, terminal-native document viewer for Microsoft Word files. Built with Rust for performance and reliability, it brings Word documents to your command line with beautiful rendering, smart table support, and powerful export capabilities.Navigate documents with intuitive keyboard shortcuts and mouse support:Built with modern Rust for maximum performance:doxx fills a critical gap: there's no good way to vie"
  },
  {
    "title": "Show HN: OverType \u2013 A Markdown WYSIWYG editor that's just a textarea",
    "points": 188,
    "submitter": "panphora",
    "submit_time": "2025-08-17T16:13:06 1755447186",
    "num_comments": 53,
    "comments_url": "https://news.ycombinator.com/item?id=44932651",
    "comments": [
      "2kbhttps://medv.io/codejar/reply",
      "912 bytes....https://sylvainpolletvillard.github.io/spell/demo.htmlreply",
      "Looks good!Some links I've collected in the past that describe this approach:- https://css-tricks.com/creating-an-editable-textarea-that-su...- https://github.com/WebCoder49/code-inputI believe https://grugnotes.com also does this for markdown.reply",
      "This is actually really clever. Just don\u2019t let it balloon out to be a 500kb full fledged WYSIWYG editor, just keep it simple like you do.reply",
      "This is pretty nice, though I'd suggest you call it a transparent syntax highlighter.For https://grack.com/demos/adventure/, I used a hidden <input text> for something similar. I wanted to take advantage of paste/selection and all the other goodies of text, but with fully-integrated styling.Like you, I found that standard text input boxes were far more interesting than contentEditable because they're just so simple overall.I think there's probably an interesting middle ground here where you render real markdown with the textarea effectively fully hidden (but still with focus), emulate the selection events of the rendered markup into the textarea, and basically get a beautiful editor with all the textarea solidness.reply",
      "Really cool! I just love the simplicity of it: has no drawbacks compared to regular textarea, but has lots of benefits. you basically improved textarea, by a lot!I also made a similar thing a while ago called contextarea.com, maybe, I should add overtype!reply",
      "Having to use a monospaced font is a pretty big drawback. To me, it means I wouldn't use this for a product that wasn't intended for a techie programmer audience.Not that it isn't a really cool project! I'm only saying it has clear drawbacks.reply",
      "This isn't really WYSIWYG because it keeps the formatting symbols like * or # etc.reply",
      "Still, what you see is what you get (plus some formatting symbols). It's marginally WYSIWYG.reply",
      "Nice! Seems very useful if you can drop in and have everything work.Nitpicking a bit: it's not as much _rendering_ markdown as it's _syntax highlighting_ it. Another interesting approach there could be to use the CSS Custom Highlight API [0]. Then it wouldn't need the preview div, and perhaps it'd even be possible to have non-mono fonts and varying size text for headers.[0] https://developer.mozilla.org/en-US/docs/Web/API/CSS_Custom_...reply"
    ],
    "link": "item?id=44932651",
    "first_paragraph": ""
  },
  {
    "title": "AI vs. Professional Authors Results (mark---lawrence.blogspot.com)",
    "points": 33,
    "submitter": "biffles",
    "submit_time": "2025-08-17T21:41:42 1755466902",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=44935171",
    "comments": [
      "I think this is similar to AI generated images: it puts a new creative tool in the hands of people who might have had good ideas, but didn't have a mastery of the medium. In that respect, it's cool: if you had a great idea for a sci-fi story but no talent for writing, and if an LLM let you realize your vision, that's neat. It has some negative externalities for the craftsmen, but overall, more creativity is hardly a bad thing.The real problem is that the most lucrative uses of the tech aren't that. It's generating 10,000 fake books on Amazon on subjects you don't care about. It's cranking out SEO spam, generating monetizable clickbait, etc.reply",
      "And they haven't even gotten around to adding advertising into them yet!  Imagine when chat assistants subtly steer you towards certain products. Would you even know it was manipulating you?reply",
      "Personally I\u2019m having a blast reading AI generated fiction. As long as the direction is human, and often enough corrected to keep the minor inconsistencies out, the results are pretty good.For me it\u2019s no different from generating code with Claude, except it\u2019s generating prose. Without human direction your result ends up as garbage, but there\u2019s no need to go and actually write all the prose yourself.And I guess that just like with code, sometimes you have to hand craft something to make it truly good. But that\u2019s probably not true for 80% of the story/code.reply",
      "Who's voice are you using when adding your hand crafted prose? Mimicking the style of the 80% or switching to your own?Perhaps I'm a Luddite, or just in the dissonance phase toward enlightenment, but at the moment I don't want to invest in AI fiction. A big part of the experience for me is understanding the author's mind, not just the story being toldreply",
      "I think there\u2019s only a very small subset of fiction that uses the prose to that extent. Much like code really. If you are writing original algorithms you cannot use the LLM. If you are just remixing existing ones, it becomes a lot more useful.reply",
      "Plot twist, people who do first drafts and structural edits with AI can still do line edits and copy edits by hand for personal voice (and you have to anyhow if you want the prose to be exceptional).reply",
      "> A big part of the experience for me is understanding the author's mind, not just the story being toldAI content is really exposing how people fall into a group that does go further than the surface text into deeper layers of context/subtext, and a group that doesn't.reply",
      "I could be in either group, depending on my inclination at the moment.reply",
      "I would love to read some of this. Where do you find AI generated fiction?reply",
      "Perhaps what this is pointing out is that a lot of writers of the genre of \"fantasy\" produce mostly formulaic, trope-laden piles of crap that AI is pretty good at mimicking?This is neither new nor news.  \"The Well-Tempered Plot Device\" is almost 4 decades old (see: https://news.ansible.uk/plotdev.html).It does suggest that publishers might want to screen new writing with a quick \"Did AI write this?\" and only publish the ones where it is obvious to humans that AI did not write it.reply"
    ],
    "link": "http://mark---lawrence.blogspot.com/2025/08/the-ai-vs-authors-results-part-2.html",
    "first_paragraph": "I'm the author of The Broken Empire, The Red Queen's War, & Book of the Ancestor trilogies - spare ideas land here.         \n ______________ Twitter @mark__lawrence (2 underscores!) \nBefore you look at the results make sure to do the test!So, before I get to the numbers and reveals I'll reiterate a few things:i)\u00a0 I hate that AI can do this.ii)\u00a0 These authors write books - typically long series - so flash fiction is not their forte.iii)\u00a0 Flash fiction is where AI does best - it starts to fall apart as the required work gets longer.Some have questioned \"why flash fiction\"...Answer: because you test things at breaking point. If I'm interested in what it takes to smash a window I don't throw 8 anvils at 8 windows and 8 ping-pong balls at 8 windows and say, \"Welp, there you have it, anvils are 100% better than ping-pong balls.\"\u00a0In the first blog post 2 years ago the performance of the authors and AI overlapped but the authors did better on the whole. So my guess was correct, this is where t"
  },
  {
    "title": "Derivatives, Gradients, Jacobians and Hessians (demofox.org)",
    "points": 187,
    "submitter": "ibobev",
    "submit_time": "2025-08-17T14:08:18 1755439698",
    "num_comments": 46,
    "comments_url": "https://news.ycombinator.com/item?id=44931666",
    "comments": [
      "The way that really made me understand gradients and derivative was when visualizing them as Arrow Maps. I even made a small tool https://github.com/GistNoesis/VisualizeGradient . This visualization helps understand optimization algorithm.Jacobians can be understood as a collection of gradients when considering each coordinates of the output independently.My mental picture for Hessian is to associate each point with the shape of a parabola (or saddle), which best match the function locally. It's easy to visualize once you realize it's the shape of what you see when you zoom-in on the point. (Technically this mental picture is more of a hessian + gradient tangent plane simultaneously multivariate Taylor expansion but I find them hard to mentally separate the slope from the curvature).reply",
      "A bit more advanced than this post, but for calculating Jacobians and Hessians, the Julia folks have done some cool work recently building on classical automatic differentiation research: https://iclr-blogposts.github.io/2025/blog/sparse-autodiff/reply",
      "Have you tried using Enzyme (https://enzyme.mit.edu/)? It operates on the LLVM IR, so it's available in any language that breaks down into LLVM (e.g., Julia, where I've used it for surface gradients) and it produces highly optimized AD code. Pretty cool stuff.reply",
      "Yeah I've used it (cool project indeed!), albeit mostly just in a project I and others in the autodiff community maintain which benchmarks many different autodiff tools against each other: https://github.com/gradbench/gradbenchreply",
      "About a decade ago I was interviewed for Apple's self driving car project and an exec on the project asked me to define these exact 4 things in great detail and provide examples. Shrugs.reply",
      "There's something that's always been deeply confusing to me about comparing the Jacobian and the Hessian because their nature is very different.The Hessian shouldn't have been called a matrix.The Jacobian describes all the first order derivatives of a vector valued function (of multiple inputs), while the Hessian is all the second order derivatives of a scalar valued output function (of multiple inputs). Why doesn't the number of dimensions of the array increase by one as the derivation order increases? It does! The object that fully describes second order derivation of a vector valued function of multiple inputs is actually a 3 dimensionnal tensor. One dimension for the original vector valued output, and one for each derivation order. Mathematicians are afraid of tensors of more than 2 dimensions for some reason and want everything to be a matrix.In other words, given a function R^n -> R^m:Order 0: Output value: 1d array of shape (m) (a vector)Order 1: First order derivative: 2d array of shape (m, n) (Jacobian matrix)Order 2: Second order derivative: 3d array of shape (m, n, n) (array of Hessian matrices)It all makes sense!Talking about \"Jacobian and Hessian\" matrices as if they are both naturally matrices is highly misleading.reply",
      "At least in my undergrad multivariate real analysis class, I remember the professor arranging things to strongly suggest that the Hessian should be thought of as \u2207\u2297\u2207, and that this was the second term in a higher dimensional Taylor series, so that the third derivative term would be \u2207\u2297\u2207\u2297\u2207 etc. Things like tensor products or even quotient spaces weren't assumed knowledge, so it wasn't explicitly covered, but I remember feeling the connection was obvious enough at the time. Then an introductory differential geometry class got into (n,m) tensors. So I'm quite sure mathematicians are fine dealing with tensors. My experience was undergrad engineering math tries to avoid even covectors though, so that will stay well clear of a coherent picture of multi-variable calculus. e.g. my engineering professors would talk of dirac \u03b4 as an infinite spike/spooky doesn't-really-exist thing that makes integrals work or whatever. My analysis professor just said \u03b4(f) = f(0) is a linear functional.reply",
      "I agree it is confusing, because starting with notation will confuse you. I personally don't like the partial derivative-first definition of those concepts, as it all sounds a bit arbitrary.What made sense to me is to start from the definition of derivative (the best linear approximation in some sense), and then everything else is about how to represent this. vectors, matrices, etc. are all vectors in the appropriate vector space, the derivative is always the same form in a functional form, etc.E.g. you want the derivative of f(M) ? Just write f(M+h) - f(M), and then look for the terms in h / h^2 / etc. Apply chain rules / etc. for more complicated cases. This is IMO a much better way to learn about this.As for notation, you use vec/kronecker product for complicated cases: https://janmagnus.nl/papers/JRM093.pdfreply",
      "This doesn't really help with programming, but in physics it's traditional to use up- and down-stairs indices, which makes the distinction you want very clear.If input x has components x\u207f, and output f(x) components f\u1d50, then the Jacobian is \u2202\u2099f\u1d50 which has one index upstairs and one downstairs. The derivative has a downstairs index... because x is in the denominator of d/dx, roughly? If x had units seconds, then d/dx has units per second.Whereas if g(x) is a number, the gradient is \u2202\u2099g, and the Hessian is \u2202\u2099\u2202\u2099\u2082g with two downstairs indices. You might call this a (0,2) tensor, while the Jaconian is (1,1). Most of the matrices in ordinary linear algebra are (1,1) tensors.reply",
      "We always referred to them as super/sub-scripts. So like x\u2099 is read \u201cx sub n\u201dUpstairs/downstairs is kinda cute tho xDreply"
    ],
    "link": "https://blog.demofox.org/2025/08/16/derivatives-gradients-jacobians-and-hessians-oh-my/",
    "first_paragraph": "This article explains how these four things fit together and shows some examples of what they are used for.Derivatives are the most fundamental concept in calculus.  If you have a function, a derivative tells you how much that function changes at each point.If we start with the function , we can calculate the derivative as .  Here are those two functions graphed.One use of derivatives is for optimization \u2013 also known as finding the lowest part on a graph.If you were at  and wanted to know whether you should go left or right to get lower, the derivative can tell you.  Plugging 1 into  gives the value -4. A negative derivative means taking a step to the right will make the y value go down, so going right is down hill. We could take a step to the right and check the derivative again to see if we\u2019ve walked far enough.  As we are taking steps, if the derivative becomes positive, that means we went too far and need to turn around, and start going left.  If we shrink our step size whenever we"
  },
  {
    "title": "ArchiveTeam has finished archiving all goo.gl short links (archiveteam.org)",
    "points": 289,
    "submitter": "pentagrama",
    "submit_time": "2025-08-17T17:46:04 1755452764",
    "num_comments": 59,
    "comments_url": "https://news.ycombinator.com/item?id=44933401",
    "comments": [
      "Excellent! ArchiveTeam have always been impressive this way. Some years ago, I was working at a video platform that had just announced it would be shutting down fairly soon. I forget how, but one way or another I got connected with someone at ArchiveTeam who expressed their interest in archiving it all before it was too late. Believing this to be a good idea, I gave them a couple of tips about where some of our device-sniffing server endpoints were likely to give them a little trouble, and temporarily \"donated\" a couple EC2 instances to them to put towards their archiving tasks.Since the servers were mine, I could see what was happening, and I was very impressed. Within I want to say two minutes, the instances had been fully provisioned and were actively archiving videos as fast as was possible, fully saturating the connection, with each instance knowing to only grab videos the other instances had not already gotten. Basically they have always struck me as not only having a solid mission, but also being ultra-efficient in how they carry it out.reply",
      "Title is imprecise, it's Archiveteam.org, not Archive.org. The Internet Archive is providing free hosting, but the archival work was done by Archiveteam members.reply",
      "What exactly is archiveteam's contribution? I don't fully understand.Edit: Like they kinda seem like an unnecessary middle-man between the archive and archivee, but maybe I'm missing something.reply",
      "What ArchiveTeam mainly does is provide hand-made scripts to aggressively archive specific websites that are about to die, with a prioritization for things the community deems most endangered and most important. They provide a bot you can run to grab these scripts automatically and run them on your own hardware, to join the volunteer effort.This is in contrast to the Wayback Machine's builtin crawler, which is just a broad spectrum internet crawler without any specific rules, prioritizations, or supplementary link lists.For example, one ArchiveTeam project had the goal to save as many obscure Wikis as possible, using the MediaWiki export feature rather than just grabbing page contents directly. This came in handy for thousands of wikis that were affected by Miraheze's disk failure and happened to have backups created by this project. Thanks to the domain-specific technique, the backups were high-fidelity enough that many users could immediately restart their wiki on another provider as if nothing happened.They also try to \"graze the rate limit\" when a website announces a shutdown date and there isn't enough time to capture everything. They actively monitor for error responses and adjust the archiving rate accordingly, to get as much as possible as fast as possible, hopefully without crashing the backend or inadvertently archiving a bunch of useless error messages.reply",
      "I just made a root comment with my experience seeing their process at work, but yeah it really cannot be overstated how efficient and effective their archiving process isreply",
      "Their MediaWiki tool was also invaluable in helping us fork the Path of Exile wiki from Fandom.reply",
      "> Like they kinda seem like an unnecessary middle-man between the archive and archiveeThey are the middlemen that collects the data to be archived.In this example the archivee (goo.gl/Alphabet) is simply shutting the service down and has no interest in archiving it. Archive.org is willing to host the data, but only if somebody brings it to them. Archiveteam writes and organises crawlers to collect the data and send it to Archive.orgreply",
      "Archive Team is carrying books in a bucket brigade out of the burning library. Archive.org is giving them a place to put the books they saved.reply",
      "ArchiveTeam delegates tasks to volunteers and themselves running the Archive Warrior VM, which does the actual archiving. The resultant archives are then centralized by ArchiveTeam and uploaded to the Internet Archive.(Source: ran a Warrior)reply",
      "Sidenote, but you can also run a Warrior in Docker, which is sometimes easier to set up (e.g. if you already have a server with other apps in containers).reply"
    ],
    "link": "https://tracker.archiveteam.org/goo-gl/",
    "first_paragraph": "The ArchiveTeam Warrior is a virtual archiving appliance. You can run it to help with the ArchiveTeam archiving efforts. It will download sites and upload them to our archive \u2014 and it\u2019s really easy to do!The warrior is a virtual machine, so there is no risk to your computer. The warrior will only use your bandwidth and some of your disk space.The warrior runs on Windows, OS X and Linux. You\u2019ll need VirtualBox (recommended), VMware or a similar program to run the virtual machine.Instructions for VirtualBox:Once you\u2019ve started your warrior:Loading..."
  },
  {
    "title": "Show HN: NextDNS Adds \"Bypass Age Verification\"",
    "points": 239,
    "submitter": "nextdns",
    "submit_time": "2025-08-17T14:29:22 1755440962",
    "num_comments": 66,
    "comments_url": "https://news.ycombinator.com/item?id=44931824",
    "comments": [
      "It may not be effective in the long term, but I think it's very much worth doing. The privacy nightmare of uploading government docs is appalling and should be resisted by all who can, so I think you're doing great work. If it provokes regulators to push harder, they might just get enough attention from voters to motivate a change. That would be my hope anywayreply",
      "> More and more sites (especially adult ones) are now forcing users to upload IDs or selfies to continue.> they might just get enough attention from voters to motivate a changeUnfortunately, guaranteeing anonymous internet porno is a terrible political beachhead to motivate \"voters\" to do anything.reply",
      "You don't have to sell it like that. The bill that needs to be passed is default presumption that all websites on the internet not explicitly marked as such and who voluntarily accept a higher legal burden and standard of moderation may contain content not suitable for children. And that is up to parents to control their child's internet access to limit their usage to only these sites.Because I don't actually care about pornography, if it magically disappeared I wouldn't really care, it's all the other \"not suitable for kids\" content I care about that will get caught up in these laws. I don't want to give gross concern troll political groups moralizing about their precious hypothetical children the legal tools to ban what they don't like.reply",
      "It's a great idea to get rid of, I'm shocked a company is this brave to do this. It's not in the interest of any adult to upload their ID so the government can track their web browsing. I didn't want to expose my kid to porn when they were 5, somehow it wasn't a problem because the avg browser use was guided by me, but also the browser blocked porn. When they were a bit older, a teenager, I also lightly guided their computer use.reply",
      "Even if this was a good idea, ID verification technology should not be outsourced to private parties. This is a service governments themselves must provide. I shouldn't need to upload an ID because the government already has it!If they simply wanted age verification, the dumb and lazy way is to SSO through a government managed portal with OAUTH2 and you only share your age with the third party. You do a one time account setup (you already have to do this in the US for many government services at the federal level) with age verification, that's your gov portal login.  This means the government will now which naughty sites you visit of course, but like I said, it is the lazy approach, and if you think about it, if they respect the laws then a law can be passed to prevent them from storing or using that association, if they didn't, they could still sniff your traffic and wiretap you.A slightly smarter approach would be to directly auth against a government portal and be given a 24h expiring code for age verification, and the government will publish an updated list of codes to trusted businesses. Those codes could be leaked, but making it a felony should deter most cases, because who wants to go to prison to let some kids watch porn?Smarter people than me can come up with smarter solution, that is really my point. Involving third-parties and requiring you to upload documents is done either out of extreme incompetence or opportunistic malice by elected officials (bribery).reply",
      "South Korea has implemented something similar (we're very prudish about adult material online) but through private corporations, not directly by the government.When you sign up with a South Korean online service that might contain age-restricted content, you provide your name, date of birth, and phone number. The service operator uses a special telecom-provided API to have a 6-digit code sent to the phone. (The code is generated by the telecom, not the service operator.) When the user enters the code, the telecom confirms that the date of birth is correct. No need to exchange government IDs, because it is assumed that the telecom has already verified it offline.You could probably do something similar via banks, schools, the social security system, or any other regulated industry that has KYC rules.reply",
      "That\u2019s a bold move. Handing over IDs to random sites is definitely a privacy nightmare, so I get why you built this. The real question is whether it buys time for users or just accelerates the push for stricter regulation. Either way, it sparks an important conversationreply",
      "At least outside of countries that already limit their citizens access to the internet, censorship regulations tend to apply only to providers, not end users, so it would be extremely difficult to go after an extraterritorial VPN provider.  In the US, extraterritorial jurisdiction includes not just providers outside of the country, but providers outside of the state. For example, see: https://en.wikipedia.org/wiki/Marquette_National_Bank_of_Min....reply",
      "> Handing over IDs to random sites is definitely a privacy nightmareThey just need to leak all of the elected official internet usage. You'll see this rolled back faster than it was implemented.I really can't wait for the video titles of the porn our government officials watch to be read out loud by newscasters. That's going to be such sweet karma.reply",
      "As a remark, not a criticism, such a deliberate promotion is probably illegal in the UK market,> \"But Ofcom says platforms required to introduce \"highly effective\" methods to check user age must not host, share or permit content that encourages use of VPNs to get around age checks. The government has also told the BBC it would be illegal for platforms to do so.\"https://www.bbc.com/news/articles/cn72ydj70g5oreply"
    ],
    "link": "item?id=44931824",
    "first_paragraph": ""
  },
  {
    "title": "Modifying other people's software (natkr.com)",
    "points": 11,
    "submitter": "todsacerdoti",
    "submit_time": "2025-08-14T03:32:18 1755142338",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://natkr.com/2025-08-14-modifying-other-peoples-software/",
    "first_paragraph": "Every once in a while, we all feel the need to modify something that\nsomeone else built.Sometimes those patches make sense to upstream, but not always.\nSometimes they need a bit more time to bake, before they're ready to\nshare with the world.\nSometimes they're too specific to your environment.\nSometimes it's just some personal preference, that the upstream\nwouldn't want to force upon everyone.\nAnd sometimes, just sometimes, you just want to run it yourself now,\nbefore it has had the time to make it through the whole review gauntlet.Hey.\nJust a heads up, this is a (very) long-winded1 announcement for a\nnew project of mine,\nLappverk.\nThe rest of the post will provide some background on the hows and\nwhys, and I'd recommend sticking around for that.\nBut you can always jump\nstraight over there, if you'd like. I won't hold you.These days, pretty much every project uses Git.\nIt is, famously, a DVCS. A Distributed Version Control System.\nDistributed. It's right there in the acronym. That means"
  },
  {
    "title": "Node.js is able to execute TypeScript files without additional configuration (nodejs.org)",
    "points": 334,
    "submitter": "steren",
    "submit_time": "2025-08-17T06:03:27 1755410607",
    "num_comments": 197,
    "comments_url": "https://news.ycombinator.com/item?id=44929260",
    "comments": [
      "I think this + node:test makes Node.js a pretty compelling sensible default for most things now. Running things with `tsx` was such a QoL improvement when it happened, but it didn't solve everything.Runtime type assertion at the edges is mostly solved through `zod` and tools like `ts-rest` and `trpc` makes it so much easier to do full-stack Typescript these days.reply",
      "This. It's 2025 and the node ecosystem is finally usable by default!ESM modules just work with both Node and Typescript, Node can run .ts files, and there's the a good enough test runner built in. --watch. The better built in packages - `node:fs/promises` - are nice with top-level await for easier async loops.It took a while to convince everyone involved to just be pragmatic, but it's nice now.reply",
      "What's the story with supporting CommonJS libraries? I've tried to update many projects to ESM multiple times over the years, and every time, I ended up backing out because it turned out that there was some important upstream library that was still CommonJS - or even if we fixed those issues, our downstream NPM consumers wouldn't be able to consume EJS. So then you have to go down this rabbit hole of dual compilation, which actually means using something other than tsc.reply",
      "It's possible, but it can be weird and difficult: https://nodejs.org/docs/latest-v17.x/api/esm.html#esm_common...Thankfully, actively-maintained CommonJS-only packages are quite rare by this point (in my experience).> our downstream NPM consumers wouldn't be able to consume EJSNode.js 20.17 and later supports loading ESM using `require()`: https://nodejs.org/api/modules.html#loading-ecmascript-modul...The next version of Babel (currently in beta) is even going ESM-only.reply",
      "It's almost like Python 2 to Python 3 upgrade. Took a decade but everyone is finally happy.reply",
      "This is great to hear, but perhaps comes too late for people like myself. Node.js has been by go-to platform from around 2014 until last year. But around September last year, I found myself thrust into the .NET ecosystem (due to a client project). Within a few months, I realized that it too, had finally become usable by default (unlike the last time I tried it, when it was too tightly coupled to Windows). In fact, it felt like what Node.js would be, if it had strong typing built-in, and had a good standard library that eliminated a lot of the module management and churn. I'm now finding it hard to return to Node.js.reply",
      "Interesting. I haven't looked hard at .Net despite some advocacy from past colleagues. Perhaps I should.reply",
      "Watching NodeJS fill in these gaps the last 5 years or so has been great, I strongly prefer using built-in stuff as much as possible now to avoid bloating the modules and becoming dependent on a thousand random people being good-stewards of their packages.reply",
      "I can\u2019t help but think that none of these would have happened without Deno doing it first. It was basically the pragmatic Node before Node started to get reasonable.reply",
      "That's kind of the whole history of NodeJS, dragged-forward kicking and screaming right from the 0.x and IO days!reply"
    ],
    "link": "https://nodejs.org/en/blog/release/v22.18.0",
    "first_paragraph": "Antoine du HamelNode.js will be able to execute TypeScript files without additional configuration:There are some limitations in the supported syntax documented at\nhttps://nodejs.org/api/typescript.html#type-stripping.This feature is experimental and is subject to change. Disable it by passing\n--no-experimental-strip-types CLI flag.Contributed by Marco Ippolito in #56350.Windows 32-bit Installer: https://nodejs.org/dist/v22.18.0/node-v22.18.0-x86.msi \nWindows 64-bit Installer: https://nodejs.org/dist/v22.18.0/node-v22.18.0-x64.msi \nWindows ARM 64-bit Installer: https://nodejs.org/dist/v22.18.0/node-v22.18.0-arm64.msi \nWindows 32-bit Binary: https://nodejs.org/dist/v22.18.0/win-x86/node.exe \nWindows 64-bit Binary: https://nodejs.org/dist/v22.18.0/win-x64/node.exe \nWindows ARM 64-bit Binary: https://nodejs.org/dist/v22.18.0/win-arm64/node.exe \nmacOS 64-bit Installer: https://nodejs.org/dist/v22.18.0/node-v22.18.0.pkg \nmacOS Apple Silicon 64-bit Binary: https://nodejs.org/dist/v22.18.0/nod"
  },
  {
    "title": "BBC Micro, ancestor to ARM (retrogamecoders.com)",
    "points": 101,
    "submitter": "ingve",
    "submit_time": "2025-08-17T13:08:44 1755436124",
    "num_comments": 85,
    "comments_url": "https://news.ycombinator.com/item?id=44931321",
    "comments": [
      "The article... well, it doesn't bury the lede, but it does completely omit it outside of the headline.  For anyone who doesn't know the context: The BBC Micro was built by Acorn Computers, which proceeded to design the Acorn RISC Machine -- later renamed to Advanced RISC Machine and thence to simply \"arm\".In many ways, the tuple (BBC Micro, Acorn Computers, arm) is analogous to (IBM PC, Intel, x86).reply",
      "> In many ways, the tuple (BBC Micro, Acorn Computers, arm) is analogous to (IBM PC, Intel, x86).There was a radical difference in the relationship between the two corporations in each tuple. In the BBC-Acorn relationship, Acorn designed and manufactured the computer; BBC just offered their brand, did marketing, and supplied some high-level requirements. In the IBM-Intel relationship, IBM designed and manufactured the computer, and Intel was the CPU vendor, with many other customers. The 6502s used in the pre-ARM BBC systems were from MOS Technology\u2013or one of their licensees, such as GTE/CMD\u2013so those companies were really the Intel equivalent herereply",
      "GTE: General Telephone & ElectronicsCMD: Commodore Micro-Devicesreply",
      "CMD in this case being California Micro Devices, who bought GTE\u2019s microprocessor business in the mid-to-late 1980s, and then was acquired by onsemi in 2009. The BBC Master used their CPUsThere is another CMD, Creative Micro Designs, who sold aftermarket peripherals for \nCommodore 64/etcreply",
      "Commodore manufactured chips either under the MOS Technology or Commodore Semiconductor Group (CSG) names.reply",
      "> In many ways, the tuple (BBC Micro, Acorn Computers, arm) is analogous to (IBM PC, Intel, x86)Except the BBC micro didn't use an ARM processor -  it used a 6502. Whereas  the IBM PC did use the Intel processor.reply",
      "Depends how nitpicky you want to be. There was an ARM \u201cBBC Micro\u201d.https://www.retro-kit.co.uk/page.cfm/content/Acorn-BBC-Archi...And the IBM PC used an 8088.https://en.m.wikipedia.org/wiki/IBM_Personal_Computerreply",
      "Let's be serious, the BBC micro is awesome but it's no more the ancestor to my phone than an Apple II.reply",
      "Well the ARM's original goal was to run BBC BASIC faster than the BBC B could run assembly code.To that end the ARM instruction set was heavily inspired by the 6502 in the Beeb and cruicially the BBC Micro was used to simulate the ARM before it went into production.Latter the original ARM development kits were connected as second processors to Beebs courtesy of the Tube connector.I think it's fare to say that without the BBC Micro there would be no ARM processors.https://arstechnica.com/gadgets/2022/09/a-history-of-arm-par...reply",
      "> Well the ARM's original goal was to run BBC BASIC faster than the BBC B could run assembly code.That seems an unlikely goal given BBC BASIC was interpreted! Happy to be proven wrong but I've never heard one of the original team say that.reply"
    ],
    "link": "https://retrogamecoders.com/bbc-micro-the-ancestor-to-a-device-you-are-guaranteed-to-own/",
    "first_paragraph": ""
  },
  {
    "title": "Here be dragons: Preventing static damage, latchup, and metastability in the 386 (righto.com)",
    "points": 62,
    "submitter": "todsacerdoti",
    "submit_time": "2025-08-17T15:34:10 1755444850",
    "num_comments": 34,
    "comments_url": "https://news.ycombinator.com/item?id=44932342",
    "comments": [
      "But as high-power transistors were developed, SCRs fell out of favor. In particular, once an SCR is turned on, it stays on until power is removed or reversed; this makes SCRs harder to use than transistors.SCRs, also known as thyristors, are still widely used in very high power applications.reply",
      "Author here if you have questions about some obscure circuitry in the 386.reply",
      "I think the metastability can't destroy a chip thing is not true, you can get a flop into a state where it's oscillating at whatever freq the internal feedback path is (maybe up to GHz) rather than resolving to a stable 1 or 0. That can propagate to adjacent flops resulting in a bunch of flops pulling too much current.Like anything to do with metastability this is a statistical thing - it can do this, but it's highly unlikely.I worked on a chip in the mid 90s where we were very careful about our clock crossings, dropped in special high-gain anti-metastability flops, designed logic to reduce synchronised signal frequencies etc etc all the good stuff - we calculated that we'd see a failure (and mostly that would be a pixel burble on the screen) every year or so - at the time Win95 couldn't stay up a week so management decided to ship itreply",
      "Windows 95 could stay up for a maximum of 49.7 days, provided that no horribly-written driver or application took down the system sooner.reply",
      "Fair enough. I changed the text to \"probably won't destroy\".reply",
      "Are the techniques described in the article still in use today or have they been superseded?reply",
      "My understanding is that modern techniques are similar, but the tradeoffs have changed as chip voltages become lower and transistors become smaller. (Admittedly, I don't know a lot about modern techniques.)This article, from a company that designs ESD circuits, describes various modern techniques: https://monthly-pulse.com/2022/03/29/introduction-esd-protec...reply",
      "\u201cIntel recommends an anti-static mat and a grounding wrist strap when installing a processor to avoid the danger of static electricity, also known as Electrostatic Discharge or ESD.1\u201dYou know back when I built my computers, not once did I ever use any kind of static electricity discharge \u201csystem\u201d.  No wrist strap, no mat, no anything. And I don\u2019t know anybody who did.Has anybody ever actually destroyed a chip with static electricity?(Of course it could be the climate I lived in as well)reply",
      "Yes, although it's not very likely.But keep in mind that final assembly and packaging is typically happening in large, air-conditioned halls with vinyl floors, conveyor belts, plastic office chairs, disposable coveralls, etc. There's more static zaps in places like that than in a home with wooden floors, reasonable humidity, and casual clothing.And then, as Ken notes, there's the question of scale. If you statistically kill one chip in 200, you might not even notice that in a home lab. But for a manufacturer, that's more faulty devices shipping to customers than they want.reply",
      "I damaged an embedded development board by walking across a carpeted room before touching it.  When I touched it I heard, felt, and saw the zap and one of the IO ports was stuck after that.reply"
    ],
    "link": "http://www.righto.com/2025/08/static-latchup-metastability-386.html",
    "first_paragraph": "Computer history, restoring vintage computers, IC reverse engineering, and whateverI've been reverse-engineering the Intel 386 processor (from 1985), and I've come across some interesting\ncircuits for the chip's input/output (I/O) pins.\nSince these pins communicate with the outside world, they face special dangers:\nstatic electricity and latchup can destroy the chip, while metastability can cause serious malfunctions.\nThese I/O circuits are completely different from the logic circuits in the 386, and I've come\nacross a previously-undescribed flip-flop circuit, so I'm\nventuring into uncharted territory.\nIn this article, I take a close look at how the I/O circuitry protects the 386 from\nthe \"dragons\" that can destroy it.The 386 die, zooming in on some of the bond pad circuits. The colors change due to the effects of different microscope lenses. Click this image (or any other) for a larger version.The photo above shows the die of the 386 under a microscope.\nThe dark, complex patterns arra"
  },
  {
    "title": "IQ Tests Results for AI (trackingai.org)",
    "points": 175,
    "submitter": "stared",
    "submit_time": "2025-08-17T09:36:22 1755423382",
    "num_comments": 279,
    "comments_url": "https://news.ycombinator.com/item?id=44930222",
    "comments": [
      "The way human IQ testing developed is that researchers noticed people who excel in one cognitive task tend to do well in others - the \u201cpositive manifold.\u201dThey then hypothesized a general factor, \u201cg,\u201d to explain this pattern. Early tests (e.g., Binet\u2013Simon; later Stanford\u2013Binet and Wechsler) sampled a wide range of tasks, and researchers used correlations and factor analysis to extract the common component, then norm it around 100 with a SD of 15 and call it IQ.IQ tend to meaningfully predicts performance across some domains especially education and work, and shows high test\u2013retest stability from late adolescence through adulthood. It is also tend to be consistent between high quality tests, despite a wide variety of testing methods.It looks like this site just uses human rated public IQ tests. But it would have been more interesting if an IQ test was developed specifically for AI. I.e. a test that would aim to Factor out the strength of a model general cognitive ability across a wide variety of tasks. It is probably doable by doing principal component analysis on a large set of benchmarks available today.reply",
      "> The way human IQ testing developed is that researchers noticed people who excel in one cognitive task tend to do well in othersMy son took an IQ test and it wouldn't score him because he breaks this assumption.  He was getting 98% in some tasks and 2% in others.  The psychologist giving him the test said it was unlikely enough pattern that they couldn't get an IQ result for him.  He's been diagnosed with non-verbal learning disability, and this is apparently common for nvld folks.reply",
      "IMO g is purely an abstraction.  As long as the rate you learn most things is within a reasonable bound spending more or less time learning/perfecting X impacts the time you spend on Y, resulting in people being generally more or less proficient in a huge range of common cognitive skills. Thus, testing those general skills is normally a proxy for a wide range of things.LD breaks IQ because it results in noticeably uneven skill acquisition in even foundational skills.  Meanwhile increasing levels of specialization reward being abnormally good at a very narrow sets of skills making IQ less significant.  The #1 rock climber in the world gets sponsors, the 100th gets a hobby.reply",
      "For me it all made sense when I heard that IQ/g-factor basically vanishes in the absence of time pressure (heard if from Richard Haier on Lex).For a very narrow range of professions, like ATCs, time is absolutely critical but for most it does not really matter that much. Especially in many STEM fields. I think people in a broad IQ range can build abstractions and acquire intuitions about pretty complex matter. From this view-point ability to concentrate for long times, curiosity etc. seem more important than \"raw-compute\".\"if you value intelligence above all other human qualities, you\u2019re gonna have a bad time\" - IlyaTimeless statement imo, even in the absence of AIreply",
      "Just to add an anecdote, as of 15 years ago I had similar scores and was diagnosed with dyslexia.reply",
      "My son struggled quite a bit learning to read.  He was very slow to do so, and it frustrated him quite a lot.  But interestingly, once he did get it, he became a voracious reader, and he's never since scored below 95th percentile on reading tests. So his developmental dyslexia did not carry over into general dyslexia.One of the interesting things about nvld, at least in his case, is that you would never know he had a learning disability by talking to him.  He comes across as a smart, mature, knowledgeable young man.  Mostly because this is what he actually is.  But when he does struggle with something, it is often interpreted as him not trying or being lazy.reply",
      "To add a bit more, I didn't really read until later, around 8, but then read at a fairly quick and passionate amount for my age. People thought I'd dodged my family curse but later around 10 it was shown I was quite behind at school. My dyslexia was described as \"a defect in one aspect of intelligence\", which for most kids is reading comprehension, but for me it showed in a lack of decent short term memory. As you say, learning disabilities are interesting issues to deal with, but I'm sure your son will do great with support like you around him.reply",
      "A rule whose exceptions are one in a hundred fails for three million Americans.reply",
      "And works for 290 million plus\u2026reply",
      "my son had similar results! we thought NVLD - now we are pretty certain Kabuki Syndrome.reply"
    ],
    "link": "https://www.trackingai.org/home",
    "first_paragraph": "AIs regularly request and update.Frequently Asked Questions\n                I created this website so that anyone can immediately see up-to-date AI chatbot political opinions and biases. I hope that will be useful in a couple ways:\n              \n                This site was inspired by the AI political mapping work of David Rozado, who did some of the first snapshots on AI bias. But since AI models change their answers constantly, I think this site will serve an as an important utility for people aiming to judge AI bias.\n              If you\u2019d like to book me for a media appearance about AI bias, please reach me at: maxim.lott@gmail.com\n                As of 2023, every major AI is economically left-wing and also relatively socially libertarian. Some AIs are much more like that than others, however, with Claude tending towards being one of the most moderate models, and Google\u2019s Bard being one of the most extreme-left models.\n              \n                  An AI\u2019s political bias is "
  },
  {
    "title": "I Prefer RST to Markdown (2024) (buttondown.com/hillelwayne)",
    "points": 26,
    "submitter": "shlomo_z",
    "submit_time": "2025-08-17T19:51:39 1755460299",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=44934386",
    "comments": [
      "Guaranteed, reST is more feature-complete and extension-friendly, but it is simply unusable for me because it wasn't designed for agglutinative languages like Korean. Markdown is much better in this case (though CommonMark has an annoying edge case [1]).[1] https://talk.commonmark.org/t/foo-works-but-foo-fails/2528reply",
      "My only problem with rst is that several useful the extentions are not updated. I have some great rst documentation, but part of that is I importing doxygen, dolphin, and other extentions that are useful but saddly not updated on the same schedule as the main tool. I end up many versions back just because it is all that is compatible.still markdown just isn't powerful enough for anything non trivial.reply"
    ],
    "link": "https://buttondown.com/hillelwayne/archive/why-i-prefer-rst-to-markdown/",
    "first_paragraph": "I just published a new version of Logic for Programmers! v0.2 has epub support, content on constraint solving and formal specification, and more! Get it here.This is my second book written with Sphinx, after the new Learn TLA+. Sphinx uses a peculiar markup called reStructured Text (rST), which has a steeper learning curve than markdown. I only switched to it after writing a couple of books in markdown and deciding I needed something better. So I want to talk about why rst was that something.1The most important difference between rst and markdown is that markdown is a lightweight representation of html, while rst is a midweight representation of an abstract documentation tree.It's easiest to see this with a comparison. Here's how to make an image in markdown:Technically, you don't even need a parser for this. You just need a regex to transform it into  <img alt=\"alttext\" src=\"example.jpg\"/>. Most modern markdown engines do parse this into an intermediate representation, but the essence"
  },
  {
    "title": "MS-DOS development resources (github.com/superilu)",
    "points": 50,
    "submitter": "mariuz",
    "submit_time": "2025-08-17T16:10:37 1755447037",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=44932624",
    "comments": [
      "16-bit Borland C++ is also available: https://winworldpc.com/product/borland-c/20reply",
      "If anyone here is interested, a DOS game jam was announced recently for a streaming event called DOSember. https://itch.io/jam/dosember-game-jam Starts in a couple of weeks and lasts for three months.reply",
      "DOS is an interesting platform because it can run on old hardware, and then basically anything else by way of emulation (such as in browsers) or via DOSBox.If networking can be plumbed up, it's probably a legitimate and fun application platform for some uses that's worthy of investing time building on either for fun or for something real.reply",
      "Not mentioned is the https://pcjs.org/ site which purports to let you emulate various machines in your browser, select from different disk images, and overall seems full-featured, though it is confusing and presents some difficulty when trying getting it to work on some configuration besides the pre-baked ones that you can come across.reply",
      "I would like to see 16-bit Rustreply",
      "The Free Pascal compiler can produce DOS executables as well.reply",
      "I really enjoyed seeing the tools that provide an MS-DOS ecosystem.I didn\u2019t know there was an open source version of the Watcom compilers and a 16-bit library to support them.reply"
    ],
    "link": "https://github.com/SuperIlu/DOSDevelResources/blob/main/README.md",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page."
  },
  {
    "title": "Primitive Streaming Gods (tedium.co)",
    "points": 3,
    "submitter": "_vaporwave_",
    "submit_time": "2025-08-15T20:37:14 1755290234",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://tedium.co/2018/01/30/legal-music-streaming-history/",
    "first_paragraph": ""
  },
  {
    "title": "HN Search isn't ingesting new data since Friday (github.com/algolia)",
    "points": 164,
    "submitter": "busymom0",
    "submit_time": "2025-08-17T20:08:56 1755461336",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=44934518",
    "comments": [
      "RSS was broken too? At least https://hnrss.github.io/ was broken.reply",
      "Sorry all. We've let the Algolia team know and they're working on it.reply",
      "Sorry for the delays here.  All the stories and comments missed should be backfilling as we speak.  It's almost done.  I posted updates further down, but wanted to post here since it's the top comment.  We'll get an update on what happened and our plan to make sure we are on top of this in the coming days.reply",
      "Btw, HN Replies also stopped working for me a month or two ago. Not sure why (I imagine something to do with my email or domain - re-registering didn't help), but if you find a chance to look into it I'd be grateful.reply",
      "I normally use the Harmonic app and it hasn't been loading post replies the last 2 days or so, citing a likely Algolia issue. Maybe a related issue.reply",
      "HACK app on iOS, macOS and android works along with the push notifications for replies:https://apps.apple.com/app/id1464477788https://play.google.com/store/apps/details?id=com.pranapps.h...I am the developer.reply",
      "I have found HN replies always just stop, after some time. I resubbed a couple of times, and never bothered, after the last one stopped working.This has been going on for me, for a couple of years, I think.reply",
      "Same!reply",
      "This has happened before and it will happen again. Outages happen.Can you share with us what the best point of contact or escalation path to reach out to the next time it happens on the Algolia side?reply",
      "Someone else posted this as well, but ... you wouldn't be able to find it.There are dozens, dozens of us that use hn.aloglia, much better interface than the front page.reply"
    ],
    "link": "https://github.com/algolia/hn-search/issues/248",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.It appears that the HN search stopped pulling in new data on Friday evening.Spot-checking the HN API, I see current data matching the live front page. So I think algolia/hn-search is the right place to flag the issue."
  }
]