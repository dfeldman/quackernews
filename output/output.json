[
  {
    "title": "We were wrong about GPUs (fly.io)",
    "points": 251,
    "submitter": "mxstbr",
    "submit_time": "2025-02-14T22:36:31 1739572591",
    "num_comments": 146,
    "comments_url": "https://news.ycombinator.com/item?id=43053844",
    "comments": [
      "> The biggest problem: developers don\u2019t want GPUs. They don\u2019t even want AI/ML models. They want LLMs. System engineers may have smart, fussy opinions on how to get their models loaded with CUDA, and what the best GPU is. But software developers don\u2019t care about any of that. When a software developer shipping an app comes looking for a way for their app to deliver prompts to an LLM, you can\u2019t just give them a GPU.I'm increasingly coming to the view that there is a big split among \"software developers\" and AI is exacerbating it.  There's an (increasingly small) group of software developers who don't like \"magic\" and want to understand where their code is running and what it's doing.  These developers gravitate toward open source solutions like Kubernetes, and often just want to rent a VPS or at most a managed K8s solution.  The other group (increasingly large) just wants to `git push` and be done with it, and they're willing to spend a lot of (usually their employer's) money to have that experience.  They don't want to have to understand DNS, linux, or anything else beyond whatever framework they are using.A company like fly.io absolutely appeals to the latter.  GPU instances at this point are very much appealing to the former.  I think you have to treat these two markets very differently from a marketing and product perspective.  Even though they both write code, they are otherwise radically different.  You can sell the latter group a lot of abstractions and automations without them needing to know any details, but the former group will care very much about the details.\n \nreply",
      "> There's an (increasingly small) group of software developers who don't like \"magic\" and want to understand where their code is running and what it's doing. These developers gravitate toward open source solutions like KubernetesKubernetes is not the first thing that comes to mind when I think of \"understanding where their code is running and what it's doing\"...\n \nreply",
      "It's very easy to understand once you invest a little bit of time.That's assuming you have a solid foundation in the nuts and bolts of how computers work to begin with.If you just jumped into software development without that background, well, you're going to end up in the latter pool of developers as described by the parent comment.\n \nreply",
      "Really? There are plenty of valid criticisms of kubernetes, but this doesn't strike me as one of them. It gives you tons of control over all of this. That's a big part of why it's so complex!\n \nreply",
      "Lol. Yes. I scoffed.\n \nreply",
      "This is a false dichotomy. The truth is we are constantly moving further and further away from the silicon. New developers don't have as much need to understand these details because things just work; some do care because they work at a job where it's required, or because they're inherently interested (a small number).Over time we will move further away. If the cost of an easily managed solution is low enough, why do the details matter?\n \nreply",
      "> The truth is we are constantly moving further and further away from the silicon.Are we? We're constantly changing abstractions, but we don't keep adding them all that often. Operating systems and high-level programming languages emerged in the 1960s. Since then, the only fundamentally new layer of abstraction were virtual machines (JVM, browser JS, hardware virtualization, etc). There's still plenty of hardware-specific APIs, you still debug assembly when something crashes, you still optimize databases for specific storage technologies and multimedia transcoders for specific CPU architectures...\n \nreply",
      "> There's still plenty of hardware-specific APIs, you still debug assembly when something crashes, you still optimize databases for specific storage technologies and multimedia transcoders for specific CPU architectures...You might, maybe, but an increasing proportion of developers:- Don't have access to the assembly to debug it- Don't even know what storage tech their database is sitting on- Don't know or even control what CPU architecture their code is running on.My job is debugging and performance profiling other people's code, but the vast majority of that is looking at query plans. If I'm really stumped, I'll look at the C++, but I've not yet once looked at assembly for it.\n \nreply",
      "This makes sense to me.  When I optimize, the most significant gains I find are algorithmic.  Whether it's an extra call, a data structure that needs to be tweaked, or just utilizing a library that operates closer to silicon.  I rarely need to go to assembly or even a lower level language to get acceptable performance. The only exception is occasionally getting into architecture specifics of a GPU.  At this point, optimizing compilers are excellent and probably have more architecture details baked into them than I will ever know. Thank you, compiler programmers!\n \nreply",
      "Maybe fundamentally is an extremely load bearing word here, but just in the hardware itself we see far more abstraction than we saw in the 60s. The difference between what we called microcode in an 8086 and what is running in any processor you buy in 2025 is an abyss. It almost seems like hardware emulation. I could argue that the layers of memory caching that modern hardware have are themselves another layer vs the days when we sent instructions to change which memory banks to read. The fact that some addresses are very cheap and others are not, and the complexity is handled in hardware is very different than stashing data in extra registers we didn't need this loop. The virtualization any OS does for us is much deeper than even a big mainframe that was really running a dozen things at once. It only doesn't look like additional layers if you look from a mile away.The majority of software today is written without knowing even which architecture the processor is going to be, how much of the processor we are going to have, whether anything will ever fit in memory... hell, we can write code that doesn't know not just the virtual machine it's going to run in, but even the family of virtual machine. I have written code that had no idea if it was running in a JVM, LLVM or a browser!So when I compare my code from the 80s to what I wrote this morning, the distance from the hardware doesn't seem even remotely similar. I bet someone is writing hardware specific bits somewhere, and that maybe someone's debugging assembly might actually resemble what the hardware runs, maybe. But the vast majority of code is completely detached from anything.\n \nreply"
    ],
    "link": "https://fly.io/blog/wrong-about-gpu/",
    "first_paragraph": "We\u2019re building a public cloud, on hardware we own. We raised money to do that, and to place some bets; one of them: GPU-enabling our customers. A progress report: GPUs aren\u2019t going anywhere, but: GPUs aren\u2019t going anywhere.A couple years back, we put a bunch of chips down on the bet that people shipping apps to users on the Internet would want GPUs, so they could do AI/ML inference tasks. To make that happen, we created Fly GPU Machines.A Fly Machine is a Docker/OCI container running inside a hardware-virtualized virtual machine somewhere on our global fleet of bare-metal worker servers. A GPU Machine is a Fly Machine with a hardware-mapped Nvidia GPU. It\u2019s a Fly Machine that can do fast CUDA.Like everybody else in our industry, we were right about the importance of AI/ML. If anything, we underestimated its importance. But the product we came up with probably doesn\u2019t fit the moment. It\u2019s a bet that doesn\u2019t feel like it\u2019s paying off.If you\u2019re using Fly GPU Machines, don\u2019t freak out; we\u2019"
  },
  {
    "title": "A decade later, a decade lost (meyerweb.com)",
    "points": 111,
    "submitter": "ZeWaka",
    "submit_time": "2025-02-14T23:10:36 1739574636",
    "num_comments": 20,
    "comments_url": "https://news.ycombinator.com/item?id=43054069",
    "comments": [
      "I was a young (19/20) bartender in the mid to late 90s. One afternoon I worked a private event. There was a couple there that had been staring at me. Eventually they came over and apologized. They said I looked like their son and that he'd be about my age that time. I forget how old he was when he passed. But I'll never forget the pain their faces.Some good friends lost their son at 10 months old. He'd be 11 this year. It changed both of them. They've done amazing things since then, but you can see the weight on their faces.I wouldn't wish that pain on anyone.\n \nreply",
      "I lost a dog at 3 and a half years almost to the day to a congenital defect, that we didn\u2019t know about until he was already very sick. I\u2019m a guy who will cross a street to meet someone\u2019s dog. For over a year afterward I would cross the street to avoid walking past the same breed and color of dog. The way people avoid pitbulls.And that was just a dog. I can\u2019t even imagine what happens when your child dies, especially if your job or social circle involves them.The author said he has a therapist, but I wonder if he\u2019s had one the whole time or if he failed to process at the time and is now paying for letting it sink into his bones.\n \nreply",
      "Context: This is remembering his daughter, Rebecca. (2008-2014)https://en.wikipedia.org/wiki/Eric_A._Meyer#:~:text=In%20201...\n \nreply",
      "Eric Meyer's blog posts about his daughter Rebecca - see https://meyerweb.com/eric/thoughts/category/personal/rebecca...\n \nreply",
      "I came across the new CSS logo and thought the color looked about right (it's rebeccapurple), and ended up reading Eric's blog as a result.\n \nreply",
      "Eric Meyer's blog post about why it should be called 'rebeccapurple' - see https://meyerweb.com/eric/thoughts/2014/06/19/rebeccapurple/\n \nreply",
      "This is one of those moments where, thanks to the internet, you catch a glimpse of another persons world. It gives some perspective.\n \nreply",
      "I'm worried this will come across as cavalier and non-serious, but your comment reminded me a lot of ... yes, a comedy skit: Bo Burnham's White Woman's Instagram, in which he ostensibly makes fun of clich\u00e9d social media content, only to completely whip you about by briefly interrupting the cheese with the character's heartfelt post about living with her mother's death, perhaps the reason she needs the escapism of her online identity. And after it all you realize he told her entire life story in a series of comedy vignettes. I'm not ashamed to say I watched it in the right sort of mood and it moved me to tears (having lost a parent).\n \nreply",
      "I know how you feel. Tomorrow is my late son's ninth birthday.\n \nreply",
      "Life\u2019s greatest, least rewarding challenge; continuing to live when a loved one cannot.\n \nreply"
    ],
    "link": "https://meyerweb.com/eric/thoughts/2024/06/07/a-decade-later-a-decade-lost/",
    "first_paragraph": "I woke up this morning about an hour ahead of my alarm, the sky already light, birds calling.\u00a0 After a few minutes, a brief patter of rain swept across the roof and moved on.I just lay there, not really thinking.\u00a0 Feeling.\u00a0 Remembering.Almost sixteen years to the minute before I awoke, my second daughter was born.\u00a0 Almost ten years to the same minute before, she\u2019d turned six years old, already semi-unconscious, and died not quite twelve hours later.So she won\u2019t be taking her first solo car drive today.\u00a0 She won\u2019t be celebrating with dinner at her favorite restaurant in the whole world.\u00a0 She won\u2019t kiss her niece good night or affectionately rag on her siblings.Or maybe she wouldn\u2019t have done any of those things anyway, after a decade of growth and changes and paths taken.\u00a0 What would she really be like, at sixteen?We will never know.\u00a0 We can\u2019t even guess.\u00a0 All of that, everything she might have been, is lost.This afternoon, we\u2019ll visit Rebecca\u2019s grave, and then go to hear her name read "
  },
  {
    "title": "Complex dynamics require complex solutions (mathstodon.xyz)",
    "points": 100,
    "submitter": "ckemere",
    "submit_time": "2025-02-14T22:05:33 1739570733",
    "num_comments": 41,
    "comments_url": "https://news.ycombinator.com/item?id=43053625",
    "comments": [
      "Because certain concepts have been repeated so often they've become elements of faith (e.g., \"taxes are too high\", \"government is filled with fraud and waste\", \"taxing the 1% will solve our country's financial problems\"), careful conversation about the complexities of the modern world is difficult to have.I think that complex solutions CAN be grasped by the large majority of voters, but their time and attention are so captured by sloganeers that they aren't exposed to the explanations.\n \nreply",
      "Not to nitpick, but \"taxing the 1% will solve our country's financial problems\" comes off as a bit of a strawman. \"Tax the rich\" is a common sentiment, but I don't often hear people saying the rest of it. There are plenty of plausible reasons one may want to tax the rich even if you don't believe it is a total solution. For one, you may be concerned about the power imbalance created when a handful of people have more wealth than half the country combined [0]. Recent developments have brought that concern into even sharper focus for many.0. https://www.bloomberg.com/news/articles/2020-10-08/top-50-ri...\n \nreply",
      "It reminds me of all the naive engineers that look at a complex codebase, don't fully grok it, and say \"this is a mess, it needs a rewrite!\".They then find out that every complex rule had a reason for existing. The rewrite takes time and resources to reimplement. As they go they hit snag after snag and add a specific business rule for that only to find out that they are just recreating the original \"too complex and inefficient\" codebase with a whole lot of effort and money wasted.\n \nreply",
      "While true, a lot of the time the problem is organization.  Complexity exists and our job as engineers is to wrestle with it and organize it into a grokkable whole.  Something being messy and needing a rewrite or significant refactor is often down to inexperience of initial implementers or too-short timelines causing entropy explosion rather than taking the time to build structure for arranging and organizing the complexity.\n \nreply",
      "We're basically paying the government per line of code written currently. Ask Microsoft how that turned out.\n \nreply",
      "What do you mean by that?  Is that how dodge is working? No one in the government has previously been paid per line of code.  Am I missing something here?",
      "Ok, but taxes are too high though, for real\n \nreply",
      "Too high for what? Too high for desired services level? Too high for most of the people or few? Too high for value? Too high for your personal preference? It's really important to be specific, and what I've written is still impossibly vague to be even close to actionable\n \nreply",
      "As a non-american paying american taxes: I would like more of my money to go into welfare and social transfers to make the country more liveable to all, and less into million dollar bombs thrown at thousand dollar homes.Or, like, at least fix all the potholes maybe?\n \nreply",
      "In the US they\u2019re too high for what we get: essentially nothing.So if I am taxed, things need to be done with those taxes. Not just line the pockets of whomever get it. I sure don\u2019t.\n \nreply"
    ],
    "link": "https://mathstodon.xyz/@tao/113873092369347147",
    "first_paragraph": ""
  },
  {
    "title": "If you ever stacked cups in gym class, blame my dad (defector.com)",
    "points": 58,
    "submitter": "nonoobs",
    "submit_time": "2025-02-14T22:45:02 1739573102",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=43053908",
    "comments": [
      "Wonderfully written and a rare exemplar of the rise of a fad from its primary source. Usually these things get lost in urban legend before anyone has the sense to document them properly.\n \nreply",
      "This is a pretty entertaining story about a \u201csport\u201d I was only vaguely aware of, because my school did not do sport stacking (or maybe I\u2019m too old).  But I have seen a few videos of it online, and it\u2019s pretty neat to find out it was popularized by an enthusiastic clown/school teacher who made some risky business decisions.  I\u2019m glad it worked out and they didn\u2019t go bankrupt with thousands of cups in their basement.\n \nreply",
      "I think it\u2019s having a comeback, at least it\u2019s popular at my kids elementary school - a pro came by to show it and all the kids wanted a set. Watching the videos of competitions with my kids was surprisingly fun\n \nreply",
      "Ive practiced and done all sorts of useless tricks and games, but this is one I still do not \"get\" in any way. What do people find satisfying or like about it? I could see doing it for a day to get alright at it, but much beyond that I don't really find it all that impressive shaving off fractions of a second. It doesn't even seem like a great party trick because you need special cups with holes in them so they don't stick.But I guess it does build up atleast some level of hand-eye coordination and dexterity. Which is utterly lacking in most of today's youth and educational worlds where using actual tools and making things by hand is viewed as \"dangerous\" by many, and only a small fraction of kids get into many sports, and all of our focus is on more abstract concepts.\n \nreply",
      "> What do people find satisfying or like about it?I ask myself the same thing about a lot of the various fidgety things like the spinners. Or the point of the games that are just nothing but how fast can you click like the paperclip games.some people just like different things. even when you ask, they just say they like it. dopamine hits maybe? better that than dope then I guess\n \nreply",
      "I was recommended to do it by my Year 3 (age 7/8) teacher because my handwriting was so poor.\n \nreply",
      "I forget how many PE sessions I had with cup stacking but it\u2019s definitely ingrained somewhere in my head. If anything I thought at the time it was for hand-eye coordination without having a ball flying at you and it was surprisingly easy to pick up with those competition cups.Nowadays it makes for a fun free for all drinking game as everyone fumbles stuck together red cups.\n \nreply"
    ],
    "link": "https://defector.com/if-you-ever-stacked-cups-in-gym-class-blame-my-dad",
    "first_paragraph": "12:59 PM EST on February 12, 2025The boxes came from Tokyo: first by tanker, then overland via container truck from a Pacific port, across the Continental Divide, and finally backed into a driveway at the end of a cul-de-sac in a south Denver suburban enclave. This was a neighborhood with Razor scooters dumped in trimmed front lawns. Where family walks with leashed dogs happened down the middle of intentionally curved streets named after long demolished natural landmarks like \"Timbercrest\" and \"Forest Trails.\" Where the HOA (because of course there was an HOA) banned the installation of driveway basketball hoops.Receiving industrial freight deliveries, freshly cleared through international customs, probably wasn't explicitly prohibited in the homeowner's handbook. But then, why would it need to be? Nobody would think to bring that kind of commercial chaos into the burgeoning middle-class peace of Castle Pines North in 1998.If neighbors peeking behind curtains at the idling 18-wheeler t"
  },
  {
    "title": "The hardest working font in Manhattan (aresluna.org)",
    "points": 128,
    "submitter": "robinhouston",
    "submit_time": "2025-02-14T21:45:49 1739569549",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=43053419",
    "comments": [
      "\"In older [keyboards] \u2013 those from the early 1960s laboratory computers, or the 1980s microcomputers \u2013 the way every key was constructed was by first molding the letter from plastic of one color, and then grabbing a different plastic and molding the key around the letter.\"This makes me want an old keyboard. Amazing how hardy keyboards were back then.\n \nreply",
      "I'm afraid the author has it backwards. This style of writing didn't start as a font from some company.This is just how you used to be taught to do lettering in a drafting class. The straight lines and simple shapes make it easy to do lettering with pencil or a pen, which is also why all the lines are the same width and all the line caps are rounded.Later on these turned into stencils, which let users do lettering quickly by tracing the pen inside the stencil - and then turned into fonts for use in print. But all that came later. What we have here is just lettering people learned in drafting classes, and which was later used to make stencils and templates.\n \nreply",
      "> The straight lines and simple shapes make it easy to do lettering with pencil or a peI'm guessing these letters are also easy to create with a CNC machine.(Now that the page has loaded I see he identifies engraving machines.)\n \nreply",
      "You need to actually read the article before commenting.\n \nreply",
      "Nah, I just tried and it works fine.\n \nreply",
      "I did...?\n \nreply",
      "The article goes into almost tedious detail about where it came from, and whether it constitutes a \"proper\" font. I think you may have skimmed too fast.\n \nreply",
      "That's an assumption, I read it just fine. :) I just disagree with how the author keeps talking about draftsman's lettering as if it were some company's font (e.g. Gorton and Leroy) rather than a commonly taught community standard.\n \nreply",
      "I just read the article in full, and don't understand your point, either.Maybe you could explain what part of the comment you replied to you think is either wrong or already covered by the article, so that either we can realise what we failed to notice in our first reading or so someone can explain to you why you're wrong in thinking that comment isn't correct in the context of having read the full article :)\n \nreply",
      "Yeah -- my dad's lettering template had letterforms like this. As the article mentions, the Simplex characters from the Hershey set, used in CAD applications, are based on this font, probably for consistency with how drafting was traditionally done.\n \nreply"
    ],
    "link": "https://aresluna.org/the-hardest-working-font-in-manhattan/",
    "first_paragraph": "\n\t\t\t\tMarcin Wichary\n\t\t\t\n\t\t\t\t14\u00a0February\u00a02025\u00a0/ 6,100\u00a0words\u00a0/ 600\u00a0photos\n\t\t\t\n\t\tIn 2007, on my first trip to New York City, I grabbed a brand-new DSLR camera and photographed all the fonts I was supposed to love. I admired American Typewriter in all of the I <3 NYC logos, watched Akzidenz Grotesk and Helvetica fighting over the subway signs, and even caught an occasional appearance of the flawlessly-named Gotham, still a year before it skyrocketed in popularity via Barack Obama\u2019s first campaign. \n\t\n\t\tBut there was one font I didn\u2019t even notice, even though it was everywhere around me.\n\t\t\t\n\t\tLast year in New York, I walked over 100 miles and took thousands of photos of one and one font only.\n\t\t\t\n\t\tThe font\u2019s name is Gorton.\n\t\t\t\n\t\tIt\u2019s hard to believe today that there was a time before I knew of Gorton and all its quirks and mysteries. The first time I realized the font even existed was some time in 2017, when I was researching for my book about the history of typing. \n\t\t\t\n\t\tMany keyboards"
  },
  {
    "title": "The Iconic 3DBenchy Enters the Public Domain (nti-group.com)",
    "points": 49,
    "submitter": "kotaKat",
    "submit_time": "2025-02-14T21:39:29 1739569169",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.nti-group.com/home/information/news/3dbenchy/",
    "first_paragraph": ""
  },
  {
    "title": "The largest sofa you can move around a corner (quantamagazine.org)",
    "points": 45,
    "submitter": "abe94",
    "submit_time": "2025-02-14T15:24:05 1739546645",
    "num_comments": 23,
    "comments_url": "https://news.ycombinator.com/item?id=43049251",
    "comments": [
      "Replace sofa with refrigerator and somewhere a Siracusa will get its wings.\n \nreply",
      "Recycled anecdote from an earlier time this was discussed on HN:\nWhile a student, I looked after the apartment of a friend of mine, who was overseas.\nWhen he moved there, we were _just_ able to eke his sofa around the last corner from the stairwell and through the door to his apartment. Just. After much cursing and several failed attempts.\nSo, what does a good (cough) friend do while the owner is overseas?\nGet some hardwood mouldings/trimmings/whatever you call those long, thin pieces of wood typically put where wall transitions to ceiling or floor and nail them to the exterior doorframes, making both door openings perhaps 3/8\" or so narrower, paint them in the color of the doorframe, sit back and wait.\nThen, years later, as he is about to leave town, moving company comes along and everything runs smoothly until one item remains. The sofa. Obviously, it got in - so it'll (as obviously) come out.\nOnly it doesn't.\nWe (everybody except the owner and the moving guys were in on the joke) managed to keep a straight face for several minutes.\nThe moving guys even laughed as they (eventually) left, mollified by a bottle filled with a Scottish export product which we'd kept on hand to ensure no feelings were hurt afterwards.\n \nreply",
      "I have made significant life decisions based primarily on not wanting to move a sofa out of a space I moved it into.\n \nreply",
      "What ended up happening? How did they get it out? Removed the moulding or something else?\n \nreply",
      "I used to live in a 2nd story studio apartment. I had a full sized overstuffed leather couch. The front door had it's own tiny stoop up a steep flight of stairs, and the front door opened onto a tiny coat closet that made it functionally impossible to get the couch aligned and out the door when it was time to move out.  After a solid half hour of getting my ass kicked into my hatband trying to configure the couch in such a way that it'd go out the front door I said to hell with it, grabbed my harness, some slings, and a climbing rope, rigged the thing on a cowtail and rappelled off the deck with it. To this day I cannot for the life of me remember how in the hell I managed to get that couch into that apartment.\n \nreply",
      "One of the earliest tricks I learned with couches is that if it\u2019s shorter than the ceiling then the arms and back form this U.Sofas used to be great because they were also shorter than the height of a door frame. Now everything is oversized and you need a 10-15% bigger apartment just to have one of each thing your grandparents had.With the right design sometimes this still plays out on the diagonal.\n \nreply",
      "There is a more general principle, which is that you are in a 3D space and twisting a couch (or whatever) in it will help you find the way through. Sometimes you only need a little space above you to achieve the twist you need.Also due to the biases humans have with respect to orientation in space, turning the item upside down, back to front or both can also make things much easier.\n \nreply",
      "You yourself are probably 10-15% bigger than your grandparents were, since average height has increased 4 inches over the last 150 years.\n \nreply",
      "I\u2019m the \u201crunt\u201d of the litter. I\u2019m maybe 5% taller and my uncles and cousins got the rest.But it\u2019s the depth as much as the length. I get that a table has to be a couple inches wider so people don\u2019t bump knees but your thigh bone only grows at a quarter to a third of your overall height increase, right?Couches are just oversized. They\u2019re uncomfortable to get out of if you\u2019re not careful when shopping.\n \nreply",
      "Am I being pedantic for pointing out that that is 3x the normal two generations separating grand parents and grand kids and a height difference of only 6 percent? The only major difference since our grandparents is average weight and expectations of comfort. Correlated but not synonymous.\n \nreply"
    ],
    "link": "https://www.quantamagazine.org/the-largest-sofa-you-can-move-around-a-corner-20250214/",
    "first_paragraph": "\nAn editorially independent publication supported by the Simons Foundation.\n\nGet the latest news delivered to your inbox.\nCreate a reading list by clicking the Read Later icon next to the articles you wish to save.Type search term(s) and press enterPopular\n                                    SearchesFebruary 14, 2025Mathematicians have proved that any sofa bigger than this one will get stuck at the hallway\u2019s corner. Of course, movers might resolve the problem by simply tilting the sofa on its end, but in the mathematical version it must stay flat.Tommy Parker for\u00a0Quanta MagazineContributing WriterFebruary 14, 2025If you\u2019ve ever moved into a new home, then you know how difficult it can be to steer bulky furniture through narrow hallways or around awkward corners. Mathematicians have been trying to solve this problem, too, ever since 1966, when Leo Moser framed it in quantitative terms. Say you want to move a two-dimensional shape \u2014 your sofa (disregarding its height) \u2014 through an L-shap"
  },
  {
    "title": "A study on how turtles navigate using the Earth\u2019s magnetic field (unc.edu)",
    "points": 124,
    "submitter": "gmays",
    "submit_time": "2025-02-14T18:29:59 1739557799",
    "num_comments": 43,
    "comments_url": "https://news.ycombinator.com/item?id=43051465",
    "comments": [
      "Turtles are my favorite animals (other than humans, and sometimes even more than them).Mostly I think they're just cute, which is by itself a perfectly valid reason for an animal to be your favorite, but I've always been fascinated by their ruggedness.  It's not weird for a turtle to live to 100 years old, and it feels like they can survive just about anything.Having a built-in GPS just makes them even cooler.\n \nreply",
      "I like turtles\n \nreply",
      "It's turtles all the way down\n \nreply",
      "oh. more turtles.\n \nreply",
      "My old man - an old-fashioned cat by anyone\u2019s description \u2014 can pick true north anytime, anywhere. It\u2019s made me wonder if he has some kind of internal magnetic compass. And now, having read this, I wonder if this \u2018turtle skill\u2019 is latent in humans but only emerges in a rare few.\n \nreply",
      "Atleast when I was younger I always felt like I could point towards north within 20-30 degrees at any time. I tried testing it out many times, and was right the vast majority of the time, even when trying to eliminate possible subconscious factors like sound reflections and what surface I was standing on. We do technically have the right associated nerves and structure for it, but obviously underdeveloped compared to animals who use it to live and survive, so I would totally believe it is possible to some extent, atleast among some people.I would attribute part of it to practice, because when I was younger I spent a lot of times in the woods where you can easily get turned around following animal trails and skirting around obstacles, and finding your way back out accurately was extremely helpful.\n \nreply",
      "I can do that, it's just having a mental image of the room and building I'm in, as well as the surrounding landscape, sky, and where the sun rises and sets. Even if I have to pass through a bunch of twisting corridors, there's just a mental arrow in my head that's always being updated in the background when I turn.\n \nreply",
      "No, that's just orientation, I can do that too. Playing first-person games like Descent improves the orientation.The true compass would be if you could be blinded, walked through some turns, and you could still pick up north, having no idea about how you got into the surroundings.\n \nreply",
      "Yeah but you can always pick up based on observational cues.Real test would be spin around in a dark room without any cues can you pick out true north.\n \nreply",
      "I think you just said the exact same thing.\n \nreply"
    ],
    "link": "https://www.unc.edu/posts/2025/02/12/dancing-turtles-unlock-scientific-discovery/",
    "first_paragraph": "Carolina researchers publish a groundbreaking study on how turtles navigate using the Earth\u2019s magnetic field.When captive loggerhead sea turtles anticipate food, they do a little dance. The turtles raise their heads out of water, open their mouths, flap their flippers and spin in circles.Not only is this \u201cturtle dancing behavior\u201d cute, it was also the key to unlocking a significant scientific discovery by researchers at UNC-Chapel Hill.The prestigious international science journal Nature published the study Feb. 12. Kayla Goforth, a recent doctoral graduate in the College of Arts and Sciences\u2019 biology department, is the lead author of \u201cLearned magnetic map cues and two mechanisms of magnetoreception in turtles.\u201dEarly on in her graduate studies at Carolina, Goforth was fascinated by sea turtles returning to the same feeding sites again and again throughout their lifetimes \u2014 despite traveling up to 10,000 miles across the planet. She hypothesized that these turtles used Earth\u2019s magnetic "
  },
  {
    "title": "Show HN: VimLM \u2013 A Local, Offline Coding Assistant for Vim (github.com/josefalbers)",
    "points": 12,
    "submitter": "JosefAlbers",
    "submit_time": "2025-02-14T23:34:41 1739576081",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://github.com/JosefAlbers/VimLM",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        VimLM is a Vim plugin that provides an LLM-powered assistant for code editing by allowing users to interact with a local LLM model through Vim commands and automatically ingesting code context.\n      LLM-powered coding companion for Vim, inspired by GitHub Copilot/Cursor. Integrates contextual code understanding, summarization, and AI assistance directly into your Vim workflow.Workflow Example:Example:\nInitial: \"Create Chrome extension\"\nFollow-up: \"Add dark mode support !followup\"Chain multiple commands in one prompt:VimLM uses a JSON config file with the following configurable parameters:If you prefer using <Leader> in place of <Ctrl> for the ViMLM key bindings:VimLM is licensed under the Apache-2.0 license.\n        VimLM is a Vim plugin that provides an LLM-powered assistant for code editing by allowing users to interact with a lo"
  },
  {
    "title": "TeX and Typst: Layout Models (2024) (laurmaedje.github.io)",
    "points": 155,
    "submitter": "fngjdflmdflg",
    "submit_time": "2025-02-13T04:34:09 1739421249",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=43032697",
    "comments": [
      "I remember in word for windows (Either 2 or 6, not sure) on my 40MHz 386, you could watch it reflowing text if you edited a paragraph near the beginning of a multi-page document.  It would correct for widows and orphans, which would cause surrounding pages to potentially do the same.  It could take a non-trivial amount of time to stabilize, and if you printed a document before it did, you could end up with duplicated or missing lines at page breaks.\n \nreply",
      "Great article. Appears to be one of those articles where writing it forces you to think and leads to new solutions like relayout.As for myself I've completely abandoned LaTeX for Typst and couldn't be happier. My life will be better if I never have to touch LaTeX again. (Have written almost a dozen books with LaTeX.)\n \nreply",
      "This was a really great write-up, and gives me a lot of hope for the future of Typst. I think one of the best ways to overcome the enormous momentum of TeX is to point out its limitations (while still keeping an eye on Typst's limitations), and explain how Typst overcomes them.\n \nreply",
      "> I think one of the best ways to overcome the enormous momentum of TeX is to point out its limitations (while still keeping an eye on Typst's limitations), and explain how Typst overcomes them.One of the other easy ways to overcome it is to provide as many templates as possible for journals. I\u2019ve used LaTeX for years, but would by no means consider myself an expert in LaTeX, as I\u2019ve almost exclusively been able to grab a template from a journal or from my university, and then just draft in the relevant blocks, write equations, add figures, and, rarely, add a package. I would guess that there are a huge amount of LaTeX users like me out there. I do all my drafting on Overleaf. I love TeX (and curse my PI whenever he requires that we use Word/365 instead of LaTeX/Overleaf)\u2026 but so much of the benefit, for me at least, comes from the fact that templates are readily available for any journal I would want to submit to; my masters thesis was built in a template provided by my university; etc. I don\u2019t have to deal with any of the cognitive overhead of styling and formatting (except for flowing the occasional figure) and can just focus on drafting.For me to even consider typst, it\u2019s pretty much a requirement that there is some degree of template parity actively being worked on. The most natural way to approach that would be to just sort every journal by impact factor and start working top to bottom; given that so many journals share templates due to being within elsevier, springer etc, it should be straightforward to reach a reasonable degree of parity relatively quickly.Getting the major publishers to support and offer their Typst templates would make me try it out immediately for what it\u2019s worth.\n \nreply",
      "Many journals require LaTeX due to their post-acceptance pipeline. I use Typst for letters and those docs for which my PDF is the final version (modulo incomplete PDF/A in Typst), but for many journals in my field, I'd need a way to \"compile to LaTeX\" or the journal would need to implement a post-acceptance workflow for Typst (I'm not aware of any that have).\n \nreply",
      "Right, I guess that\u2019s my point: If Typst wants to compete with LaTeX, IMO it needs some sort of mechanism by which journals will deem a Typst submission acceptable, along with readily available templates for said submissions. That\u2019s a big hill to climb probably, but probably the single most valuable development they could achieve from a product diffusion perspective.\n \nreply",
      "Typst doesn't even have a stable release yet. Give it some time, I genuinely believe it will get there.\n \nreply",
      "Interestingly enough, e.g. Elsevier accepts latex but has their own typesetting backend. Which typically means that the last editing steps are quite annoying, because even if one is using the provided latex templates, what actually happens for the final typesetting is done by some mechanical turk editor on a slightly different publishing system.\n \nreply",
      "Exactly - they require LaTeX not only to make it match the style, but because the final document is a prepared LaTeX work. Sometimes you can even see all the hooks and such that are waiting for \\include and similar.\n \nreply",
      "One of the big benefits of LaTeX is the ecosystem of packages, but that only happens because so much effort was put into creating a package mechanism for the typesetting system. LaTeX has a long history of providing the technical infrastructure for package creation, and that was one of the main focus since its inception. No typesetting system can compete with LaTeX without a focus on package and template creation. My personal view is that LaTeX will continue to be king in this area for the foreseeable future.\n \nreply"
    ],
    "link": "https://laurmaedje.github.io/posts/layout-models/",
    "first_paragraph": "\n          Lately, I\u2019ve been pondering the ways in which Typst\u2019s layout model\n          differs from TeX\u2019s. While Typst adopts parts of TeX\u2019s model, in\n          particular the paragraph layout algorithm, there are also significant\n          differences. Most of these are related to block-level layout \u2014 things\n          like line placement, widow & orphan prevention, tables, and\n          floats. I want to use this post to explore these differences, to\n          identify the benefits and limitations of both models, and to present\n          my thinking on the future of Typst\u2019s layout engine.\n        \n          Let me first (very briefly) explain how the layout engines of TeX and\n          Typst operate at their foundational level.\n        \n          The layout model of TeX is built around the concepts of\n          boxes and glue:\n\n              A box is a rectangular container containing\n              elements that were already laid out. It has the three metrics\n              \u201cwidth\u201d, \u201c"
  },
  {
    "title": "First hybrid quantum supercomputer Reimei activated in Japan (interestingengineering.com)",
    "points": 7,
    "submitter": "wallflower",
    "submit_time": "2025-02-12T21:30:40 1739395840",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://interestingengineering.com/science/worlds-first-hybrid-quantum-supercomputer-reimei-activated",
    "first_paragraph": "Reimei uses trapped-ion qubits, allowing for greater qubit connectivity and longer coherence times, a key feature distinguishing it from superconducting qubits.a day ago2 days ago2 days ago2 days ago2 days ago2 days ago2 days ago2 days ago2 days ago3 days ago2 hours ago4 hours ago6 hours ago6 hours ago8 hours ago10 hours ago10 hours ago11 hours ago11 hours ago11 hours agoSujita SinhaThe 20-qubit quantum computer has been integrated into the\u00a0world's sixth-fastest supercomputer, Fugaku.RikenEngineers in Japan have activated Reimei, the world\u2019s first hybrid quantum supercomputer. The 20-qubit quantum machine has been integrated into Fugaku, the world\u2019s sixth-fastest supercomputer.The hybrid system is designed to solve problems that classical supercomputers take much longer to process. The machine is housed at the Riken scientific institute in Saitama, near Tokyo, and will primarily support research in physics and chemistry.Representatives from Quantinuum, the makers of Reimei, and Riken s"
  },
  {
    "title": "Msxbook OneChipMSX MSX2 Computer (tindie.com)",
    "points": 3,
    "submitter": "rbanffy",
    "submit_time": "2025-02-15T00:08:14 1739578094",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.tindie.com/products/cycle/msxbook-onechipmsx-msx2-computer/",
    "first_paragraph": "The MSXBOOK is an MSX2-compatible computer based on the One Chip MSX (OCM).No shipping info available.Set destination country to see optionsShipping to  starts at  Free shipping is available to !Ships from  This item does not ship to .More InfoSign up to get notified when this product is back in stock!WWW.8086CPU.COM\nThe package includes:\nMSXBOOK main unit \u00d7 1,USB Type-C cable \u00d7 1,SD card \u00d7 1\nThe MSXBOOK does not currently include firmware code,users can download the firmware themselves.If a user has a firmware f\u2026Schematics and user manuals can be downloaded from www.8086cpu.com.The MSXBOOK is an MSX2-compatible computer based on the One Chip MSX (OCM). It features all the capabilities of the OCM, along with a 9.7-inch LCD screen and a backlit mechanical keyboard. MSX was a standardized home computer system launched in the 1980s by ASCII Corporation and Microsoft, designed to provide a unified platform with compatible hardware and software. The MSX platform gave rise to many iconic gam"
  },
  {
    "title": "Elements of Programming (2009) (elementsofprogramming.com)",
    "points": 77,
    "submitter": "kykeonaut",
    "submit_time": "2025-02-11T18:04:35 1739297075",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=43015975",
    "comments": [
      "Related. Others?Elements of Programming (2019) - https://news.ycombinator.com/item?id=32459443 - Aug 2022 (11 comments)Elements of Programming - https://news.ycombinator.com/item?id=20437347 - July 2019 (24 comments)Alex Stepanov (STL) just published a book on math foundations of programming - https://news.ycombinator.com/item?id=665987 - June 2009 (1 comment)\n \nreply",
      "Historically, this is based on what is described here: https://en.wikipedia.org/wiki/Alexander_Stepanov#Standard_Te...\n \nreply",
      "If you are passionate about programming and and computer science, this is the book to read. It's like Euclid's elements, but for programming.\n \nreply",
      "The year in the HN title looks wrong, in the PDF it says 2019, please fix it, otherwise people ignore the book thinking it's too outdated.Oh wait. I stand corrected - I missed that it said \"Copyright 2009\", \"First printing 2019\", not sure why it took so long to get it printed.\n \nreply",
      "It's explained on the web page\"After ten years in print, our publisher decided against further printings and has reverted the rights to us. We have published Elements of Programming in two forms: a free PDF and a no-markup paperback.\"\n \nreply"
    ],
    "link": "https://www.elementsofprogramming.com/",
    "first_paragraph": "Elements of ProgrammingAlexander Stepanov and Paul McJonesSemigroup Press, June 2019; Addison-Wesley Professional, June 2009Decomposing programs into a system of algorithmic components\u00a0After ten years in print, our publisher decided against\nfurther printings and has reverted the rights to us. We have published Elements of Programming in two forms: a free PDF and a no-markup paperback.\u00a0\u00a0\u00a0Last modified 23 June 2022"
  },
  {
    "title": "Kevin Mitnik FOIA Final (fbi.gov)",
    "points": 125,
    "submitter": "thembones",
    "submit_time": "2025-02-14T19:02:37 1739559757",
    "num_comments": 72,
    "comments_url": "https://news.ycombinator.com/item?id=43051802",
    "comments": [
      "This will pair well with Mitnick's autobiography Ghost in the Wires, in which you get to read Mitnick's side of the story.\n \nreply",
      "If you are into this topic, read as many point of view as possible and take a look at http://www.takedown.com/ (Tsutomu Shimomura's side of the story).\n \nreply",
      "I've far more respect for Tsutomu. In the end he turned out to be the better hacker.Reading Mitnicks book I sometimes get the impression that the he is making up half of it.\n \nreply",
      "To the best of my knowledge, Mitnick didn't really code at all. There are (let's call them) intrusion specialists whose skillsets don't really involve systems programming, but rather intuition and tenacity, and there are others who write exploits. My understanding is that Mitnick was the former, and was using tools he got from friends and peers.\n \nreply",
      "In the book he spends a lot of time on the social engineering parts of it to be honest. It's been a few years but I remember him mostly bragging about that rather than developing custom exploits.\n \nreply",
      "He also comes from an era of intrusions where systems were so bad you didn't really need to code to get into them. For an alarmingly long time, the most effective tool you could use to pop a network was simply `showmount`.\n \nreply",
      "He didn't really code in the book either... maybe 5% of the book...  he did some script kiddie type exploits, some copying of proof of concepts, and some minor modifications (like modifying the \"logon\" program to save passwords somewhere in cleartext).75% of the book is spent social engineering over the phone and 20% doing stuff on phone switches and other equipment.\n \nreply",
      "the steve jobs of hacking\n \nreply",
      "Anyone who has studied the later parts of the phone system know that at least a few of his stories are actually bullshit.It wouldn't be until much later (in the 90s at least, while he was in prison) that the advent of pure digital switching would enable the random reassignment of phone lines like he describes in the story about turning his friend's home phone into a payphone.The lines were separated and had differences in sender frames just for payphones, plus typical phones weren't too happy when 130VDC was applied to them for very long.The fact of the matter is that Mitnick went around and shook doorhandles until something opened and occasionally convinced someone to open a door for him her and there, and the fact that the emperor had no clothes was too politically inconvenient for the kinds of companies that Mitnick hit up.\n \nreply",
      "I heard him on Art Bell multiple times talking about it. I many cases, someone else did the ground work and he just used it.\n \nreply"
    ],
    "link": "https://vault.fbi.gov/kevin-mitnick/kevin-mitnick-part-01-final/view",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: OpenSCAD configurable calendar 3D model (chrastecky.dev)",
    "points": 29,
    "submitter": "Rikudou",
    "submit_time": "2025-02-14T20:57:36 1739566656",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=43052997",
    "comments": [
      "Another one for the openscad awesome list:\nhttps://github.com/elasticdotventures/awesome-openscadPersonally I've stopped using openscad recently (*in the last few years).  I found it's lack of ability to create attachment/mate connectors significantly inhibited it's ability to compose complex objects.   I looked into the amount of effort required to support attachments and ultimately decided that it was the wrong approach and have since migrated to Python & cadquery.\n \nreply",
      "I'm always trying to figure out why OpenSCAD has such a following when, at least to my manufacturer-brain says \"whoa it's inconvenient to use to make real stuff\" and \"there are more expressive 3D modeling DSLs\".Is this like hobby only like writing an app in brainfuck? Or am I missing something?\n \nreply",
      "Nice job.  I will have a play.In case anyone fails to notice the link to dotSCAD - do investigate it.  That bloke (sadly now deceased was a OpenSCAD legend!)\n \nreply",
      "Easter calculator. The algorithm is roughly:Sunday after the first full moon on or after Mar 21.  If the full moon is a Sunday, then the following Sunday. The date of the full moon is not an astronomical one and its date is left as an exercise for the reader.There are two Easters too - the Orthodox one involves the Julian calendar, the Roman (etc) involves the Gregorian calendar.You could chicken out with a lookup table!\n \nreply",
      "This is really cool! I only have a single-spool printer, but I wonder if I could brush or stamp paint over the top to give the surface a different color from inset lettering. I should probably also reinforce my Z axis before trying to print day numbers that small.Kind of funny to see string manipulation functions implemented in Openscad code.\n \nreply",
      "You can always insert a pause and swap to a different filament at a certain z-height.\n \nreply",
      "You can use M600 to stop and load a new filament to use multi colour.\n \nreply",
      "I've never seen the SCAD language before - looks surprisingly similar to JavaScript.\n \nreply",
      "Is this a 2D colour thing on a 3D printer?If so am loathed to print those because you need an automatic material system and it creates a lot of poop (cut-offs when switching colour)It think it might be OK to have say 5 white layers then a couple of ink layers.Also how do you get on with the slicer with fonts.I found this difficult when printing a dog tag. I sort of got the impression it may be better to have a \"gcode font\" rather than go TTF->Triangles (STL)->GcodeHowever overall: great effort and I love openscad. I love the idea of it I only used it once as I have been busy!\n \nreply"
    ],
    "link": "https://chrastecky.dev/3d-printing/open-scad-configurable-calendar-3d-model",
    "first_paragraph": " Published Feb 14, 2025  - 16 min read I love creating configurable generic models using OpenSCAD, and this is the most complex one I've created to date\u2014an easy-to-configure calendar using some clever algorithms to render correctly.OpenSCAD is truly amazing in a way that no other 3D modeling software is, including those with limited scripting abilities.You can implement standard algorithms from general-purpose languages, like the impressive Zeller's Congruence used to calculate the day of the week for any given date. I utilized this to make the calendar automatically adjust the date offset. Simply change the year number in the configurator, and the model remains accurate:According to my computer, Jan 1st, 2025, is indeed a Wednesday.A quick calendar check confirms that Jan 1st, 2056, is a Saturday!Here\u2019s the OpenSCAD function:I kept the variable names consistent with the Wikipedia page for easier verification.Additionally, I included a generic leap year check and a function to get the "
  },
  {
    "title": "Show HN: Transform your codebase into a single Markdown doc for feeding into AI (web.app)",
    "points": 198,
    "submitter": "tesserato",
    "submit_time": "2025-02-14T13:23:23 1739539403",
    "num_comments": 127,
    "comments_url": "https://news.ycombinator.com/item?id=43048027",
    "comments": [
      "CodeWeavers is a software company that focuses on Wine development and sells a proprietary version of Wine called CrossOver for running Windows applications on macOS, ChromeOS and Linux.https://en.wikipedia.org/wiki/CodeWeaversTrademark is active. It's an \u24c7 not just a \u2122, registered not just trademarked.  To keep it, they have to demonstrate they defend it.https://www.trademarkia.com/codeweavers-76546826While this project drops the final \"s\", you don't get to launch an OS called \"Window\". The test is a fuzzy match based on likelihood of confusion.\n \nreply",
      "Yeah, I was thinking \"what does the Wine guys have to do with this?\"This project is definitely going to get C&D'd.\n \nreply",
      "I use the following for feeding into AI   find . -print -exec cat {} \\; -exec echo \\;\n\nWhich will return for each file (and subfolders) the filename and then the content of the file.Then `| pbcopy` to copy to clipboard and paste it into ChatGPT or similar.\n \nreply",
      "I guess this only works for very small codebase?\n \nreply",
      "Correct, but it's the same as what OP shared.You should use Aider/Cursor for proper indexing/intelligent codebase referencing\n \nreply",
      "I'm still puzzled how come people are convinced by Cursor, while my experience was meh at best. Can it index your stuff? okay it can. Can it refactor a simple function? No it cannot, it can't even rename a damn Java class. How can I trust it to generate then code based on my codebase? So, what is your use case then? Or can anybody point me to some blog/articles/videos showing some real use cases for Cursor? Real as in, something that it provenly can do?\n \nreply",
      "Correct. It's Web 3.0 2.0. You're supposed to play along to make the stock prices go up and to the right.\n \nreply",
      "I think you know the correct answer:)\n \nreply",
      "not sure if it's cursor's fault, but very often it doesn't give me the real or complete code of my codebase when auto editing/auto completing.any tips?\n \nreply",
      "That's very nice and compact. I do the same with a short bash script, but wrap each file in triple-backticks and attempt to put the correct language label on each eg:Filename: demo.py```python   ...python code here...\n\n```\n \nreply"
    ],
    "link": "https://tesserato.web.app/posts/2025-02-12-CodeWeaver-launch/index.html",
    "first_paragraph": "from https://github.com/tesserato/CodeWeaver/edit/main/README.md:CodeWeaver is a command-line tool designed to weave your codebase into a single, easy-to-navigate Markdown document. It recursively scans a directory, generating a structured representation of your project's file hierarchy and embedding the content of each file within code blocks. This tool simplifies codebase sharing, documentation, and integration with AI/ML code analysis tools by providing a consolidated and readable Markdown output.\nThe output for the current repository can be found here.If you have Go installed, run go install github.com/tesserato/CodeWeaver@latestto install the latest version of CodeWeaver or go install github.com/tesserato/CodeWeaver@vX.Y.Z to install a specific version.Alternatively, download the appropriate pre built executable from the releases page.If necessary, make the codeweaver executable by using the chmod command:Options:This will create a file named codebase.md in the current directory, "
  },
  {
    "title": "The IRS Is Buying an AI Supercomputer from Nvidia (theintercept.com)",
    "points": 12,
    "submitter": "jbegley",
    "submit_time": "2025-02-15T00:57:36 1739581056",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=43054766",
    "comments": [
      "This will not end well.  The IRS has tried many times to replace their mainframe systems and failed.  So they are upgrading to AI ?  I thought Trump was the \"save waste\" guy.These are finanical systems, they need to add/subtract and multiply/divide lots of transactional data.  AI not needed.\n \nreply",
      "If they have this kind of cash why not just fix the system they already have and improve IRS Free File and make it available to everyone?\n \nreply",
      "Imagine a world in which they use this computer to model ways to simplify the tax code.\n \nreply"
    ],
    "link": "https://theintercept.com/2025/02/14/irs-ai-nvidia-tax/",
    "first_paragraph": "\u00a9 THE INTERCEPTALL RIGHTS RESERVED\n          How exactly the IRS will use the SuperPod AI hardware is unclear. But it comes amid a push for automation in government.        As the Trump administration and its cadre of Silicon Valley machine-learning evangelists attempt to restructure the administrative state, the IRS is preparing to purchase advanced artificial intelligence hardware, according to procurement materials reviewed by The Intercept.With Elon Musk\u2019s so-called Department of Government Efficiency installing itself at the IRS amid a broader push to replace federal bureaucracy with machine-learning software, the tax agency\u2019s computing center in Martinsburg, West Virginia, will soon be home to a state-of-the-art Nvidia SuperPod AI computing cluster. According to the previously unreported February 5 acquisition document, the setup will combine 31 separate Nvidia servers, each containing eight of the company\u2019s flagship Blackwell processors designed to train and operate artificial i"
  },
  {
    "title": "Yash: Yet Another Shell (github.com/magicant)",
    "points": 13,
    "submitter": "InitEnabler",
    "submit_time": "2025-02-14T20:26:12 1739564772",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=43052728",
    "comments": [
      "I kind of wish there was a shell that had the option for histories localized to a directory. So I can go into a directory and then look at what I was doing when I was last in that directory. Some complicated compilation command line to compile and link a source file and a bunch of libraries that was run when I was last in that directory, for example. There'd still be the 'history' command for everything and then maybe 'dhistory' for the commands that I ran in that specific directory when I was last there.\n \nreply",
      "atuin.sh\n \nreply",
      "I've never seen a mid-sized C codebase that annotate \"restrict\", \"nonnull\" pointers and \"pure\", \"const\" functions so thoroughly, very interesting, would be an important case study if I ever get around to write C optimizer passes.\n \nreply",
      "It's quite nice. However a few basic functions are missing, like separate history for each instance.\n \nreply",
      "Scenario: Something forces a reboot. I've got 4 bash shells open. I've been doing some compilation & linking of libraries with a crazy long gcc command. After I reboot, that's not in my history because only the first-opened bash shell's history seems to get saved and I've gotta recreate the commandline again. Is there any shell that would let me see all the history from all of the different shells I might have had open?\n \nreply",
      "Best \u201cyet another*\u201d project name in awhile. Cool stuff\n \nreply",
      "What's the tl;dr on why one would use Yash vs anything else? ReadMe doesn't really explain what's unique here.\n \nreply",
      "Might not be a goal of the author. Maybe they just wanted to make a shell :)\n \nreply"
    ],
    "link": "https://github.com/magicant/yash",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Yet another shell\n      https://magicant.github.io/yash/\nThis README is also available in \u65e5\u672c\u8a9e.Yash, yet another shell, is a POSIX-compliant command line shell\nwritten in C99 (ISO/IEC 9899:1999). Yash is intended to be the most\nPOSIX-compliant shell in the world while supporting features for daily\ninteractive and scripting use. Notable features are:Yash can be modified/redistributed under the terms of the GNU General\nPublic License (Version 2) but the use of this program is without any\nwarranty. See the COPYING file for the full text of GPL.Yash is maintained on GitHub, but was\nformerly on OSDN.Yash now fully supports POSIX.1-2008 (IEEE Std 1003.1, 2016 Edition)\nexcept for the limitations listed below.Yash is stable. A maintenance update is released every three months or\nso. For the change history, see the NEWS file.Yash is supposed "
  },
  {
    "title": "Tumblr to join the Fediverse after WordPress migration completes (techcrunch.com)",
    "points": 53,
    "submitter": "Fitik",
    "submit_time": "2025-02-11T21:26:14 1739309174",
    "num_comments": 28,
    "comments_url": "https://news.ycombinator.com/item?id=43018572",
    "comments": [
      "I'm befuddled that Automattic is still investing in adding features (e.g. federation) to Tumblr. There's just about no chance of them actually making money from it, because its users are just about the most monetization-hostile users on the Internet.It doesn't help that the CEO actively antagonized a large portion of the site not too long ago.\n \nreply",
      "Their play is not to make money from Tumblr users, but to grow the total number of users connected to ActivityPub. Then they can go to BigCos and say \"here it is, you can drop Twitter/Threads/Instagram/TikTok and control your social media presence directly.\"It's not that different from what Facebook is doing with Threads. They are not interested in making money from social media, they are just hoping they can become the main infrastructure provider.\n \nreply",
      "basically bring your own domain like Google Workspace or O365. I'd love to see the Mastodon project (or any other AP implementation) adopt that managed services model.\n \nreply",
      "I don't believe there is anything stopping someone from starting a managed Mastodon service.\n \nreply",
      "What else would they invest long term capital into? Developing PHP is the only thing that could come to mind\n \nreply",
      "Ironically, I found the opposite. Tumblr users will pay Tumblr to \"blaze\" posts of other users, sending the post to everyone on the platform.I don't think there are many platforms in which users are willing to give the platform money.If you asked me whether I'd give money to support Reddit, I'd say just let it crash and burn.\n \nreply",
      "> It doesn't help that the CEO actively antagonized a large portion of the site not too long ago.I love that this statement could apply to either Tumblr or WordPress. CEOs are such an expensive liability lately.\n \nreply",
      "It's the same CEO! Ol' Matt pissed off the Tumblr userbase and then followed it up a year later with the WordPress debacle.\n \nreply",
      "Oh shit, somehow I hadn\u2019t put that together! Ha! Well played!\n \nreply",
      "If they're converting Tumblr to Wordpress, I bet it will get folded into their main hosting solution eventually and Tumblr will cease to exist.\n \nreply"
    ],
    "link": "https://techcrunch.com/2025/02/11/tumblr-to-join-the-fediverse-after-wordpress-migration-completes/",
    "first_paragraph": "\n\n\t\tLatest\t\n\n\n\t\tAI\t\n\n\n\t\tAmazon\t\n\n\n\t\tApps\t\n\n\n\t\tBiotech & Health\t\n\n\n\t\tClimate\t\n\n\n\t\tCloud Computing\t\n\n\n\t\tCommerce\t\n\n\n\t\tCrypto\t\n\n\n\t\tEnterprise\t\n\n\n\t\tEVs\t\n\n\n\t\tFintech\t\n\n\n\t\tFundraising\t\n\n\n\t\tGadgets\t\n\n\n\t\tGaming\t\n\n\n\t\tGoogle\t\n\n\n\t\tGovernment & Policy\t\n\n\n\t\tHardware\t\n\n\n\t\tInstagram\t\n\n\n\t\tLayoffs\t\n\n\n\t\tMedia & Entertainment\t\n\n\n\t\tMeta\t\n\n\n\t\tMicrosoft\t\n\n\n\t\tPrivacy\t\n\n\n\t\tRobotics\t\n\n\n\t\tSecurity\t\n\n\n\t\tSocial\t\n\n\n\t\tSpace\t\n\n\n\t\tStartups\t\n\n\n\t\tTikTok\t\n\n\n\t\tTransportation\t\n\n\n\t\tVenture\t\n\n\n\t\tEvents\t\n\n\n\t\tStartup Battlefield\t\n\n\n\t\tStrictlyVC\t\n\n\n\t\tNewsletters\t\n\n\n\t\tPodcasts\t\n\n\n\t\tVideos\t\n\n\n\t\tPartner Content\t\n\n\n\t\tTechCrunch Brand Studio\t\n\n\n\t\tCrunchboard\t\n\n\n\t\tContact Us\t\nSince 2022, blogging site Tumblr has been teasing its plans to integrate with the fediverse \u2014 the open social web powered by the protocol ActivityPub also used by Mastodon, Threads, Flipboard, and others. Now, the Automattic-owned blogging platform is sharing more information about when and how that integration could actually happen.As it turns out, the current"
  },
  {
    "title": "AI is stifling new tech adoption? (vale.rocks)",
    "points": 416,
    "submitter": "kiyanwang",
    "submit_time": "2025-02-14T12:45:05 1739537105",
    "num_comments": 377,
    "comments_url": "https://news.ycombinator.com/item?id=43047792",
    "comments": [
      "No, AI isn't.Any new tech, or version upgrade, or whatever, takes time for people to become familiar with it. You might as well say \"Stack Overflow is stifling new tech adoption\" because brand-new stuff doesn't have many Q's and A's yet. But that would be a silly thing to say.I'm not going to adopt a brand-new database regardless of LLM training data cutoff, just because enough people haven't had enough experience with it.And LLM's have a commercial incentive to retrain every so often anyways. It's not like we're going to confront a situation where an LLM doesn't know anything about tech that come out 5 or 10 years ago.Early adopters will be early adopters. And early adopters aren't the kind of people relying on an LLM to tell them what to try out.\n \nreply",
      "Strong disagree here. I've been trying to learn Zig, and I'm thwarted enough by chatgpt giving me outdated information on Zig's unstable API that if I didn't have a strong incentive to learn it for it's cross compiler, I'd likely turn my efforts towards another language. This effect can greatly alter the adoption curve of a new tech, which can leave it dying on the vine.You're not wrong though, in that Stack Overflow has the exact same problem. The main difference is that with Stack Overflow, there was a bonus in becoming the first expert on the platform, so while it does stifle new tech adoption, it at least encourages new tech content creation, which in turn encourages new tech. Though, I don't know if it's a net positive or negative in aggregate.I think this problem will likely lessen as training becomes cheaper and faster. But right now, there is really strong incentives to avoid any tech that has had breaking changes in the last 3 years.\n \nreply",
      "Someone recently put it that it\u2019s the first 10% of adoption that sets the future for a product.There are people online calling it the \u201ctech adoption cycle\u201d but this is a concept I encountered in a literal Business 101 class. 2.5% of the population are Innovators. 12.5 are early adopters. Then there\u2019s 70% in the middle where most of your cash comes in, and by the time the laggards hit you\u2019re optimizing for cost per unit because you\u2019ve had to drop the price so much due to competition from copycats and from the next new thing.So by the time 60% of your early adopters are onboard it\u2019s already been decided if you\u2019re on a rocket ship or this is just a burp.Early adopters have a high tolerance for inconveniences but it\u2019s not infinite. If they bleed enough they will find something else, and then you are DOA.\n \nreply",
      "Products with volatile demand don't necessarily follow.\n \nreply",
      "Have ChatGPT always use search when you ask questions. I find referencing a version number and requiring search improves things dramatically. Improves does not fix.v0 for vercel/nextjsTry phind or other things more into looking stuff up.\n \nreply",
      "Having spent the past week deep in cursor, it's amazing for building out a basic web app.. but getting it to a point of productivity takes a while..Command line install for latest svelte.. nope npx install is now deprecated, have to do it another way.. ok, let's go old school and read the docs.Great, it's up and running, but nope, Svelte has just hit V5 and the LLM isn't aware of the changes.. ok, do I drop back to 4 on a new code write, or spend the time to get a decent .cursorrules in place to make sure it's using the right version.\nOk, that's in, but look tailwind is too new too.. ok, fine let's get that into .cursorrules..Oh look, daisy has a v5 coming in 15 days, luckily I got in there just in time..I thought svelte, tailwind and daisy were the one true way nowadays!I now have a rule in my cursorrules that asks for any errors that I spot in the code (related to wrong versions) results in both the fix and a rule for the cursorrules so it doesn't happen again. That works well.\n \nreply",
      "The unfortunate truth is that the one true way these days is React, and if you're doing anything else you're in for a world of pain.\n \nreply",
      "The actual truth is that you don\u2019t need any of these frameworks at all. Vanilla JS & HTML has come a long way, and LLMs like Claude can build Vanilla JS with no trouble.\n \nreply",
      "Have you considered learning by reading documentation and tutorials, instead of asking the lie generator? I mean, how do you think people learned things before 2023?\n \nreply",
      "What about a library that doesn\u2019t have any documentation or tutorials, like the Soundfont lib for JUCE where the LLM was essentially I had to get a working product?\n \nreply"
    ],
    "link": "https://vale.rocks/posts/ai-is-stifling-tech-adoption",
    "first_paragraph": "EssayI propose that the advent and integration of AI models into the workflows of developers has stifled the adoption of new and potentially superior technologies due to training data cutoffs and system prompt influence.I have noticed a bias towards specific technologies in multiple popular models and have noted anecdotally in conversation and online discussion people choosing technology based on how well AI tooling can assist with its usage or implementation.While it has long been the case that developers have considered documentation and support availability when choosing software, AI\u2019s influence dramatically amplifies this factor in decision-making, often in ways that aren\u2019t immediately apparent and with undisclosed influence.Large language models, especially those on the scale of many of the most accessible, popular hosted options, take humongous datasets and long periods to train. By the time everything has been scraped and a dataset has been built, the set is on some level alread"
  }
]