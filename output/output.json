[
  {
    "title": "My AI skeptic friends are all nuts (fly.io)",
    "points": 678,
    "submitter": "tabletcorry",
    "submit_time": "2025-06-02T21:09:53 1748898593",
    "num_comments": 988,
    "comments_url": "https://news.ycombinator.com/item?id=44163063",
    "comments": [
      "I like Thomas, but I find his arguments include the same fundamental mistake I see made elsewhere. He acknowledged that the tools need an expert to use properly, and as he illustrated, he refined his expertise over many years. He is of the first and last generation of experienced programmers who learned without LLM assistance. How is someone just coming out of school going to get the encouragement and space to independently develop the experience they need to break out of the \"vibe coding\" phase? I can almost anticipate an interjection along the lines of \"well we used to build everything with our hands and now we have tools etc, it's just different\" but this is an order of magnitude different. This is asking a robot to design and assemble a shed for you, and you never even see the saw, nails, and hammer being used, let alone understand enough about how the different materials interact to get much more than a \"vibe\" for how much weight the roof might support.\n \nreply",
      "What do you think the \"mistake\" is here?It seems like you're pointing out a consequence, not a counter argument.\n \nreply",
      "> get the encouragement and space to independently develop the experience they need to break out of the \"vibe coding\" phase?I wonder this too, as someone who is entirely self-taught, when I started escaping \u201ctutorial hell\u201d was the hardest part of the journey, and took quite a bit of both encouragement and sheer willpower. Not sure I would have ever went beyond that if I had LLMs.I worry for Juniors, and either we\u2019ll need to find a way to mentor them past the vibe coding phase, or we hope that AI gets good enough before we all retire.\n \nreply",
      "I suppose the counterargument is, how many experienced programmers today have seen a register or a JMP instruction being used?\n \nreply",
      "Agree. We'll get a new breed of programmer \u2014 not shitty ones \u2014 just different. And I am quite sure, at some point in their career, they'll drop down to some lower level and try to do things manually.... Or step through the code and figure out a clever way to tighten it up....Or if I'm wrong about the last bit, maybe it never was important.\n \nreply",
      "The difference is that the abstraction provided by compilers is much more robust. Not perfect: sometimes programmers legitimately need to drop into assembly to do various things. But those instances have been rare for decades and to a first approximation do not exist for the vast majority of enterprise code.If AI gets to that level we will indeed have a sea change. But I think the current models, at least as far as I've seen, leave open to question whether they'll ever get there or not.\n \nreply",
      "I would assume at least the ones that did a formal CS degree would know JMP exists.\n \nreply",
      "It's pretty common for CS programs to include at least one course with assembly programming. I did a whole class programming controllers in MIPS.\n \nreply",
      "Anyone that's gotten a CS degree or looked at godbolt output.\n \nreply",
      "Your compiler does not hallucinate registers or JMP instructions\n \nreply"
    ],
    "link": "https://fly.io/blog/youre-all-nuts/",
    "first_paragraph": "A heartfelt provocation about AI-assisted programming.Tech execs are mandating LLM adoption. That\u2019s bad strategy. But I get where they\u2019re coming from.Some of the smartest people I know share a bone-deep belief that AI is a fad \u2014  the next iteration of NFT mania. I\u2019ve been reluctant to push back on them, because, well, they\u2019re smarter than me. But their arguments are unserious, and worth confronting. Extraordinarily talented people are doing work that LLMs already do better, out of  spite.All progress on LLMs could halt today, and LLMs would remain the 2nd most important thing to happen over the course of my career.Important caveat: I\u2019m discussing only the implications of LLMs for software development. For art, music, and writing? I got nothing. I\u2019m inclined to believe the skeptics in those fields. I just don\u2019t believe them about mine.Bona fides: I\u2019ve been shipping software since the mid-1990s. I started out in boxed, shrink-wrap C code.  Survived an ill-advised Alexandrescu C++ phase. "
  },
  {
    "title": "Ask HN: Who is hiring? (June 2025)",
    "points": 255,
    "submitter": "whoishiring",
    "submit_time": "2025-06-02T15:01:18 1748876478",
    "num_comments": 253,
    "comments_url": "https://news.ycombinator.com/item?id=44159528",
    "comments": [
      "Cambly.com | San Francisco, Ca, USA | Hybrid/Onsite | Full Time\nhttps://jobs.ashbyhq.com/Cambly?utm_source=wnopvxR0o8About Cambly: We are a mission-driven company transforming English learning through the power of conversation. See how we help people here: https://www.youtube.com/watch?v=JCWju3zEPooWe are hiring: Sr Android Engineer, Sr Product DesignerLife @ Cambly includes:  * Hybrid First Company (M, T, Th)\n  * In-office Lunches\n  * 100% of Medical, Dental, and Vision paid along with matching 401k\n  * End-of-year shutdown\n  * Helping others around the world unlock economic opportunities by learning English\n \nreply",
      "Recruiter from Waymo here. We\u2019re hiring all over the place to make these cars drive without needing to strike up small talk with a human.Mostly in person (MTV, SEA, NYC\u2026a few other spots). Remote isn\u2019t likely, but\u2026we do have remote employees.https://careers.withwaymo.com/Happy to help route to the right person internally for the role\n \nreply",
      "Category Labs | https://www.category.xyz/ | Remote and NYC | Full Time | $200K USD+Category Labs (formerly known as Monad Labs) is a team of systems engineers and researchers on a mission to design and build at the frontier of decentralized technology. We strive to design and build step-function improvements over existing blockchain solutions. After recently raising $225M in series A funding, led by Paradigm, we are growing our team.Senior SWE (Rust, C/C++): https://jobs.ashbyhq.com/category-labs/45f674b2-d904-482e-a5...\nInfrastructure Engineer, APAC: https://jobs.ashbyhq.com/category-labs/ea8cf4f7-0db7-43e9-af...\nSenior Researcher, Systems: https://jobs.ashbyhq.com/category-labs/015934c5-66e5-4042-94...\n \nreply",
      "GoodParty.org | Multiple Roles | REMOTE (US) | Full-time & Part-time | https://goodparty.orgWe're on a mission to disrupt the corrupt two-party system by building tools that change the rules\u2014and we need your help. GoodParty.org is not a political party; we're a fully remote, US-based team united around making democracy more accessible, transparent, and fair. If creatively disrupting politics for good sounds like a challenge you're up for, check out the roles we're looking to fill right now:- Account Executive \u2022 Growth \u2022 Full-time- Contract Product Designer \u2022 Gifted Savings \u2022 Full-time (Contractor)- Data Scientist (Tableau) \u2022 Operations \u2022 Full-time (Contractor)- Growth Marketer (Contractor) \u2022 Growth \u2022 Full-time (Contractor)- Marketing Operations Manager \u2022 Growth \u2022 Full-time- Part-time Finance & Operations Manager \u2022 Gifted Savings \u2022 Part-time- Political Data Associate \u2022 Politics \u2022 Full-time- Product Design Manager \u2022 Design \u2022 Full-time- Product Marketing Manager \u2022 Growth \u2022 Full-time- Senior Full Stack Engineer \u2022 Engineering \u2022 Full-time- Senior Product Manager \u2022 Product \u2022 Full-timeWork with us: https://goodparty.org/work-with-us/\n \nreply",
      "I love what you're doing and was going to submit for the PM role. I'm having an issue with the 'Application' part -- doesn't seem to be loading the form!\n \nreply",
      "Hey Kyle, sorry about that! It\u2019s working for me here if you want to try: https://goodparty.org/work-with-us/f3ef6b7e-b554-42a7-8fd2-9...You can also email Danny from our hiring team danny.marcano [at] goodparty.org\n \nreply",
      "o.O. Yess\n \nreply",
      "Supabase (YC S20) || Fully Remote // Async-first || Full-time || supabase.comSupabase is an open-source, fully remote company building developer tools for Postgres\u2014and now running 3 million+ managed database instances in production. Supabase offers a Postgres database, vector extensions, auth, real-time functionality, storage, restful APIs, and edge functions.We're looking for Billing Engineer, Product Manager, Security Operations Engineer, Postgres Tools Manager, AI Tooling EngineerAll jobs are listed here https://supabase.com/careers -- we manually check and respond to all the applications.\n \nreply",
      "Stainless | Engineers, EMs, Former Founders, GTM, Business, more | NYC & SF ONSITE | Full-timeStainless is building the platform for high-quality, easy-to-use APIs.When you `npm install openai` or `pip install anthropic` or `go get \u2026cloudflare`, for example, you\u2019re downloading code that we generated.We\u2019re ~3y old, ~25 people, have strong revenue, several years of runway, and great customers (including OpenAI, Anthropic, and Cloudflare). We\u2019re backed by Sequoia & a16z.As one of our first 20 engineers, you\u2019ll get autonomy to build great products, skilled peers, opportunity for tremendous impact, and competitive salary, benefits, and equity.We\u2019re looking for exceptionally productive, thoughtful, tasteful, and kind people with a passion for making software development better for everyone.Want to build the future of API tooling? See more at stainlessapi.com/jobs\n \nreply",
      "Stellar Science | Hybrid (USA) Albuquerque NM, Washington DC (Tysons VA), Dayton OH | Full time, interns/co-ops | U.S. citizenship required | https://www.stellarscience.com (sorry, summer 2025 internships have been filled)\nCompany: We're a small scientific software development company that develops custom scientific and engineering analysis applications in domains including: space situational awareness (monitoring the locations, health and status of on-orbit satellites), image simulation, high power microwave systems, modeling and simulation, laser systems modeling, AI/ML including physics-informed neural networks (PINN), human body thermoregulation, computer vision and image processing, high performance computing (HPC), computer aided design (CAD), and more. All exciting applications and no CRUD. We emphasize high quality code and lightweight processes that free software engineers to be productive.Experience: Other than interns, we currently require a Bachelors degree in physics, engineering, math, computer science, or a related field, plus preferably 3+ years of work experience or a Masters or PhD in lieu of work experience. (Roughly 30% of our staff have PhDs.)Technologies: Mostly C++23, Qt 6.5-6.9, CMake, git, OpenGL, CUDA, Boost, Jenkins. Windows and Linux, msvc/gcc/clang/clangcl. AI/ML and other projects use Python, some use Java or Javascript/Typescript/React.Apply online at https://www.stellarscience.com/careers/.\n \nreply"
    ],
    "link": "item?id=44159528",
    "first_paragraph": ""
  },
  {
    "title": "Conformance Checking at MongoDB: Testing That Our Code Matches Our TLA+ Specs (mongodb.com)",
    "points": 43,
    "submitter": "todsacerdoti",
    "submit_time": "2025-06-02T21:50:15 1748901015",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=44163496",
    "comments": [
      "About 15 years ago or so, webscale was everything and MongoDB was webscale[1][2] hence being used everywhere.Has it become a legacy product, or are there still good reasons for using it in a new project in 2025?[1]: https://www.youtube.com/watch?v=b2F-DItXtZs[2]: https://news.ycombinator.com/item?id=1636198\n \nreply",
      "Personal opinion.I swore away from it for 10 years, but came back recently. And I'm pleasantly surprised with the developer experience of MongoDB Atlas (the cloud version).You just have to keep in mind the common sense best practices about developing with kv stores, and you'll be mostly alright.\n \nreply",
      "Only here you read that MongoDB is a legacy product.Fortnite runs on MongoDB, it's one of the largest game on the planet.15 years ago Postgres did not have proper replication, shocking right?\n \nreply",
      "It didn't have replication integrated. Slony replication existed for 20 years, same as pgpool.\n \nreply",
      "MongoDB as a company is growing 20% y/y and 2B in revenue.So very far from being a legacy product.I still use it for new projects because (a) Atlas is genuinely a solid offering with a great price point for startups and (b) schema-less datastores have become more of a necessity as our control of data has decreased e.g. SaaS companies dictate their schema and we need to accomodate.\n \nreply",
      ">  or are there still good reasons for using it in a new project in 2025it's not clear there ever was. Most of the big users I'm aware of, like Stripe, don't seem to have needed it and regretted the decision. Big data didn't become a thing in the way people expected[0]. If you really did need the scalability of Mongo you'd choose a NewSql database like TiDB[1].[0] https://motherduck.com/blog/big-data-is-dead/\n[1] https://docs.pingcap.com/\n \nreply",
      "a) Big data is more than just the size of the data. It's about how you treat that data i.e. instead of doing expensive and brittle up-front RDBMS modelling you instead dump it all into a data lake and figure out how to handle the data at run-time. And it is still the standard pattern in almost all companies today.b) Nobody was choosing MongoDB solely for performance. If it was you would choose some in-memory K/V store. It was about it being the only well supported document store that was also fast and scalable.c) Stripe\u2019s DocDB is an extension of MongoDB Community: https://stripe.com/blog/how-stripes-document-databases-suppo...\n \nreply",
      "I can assure you that Stripe does not regret the decision.\n \nreply",
      "interesting article - I wonder why TLA+ isn't more popular. seems useful, but I guess it's hard to iterate fast with it.\n \nreply",
      "Mike Dodds's article \"What Works (and Doesn't) Selling Formal Methods\" offers some insight - two points i remember are (i) many potential applications of formal methods in business do not result in an attractive cost-benefit, relative to other development approaches, especially in being able to produce enough benefit for a small input.  There was also an interesting anecdote that businesses that need to produce software that complies with certain validation/quality targets do not necessarily get a business benefit to investing in additional validation, they just need enough to clear the compliance bar or rank well vs competitors.https://www.galois.com/articles/what-works-and-doesnt-sellin...corresponding HN thread from earlier this week:  https://news.ycombinator.com/item?id=44131324\n \nreply"
    ],
    "link": "https://www.mongodb.com/blog/post/engineering/conformance-checking-at-mongodb-testing-our-code-matches-our-tla-specs",
    "first_paragraph": "Some features mentioned below have been sunset since this paper was originally written. Visit our docs to learn more.At MongoDB, we design a lot of distributed algorithms\u2014algorithms with lots of concurrency and complexity, and dire consequences for mistakes. We formally specify some of the scariest algorithms in TLA+, to check that they behave correctly in every scenario. But how do we know that our implementations conform to our specs? And how do we keep them in sync as the implementation evolves?This problem is called conformance checking. In 2020, my colleagues and I experimented with two MongoDB products, to see if we could test their fidelity to our TLA+ specs. Here's a video of my presentation on this topic at the VLDB conference. (It'll be obvious to you that I recorded it from my New York apartment in deep Covid lockdown.) Below, I write about our experience with conformance checking from 2025's perspective. I'll tell you what worked for us in 2020 and what didn't, and what dev"
  },
  {
    "title": "Snowflake to buy Crunchy Data for $250M (wsj.com)",
    "points": 107,
    "submitter": "mfiguiere",
    "submit_time": "2025-06-02T20:01:49 1748894509",
    "num_comments": 45,
    "comments_url": "https://news.ycombinator.com/item?id=44162443",
    "comments": [
      "https://archive.md/59bYY",
      "It's interesting that Snowflake went shopping for Crunchy Data over Neon. While Neon focused on bringing compute and storage separation to OLTP, Crunchy Data focused more on bringing OLTP/PostgreSQL closer to OLAP with DuckDB and Iceberg.In a way, Crunch Data was a competitor to Snowflake as they literally name themselves as \"Postgresql Data Warehouse\" but correct me if I'm wrong. Neon sounds more complementary to Snowflake as they were struggling with an OLTP backend, namely their Unistore product, which was announced 3 years ago but never went into general availability due to its scalability issues.Maybe Neon was 4x more expensive, but this acquisition sounds more like an answer to Databricks than a strategic acquisition if I'm being honest. Apparently, Crunchy had $30M ARR, so it's 8x ARR, which is a cheaper answer to Databricks.\n \nreply",
      "> literally name themselves as \"Postgresql Data Warehouse\" but correct me if I'm wrongThat's not their primary product. Crunchy Postgres is their primary offering and they recently announced Crunchy Data Warehouse.\n \nreply",
      "I thought Crunchy Data Warehouse was their main product, looking at most of their marketing posts. What's the advantage of using their managed PostgreSQL offering on the cloud, compared to native offerings such as AWS RDS and GCP Cloud SQL?\n \nreply",
      "Neon acquisition was ~$1B.\n \nreply",
      "> Part of the reason Snowflake and Databricks are interested in database companies is because PostgreSQL can serve as the underlying database for customers to create AI agents with data they store in the companies\u2019 respective platforms.I don't understand this part.  What does PostgreSQL offer here that these vendors believe they can't add to their existing platform?  Is it the ecosystem?\n \nreply",
      "I read this as \"buying potential competitors off the market\" right?Less ability for customers to roll-their-own => more customers for Snowflake?\n \nreply",
      "With neon being bought by databricks, serverless Postgres tech has effectively disappeared from the market.\n \nreply",
      "There is also this one from Supabase: https://www.orioledb.com/\n \nreply",
      "is it open source? (this? https://github.com/neondatabase/neon.git ) and since it's serverless, in terms of being on the internet what are you saying has disappeared, a proprietary version? support/consulting contracts?\n \nreply"
    ],
    "link": "https://www.wsj.com/articles/snowflake-to-buy-crunchy-data-for-250-million-233543ab",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: I build one absurd web project every month (absurd.website)",
    "points": 118,
    "submitter": "absurdwebsite",
    "submit_time": "2025-06-02T19:52:46 1748893966",
    "num_comments": 27,
    "comments_url": "https://news.ycombinator.com/item?id=44162363",
    "comments": [
      "This reminds me a little of Simone Giertz, a YouTube DIY person who started out long ago making shitty robots and has settled into fringe mainstream - usable items but not quite the way you would expect, like folding coat hooks, a gaming table with a roll top, a chair from a satellite dish, and a prosthetic leg for her three legged dog.\n \nreply",
      "These are delightful. I think I like LingoPrio the best, since I'm (re)learning French. My kid and I went to a pediatrician appointment and my kid asked, \"How do you say 'constipation' in French?\" And I didn't have to look it up, since it ended in \"ation\".> I just enjoy exploring what the web can be when it doesn\u2019t try to be \u201cuseful\u201d.I have a project that's arguably strange but deeply serious. I'm building a Pi Bramble [1] and adding services with the goal of making a homelab that is continuously collapsing under the weight of its own complexity. Y'know, for education! But it's also really fun, when I have time to spend on it.[1] https://clog.goldentooth.net/\n \nreply",
      "Useles fun projects are useless but fun.I made https://tellconanobrienyourfavoritepizzatoppings.com the other day.It was fun. But useless.\n \nreply",
      "Some fun entries so far  toppings=pineapple+\n  toppings=pineapple\n  toppings=I+don%27t+know+wh+conan+o+brien+is%2C+but+I+want+him+to+know+that+I+can%27t+eat+pizza+at+all.\n  toppings=mushrooms\n  toppings=Brie\n  toppings=Cheeze\n  toppings=Wat\n  toppings=\n  toppings=peppers+and+onions\n  toppings=cat+..%2Fetc%2Fpasswd\n  toppings=pepperoni+is+pretty+good+usually\n  toppings=More+tiny+pizzas+\n  fooabar\n  0x%5B%5D=DTAB\n  toppings=rendang\n  toppings=salami\n  toppings=spinach\n  toppings=Peppers\n  toppings=Ham+and+Pineapple+\n  toppings=french+fries\n  toppings=egg\n \n toppings=usually+plain+but+i+dont+mind+putting+some+stuff+on+there.+onions+or+pepperoni+or+hawaiian+every+now+and+then.+i+dont+get+why+some+people+are+so+upset+about+pineapple%2C+it%27s+definitely+a+different+taste+but+i+think+it+works%21+although+i+will+say+sometimes+i+think+the+pineapple+slices+are+too+thick+and+so+you+just+get+pineapple+for+a+bite%2C+i+dont+like+that.+love+your+stuff+conan\n \nreply",
      "> Microtasks for Meatbags \u2014 the future: AI gives prompts, humans executeThat's close to how many companies, plans etc. work today. We manage big groups of people and systems, as syncretic holes. Sometimes a human, sometimes a computer is better at one task.\n \nreply",
      "Operation D-Day: One Second of War truly delighted me more than any other video game I've ever played.I hope you like my Let's Play: https://youtu.be/iUnbD8xp0f0\n \nreply",
      "I feel like LingoPrio needs pineapple.\n \nreply",
      "Love it. Bringing back the \"fun\" part of the web\n \nreply",
      "Yeah, exactly \u2014 thanks! ;)\n \nreply",
      "Great job. I'm into mortality so the Artist's Death Effect was fun. I tell my kids all my ideas are terrible because if it wasn't a terrible idea someone else would have done it already.\n \nreply"
    ],
    "link": "https://absurd.website",
    "first_paragraph": ""
  },
  {
    "title": "Teaching Program Verification in Dafny at Amazon (2023) (dafny.org)",
    "points": 18,
    "submitter": "Jtsummers",
    "submit_time": "2025-06-02T22:03:50 1748901830",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=44163618",
    "comments": [
      "Having played with Dafny only in a university course, I really enjoyed it as a  way of implementing algorithms and being certain they work with much less cruft than unit tests.I haven't gone looking but verifier tools compatible with languages people already use (typescript/rust/go/whatever is the flavour of the month) feel like the way to go\n \nreply",
      "https://github.com/verus-lang/verus is similar tool for Rust (developed by previous heavy users of Dafny).\n \nreply",
      "I agree, using tools more in line with your language is better but I believe the knowledge from learning Dafny ought to transfer well to other systems. And Dafny seems better as a pedagogical system than what I've seen and used for other languages.I'm exploring it now as a way to ease colleagues into SPARK. A lot of the material appears to transfer over and the book Program Proofs seems better to me than what I found for SPARK. I probably wouldn't have colleagues work through the book themselves so much as run a series of tutorials. We've done this often in the past when trying to bring everyone up to speed on some new skillset or tooling, if someone already knows it (or has the initiative to learn ahead of time) then they run tutorial sessions every week or so for the team.\n \nreply",
      "https://news.ycombinator.com/item?id=38691437 - Dec 2023, 1 commentThis only had the one previous submission but I found it interesting. The mentioned book, Program Proofs, is worth checking out if the topic and language interests you.\n \nreply"
    ],
    "link": "https://dafny.org/blog/2023/12/15/teaching-program-verification-in-dafny-at-amazon/",
    "first_paragraph": "\nDec 15, 2023\n      \u2022 Jean-Baptiste TristanWe recently made available some teaching material that we have used to teach program verification to scientists and engineers at Amazon. \nIt composed of lecture slides \nand exercises with solution. \nIf you want to learn about Dafny and program verification, you can jump right in. You will learn how to program in Dafny, how to do\nuse Dafny as a proof assistant, and finally how to verify programs. If instead you are more interested in teaching program\nverification, you may find the organization of the lectures and the focus on Dafny\nas a proof assistant surprising, and the following note should provide some context and explanations. \nA proof plays two roles. \n(i) A proof convinces the reader that the statement is correct. \n(ii) A proof explains why the statement is correct.\nThe first point consists of the administrative (\u2018bookkeeper\u2019) activities of verifying the\ncorrectness of the small reasoning steps and see if they constitute a correct proof."
  },
  {
    "title": "Show HN: Kan.bn \u2013 An open-source alterative to Trello (github.com/kanbn)",
    "points": 345,
    "submitter": "henryball",
    "submit_time": "2025-06-02T09:47:48 1748857668",
    "num_comments": 159,
    "comments_url": "https://news.ycombinator.com/item?id=44157177",
    "comments": [
      "Hey HN,I couldn\u2019t find an open-source alternative to Trello that I liked so I built my own.It\u2019s fast, free and fully-customisable. You can self host it, or use the cloud version if you don\u2019t want to manage your own infra.Repo -> https://github.com/kanbn/kanCloud -> https://kan.bnRoadmap ->  https://kan.bn/kan/roadmapI\u2019d love feedback, bug reports, or any feature suggestions!\n \nreply",
      "How does it compare to the existing open-source boards, such as:https://wekan.github.io/https://taiga.io/https://kanboard.org/\n \nreply",
      "I went down the rabbit hole of self hosted kanban boards recently. Honestly, nothing comes close to Trello and while I love the open source communities (and supporting them), these alternatives usually dont come close, or worse they try to be super feature rich and its get in the way of their functionality. The better open source options tend to be airtable alternatives or full blown project management tools (Eigenboard, Plane, etc)\n \nreply",
      "Or this one that I've been self-hosting for my team: https://vikunja.io/\n \nreply",
      "I've also been using Vikunja locally for myself, but the UX really isn't the best and it isn't keyboard-driven which is a bit of a shame. The mobile version also isn't really ready for real usage, seems to lose state every now and then, or disconnect in some manner.\n \nreply",
      "We have been using Vikunja for our team for about 2/3 years and it's good. It has it's quirks but generally works. What we haven't done well is keeping up to date with development as the version we installed did enough for us. We recently found out that they moved main development to github and we are keen to contribute where we can as we have found value in it.\n \nreply",
      "Your comment just made me think about the fact I installed Vikunja like 2 years ago and I haven't updated it since. D:\n \nreply",
      "Also https://github.com/plankanban/planka\n \nreply",
      "Planka is not open-source.\n \nreply",
      "There is fork of Planka with MIT license:https://github.com/RARgames/4gaBoards\n \nreply"
    ],
    "link": "https://github.com/kanbn/kan",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        The open source Trello alternative.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.The open-source project management alternative to Trello.\nRoadmap\n  \u00b7\n  Website\n  \u00b7\n  Docs\n  \u00b7\n  Discord\nSee our roadmap for upcoming features.We welcome contributions! Please read our contribution guidelines before submitting a pull request.Kan is licensed under the AGPLv3 license.For support or to get in touch, please email henry@kan.bn or join our Discord server.\n        The open source Trello alternative.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page. There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page."
  },
  {
    "title": "How to post when no one is reading (jeetmehta.com)",
    "points": 501,
    "submitter": "j4mehta",
    "submit_time": "2025-06-02T04:01:00 1748836860",
    "num_comments": 222,
    "comments_url": "https://news.ycombinator.com/item?id=44155746",
    "comments": [
      "For a variety of reasons I wanted some notoriety when I was younger. I wanted to be \u201cthe guy who\u2019d done that thing\u201dI became a lot happier with myself when I stopped chasing that and just decided to post the things that I like and the projects I wanted to do. These days I like to think of my website as part of the \u201cold, good internet\u201d: No ads, no demands, just whatever I like and wanted to write.It\u2019s worth recognizing that that comfort came around/after I was making decent enough money that I wasn\u2019t also trying to figure out a side hustle. It feels to me like \u201cdo the things you like\u201d is a luxury of someone who isn\u2019t anxious about paying all their bills.\n \nreply",
      "This is good advice in general, but lately the Internet had grown so large it is healthier to expect no one will ever see your creation. Many of us grew up when the Internet was a pond, today it is an immeasurably large ocean; there is a good chance your audience won\u2019t ever find you, and your chances get shorter every day.Incidentally I also believe one would have more chance to market their own creation in the real, physical world than the Internet. I believe we\u2019ll eventually see leaflets and indie books being distributed to passersby for free like 100 years ago.In any case, create for yourself. Create without ever expecting an audience. If this doesn\u2019t sound fun, you probably just like the publicity rather than the act of creation itself.\n \nreply",
      "you'll still get CDs handed to you if you walk around downtown NYC\n \nreply",
      "Often as part of an intimidation scam where the person that hands you the CD demands payment.But yes, that does happen.\n \nreply",
      "If it worked for AOL, why wouldn't someone continue today? (other than a lack of optical reading devicen in most compute). Maybe AOL would be better off today if they kept mailing and just added NFC and QR-code.In 2011, AOL CEO Steve Case took to Quora to reveal just how successful all those free trials were. \u201cAt that time I believe the average subscriber life was about 25 months and revenue was about $350,\u201d Case wrote. \u201cSo we spent about $35 to acquire subscribers.\u201d Because that $35 had a gigantic return, AOL was happy to keep pumping money into free CDs.Marketing manager Reggie Fairchild chimed in on the Quora thread to claim that in 1998, AOL used the world\u2019s entire CD production capacity for several weeks.https://www.vox.com/2015/5/12/8594049/aol-free-trial-cds\n \nreply",
      "\"Why wouldn't someone continue today (other than for the reason why they wouldn't continue today)?\"\n \nreply",
      "hahah..  just reminded me of mr. robot..\n \nreply",
      ">It feels to me like \u201cdo the things you like\u201d is a luxury of someone who isn\u2019t anxious about paying all their bills.Couldn't have said it better.I really didn't get to \"do things I love\" until I escaped poverty.\n \nreply",
      "Even if you are lucky enough to find something you really enjoy that also generates some income; unless it is almost trivial, there will be parts of it you don't enjoy.Side projects might be fun to code, but bug fixes, tech support, and documentation might be a real chore for you.I have one of those that I can't wait to sit down and code a new feature; but sometimes have to force myself to do the tasks that make it more 'user friendly'.\n \nreply",
      "I love writing. I definitely wrote things that brought in no money when I was worried about making the rent.\n \nreply"
    ],
    "link": "https://www.jeetmehta.com/posts/thrive-in-obscurity",
    "first_paragraph": "The path to creative mastery begins with years of silence. Publish anyway.Most things take forever to bear fruit.Even the most successful creators have spent years (if not decades) putting content out in obscurity. Just a complete total void. Youtube videos with 4 views. Newsletters with 3 subscribers. Podcasts with 10 listeners. Blogs with 6 readers. Songs with 4 downloads. No one but their parents and their spouse consuming their work. And sometimes not even that.If you\u2019re in it purely for the promised land of love, praise, followers, and fame from millions of people - it\u2019s impossible to sustain. In every field, it takes years of practice, repetition, and \u201cfailed performances\u201d before the first hit. In the worst case, artists go their entire life without ever receiving the praise they deserved. Look at Van Gogh - an incredible artist who died unappreciated & broke, in a mental asylum. All of his fame came after his death.How do you keep hitting that publish button, over and over again"
  },
  {
    "title": "Japanese Scientists Develop Artificial Blood Compatible with All Blood Types (tokyoweekender.com)",
    "points": 82,
    "submitter": "Geekette",
    "submit_time": "2025-06-02T21:44:37 1748900677",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=44163428",
    "comments": [
      "Biopure was a company doing something similar in the US. They imploded in the early 2000s, but they had created an \"oxygen therapeutic\" (blood substitute) by isolating hemoglobin based oxygen carrying molecules FROM COW BLOOD!The fact that they weren't using whole red blood cells meant the product was typeless, room temp stable, and better at perfusing around arterial blockages and into tissue since the molecules were so small.Unfortunately, the company was kind of a mess. They managed to get licensed for sale in South Africa, and in the US for the veterinary product, but never managed FDA approval. It's a shame. Everyone could see the promise of the product, and it really actually worked, but they just couldn't seem to make the business viable.https://en.wikipedia.org/wiki/BiopureEdit: When I say they imploded, I really mean it. They got prosecuted for misleading statements to investors about the state of US clinical trials, and the legal proceedings became farcical.\"On March 11, 2009 [Senior VP] Howard Richman pleaded guilty in U.S. District Court and admitted he had instructed his lawyers to tell a judge he was gravely ill with colon cancer. He also admitted to posing as his doctor in a phone call with his lawyer so that she would tell the judge that his cancer had spread and that he was undergoing chemotherapy.\"That guys was sentenced to 3 years in prison. Here's hoping this new blood substitute has a happier outcome!\n \nreply",
      "One more anecdote. WADA, the World Anti Doping Agency, had to specifically address using hemoglobin based blood substitutes for doping.https://www.wada-ama.org/en/resources/scientific-research/de...This class of products is room temperatures stable, and typeless, and it increases oxygen carrying capacity basically immediately. You can imagine how useful that would be for something like a Tour De France team. Keep a half dozen units of fake blood in your team bus. No special equipment. No rigorous temp control. You can give any unit to any one of your athletes without worrying about compatibility. You can administer it on race day, eliminating any chance of being caught in the runup to your event.Obviously Biopure condemned off-label use of their product for blood doping, but behind closed doors they were super proud that it was seen as effective enough to be called out by name by WADA. No publicity is bad publicity and all that.\n \nreply",
      "They didn't lost long enough to be an official sponsor & exclusive partner of the Thiel backed doping games.\n \nreply",
      "What happens to the IP when this happens?  If the product works but wasn't supported by the right company how does it not get picked up by someone more competent?\n \nreply",
      "The artificial blood is created by extracting hemoglobin \u2014 a protein containing iron that facilitates the transportation of oxygen in red blood cells \u2014 from expired donor blood. It is then encased in a protective shell to create stable, virus-free artificial red blood cells. As these artificial cells have no blood type, there is no need for compatibility testing.\n\nBlood-derived synthetic. Still cool, but continues to require a pool of donors.\n \nreply",
      "Apparently their first target is soon-to-expire donor blood erythrocytes \u2014 which makes this essentially a (pretty major) scalability improvement in how far existing donor blood goes.However, that being said: hemoglobin\u2019s just a protein. Recombinant hemoglobin isn\u2019t overly challenging to produce \u2014 we do it already. (Currently mostly animal hemoglobin, for vegan meat \u2014 but it\u2019s no different to produce human hemoglobin.) We don\u2019t bother with synthesizing human hemoglobin because there\u2019s (until now) no way to go from having a protein to having useful cells serving an erythrocytic function. This research changes that \u2014 and so will strongly motivate demand for such production. I would bet money that, 5\u201310 years out, you\u2019ll be able to buy bags \u2014 even drums \u2014 of recombinant human hemoglobin from any biopharma supplier.\n \nreply",
      "> Currently mostly animal hemoglobinNope. They're making _plant_ hemoglobin ( https://en.wikipedia.org/wiki/Leghemoglobin ) to stay vegan.Yes, I was also surprised that freaking plants have hemoglobin. But apparently, legume plants use it to create the oxygen-depleted environment for nitrogen fixing bacteria to work.\n \nreply",
      "The way evolution can converge on symbiotic relationships like this always amazes me.\n \nreply",
      "My understanding is a huge issue with blood donation is expiry, and therefore the need for consistent year-round donation - when a disaster occurs there's often a spike in donations but the surplus gets thrown away. A mechanism that can make use of expired blood that works for all blood types and extends the shelf life seems extremely valuable.\n \nreply",
      "Interesting to see. There's been some other efforts in this space, from blood products derived to chemically derived (e.g. perflurocarbons, which carry many multiples of what hemoglobin can carry, oxygen-wise).There's definitely a need for a safe, shelf stable blood substitute.Though, I'd argue that this isn't artificial blood, it's artificially replacing only the oxygen carrying role of blood -- there's nothing in this product that is producing clotting, fighting disease, managing hormones, fueling cells, etc. Still, excited to see this progress, transfusions are still a risky bet, and having something that can provide at least the O2 capacity in a safer package is very welcome.\n \nreply"
    ],
    "link": "https://www.tokyoweekender.com/entertainment/tech-trends/japanese-scientists-develop-artificial-blood/",
    "first_paragraph": ""
  },
  {
    "title": "Typing 118 WPM broke my brain in the right ways (balaji-amg.surge.sh)",
    "points": 98,
    "submitter": "b0a04gl",
    "submit_time": "2025-06-02T19:48:36 1748893716",
    "num_comments": 137,
    "comments_url": "https://news.ycombinator.com/item?id=44162327",
    "comments": [
      "https://web.archive.org/web/20250602202840/https://balaji-am...",
      "Typing fast is an underrated skill for developers. A lot of the value added by various intelligent tab completion and LLMs is easily replicated by typing variable and function names at 100+ wpm.Not a fan, however, of the desire to disparage the \"right\" way of doing things that's done in this blog. I type the \"proper\" way, home row and all, and can reach 150+wpm with high accuracy. So, based on this evidence, you're wrong and would be better off having learned the proper technique...is an argument which I could make, and the evidence would be true, but it doesn't sound extremely convincing, does it?\n \nreply",
      "When I was in the 8th grade (back in the 1900s), I took a typing elective class, because I figured if I was going to be in front of a keyboard typing for a living as a programmer, I should learn to do it right.That was a rare very good decision for kid me back then, and it's paid off ever since.\n \nreply",
      "Opposite experience: I hated the school class and I remember some frustrating tools which, if you made an error, counted any reflexive backspace and corrected letter as two additional errors...What really turned me into a touch-typist was all the arguing I did over dial-up internet the next summer.\n \nreply",
      "Likewise in high school in the 1900s I took typing, which did markedly improve my typing though I am sure I didn't keep up with the technique I learned. We also learned all the standard letter formats and so on which I promptly forgot.I measured myself the other day and I can do about 110-115 WPM, which I think is pretty impressive for a 50 year old who last took typing classes at 15.\n \nreply",
      "Same. Can touch type accurately while maintaining eye contact during a meeting. Young people find it unnerving.\n \nreply",
      "Just did this today. When people ask I tell them I'm a big Ray Charles fan.\n \nreply",
      "You were typing on a keyboard in the 1900s huh? ;) Same here - in the 1990s I made the same decision, and it was one of the best of my life. Cheers.\n \nreply",
      "I didn\u2019t take typing lessons, but I\u2019ve been typing since the 1980s, probably since 1987. At some point, I discovered that people typed without looking, decided that using 10 fingers and typing without looking at the keyboard was better, so I started optimizing for it, and it worked.\n \nreply",
      "While I was learning a new keyboard layout (Colemak) I went from > 100 WPM to starting from ~20 WPM. I think I got pretty productive when I reached 60/70 WPM and was surprised how much tab completion and computing assistance I relied on anyway. After that experience I think fast typing speed is overrated. (Now I\u2019ve a somewhat useless skill of being able to type > 100 WPM on two different keyboard layouts.)Edit: note if you are a typist and transcribe a lot of text for long periods of time without break, typing speed is important. But that\u2019s mostly not any of us. But hey maybe I don\u2019t write enough documentation and comments..\n \nreply"
    ],
    "link": "http://balaji-amg.surge.sh/blog/typing-118-wpm-brain-rewiring",
    "first_paragraph": "AI Tinkerer - Half human, half compiler, zero chill.Typing became my therapy. Not even kidding.Started at 60 WPM, felt like dragging my feet through mud every time I had to write code comments or documentation. Now? 118 WPM. No home row bullshit. No \"proper finger placement.\" Just pure, chaotic rhythm. Proof here because I know you don't believe me.Every morning, before I even think about opening VS Code, before Slack starts destroying my soul, before the daily standup where we pretend we know what we're doing, I just type. Five minutes. That's it.It's like meditation but actually useful. Resets my brain, calms the static from yesterday's debugging session, and gets me in the zone. Way better than staring at my ceiling wondering why I chose this career.Here's the thing that took me way too long to figure out: rushing makes everything worse. Every time I tried to go fast, I'd mess up, backspace like crazy, and end up slower than when I started. Classic developer move, honestly.So I slow"
  },
  {
    "title": "Show HN: Onlook \u2013 Open-source, visual-first Cursor for designers (github.com/onlook-dev)",
    "points": 320,
    "submitter": "hoakiet98",
    "submit_time": "2025-05-29T16:31:15 1748536275",
    "num_comments": 74,
    "comments_url": "https://news.ycombinator.com/item?id=44127653",
    "comments": [
      "This is awesome!I\u2019ve tried other visual AI dev tools like Bolt or Lovable, but I feel like the walled-garden approach they\u2019ve taken is a bit limiting in terms of how I personally want to work. \nAs someone who comes from design but is actively using Cursor and Windsurf, I\u2019ve very much been missing that Webflow-like ability to just click, edit, and see things getting updated in real-time, while always knowing I can drop into the code for more complex stuff.It looks like you\u2019ve nailed this intersection. The fact that you\u2019re taking what is basically a visual layer on top of the code, plus the inclusion of the in-browser code editor (and I assume terminal access for the sandbox eventually?), is a huge step in the right direction and feels like it could really cover some of that gap I want between design and dev.I\u2019m definitely keeping an eye on this, and when you\u2019re able to allow import existing projects I'll be onboard.Congrats on the launch!\n \nreply",
      "We have a chance to take back SaaS and make it all local.This is great.Next we need to win the foundation model game and steal it away from the hyperscalers.Great job!\n \nreply",
      "Thanks so much!It's been a challenge to find the right balance for this \u2013 on one hand you want to give people who know what code is an easy way to navigate their codebases and be more effective, and on the other hand you want to help people who have never coded before create something they really love.The visual layer has a lot of polish left to do to be a perfect design tool experience, but we're getting there.I think for most designers they don't love being limited by traditional web \"structures\" like flexbox, but that's also how things can get built and scale properly. AI is very good at generating flexbox styled websites but when a designer jumps-in to an AI generated website it's like picking up a complex project someone else has architected. If you know how websites work it isn't super intimidating, but if you don't then it can feel very overwhelming.One of the main reasons we decided to not have layers and styles immediately visible on the left and right sides of the app was because people who have never jumped into a design tool mentioned they were overwhelmed with the UI. Moving these tools into a \"secondary\" interaction layer cleared up the interface but made it easy for pro-users to still find them.I'm excited to keep refining this editor experience so when you're able to import projects you have all of the tools you'd expect from a visual editor for your codebase.\n \nreply",
      "Thanks for the kind words! We definitely want to restore the ability to use Cursor/Windsurf through SSH as soon as possible.There is terminal access on the right of the bottom bar. It just has 1 CLI connection right now, along with the long runner server but you can run commands through there or through the AI.Just merged a PR for that should be live in a few mins\nhttps://github.com/onlook-dev/onlook/pull/1963\n \nreply",
      "https://m.youtube.com/watch?v=RjFBUkVfy1EThis should be your demo video on your home page instead of what you have. I didn't understand how you were different to a typical no-code tool until I saw the entire process of creating a react app, running it and actually changing stuff on the Onlook console.\n \nreply",
      "Ditto. I came here after watching the other video they have on their Docs and I ended the video with even more questions.\n \nreply",
      "This is good feedback. I updated the Get Started video here. Thank you :)https://github.com/onlook-dev/onlook/pull/2009\n \nreply",
      "Great feedback \u2013 we definitely should update our homepage content to have a more useful video that goes from 0 to 1 entirely.Thanks for mentioning it!\n \nreply",
      "Very impressed! In the past when I've asked chatGPT for styling / design stuff, it makes technically correct CSS, but with terrible design sense. This made a functional color palette, appropriate decorators, and cohesive style -- great!Few points:- At first it generated a bunch of code and got a build error. But the \"Fix error\" button did indeed fix it.- In Preview mode I can't scroll. Works fine in Design mode.- I can't seem to actually see any element's code; all I have is a basic layout.tsx file- Is there pricing information anywhere? I did not see any.\n \nreply",
      "> In Preview mode, I can't scroll. Works fine in Design mode.It's actually attempting to scroll the inner web page in Preview mode. Perhaps this is not a great/obvious form factor since we've had others be confused about this. I think showing a scroll bar in design mode or animate when overscrolled in Preview mode to show it's attempting to scroll could help.> Is there pricing information anywhere? I did not see any.There's no rate limit or pricing for the web beta at the moment but for the desktop app the pricing is shown in-app. We have a WIP pricing page that you can find in code but needs some work before we release it.> I can't seem to actually see any element's code; all I have is a basic layout.tsx fileThis seems wrong, I will take a look. The code should be highlighted in the editor  when you click on an element. It's possible that it put all the code in layout.tsx but there should be a page.tsx in there.\n \nreply"
    ],
    "link": "https://github.com/onlook-dev/onlook",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        The Cursor for Designers \u2022 An Open-Source Visual Vibecoding Editor \u2022 Visually build, style, and edit your React App with AI\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n    Cursor for Designers\n    \nExplore the docs \u00bb\n\n\nView Demo\n    \u00b7\n    Report Bug\n    \u00b7\n    Request Feature\n\n\nCraft websites, prototypes, and designs with AI in Next.js + TailwindCSS. Make\nedits directly in the browser DOM with a visual editor. Design in realtime with code. An open-source alternative to Bolt.new, Lovable, V0, Replit Agent, Figma Make, Webflow, etc.We're actively looking for contributors to help make Onlook for Web an incredible prompt-to-build experience. Check the open issues for a full list of proposed features (and known issues), and join our Discord to collaborate wit"
  },
  {
    "title": "Ask HN: How do I learn practical electronic repair?",
    "points": 15,
    "submitter": "juanse",
    "submit_time": "2025-05-31T06:14:47 1748672087",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=44142224",
    "comments": [
      "I've got a friend who has been at this since learning in TV repair shops in the 1950s. His emphasis is always on fast turn-around. He doesn't believe in slowly turning on things with old electrolytic capacitors, for example. I've learned quite a bit from him.I've learned not to fear B+, but to give very healthy respect to anything more than 500 volts. (Only use 1 hand, keep the other behind you, always have a safety partner, etc)I've learned to hate Silver Mica capacitors. I've learned how to track down the bad ones that cause the \"crashing\" sound in old radios.I've learned that in very old electronics, you can let smoke out, and things will still work. I've gotten good at seeing where the smoke comes from.You'll definitely need to learn to solder. I'd suggest starting with something like an Arduino starter kit to get a sense of how components actually interact.But remember, if something is dead, you can't really make it worse. (Just be careful not to make yourself worse along the way)\n \nreply",
      "There\u2019s a great (and very entertaining) YouTube channel that really shows what\u2019s possible with minimal knowledge and good troubleshooting skills.https://youtube.com/@stezstixfix\n \nreply",
      "1. Multimeter.2.Soldering iron, for starting out I suggest spending a little more and getting a Hakko 888 instead of something cheaper.3. Flux, Leaded solder, Braid.4. Broken things you want to repair (for me it has been electronic musical instruments).5. Practice, Patience, and hobby money.6. Pay for Youtube Premium.7. Ali Express Account.\n \nreply",
      "You can get quite far with a Pinecil + additional tips (chisel tip is nice).\n \nreply",
      "The Hakko 888 can take a big chunky tip that will usually put enough heat into a ground pin to desolder it when there is a healthy ground plane.It is hard to get a healthy amount of thermal mass with a small iron.Hot air and tweezers, cheap is fine.\n \nreply",
      "Get an isolation transformer and a cheap storage oscilloscope.\n \nreply",
      "A good oscilloscope is stupid expensive but is also amazing for this type of work. I count myself lucky I have a friend who's an electrical engineer and I can borrow his work one. It makes everything so much easier.I'm sure for someone experienced the benefit is marginal but having a bunch of probes and being able to see the waveform feels like cheating for an amateur like me.\n \nreply",
      "I would add3.5: scrap PCBs for soldering practice that you don't necessarily want to repair.\n \nreply",
      "Head to Craigslist to buy broken electronics on the cheap and practice repairing them.One upside to this approach is that as you improve it can pay for itself by reselling the fixed items.\n \nreply",
      "I was going to say the same thing. The way to learn practical repair is to get broken things and try to fix them ... chances are most of them will get more broken, but as long as you're not spending much to get your test subjects, no big deal.\n \nreply"
    ],
    "link": "item?id=44142224",
    "first_paragraph": ""
  },
  {
    "title": "CVE 2025 31200 (noahhw.dev)",
    "points": 88,
    "submitter": "todsacerdoti",
    "submit_time": "2025-06-02T18:58:47 1748890727",
    "num_comments": 23,
    "comments_url": "https://news.ycombinator.com/item?id=44161894",
    "comments": [
      "Is there a typo in the code block for the `Process` function near the end of the post? Lines 13-15 have the following loop:        while (remapVec[remapStartIndex] >= index) { // Follow the 'cycle'\n            index = remapVec[remapStartIndex];\n        }\n\nI'm not sure what that loop is supposed to be doing, but as its written it looks like it would either be skipped entirely or never terminate; after single iteration, the the two values would be equal and never change again.\n \nreply",
      "The authors probably intended to write:                index = remapVec[index];\n\nwhich would do a better job at following a cycle.\n \nreply",
      "> Essentially, if you have a vector, say [A,B,C] that you actually want to be [B,A,C], then you might do that with a \u2018permutation map\u2019: another vector that says where each element should go. In this case that would be [1,0,2], which means that the element at index 1 should go to index 0, and the element at index 0 should go to index 1 and the element at index 2 should stay where it is. The simplest working way to do this is to just allocate another vector, and essentially use the permutation map as a kind of dictionary (index\u2192element) for populating that third vector. However, if you would rather be clever and don\u2019t feel like allocating a whole other vector, then you can use the algorithm above.This isn't being clever, it's actually incorrect to allocate a whole other vector. Realtime code requires O(1) memory complexity for correctness. Although the smart thing would be to preallocate a buffer for the pointers, but in general that may not be possible (I'm not an expert in CoreAudio but if the channels are interleaved and the next chunk of code expects to process in place you really do have to it this way).It sounds like the CVE is super simple, reduced to:- CoreAudio determines the number of channels before playback to create a resource, standard practice in audio processing- It then trusts the number of channels of an incoming stream when using that resource- A maliciously crafted audio file can bypass checks for this and trigger a buffer overflowNever trust your inputs, folks.The reason this comes up with HOA to me is not surprising: almost no one uses HOA, and a variety of other optimizations like assuming the \"H\" in HOA only refers to up to 128 channels (since afaik, no one even tries past that point).> Imagine if the primitive is that you can write n 8 byte sequences out of bounds, but they must be valid 32 bit floats in the range x-yI imagine the only thing you need to guarantee is you don't use subnormals, since audio code usually enables FTZ mode on both ARM and x86.\n \nreply",
      "I\u2019d be really frustrated if my device was compromised by an esoteric audio format that I had no intention of ever listening to.If these parsers can\u2019t run inside an isolated process, perhaps they shouldn\u2019t be enabled at all?\n \nreply",
      "> I\u2019d be really frustrated if my device was compromised by an esoteric audio format that I had no intention of ever listening to.Users get even more frustrated when they want to play something and it does not work. Security is always a usability trade-off.There is also an argument to be made that it is better for Apple to introduce a few bugs adding support for viewing/playing/etc random things than end users googling \"how to play X\" and downloading whatever app appears first in the results.Remember the good 'ol days when everyone had Adobe Acrobat installed so they could open PDFs and it had a new 0day every month? Then one day Chrome added PDF.js and exploitation in the wild dropped off as people stopped downloading shitware to fill out rental applications.\n \nreply",
      "It's not really esoteric given it's part of Apple's push into Spatial Audio as early as 2020 (movies in 2020, Apple Music in 2021). Sure you might have no intention of listening to this, but it's wrong to say it's esoteric given the amount of marketing material Apple has put out.\n \nreply",
      "We know how to provably do Wrangling Untrusted File Formats Safely, that's what WUFFS is. So it's not about an \"isolated process\" it's about a choice to do shoddy engineering and a society which has decided that shoddy engineering is fine in this particular domain.\n \nreply",
      "This is totally on-brand for Apple.\"Apple is aware of a report that this issue may have been exploited in an extremely sophisticated attack against specific targeted individuals on iOS.\"That's an RCE, but nowhere near as bad as other recent exploits (CVE-2023-41064 and CVE-2023-41061) that include device and account takeover from an iMessage that you don't have to read. Also these typically don't rate highest severity (7.5/High) probably due to the limited scope of the targets.https://www.tenable.com/cve/CVE-2025-31200\n \nreply",
      "> attack against specific targeted individuals on iOSI'm sure Pegasus will come up with another exploit to replace this one.\n \nreply",
      "[flagged]"
    ],
    "link": "https://blog.noahhw.dev/posts/cve-2025-31200/",
    "first_paragraph": "\n\n    2025-05-31\n  \nOn April 16, 2025, Apple released a patch for a bug in CoreAudio which they said was \u201cActively exploited in the wild.\u201d This flew under the radar a bit. Epsilon\u2019s blog has a great writeup of the other bug that was presumably exploited in this chain: a bug in RPAC. The only thing out there that I am aware of about the CoreAudio side of the bug is a video by Billy Ellis (it\u2019s great. I\u2019m featured. You should watch\u2026you\u2019re probably here from that anyways). As he mentioned in the video, \u201cAnother security researcher by the name of \u2018Noah\u2019 was able to tweak the values such that when it was played on MacOS, it actually did lead to a crash.\u201d I think it\u2019s still worth it to write about that \u2018tweaking\u2019 process in more detail.I had just finished another project and ended up on a spreadsheet maintained by Project Zero which tracks zero days that have been actively exploited in the wild. It just so happened that that day there had been another addition: CVE-2025-31200. I couldn\u2019t fin"
  },
  {
    "title": "ThorVG: Super Lightweight Vector Graphics Engine (thorvg.org)",
    "points": 94,
    "submitter": "elcritch",
    "submit_time": "2025-06-02T10:31:57 1748860317",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=44157406",
    "comments": [
      "This is the second time I've seen Lottie mentioned this week, without hearing about it before.Maybe it's targeting a different use-case, but these things (at least on the Web) appear to be more-heavyweight and less-capable than the things people were doing 20 years ago with Macromedia/Adobe Flash, e.g. compare the animated-GIF-like examples linked from TFA ( https://thorvg-perf-test.vercel.app/ ) to the animations and games found on sites like Newgrounds. Last I checked, the latter make heavy use of emulators like Ruffle, or (based on loading screens) 3D game engines like Unity etc.As someone who's been out of that scene for a long time: what's the overall state of things, if I want to make long, complex, 2D vector animations? (i.e. not using a 3D engine; and not rendering to video). SVG seems pretty established; but for animation, how capable is Lottie? Does anyone still use SMIL (outside of DVD menus)? Am I better off \"rendering\" to a big pile of JS + CSS transitions?\n \nreply",
      "An alternative to Lottie that's seriously worth considering is Rive. This is personally what I'd choose for non-trivial use cases. https://rive.app\n \nreply",
      "Lottie is quickly becoming the de-facto standard for UI animations, but live, long running vector animations aren\u2019t really something I\u2019ve seen much of - at this point, video compresses well enough that people will simply use an mp4 or webp for that use case. I know that\u2019s not what you\u2019re looking for but since it isn\u2019t a common use case, I haven\u2019t seen much support for it. Lottie is perfectly capable for this use case, provided you don\u2019t want audio.\n \nreply",
      "Is this in the same space as Skia? I wonder what the differences in code size and performance are.\n \nreply",
      "As far as I see, Skia is the full-blown thing, whereas ThorVG goes the other route, being as small and simple as possible.\n \nreply",
      "Interested in this as well. I'm currenlty using Skia (through skia-safe) but I'd be quite open to try another renderer if there are performance improvments.\n \nreply",
      "The godot svg implementation runs on this. Ive been working on a little font editing tool for a week, but apparently the current build of Thor has a bug with rendering text\u2026\n \nreply",
      "Godot Engine maintainer here: What version and do you have a minimal recreation project for thorvg or godot engine? Hope we didn\u2019t cause you too much trouble. Post a github issue and we can look into it. Thanks for using Godot Engine / Thorvg.\n \nreply",
      "I discovered ThorVG recently and started experimenting with using it in Nim for a GUI backend: https://forum.nim-lang.org/t/13072\n \nreply",
      "Has anyone recently compared thorvg to blend2D? There's a project I want to use vector drawing for and at one point I was leaning more towards blend2d based on performance and multi threaded capabilities, but ThorVG has had a lot of active development since I last looked. Curious if they've made any significant improvements in the last couple years.\n \nreply"
    ],
    "link": "https://www.thorvg.org/about",
    "first_paragraph": "Basic StrategySupported PlatformsRender BackendsThreadingSVGLottieThorVG ViewerIn PracticesContributorsSponsorsThor Vector Graphics is an open-source graphics library designed for creating vector-based scenes and animations. It combines immense power with remarkable lightweight efficiency, as Thor embodies a dual meaning\u2014symbolizing both thunderous strength and lightning-fast agility. Embracing the philosophy of simpler is better, the ThorVG project provides intuitive, user-friendly interfaces while maintaining a compact footprint and minimal overhead.\u200bThe following list shows primitives that are supported by ThorVG:Lines & Shapes: rectangle, circles, and paths with coordinate controlFilling: solid colors, linear & radial gradients, and path clippingStroking: stroke width, join, cap, dash patterns, and trimmingScene Management: retainable scene graph & object transformationsComposition: various blending and maskingText:\u00a0unicode characters and horizontal text layout using the scalable f"
  },
  {
    "title": "Show HN: Penny-1.7B Irish Penny Journal style transfer (huggingface.co)",
    "points": 128,
    "submitter": "deepsquirrelnet",
    "submit_time": "2025-06-02T15:49:08 1748879348",
    "num_comments": 70,
    "comments_url": "https://news.ycombinator.com/item?id=44160073",
    "comments": [
      "Now I'm just imagining a video game with characters each having their own fine tune applied on top for their dialog. I'm guessing you could use some relatively small models. In each case you would be feeding all the context to the model (player name, current relevant quests, summary of previous interactions, etc). Though maybe fine tuning/training isn't even needed and a good enough prompt will work (Not sure what all they used for this [0]). I'm excited for the first AAA game that tries this. Anyone that has played a RPG-style game knows that after a few times going into a city (or a couple play-throughs) the dialog feels repetitive. I love the idea of Skyrim but with better dialog. You could either run the models on the user's computer or maybe just run it on the backend so you can block certain generations (wrong/misleading/\"unsafe\") and just ship updated dialog lists to the client occasionally.[0] https://www.youtube.com/watch?v=d6sVWEu9HWU\n \nreply",
      "Counterpoint: NPCs repeating their dialogue serves as an implicit indicator that you've exhausted their content and it's time to move on. If they gain the ability to make vapid smalltalk forever then you'll forever be second guessing whether you're wasting your time on them.(also spare a thought for the poor QA testers who would be given the Sisyphean task of making sure an LLM dialogue system always stays in character and doesn't hallucinate non-existent or outdated content/lore/mechanics)\n \nreply",
      "That is an issue for the mostly transactional NPCs that make up the majority of NPCs in RPGs. But consider the case of the companion NPC.If I travel with Batu the Hun and meet Zaya the Hun Slayer I want to be able to ask Batu if I should kill Zaya on the spot or should entertain his offer. That kind of stuff is extremely valuable both for the connection between player and companion and to provide an in-world perspective on the events you witness and the actions you take. But it's also extremely time-intensive to script. It's also very low stakes, it is essentially small-talk. And with some careful design you can limit it to short exchanges with AI-provided dialogue choices and have it distinguishable from scripted dialogue that advances the story\n \nreply",
      "I think there certainly are other, better, more natural ways this could be achieved.For example, if you're instructing an LLM to portray a character, instead of repeating dialogue like a broken record when they run out of relevant things to say... instruct them to act like their character would.They might wonder out loud if there's anything else you want to know, or literally let you know that you're acting weird and awkward, etc.Pair w/ a journaling system so that you can review their dialogue without talking to them and asking the same thing 50 times. Etc.    also spare a thought for the poor QA testers\n\nThis doesn't seem entirely unsolveable given strict enough system prompts.\n \nreply",
      "re: QA, besides a strict prompt, I'd imagine it would be hard for AI responses to go truly off the rails if the player's input is limited to \"press A to talk\" or pick one of 3 dialog options.\n \nreply",
      "At that point you're back to a pre-baked script.\n \nreply",
      "Great point, although fixed player input options might sort of defeat the benefit of using LLM to achieve a more organic dialogue flow?Maybe there could be a hybrid system - choose from suggested responses, or type your own.I also have vague thoughts of a dialogue system that rewards true role-playing, as in rewarding the saying things aligned with what your character might feasibly say.  (Like a more freeform version of the dialogue/RP/reward system in Disco Elysium)\n \nreply",
      "You'll also ask yourself whether any NPC tells you anything of relevance. If there is no intention behind the words why would it be interesting to talk to them in the first place.\n \nreply",
      "As I'm imagining it the NPC LLMs would be trained exclusively on the in-game lore as well as given system prompts to shape what they can and cannot say at any given moment.something like---\"You are Bob the Farmer. You grow rutabegas in the Kingdom of Foo. You are a cautious, fearful man. Several years ago your home was pillaged by King Foo and your family was taken. [blah blah blah several more paragraphs of biographical information]Your primary motivation is to get your family back and keep the farm going so that you don't starve.Last week you saw a mysterious group of figures in the woods who appeared to be headless. This is bothering you, along with the stress of your missing family. You wish a band of strong warriors could investigate, especially if they have a necromancer among them.You may discuss any of the general world knowledge in background_lore.txtYou know nothing about the following topics: [[insert list of plot points that haven't happened yet or are unknown to him]] and will become confused, fearful, and slightly belligerent when asked about them.\"---You could of course update the system prompts for each character as the events of the game progress.It would be a lot of work to keep these system prompts updated and relevant, for every character, as game events progress, but I think some of this could be handled by some kind of inheritance system.Suppose \"Bob\" lives in \"Town A\", which is in \"Kingdom B.\" You could probably define a lot of things at the Town/Kingdom level. Like suppose \"Kingdom B\" is plagued by orcs, but \"Town A\" is kind of a citadel that is safe against orcs. \"Bob\"'s system prompt could inherit a lot of concerns and knowledge from \"Town A\" and \"Kingdom B\"... the system would not have to be strictly hierarchical either.\n \nreply",
      "This is where emergent behaviors within a game's world building becomes very interesting. Perhaps asking the right questions leads to a quest line not previously discovered or triggers social actions in support of/against the player.Not every NPC would have something deeper to offer, much like not everyone in our world would have something that would pique my interest (in a general sense -- I'm sure I could learn something from anyone I spoke with), but it would also make me interested in conversations with NPCs at a deeper level than I currently engage with.\n \nreply"
    ],
    "link": "https://huggingface.co/dleemiller/Penny-1.7B",
    "first_paragraph": "This is a style transfer from the Irish Penny Journal (1840) to Smollm2 using GRPO. For example, this response to \"What is the capital of France\"Penny\u20111.7B is a 1.7\u202fbillion\u2011parameter causal language model fine\u2011tuned with Group\u202fRelative\u202fPolicy\u202fOptimization (GRPO) to emulate the 19\u1d57\u02b0\u2011century prose of the Irish\u202fPenny\u202fJournal (1840). The RL stage ran for 6,800 policy steps, using a reward model trained to classify sentences as original IPJ vs modern translation. Maximizing this score nudges generations toward authentic Victorian\u2011era diction while retaining the general reasoning ability of the base SmolLM2 model.CorporaReward = classifier outputNot recommended for: contemporary fact Q&A or contexts where archaic language could mislead readers.19\u1d57\u02b0\u2011century texts can contain outdated social views. Outputs may reflect such biases or archaic spelling. Always review generations before use.Apache\u00a02.0 (inherits from the base model).Chat templateFiles infoBase model"
  },
  {
    "title": "Show HN: A toy version of Wireshark (student project) (github.com/lixiasky)",
    "points": 189,
    "submitter": "lixiasky",
    "submit_time": "2025-06-02T15:20:13 1748877613",
    "num_comments": 58,
    "comments_url": "https://news.ycombinator.com/item?id=44159758",
    "comments": [
      "This reads a bit like Linus' first annoucement, see https://en.wikipedia.org/wiki/History_of_Linux#:~:text=Hello... - godspeed to you, and let's see when you will take over :)\n \nreply",
      "Thank you for this \u2014 I had read Linus' first post before and never imagined my tiny tool would be compared to something with that kind of legacy.I'm just an undergrad student in China (not even CS major, unfortunately), and this little project was my way of saying thanks \u2014 to the schools that stood up bravely.Really appreciate your kind words. Let\u2019s see what comes next. :)\n \nreply",
      "I did a s/Vanta/you/ on this comment as part of trying to reduce the offtopic noise about the name. (More at https://news.ycombinator.com/item?id=44161041 and https://news.ycombinator.com/item?id=44161144.)I hope that's ok with you! The alternative would be to move it under https://news.ycombinator.com/item?id=44161021, but it's a really nice comment so I don't want to do that.\n \nreply",
      "Much appreciated, thank you! I'll also print and frame my first dang email :)\nIt's a bit of a pity that the original description, which my comment refers to, is now gone.\n \nreply",
      "Not gone, just hidden under the rug :)\n \nreply",
      "Go is great for tools like this. I've built MITM protocol analyzers a few times. Being able to completely customize the handling, analysis, and break in in the debugger can make it more useful than a super-capable but general-purpose tool like Wireshark.\n \nreply",
      "Cool! I've sometimes gotten the impression that wireshark-lite is an unfulfilled niche so this is nice.\n \nreply",
      "Cool! Will definitely take a look.Curios what made you choose Go for this project? I am looking into building a toy version of Burp with either Rust/Go but still undecided.\n \nreply",
      "For me the main reasons to pick Go in those context are cross-compilation, static binaries and more subjectively better productivity. You can very quickly get an MVP running and distribute it knowing it will work everywhere.\n \nreply",
      "I appreciate the things you wrote at the end of the github page.I have no idea if you could make any use of such a thing, but, if you email info@rsync.net we would be happy to give a free-forever account to use in any way you see fit.\n \nreply"
    ],
    "link": "https://github.com/lixiasky/vanta",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A lightweight protocol-aware packet analyzer and behavioral exporter. Created as a personal response to global academic freedom challenges.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Vanta: Lightweight Behavioral Packet AnalyzerAuthor: lixiasky\nVersion: 1.0\nLicense: Apache 2.0Project OverviewVanta is a lightweight, fast, command-line-based network behavior analyzer. It reconstructs protocol-level flows and extracts structured activity from captured data.Unlike full-featured GUI tools like Wireshark, Vanta focuses on clarity, structure, and simplicity \u2014 ideal for custom scripting and minimal setups.FeaturesProtocol-Level ParsingSupports HTTP, DNS, TLS (with partial fingerprinting)Connection TrackingAutomatically reconstructs bidirectional flowsBehavior E"
  },
  {
    "title": "Arcol simplifies building design with browser-based modeling (arcol.io)",
    "points": 44,
    "submitter": "joeld42",
    "submit_time": "2025-06-02T16:16:11 1748880971",
    "num_comments": 23,
    "comments_url": "https://news.ycombinator.com/item?id=44160358",
    "comments": [
      "This looks amazing!I'm working on a construction project right now (not as an architect/engineer) and I can tell you right now that live collaboration is THE killer feature (your slick UI not withstanding).If this job is anything to go by, the current state-of-the-art appears to be a single Revit model file released once a month, 10,000 excel spreadsheets and 3,000 PDFs of various versions and quality spread between Sharepoint and a Document management server.I'm sure you've got an amazing roadmap, but it would be great to see you apply a modern take on:- how to handle version control in a multi-user environment (endless designing is fun, but at some point you need to draw a line in the sand so that people can start work, then changes need to be highlighted for the guy on the ground swinging a hammer)- collaboration with 3rd-parties that may have a subset of design responsibilities (e.g. HVAC, electrical - they can place things in a room, but can't adjust the dimensions of a room)- design reviews - current state-of-the-art seems to be marking up PDFs of DWGs with comments (which the supplier completely ignores on their next revision)I look forward to watching this product evolve!Small typo on your Love Letter to Designers post:\"A promise we will make at Arcol is tolisten first\"\n \nreply",
      "Exactly! It\u2019s great to see that this idea resonates!\n \nreply",
      "We're launching Arcol today! Check it out. Modern CAD tool, built for the browser with Rust+Typescript for high performance and an elegant UX.Check out the announce video that explains some of the ideas behind it:\nhttps://www.linkedin.com/posts/paul-o-carroll-38aaa1105_arco...Feel free to post any questions and I'll do my best to answer!\n \nreply",
      "Huge fan of anyone daring enough to take on Autodesk , also product is top notch design.\n \nreply",
      "Thanks! We love to hear it!\n \nreply",
      "Ive started work recently as a Revit MEP modeller.  Id recommend your team look into a way of supporting common services models like vav/fcu/flex ducts/rect ducts, pipes, cable trays, conduit and so on.Im not experienced enough to know if early stage mep designers will find this useful.\n \nreply",
      "As somebody outside of the industry, what's the final output of this product? I don't see doors, so I'm assuming this tool is intended to be used to rough out shapes and costs collaboratively? I totally see the utility in having a collaborative tool at those early stages. How far does Arcol go? Can it spit out blueprints?Also, being asked to login to view the demo vid is jarring. The play button signifies a video to me, if it's a demo I'd choose a different symbol (and put it somewhere other than the center of the video).\n \nreply",
      "Exactly, at this stage, the output is mainly for feasibility, presentations and communication. But we can also export models to Revit or 3D formats like GLTF to use in the next steps of the process, or for renders, etc. But we're planning to continue to add features to make it useful further down the AEC pipelines.Good point about the play button, I'll pass that feedback along. :)\n \nreply",
      "Neat, love it!\n \nreply",
      "How suitable might this also be for game level design, for more vertical arena-like maps?\n \nreply"
    ],
    "link": "https://www.arcol.io/",
    "first_paragraph": "\"What stood out most during onboarding wasn\u2019t just the ease of using Arcol \u2014 it was the way [Arcol] reshaped our rhythm... The tool was onboarding into how we already work: quickly, visually, collectively. And in doing so, it didn\u2019t just help us design faster \u2014 it helped us design better, together.\"\u201cWe believe real-time collaboration is the future of our industry. Meaningful and impactful projects happen when all stakeholders are working in sync early and often. Arcol's belief in re-thinking the AEC design stack with real-time collaboration and modern technology is something we're incredibly excited to continue to partner with them on.\u201d\"Arcol has become invaluable for conducting feasibility. Being able to better communicate design intent and manage complex data has allowed us to elevate the quality and efficiency of our projects.\"\"Arcol informs our decision-making process to quickly provide our clients with more and better options. The team is incredibly responsive and supportive, and "
  },
  {
    "title": "Ask HN: Who wants to be hired? (June 2025)",
    "points": 96,
    "submitter": "whoishiring",
    "submit_time": "2025-06-02T15:01:18 1748876478",
    "num_comments": 236,
    "comments_url": "https://news.ycombinator.com/item?id=44159525",
    "comments": [
      "SEEKING WORK | Remote | WORLDWIDEFreelance Web Developer. Full-stack. With a decade of experience as SDE.Location: Costa Rica (LATAM).Remote: Yes, any timezone (I reside in CT/UTC-6, EST/CST timezones).Languages: Spanish, English.Programming: TypeScript, Rust, Elixir, Clojure, NixOS, AWS, Docker, NodeJS, Deno, ReactJS.Portfolio: https://www.josecodea.comEmail: Refer to the bottom of my portfolio.Proof of work with Elixir:- My portfolio includes Open Source contributions.Proof of work with Rust, NixOS and Docker:- My portfolio includes two blog posts, each include a small Rust app that I made to turn on/off an EC2 server with a Discord bot.\n \nreply",
      "Location: Seattle, WA\n  Remote: Yes\n  Willing to relocate: Yes \u2014 open to SF, NYC for the right role\n  Technologies: Go, Kotlin, Python, TypeScript, PHP, Java, Cadence Workflows, Kubernetes, GCP, AWS, Postgres, Redis, Kafka, Docker\n  R\u00e9sum\u00e9/CV: https://www.linkedin.com/in/elninja/\n  Email: ibarra.josue91 at gmail\n\nI'm a backend/platform engineer and developer advocate with over 10 years of experience across startups and scale-ups, including Uber and DoorDash.At Uber, I\u2019m a Developer Advocate for Cadence, the open-source workflow orchestration engine powering over 12 billion workflows per month. I work across teams to support adoption, resolve production issues, and scale distributed systems. At DoorDash, I was part of the Drive Merchant Services team, where I contributed to the migration from Django to Kotlin microservices by rewriting key customer support endpoints. I also designed and implemented a modular refund rules engine for our largest Drive partners, supporting flexible refund policies and internal operations tooling.I'm looking for an engineering-focused role where I can return to hands-on systems work, ideally with a strong technical team and a path toward engineering leadership (EM or CTO). I'm particularly interested in infrastructure, developer platforms, and systems in healthcare, logistics, finance, or defense.Outside of work, I enjoy sailing my 36\u2019 boat around Puget Sound, riding my motorcycle, and diving deep into trivia across a range of interests. Let\u2019s build something meaningful.\n \nreply",
      "Location: New York City\n  Remote: Yes\n  Willing to relocate: Probably not\n  Technologies: JavaScript, TypeScript, C, Haskell, Solidity, C#, MUMPS\n  Resume: https://haltman.neocities.org/resume.pdf\n  Email: harry.j.altman@gmail.com\n\nHi, I'm Harry Altman! I was the maintainer of Truffle Debugger (https://github.com/trufflesuite/truffle/tree/develop/package...), a Solidity smart contract debugger, for 5 years. I eventually ended up writing my own decoding and encoding libraries to support it, as well as a bunch of other things.I'm good at this sort of nitpicky work, spotting and thinking about edge cases. I like getting things exactly right, even though that obviously isn't always possible due to various constraints. I've been kind of wondering if I should get into embedded development; I find it appealing when things are low-level or similarly constrained. I've beaten Microcorruption. :) (The original levels, I haven't played the new ones.)I'm also quite interested in unusual or obscure data formats, and working on Truffle Debugger and its associated libraries certainly involved a bunch of having to figure undocumented formats and interfaces. :) I put down above what languages I've worked substantially in but I'd say I'm a generalist and will figure out whatever you give me (I knew approximately no Javascript, Typescript, or Solidity when I started working at Consensys).I'm a mathematician by background and in my spare time, so after the Truffle Debugger project was shut down I took some time off to focus on my mathematical projects. But now I'm looking for work again! If you need someone like me, I'm available for hire!\n \nreply",
      "Location: Seattle, WA\n  Remote: Yes\n  Willing to relocate: No, but I can commute to Seattle based jobs.\n  Technologies: Golang, Typescript, Python, Linux, Docker, Mariadb, PostgreSQL, React.\n  R\u00e9sum\u00e9/CV: https://hi.tylery.com/resume-hn\n  Email: hello@tylery.com\n  Personal Site: tylery.com\n  GitHub: github.com/tyler71\n\nHi! My name is Tyler and I have 4 years of related Software Developer experience.I lean towards back-end, but I can put together a nice front-end when needed.Looking for:  \nFull-Time employment as a Software Developer. Reach out if your industry is healthcare based!As part of a career change, I have years of experience as a Physical Therapist Assistant and have treated thousands of patients.\n \nreply",
      "Location: Connecticut, USARemote: Yes (20 years experience, efficient, productive, and highly available)Willing to relocate: For the right position; remote with occasional travel much preferred---Seeking part-time or full-time work in development, source code audits, or reworking codebases left in poor shape. Specializes in Ruby, Rails, React Native, Node, React, and Javascript. Experienced in all phases of software development, including architecting solutions from the ground up, reworking/rebuilding/refactoring existing projects, and contributing to modern codebases. Focuses on React Native (core contributor), React, Ruby on Rails, and Javascript/Ruby.---Technologies: React Native (core contributor), React, Ruby, Ruby on Rails, JavaScript, Perl, Objective-C, Java, Swift, C, C#, Python, Node.js, Express, PHP, GraphQL (Apollo), Mobile Development (Native: iOS/Xcode, Android/Android Studio, Hybrid: Cordova/Ionic, HTML5/Canvas, CreateJS/ImpactJS/Phaser, Flux (Redux, Alt.js, Mobx)), MySQL, PostgreSQL, MongoDB, Firebase, RSpec, Cucumber, Selenium, Mocha, Jasmine, Sphinx, Solr, Lucene, Elastic Search, AWS (S3, EC2, Lambda, Amplify, RDS, etc), Linux, Apache, Git/GitHub workflow, DevOps, Heroku, JIRA, Confluence, BitBucket, MongoDB, Web3, Crypto, NestJS, TypeScriptResume: https://docs.google.com/document/d/1kQ6wp-hvewB-fGRNEVnywVpL...Email: adamjroth@gmail.com\n \nreply",
      "Location: Wisconsin, USRemote: YesWilling to relocate: NoTechnologies: TypeScript, Node.js, React, Express, ESLint, PostgreSQL, AI Prompting / Agents, Solidity, HTML, CSS (Sass, Panda), etc.Resume: https://drive.google.com/file/d/1AMqjgI_QkUnq8hbydyUC87D2-Du...Email: trevinhofmann@gmail.comI'm a full-stack software engineer with ~10 years of experience and a B.S. in Software Engineering, who has primarily worked in fintech (PayPal, American Express, BGC Partners, Stripe). I'm closing a 2-year stint of solo freelancing for a wide variety of clients, along with launching my own AI software-development SaaS (https://mysticode.ai).My focus has been full-stack web development for complex apps, but I love learning and would be open to considering other Engineering areas for the right company.Best,\nTrevin Hofmann\n \nreply",
      "Location: Montr\u00e9al, Canada / Sweden (Require work permit sponsorship)\n  Remote: Preferred\n  Willing to relocate: Yes\n  Technologies: C, Go, Linux, Python, REST APIs, Selenium, SQL\n  R\u00e9sum\u00e9/CV: https://drive.google.com/file/d/1GGHFAlfiS-v7yt1IskiqWNwxG864v9ZU/view?usp=sharing\n  Email: See R\u00e9sum\u00e9/CV\n \nreply",
      "Location: New Zealand, Manawatu\n    Remote: Yes\n    Willing to relocate: No\n    Technologies: Go, Java, Git, Erlang, Postgres, Linux\n    Resume: https://www.linkedin.com/in/francis-stephens/\n    Email: francisstephens@gmail.com\n\nI work primarily on backend systems, with a strong focus on performance and system stability/resilience. I worked as a performance engineer at the mobile add-attribution company Adjust.Some interesting open-source projects includehttps://github.com/fmstephe/memorymanager\nAn exploratory manual memory allocator for building large in-memory data structures with near zero GC cost.https://github.com/fmstephe/matching_engine\nA financial trading matching engine with a somewhat novel red+black tree implementation.https://github.com/fmstephe/flib\nA set of packages primarily in support of a lock-free single-producer single-consumer queue.My ideal position would be working on backend systems primarily in Go.\n \nreply",
      "Location: Seattle, WARemote: YesWilling to relocate: NoTechnologies: Typescript/Javascript, Node, React, Python, Rust, Elixir, PostgreSQL, AWS, CircleCI, HTML, CSS, K8sR\u00e9sum\u00e9/CV: https://camreon.github.io/docs/resume.pdfEmail: camerongu3@gmail.com---Full stack web dev here with a bias towards the backend. On my own time I prefer to use python for web work and GDScript/Godot for game dev, but I'm a big proponent of using the right tools for the job. I'm good at turning domain knowledge into software and quickly getting up to speed on preexisting code bases. Ideally looking for a role doing something socially conscious.At my last job I led a team and helped build a Windows desktop app that pulled data from native node modules and added overlays to games. I used Electron, Node, Typescript, React, and Redux to build it, AWS for CI/deployments, and finally TrackJS and Sentry for logging/monitoring. I also started learning Rust from working with other engineers on the native node modules.\n \nreply",
      "Location: NYC, Philly, Chicago, Boston, Preferred. Open to othersRemote: No, Hybrid/full time onsite preferredWilling to relocate: YesTechnologies: Java, Spring Boot, Bit of Angular and Go, ModSecurity WAF, F5 App Protect, Veracode, BurpSuite, Wireshark, Artifactory, K8s, Docker, Splunk, AWS Services, Terraform, Helm Charts, Git, and more.R\u00e9sum\u00e9/CV: Available Upon RequestEmail: <HN Username> @ proton.meLooking for security engineer roles. For the past 5 years I have been building security tooling that internal teams can make use of. I work closely with other teams to help improve the security posture of their apps. I help write documentation and host department wide presentations to educate others about web app security and steps they can take to make apps more secure. I took on the responsibility of managing our H1 Bug Bounty Program which previously was failing SLA targets by 10+ months and managed to bring it down to days. I have helped mentor interns and junior developer and also been active in conducting pair programming interviews for future candidates. What you get from me is a go-getter, self-motivated individual. I am always looking to improve not only myself but also my work.\n \nreply"
    ],
    "link": "item?id=44159525",
    "first_paragraph": ""
  },
  {
    "title": "Can I stop drone delivery companies flying over my property? (rte.ie)",
    "points": 75,
    "submitter": "austinallegro",
    "submit_time": "2025-06-02T19:15:43 1748891743",
    "num_comments": 156,
    "comments_url": "https://news.ycombinator.com/item?id=44162042",
    "comments": [
      "Aside:It's going to be a great time when the crows, raccoons, and other semi-intelligent wildlife discover that these drones have food in them at seemingly random reward schedules.Sure, you can give the drones little tasers to keep the animals away, depending on your locality. But knowing what I know about bears and crows, almost nothing is going to stop them. Especially when some influencer jerk tries tempting a bunch of them with a box just oozing honey or some other high value food.\n \nreply",
      "A friend of mine suggested that being able to stop eagles attacking his drones used for land surveying would be worth a lot of money, they often come back with scratches and damage. I'm not sure if he's lost any drones (yet).\n \nreply",
      "Crows are smart, and seem to for relationship with \"friendly\" humans, and are \"trainable\".I wonder how long it'd take to befriend a few crows, and teach them there's valuable stuff in delivery drones?\n \nreply",
      "Unfortunately it runs afoul of the same laws against training apes to steal[1] or pickpocket[2].1. Dunston Checks In (1996)2. Monkey Trouble (1994)\n \nreply",
      "I somehow doubt the crows will cough up the perps name when interrogated....\n \nreply",
      "I can definitely see a future time when small autonomous air vehicles start to have problems with the local wildlife, either from the thick flocks of grackles in winter or from the more mischievous neighborhood corvids.\n \nreply",
      "They'll have protecto-drones and decoy drones following them until it's so expensive we go back to good ol' launching packages by trebuchet\n \nreply",
      "Friend of mine recorded this video 10 years ago:https://www.youtube.com/watch?v=AhDG_WBIQgc\n \nreply",
      "\"The legal landscape surrounding the use of drones is currently far from clear...\"It is quite clear.  The FAA considers drones aircraft.  There are exceptions for how drones and RC aircraft operate regarding the restrictions that other aircraft operate.  The Federal government is quite within its legal rights to fully prosecute anyone damaging an airborne drone for any reason other than a valid emergency.  If the drone operator acts in an illegal or unsafe manner, and you sitting in your backyard bitching about them is not within that criteria, and you interfere with it, expect federal law to be used against you.\n \nreply",
      "That would be very relevant, were the article not about Ireland.\n \nreply"
    ],
    "link": "https://www.rte.ie/brainstorm/2025/0602/1481005-drone-delivery-companies-property-legal-rights-airspace/",
    "first_paragraph": ""
  },
  {
    "title": "Ask HN: How do I learn robotics in 2025?",
    "points": 274,
    "submitter": "srijansriv",
    "submit_time": "2025-06-02T12:58:10 1748869090",
    "num_comments": 77,
    "comments_url": "https://news.ycombinator.com/item?id=44158353",
    "comments": [
      "Robotics is a large multidisciplinary area, comprising of parts of ME, EE, and CS fields. Before you go down a particular path, it may be good to step back, and note down things which you actually enjoy doing, and how they might relate to one or more of these fields. After all the drama wears off and you are up late working on something .. it's important to enjoy what you are doing. Not just trying to catch some hype about the next big thing or the tech giants or AI or whatever (or something your friends or parents told you).The top comment refers to a course around a small mobile robot. Maybe you could go through this, and try to build a bicycle which would balance itself and drive a 100 yards in an empty, safe parking lot. That will certainly involve ME, EE, and CS! Who knows where that might lead?\n \nreply",
      "Do this course https://github.com/henki-robotics/robotics_essentials_ros2Totally free, don't need to buy anything just a computer.I've been designing electrical hardware for robots for the last 4 years for a big corporation and I can tell you, the fun and money is in the software but having another skill is awesome. Robotics is a place where multiple fields converge and if you find a good team they will help you to grow.Embedded is the adjacent field after you complete the course. Maybe something like zephyr project.If you want to get you feet wet with mechanical. Buy a A1 mini and play with onshape (www.onshape.com) to design your first pieces, supports for the motors or the board, try create you own gripper.As for the electrical engineering, is the one with most pitfalls and the most expensive. A wrong voltage will release the magical smoke and is another 30$ for a board. Tread carefully. Start with the RP2040 or the RP2350, they are cheap and well documented. This skill will evolve hand by hand with the embedded coding. Start small. Learn about H-bridge and brushed motors before doing the jump to the bigboys and FOC control with brushless. Get a cheap soldering iron. If you can, a clone of the JBC C245 tips. Is the most versatile and you can find stuff in alie xpress for 45 or 50$ and would be similar to the tools you will find in the field without breaking the bank.Search for ROS meetups. I could point you to some depending where in the world you are.And above all, it will be a long journey. Don't dispear, do at your own time but don't forget the objective.\n \nreply",
      "I'm in the field and I disagree with the initial direction of this post. You aren't going to 'learn robotics' in a meaningful manner by checking the boxes in a online ROS2 course.Robotics is a compound discipline which pairs mechanical and electrical engineering knowledge with mathematics and software development. In order to get meaningful practice in all of these areas, I would recommend re-implementing a robot vacuum from 'scratch'.The actual vacuum part is non-essential, as you're really trying to implement the famous 'turtle' robot and experience all the design steps/compromises/challenges first hand. As a goal, aim for autonomous navigation around your home that works equivalently to a cheap 'throwaway' robo-vac.Keep in mind you are surrounded by robotics. Most passenger vehicles, consumer drones, micro-mobility devices and modern construction equipment are 'robots in varying degrees of disguise'. Practical knowledge regarding any of these systems transfers well if you know where to apply it.\n \nreply",
      "This feels like the \"How to Draw an Owl\" meme all over again.  Just create a self navigating robot from scratch...\n \nreply",
      "It's similar, but the advice should be good for a software professional. It's an actionable, well-documented goal which takes you through the basics you're likely to care about. If any step needs some extra explanations, the choice of project guarantees you can find hundreds of good resources for that step in particular. With that basic background, next steps will be easier to find and understand.\n \nreply",
      "Where would you recommend someone to start from a more data-sciencey background, algorithms like VSLAM look interesting to mess around with but building a whole robot just to do so seems daunting.\n \nreply",
      "> As for the electrical engineering, is the one with most pitfalls and the most expensive. A wrong voltage will release the magical smoke and is another 30$ for a board. Tread carefully.I enjoyed reading \"Exploring Beaglebone\" by Derek Molloy a few years ago, because the book has sections \"how to destroy your beaglebone\" and \"how to interface with electronics\". The website seems broken. The book's ISBN is 978-1-118-93512-5. Some of the recommendations there (voltage clamping circuit on the 1.8 V analog inputs) can save your board.\n \nreply",
      "> And above all, it will be a long journey. Don't dispear, do at your own time but don't forget the objective.My biggest issue with robotics is that I don't see the point in any objective.Building a cool robot feels like it's just a toy to me, and I don't know how to get around that feeling. I studied mechatronics at uni and spent a long time learning on my own in addition.Robotics for business is almost a cliff, very hard to get into and make something that works reliably at a reasonable cost, from a solo developer point of view\n \nreply",
      ">very hard to get into and make something that works reliably at a reasonable cost, from a solo developer point of viewI mean yes, otherwise they'd be even more robotic stuff wandering aboutIn products  they have the trade off triangle where you can pick things like fast-cheap-good, pick any two.In robots it's cheap-reliable-featureful pick any one.The problem with the term 'cool' is it sets no boundaries. Those constraints limit your costs and scope. That's the hard part for most people when they think about cool.And reliable is more of a time factor (+effort). QA on products takes a massive amount of time and effort to figure out what is not reliable.\n \nreply",
      "Interesting one thing that is more satisfying with robotics is that because you can see your creations in real world\n \nreply"
    ],
    "link": "item?id=44158353",
    "first_paragraph": ""
  }
]