[
  {
    "title": "Shift-to-Middle Array: A Faster Alternative to Std:Deque? (github.com/attilatorda)",
    "points": 46,
    "submitter": "AttilaT",
    "submit_time": "2025-03-23T23:20:27 1742772027",
    "num_comments": 30,
    "comments_url": "https://news.ycombinator.com/item?id=43456669",
    "comments": [
      "A couple notes looking at the c++ implementation- this is going to have problems with non-trivial types.  (Think about destructors or move constructors like std::unique_ptr).  If you don't want to deal with them, at least add a static_assert(std::is_trivially_copyable<T>::value == true);- front() doesn't return a reference and it doesn't even return the front- adding iterators (begin()/end()) will let it play nice with for( : ) loops and <algorithms>, etc.\n \nreply",
      "Interesting alternative idea I thought of just now: a data structure that works like VecDeque (a circular buffer) but uses mmap to map two views onto the same pages right after one another. That would ensure that the entire array can be accessed in a consecutive fashion, no matter where it gets split, without any copying. The downside is that reallocation would be really slow, involving multiple syscalls, and the minimum size of the array would be 4kB or more, depending on the page size.\n \nreply",
      "I've seen this trick used around, where it really shines is when you want to prepare/commit a range of the ring buffer when interfacing with something that wants a contiguous chunk as an arg, using the mmap hack lets you pass any pointer into the ring buffer without needing to split it to handle the wraparound case.There are a few blog posts out there about it, eg https://lo.calho.st/posts/black-magic-buffer/. One data structure that works around the limitations is the bip buffer: https://www.codeproject.com/Articles/3479/The-Bip-Buffer-The.... In that article the author talks about the mmap trick.\n \nreply",
      "I recently developed a new data structure called the Shift-To-Middle Array, designed as an alternative to std::deque, std::vector, and linked lists. My goal was to optimize insertion and deletion at both ends, while also improving cache locality and performance compared to traditional implementations.What is the Shift-To-Middle Array?\nUnlike std::deque, which uses a fragmented block-based structure, the Shift-To-Middle Array maintains a contiguous memory layout. Instead of shifting elements inefficiently (like std::vector), it dynamically redistributes free space toward the middle, reducing unnecessary data movement.Key Features:\n Fast insertions & deletions at both ends (amortized O(1))\n Efficient cache utilization (better than linked lists)\n Supports fast random access (O(1))\n No pointer chasing (unlike linked lists)\n Parallelization & SIMD optimizations possiblePerformance Benchmarks\nI benchmarked Shift-To-Middle Array vs. std::deque vs. ExpandingRingBuffer vs. std::queue across different workloads. Some highlights:Push-heavy workload \u2192 Shift-To-Middle Array showed improved insertion performance over std::deque.Pop-heavy workload \u2192 Showed improvements in memory access and removal operations.Random insert/remove workloads \u2192 Demonstrated better cache efficiency compared to linked lists.(Full benchmarks and source code available below.)When Should You Use It?\nHigh-performance queue-like structuresGame engines (handling real-time events efficiently)Networking applications (handling packet buffers)Dynamic sequences (e.g., computational geometry, physics sims)Would love to hear thoughts and feedback from the community! Have you encountered similar performance bottlenecks with std::deque or other dynamic structures?\n \nreply",
      ">  Unlike std::deque, which uses a fragmented block-based structureI always assumed deque implementations were ring buffers that double in size once full so that prepend/append operations are amortized O(1).\n \nreply",
      "No, that's what Rust's VecDeque is, the C++ std::deque is something which you wouldn't invent today, but alas C++ is wedded to how things were done in the 1990s sometimes before.std::deque does have practical uses, but they're rare and many implementations aren't well suited even to those uses. Unlike VecDeque most people should just ignore it.\n \nreply",
      "std::deque typically uses chunked arrays. It is more complex but tends to be faster than a ring buffer based implementation.\n \nreply",
      "deque does not move elements once added, so it can\u2019t be implemented like that.\n \nreply",
      "Is that an actual guarantee or just the current implementation? I'd expected that at the very least some functions that can operate on std::deque must require moves. erase_if immediately comes to mind.\n \nreply",
      "Sounds very cool! How do you implement efficient random deletes?\n \nreply"
    ],
    "link": "https://github.com/attilatorda/Shift-To-Middle_Array",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        An innovative data struicture for implementing lists and deques\n      The Shift-To-Middle Array is a dynamic array designed to optimize insertions and deletions at both ends, offering a high-performance alternative to std::deque, std::vector, and linked lists. It achieves this while maintaining contiguous memory storage, improving cache locality and enabling efficient parallel processing.\u2705 Amortized O(1) insertions & deletions at both ends\n\u2705 Fast random access (O(1))\n\u2705 Better cache locality than linked lists\n\u2705 Supports SIMD & parallel optimizations\n\u2705 Efficient memory usage compared to std::dequeUnlike std::deque, which uses a fragmented block structure, the Shift-To-Middle Array dynamically redistributes space to avoid costly shifts. When resizing, elements are moved toward the middle, ensuring efficient insertions at both ends with"
  },
  {
    "title": "RDNA 4's \u201cOut-of-Order\u201d Memory Accesses (chipsandcheese.com)",
    "points": 58,
    "submitter": "ingve",
    "submit_time": "2025-03-23T22:18:29 1742768309",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=43456341",
    "comments": [
      "At first glance at the title, I thought it was going to be about some twist on DNA 3' and DNA 5' reading frames.https://en.wikipedia.org/wiki/Reading_frame\n \nreply",
      "Does AMD have its own flavor of GPU assembly and how is it called?\n \nreply",
      "Yes and it's slightly different per architecture. Mostly new instructions (like the discussed one in this article).Just RDNA4 ISA and you'll find it:https://www.amd.com/content/dam/amd/en/documents/radeon-tech...Terrascale from 2008 was very different. Ignore it.GCN is mostly the same as RDNA and GCN is practically identical to CDNA. So you can go back to older guides as far back as GCN1 (like early 2010s era). The only fundamental difference is RDNA is SIMD32 while GCN/CDNA is SIMD64--------NVidia has an intermediate assembly language called PTX. NVidias true assembly language is undocumented (but not secret, not just intended for general purpose coding). Search on NVidias PTX manual and you'll see\n...\n \nreply",
      "Slightly tangent, but AMD is also working on amdgcnspirv (i.e. AMD-flavored SPIR-V) that'll hopefully result in a similar user experience like PTX [1].[1]: https://github.com/ROCm/ROCm/issues/3985#issuecomment-254616...\n \nreply",
      "Mesa uses NIR as intermediate representation for its drivers. Is that comparable?\n \nreply",
      "Interesting, thanks!Looking forward to aco compiler using new features of RDNA4 to improve ray tracing performance with radv.\n \nreply"
    ],
    "link": "https://chipsandcheese.com/p/rdna-4s-out-of-order-memory-accesses",
    "first_paragraph": ""
  },
  {
    "title": "English Scientists Develop Fast, High-Quality AI Weather Model for Desktops (turing.ac.uk)",
    "points": 37,
    "submitter": "bentobean",
    "submit_time": "2025-03-23T23:33:39 1742772819",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=43456723",
    "comments": [
      "How robust will ML models be in the world of rapid climate change, where the past no longer predicts the future?\n \nreply",
      "AI is not just pattern matching. Assuming they have some idea of initial and boundary conditions, they should be fine.\n \nreply",
      "\"Tomorrow will be partly cloudy, with a chance of hurricane.\"\n \nreply",
      "Climate is not weather.Weather predictions are for specific events and areas, made on the order of days- typically no more than 2-3 weeks into the future.Climate models predict future averages over large regions on the order of decades.\"rapid climate change\" is on the order of \"within this century\". Whether the climate changes or not doesn't really impact the weather models at all, because the climate's not changing on the same time scale.\n \nreply",
      "While I really want to agree with your sound argument, I have this suspicion that climate change significantly affected forecast skill on Hurricane Otis.\n \nreply",
      "Paper available here: https://www.nature.com/articles/s41586-025-08897-0\n \nreply",
      "Arxiv version here https://arxiv.org/pdf/2404.00411\n \nreply",
      "Although based on their bios and UK population statistics, it seems likely they're both English, the article omits this information. They do work at a British institution, located in England..\n \nreply"
    ],
    "link": "https://www.turing.ac.uk/blog/project-aardvark-reimagining-ai-weather-prediction",
    "first_paragraph": ""
  },
  {
    "title": "A USB Interface to the \"Mother of All Demos\" Keyset (righto.com)",
    "points": 207,
    "submitter": "zdw",
    "submit_time": "2025-03-23T15:31:26 1742743886",
    "num_comments": 49,
    "comments_url": "https://news.ycombinator.com/item?id=43453582",
    "comments": [
      "I urge you to consider using an RC network with a hex inverter to debounce your switch input without resorting to a 100ms delay. I've wasted enough hours to know that the best kind of software debounce is a few resistors and capacitors.https://mayaposch.wordpress.com/wp-content/uploads/2018/06/d...\n \nreply",
      "Fascinating read as always Ken. \nIt seems that the concept of a \u201cChorded Keyboard\u201d from Douglas then spawned several relatively successful successors later on:https://en.wikipedia.org/wiki/Chorded_keyboardGrowing up in the Netherlands in the 80s it was hard to not be aware of the \u201cVelotype\u201d: it had more keys and supposedly made it easier to learn the \u201cchords\u201d.Your reference to the book Nerds 2.0.1 is great, the book is a companion to the excelent PBS 3-part series from 1998https://archive.org/details/movies?tab=collection&query=Nerd...\n \nreply",
      "In the 1990s chorded keyboards were \"popular\" in regard to wearable computing. People like Steve Mann would give talks where he demonstrated how he could use his wearable computer (basically a laptop he strapped to himself with a clunky goggle-mounted display) that he controlled with a small chorded keyboard he operated with one hand. Obviously, a decade later with smartphones this looked pretty silly (if it didn't already in the 1990s) but some people really did think this was the future at the time.https://en.wikipedia.org/wiki/Steve_Mann_(inventor)\n \nreply",
      "The killer feature of a chorded mechanical (not on-screen) keyboard for me is that one can use it without having to look at it. To literally touch-type (not necessarily text).This is why such keyboards are used where this advantage is material, e.g. in jet fighters.\n \nreply",
      "There's a 1990s Alan Alda video interviewing Thad Starner with these elements: https://youtu.be/X7DM1mT8r7c\n \nreply",
      "Back in the mid '80s our school was given a small number of Microwriter chorded keyboards (https://en.wikipedia.org/wiki/Microwriter) for our BBC Micro lab.  Even as 12 year olds we were already crazy good touch-typists, so the Microwriter felt very clunky and unintuitive to us.  I don't know what the lesson is from that.  Just because it seems a good idea doesn't mean that it is.  Or typewriter-style keyboards have survived over a century and a half for a reason.\n \nreply",
      "I'm not convinced either of those are the lessons. I think the reason for the keyboard's success is that it has a smooth learning curve. A neophyte can hunt-and-peck with a keyboard. Not so with a chorded keyboard.\n \nreply",
      "but then it kinda stops, couldn\u2019t we layer on chords as well, you can peck \u201ct h e\u201d or just mash \u201ceth\u201d and both would result in \u201cthe\u201d, or maybe some sort of english pinyin where only the first few chars are needed?\n \nreply",
      "Predictive text?  But it's also an example of an incremental improvement that someone could experiment with to see if it works.  Much easier than having to prototype entirely new hardware (especially in the 80s, in an era before cheap additive prototyping).\n \nreply",
      "Yes, that's a really good point.\n \nreply"
    ],
    "link": "https://www.righto.com/2025/03/mother-of-all-demos-usb-keyset-interface.html",
    "first_paragraph": ""
  },
  {
    "title": "Supply Chain Attacks on Linux Distributions \u2013 Fedora Pagure (fenrisk.com)",
    "points": 88,
    "submitter": "akyuu",
    "submit_time": "2025-03-19T19:58:37 1742414317",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=43416605",
    "comments": [
      "Because bash for some goddamn reason loads the bashrc for interactive shells AND when started by sshd, regardless of whether the shell is interactive or an tty is present. Bash (and only bash) literally has a special case for sshd to enable this kind of exploit.As a result of this, git and rsync wont work at all if the bashrc on the remote machine writes any data to stdout. Like setting a window title.To work around that, every bashrc on this earth needs a case switch to return early to avoid this specific bug.\n \nreply",
      "> We can\u2019t change git\u2019s shell to /sbin/nologin or /bin/false, or users wouldn\u2019t be able to connect over SSH.Git actually has a solution for this! I don\u2019t know if it would work with the custom python stuff going on, but you can set the login shell to `git-shell`\n \nreply",
      "Yeah, I tried that, but it doesn't work well with git-lfs (large file storage). At least, it didn't last time I tried.\n \nreply",
      "Or just use git over https. And heck, if that's such a big problem, switch to a vcs that you can properly manage\n \nreply",
      "You shouldn't use Git over HTTPS.  With SSH, you can use a hardware authenticator that requires both proof of ownership (i.e., the unlock PIN) and proof of possession (i.e., physical touch) out of the box.  That's technically possible over HTTPS, of course, but I have yet to see a Git server that works that way.\n \nreply",
      "Why not? Your password manager or passkeys do the same thing.Heck, just true the public key as the authentication header.Or use authentication certificates.If ssh is such a big problem, use something else\n \nreply",
      "is anything you described actually possible with git tooling as it exists today, or are you just spewing random loosely related words?how does the git client use a passkey for https?\n \nreply",
      "credential helpers:like the github cli: https://cli.github.com/manual/gh_auth_setup-gitor git-credential-manager: https://github.com/git-ecosystem/git-credential-manager\n \nreply",
      "The key difference is https certificates often require signing authority integrity, and leak-free SSL libraries.Traditionally both facets of the 3rd party trust model have had CVE over the years.  SSL protocol misconfiguration is also very common, and connections can be downgraded by adversaries into a vulnerable version of the protocol.It could be argued ssh is a weaker Trust on first use model, but in most cases the keys will rarely change for the short service life of the server instance... and the server may be setup from a local physical terminal, and keys communicated out-of-band to remote users.At some point one has to admit if someone really wants in they will physically pull the drive in the data center. However, people using web vulnerability scanners on your systems are less of a nuisance.Best regards =3\n \nreply",
      "> If ssh is such a big problem, use something elseIt's not a problem. You can use SSH today (and since years already now) with Yubikey and the likes. I'm using Git over SSH with Yubikeys and it works.Use Git over SSH, use a Yubikey (or whatever suits you), set the login shell to git-shell.\n \nreply"
    ],
    "link": "https://fenrisk.com/pagure",
    "first_paragraph": "As discussed in the meta-article, we picked Pagure from the Fedora Apps Directory and already had a technical approach in mind. A software forge is likely to be a good target for an argument injection: we can expect the backend to shell out even when libgit2 bindings are used.In addition, this is a self-service application, in the sense that anyone can create a Fedora contributor account and gain authenticated access to various services. For instance, this allows users to report packaging issues and contribute back directly on Pagure.Fedora packages are made of several text files, for instance in the case of OpenSSH:\n\nA spec file, describing upstream sources, dependencies, build steps, patches to apply, e.g. openssh.spec.\nSources files to declare the expected checksums and GPG signatures of the source archives, e.g. sources.\nPatch files, e.g. cherry-picked security fixes.\nSystemd unit files, e.g. sshd.service.\nWhile the sources file allows validating the integrity of upstream code, att"
  },
  {
    "title": "Show HN: My iOS app to practice sight reading (10 years in the App Store) (apps.apple.com)",
    "points": 126,
    "submitter": "rooster117",
    "submit_time": "2025-03-23T21:25:08 1742765108",
    "num_comments": 50,
    "comments_url": "https://news.ycombinator.com/item?id=43456030",
    "comments": [
      "This is incredible because it exactly matches my needs. I started learning the piano 3 years ago as an adult, I love it, but my biggest difficulty is reading scores. I do want to practice but also I'm very lazy, I tried to find a tool to help but never found yours before.Tiny question before I purchase to unlock the microphone feature (which is really what makes sense for me): does the app understands do r\u00e9 mi via microphone?Thanks for your work.\n \nreply",
      "The mic works on the standard 440 tuning and converts the input to its midi representation. Trying to understand your question but the mic doesn't really care about the do, re, me but rather that it's the right frequency for the displayed note on the staff. The mic feature is something I'm actively working on improving as it's decent now but not perfect. If you have an instrument with a way to connect to the phone through midi it's the best experience but if you have acoustic then the mic or just the on screen keyboard is the good.\n \nreply",
      "Sight reading practice for voice is super useful, but not many of us have perfect pitch to pull a starting note out of the air! An option to get a starting note audible cue for vocal sight reading would be a great add-on (and hopefully not too difficult!)\n \nreply",
      "Ha, I thought I could \"sing\" the notes, like reading them out loud (which is what my mentor suggests me to work on)\n \nreply",
      "Joining a good choir can do a lot to really build your ear in this respect. Generating a note from within your body does so much more to build your ear than generating a note by hitting a key or plucking a string (wind instruments are kind of a middle ground in this respect).\n \nreply",
      "You may be able to sing to it but since it's assuming the instrument to be in tune (piano) it may be slightly off and still register since it's estimating which note is most correct.\n \nreply",
      "Do you mind if I ask what library or algorithm you\u2019re using for pitch estimation?\n \nreply",
      "currently it's yin\n \nreply",
      "Ah thank you I was not aware of that one.\n \nreply",
      "My app appears at the top of a search if you specify sight reading but if you are searching for \"learn piano\" or similar keywords it will be no where near the top\n \nreply"
    ],
    "link": "https://apps.apple.com/us/app/notes-sight-reading-trainer/id874386416",
    "first_paragraph": "Introducing Notes - Sight Reading Trainer, the ultimate iOS app for mastering sight reading in music! Whether you're a beginner or an experienced musician, Notes is your is your tool to become the musician you were meant to be. When you are ready to learn your instrument and music rather than just learning a song this app is for you. Key Features:Engaging Exercises: Explore a variety of interactive exercises designed to strengthen your sight reading abilities with a piano interface.Ways to use the app: Connect with Midi, use the on screen keyboard or your devices microphone for input.Customizable Difficulty: Tailor the difficulty level to match your proficiency, allowing you to progress at your own pace and challenge yourself when ready.Comprehensive Music Notation: Learn to read sheet music, decipher key signatures, note durations and augmentations (sharp/flat) with ease.Progress Tracking: Keep track of your improvements over time with detailed performance analytics and history.Practi"
  },
  {
    "title": "First Known Photographs of Living Specimens (inaturalist.org)",
    "points": 55,
    "submitter": "Morizero",
    "submit_time": "2025-03-20T20:19:45 1742501985",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=43428409",
    "comments": [
      "This seems like such a cool idea for a website, but then it's let down by the fact that it's actually First Known Photographs of Living Specimens Posted To INaturalist.com. I thought it'd be a bunch of photos from the 1800s but it's a bunch of photos from the 2020s.For example here is the actual first known photo of a domestic cat: https://i.imgur.com/OKtFMos.jpeg\n \nreply",
      "From the About Section of the page:This project is designed to showcase the first known photographs of living specimens of any species. Note that by 'first known' I'm referring to the first known photographs of a species anywhere, not just the first photographs to be submitted to iNaturalist.Two types of observation will be included:\n1) First photographic records of undescribed species\ne.g. this Gasteracantha sp.\n2) First photographic records of already described (but obviously relatively uncommon or cryptic) species\ne.g. this wasp fly.If the male and female of a species are sexually dimorphic, then both are valid to be added to the project. So too if a species has distinct life stages (eg caterpillar/chrysalis/butterfly), they are all valid to be separately added to the project (assuming the other rules apply).Please only add observations depicting live organisms; this therefore excludes specimens such as pinned insects.If you see an observation currently in the project that you know is not the first photograph of that species, and you can show the earlier photograph, please do not hesitate to message me and I'll remove it.\n \nreply",
      "No, its pretty clear that only first known photographs can be added. If a picture of the species exists in a book somewhere, its not eligible for the project.\n \nreply",
      "The quality of that photo is so bad that it arguably hardly counts as anything, I cannot even understand it's head position. I bet most people wouldn't recognize it as a cat unless you tell them first that its supposed to be one.\n \nreply"
    ],
    "link": "https://www.inaturalist.org/projects/first-known-photographs-of-living-specimens",
    "first_paragraph": "To my great surprise, I just realised it's been more than two and a half years since I last wrote a journal post for this project! Very lax of me, and apologies to all for the lack of more regular updates. The project has been surging along, and we now have more than 7,000 observations, which is fantastic to see. We also recently surpassed 2,000 project members, thanks in part to some regular mentions of the project in recent iNat blog posts (eg observation of the week).So for all the newer members, I'll run through the project rules again:1 . Any observations you add must be the first photograph(s) of that species anywhere. If an observation is the first one for that species to be uploaded to iNat, but other photos of that species from an earlier point in time already exist anywhere elsewhere online/in print, then that observation should not be added to the project. This is the biggest source of observations that I have to remove from the project. So your ...more \u2193To my great surprise"
  },
  {
    "title": "The SeL4 Microkernel: An Introduction [pdf] (sel4.systems)",
    "points": 184,
    "submitter": "snvzz",
    "submit_time": "2025-03-23T11:09:28 1742728168",
    "num_comments": 99,
    "comments_url": "https://news.ycombinator.com/item?id=43452185",
    "comments": [
      "SeL4 is old news - not a criticism, but has anyone added another formally proven layer or component? (Edit: I mean new components beyond the microkernel, not improvements to the microkernel.)Also, I suspect some people - maybe some on HN :) - get emotional overload when they see the word 'proof' and their intellectual functions stop. It's not a panacea for the infinite problem of secure IT; it isn't a way to create or discover a perfect and flawless diamond of software. IIUC it means it's proven to meet specific requirements in specific conditions, and those requirements and conditions can be quite narrow; and it says nothing about other functions and conditions that are out of spec. Is that roughly correct?What does it mean in practical terms? What does a security professional see when they see 'formally proven software'?What are the specs that SeL4 meet (no, I haven't looked at the OP in a long time)? Isn't that the essential information here?\n \nreply",
      "Being \"formally proven\" to be free of various flaws did not make seL4 immune to memory corruption flaws. Despite the formal proof, a memory corruption flaw was found a few years ago. The PRs for the commits fixing it and amending seL4's proof are public:https://github.com/seL4/seL4/pull/243https://github.com/seL4/l4v/pull/453You will find a number of other memory related bugs in its issue tracker:https://github.com/seL4/seL4/issues?q=is%3Aissue%20label%3Ab...Interestingly, the PR fixing \"register clobbering\" in memory was not labelled bug, so it is not listed when you filter by \"bug\".I used to think seL4 was immune to these issues given its proof allegedly saying it is, but upon seeing this, I have come to think that the proof is not as comprehensive as the wider community has been lead to believe. That said, seL4 is still a very impressive piece of software.Finally, to answer your question. The specification that seL4 meets is published on github:https://github.com/seL4/l4v\n \nreply",
      "I do not see how that is a kernel memory corruption. I do not understand the code in context, but it appears to just be a case where the kernel incorrectly clobbered a userspace register which could result in incorrect userspace code execution. A error in that class would not inherently violate the system safety properties of the kernel itself.If so, that would only fall under a functional specification problem in the userspace API making it hard to use the userspace API in the intended/desired way. That would make it hard to use the kernel and verify your system using the kernel, but it would not constitute a kernel memory corruption which is what safety specifications and proofs of the kernel itself would be concerned with.\n \nreply",
      "I believe only certain versions and on certain architectures is seL4 verified for. There are no bugs found at the C source code level for these builds of seL4.\n \nreply",
      "This issue appears to have affected all architectures. This issue was present in the specification against which seL4 was verified. You can say that there are no bugs by virtue of it following the specification, but if the specification was wrong and in this case it was, then were there really no bugs?\n \nreply",
      "There is always a specification, the question is \"was this issue found against a version of seL4 that had been fully specified or not?\".I worked at the lab, I wasn't aware of any bug/issue on the fully specified kernel, that is why I am unsure if this counts or not.I would need to have a look at the source code and proofs to confirm.\n \nreply",
      "Even if it's not exactly seL4, there's good value in taking inspiration for design elements. It would still be a lot more robust than commodity operating systems.\n \nreply",
      "The PRs make it clear that this was a bug in the spec, and the implementation behaved according to spec.\n \nreply",
      "That resulted in a memory corruption flaw in the C code. If you build a bridge to a specification and the bridge collapses, does saying that the specification was wrong in any way lessen the reality that the bridge failed?\n \nreply",
      "Many bridges had to collapse until we learned how to build them.As for seL4, the proofs (which are actually the state of the art in that field, yet definitely can be further perfected) are just one of the pillars supporting it e.g. the size of the TCB is another.We do not give up on the goal because there was a mistake once. Nor is the goal not worthy; this is the absolute best the world has atm.\n \nreply"
    ],
    "link": "https://sel4.systems/About/seL4-whitepaper.pdf",
    "first_paragraph": ""
  },
  {
    "title": "Play the Virtual Organ from Arp Schnitger (orgelstadt-hamburg.de)",
    "points": 75,
    "submitter": "ohjeez",
    "submit_time": "2025-03-23T18:31:46 1742754706",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43454785",
    "comments": [
      "Oh something in my niche ! I produce French pipe organ sample sets for a living : https://www.jeuxdorgues.comIt's an extroardinary journey to record an organ, process the thousands of WAV files and design a virtual organ model.\n \nreply",
      "Very cool! I'd be curious what you think of Modartt's recent attempts at physical models of organs and how they compare to more traditional sampler approaches.https://www.modartt.com/organteq_physical_modeling\n \nreply",
      "What! For a living? Say more!\n \nreply",
      "What?? That\u2019s such a specific thing to do!\n \nreply",
      "You can play it with your ASCII keyboard as well, as if it were a piano keyboard. It shows the German layout, but my Intl English keyboard works just as well.Should you be so inclined: (short) k u (long) k (short) u y g f (long) d f.\n \nreply",
      "very clever, thank you\n \nreply",
      "That's such a great project! But I'd love to see a proper VST with it, that allows voice mixing. The power of organs lays in the analog voice mixing (not simple on off, and not one voice exclusively)\n \nreply",
      "https://www.hauptwerk.com/ is paid software but has a few Schnitger organs, although not the one shown off here.\n \nreply",
      "There's also Sweelinq (https://sweelinq.com; subscription model), and Grand Orgue (free, but cumbersome; only a few worthwhile sample-sets), and there are some instruments for Kontakt.\n \nreply",
      "Sounds great, even from so limited a platform. One octave is enough to have some fun with, if you're creative. Would have been nice to be able to combine the stops, but the plenum at least gives you a solid sound. You can really hear the character of the organ.\n \nreply"
    ],
    "link": "https://www.orgelstadt-hamburg.de/play-arp/",
    "first_paragraph": "Hier haben Sie die weltweit einmalige Gelegenheit, eine der  international\n            wertvollsten und klangsch\u00f6nsten Barockorgeln selbst zum Klingen zu bringen.\n            Viele Orgelfans und Experten pilgern nach Hamburg, um die ber\u00fchmte Arp-Schnitger\n            Orgel in der Hauptkirche St. Jacobi zu erleben. Wir bringen eine besondere\n            Auswahl klanglicher Perlen dieses Instrumentes exklusiv zu Ihnen. Spielen\n            Sie selbst!(F\u00fcr das klanglich beste Erlebnis empfehlen wir einen guten Kopfh\u00f6rer zu nutzen)\n\nDie Octava 8\u2018 steht im Hauptwerk. Sie ist ein Prinzipal, also ein\n          Hauptregister der Orgel. Prinzipale bilden das klangliche Grundger\u00fcst.\n          Es sind zylindrische, offene Labialpfeifen von mittlerer Mensur.\n          Als Prinzipal bezeichnet wird aber nur das tiefste Register eines Werks.\n          Alle h\u00f6heren Lagen nennt man Oktave.Erbauer:Anonym um 1500, Familie Scherer (1546-1592) und Arp\n          Schnitger (1693).Gedecktregister von enger Me"
  },
  {
    "title": "Andromeda XXXV: The Faintest Dwarf Satellite of the Andromeda Galaxy (iop.org)",
    "points": 23,
    "submitter": "PaulHoule",
    "submit_time": "2025-03-20T05:46:44 1742449604",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=43420167",
    "comments": [
      "This could have been an interesting article, but I couldn't get past the ridiculous captcha\n \nreply",
      "Here's an ArXiv version: https://arxiv.org/abs/2502.19516\n \nreply",
      "https://iopscience.iop.org/article/10.3847/2041-8213/adb433/...\n \nreply",
      "Took 3 clicks.  bot.\n \nreply",
      "I sometimes get what seem to be impossible captchas.Why don't they just show the website without the check? What's the point of a check like this where they just \"show you the web page\" if you pass. No log in, no subscribe bs blah blah, just show you the webpage.The other day I got one of those \"click on the bicycles\". It has the usual bikes, but there was also some impossible to understand partial dot plot outlines of something that might have been a bike, or might have been a bus or a street light. I gave up after 30 seconds and one try and just archive.is to see the site.\n \nreply",
      "I've yet to have those things be a problem for a real webcrawling project but I guess there's a first time for everything.  Sometimes I wonder if they are at least partially performative.I was having terrible problems with CAPTCHAs on a 2019 Samsung Tablet which left me wondering if they're the new green bubble.  [1][1] https://www.reddit.com/r/ios/comments/182je9m/trying_to_unde...\n \nreply"
    ],
    "link": "https://iopscience.iop.org/article/10.3847/2041-8213/adb433",
    "first_paragraph": "To ensure we keep this website safe, please can you confirm you are a human by ticking the box below. If you are unable to complete the above request please contact us using the below link, providing a screenshot of your experience.\nhttps://ioppublishing.org/contacts/\n"
  },
  {
    "title": "Show HN: I built website for sharing Drum Patterns (onether.com)",
    "points": 222,
    "submitter": "wesz",
    "submit_time": "2025-03-23T13:05:21 1742735121",
    "num_comments": 79,
    "comments_url": "https://news.ycombinator.com/item?id=43452629",
    "comments": [
      "This kinda reminds me of Funklet[0] that Jack Stratton (Vulfpeck) + Rob Stenson made a long time ago... A true gem if you're into funk + like midi drums.[0] - https://goodhertz.com/funklet/\n \nreply",
      "Woah, thank you for this! It's pure gold:)\n \nreply",
      "thats all right\nmessing with the back beat, and drum sounds, and whatever the reverse signal thing is\nvera extra funky\n \nreply",
      "I've tried unsuccessfully to get Rebirth running (on either Windows or Wine). Any modern re-implementations?\n \nreply",
      "https://drumpatterns.onether.com/doofusbeatz666s-yowzah-2/Ohhh yeah baby, this hits!\n \nreply",
      "That's dope!\n \nreply",
      "I would be happy to port some patterns to Glicol (https://glicol.org/)only suggestion: support https...\n \nreply",
      "Woah, nice work dude.I had to regenerate ssl certificate, ovh says it's done but it will probably take some time to take effect.\n \nreply",
      "Honest question. What is the current obsession with https for things that don't need to be secure like looking at drum patterns?\n \nreply",
      "Chrome labelled sites as Not Secure if they didn't user https since 2018. Most people didn't like that label showing on their website address, so it was a clever way to shift everyone.Years before that the free certificate authority Let's Encrypt was established (there are now several more), so for most people using https with your website is just configuration, not an extra cost. On top of that some http protocol versions are now https only.\n \nreply"
    ],
    "link": "http://drumpatterns.onether.com",
    "first_paragraph": "Breakbeat\u00a0\u00a0Electro\u00a0\u00a0Electro Funk\u00a0\u00a0Electro Pop\u00a0\u00a0Hip Hop\u00a0\u00a0House\u00a0\u00a0Miami Bass\u00a0\u00a0Pop\u00a0\u00a0R&B\u00a0\u00a0Reggae\u00a0\u00a0Rock\u00a0\u00a0Techno\u00a0\u00a0Uncategorized\u00a0\u00a0"
  },
  {
    "title": "LangManus: An Open-Source Manus Agent with LangChain + LangGraph (github.com/langmanus)",
    "points": 23,
    "submitter": "gfortaine",
    "submit_time": "2025-03-21T11:01:00 1742554860",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=43434171",
    "comments": [
      "You should probably change the name, I thought it was associated with Manus usually projects like this will specifically have in the tag line \u201cAn Open Source alternative to X.\u201dOther than that looks very cool, reading through the code now. A lot of these projects very heavily lean on Browser Use.\n \nreply",
      "Hey Hacker News,\nI\u2019m excited to share LangManus, an open-source project that\u2019s all about community-driven AI automation. Built on the shoulders of amazing open-source work, LangManus combines language models with specialized tools to tackle tasks like web search, crawling, and Python code execution\u2014while giving back to the community that inspires it.\nAt its core, LangManus uses a hierarchical multi-agent system, where a supervisor coordinates a team of specialized agents to handle complex workflows. It integrates with LLMs like Qwen and powers up with tools like Tavily for search and Jina for crawling. Plus, it comes with Docker support and a web UI to make interaction a breeze.\nWant to see it in action? Check out the demo video: https://youtu.be/sZCHqrQBUGk. In it, LangManus calculates the influence index of DeepSeek R1 on HuggingFace using a fully automated plan\u2014think web searches, data retrieval, and Python code crunching, all seamlessly tied together.\nHere\u2019s what makes LangManus stand out:\nMulti-Agent Magic: A supervisor delegates tasks to agents like Researcher, Coder, and Browser for efficient execution.Tool Integration: Web search with Tavily, neural search with Jina, and Python REPL for coding on the fly.Ease of Use: Docker-ready and a web UI for quick setup and control.If you\u2019re into AI automation, multi-agent systems, or just love contributing to open-source projects, swing by the GitHub repo: https://github.com/langmanus/langmanus. Dive into the code, play with the demo, or drop some feedback\u2014we\u2019d love to hear from you.\nJoin the community and let\u2019s build something awesome together!\n \nreply",
      "Super cool. Congrats on the launch!Let me know if we can help with something at Hyperbrowser.\n \nreply",
      "Would be great if you put together a start-to-finish tutorial showing the step-by-step process from initial Git clone to completed successful run.\n \nreply",
      "cool\n \nreply"
    ],
    "link": "https://github.com/langmanus/langmanus",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A community-driven AI automation framework that builds upon the incredible work of the open source community. Our goal is to combine language models with specialized tools for tasks like web search, crawling, and Python code execution, while giving back to the community that made this possible.\n      \n\n\nEnglish | \u7b80\u4f53\u4e2d\u6587 | \u65e5\u672c\u8a9eCome From Open Source, Back to Open SourceLangManus is a community-driven AI automation framework that builds upon the incredible work of the open source community. Our goal is to combine language models with specialized tools for tasks like web search, crawling, and Python code execution, while giving back to the community that made this possible.Task: Calculate the influence index of DeepSeek R1 on HuggingFace. This index can be designed using a weighted sum of factors such as followers, downloads, and likes.Lan"
  },
  {
    "title": "Improving recommendation systems and search in the age of LLMs (eugeneyan.com)",
    "points": 331,
    "submitter": "7d7n",
    "submit_time": "2025-03-23T03:40:05 1742701205",
    "num_comments": 80,
    "comments_url": "https://news.ycombinator.com/item?id=43450732",
    "comments": [
      "> Spotify saw a 9% increase in exploratory intent queries, a 30% rise in maximum query length per user, and a 10% increase in average query length\u2014this suggests the query recommendation updates helped users express more complex intentsTo me it's not clear that it should be interpreted as an improvement: what I read in this summary is that users had to search more and to enter longer queries to get to what they needed.\n \nreply",
      "We would need to normalise query length by the success rate to draw any informative conclusions here. The rate of immediate follow-up queries could be a decent proxy for this.\n \nreply",
      "> a 9% increase in exploratory intent queriesUsers struggle to find the right stuff or stuff that\u2018s so good they don\u2018t need do do more queries.> a 30% rise in maximum query length per user, and a 10% increase in average query lengthUsers need to execute more complex queries to find what they are looking for.\n \nreply",
      "Yeah, this should be evaluated in a multivariate/bivariate model. Of the successful queries, how the length changed before and after interventions.\n \nreply",
      "I can understand tracking metrics for performance (as in speed, server load) or revenue. But I don't see how anyone could make such conclusions as they did with a straight face, apart from achieving some OKR for promotion reasons. There's no substitute for user research, focused mindset and good taste.I can imagine that's why today's apps suck so much as most of the pain points won't be easily caught by user behavior metrics.One thing Alex from Organic Maps taught me is how important it is to just listen to your users. Many of the UX improvements were driven by addressing complaints from e-mail feedback.\n \nreply",
      "No you don't understand, more queries = more engagement!\n \nreply",
      "It's relatively easy to construct a scenario where more search is in fact indicative of better search. To stick with Spotify: let's imagine they have an amazing search tool that consistently finds new, interesting music that the user genuinely likes. I can imagine that in that situation, users are going to search more, because doing so consistently gets them new, enjoyable music.But the opposite is equally possible: a terrible search tool could regularly fail to find what the user is looking for or produce music that they enjoy. In this situation, I can also imagine users searching more, because it takes more search effort to find something they like.They key is why are users searching. In Spotify's case I imagine that you could try and connect number of searches per listen, or how often a search results in a listen and how often those listens result in a positive rating. There are probably more options, but there needs to be some way of connecting the amount of search with how the user feels about those search results.And yeah, using nothing other than search volume is probably a bad way to go about it\n \nreply",
      "I feel like understanding this difference is what a good product manager should be responsible for. Not just optimizing any metric that is available but understanding the meaning behind them and choosing the push them the right direction.\n \nreply",
      "Or more saves and thumbs up on signs resulting from a search is because users are desperate to save a song they like because they have no faith that they'll be able to find it again with search.The only way is to use the product yourself and honestly engage with it. Stats can't answer this question.\n \nreply",
      "But isn't that actually the point? That measuring query volume tells you nothing?\n \nreply"
    ],
    "link": "https://eugeneyan.com/writing/recsys-llm/",
    "first_paragraph": ""
  },
  {
    "title": "argp: GNU-style command line argument parser for Go (github.com/tdewolff)",
    "points": 142,
    "submitter": "networked",
    "submit_time": "2025-03-23T12:45:21 1742733921",
    "num_comments": 62,
    "comments_url": "https://news.ycombinator.com/item?id=43452525",
    "comments": [
      "In general, command-line argument parsers should just follow the GNU style. No more, no less. Deviations confuse users as it is not immediately obvious to them what rules a parser is imposing.> options can have multiple values: -a 1 2 3 means that a is an array/slice/struct of three numbers of value [1,2,3]Allowing multiple values is inconsistent because you can't tell in \"./cmd -a 1 2 3\" whether 2 and 3 are positional arguments or arguments for -a. This is not a GNU style. The GNU way is \"./cmd -a 1 -a 2 -a 3\" (or \"./cmd -a 1,2,3\"). This package supports that, which is good.> option values can be separated by a space, equal sign, or nothing: -a1 -a=1 -a 1 are all equal\"--a=1\" is a GNU style but \"-a=1\" is not. This is a minor issue, though.Also, does this package support \"--\"? Everything following \"--\" should be treated as positional arguments.\n \nreply",
      "I disagree with it being a minor issue. If I write a shell script around a program that accepts GNU-style arguments, I expect the following to be correct:    ./cmd -a\"$USER_CONTROLLED_DATA\"\n\nA program using this package would break that assumption, introducing a bug where this user-controlled data cannot start with an '='.\n \nreply",
      "I researched this for my own argument parser (https://github.com/blyxxyz/lexopt/issues/13) and concluded that it's a minor issue.This syntax is supported by argparse and clap, the most popular argument parsers for Python and Rust respectively, and it seems to have caused almost no problems for them. It's a problem for the uutils implementation of cut, since `cut -d=` is common, but that's the only instance I could find after a long time scouring search engines and bug trackers and asking for examples.If anyone does know of other examples or other places this has been discussed I'd love to hear it though, maybe I just haven't found them.(Also, the more reliable way to write this in general is `-a \"$USER_CONTROLLED_DATA\"`, since that'll behave correctly if $USER_CONTROLLED_DATA is empty. As will `-a=\"$USER_CONTROLLED_DATA\"` if you know the command supports it.)\n \nreply",
      "I think short options taking a value in the same argv (i.e. `-o=1` stuff) isn't a GNUism mostly because it's backwards-incompatible with POSIX. `=` is a valid getopt option character, `chmod` uses it.That said, I think? 'nloomans means for USER_CONTROLLED_DATA to be a set of short flags, not flag values, as in:    root@08e9950d5bfd:/# export USER_CONTROLLED_DATA=lh \n    root@08e9950d5bfd:/# ls -a\"$USER_CONTROLLED_DATA\"\n    total 56K\n    drwxr-xr-x   1 root root 4.0K Mar 23 16:51 .\n    drwxr-xr-x   1 root root 4.0K Mar 23 16:51 ..\n    [...]\n\nNot that I've seen this in the wild before. But everyone's use of bash is a unique personal hell anyway.\n \nreply",
      "Ha!  I just said that.  :-)Anyway, one other alternative for the `cut` situation is to allow either ':' or '=' to optionally separate the key and the value.  Then you can say `cut -d:=` or `cut -d=:` if you wanted to use either one.  This is what https://github.com/c-blake/cligen does (for Nim, not Go).\n \nreply",
      "The problem is existing shell scripts and muscle memory and command histories. `cut -d=` has always worked and works on all the other implementations so it should keep working if you switch to uutils.\n \nreply",
      "Literally any short option key that takes a string or a char that could legitimately start with '=' has the problem, though, not just `cut`.  The '=' will be \"eaten\" by one tool and left in another.  But you know that.  You write a bit as if we disagree, but I don't see any real point of contention. :-)  Also, uutils has a very strict \"drop-in\" agenda.  So, as another e.g., if you want `cp -t=foo` or `cp -S=foo` to work the same, you're going to have trouble if that '=' is eaten.So, in this case that would seem to imply a problem for any utilities with options taking strings-or-chars, not merely `cut -d`.  If uutils really wants to be strictly drop-in compatible, they may well need to roll their own option parser or twist the arm of whoever's they use to provide a mode for them.In the more general case, \"cross compatibility\" may just always be limited by the reality that people just disagree on this stuff \"more than they seem to think they do\" (at least in my experience) and definitely more than they wish they did.  I surveyed my /usr/bin once and like half of thousands of commands did not work with --help (yes, running that took some confidence in backups!  but anyone could replicate on a throwaway VM or something).  Consistency is nice, but consistency with what?  -l=foo is consistent with --long=foo, but not (some, but not other) historical things.I'm not sure there will ever will be a world in which you don't need to know which PLang/CL toolkit was used to make a CLI utility if you really want to know its syntax.  The article's lib is going its own way from the Go stdlib.  POSIX is pretty darn calcified.  A 15 year old Python stdlib thing is unlikely to ever change in this regard.  Python also allows \"--beg\" for \"--beginning-long-option\" if nothing else starts with \"--beg\" even back in its optparse days and that also tends to be controversial.  cligen tools actually provide a --help-syntax.  Maybe something like that could take off?\n \nreply",
      "I can think of a lot of cases where it theoretically could be a problem, but `cut -d=` is the only one I've found so far where an end user ran into trouble because of this ambiguity, and I think it's the only one for which uutils bothers implementing a workaround. That's why I give it special attention.> You write a bit as if we disagree, but I don't see any real point of contention. :-)The `cut -d:=` spelling solves a different problem than the one I meant (and the one you're now talking about). But we're mostly on the same page!\n \nreply",
      "In the Gentoo world, sometimes you need to give an exact package name which looks like `=net-misc/foo-0.1.2-r1`. The exact match has to start with the '='.\n \nreply",
      "It is safer to just put in the space (much like you put in the quotes to be safe).  Python's argparse will also accept but not require an `=` separator (maybe optparse, too - I haven't checked that one).\n \nreply"
    ],
    "link": "https://github.com/tdewolff/argp",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        GNU command line argument parser\n      Command line argument parser following the GNU standard.with the following features:GNU command line argument rules:See also github.com/tdewolff/prompt for a command line prompter.Make sure you have Git and Go (1.22 or higher) installed, runThen add the following importA regular command with short and long options.\nSee cmd/test/main.go.with help outputExample with sub commands using a main command for when no sub command is used, and a sub command named \"cmd\". For the main command we can also use New and AddOpt instead and process the command after argp.Parse().Basic typesComposite typesCount the number of time a flag has been passed.Append each flag to a list.Load all arguments from a configuration file. Currently only TOML is supported.Use a list source specified as type:list. Default support"
  },
  {
    "title": "Technicalities of Homeworld 2 Backgrounds (simonschreibt.de)",
    "points": 138,
    "submitter": "todsacerdoti",
    "submit_time": "2025-03-23T13:14:15 1742735655",
    "num_comments": 37,
    "comments_url": "https://news.ycombinator.com/item?id=43452688",
    "comments": [
      "Fun fact, when I was like... 12, I made a presentation to my parents based off the Demo of this game as to why they should buy it. I sold them on it when one slide was just a photo of a single perfectly rendered missile being fired, traveling across space.\n \nreply",
      "Okay, I actually found the presentation, if you want a laugh (/ be impressed at game that's >20 years old), here you go https://docs.google.com/presentation/d/e/2PACX-1vR18QhznFBRK....\n \nreply",
      "Don\u2019t tell my kids (hi kids, if you\u2019re reading this!) but the first thing they ask for with a freaking presentation they\u2019re probably getting.\n \nreply",
      "This is so great!You even had call to action links on your \u201cwhere to buy?\u201d slide.I enjoyed the \u201cSpecial thanks to dad for paying the electricity bill and Internet bill for this project\u201d XD\n \nreply",
      "As someone who love the homeworld games as a kid, I can totally understand the type of kid who likes those games is absolutely the type that would make a presentation like this. The conclusion is fantastic, 12yo you had a great sense of humor!\n \nreply",
      "2 weeks later, a presentation why you need a new hardware to run your Homeworld 2 smoothly on.\n \nreply",
      "This is absolutely adorable.  Thank you for sharing!\n \nreply",
      "Hahaha amazing! This is better than the some of the presentations our junior hires do at work.\n \nreply",
      "Thanks for sharing this amazing bit. I love the \"our team has found out...\" At the end.Like....who is the 12 year olds team?\n \nreply",
      "Tom, Tom, Tom and Tom. It's right there in the credits!\n \nreply"
    ],
    "link": "https://simonschreibt.de/gat/homeworld-2-backgrounds/",
    "first_paragraph": "What you see here\nis the stunning background art\nof one of the most beautiful sci-fi games.\n H o m e w o r l d 2Thanks for reading.Just kidding. Of course i have something to say about this. In the company we look at the art of Homeworld from time to time and bow to the creators of this masterpiece. Once we talked about how great the background look and how interesting this sketched style is. There is something\u2026some details seem\u2026special to us.I mentioned, that this looks a bit like\u2026 a vertex color gradient. But they wouldn\u2019t paint the background on geometry, right? I mean\u2026that would has to be a highly tessellated sphere.The discussion was over but I wasn\u2019t satisfied and wanted at least see the textures. So i used some mod tools to extract the Homeworld 2 Demo data but there were no textures. Only some .HOD files. I used Google and found a thread how to generate these .HOD files from a .TGA. It was said:\u201c\u2026scans every pixel of the image then based on contrast\nit decides whether or not to"
  },
  {
    "title": "A Brief History of the Miracle Bacterium (asimov.press)",
    "points": 49,
    "submitter": "mailyk",
    "submit_time": "2025-03-23T15:59:12 1742745552",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=43453769",
    "comments": [
      "https://nyaspubs.onlinelibrary.wiley.com/doi/10.1111/j.2164-...Here\u2019s a fascinating 1969 article about the same bacterium called \u201cFrom Superstition to Science.\u201d \u2014 The whole thing is worth a read, but I especially loved how it traces the blood effect back to Pythagoreanism. Pythagoras the Biologist!It quotes a 170 AD satire by Lucian, \u201cthe sale of creeds\u201d about the god Hermes auctioning off different philosophies.\u201cPythagoreanism:\nOf living animals I eat none. All else I can eat, except beans.First Buyer:\nAnd why no beans? Do you dislike them?Pythagoreanism:\nNo. But they are sacred things. Their nature is a mystery. Consider them first in their generative aspect; take a green one and peel it, and you will see what I mean. Again boil one and expose it to moonlight for a proper number of nights, and you have\u2014blood. What is more, the Athenians use beans to vote with.\u201d\n \nreply",
      "This is such a traditional British way to go about scientific inquiry. Unlikely such experiments would be allowed today. Seems we've lost something.\n \nreply",
      "There were also that impressive demo of Turbinia. The achievement was celebrated instead of being charged with resisting arrest, disturbing order, etc.   On the other side - there was strong opposition among scientists to the limitations on vivisection. Definitely was a different world, more rough and cruel.\n \nreply",
      "This is crazy fun :)\nI'll try to find more information of this clade.\n \nreply"
    ],
    "link": "https://www.asimov.press/p/miracle-bacterium",
    "first_paragraph": ""
  },
  {
    "title": "Total lunar eclipse over Teide crater, Tenerife \u2013 a project with many obstacles (lrtimelapse.com)",
    "points": 27,
    "submitter": "elijahparker",
    "submit_time": "2025-03-21T15:04:16 1742569456",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://lrtimelapse.com/news/total-lunar-eclipse-over-teide-crater-tenerife/",
    "first_paragraph": "Rarely have I thought so often about abandoning a photography project as during this lunar eclipse on Tenerife. Somehow, everything seemed to conspire against us this time. This is the story of an elaborately planned photo project where almost everything went wrong, but perseverance ultimately paid off. But let\u2019s start from the beginning\u2026Germans: Hier gibt es eine Deutsche Version.We, that is Uli and I, have made it almost a tradition to meet on Tenerife (Canary Islands, Spain) once a year. This time, Uli said, hey, on March 14th there\u2019s a total lunar eclipse, and I\u2019ve calculated a location from which we can photograph the fully eclipsed moon setting directly over the crater of Teide at dawn!It sounded almost too good to be true\u2014because typical lunar eclipses are rather dull photographically, especially after you\u2019ve seen and photographed a few. Without an interesting foreground, pictures of a red moon look the same anywhere in the world. Technically challenging, perhaps, but not very c"
  },
  {
    "title": "The Worst Programmer I Know (2023) (dannorth.net)",
    "points": 323,
    "submitter": "rbanffy",
    "submit_time": "2025-03-23T13:08:45 1742735325",
    "num_comments": 236,
    "comments_url": "https://news.ycombinator.com/item?id=43452649",
    "comments": [
      "The idea of measuring individual developer productivity is kind of absurd to me. I'm not saying that what we do is magic, there are just so many variables.Measuring story points or lines of code is kind of the opposite of productivity. This encourages developers to do as much meaningless work as possible. I'd want a developer to make a task simpler or use an existing tool which means less time writing code. The value of them saving that work from knowing another way is high but hard to measure.What you want is measuring business outcomes but those are hard to attribute to a particular developer.I think unfortunately we're left with our subjective judgement here. I think we'd do better admitting to ourselves that we can't measure this than to pretend we have some sort of science here.\n \nreply",
      "I had a director that was obsessed with github enterprise stats. He forbid people from squashing commits and told people to commit every day, even if you're in the middle of something. This was so that he could see who was writing the most code.One of our interns was close to the end of his term and this director wanted to hire him. He thought the intern was amazing based on the amount of code he wrote. The problem was that this intern was bad, so we had him write unit tests. However, he was also bad at writing unit tests. He would run the code and then write tests that enforced the current results, instead of considering that the current behaviour might be incorrect. Thankfully we didn't hire him after myself and others explained why the intern had so many commits and lines of code written.\n \nreply",
      "Reminds me of an old joke about a policeman who pulls over a poor driver. The driver complain \"But I haven't been in a single accident\", the reply from the policeman, \"Yes, but you've caused dozens\".Some people are just oblivious to the trail of destruction left in their wake.\n \nreply",
      "Reminds me of a manager and a QA I once knew. QA was a nice guy, but a terrible QA. Would fail stories on the most arbitrary guidelines. Story is about changing the font size on the home page? He'd fail it because he wasn't able to log in (he tested while the auth service was undergoing planned maintenance).Manager loved this guy, and pushed him through several promotions. Eventually other employees got tired of being skipped for promotions and left the company, creating a minor staffing crisis\n \nreply",
      "We kinda have this, but\u2026 At least we have a dedicated QA team. That spends their whole day literally just confirming that the shit we write is up to spec. We spend a lot of time resolving discrepancies between implementation, spec and test, but when things roll out the other end, they work.\n \nreply",
      "yeah a good qa team is peace of mind.\n \nreply",
      "I think just about everybody has had to deal with one or several of these guys.\n \nreply",
      "Much as cancer arises and grows from natural cellular processes gone awry, this seems to be an organizational cancer, present in any company of a large enough size.\n \nreply",
      "> Story is about changing the font size on the home page? He'd fail it because he wasn't able to log in (he tested while the auth service was undergoing planned maintenance).Average offshore QA team.\n \nreply",
      "Then the other employees found that this is how the world works: don't promote people that deliver results or you may have to replace them.\n \nreply"
    ],
    "link": "https://dannorth.net/the-worst-programmer/",
    "first_paragraph": "The great thing about measuring developer productivity is that you can quickly identify the bad programmers. I want to tell you about the worst programmer I know, and why I fought to keep him in the team.A few years ago I wrote a Twitter/X thread about the best programmer I know, which I should write up as a blog post. It seems only fair to tell you about the worst one too. His name is Tim Mackinnon and I want you to know how measurably unproductive he is.We were working for a well-known software consultancy at a Big Bank that decided to introduce individual performance metrics, \u201cfor appraisal and personal development purposes\u201d. This was cascaded through the organisation, and landed in our team in terms of story points delivered. This was after some considered discussion from the department manager, who knew you shouldn\u2019t measure things like lines of code or bugs found, because people can easily game these.Source: http://dilbert.com/strip/1995-11-13Instead we would measure stories deli"
  },
  {
    "title": "The Myth of Liquid Detection (eclecticlight.co)",
    "points": 36,
    "submitter": "frizlab",
    "submit_time": "2025-03-20T15:32:46 1742484766",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=43424709",
    "comments": [
      "HN (and other forums) are great sources of myths. It goes like this:- Person A asks a question and proposes a suggestion- Person B responds to the suggestion and adds more complaints- Person C either agrees or disagrees with A and B's claims, but adds an argument which adds more detail/fills in more gaps and adds more suggestionsAt no point does anyone say \"hold on, do any of you have any empirical evidence of anything you've said?\" Everybody just kind of accepts every premise, and then argues it as if it's a valid premise. That acceptance of the false premise is the bedrock on which invented ideas become commonly-held beliefs.I think this is part of what makes AIs hallucinate. These conversations get ingested by the AIs and make connections between these claims, which it will see again and again as the myths are repeated from forum to forum. Later it will make correlations between the conversations and there isn't anything solid enough for it to determine which is real or not. I've seen it recently when analyzing adhesives, where it will not only quote the wrong information about an adhesive (despite it already having the TDS in its database), but also it'll make up fake adhesives that are clearly a mash-up of two real adhesives.(See, I've just done it... completely talking out of my ass about a subject I don't know anything about, but sounds plausible)\n \nreply",
      "One time I was caught out in heavy rain, and when I later tried to plug in my iPhone I got a message saying the lightning port was disabled until it could dry out. There was even an emergency override option, which I opted not to use. Seems like a nice feature to me.\n \nreply",
      "A few days ago my iPhone would show the same message despite not being exposed to water. A reboot has fixed it, but that makes me wonder what is the false positive rate on that.\n \nreply",
      "I had that on a Samsung phone. Eventually it got so bad I had to switch phone because it would constantly believe there was water in the USB port even though it was bone dry.It may have been some sort of short internally, but to me it just meant a defective phone.\n \nreply",
      "Lint in port getting damp often caused this for me\n \nreply",
      "It's only because \"telemetry\" (i.e. spyware) has been so pervasive that the suspicions arose. Does anyone else remember the \"dew sensors\" in VCRs and other tape equipment? Those were around before pervasive mass surveillance, and didn't cause the same suspicion.Attempts to connect over the network are obvious in the logWhich log? The one on the device itself, whose software has a history of ignoring what the user wants? https://news.ycombinator.com/item?id=24838816\n \nreply",
      "With a VCR it's probably going to be a lot harder to get a false detection than a phone which is a device that gets carried everywhere.\n \nreply",
      "Who didn't carry their VCR with them everywhere? How else were you going to record the kid's soccer game?https://www.rewindmuseum.com/images3/2400woman2.jpg\n \nreply",
      "It doesn't need to send anything to Apple.  A tech could read a log or CMOS bit or whatever at time of repair.  Not saying they do that but the article seems pretty pointless.  It's like they wanted to talk about a neat feature and chose the most indigent way possible.\n \nreply",
      "And beyond that obvious path the author is only watching for activity while the port is not wet! Obviously it wouldn't phone home every time the port is dry. While I doubt apple is using this to void warranty claims this is about the weakest debunking of that I can imagine.\n \nreply"
    ],
    "link": "https://eclecticlight.co/2025/03/16/last-week-on-my-mac-the-myth-of-liquid-detection/",
    "first_paragraph": "Macs have developed their own mythology, and this week I unintentionally came across a myth that developed over a year ago. Like so many it was born from a chance observation, this time of a new background process that appeared on 25 October 2023 in macOS Sonoma 14.1, and was reported in 9to5Mac on 3 November 2023.The process in question is liquiddetectiond, and as 9to5Mac\u2019s headline claimed, it meant that \u201cMacs can now inform Apple if any liquids have been detected in the USB-C ports\u201d. That article argued that \u201cit seems more likely that the data collected by this daemon will be used for technicians to determine whether a Mac is eligible for free repair.\u201d \u201cPutting a digital liquid detector on USB-C ports is just another way to ensure that technicians are right about claiming that a Mac has been exposed to liquids.\u201dThat, and a couple of linked reports elsewhere, brought a small flurry of comments about how typical this was of Apple, then all went quiet until 9to5Mac\u2019s article was picked"
  },
  {
    "title": "Euclid opens data treasure trove, offers glimpse of deep fields (esa.int)",
    "points": 74,
    "submitter": "layer8",
    "submit_time": "2025-03-20T17:07:11 1742490431",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=43425855",
    "comments": [
      "How do these deep fields compare against other telescopes' deep fields (Hubble, JWST, &c.)?edit: Trying to answer my own question: I understand they're around 10,000 times larger that Hubble's deep fields, each (three deep field zones)[a], with about 1/10th the sensitivity (limiting magnitude +27 in the optical bands[b], compared against Hubble's +29.1\u201330.3 [c]). Or that's the sensitivity it will reach, eventually; the one they've released now is still incomplete.[a] https://en.wikipedia.org/wiki/List_of_deep_fields[b] https://www.aanda.org/articles/aa/full_html/2025/03/aa51857-...[c] https://www.aanda.org/articles/aa/full_html/2017/12/aa30833-...\n \nreply",
      "See here: https://www.esa.int/Science_Exploration/Space_Science/Euclid... and here: https://bigthink.com/starts-with-a-bang/euclid-science-image...\n \nreply",
      "While reading this announcement, two phrases came to my mind:- \"The sky! It's full of... stars!\" from Isaac Asimov\u2019s short story \u201cNightfall\u201d- \"My God, it's full of stars!\" from Arthur C Clarke\u2019s novel \u201c2001: A Space Odyssey\u201d\n \nreply",
      "And a follow up from the Krikkit species from the Hitchhiker's Guide:- \"It'll have to go\":)\n \nreply",
      "Euclid is such a cool mission and this first tranche is merely 0.4% of what we'll eventually be getting. Fingers crossed!\n \nreply",
      "Where did you hear the word tranche? People at work just started using it recently and I've been seeing it more as well. Why is this word trending right now?\n \nreply",
      "https://en.wikipedia.org/wiki/Frequency_illusion\n \nreply",
      "Heh, was looking up the wiki on the Baader Meinhoff phenomenon only to find out it sends you to your link. Guess that's an easier name to know it as :)\n \nreply",
      "I\u2019ve been hearing everyone talking about this phenomenon. Is it trending now?\n \nreply",
      "I started noticing it around the 2008/9 financial crisis because CDOs have tranches.\n \nreply"
    ],
    "link": "https://www.esa.int/Science_Exploration/Space_Science/Euclid/Euclid_opens_data_treasure_trove_offers_glimpse_of_deep_fields",
    "first_paragraph": ""
  }
]