[
  {
    "title": "Mistral OCR (mistral.ai)",
    "points": 961,
    "submitter": "littlemerman",
    "submit_time": "2025-03-06T17:39:39 1741282779",
    "num_comments": 313,
    "comments_url": "https://news.ycombinator.com/item?id=43282905",
    "comments": [
      "It's not bad! But it still hallucinates. Here's an example of an (admittedly difficult) image:https://i.imgur.com/jcwW5AG.jpegFor the blocks in the center, it outputs:> Claude, duc de Saint-Simon, pair et chevalier des ordres, gouverneur de Blaye, Senlis, etc., n\u00e9 le 16 ao\u00fbt 1607 ,  3 mai 1693 ; \u00e9p. 1\u25cb, le 26 septembre 1644, Diane - Henriette de Budos de Portes, morte le 2 d\u00e9cembre 1670; 2\u25cb, le 17 octobre 1672, Charlotte de l'Aubespine, morte le 6 octobre 1725.This is perfect! But then the next one:> Louis, commandeur de Malte, Louis de Fay Laurent bre 1644, Diane - Henriette de Budos de Portes, de Cressonsac. du Chastelet, mortilhomme aux gardes,  2 juin 1679.This is really bad because1/ a portion of the text of the previous bloc is repeated2/ a portion of the next bloc is imported here where it shouldn't be (\"Cressonsac\"), and of the right most bloc (\"Chastelet\")3/ but worst of all, a whole word is invented, \"mortilhomme\" that appears nowhere in the original. (The word doesn't exist in French so in that case it would be easier to spot; but the risk is when words are invented, that do exist and \"feel right\" in the context.)(Correct text for the second bloc should be:> Louis, commandeur de Malte, capitaine aux gardes, 2 juin 1679.)\n \nreply",
      "> This is perfect!Just a nit, but I wouldn\u2019t call it perfect when using U+25CB \u25cb WHITE CIRCLE instead of what should be U+00BA \u00ba MASCULINE ORDINAL INDICATOR, or alternatively a superscript \u201co\u201d. These are https://fr.wikipedia.org/wiki/Adverbe_ordinal#Premiers_adver....There\u2019s also extra spaces after the \u201c1607\u201d and around the hyphen in \u201cDiane-Henriette\u201d.Lastly, U+2019 instead of U+0027 would be more appropriate for the apostrophe, all the more since in the image it looks like the former and not like the latter.\n \nreply",
      "> Just a nit, but I wouldn\u2019t call it perfect when using U+25CB \u25cb WHITE CIRCLE instead of what should be U+00BA \u00ba MASCULINE ORDINAL INDICATOR, or alternatively a superscript \u201co\u201dOr degree symbol. Although it should be able to figure out which to use according to the context.\n \nreply",
      "This is \"reasoning model\" stuff even for humans :).\n \nreply",
      "There is OCR software that analyses which language is used, and then applies heuristics for the recognized language to steer the character recognition in terms of character sequence likelihoods and punctuation rules.I don\u2019t think you need a reasoning model for that, just better training; although conversely a reasoning model should hopefully notice the errors \u2014 though LLM tokenization might still throw a wrench into that.\n \nreply",
      "Another test with a text in English, which is maybe more fair (although Mistral is a French company ;-). This image is from  Parliamentary debates of the parliament of New Zealand in 1854-55:https://i.imgur.com/1uVAWx9.pngHere's the output of the first paragraph, with mistakes in brackets:> drafts would be laid on the table, and a long discussion would ensue; whereas a Committee would be able to frame a document which, with perhaps a few verbal emundations [emendations], would be adopted; the time of the House would thus be saved, and its business expected [expedited]. With regard to the question of the comparative advantages of The-day [Tuesday]* and Friday, he should vote for the amendment, on the principle that the wishes of members from a distance should be considered on all sensations [occasions] where a principle would not be compromised or the convenience of the House interfered with. He hoped the honourable member for the Town of Christchurch would adopt the suggestion he (Mr. Forssith [Forsaith]) had thrown out and said [add] to his motion the names of a Committee.*Some mistakes are minor (emnundations/emendations or Forssith/Forsaith), but others are very bad, because they are unpredictable and don't correspond to any pattern, and therefore can be very hard to spot: sensations instead of occasions, or expected in lieu of expedited... That last one really changes the meaning of the sentence.\n \nreply",
      "I want to rejoice that OCR is now a  \"solved\" problem, but I feel like hallucinations are just as problematic as the kind of stuff I have to put up with tesseract -- both require careful manual proofreading for an acceptable degree of confidence. I guess I'll have to try it and see for myself just how much better these solutions are for my public domain archive.org Latin language reader & textbook projects.\n \nreply",
      "It depends on your use-case. For mine, I'm mining millions of scanned PDF pages to get approximate short summaries of long documents. The occasional hallucination won't damage the project. I realize I'm an outlier, and I would obviously prefer a solution that was as accurate as possible.\n \nreply",
      "possibly doing both & diffing the output to spot contested bits?\n \nreply",
      "that\u2019s my current idea, use two different ocr models and diff the results to spot check for errors. at these prices why not?\n \nreply"
    ],
    "link": "https://mistral.ai/fr/news/mistral-ocr",
    "first_paragraph": "Throughout history, advancements in information abstraction and retrieval have driven human progress. From hieroglyphs to papyri, the printing press to digitization, each leap has made human knowledge more accessible and actionable, fueling further innovation.\u00a0Today, we\u2019re at the precipice of the next big leap\u2014to unlock the collective intelligence of all digitized information. Approximately\u00a090% of the world\u2019s organizational data is stored as documents, and to harness this potential, we are introducing Mistral OCR. Mistral OCR is an Optical Character Recognition API that sets a new standard in document understanding. Unlike other models, Mistral OCR comprehends each element of documents\u2014media, text, tables, equations\u2014with unprecedented accuracy and cognition. It takes images and PDFs as input and extracts content in an ordered interleaved text and images.As a result, Mistral OCR is an ideal model to use in combination with a RAG system taking multimodal documents (such as slides or comp"
  },
  {
    "title": "Differentiable Logic Cellular Automata (google-research.github.io)",
    "points": 51,
    "submitter": "eyvindn",
    "submit_time": "2025-03-06T23:43:37 1741304617",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=43286161",
    "comments": [
      "There\u2019s something compelling about these, especially w.r.t. their ability to generalize. But what is the vision here? What might these be able to do in the future? Or even philosophically speaking, what do these teach us about the world? We know a 1D cellular automata is Turing equivalent, so, at least from one perspective, NCA/these aren\u2019t terribly suprising.\n \nreply",
      "Potentially it would be useful if you could enter a grid from satelite images and simulate wildfire spread or pollution spread or similar problems.\n \nreply",
      "This writing feels so strongly LLM flavored. It's too bad, since I've really liked Alexander Mordvintsev's other work.\n \nreply",
      "Which portion of the text gave you that impression?\n \nreply",
      "> To answer this, we'll start by attacking Conway's Game of Life - perhaps the most iconic cellular automata, having captivated researchers for decades> At the heart of this project lies...\n> his powerful paradigm, pioneered by Mordvintsev et al., represents a fundamental shift in...(Not only is this clearly LLM-style, I doubt someone working in a group w/ Mordvintsev would write this)> Traditional cellular automata have long captivated...> In the first stage, each cell perceives its environment. Think of it as a cell sensing the world around it.>  To do this, it uses Sobel filters, mathematical tools designed to numerically approximate spatial gradientsMathematical tools??? This is a deep learning paper my guy.> Next, the neural network steps in....And it just keeps going. If you ask ChatGPT or Claude to write an essay for you, this is the style you get. I suffered through it b/c again, I really like Mordvintsev's work and have been following this line of research for a while, but it feels pretty rude to make people read this.\n \nreply",
      "The reason LLMs write like that is, unsurprisingly, that some people write like that. In fact many of them do - it's not uncommon.If you have proof like the logits are statistically significant for LLM output, that would be appreciated - otherwise it's just arguing over style.\n \nreply",
      "I've read a _lot_ of deep learning papers, and this is extremely atypical. I agree with you that if there were any sort of serious implications then it'd be important to establish proof, but in the case of griping on a forum I think the standard of evidence is much lower.\n \nreply",
      "I wonder what Stephen Wolfram has to say about this.\n \nreply",
      "I wish John Conway was still around to comment.\n \nreply"
    ],
    "link": "https://google-research.github.io/self-organising-systems/difflogic-ca/?hn",
    "first_paragraph": "From Game of Life to pattern generation with learned recurrent circuitsAUTHORS:Pietro MiottiEyvind NiklassonEttore RandazzoAlexander MordvintsevAFFILIATIONS:Google, Paradigms of Intelligence Team\n\nPUBLISHED:March 3, 2025\nImagine trying to reverse-engineer the complex, often unexpected patterns and behaviors that emerge from simple rules. This challenge has inspired researchers and enthusiasts that work with cellular automata for decades.  In cellular automata, we generally approach things from the bottom-up. We choose local rules, then investigate the resulting emergent patterns. What if we could create systems that, given some complex desired pattern, can, in a fully differentiable fashion, learn the local rules that generate it, while preserving the inherent discrete nature of cellular automata? This is what we'll  explore with you today.\n\nPrior work has explored learning transition rules using non-differentiable techniques, demonstrating the feasibility of evolving local rules for s"
  },
  {
    "title": "How to distrust a CA without any certificate errors (dadrian.io)",
    "points": 53,
    "submitter": "tptacek",
    "submit_time": "2025-03-06T22:28:01 1741300081",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=43285671",
    "comments": [
      "The flipside of the same technical points is https://sslmate.com/blog/post/entrust_distrust_more_disrupti... where some non-browser clients don't handle this, or worse, handle it incorrectly.\n \nreply",
      "Right; it's imperfect, as everything is. But of course, it's also a huge bit of leverage for the root programs (more accurately, a loss of leverage for CAs) in killing misbehaving CAs; those programs can't be blackmailed with huge numbers of angry users anymore, only a much smaller subset of users. Seems like a good thing, right?\n \nreply",
      "Only insofar as you trust the root programs to use their leverage responsibly, both today and in the medium-to-long-term future.\n \nreply",
      "The operators of the root programs control the browsers (and, in some cases, the operating systems!), so this doesn't make much sense.\n \nreply",
      "Any leverage against the root programs in the form of angry users is also leverage against the browser devs, is it not? Either way you look at it, the root programs/browser devs receive less pushback and gain more autonomy.My biggest concern is long-term censorship risk. I can imagine the list of trusted CAs getting whittled down over the next several decades (since it's a privilege, not a right!), until it's small enough for all of them to collude or be pressured into blocking some particular person or organization.\n \nreply",
      "Your concern is that there will be... too few CAs?\n \nreply",
      "Yes. It would add another potential point of failure to the process of publishing content on the Web, if such a scenario came to pass. (Of course, the best-case scenario is that we retain a healthy number of CAs who can act independently, but also maintain compliance indefinitely.)\n \nreply",
      "I don't know what to say; I think that's the first time I've heard that concern on HN. Thanks!\n \nreply",
      "Non-browser clients shouldn't be expected to crib browser trust decisions. Also, the (presumably?) default behavior for a non-browser client consuming a browser root store, but is unaware of the constraint behavior, is to not enforce the constraint. So they would effectively continue to trust the CA until it is fully removed, which is probably the correct decision anyway.\n \nreply",
      "To me that's an odd position to take, ultimately if the user is using Mozilla's root CA list then they're trusting Mozilla to determine which certs should be valid. If non-browser programs using the list are trusting certs that Mozilla says shouldn't be trusted then that's not a good result.Now of course the issue is that the information can't be encoded into the bundle, but I'm saying that's a bug and not a feature.\n \nreply"
    ],
    "link": "https://dadrian.io/blog/posts/sct-not-after/",
    "first_paragraph": "\nCLOSURE\nA \u201cdistrust\u201d is when a certification authority (CA) that issues HTTPS\ncertificates to websites is removed from a root store because\nit is no longer trusted to issue certificates. This means certificates issued by\nthat CA will be treated as invalid, likely causing certificate error\ninterstitials in any browser that distrusted the CA. Distrusts can happen for\nsecurity reasons, compliance reasons, or simply due to a lack of trust in the\noperators. In the past, the complexity and user impact of distrust events have\nlargely been dependent on the size and usage of a CA\u2014the larger the CA, the\nlonger and more complex the timeline was to distrust it if it\nmisbehaved, and the more likely users were to encounter\ncertificate errors. Nowadays, the situation is different.Most user agents1 require certificates to be logged to public certificate\ntransparency (CT) logs. Since the introduction of CT, most distrusts are no\nlonger due to key compromise and domain validation failures. Today, CAs a"
  },
  {
    "title": "Succinct Data Structures (startifact.com)",
    "points": 235,
    "submitter": "pavel_lishin",
    "submit_time": "2025-03-06T17:48:37 1741283317",
    "num_comments": 34,
    "comments_url": "https://news.ycombinator.com/item?id=43282995",
    "comments": [
      "I also emailed Gonzalo Navarro once to ask a question, and we had a great discussion and ended up writing a paper together about the answer. [1]Another paper of his that I really like combines a few elegant ideas into a simple implementation of bitvector rank/select: https://users.dcc.uchile.cl/~gnavarro/ps/sea12.1.pdfDuring this time I got really excited about succinct data structures and wrote a Rust library implementing many bitvector types and a wavelet matrix. [2]My interest came from a data visualization perspective -- I was curious if space-efficient data structures could fundamentally improve the interactive exploration of large datasets on the client side. Happy to chat about that if anyone's curious.[1] Paper: https://archive.yuri.is/pdfing/weighted_range_quantile_queri... though it's pretty hard to understand without some background context. I've been meaning to write a blog post explaining the core contribution, which is a simple tweak to one of Navarro's textbook data structures.[2] The rust version is here: https://github.com/yurivish/made-of-bits/tree/main/rust-play... and an earlier pure-JS implementation is here: https://github.com/yurivish/made-of-bits/tree/main\n \nreply",
      "Reading a Gonzalo Navarro paper is like going for walk, taking a shower and having a wonderful coffee. It literally sets the mind on fire.https://dblp.org/pid/n/GonzaloNavarro.html\n \nreply",
      "Well not literally.\n \nreply",
      "Note that succinct data structures may not be faster than conventional structures if your dataset fits in memory http://www.cs.cmu.edu/~huanche1/slides/FST.pdf . Of course, for large datasets where storage access times dominate, succinct data structures win all around. In any case, succinct trees are works of art (If I recall https://arxiv.org/pdf/1805.11255 was a good exposition) (just look at how that RMQ works)!\n \nreply",
      "As an application grows the features start to interact. We tend to not be paying much attention to how the old code 'fits into memory' while we are writing new code that also has to fit into memory.Once you have an entire system written the benefits of having four interacting features that each fit into a third of memory may be bigger than you think. And I don't know how well Intel's hardware level profiling information reveals that but I know for sure that the profiling tools that ship with most commercially viable programming languages never do. They blame issues on whoever touched the system last, and if that is an epicycle or a metastable situation then the apparent guilty party may be a frame-up, while the real culprit goes unpunished.As an example: if your workflow has a step that eventually needs to use 40% of available memory to solve a problem, then GC will almost always trigger within that step of the process, rather than in the other 60% of memory being systematically wasted by heaps of inefficient code in the leadup to this step, because the top of the memory sawtooth will almost always occur within that part of the call graph. But because the 40% is your intrinsic complexity, people's brains shut off the moment a cost is attributed to unavoidable work, instead of the avoidable work that really caused the majority of the problem.\n \nreply",
      "True, but it depends on what you mean with fitting in memory.Succinct datastructures are used in genomics (e.g. bwa, megahit exome sequencer) because N is so large that you're actually hitting asymptotic behavior.For memory latency it can by making your memory footprint fit in LLC or a single node; cross-node NUMA latencies are typically enough to absolutely tank performance.It can theoretically also help in massively parallel access situations where bandwidth becomes a limiting concern. Although, I intuit we would need near-memory hardware to perform the rank+select. Otherwise the latency of the multiple dependent accesses will kill your performance again, cfr previous point.With a lot of parallel accesses, bandwidth could also be an issue in conventional structures.\n \nreply",
      "I first heard of the concept of succinct data structures from Edward Kmett, a famous Haskeller behind many popular Haskell libraries. He gave a talk on succinct data structures a long time ago: http://youtu.be/uA0Z7_4J7u8\n \nreply",
      "Succinct data structures are very fun! If anyone is interested, I've implemented some of this in Zig: https://github.com/judofyr/zini. The main thing this implements is a minimal perfect hash function which uses less than 4 bits per element (and can respond to queries in ~50 ns). As a part of that I ended up implementing on of these indexes for constant-time select(n): https://github.com/judofyr/zini/blob/main/src/darray.zig.It feels kinda magic implementing these algorithms because everything becomes so tiny!\n \nreply",
      "For Java, C++, and Rust there is also https://sux.di.unimi.it/ maintained by Sebastiano Vigna, a professor from Italy.Together with his student (I also helped a bit), he wrote a paper about RecSplit, a minimal perfect hash function (MPHF) algorithm I have invented: https://arxiv.org/abs/1910.06416 - that algorithm uses around 1.56 bits per key. But it is quite slow. In January 2020 I presented the paper at a conference, that was right before the pandemic.The algorithm with the least memory usage (and much faster as well) is now Consensus-RecSplit: https://arxiv.org/abs/2502.05613 - it can do 1.44 bits per key, which is right at the theoretical minimum (meaning, there is no good way to shrink it further). At least a small part of my original invention is still used there, nice. The fastest current MPHF is probably PtrHash https://arxiv.org/abs/2502.15539 - both papers were published last month (February 2025) by the way.\n \nreply",
      "I'm working on making pthash faster and more practical. I can compile the data and code to C++, send efficiently store the keys also to be able to eliminate false positives.https://github.com/rurban/pthash\n \nreply"
    ],
    "link": "https://blog.startifact.com/posts/succinct/",
    "first_paragraph": "A few months ago, searching for ideas on how to make some code faster, I found\nmyself reading a bunch of computer science papers. I don't pretend to be good\nat this - but I don't mind some confusion or being overwhelmed, and I'm okay to\nadmit my ignorance. 1. I ran into this 15 year old paper 2\nthat introduced several concepts entirely new to me. I struggled to understand\nthem.So what do you do then? You look for more papers to help explain things. This\nis a risky endeavor, because they might confuse you even more, but it cannot be\navoided. I discovered a paper for a relevant data structure that mentioned\nsource code on a website. The source code was in C++ and I am working in Rust,\nbut I figured I'd take a look anyway. But when I went to the website the\nresource wasn't there. So I mailed the owner of the website, who happened to be\na computer science professor.This professor (Gonzalo Navarro) was\nvery friendly and immediately mailed me back 3 4. Only during\nour conversation did I real"
  },
  {
    "title": "Show HN: Rust Vector and Quaternion Lib (github.com/david-oconnor)",
    "points": 66,
    "submitter": "the__alchemist",
    "submit_time": "2025-03-06T20:32:47 1741293167",
    "num_comments": 11,
    "comments_url": "https://news.ycombinator.com/item?id=43284811",
    "comments": [
      "Sounds interesting, but it's a space with a lot of different options. Have tried doing benchmarks against other vector libraries?If I'm shopping for a vector library, this is one of the pieces of information that makes the decision easier.\n \nreply",
      "I haven't benchmarked, so these opinions might be worthless, but here's how they're laid out internally.* nalgebra uses fixed-size arrays (so a Vec4 is like [[f32; 4]; 1])* this library seems to use fields (so a Vec4 is a struct with x,y,z,w fields)* glam uses SIMD types for some types (so a Vec4 is a __m128)I think maybe glam might win for some operations, but if you want performance, people usually SIMD in the other direction when possible, like:    struct Vec4 { x: __m128, y: __m128, z: __m128, w: __m128 }\n\nAccording to mathbench-rs[0] (which I looked at after typing this comment...) it looks like nalgebra and ultraviolet have such types. The benchmarks have \"N/A\" for many of the \"wide\" nalgebra entries though, which might indicate that nalgebra hasn't implemented many of those functions for \"wide\" types.[0]: https://github.com/bitshifter/mathbench-rs\n \nreply",
      "I'd like to see what the author's motivation was for making this, but I'm not sure benchmarks would be the first thing I look for :)\n \nreply",
      "I haven't done benchmarks, but this speculation nailed it - The exact motivation is lost, but I believe I became tilted with inconsistent mixes of JPL and Hamilton quaternion operations on the popular libs at the time. Since then, I use it as a low-friction way to conserve geometrical functions among multiple projects. I.e., it's easier to just edit the code base than go through a PR process.\n \nreply",
      "no_std seems somewhat novel, which might have been another motivating factor?\n \nreply",
      "The gamedev ecosystem appears to be split between nalgebra (for Rapier users) and glam. Where does lin-alg fit?\n \nreply",
      "cgmath?\n \nreply",
      "cgmath is nice, but it uses old Rust 2015 and hasn't been updated since January 2021.\n \nreply",
      "I can't imagine any obvious reason I would miss Rust's 2018 edition, let alone 2024 edition, to implement linear algebra? People seemed happy enough in Fortran before I was old enough to go to school and I don't sense it's an application where I'd want async for example. A lot of other edition changes are nice when writing new thing but not helpful for an existing codebase. So, like, sure, it's 2015 edition but that's fine?\n \nreply",
      "how does it compare to nalgebra?\n \nreply"
    ],
    "link": "https://github.com/David-OConnor/lin-alg",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Operations on matrices, vectors, and quaternions\n      \nVector, matrix, and quaternion data structures and operations. Uses f32 or f64 based types.Example use cases:Vector and Quaternion types are copy.For Compatibility with no_std tgts, e.g. embedded, Use the no_std feature. This feature omits std::fmt::Display implementations. For computer-graphics\nfunctionality (e.g. specialty matrix constructors, and [de]serialization to byte arrays for passing to and from GPUs), use the computer_graphics\nfeature. For bincode binary encoding and decoding, use the encode feature.Do not run cargo fmt on this code base; the macro used to prevent duplication of code between f32 and f64 modules causes\nundesirable behavior.For information on practical quaternion operations: Quaternions: A practical guide.The From trait is implemented for most types, f"
  },
  {
    "title": "Why I find diffusion models interesting? (rnikhil.com)",
    "points": 39,
    "submitter": "whoami_nr",
    "submit_time": "2025-03-06T22:35:00 1741300500",
    "num_comments": 13,
    "comments_url": "https://news.ycombinator.com/item?id=43285726",
    "comments": [
      "I know the r-word is coming back in vogue, but it was still unpleasant to see it in the middle of an otherwise technical blog post. Ah well.Diffusion LMs are interesting and I'm looking forward to seeing how they develop, but from playing around with that model, it's GPT-2 level. I suspect it will need to be significantly scaled up before we can meaningfully compare it to the autoregressive paradigm.\n \nreply",
      "I don't get where the author is coming from with the idea that a diffusion based LLM would hallucinate less.> dLLMs can generate certain important portions first, validate it, and then continue the rest of the generation.If you pause the animation in the linked tweet (not the one on the page), you can see that the intermediate versions are full of, well, baloney.(and anyone who has messed around with diffusion based image generation knows the models are perfectly happy to hallucinate).\n \nreply",
      "Bidirectional seq2seq models are usually more accurate than unidirectional models.However, autoregressive models that generate one token at a time are usually more accurate than parallel models that generate multiple tokens at a time.In diffusion LLMs, both of these two effects interact. You can trade them off by determining how many tokens are generated at a time, and how many future tokens are used to predict the next set of tokens.\n \nreply",
      "The Llada paper: https://ml-gsai.github.io/LLaDA-demo/ here implied strong bidirectional reasoning capabilities and improved performance on reversal tasks (where the model needs to reason backwards).I made a logical leap from there.\n \nreply",
      "Regarding faulty intermediate versions, I think that\u2019s the point. The diffusion process can correct wrong tokens with the global state implies it.\n \nreply",
      "I think these models would get interesting at extreme scale. Generate a novel in 40 iterations on a rack of GPUs.At some point in the future, you will be able to autogen a 10M line codebase in a few seconds on a giant GPU cluster.\n \nreply",
      "Diffusion LLMs also follow scaling laws - https://proceedings.neurips.cc/paper_files/paper/2023/file/3...\n \nreply",
      "The animation on the page looks an awful lot like autoregressive inference in that virtually all of the tokens are predicted in order? But I guess it doesn't have to do that in the general case?\n \nreply",
      "The example in the linked demo[0] seems less left-to-right.Anyway, I think we'd expect it to usually be more-or-less left-to-right -- We usually decide what to write or speak left-to-right, too, and we don't seem to suffer much for it.(Unrelated: it's funny that the example generated code has a variable \"my array\" with a space in it.)[0]: https://ml-gsai.github.io/LLaDA-demo/\n \nreply",
      "Very related : https://arxiv.org/abs/2401.17505\n \nreply"
    ],
    "link": "https://rnikhil.com/2025/03/06/diffusion-models-eval",
    "first_paragraph": ""
  },
  {
    "title": "Using GRPO to Beat o1, o3-mini and R1 at \"Temporal Clue\" (openpipe.ai)",
    "points": 101,
    "submitter": "kcorbitt",
    "submit_time": "2025-03-06T19:51:55 1741290715",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=43284420",
    "comments": [
      ">To speed up our experiments, we omitted the  Kullback\u2013Leibler (KL) divergence penalty, although our training recipe supports it for interested readers.I am very curious whether omitting the KL penalty helps on narrow domains like this, and also whether doing so results in illegible reasoning. (From the samples in the post, it looks like it doesn't make reasoning illegible?)>the 32B model\u2019s response lengths collapsing, especially after reaching peak performance.I would not have predicted this. Nor that it could collapse its response length to near zero yet lose only a few percentage points of accuracy. If you do SFT to get a model of the same size to solve these puzzles with no reasoning (just output answers directly), how good can it do?\n \nreply",
      "Yeah, it may help. In this paper[1], the author used a KL penalty of 0.01 for general tasks and 0.001 for mathematical. I tend to think it's probably not very important unless you're trying to optimize for human preferences.As for response length, I think the model internalizes the logic and doesn't deliberate its answers through context creation. I don't think this is necessarily good for general reasoning, but for a specific task it would cut down inference costs. Just depends on what you're optimizing for. To encourage more general reasoning, I think a broader train and validation set would be helpful.[1] https://arxiv.org/html/2501.03262v1\n \nreply",
      "I keep seeing people mention \"illegible reasoning\" but I'd be fascinated to see an example of what it actually looks like. Do you have any examples?Apparently DeepSeek-R1 can switch between English, Chinese, and gibberish, and even the gibberish helps it think! That's fascinating, but all I can find is people saying it, nobody showing it.\n \nreply",
      "Here's an example of language switching:https://gr.inc/question/although-a-few-years-ago-the-fundame...In the dropdown set to DeepSeek-R1, switch to the LIMO model (which apparently has a high frequency of language switching).I'm not sure about examples of gibberish or totally illegible reasoning. My guess is that since R1-Zero still had the KL penalty, it should all be somewhat legible - the KL penalty encourages the model to not move too far from what the base model would say in any given context.\n \nreply",
      "Thanks, that's cool to see. I hadn't seen this site before but browsing around I also found this example: https://gr.inc/question/why-does-the-professor-say-this-good... - also with LIMO.\n \nreply",
      "This looks impressive but I\u2019m concerned, is it fair to \u201cteach to the test\u201d by fine tuning the Qwen model with RL on the test task, while the other models in the comparison are not fine tuned on the test task?\n \nreply",
      "One of the authors here. Happy to answer any questions about our methods/results!\n \nreply",
      "Can you elaborate on this point:\u201c We discovered that meaningful performance improvements, as high as 10\u201315%, can be achieved with as few as 16 training examples.\u201dIn particular, did you need to change the hyperparameters much, and did this limited recipe show different improvements for the larger vs smaller models?  Also, how did you select these 16 examples?\n \nreply",
      "No meaningful changes to the hyperparameters, just changed the tasks per iteration to 16 and trained on the same first 16 training tasks each iteration.We only tested this with the 14B model. You can see the run here:https://wandb.ai/bradhilton/rl-experiments/runs/062Performance peaked after 21 iterations at 45% accuracy instead of the final 59%, but still a significant increase on very few samples.\n \nreply",
      "Thanks.\n \nreply"
    ],
    "link": "https://openpipe.ai/blog/using-grpo-to-beat-o1-o3-mini-and-r1-on-temporal-clue",
    "first_paragraph": "PricingBlogDocsEnterpriseSign InGet StartedTechnicalBrad Hilton, Kyle CorbittMar 6, 20257 minutesIn this post we\u2019ll discuss how we used Group Relative Policy Optimization (GRPO) to surpass R1, o1, o3-mini, and come within a couple percentage points of Sonnet 3.7 on a reasoning-heavy game called \u201ctemporal clue\u201d, while being over 100x cheaper to run at inference time. We\u2019ll include specific lessons learned about task design and hyperparameters we\u2019ve found to work well. And finally, we share the training recipe we used to achieve these results, built on top of torchtune.Since OpenAI launched its powerful\u00a0new o-series of reasoning models last year, we've seen rapid progress in Large Language Models (LLMs) trained with Reinforcement Learning (RL). Leading organizations like\u00a0Google DeepMind,\u00a0Alibaba,\u00a0DeepSeek, and\u00a0Anthropic quickly followed suit, and have trained their own advanced models to reason with long \u201cchains-of-thought\u201d (CoT), taught with reinforcement learning on verifiable problems"
  },
  {
    "title": "Anime fans stumbled upon a mathematical proof (scientificamerican.com)",
    "points": 232,
    "submitter": "classichasclass",
    "submit_time": "2025-03-06T16:37:34 1741279054",
    "num_comments": 111,
    "comments_url": "https://news.ycombinator.com/item?id=43282133",
    "comments": [
      "Previous discussions:https://news.ycombinator.com/item?id=18292061https://news.ycombinator.com/item?id=23968618https://news.ycombinator.com/item?id=39325146See also:https://mathsci.fandom.com/wiki/The_Haruhi_Problemhttps://en.wikipedia.org/wiki/Superpermutation#Lower_bounds,...\n \nreply",
      "Wow I had no idea. Thanks! Macroexpanded:Unscrambling the hidden secrets of superpermutations - https://news.ycombinator.com/item?id=39325146 - Feb 2024 (8 comments)Mystery math whiz and novelist advance permutation problem - https://news.ycombinator.com/item?id=36191831 - June 2023 (92 comments)An Anonymous 4chan Post Helped Solve a 25-Year-Old Math Puzzle (2018) - https://news.ycombinator.com/item?id=23968618 - July 2020 (7 comments)Nobody knows how to cite 4chan mathematicians who solved an interesting problem - https://news.ycombinator.com/item?id=18292061 - Oct 2018 (198 comments)If anyone can find other threads in this set, let me know and I'll add them here.\n \nreply",
      "The image in the upper-right of the Fandom link was how it was posted in the 4chan thread, little disappointing it's left out of most posts about it.The character is actually from Steins;Gate, not The Melancholy of Haruhi Suzumiya:  https://steins-gate.fandom.com/wiki/Kurisu_Makise\n \nreply",
      "Kurisu in front of a whiteboard with \"You should be able to solve this\" is a fairly famous post format.https://www.google.com/search?udm=2&q=%22You%20should%20be%2...\n \nreply",
      "Oddly, the image that Scientific American chose to illustrate their article isn't from any of the Melancholy of Haruhi Suzumiya projects, but from Aokana - Four Rhythms Across the Blue, a much more obscure title.\n \nreply",
      "Not to mention they occupy totally different mediums (anime vs visual novel). Kind of like using a random movie cover when you're talking about a music album.\n \nreply",
      "I am not surprised that the author of this great article is Manon Bischoff. I have been reading her articles on Spektrum.de for years now, and they are always excellent. Here is a list of all her articles: https://www.spektrum.de/profil/bischoff/manon/1486871Selected articles get translated and published by SciAm: https://www.scientificamerican.com/author/manon-bischoff/\n \nreply",
      "There's something unbelievably funny to me that actual mathematical papers have to cite a 4chan post.It does make me wonder how much hidden knowledge is hidden in parts of the internet; maybe this is the only genius mathematical thing we've found on 4chan...\n \nreply",
      "> It does make me wonder how much hidden knowledge is hidden in parts of the internetThat was the shining hope of the internet. \"Information wants to be free\" and now it could be available to anyone with a modem vs just in university or municipal libraries. Now, we have megasites that dominate the web's attention with very trivial and banal content that makes looking for that information nearly impossible.\n \nreply",
      "Well, it's not as if that promise didn't come true. We do have the world's knowledge at our fingertips. It's more of a curation problem, and a natural result of a decentralized web. Wikipedia could be considered a \"megasite\", but I'd argue it's more valuable than a million independent sites.\n \nreply"
    ],
    "link": "https://www.scientificamerican.com/article/the-surprisingly-difficult-mathematical-proof-that-anime-fans-helped-solve/",
    "first_paragraph": "March 3, 20256 min readHow Anime Fans Stumbled upon a Mathematical ProofWhen a fan of a cult anime series wanted to watch its episodes in every possible order, they asked a question that had perplexed combinatorial mathematicians for yearsBy Manon Bischoff edited by Daisy YuhasFans of a classic anime series sought to work out how long it would take to the watch a 14-episode series in every possible order as efficiently as possible.Yuriko Nakao/Getty ImagesMath solutions can be found in surprising places, including the dark realms of the Internet. In 2011 an anonymous poster on the now infamously controversial image board 4chan posed a mathematical puzzle about the cult classic anime series The Melancholy of Haruhi Suzumiya. Though the bulletin board has become littered with hateful, violent and extreme content, that original post led to a solution to the sophisticated math problem.The first season of this anime series consists of 14 episodes that were designed so that you can watch the"
  },
  {
    "title": "Show HN: Shelgon: A Framework for Building Interactive REPL Shells in Rust (github.com/nishantjoshi00)",
    "points": 73,
    "submitter": "cat-whisperer",
    "submit_time": "2025-03-06T19:32:12 1741289532",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=43284227",
    "comments": [
      "Looks really interesting. I like the approach of writing pure functions that return descriptions of IO tasks to perform. A couple of questions:1. Why async?2. Why couple to anyhow instead of using an associated error type?\n \nreply",
      "+1 for #1. In general, I would recommend providing non-async alternative APIs, with the async runtime as an option rather than assumed default. Not all of us drink the kool-aid there. And no, I don't mean just providing a \"sync\" API that uses \"block_on\" behind the scenes but still uses tokio...Also, for async don't mandate tokio, use the \"agnostic\" crate to abstract it so people can use alternative runtimes.And yes, don't use anyhow in a library like this.  Anyhow is for your internal code, not public libraries/crates.  Define a set of error enums, or use thiserror for it if you have to.\n \nreply",
      "How it compares to other libraries in this space, e.g. reedline or rustyline?\n \nreply",
      "Neat.  I'll check it out.One suggestions: the README advertises lovely TUIs. Show us a screenshot, or screencast, so we can see what you mean!\n \nreply",
      "Yes, a screenshot would be good to get a visual on this.I have done a simple shell using Rustyline and Clap and this could be something I might be interested in but it's hard to say without a visual idea, asccinema would be perfect!\n \nreply",
      "Please don't mind my possibly simplistic question \u2014 but is this something that would bring Rust development closer to a Lisp environment? Seems like an interesting project.\n \nreply",
      "[flagged]",
      "Classic bagon comment! :)\n \nreply",
      "[flagged]",
      "I wonder if they could get away with an extra L and using ascii art of the pokemon...\n \nreply"
    ],
    "link": "https://github.com/NishantJoshi00/shelgon",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          Shelgon is a robust Rust framework for building interactive REPL (Read-Eval-Print Loop) applications and custom shells. It provides a flexible, type-safe foundation with built-in terminal UI capabilities using ratatui.\n\nAdd Shelgon to your Cargo.toml:Create a simple echo shell:Here's how to build a dragon-like shell with shelgon:Check out the examples directory for more advanced usage patterns, including:Contributions are welcome! Please feel free to submit a Pull Request. Before contributing, please:This project is licensed under the MIT License - see the LICENSE file for details.Built by Human, Documented by LLM."
  },
  {
    "title": "Rayhunter \u2013 Rust tool to detect cell site simulators on an orbic mobile hotspot (github.com/efforg)",
    "points": 99,
    "submitter": "stefankuehnel",
    "submit_time": "2025-03-06T19:04:12 1741287852",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=43283917",
    "comments": [
      "I can see why they'd write it for a specific cheap device. Is this stuff possible with a typical phone modem, though; or does it rely on some special features? Forgive my ignorance. :)\n \nreply",
      "Possible, yes, it's just looking at various 3GPP network messages and parsing out a few common anomalies. Accessible, not all the time.This project uses QMDL (Qualcomm debug logging) on a device with an accessible modem debug port and debug logging enabled. Most older Qualcomm devices have this form of debug logging available by default, but on newer devices, the debug interface is usually more locked down, requiring some degree of shenanigans to access.Take a look at SnoopSnitch (similar project for Qualcomm Android phones), QCSuper and MobileInsight (tools capable of capturing signaling data from QC and Mediatek phones), and SCAT (capable of capturing signaling data from some Samsung basebands).Other vendors usually have similar debug modes for their modems, but they often aren't reverse engineered or as easy to access as the Qualcomm ones.\n \nreply",
      "In the blog post[0], they mention it being possible with rooted Androids - so likely possible, just requires more access to what the modem's doing than the OS normally provides.\n[0]: https://www.eff.org/deeplinks/2025/03/meet-rayhunter-new-ope...\n \nreply",
      "iPhone Field Test Mode can be informative, https://www.xda-developers.com/how-access-field-test-mode-io... when combined with open data on cell tower identity, https://opencellid.org  Dial *3001#12345#*\n\nIt can sometimes be informative to turn off Data Roaming in cellular settings.(e)SIM password can provide an additional layer of control over when the phone contacts a cellular tower.\n \nreply",
      "How would one test this device to know that it works? It would seem actual cell site simulators would be rare in the wild for many HN readers.\n \nreply",
      "You could bring it to a large festival or even a protest. Law enforcement deploys them all the time. I found one using SnoopSnitch on an Android phone while at a large festival here in Louisiana.\n \nreply",
      "You can buy these off eBay for pretty cheap.Unlocked RC400L's are going for ~$19.99Gunna look into getting one and making one of these to play with.\n \nreply",
      "Blog post: https://news.ycombinator.com/item?id=43258620\n \nreply"
    ],
    "link": "https://github.com/EFForg/rayhunter",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Rust tool to detect cell site simulators on an orbic mobile hotspot \n      Rayhunter is an IMSI Catcher Catcher for the Orbic mobile hotspot.THIS CODE IS PROOF OF CONCEPT AND SHOULD NOT BE RELIED UPON IN HIGH RISK SITUATIONSCode is built and tested for the Orbic RC400L mobile hotspot, it may work on other orbics and other\nlinux/qualcom devices but this is the only one we have tested on.\nBuy the orbic using bezos bucks\nOr on EbayNOTE: We don't currently support automated installs on windows, you will have to follow the manual install instructions belowOnce installed, rayhunter will run automatically whenever your Orbic device is running. It serves a web UI that provides some basic controls, such as being able to start/stop recordings, download captures, and view heuristic analyses of captures. You can access this UI in one of two way"
  },
  {
    "title": "InstantStyle: Free Lunch Towards Style-Preserving in Text-to-Image Generation (github.com/instantx-research)",
    "points": 13,
    "submitter": "klaussilveira",
    "submit_time": "2025-03-06T23:31:13 1741303873",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=43286091",
    "comments": [
      "Love the results here.  But can someone explain:* Are there any web apps where I can make use of it?* How costly is it?* What does the \"Free Lunch\" in the title mean?\n \nreply",
      "This should work in ComfyUI, stable-diffusion-webui, etc. You can run it locally if you have a decent GPU or an M* macbook.\n \nreply",
      "Free lunch means it doesn\u2019t require training to achieve the results - it solves for it at run time.You can use this in local generative media tools like Invoke or Comfy, which are both open source and free.\n \nreply",
      "Invoke and Comfy are both incredibly complicated tools, and I've recently been put off by both communities.The r/StableDiffusion folks will go as far as calling those complaining about comfy \"PEBKACs\", which is a term I hadn't seen since the 00's.Neither tool is really appropriate for beginners, and frankly they're not even fun to use for extended periods as they're constantly breaking.If all you're trying to do is generate images, it's not worth installing a universe of broken Python and 100 GB of weights on your machine.It honestly feels like 2000's-era Linux hobbyists proclaiming the \"Year of Linux on the desktop\" when interacting with these communities. Their tools are busted, but lots of folks will blame you, the user.\n \nreply"
    ],
    "link": "https://github.com/instantX-research/InstantStyle",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        InstantStyle: Free Lunch towards Style-Preserving in Text-to-Image Generation \ud83d\udd25\n      Haofan Wang* \u00b7 Matteo Spinelli \u00b7 Qixun Wang \u00b7 Xu Bai \u00b7 Zekui Qin \u00b7 Anthony ChenInstantX Team*corresponding authors\n\n\n\nInstantStyle is a general framework that employs two straightforward yet potent techniques for achieving an effective disentanglement of style and content from reference images.Separating Content from Image. Benefit from the good characterization of CLIP global features, after subtracting the content text fea- tures from the image features, the style and content can be explicitly decoupled. Although simple, this strategy is quite effective in mitigating content leakage.\n\nInjecting into Style Blocks Only. Empirically, each layer of a deep network captures different semantic information the key observation in our work is that there ex"
  },
  {
    "title": "50 Years in Filesystems: 1984 (koehntopp.info)",
    "points": 85,
    "submitter": "kaycebasques",
    "submit_time": "2025-03-06T18:34:11 1741286051",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=43283498",
    "comments": [
      "Note that there are some significant non-Unix filesystems along the way. In particular, a few years later: \"Reimplementing the Cedar File System Using Logging and Group Commit\", Robert Hagmann, Xerox PARC. SIGOPS Operating Systems Review, November 1987.That's the origin of the journaling approach used in post-FFS unix file systems through the 90s. (I don't count ext2 as \"post-FFS\", as it's basically FFS on a disk with LBA addressing)\n \nreply",
      "wow. I always thought this was due to M. Rosenblum in 1992. Looking at the paper now it doesn't reference this one. I wonder what other group ideation happened in the late 80s around this. I guess it was already well established in databases.\n \nreply",
      "Xerox PARC strikes again\n \nreply",
      "As the old saying says: \"You can tune a filesystem, but you can't tune a fish.\"\n \nreply",
      "Sure you can, https://docs.redhat.com/en/documentation/red_hat_enterprise_...\n \nreply",
      "is there some metaphor i\u2019m missing or is it just funny?\n \nreply",
      "The phrase originates with the \u2018BUGS\u2019 section of the 4.2BSD man page for the `tunefs(8)` command, for the Berkeley Fast File System that is the topic of the OP article.\n \nreply",
      "This, but in true to form HN style, if you don't recognise the reference, it's psychologically safer to down vote what you don't know.\n \nreply",
      "Even if you do recognize it, this isn\u2019t Reddit.\n \nreply",
      "tuna fishTune-a-fishEDIT: looks like there\u2019s a bit more to it https://unixhistory.livejournal.com/1808.html\n \nreply"
    ],
    "link": "https://blog.koehntopp.info/2023/05/06/50-years-in-filesystems-1984.html",
    "first_paragraph": "This is part 2 of a series. The first part is \u201c1974\n\n\u201d.Progress is sometimes hard to see, especially when you have been part of it or otherwise lived through it.\nOften, it is easier to see if you compare modern educational material, and the problems discussed with older material.\nAnd then look for the research papers and sources that fueled the change.In Linux (and Unix in general), this is easy.The original Unix filesystem was doing well, but also had a large number of obvious problems.\nBSD Unix undertook an effort to fix them, and this is documented in the book\n\u201cThe Design and Implementation of the 4.3BSD UNIX Operating System\n\n\u201d\nby Leffler, McKusick et. al.\nA more concise, but also more academic discussion can be found in the classic 1984 paper A Fast File System for UNIX\n\n,\nwhich lists Marshall McKusick, Bill Joy (then at Sun), Samuel Leffler (then at LucasFilm) and Robert Fabry as authors.\nThe paper promises a reimplementation of the Unix filesystem for higher throughput, better a"
  },
  {
    "title": "An equation of state for dense nuclear matter such as neutron stars (phys.org)",
    "points": 12,
    "submitter": "rbanffy",
    "submit_time": "2025-03-03T12:29:45 1741004985",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=43241122",
    "comments": [
      "> Neutron stars present other challenges besides a humongous density. Their small size makes them impossible to study visually with telescopes, as they appear no more than a point. (The nearest neutron star to Earth is 400 light-years away.)Do we have an idea of what they would look like to the naked human eye?\n \nreply",
      "Answered here AFAICT:https://www.reddit.com/r/spaceengine/comments/15d3xwd/how_co...\n \nreply",
      "It would glow white, and due to relativity bending light, we\u2019d be able to see the back.\n \nreply",
      "Blackbody radiation (which even neutron stars will approximate) trends towards a pastel blue as temperature approaches infinity, actually.  There is always a slope in the spectrum in the visible range as the peak is always to the UV/Xray side for very hot objects.  \"White\" light requires that the spectrum be flat in visible wavelengths, which basically requires that the peak be in the visible, which is true for objects at about 6000K.As it happens, the sun is such an object.  And it more or less makes sense that we have eyes tuned to pick up the dominant wavelength arriving from our local light source.Edit: the wikipedia page has a great animated chart of this effect, showing what the visible-only spectrum looks like as temperature changes: https://en.wikipedia.org/wiki/Color_temperature\n \nreply",
      "Wiki says they are very hot so probably glaringly bright white dots\n \nreply"
    ],
    "link": "https://phys.org/news/2025-02-equation-state-dense-nuclear-neutron.html",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: Open-source, native audio turn detection model (github.com/pipecat-ai)",
    "points": 27,
    "submitter": "kwindla",
    "submit_time": "2025-03-06T18:20:48 1741285248",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=43283317",
    "comments": [
      "Having reviewed a few turn based models your implementation is pretty inline with them. Excited to see how this matures!\n \nreply",
      "As an [diagnosed] HF autistic person, this is unironically something I would go for in an earpiece. How many parameters is the model?\n \nreply"
    ],
    "link": "https://github.com/pipecat-ai/smart-turn",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          This is an open source, community-driven, native audio turn detection model.HuggingFace page: pipecat-ai/smart-turnTurn detection is one of the most important functions of a conversational voice AI technology stack. Turn detection means deciding when a voice agent should respond to human speech.Most voice agents today use voice activity detection (VAD) as the basis for turn detection. VAD segments audio into \"speech\" and \"non-speech\" segments. VAD can't take into account the actual linguistic or acoustic content of the speech. Humans do turn detection based on grammar, tone and pace of speech, and various other complex audio and semantic cues. We want to build a model that matches human expectations more closely than the VAD-based approach can.This is a truly open model (BSD 2-clause license). Anyone can use, fork, and contribute to this pro"
  },
  {
    "title": "Koko (YC W22) Is Hiring a CTO / Lead Engineer (ycombinator.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2025-03-06T21:00:00 1741294800",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.ycombinator.com/companies/koko-2/jobs/oPgy08B-lead-engineer-cto",
    "first_paragraph": "Making mental health accessible to everyone.We\u2019re building scalable AI systems that save lives. We provide online mental health support at the moment young people need it most. Our approach is to reach young people where they are \u2014 online \u2014 and embed our interventions into the platforms they use every day (e.g., TikTok, Discord).We're looking for a technical leader with deep insight into AI's capabilities while maintaining a strong grasp of the ethical, safety, and privacy implications \u2014 particularly in sensitive domains like youth mental health.At Koko, we celebrate diversity and are committed to creating an inclusive environment for all employees. We serve a very diverse user base and welcome applications from individuals of all backgrounds. Many of the people working with us are former Koko users themselves.We're Koko, a mental health tech nonprofit created by a team out of MIT and Airbnb. We\u2019re backed by YCombinator and Fast Forward, and we\u2019ve built services for most large Internet"
  },
  {
    "title": "Show HN: CodeTracer \u2013 A new time-traveling debugger implemented in Nim and Rust (github.com/metacraft-labs)",
    "points": 243,
    "submitter": "alehander42",
    "submit_time": "2025-03-06T14:30:10 1741271410",
    "num_comments": 47,
    "comments_url": "https://news.ycombinator.com/item?id=43280615",
    "comments": [
      "Neat!Years and years ago I had the opportunity to give Intel processor designers (the time of the 386!) requests for features.I requested a system tick timer for stamping logs (they did that), bus mask and value registers that triggered a debug interrupt on a match (they did that).And a jump source history. Maybe 10 jumps back. So on a breakpoint you could figure out how you got there. A time travelling debug feature.At this point Intel sold an expensive debug probe for recording the bus, you plugged this insane cable into the processor socket and it actually executed in their external hardware, recording every instruction.My jmp history would have replaced much of that, obviating it's need for the vast majority of users.Ah well, it didn't happen. So now we all rebuild code 'debug' so we can add tracing and tracking, disrupting the execution path, changing timing and code size and on and on.I always regretted not getting that.\n \nreply",
      "Intel x86 cores have had Last Branch Records (LBRs) and Branch Trace Store (BTS) since at least Merom in 2006 [1][2]. Nowadays, there's Processor Trace (PT) or Precise Event-Based Sampling (PEBS) which can provide even more information. PT in particular is almost purpose-built to enable this kind of trace reconstruction.[1] https://stackoverflow.com/questions/14670586/what-is-the-ove...[2] The MSRs for LBRs (MSR_LASTBRANCH_*_{TO,FROM}_IP) and BTS (IA32_DS_AREA) are described in Volume 4, Section 2.2 of the SDM: \"MSRS IN THE INTEL\u00ae CORE\u2122 2 PROCESSOR FAMILY\". Core 2 was launched in 2006.\n \nreply",
      "Those are only sufficient to produce a execution trace rather than a full data trace which is needed for time-travel debugging.Though they are sufficient to do what the person you responded to asked for which is just execution trace.\n \nreply",
      "The Noir support makes sense given its use in ZK proofs where execution tracing is particularly valuable, but I'm really looking forward to the Python and Ruby implementations. Those languages' dynamic nature makes bugs particularly elusive sometimes.Has anyone here tried using this with Noir yet? I'm curious about the performance overhead of the tracing mechanism, especially for longer-running programs. Also wondering if there are plans to support JavaScript/TypeScript for web development use cases.\n \nreply",
      "The planned RR recordings integration is what I'm most excited about though. Having this capability for systems languages like Rust and C++ would be transformative for complex debugging scenarios where you're often forced to restart debugging sessions from scratch after stepping past a crucial point.\n \nreply",
      "the support for system languages (the rr integration \"backend\") is currently closed source.It's not ready yet, and it might be proprietary: it would be great if we can open source it, if we find a sustainable business model for that\n \nreply",
      "This happens all the time and is super irksome. Being able to step backwards as well as forwards is super cool. Also, being able to do that with a loop using a slider is cool.\n \nreply",
      "I need a VSCode extension for this. But alas, it's just sitting in their roadmap...\nTypical. Guess I'll have to roll up my sleeves and build one myself. Not like I have enough on my plate already. At least their trace files are in an open format, so it shouldn't be impossible to hook into the VS Code debugging API.\n \nreply",
      "We'd love additional contributors! We also have some more detailed plans for such an extension. If you're interested in chatting about it, you can join our discord[1] (or we can expand here/in a github issue as well)1: https://discord.com/invite/aH5WTMnKHT\n \nreply",
      "If you are using Clojure or ClojureScript check out FlowStorm:https://www.flow-storm.org/\n \nreply"
    ],
    "link": "https://github.com/metacraft-labs/codetracer",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        CodeTracer is a user-friendly time-traveling debugger designed to support a wide range of programming languages.\n      \n\nTipYou can place the downloaded app in a location of your choosing (e.g., the Applications folder on macOS or ~/.local/share/applications on Linux).\nWhen you launch CodeTracer for the first time, it will prompt you to complete the remaining installation steps, such as adding the command-line utilities to your PATH.CautionUpon the first launch, macOS users will see the error message \"CodeTracer is damaged and can't be opened\". To resolve this problem, please execute the command xattr -c <path/to/CodeTracer.app>. We expect this inconvenience will be remedied soon through our enrollment in the Apple Developer program that will ensure CodeTracer is properly signed and whitelisted by Apple. See https://discussions.appl"
  },
  {
    "title": "Words for the Heart: A treasury of emotions from classical India (bostonreview.net)",
    "points": 7,
    "submitter": "summoned",
    "submit_time": "2025-03-04T02:58:13 1741057093",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=43249766",
    "comments": [
      "Reminds me of The Dictionary of Obscure Sorrows: https://www.thedictionaryofobscuresorrows.com/\n \nreply",
      "\u201cInstead, Bhartrihari tells us, ordinary language is a crystallization of something already implicit in reality. Reality itself is fundamentally linguistic, and what we think of as language\u2014ordinary language, with its words and conceptual divisions\u2014is just a devolution or fragmentation of this more primordial linguistic totality. This is precisely why, for Bhartrihari, the ultimate reality is shabdabrahman, a linguistic absolute.\u201d\u201cIn the beginning was the Word, and the Word was with God, and the Word was God.  The same was in the beginning with God. All things were made by him; and without him was not any thing made that was made. In him was life; and the life was the light of men. And the light shineth in darkness; and the darkness comprehended it not.\u201d  \u2014  John 1, KJV of the Christian Bible\n \nreply",
      "Lovely, thanks for sharing. A reminder that we still have a humanity within ourselves worthy of being tirelessly sought.\n \nreply"
    ],
    "link": "https://www.bostonreview.net/articles/theres-a-word-for-that/",
    "first_paragraph": ""
  },
  {
    "title": "Warewulf is a stateless and diskless container OS provisioning system (github.com/warewulf)",
    "points": 65,
    "submitter": "mooreds",
    "submit_time": "2025-03-06T18:45:47 1741286747",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=43283669",
    "comments": [
      "I've been using Warewulf (&co.) for provisioning bare-metal clusters for decades (back into the Perceus days between Warewulf 1 and 2), it's a solid easy-to-comprehend tool that does things in ways that are transparent and built from generic [u/li]nux tools enough that they're not hard to think about when needed, but automated enough you usually don't have to.Definitely shows its research roots, best-tested with RHEL-alikes, reasonably well tested with Suse and Debian, and you may be in for some extra work if you need provision something else, but that pretty much covers the common cases (and it integrates with containerization tools if you need some specific environment on the nodes).It's a nice to have when you need to spin many nodes.\n \nreply",
      "It\u2019s that old? I can\u2019t believe it took me this long to find Warewulf! I\u2019ve tried the more complex solutions and this looks like what I\u2019ve always dreamed of\n \nreply",
      "Why use warewulf? Seems like there have got to be simpler solutions for dealing with bare metal clusters than all of this.\n \nreply",
      "Perhaps you have not seen some of the other solutions out there in this space.Warewulf _is_ the simpler solution.\n \nreply",
      "Website: https://warewulf.org/Docs: https://warewulf.org/docs/main/\n \nreply",
      "And if you want to pay for support you can reach out to CIQhttps://ciq.com/products/warewulf/\n \nreply",
      "Where does this fit in the Ansible + PXE boot vs Terraform vs NixOS scale? Seems to be within that space, but before the \"infrastructure as code\" phrase was coined.\n \nreply",
      "It's PXE boot for mostly stateless node / disk images, with a template-based overlay system for customizing the image as it's applied to the node.\n \nreply",
      "So with the overlay you can make node-specific changes? I was reading through the initial setup guide but I couldn't figure out how you actually specify which node gets which overlays (or one-off edits of whatever kind).\n \nreply",
      "Weird this does not make use of IPv6. I'd thought this was a given if you have tens of thousands of nodes.\n \nreply"
    ],
    "link": "https://github.com/warewulf/warewulf",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Warewulf is a stateless and diskless container operating system provisioning system for large clusters of bare metal and/or virtual systems.\n      Warewulf is a stateless, network-boot cluster provisioning system designed\nprimarily for use in HPC clusters.\n        Warewulf is a stateless and diskless container operating system provisioning system for large clusters of bare metal and/or virtual systems.\n      "
  },
  {
    "title": "How the Index Card Cataloged the World (2017) (theatlantic.com)",
    "points": 38,
    "submitter": "Tomte",
    "submit_time": "2025-03-06T19:38:57 1741289937",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43284291",
    "comments": [
      "I still carry a \"Hipster PDA\"[1] around, binder clip and all. Said binder clip came out of a box from the 1970s.It's immensely useful in a pinch, it's free form, and I can place it flat on a surface and write on it.And, if I write sensitive information on a card, unlike a regular pocket notebook, I can store it or take a secure photo of it and physically pitch that index card.Thanks, Merlin Mann[2].1. https://en.wikipedia.org/wiki/Hipster_PDA2. https://news.ycombinator.com/user?id=merlinmann\n \nreply",
      "I have only just relented to buying B6+ softcover notebooks for the slightly more room and longer form writing, but the hPDA served me very well for 15 years. Shuffling cards to bring them to the fore has become such an ingrained productivity trigger for task switching over the years.\n \nreply",
      "Has anyone else ever encountered 3x5 cards which are punched and numbered along their perimeter?Saw such a setup once where for each number was assigned a categorization different from the ordering, and for a given card, the matching hole would be opened up, then when searching a set of cards a rod would be inserted at the hole in question and lifted up and jostled, causing the matching cards to be revealed for inspection.Unfortunately, didn't think to ask if was a product, or a mechanism devised by the owner's parent....\n \nreply",
      "Yep, I've used these a long time back when I was a microbiologist, for categorising bacteria. Using two rods meant you could do an AND search in one operation. Also, if you clipped the wrong hole, you could fix it with Sellotape. I can't remember what they were called though.Fun to be reminded of them!\n \nreply",
      "https://en.wikipedia.org/wiki/Edge-notched_card\"Needle Card\", \"McBee Card\", \"Indecks\", \"E-Z Sort\", \"Cope-chat\", \"Keysort\", \"Flexisort\", \"Velom card\", \"Rocket card\", \"Slotted card\" and variations on those all redirect to that article[1].1: https://en.wikipedia.org/w/index.php?title=Special:WhatLinks...\n \nreply",
      "Advent of Computing did an episode about edge-notched cards (and the host has an interest in them that goes beyond just this episode): https://adventofcomputing.com/?guid=4f6df5dd432d489db6d2a211...Douglas Englebart apparently used them and had devised his own filing system. (I don't recall if that's discussed in this or another episode.)\n \nreply",
      "https://archive.ph/kQaJV\n \nreply",
      "TIL that Carl Linneaus invented the 3x5 card. Good stuff.\n \nreply",
      "TIL playing cards were printed with a blank reverse side that people used for scrap paper, lottery tickets, business cards, birth/death announcements, etc.\n \nreply",
      "Related: https://www.iheart.com/podcast/105-behind-the-bastards-29236...\n \nreply"
    ],
    "link": "https://www.theatlantic.com/technology/archive/2017/12/how-the-index-card-catalogued-the-world/547271/",
    "first_paragraph": "Carl Linnaeus, the father of biological taxonomy, also had a hand in inventing this tool for categorizing anything. An Object Lesson.Like every graduate student, I once holed up in the library cramming for my doctoral oral exams. This ritual hazing starts with a long reading list. Come exam day, the scholar must prove mastery of a field, whether it\u2019s Islamic art or German history. The student sits before a panel of professors, answering questions drawn from the book list.To prepare for this initiation, I bought a lifetime supply of index cards. On each four-by-six rectangle, I distilled the major points of a book. My index cards\u2014portable, visual, tactile, easily rearranged and reshuffled\u2014got me through the exam.Yet it never occurred to me, as I rehearsed my talking points more than a decade ago, that my index cards belonged to the very European history I was studying. The index card was a product of the Enlightenment, conceived by one of its towering figures: Carl Linnaeus, the Swedish"
  },
  {
    "title": "A brief meditation on formal systems and lying goblins (the-nerve-blog.ghost.io)",
    "points": 20,
    "submitter": "mprast",
    "submit_time": "2025-03-06T22:00:38 1741298438",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=43285485",
    "comments": [
      "There is another version of this puzzle with a third goblin who flips a coin and depending on the outcome he will lie or tell the truth. The player is allowed 3 yes/no questions and the objective is to assign the three identities unambiguously.I can post the solution in 24h. Have fun! ^^\n \nreply",
      "https://www.hillelwayne.com/post/knights-knaves/\n \nreply",
      "I see this problem differently, as mainly exhibiting a problem that cannot be analyzed without self-reference. Self-reference causes problems.The more obvious solution that the postscript hints at is the question \"what would you say if I asked you whether [this door] leads to the castle?\". Here, we immediately cancel out the influence of whatever goblin we're speaking to, and we get the right answer, whereas in the movie's solution we immediately incorporate the influence of the lying goblin and get the wrong answer.But the movie's solution is better for the movie, because \"what would you say if I asked you X?\" is a normal English way to ask \"X\", and in this case, where the two questions are different, the audience is guaranteed to be confused.\n \nreply",
      ">  \"what would you say if I asked you whether [this door] leads to the castle?\".Very clever. If the goblin is lying, the double negation cancels out. If the goblin is telling the truth, the truth remains unchanged.Personally, I didn't find the article very clarifying. Instead, I like to think of the goblins A and B as functions that take in the truth value of a statement and output an answer.One goblin's function yields the boolean not of the result, and the other passes it through unchanged. You don't know which goblin has which functions, so the two ways to get a reliable answer out are:    A(A(question))\n\n    A(B(question))\n\nThe former is your answer here, which does the double negation. The latter is the answer in the movie where you pass it through both goblins which means the answer will reliably have its truth value flipped exactly once.The nice thing about the latter solution is that it scales up to more goblins and an arbitrary ratio of liars. Let's say there are four goblins, Ann, Ben, Cat, and Dan. Two always lie and two always tell the truth. You can ask \"Would Ann say that Ben would say that Cat would say that Dan would say that door 1 leads to the castle?\" In other words:    A(B(C(D(question))))\n\nIn this case, the answer tells you if door 1 is correct because there are an even number of liars so the negations cancel out. If the number of liars is odd, you flip the result.\n \nreply"
    ],
    "link": "https://the-nerve-blog.ghost.io/a-brief-meditation-on-formal-systems-and-lying-goblins/",
    "first_paragraph": "The other day I came across some people on The Internet talking about a certain scene from Labyrinth, which is a movie from the 80s (if you haven't seen it you should - lavish musical numbers, very unsettling Jim Henson puppetry, David Bowie doing contact juggling in spandex, it's really got it all!) The scene plays out like so (lightly edited by me):Goblin 1: The only way out of here is to try one of these doors.\n\nGoblin 2: One of them leads to the castle at the center of the labyrinth, and the other one leads to (bum bum bum bum!) certain death!\n\nBoth Goblins: Ooooooo!\n\nSarah: Which one is which?\n\nGoblin 1: Erm...we can't tell you.\n\nSarah: Why not?\n\nGoblin 2: You can only ask one of us. It's in the rules! And I should warn you that one of us always tells the truth and one of us always lies. That's a rule too. (Points to other goblin) He always lies.\n\nGoblin 1: I do not! I tell the truth!\n\nGoblin 2: Oh, what a lie!\n\n(Both goblins chortle)This is a classic riddle, perhaps the most famo"
  }
]