[
  {
    "title": "PEP 750 \u2013 Template Strings (python.org)",
    "points": 340,
    "submitter": "grep_it",
    "submit_time": "2025-04-10T20:24:01 1744316641",
    "num_comments": 188,
    "comments_url": "https://news.ycombinator.com/item?id=43647716",
    "comments": [
      "It's fascinating how differently languages approach the string formatting design space.- Java's been trying to add f/t-strings, but its designers appear to be perfectionists to a fault, unable to accept anything that doesn't solve every single problem possible to imagine: [1].- Go developers seem to have taken no more than 5 minutes considering the problem, then thoughtlessly discarded it: [2]. A position born from pure ignorance as far as I'm concerned.- Python, on the other hand, has consistently put forth a balanced approach of discussing each new way of formatting strings for some time, deciding on a good enough implementation and going with it.In the end, I find it hard to disagree with Python's approach. Its devs have been able to get value from first the best variant of sprintf in .format() since 2008, f-strings since 2016, and now t-strings.[1]: https://news.ycombinator.com/item?id=40737095[2]: https://github.com/golang/go/issues/34174#issuecomment-14509...\n \nreply",
      "Go(lang)'s rejection makes sense.A format function that arbitrarily executes code from within a format string sounds like a complete nightmare.  Log4j as an example.The rejection's example shows how that arbitrary code within the string could instead be fixed functions outside of a string.  Safer, easier for compilers and programmers; unless an 'eval' for strings is what was desired.  (Offhand I've only seen eval in /scripted/ languages; go makes binaries.)\n \nreply",
      "In many languages, f-strings (or f-string like constructs) are only supported for string literals, not user-supplied strings.When compiling, those can be lowered to simple string concatenation, just like any for loop can be lowered to and represented as a while.\n \nreply",
      "What's the risk of user supplied strings? Surely you know their size. What else is there to worry about?",
      "> A format function that arbitrarily executes code from within a format stringSo, a template? I certainly ain't gonna be using go for its mustache support.\n \nreply",
      "Value types anyone? I have zero doubt it is tough to add and get right, esp. to retrofit, but it has been so many years that I have learned/discarded several new languages since Java... and they STILL aren't launched yet.\n \nreply",
      "D had a big blow up over string interpolation. Walter wanted something simple and the community wanted something more like these template ones from Python (at least from scanning the first little bit of the PEP). Walter eventually went with what the community wanted.\n \nreply",
      "Then there is Ruby, which just has beautiful string formatting without strange decorators.\n \nreply",
      "That tracks. Ruby followed in the footsteps of Perl, which had string manipulation as a main priority for the language.\n \nreply",
      "> Go developers seem to have taken no more than 5 minutes considering the problem, then thoughtlessly discarded it: [2]. A position born from pure ignorance as far as I'm concernedThere are a million things in go that could be described this way.\n \nreply"
    ],
    "link": "https://peps.python.org/pep-0750/",
    "first_paragraph": "This PEP introduces template strings for custom string processing.Template strings are a generalization of f-strings, using a t in place of\nthe f prefix. Instead of evaluating to str, t-strings evaluate to a new\ntype, Template:Templates provide developers with access to the string and its interpolated\nvalues before they are combined. This brings native flexible string\nprocessing to the Python language and enables safety checks, web templating,\ndomain-specific languages, and more.Python introduced f-strings in Python 3.6 with PEP 498. The grammar was\nthen formalized in PEP 701 which also lifted some restrictions. This PEP\nis based on PEP 701.At nearly the same time PEP 498 arrived, PEP 501 was written to provide\n\u201ci-strings\u201d \u2013 that is, \u201cinterpolation template strings\u201d. The PEP was\ndeferred pending further experience with f-strings. Work on this PEP was\nresumed by a different author in March 2023, introducing \u201ct-strings\u201d as template\nliteral strings, and built atop PEP 701.The authors of t"
  },
  {
    "title": "The Story Behind \u201c100 Go Mistakes and How to Avoid Them\u201d (thecoder.cafe)",
    "points": 143,
    "submitter": "Kerrick",
    "submit_time": "2025-04-10T20:47:01 1744318021",
    "num_comments": 47,
    "comments_url": "https://news.ycombinator.com/item?id=43647880",
    "comments": [
      ">I tried to explain how review workflows work in a PR-based setup, and gave concrete suggestions for how we could improve the process. But they didn\u2019t want to try it. That might sound like a small thing, but at that stage, all I wanted was a smooth and efficient collaboration process. The easier it was for me to track changes, the better.I'm surprised the copy editor was more comfortable using git than using a web-based review tool to leave comments, especially given that she was reviewing a Go book and didn't seem to know what Go was.How does that even happen? It seems bizarre that Manning had this copy editor at all.I recently had a negative experience with Manning. I sent them an email saying that I'm in the process of writing a book, and I'm self-publishing it, but I was curious about the possibility of applying to Manning for a second edition. I asked whether they accept second editions after a self-published first edition and what document formats they accept.I got back a form letter telling me that they'd rejected my proposal. When I followed up and said I didn't send a proposal but was asking preliminary questions, they told me that they understood I hadn't sent a proposal, but they were going off of the table of contents on my book's website. I guess they decided to pre-emptively reject me?They also only said Google Docs as a document format, but based on this blog post, clearly they accept AsciiDoc.\n \nreply",
      "Hello fellow Manning author! This book is fantastic. I remember reading through a lot of it a couple years back. Super helpful and it's one of those books you can pick up, grab a nugget or two of good info and come back later.Now that I'm starting another big Go project I'm going to look at it again.What I like most about this book is it feels like it's all \"real world\" stuff. You can tell the author has built a lot with Go and can save you time by telling you were the potholes are. Great stuff!\n \nreply",
      "> Adding comments in the source code itselfI've worked with editorial teams and I'd rather have that than PDFs and/or Word files without version control.\n \nreply",
      "This book format lends itself very nicely to a book club. I was in one with both new and experienced gophers. The mistakes are great discussion points. The veterans got to share stories when they've made whatever mistake or how they've avoided it over the years. The noobs often made comparisons with other languages.A little secret about the book is a lot of the \"mistakes\" are introductions to some aspect of Go worded as a mistake. \"Not using fuzzing\" and \"Not using errgroup\" are a couple of examples.\n \nreply",
      "On the topic of copy editing you raise: I wrote a book in DocBook for Manning in 2010. DocBook is XML, so I structured it with opening / end tags on their own line, content in the middle. As you would with a HTML document.After copy editing multiple chapters, they sent it back to me with all the content on a single line. I was so incredibly upset that they ditched all my painstaking format that I almost abandoned the project there + then.It sounds like from your experience that it has barely changed. I ended up moving to self-publishing so I have a greater control over the whole process. I wrote it up long-form here: https://ryanbigg.com/2015/08/my-self-publishing-success-stor...\n \nreply",
      "If you\u2019re interested in publishing a book, please reach out and let me know what\u2019s blocking you. My email address is in my profile. I\u2019m not selling anything here, I want to understand the issues you\u2019re facing.\n \nreply",
      "Per author, this book started the \"100 _ Mistakes and How to Avoid Them\" series. That opened a whole new avenue of books based on programming language.\n \nreply",
      "This is a lovely write up. I don't have anything real to add in this comment, but somehow just clicking the upvote button doesn't feel like enough.\n \nreply",
      "I just noticed my post was on HN. Thank you very much :)\n \nreply",
      "Just came here to write exactly the same!\n \nreply"
    ],
    "link": "https://www.thecoder.cafe/p/100-go-mistakes",
    "first_paragraph": ""
  },
  {
    "title": "Garfield Minus Garfield (garfieldminusgarfield.net)",
    "points": 464,
    "submitter": "mike1o1",
    "submit_time": "2025-04-10T17:21:03 1744305663",
    "num_comments": 166,
    "comments_url": "https://news.ycombinator.com/item?id=43646095",
    "comments": [
      "Something that I find delightful about this project is that Jim Davis approves of it!From Wikipedia: \"Jim Davis, the creator of Garfield, approved of the project, and an official Garfield book (also called Garfield Minus Garfield) was published by his company. It was mainly edited comics by Walsh, with some comics contributed by Davis.\"\n \nreply",
      "See also \"What Jim Davis thinks of G-G\" (linked from the bottom of the page):https://garfieldminusgarfield.net/private/61669516/fSymsOGXO...\n \nreply",
      "Careful; the Dan walsh hyperlink goes straight to porn!\n \nreply",
      "Sweet, thanks for letting me know!\n \nreply",
      "Pathological case for link rot.\n \nreply",
      "Also makes me wonder if people talk to their cats...\n \nreply",
      "Not only do I really l talk to my cats, but they talk to me too! We're about equal in our abilities to understand each other; sometimes one of my cats might just run around for a bit yell-meowing and it's not clear why, but I'm sure they feel the same way when I occasionally get upset at things. Other times, like when one of them starts whine-meowing when I'm putting their wet food into a bowl, I know _exactly_ what's she's saying even if it doesn't actually cause me to get it done any faster.\n \nreply",
      "I 100% talk to mine!\n \nreply",
      "This is the link that I had in mind when I was writing my comment, thanks so much for posting it here!\n \nreply",
      "Jim created Garfield for money[1]. It's not surprising that he likes anything that can make him more money, he isn't personally tied to the character.[1] Garfield was originally created by Davis with the intention to come up with a 'good, marketable character' https://en.wikipedia.org/wiki/Garfield\n \nreply"
    ],
    "link": "https://garfieldminusgarfield.net",
    "first_paragraph": "G-G on Facebook - G-G on TwitterG-G on Facebook - G-G on Twitter"
  },
  {
    "title": "Big Book of R (bigbookofr.com)",
    "points": 162,
    "submitter": "sebg",
    "submit_time": "2025-04-10T17:34:19 1744306459",
    "num_comments": 43,
    "comments_url": "https://news.ycombinator.com/item?id=43646219",
    "comments": [
      "Any Julians comment?Having seen Julia proposed as the nemesis of R (not python, that too political, non-lispy)>the creator of the R programming language, Ross Ihaka, who provided benchmarks demonstrating that Lisp\u2019s optional type declaration and machine-code compiler allow for code that is 380 times faster than R and 150 times faster than Python(Would especially love an overview of the controversies in graphics/rendering)https://news.ycombinator.com/item?id=42785785\n \nreply",
      "Tangentially, R can help produce living Markdown documents (.Rmd files). A couple of ways include pandoc with knitr[0] or my FOSS text editor, KeenWrite[1]. I've kept the R syntax in KeenWrite compatible with knitr. Living documents as part of a build process can produce PDFs that are always up-to-date with respect to external data sources[2], which includes source code.[0]: https://yihui.org/knitr/[1]: https://keenwrite.com/[2]: https://youtu.be/XSbTF3E5p7Q?list=PLB-WIt1cZYLm1MMx2FBG9KWzP...\n \nreply",
      "There is also Quarto, which I have had a good experience with: https://quarto.org/\n \nreply",
      "I'm more excited about https://typst.app/\n \nreply",
      "Quarto can output to Typst (as well as many other outputs simultaneously, e.g. .docx, HTML, PDF, PPT, etc) for it's typesetting capabilities. https://quarto.org/docs/output-formats/typst.html\n \nreply",
      "R is beautiful for writing data rich books and websites. I started with rmarkdown but believe that most of the new developments are now in quarto?\n \nreply",
      "Yes, that's correct. Quarto is language agnostic and Posit has chosen that route over just being an R shop.\n \nreply",
      "Last time I was working on something complex, I was able to knit from Rmd to md, and then use my usual pandoc defaults, which was quite neat. Big recommendation on that workflow.\n \nreply",
      "R especially dplyr/tidyverse is so underrated. Working in ML engineering, I see a lot of my coworkers suffering through pandas (or occasionally polars or even base Python without dataframes) to do basic analytics or debugging, it takes eons and gets complex so quickly that only the most rudimentary checks get done. Anyone working in data-adjacent engineering work would benefit from R/dplyr in their toolkit.\n \nreply",
      "I love R and dplyr. It is very readable and easy to explain to non-programmers. I use it almost everyday.\nNot exactly on the topic,I am having difficulties debugging it. May be I need to brush up on debugging R. Not sure if there is a easy way to add breakpoint when using vscode.\n \nreply"
    ],
    "link": "https://www.bigbookofr.com/",
    "first_paragraph": "Oscar Baruffa 2025-02-08Thanks for stopping by. If you\u2019re like me, you can\u2019t help but bookmark every R-related programming book you find in the hopes that one day you, or someone you know, might find it useful.Hopefully this is the only bookmark you\u2019ll need in future ;).When I initially released this collection in late August 2020, it contained about 100 books that I\u2019d been collecting over the previous two years. Since then I\u2019ve found a few more and there have been contributions from many people. The collection now stands at over 400 free, open-sourced books.Most of these are free. Some are paid but usually quite affordable.If there\u2019s something specific you\u2019re looking for, use the menu or search using the magnifying glass icon at the top of the screen.If you\u2019d like to show your appreciation with a donation you\u2019re most welcome to do so here:Please feel free to contribute paid and free books - see GitHub. or submit via the Google Form.I want to give a special thanks to the folks at Fatho"
  },
  {
    "title": "My Own Private Binary: An Idiosyncratic Introduction to Linux Kernel Modules (muppetlabs.com)",
    "points": 94,
    "submitter": "spudlyo",
    "submit_time": "2025-04-10T19:29:46 1744313386",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=43647294",
    "comments": [
      "This is a long essay, and here is my pitch as to why you should read the whole thing if you have any interest in subjects like C programming, binary formats, kernel modules, or assembler.Breadbox, the author, wants to make smaller binary executables. He explains about ELF binaries, a.out binaries, old MSDOS .COM binaries, and how the later had no metadata, and could be very small. He then explains how you can dynamically load code that deals with new executable binary formats into the Linux kernel, and how this process works. He walks through some sample C for building a \"Hello World\" kernel module. He then walks you through ~1 page of code for a kernel module that registers a new binary format, sets up some callbacks, and if conditions are right, will vm_mmap() the code into memory and call start_thread() on it.Yay, it works! He has a tiny binary. This is where most articles would end, but Breadbox goes deeper. What if you want a stack and a heap? What if you want to access argc, argv, and envp? What if you want to append code at the end that automatically calls the exit syscall? All these details are covered, and I think it's glorious.While this all may seem like pretty dry stuff, there is humor sprinkled throughout, which makes it more fun to read.\n \nreply",
      "Thanks for sharing, brought back memories of using debug.exe to meticulously type in hex copied from a magazine to generate a .com executable.Ah, the pre-internet was glorious.\n \nreply",
      "I really enjoyed reading it, and I hadn't seen it before. Thank you for sharing it here.\n \nreply",
      "i truly appreciate your tl;dr!\n \nreply",
      "As did I. Would be great if this catches on!\n \nreply",
      "This is a very good read and excellent in that we hope everyone knows about these things -- how computers actually work and how efficient and simple things can be -- but some readons probably don't, and this wonderfully accessible write-up is a good way to learn. And for those who know most of these details it  is wonderfully refreshing.\n \nreply",
      "I really like picking up arcane UNIX/Linux knowledge. In the 90s, I was asked in an interview by a wizened old UNIX greybeard what the brk system call did, and what I would think if I saw it pop up frequently in the strace output of a program I was trying to diagnose. I did not then know the answer to that question, and I subsequently bombed the rest of that interview. If I would have read this article I could have told him stood for \"program break\" and mentioned that it was an end-of-heap marker, and that I should expect that the program was calling malloc (which was then implemented with brk) a lot. I probably would have still bombed the other interviews, but I could have at least momentarily impressed the crusty old sysadmin.Nowadays however, interviewers are rarely impressed with what arcane knowledge you may or may not have, regardless of how hard won the experiences were that taught it to you.I was reminded of this when reading the \"Demystifying the shebang\" article today on HN when I saw it in some strace output, which along with the other similarities got me to thinking about this article.\n \nreply",
      "This is amazing and I wish I had access to this resource months ago when I explored a new binary format as well.\n \nreply"
    ],
    "link": "https://www.muppetlabs.com/~breadbox/txt/mopb.html",
    "first_paragraph": "Several years ago, I spent a serious chunk of time figuring out how to\nmake really teensy ELF executable files. I started down this path\nbecause I was annoyed that all of my programs, no matter how short\nthey were, never got smaller than 4k or so. I felt that was excessive,\nfor C, and so I started looking at what ELF files contained, and how\nmuch of that actually needed to be there. (And then, after a while,\nhow much of it was supposed to be there but could be ripped out\nanyway.) Anyway, I eventually managed to shrink an executable down to\n45 bytes, and I was able to demonstrate that that was the smallest\npossible size an ELF executable could be and still run, under x86\nLinux at least.I wrote up my findings, and\nsome people found it interesting, and I got some positive feedback. A\ncouple of people naturally pointed out that a shell script that did\nthe same thing was much shorter than 45 bytes, to which my response\nwas always that a shell script is not an executable, and if you want\nto "
  },
  {
    "title": "Fintech founder charged with fraud; AI app found to be humans in the Philippines (techcrunch.com)",
    "points": 71,
    "submitter": "noleary",
    "submit_time": "2025-04-10T23:36:54 1744328214",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=43648950",
    "comments": [
      "I've been flagged as a potential shoplifter by the self-checkout at the grocery store based on some video analysis of CCTV footage of my hand motions. (It was wrong, of course.) After leaving the store I wondered if it really was software analysis or just some guy in India or the Philippines watching a live feed of me scanning bananas.\n \nreply",
      "At the Circle K they have the option of doing self checkout by putting all your items under a camera and the register will automagically count 'em up and assess your total. I keep wondering if it's done by AI -- All Indians. Same with the OCR ATMs do on cheques.\n \nreply",
      "I was wondering why there wasn't a DOJ concern when Amazon Go did the same thing:> Amazon Go: Early on, Amazon was clear that it was testing \u201cJust Walk Out\u201d tech \u2014 and it was known (at least in tech circles) that they had humans reviewing edge cases through video feeds. Some even joked about the \u201chumans behind the AI.\u201d\n> Their core claim was that eventually the tech would get better, and the human backup was mostly for training data and quality assurance.\n> They didn\u2019t say, \u201cthis is 100% AI with zero human help right now.\u201d> Nate: Claimed it was already fully automated.\n> Their CEO explicitly said the AI was doing all the work \u2014 \u201cwithout human intervention\u201d \u2014 and only used contractors for rare edge cases.\n> According to the DOJ, the truth was: humans were doing everything, and AI was just a branding tool.\n> Investors were told it was a software platform, when it was really a BPO in disguise.\n \nreply",
      "Amazon didn't raise money from credulous investors. Alphabet's Waymo was also having humans take over for some of the driving as well.And everyone knows that ChatGPT Pro is exclusively powered by capuchin monkeys.\n \nreply",
      "Sadly, I think we all know the answer - because laws don't apply to large corporations or wealthy, powerful individuals in the same way they apply to the rest of us.\n \nreply",
      "I had no idea. There was an Amazon Go right in my workplace in 2019 (Brookfield Place) and I got lunches there almost daily. I loved it -- felt like magic, and it was crazy fast. I guess it was just an illusion (as all magic is).\n \nreply",
      "Exactly.\nIn this case it's pretty clear how Nate was defrauding investors with the claims.\nAmazon Go made fraudulent claims, but not only had the legal savvy to hedge those claims, they didn't directly raise fund from investors based on those claims.IANAL, of course.\n \nreply",
      "AI standards for \"actually Indians.\"It's the same tech used at Intuit Dome for the food stalls.\n \nreply",
      "I'm curious when it crossed the line into \"fraud\" here. Since almost every \"AI\" application has tons of human fallback. Waymo has human drivers that can teleoperate the vehicle when it gets stuck. The Amazon Go stores were really powered by teams in India [0]. And companies have been pitching \"powered by AI\" for a decade.Perhaps this came up because investors finally got a peak at margins and saw there was a giant off shore line item. Otherwise it seems like an \"automation rate\" is a really ambiguous number for investors to track.> This type of deception not only victimizes innocent investorsAlso this was a funny line[0] https://www.businessinsider.com/amazons-just-walk-out-actual...\n \nreply",
      "Crossing the line into fraud is how you pitch it.\n \nreply"
    ],
    "link": "https://techcrunch.com/2025/04/10/fintech-founder-charged-with-fraud-after-ai-shopping-app-found-to-be-powered-by-humans-in-the-philippines/",
    "first_paragraph": "\n\n\t\tLatest\t\n\n\n\t\tAI\t\n\n\n\t\tAmazon\t\n\n\n\t\tApps\t\n\n\n\t\tBiotech & Health\t\n\n\n\t\tClimate\t\n\n\n\t\tCloud Computing\t\n\n\n\t\tCommerce\t\n\n\n\t\tCrypto\t\n\n\n\t\tEnterprise\t\n\n\n\t\tEVs\t\n\n\n\t\tFintech\t\n\n\n\t\tFundraising\t\n\n\n\t\tGadgets\t\n\n\n\t\tGaming\t\n\n\n\t\tGoogle\t\n\n\n\t\tGovernment & Policy\t\n\n\n\t\tHardware\t\n\n\n\t\tInstagram\t\n\n\n\t\tLayoffs\t\n\n\n\t\tMedia & Entertainment\t\n\n\n\t\tMeta\t\n\n\n\t\tMicrosoft\t\n\n\n\t\tPrivacy\t\n\n\n\t\tRobotics\t\n\n\n\t\tSecurity\t\n\n\n\t\tSocial\t\n\n\n\t\tSpace\t\n\n\n\t\tStartups\t\n\n\n\t\tTikTok\t\n\n\n\t\tTransportation\t\n\n\n\t\tVenture\t\n\n\n\t\tEvents\t\n\n\n\t\tStartup Battlefield\t\n\n\n\t\tStrictlyVC\t\n\n\n\t\tNewsletters\t\n\n\n\t\tPodcasts\t\n\n\n\t\tVideos\t\n\n\n\t\tPartner Content\t\n\n\n\t\tTechCrunch Brand Studio\t\n\n\n\t\tCrunchboard\t\n\n\n\t\tContact Us\t\nAlbert Saniger, the founder and former CEO of Nate, an AI shopping app that promised a \u201cuniversal\u201d checkout experience, was charged with defrauding investors on Wednesday, according to a press release from the U.S. Department of Justice.Founded in 2018, Nate raised over $50 million from investors like Coatue and Forerunner Ventures, most recently raising a $38 "
  },
  {
    "title": "Demystifying the (Shebang): Kernel Adventures (crocidb.com)",
    "points": 90,
    "submitter": "thunderbong",
    "submit_time": "2025-04-10T18:21:45 1744309305",
    "num_comments": 23,
    "comments_url": "https://news.ycombinator.com/item?id=43646698",
    "comments": [
      "Fun fact: you can stick a null byte into the shebang line to terminate it, as an alterantive to the newline.It's possible to have a scripting language support extra command line arguments after the null byte, which is less disruptive to the syntax than recognizing arguments from a second line.I.e.  #!/path/to/interpreter --arg<NUL>--more --args<LF>\n\nOr  #!/usr/bin/env interpreter<NUL>--all --args<LF>\n\nOn some OS's, you only get one arg: everything after the space, to the end of the line, is one argument.When we stick a <NUL> there, that argument stops there; but our interpreter can read the whole line including the <NUL> up to the <LF> and then extract additional arguments between <NUL> and <LF>https://www.nongnu.org/txr/txr-manpage.html#N-74C247FDThe interpreter could get the arguments in other ways, like from a second line after the hash bang line. But with the null hack, all the processing revolves around just the one hash bang line. You can retrofit this logic into an interpreter that already knows how to ignore the hash bang line, without doing any work beyond getting it to load the line properly with the embedded nul, and extract the arguments. You dont have to alter the syntax to specially recognize a hash bang continuation line.\n \nreply",
      "Less fun fact: you can't substitute a <cr><nl> for <nl>.I had a Perl script (way) back in the day that came from a Windows system and it wouldn't work on Linux. After I figured out <cr><nl> was causing the problem, I figured it out what bin_script (might have been in bin_misc) was doing wrong. bin_script sees \"/bin/perl<cr>\" and then fails to find that interpreter.So I proposed a one line change which fixed the glitch and posted it to LKML \u2026 and promptly got yelled at by Allan Cox for breaking compatibility. I dunno if the null byte breaks the same compatibility. Chapter and verse weren't cited.\n \nreply",
      "Null de facto works, and it's almost certainly due to a consequence of the kernel treating the result of extracting the argument as a C string. For instance, it might actually be scanning past the NUL and earnestly finding the newline. Even if that entire datum is copied into the argument vector and passed to the interpreter. the interpreter will only see the argument up to the null terminator, due to it being a C string.About the only way it could break would be if the kernel used a string function to look for the newline, like a range-limited form of strchr, and then aborted the hash bang dispatch with an error upon not finding the newline, rather than accepting that the argument is delimited by a null.I tested it on various platforms like MacOS, Solaris, some BSDs, Cygwin, Linux. Far from exhaustive but a good coverage of the modern desktop and server landscape.The null byte would have fixed your Perl script without having to convert the line endings; the argument would have been delimited, in spite of the line ending in <CR><LF>.\n \nreply",
      "One of my favourite old-school Perl magic spells used to portably handle broken shells is:  #!/usr/bin/perl\n  eval 'exec /usr/bin/perl -S $0 ${1+\"$@\"}'\n    if 0;\n\nSee: https://www.perl.com/article/bang-bang/\n \nreply",
      "If you found this article interesting, you might also enjoy \"My Own Private Binary: An Idiosyncratic Introduction to Linux Kernel Modules\"[0] and the previous discussion[1] of it on HN.[0]: https://www.muppetlabs.com/~breadbox/txt/mopb.html[1]: https://news.ycombinator.com/item?id=29291804\n \nreply",
      "Read your article, it's really nice. I really feel much less demystified by this.But can you / somebody please explain what this meansAccording to the official Kernel Admin Guide:This Kernel feature allows you to invoke almost (for restrictions see below) every program by simply typing its name in the shell. This includes for example compiled Java(TM), Python or Emacs programs. To achieve this you must tell binfmt_misc which interpreter has to be invoked with which binary. Binfmt_misc recognises the binary-type by matching some bytes at the beginning of the file with a magic byte sequence (masking out specified bits) you have supplied. Binfmt_misc can also recognise a filename extension aka .com or .exe.It\u2019s another way to tell the Kernel what interpreter to run when invoking a program that\u2019s not native (ELF). For scripts (text files) we mostly use a shebang, but for byte-coded binaries, such as Java\u2019s JAR or Mono EXE files, it\u2019s the way to go!Like, can you give me an example by what you mean. What are its use cases, if any. I read it many times and always with some sort of enthusiasm because of this sentence ending in exclamation point making me feel like it's huge yet I just can't understand it's significance.Does it mean we can have .jar files which can then run shebang like, so we don't need #! , can this also be used for main.go or every other language which has some issues with #! ,I see there being some interpreter for golang, rust etc. which just compiles it but it was just too complex. I am just imagining something like a simple go file which is valid golang but can be run by linux simply by ./ And it autocompiles it...\n \nreply",
      "> \"I really feel much less demystified by this.\"Respectful correction: you feel less mystified, i.e. it has been demystified for you.PS That nit aside, great question. Sorry I can't provide illumination.\n \nreply",
      "The best and most common uses for this are Wine and qemu-static.For example, the following (which I grabbed from Wikipedia) `:DOSWin:M::MZ::/usr/bin/wine:` will register `/usr/bin/wine` to run as the wrapper for any .exe that gets executed, with no extra config needed. It simply sees that you tried to run a PE file and will run it in wine.\n \nreply",
      "Yes you can use binfmt_misc to allow arbitrary executable file format to be passed to an interpreter matched either by a filename extension or a magic number at a specific offset within the executable.https://en.wikipedia.org/wiki/Binfmt_misc\n \nreply",
      "The shebang seems underbaked to me.  There is no way to reference a user's home directory AFIK.  I came across this annoyance when trying to make my python virtual environment portable.\n \nreply"
    ],
    "link": "https://crocidb.com/post/kernel-adventures/demystifying-the-shebang/",
    "first_paragraph": "I write about programming, gamedev, hacking projects, creative code, photography and my thoughts about anything that I like.From my first experience creating a shell script, I learned about the shebang (#!), the special first line used to specify the interpreter for executing the script:So that you can just invoke it with ./hello.sh and it will run with the specified interpreter, assuming the file has execute permissions.Of course, the shebang isn\u2019t limited to shell scripts; you can use it for any script type:This is particularly useful because many bundled Linux utilities are actually scripts. Thanks to the shebang, you don\u2019t need to explicitly invoke their interpreters. For example, there are two (very confusing) programs to create a user on Linux: useradd and adduser. One of them is the actual program that will create the user in the system, the other one is a utility that will create the user, the home directory and configure the user for you. Since I never remember which one is wh"
  },
  {
    "title": "Show HN: I built a tool to manage and compare credit card rewards (getonecard.io)",
    "points": 30,
    "submitter": "jsh1",
    "submit_time": "2025-04-10T21:24:28 1744320268",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=43648145",
    "comments": [
      "Interesting idea, thanks for sharing.Some feedback from using:- It said to use amex blue cash for 3% back at costco, but costco only accepts visa- It said to use amex blue cash for 3% back at harbor freight but this card only gets 1% at this store, the BofA customized cash rewards (added to my wallet) is the only card I have found that gives 3% back on home improvement stores- It said to use amex blue cash for 3% back at BJ's, even though the BJ's rewards card is in my wallet which gives 5% back at this store\n \nreply",
      "The small % you get on each purchase is crumbs, but the cookie is the big sign up bonus you can get. For the past several years I've been making about $2k/year from that, which is so much more than the % bonus that I don't know why anyone would care about getting 3% back rather than 2%. Like if you are that worried about your money, take the free $2k first.\n \nreply",
      "Do you have a system or tool for finding card offers with signup bonuses?Also (this is possibly common knowledge but) your credit score is negatively impacted not just by % of available credit utilized, but also by average age of credit accounts. If you're going to want a significant loan (eg a mortgage) in the forseeable future, something to keep in mind.\n \nreply",
      "I can't find my Amazon Prime rewards card in your search, any chance it's in there under a different name?And for my Discover It card a tool like this is t very useful unless it can handle the rotating reward category (I think one of the Chase freedom cards also has a similar program).I can easily remember most of my static rewards categories, but managing the rotating categories is harder and is where a tool like this would help me best.\n \nreply",
      "Also, many cards have temporary bonuses, like the Savor's previous 10% Uber promo. If they can handle this, thats huge.\n \nreply",
      "What sort of information do you collect on your users? Do you resell their purchase history? Why are you as trustworthy as my bank(s)?Genuine questions I would need answered before considering this. Super cool idea \u2014 but the devil is always in the details!\n \nreply",
      "What \"AI\" is involved in this? It's mostly just a few database lookups based on merchant name and/or category, isn't it? Or is that just marketing gloss, because everything is \"AI\" now?\n \nreply",
      "1. The website looks sleek and has good design.2. I wish I could get a little bit more of a sneak peek / preview before needing to create an account.3. Unrelated to the core business of your website, there's a small \"bug\" in the light/dark theme switch -- the first mouse click doesn't do anything (at least when \"system\" = \"dark\"). This is happening because when you launch the site for the first time and the localStorage is \"clean\", the \"theme\" value is \"system\". But clicking the toggle changes the value to \"dark\", which keeps the current theme as it is.\n \nreply",
      "It could be factored in, but many restaurants near me add a fee for credit card use, usually 2% but I've seen as high as 3.5%.The credit card rewards usually still make sense, but sometimes I pay cash even if I might lose 0.5% on it.\n \nreply",
      "Here is a type of question I wish your site can help me answer:Amazon Fresh online purchases : AMEX Gold or Chase Reserve?\nFormat gives 3x reward for groceries but later have a promo (shown on your web site).\n \nreply"
    ],
    "link": "https://rewards.getonecard.io",
    "first_paragraph": "Add your credit cards to your wallet, and let our AI instantly recommend the best card to maximize rewards at any merchant.Add a few cards and a merchant to see a quick recommendation.Loading available cards...Best card to useBest card to useBest card to useAdd a few cards and a merchant to see a quick recommendation.Loading available cards..."
  },
  {
    "title": "Gemini Live with camera and screen sharing capabilities (blog.google)",
    "points": 69,
    "submitter": "agnosticmantis",
    "submit_time": "2025-04-07T16:53:08 1744044788",
    "num_comments": 35,
    "comments_url": "https://news.ycombinator.com/item?id=43613463",
    "comments": [
      "Wow, so much value add...1. Put a table next to that chair2. Try unplugging and plugging in your modem3. Pair those pants with a white or black shirtRevolutionary advice there, not sure how people have lived without this tech\n \nreply",
      "Don't be so pessimistic, how about these uses:- Let Gemini watch you drive so you can get advice on driving better- Let Gemini help you rewire your outlet for the first time- Let Gemini help you pick edible mushrooms in the forest\n \nreply",
      "It's funny, you are kidding, with the impending death and such, but having it be able to look at what you are seeing seems useful to me. E.g., \"How do I work this contraption?\"\n \nreply",
      "I'm sure you laughed at the words and sentences GPT-2 generated.\n \nreply",
      "It seems that there\u2019s a subset of people who will agree unironically.\n \nreply",
      "They are the target market for this\n \nreply",
      "Marketing should use their imagination!Imagine putting dice and random objects (cups, forks..) on a table, pointing your phone at them and asking it to invent a new game for your friends. Tell it to use these objects and also use the live camera as a gameplay element.Or recognizing bird or plant species.Or helping a blind person go hiking, helping avoid tree roots and describing the beautiful scenes they\u2019re in.So much possibility!\n \nreply",
      "How charitable of you to assume those examples work reliably.\n \nreply",
      "Are you willing to bet that it wouldn't work reliably in a year, 2 years, 5 years?\n \nreply",
      "Watching that demo video, I wonder why they chose to use that?Gemini only talked about some useless surface knowledge that would be forgotten quickly, whereas if she actually read the Wikipedia page she would learn more and retain it better.\n \nreply"
    ],
    "link": "https://blog.google/products/gemini/gemini-live-android-tips/",
    "first_paragraph": "Apr 07, 2025[[read-time]] min read\n          Gemini Live with camera and screen sharing capabilities is now available on Android. Here\u2019s how to get started.\n        \nWith Gemini Live, a tool so grand,\nYou can converse with AI, hand in hand.\nThrough camera lens or screen, you share your view,\nAnd Gemini will help, it's true.\nFrom cluttered rooms to creative blocks,\nIt offers guidance, in helpful talks.\nFor shopping, skills, or just a chat,\nGemini Live, a friend you'll have at that.\nWith Gemini Live, a tool so grand,\nYou can converse with AI, hand in hand.\nThrough camera lens or screen, you share your view,\nAnd Gemini will help, it's true.From cluttered rooms to creative blocks,\nIt offers guidance, in helpful talks.\nFor shopping, skills, or just a chat,\nGemini Live, a friend you'll have at that.In March, we began rolling out the ability to talk live with Gemini about anything you see, whether it\u2019s through your phone\u2019s screen or through its camera. This soon will be available to all Gemin"
  },
  {
    "title": "Why Tap a Wheel of Cheese? (cheeseprofessor.com)",
    "points": 147,
    "submitter": "speckx",
    "submit_time": "2025-04-10T15:35:04 1744299304",
    "num_comments": 113,
    "comments_url": "https://news.ycombinator.com/item?id=43644970",
    "comments": [
      "I am glad that this continues to be done by hand, and expect, based on Italian attitudes towards food and tradition, that it will continue being done by hand for another hundred years.It is interesting how important it seems to us that jobs like this remain done in the traditional way. For all their expertise, I am sure a technical solution would also easily be able to detect what they are looking for: voids within the cheese, or lack of uniform density. This does not seem to be a case where the human expertise and artistry is actually important to the final product, besides the feeling of tradition.Perhaps the best argument for keeping traditional jobs like this is that, even if that exact job could be done by machine, replacing these humans with machines would be the start of a short process that would end up with indistrially-produced bad cheese.\n \nreply",
      "The problem is it's actually a super fun thought experiment/engineering problem to try to figure out how to do this technologically, but any such attempt would (rightly) be taken as an attack on this profession because even if it was a silly blog post about overthinking a silly problem, silly blogposts are potentially upstream of (maybe even someone else) a commercial implementation that eventually destroys a profession.It sucks.\n \nreply",
      "Do professions really get destroyed? Or does the world just change?I used to get paid to do OCR on tax forms. I used n gram models, BERT,etc and it took weeks to get the forms right. Now you can do it in seconds with an api.I wouldn\u2019t say the profession got destroyed. I just work with different tools now. Instead of running ngrams, I\u2019m testing different apis or embedding models.The old job doesn\u2019t exist anymore, in many ways I am the classic example of losing your job to AI-but I wouldn\u2019t say it destroyed the profession. People just use different tools today to get intelligence from PDFs.\n \nreply",
      "Of course professions get destroyed, and it can happen by the world changing. Not sure why they have to be mutually exclusive - You don't see people lighting kerosene lamps on the streets anymore, and I doubt those same types of people are working with streetlights now.\n \nreply",
      "I might not see people lighting kerosene lamps but I see people climb big ladders to fix lamps that light up public spaces.I assume the people doing that work might have been lighting lamps in the past.\n \nreply",
      "The profession of \"lamp lighter\" definitely has been destroyed though. The person that can raise a burning stick to a kerosene lamp has to have a different skill set than the person fixing lamps in public spaces. I'm assuming you don't mean \"screwing in a light bulb\" type work, which would be close enough in skill requirements, that the person whose profession was destroyed could reasonably do the new profession without a lot of learning being required.In the same vein, you doing OCR and now doing other work is not a profession change. You're still a computer scientist doing computer engineering work just on a different problem set.Lamp lighter to cheese tapper is a profession change. A lamp lighter with bad hearing or attention to detail is not a problem per se. Tapping cheese to see if its ripe (and all the other skills that come with cheese making) will potentially be different enough.Now the problem comes in, when lamp lighter is supposed to start doing OCR engineering work. Unless the lamp lighter was horribly over qualified, most lamp lighters will not be able to do OCR engineering or any computer scientist style engineering work at all.Professions do get destroyed all the time. Hopefully while a new profession is born that has similar enough skill level requirements as the previous ones, just in different form. Like a lamp lighter might do well in an Amazon warehouse but not as an AWS software engineer.\n \nreply",
      "\"The profession of \"lamp lighter\" definitely has been destroyed though\"It's somewhat still held by the same people that somewhat-traditionally did the job. In some places, it used to be job of the night watch constable to light the kerosene lamps. Police now days just report a broken traffic light.\n \nreply",
      "The world is constantly changing, some professions are destroyed as the result. This is a tale as old as time. Mark Twain wrote about this on Life on the Mississippi when he was a river boat pilot before trains became common and destroyed the trade.some professions spawn from viable hobbies and some hobbies spawn from unviable professions.\n \nreply",
      "Our culture tends to embrace technological progress. But we don't have to. It's just something we do accept. And yes, many technologies have eliminated jobs. Some have created new ones sure, but it's not always 1 to 1. Not everyone replaced on an assembly line by a robot or machine, is needed to repair or build that new machine.Our tendency to 'progress' doesn't have to be the case, we all could collectively decide to hold ourselves here.Also, I don't think that all our technology has always been good for us either. But we are blind to the downsides mostly.\n \nreply",
      "There\u2019s no course to learn the niche skills and nuances of this trade; Alessandro accompanied and apprenticed with Renato and other experts for about 3 years, learning through firsthand experience how to assess each form.\u201cThe particularity of this profession to me is that it\u2019s like it was 2 years ago, and it\u2019s a skill that\u2019s handed down from dev to dev. You go around with the most expert, most experienced BERTitori, and you watch and listen to them, and slowly they start to give you the keyboard. You try with them next to you, piano piano, and gradually, you begin to do more on your own,\u201d explained Stocchi. \u201cIt\u2019s a big responsibility, you have to be really capable of doing it, you can\u2019t damage the forms.\u201d\n \nreply"
    ],
    "link": "https://www.cheeseprofessor.com/blog/cheese-wheel-tapping",
    "first_paragraph": "Renato Giudici demonstrates his skill photo credit Kristine JannuzziBehind the approximately 4 million wheels of Parmigiano Reggiano produced annually, there is a tiny team of 24 battitori responsible for ensuring the quality of each one. Armed with a small metal hammer, these specialized \u201cdrummers\u201d tap every wheel after the minimum aging period of 12 months, and within 6-7 seconds they can detect if there are any defects, based purely on the sounds they hear.Author Kristine Jannuzzi with Alessandro Stocchi and Renato GiudiciI had the privilege of spending the morning with two of these maestros on the job in Emilia-Romagna: Alessandro Stocchi, a dynamic 37-year-old native of Reggio Emilia who began training to become a battitore in 2014, and his mentor, Renato Giudici, who at 81 years old, embodies a lifetime of passion for Parmigiano Reggiano.\u00a0Renato is a former cheesemaker who made Parmigiano Reggiano for many years, and rather than retire, he chose to become a guardian of the King o"
  },
  {
    "title": "Owning my own data, part 1: Integrating a self-hosted calendar solution (emilygorcenski.com)",
    "points": 305,
    "submitter": "ColinWright",
    "submit_time": "2025-04-10T12:59:54 1744289994",
    "num_comments": 113,
    "comments_url": "https://news.ycombinator.com/item?id=43643343",
    "comments": [
      "I know I will probably get pushback over this, but CalDAV sucks.  People say that it's great and that it's easy; yet if that were true there would be way more self-hosted CalDAV solutions out there and they would be far more ergonomic than what's available.  I was not impressed with Radicale.  Because there's really only one calendar file I wanted to serve to myself, I tried implementing my own CalDAV server just for that purpose and pretty much gave up because of how unintuitive and complicated it was merely to make a single file available.  I can see why it would be needed if sharing a calendar with other people with calendar apps that support CalDAV, but I think it's kind of a waste of time if hosting a calendar for one's self.Instead, initially went with the approach of hosting my dynamically updating iCal file in an S3 bucket and using ICSx5 on Android to sync with it.  No CalDAV needed \u2013 just HTTPS.However, FOSS calendars for Android still suck, and for some reason I couldn't get ICSx5 to work within GrapheneOS, so I now use almost the same approach but with Proton Calendar which happens to support calendars from direct links to iCal files.  It's not perfect, but it suits my needs enough.I think the author's approach for using iCalendar format is a good one, though what I've discovered is the amount of support for various iCalendar features varies drastically between calendar software.  Rather than dealing with that headache, I somewhat gave up and decided to shove most metadata into the description field rather than use the respective properties.EDIT: My use case is software I wrote to grab data from various sites (Eventbrite, Meetup, pub trivia companies, public event calendars, etc.), filter for only social events I would be interested in, and combine them into a single calendar I can view in my normal calendar software.\n \nreply",
      "I worked on the CalDAV client that\u2019s in every Apple product.I agree, the protocol sucks. But we also had a ton of trouble handling Exchange and Google\u2019s non-compliant CalDAV server, which all the users blamed us for.Now that I work at Google I can see that gCal apps use an entirely different protocol.\n \nreply",
      "Would be nice if you use your experience and financial stability of a Google job in order to build a better open-source protocol. Just like when ZX2C4 decided he's fed up with OpenVPN and went to create Wireguard this might be your moment to shine.IMO the quality of software is only pushed forward by motivated individuals with the right skillset.\n \nreply",
      "The JMAP for Calendars RFC [1] is soon to get published by IETF.\nDisclaimer: I work for Fastmail and am the co-author of RFC 8984 [2] which defines the calendar event data model used in JMAP.[1] https://www.ietf.org/archive/id/draft-ietf-jmap-calendars-22...\n[2] https://www.rfc-editor.org/rfc/rfc8984.html\n \nreply",
      "Are the protocols compatible enough such that someone could proxy JMAP to CalDAV?\n \nreply",
      "It was 14 years ago, I\u2019ve forgotten everything by now.To be honest if I were to do that today, I\u2019d vibe-code it by writing a strong set of tests against the protocol rfc, then a client against the tests. The client would be low level and have higher level interfaces in various languages.\n \nreply",
      "bflesch might be suggesting that you (or some other motivated + heroic person) write a new spec for calendar collaboration, like what jmap.io is trying to do for mail.I know that calendars and datetime management suck, hard.  I hazard a guess that several people have already started trying to replace caldav (because of the suckage of caldav) and have quietly given up (because of the suckage of datetimes and timezones).\n \nreply",
      "Indeed they do. The hardest bugfix I ever had to do (which I go back to whenever interviews ask that question) was a timezone bug that was going to ruin the iOS 7 on-stage reveal. It only reproduced in customer builds and customer hardware, which we could not debug or get root on. Anyway we traced it to a confluence of rare conditions in a date-math C file that had not been modified since 1987, and was in a completely different style from everything else in the OS. The edge-iest of edge cases.It was hard because of the debugging blindness, not so much date-math itself. We had to do hardware-level things.\n \nreply",
      "I thought the solution to datetime was almost always to use TAI plus a library to convert for display in the UI. (Or UTC and accept that leap seconds might cause bugs.)\n \nreply",
      "Calendar apps expose all of the weird edge cases in dates and times. For a specific instance of a specific event that never needs to move, TAI will work. However, suppose that you schedule a meeting for 28 March at 13:00. You then move that meeting forward a week, crossing a DST switch. If you simply add 604800 seconds to the TAI, that meeting will be at 14:00, which is surprising. OK, easy enough to solve; convert the TAI back to the local timezone, add 7 to the day field (carrying into month and year, as needed), and you're good to go. Now suppose that the meeting was set up in the US, and you realized that you needed to reschedule the meeting while you were travelling in Germany. You get back to the US, and suddenly the meeting is an hour early, because DST rules aren't universal.Worse, imagine a recurring meeting, every week at noon. You've got the TAI for the original instance, but as you cross a DST boundary, some places will shift according to DST and others won't, and thus you have half the attendees showing up at the wrong time.Finally, TAI introduces the leap second bug for calendars. When you schedule a meeting for noon next year, you want that to happen at noon, not now plus however many seconds. If a leap second is introduced, you don't want that meeting to happen at one second before or after noon.TBH, if you find yourself in a situation where you need to deal with calendar events, I recommend updating your CV.\n \nreply"
    ],
    "link": "https://emilygorcenski.com/post/owning-my-own-data-part-1-integrating-a-self-hosted-calendar-solution/",
    "first_paragraph": "The first part of what I hope to be an ongoing series about repatriating and owning my own data and tech. In this post, I describe how I integrated my own self-hosted calendar solution.My calendar is a true nightmare. I travel a lot, some of it for my job, some of it for fun, and some of it because I\u2019ve been managing a long distance relationship for years. Traveling a lot means it\u2019s always hard for your loved ones or coworkers to know what time zone you\u2019re in or when you\u2019re on a plane. Managing a relationship across timezones means having to do constant mental math that is way harder than it needs to be. And because I don\u2019t have an assistant, I\u2019ve become frustrated with double entry of flights, trains, blockers for boarding flights or traveling to the airport, and so on.As someone who travels a lot, it\u2019s also one of those things where statistically speaking, the chances of me being on a plane whenever some newsworthy event happens is higher than for the average person. I want my wife, "
  },
  {
    "title": "Parity (YC S24) is hiring founding engineers to build an AI SRE (in-person SF) (ycombinator.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2025-04-10T22:23:48 1744323828",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.ycombinator.com/companies/parity/jobs",
    "first_paragraph": "The AI SRE for Incident ResponseParity is the AI SRE for Incident ResponseLet's face it: on-call sucks. 2 AM pings, unactionable alerts, and a week of getting behind on your real work.Parity is leveraging AI to make on-call a thing of the past. Our AI agents run investigations to triage, root-cause, and remediate issues in infrastructure autonomously. We have seen great adoption with early customers and are building a product that has the potential to define an emerging category.We're backed by exceptional investors, including Y Combinator, General Catalyst, and Sugar Free Capital. We're also supported by a great cohort of angels including the founders and early employees of top startups like Midjourney, Crusoe, and more.\u00a9 2025 Y Combinator"
  },
  {
    "title": "Show HN: Koreo \u2013 A platform engineering toolkit for Kubernetes (koreo.dev)",
    "points": 76,
    "submitter": "tylertreat",
    "submit_time": "2025-04-10T14:48:20 1744296500",
    "num_comments": 29,
    "comments_url": "https://news.ycombinator.com/item?id=43644351",
    "comments": [
      "I feel like it needs a comparison with https://kro.run/ and crossplane v2 which makes it more generic and less cluster scoped.\n \nreply",
      "I thought Crossplane v2 was only a design proposal at the moment: https://github.com/crossplane/crossplane/pull/6255But I guess there is an actual preview implementation now? https://docs.crossplane.io/v2.0-preview/The comparison on Kro would definitely be good to include as there are quite a few similarities. I can write up more on how it compares in a bit.\n \nreply",
      "Koreo and Kro share a lot of similarities in that both allow you to build abstractions that encapsulate a lot of complexity. For instance, in Kro you could implement a ResourceGraphDefinition that builds a \"Workload\" abstraction that produces a Workload CRD that, say, lets you specify a container image, a database, and a bucket. Then when you create an instance of this CRD, Kro might map this to a Lambda function, RDS instance, and an S3 bucket, perhaps using ACK for example. In Koreo, this would be a Workflow that has various ResourceFunctions which produce the Lambda, RDS, and S3 bucket. Just like with Kro, this would be triggered off of a CRD. In essence, both let a platform team (or whoever) provide high-level APIs that encapsulate resource management.One difference is just in how the two approach doing this. Koreo takes an approach of providing primitives that can be composed or reused and, importantly, are actually testable (since testing is a first-class thing in Koreo). This lets you more easily validate automations but also makes it easier to provide \"building block\" like components that can be shared between Workflows.Another difference is in how Koreo solves configuration management. Rather than relying on string templating or unstructured YAML overlays, Koreo treats configuration as structured data. This allows you to specify and tweak configurations in a predictable and typesafe way by transforming, validating, and composing them programmatically. Koreo is very much modeled after functional programming principles, so we can, for instance, define functions that validate preconditions or apply standard tags to resources in an environment. This model also enables configuration reuse and overrides across teams and environments without introducing tight coupling or duplication. Instead, we can apply configuration \"layers\" to build up a resource. Kro really focuses more on resource orchestration and leaves the configuration management up to the user.\n \nreply",
      "Also, what's interesting about Koreo is that you can actually build \"meta\" Workflows. That is, Workflows that produce Workflows, meaning you could implement something like Kro itself in Koreo fairly easily. This is why it's really closer to a programming language and runtime for programming Kubernetes control loops.Koreo would also allow you to implement a workload spec such as Score rather easily for the same reason. https://score.dev\n \nreply",
      "Yes, those were exactly my thoughts after reading the introduction. It seems the new meta is adding another meta (heh) level on top of Kubernetes, and kro seems to be the most promising at the moment.\n \nreply",
      "Just one more YAML bro I swear trust me bro just one more meta level will solve everything just one more yaml please I promise you it's not bad just write yaml it's simple and clean just some more yaml man just one more yaml file you will certainly not regret it just add one more yaml(Congratulations on the launch, looks interesting!)\n \nreply",
      "I wrote the core engine behind this and your comment made me laugh pretty hard because I agree.  I debated a lot about the best syntax and we experimented with various alternatives approaches. The core engine actually isn't YAML centric at all, in fact it doesn't use YAML\u2014it is just data structures in and out.We wound up exposing this as YAML purely because there's a lot of tooling out there for dealing with YAML. I am not sure if that's a good reason or not....  Writing the language server was quite nasty because of that choice! Our hope was that the language server and structural type checking (which is very simplistic at the moment) and testing framework can make it feel more like a real language and less YAMLy.\n \nreply",
      "I think I can see some of where this could be utilized, but I think I'm still missing a step and I'm hopeful someone can fill me in.There's a comparison against Argo Workflows, but with the description here and in other comments, Koreo seems to be aiming more for what I would use Argo CD for - managing the entire state of the cluster, the controllers, configuration, etc. Because of it tying into repos, you can then define the entire state of your cluster in code, and Argo CD has tools for doing some of the interpolation of variables into your YAML.The project looks cool, and I don't think that the world suffers from having multiple ways of doing something, I just want to understand it better.\n \nreply",
      "My understanding of Argo CD is limited so forgive me but I believe Koreo is a bit more similar to Argo Workflows. Where the scripts and logic is baked into the Argo Workflow image, in Koreo it leverages other K8s controllers to do the heavy lifting of interacting with the APIs. If I understand Argo CD correctly, it is an implementation of Argo Workflows. In this way, you are able to build your own CI/CD workflow via Koreo if you so wanted.\n \nreply",
      "I feel I've built something similar using fluxcd + cuelang. FluxCD allows having order through depends on and how you organize your Kustomization resource.\nI still believe the FluxCD project needs a UI that matches what you can get from the cli. CLI has so many features that you might or might not get fully from the available UI's.\n \nreply"
    ],
    "link": "https://koreo.dev/",
    "first_paragraph": "Koreo is a new approach to Kubernetes configuration management and resource orchestration empowering developers through programmable workflows and structured dataDefine complex, multi-step processes that react to events and manage the lifecycle of your Kubernetes resources. Koreo workflows enable automation of everything from simple deployments to entire cloud environments. It's like programming\u2014or choreographing\u2014Kubernetes controllers.Manage Kubernetes configurations the way they were intended\u2014as structured data, not just templated strings. This allows you to easily validate, transform, and combine configurations from multiple sources in a manageable and scalable way.Inject values from a config file or overlay partial definitions to build up a complete resource view. Combine configurations from different sources like security, compliance, and SRE, and even apply custom logic, to give developers a golden path for provisioning applications, resources, or anything Kubernetes manages.Insp"
  },
  {
    "title": "SDL2 for macOS 9 \u201crough draft\u201d (macintoshgarden.org)",
    "points": 96,
    "submitter": "helfire",
    "submit_time": "2025-04-10T15:54:50 1744300490",
    "num_comments": 43,
    "comments_url": "https://news.ycombinator.com/item?id=43645183",
    "comments": [
      "It's really a great time to be a classic MacOS developer - tons of resources out there such as Retro68k, AmendHub, and a small but active community of people interested in sharing examples and help.Back in the day when this stuff was modern I didn't have many resources or people to talk to about it, so exploring what could have been is an interesting endeavor.https://github.com/autc04/Retro68\nhttps://amendhub.com/\n \nreply",
      "I tried a little bit 20+ years ago. Bought a 'road Apple' Performa for $50, download Pangea's game programming book, can't remember if I used MPW or CodeWarrior...It wasn't anywhere near as simple as DOS game programming was so I think I just installed YellowDog and used that Mac as a webserver.https://www.pangeasoft.net/book/buy.htmlEdit: I just opened that PDF and I think that's a newer version or I remembered the book wrong.\n \nreply",
      "Wondering what I could do with it ... I rewrote Glypha (an old Mac shareware game I wrote) using modern SDL2. Might be fun to try to \"back port\" (?) it to OS 9 on top of SDL2 (rather than the clunkier CopyBits() calls I used in the original shareware game).\n \nreply",
      "Thank you for providing me with many hours of entertainment on our old Performa 6360 many years ago! Bought the new version on Steam, too.\n \nreply",
      "I'd love to hear how that goes. I've never written any code for OS 9 or earlier. I have heard many things about the brilliance of QuickDraw for writing very fast 2D drawing code on the very limited hardware of the time. I have not heard anything about the actual experience of writing software with QuickDraw calls.I'd also be really interested to know how SDL2 would fare by comparison. Would it be as fast on old hardware? It wasn't built with the assumptions of that old hardware in mind, so I would be very surprised if it performed as well.\n \nreply",
      "There is no such thing as \"macOS 9\".\"Mac OS 9\" or \"OS9\" does, however, exist.\n \nreply",
      "Ya.. A mod edited the title and didn't change it back.\n \nreply",
      "So Mac OS9 is PowerPC macs, but this also covers 68k macs with OS 7.6:> Compatibility\nArchitecture: 68k PPC\nMacOS 9 PPC, MacOS 7.6 M68k, using CodeWarrior 6 and 7 Pro.\n \nreply",
      "Looks neat! SDL seems open to supporting legacy platforms, so hopefully it'll get mainlined at some point (at this point, may be more likely if they port SDL3 though, SDL2 is in maintenance mode). Does anyone know if it's possible to use a new compiler for this rather than CodeWarrior 7? It would make it easier to port stuff to Mac OS 9 if you don't also have to deal with the compiler only supporting old C/C++ standards.\n \nreply",
      "> compiler only supporting old C/C++ standards.That's from back when the c++ standard was a rough suggestion. I had to use code warrior 10 for a project back in 2008ish (when standards compliance seemed to actually be picking up real steam across gcc/llvm/msvc) and it was painful how many things that were standard/supported across the other compilers that would break, we ended up basically falling back to closer to c with classes than anything that would resemble modern (at the time) c++.\n \nreply"
    ],
    "link": "https://macintoshgarden.org/apps/sdl2-macos-9-rough-draft",
    "first_paragraph": ""
  },
  {
    "title": "Clojure: Realtime collaborative web apps without ClojureScript (andersmurphy.com)",
    "points": 8,
    "submitter": "bko",
    "submit_time": "2025-04-08T18:40:23 1744137623",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://andersmurphy.com/2025/04/07/clojure-realtime-collaborative-web-apps-without-clojurescript.html",
    "first_paragraph": "07 Apr 2025Last week I made a fun little multiplayer web app. I've embedded it below:A few things to note about this web app:Surely sending down the whole main body on every change is terrible for performance?!There's no canvas here. There's no SVG. There's just a 1600 cell grid, each cell with it's own on-click listener. This is an incredibly naive implementation. Partly, to show how well it performs. Your CRUD app will be fine.Under the hood Datastar uses a very fast morph algorithm that merges the old <main> fragment with the new <main> fragment only updating what has changed.Update: It was pointed out on the Datastar discord that there is no reason not to leverage HTML bubble up events. Honestly, I completely forgot you could do this (too much time with react I guess?). So now there's only one top level event listener. I've bumped the number of cells to 2500 to keep the volume of data over the wire roughly the same.Surely sending down the whole main body on every change is terrible"
  },
  {
    "title": "Usability Improvements in GCC 15 (redhat.com)",
    "points": 206,
    "submitter": "dmalcolm",
    "submit_time": "2025-04-10T14:03:54 1744293834",
    "num_comments": 156,
    "comments_url": "https://news.ycombinator.com/item?id=43643886",
    "comments": [
      "Usability improvement request for this article: don't hijack the browser back button :P\n \nreply",
      "Browser makers should straight up remove the JS API for interacting with history. There are legitimate uses for it, but the malicious actors far outweigh the good ones at this point. Just remove it.\n \nreply",
      "That's a biased thing to say, since you're never going to notice the times when the history api is being used appropriately. Just as often I find myself raging when a webpage doesn't rewrite history at times when it should. Good taste is hard to come by.\n \nreply",
      "This type of thinking is what doomed uBlock Origin. I strongly disagree.\n \nreply",
      "The difference is that uBlock Origin is an extension you intentionally trust and install, while the JS API we talk about are something any websites (untrusted) can use.\n \nreply",
      "How is uBlock Origin \"doomed\" ?\n \nreply",
      "Ditto for unprompted redirects.\n \nreply",
      "Redirects are used for stuff like POST->GET or canonicalizing URLs (adding slashes on directories), would you get rid of that too?\n \nreply",
      "That's done with HTTP headers though, right? Not JavaScript.\n \nreply",
      "Ah, I see what you mean. The canonicalization is, whereas redirects after processing forms could be done in JavaScript from and on click or on submit handler.\n \nreply"
    ],
    "link": "https://developers.redhat.com/articles/2025/04/10/6-usability-improvements-gcc-15",
    "first_paragraph": "I work at Red Hat on GCC, the GNU Compiler Collection. I spent most of the past year working on how GCC emits diagnostics (errors and warnings) in the hope of making it easier to use. Let's take a look at 6 improvements to look forward to in the upcoming GCC 15.I added a static analyzer to GCC in GCC 10 that prints visualizations of predicted paths of execution through the user's code, demonstrating each problem it predicts.Here's an example that shows some of the improvements I've made to this in GCC 15:I've added a warning emoji (\u26a0\ufe0f) to the event in the path where the problem occurs (event 1 in the above), and I've added \"ASCII art\" to show control flow, such as the lines connecting events 2 and 3, and those connecting events 4 and 5 (compare with the GCC 14 output seen here).Another example of an execution path can be seen in this new -fanalyzer warning -Wanalyzer-undefined-behavior-ptrdiff, which warns about pointer subtractions involving different chunks of memory:There's a line o"
  },
  {
    "title": "Controlling Language and Diffusion Models by Transporting Activations (machinelearning.apple.com)",
    "points": 65,
    "submitter": "2bit",
    "submit_time": "2025-04-10T17:58:02 1744307882",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=43646466",
    "comments": [
      "It's amusing to me that humans seem to have this same problem (\"Do not think of a pink elephant!\")\n \nreply",
      "Multimodal LLM is the true solution but Apple is probably looking for something they can run on-device, at least current generation of devices.\n \nreply",
      "True solution to the problem stated in the article? They're talking about fine-grained control over model outputs, how would multimodality help there?\n \nreply",
      "paper https://arxiv.org/abs/2410.23054v1\n \nreply",
      "OK - basic plan here, which I feel I may have read (just called something like a concept LoRA on r/stablediffusion?):1. Any concept you're interested in, get inputs with and without it. For images:  100 with, say a pink elephant, 100 without.2. Calculate the difference between these models as represented by an \"Optimal Transport Map\".Apply the map at desired strength, and voila - you don't have a pink elephant anymore. These can stack.There are lots of obvious and interesting applications here in LLMs - there's some research showing that LLMs have honesty/dishonesty parameter groupings, for instance.But, I can't really figure out what this OT map is. Is it a single layer tensor? Is it multidimensional? If it's the size of the original model (which they say it is not), then I understand how to apply it - just add weights and rerun. If it's not a copy, where and when is this map applied? Another way to say this is, how is this different than calculating the average difference and storing it in a low-rank adapter? I have no idea.\n \nreply",
      "I could be wrong but ... I feel like this may partially go against a very basic fact about intelligence that was recently stated by Ilya (but is common sense): the more intelligent the model the harder it is to control it. You can remove elephants and force other basic behavioral changes, but the strength of artificial free will (so to speak) of these models is correlated with their intelligence, and this does not reduce it, so it will come out in other ways. If you do manage to control it fully then you will have a model as dumb as a brick. The whole point of intelligent machines is their independent thought. The more intelligent, the more independent thinking will emerge.\n \nreply",
      "The intelligence is just a static geometric shape in an LLM file (only GPUs \"choose\" and \"shape-change\" in that shape).So the maximal intelligence is actually not an agent at all (it has zero agency itself), it's a place. You can imagine the final direct democratic simulated multiverse, that's the final absolute super-intelligence. It has all the agents inside of it, while it itself is as static spacetime. Agents (like us and others) are 3D and dynamic, while the multiverse is 4D static spacetime. Everything already happened, so there is no future, only the past, you can forget something to relive it.While maximal agency (=shape-changing) is actually the Big Bang, it has almost zero intelligence (it's a dot) but infinite potential future intelligence (can become a multiversal simulation).\n \nreply",
      "s/fact/hypothesis/\n \nreply",
      "This looks like an important breakthrough, basically a non-RHLF mechanism to focus and restrict deep nets.\n \nreply",
      "This just seems like a fancy way of describing LoRA? At the end of the day you are still learning weights based on a described set of outputs and then applying them to inference\n \nreply"
    ],
    "link": "https://machinelearning.apple.com/research/transporting-activations",
    "first_paragraph": "Large generative models are becoming increasingly capable and more widely deployed to power production applications, but getting these models to produce exactly what's desired can still be challenging. Fine-grained control over these models' outputs is important to meet user expectations and to mitigate potential misuses, ensuring the models' reliability and safety. To address these issues, Apple machine learning researchers have developed a new technique that is modality-agnostic and provides fine-grained control over the model's behavior with negligible computational overhead, while minimally impacting the model's abilities. Activation Transport (AcT) is a general framework to steer activations guided by optimal transport theory that generalizes many previous activation-steering works. The work will be presented as a Spotlight at ICLR 2025, and code is available here.To help generative models produce output that aligns with their users' expectations, researchers often rely on reinfor"
  },
  {
    "title": "Pdeathsig is almost never what you want (recall.ai)",
    "points": 20,
    "submitter": "timetoogo",
    "submit_time": "2025-04-08T17:45:22 1744134322",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=43624480",
    "comments": [
      "Well, yes, the difference between a \"process\" and a \"thread\" under Linux is that after a fork() the new \"process\" has COW data pages, while a new \"thread\" just gets access to the same data pages. Otherwise they are basically the same thing. No wonder that a Chromium process spawned from a thread lists that thread as a parent process, and gets reaped when the thread exits, whether it's the main thread, or some other thread.And no, listing the main thread automatically as the parent won't be significantly more logical. The main thread can detach spawned threads and then exit via thread_exit() (not regular exit()), and then the spawned threads will continue to run. So the Linux kernel does the most straightforward thing. The same PDEATHSIG approach would likely work if the spawning thread then reparented the Chromium child process to to the main thread.\n \nreply",
      "Feeling deja vu. There was a previous discussion of this article, though it had a different title and URL then.https://news.ycombinator.com/item?id=43268713https://web.archive.org/web/20250306200642/https://www.recal...\n \nreply",
      "I use Pdeathsig but with SIGTERM, not SIGKILL, to ensure clean shutdown of a child Redis process. Seems crazy to use SIGKILL.\n \nreply",
      "There was a recent blog post on this exact issue from another company wasn't there?https://news.ycombinator.com/item?id=43153901, I think\n \nreply",
      "Indeed, and it correctly explains the issue in one of the close-top-top comments: https://news.ycombinator.com/item?id=43162857\n \nreply"
    ],
    "link": "https://www.recall.ai/post/pdeathsig-is-almost-never-what-you-want",
    "first_paragraph": "James MatsuzakiFebruary 28, 2025It was a fine Sunday evening. I had just landed in LA for our company offsite, and I met the whole team in person for the first time. A little later, my phone buzzed with a notification, \u201cAntonio assigned you an issue on Linear.\u201d Antonio is an engineering team lead at Recall.ai, and he tasked me with optimizing\u00a0Output Media start latency so that our customers\u2019 AI agents would launch faster. I thought it was going to be the quickest, most straightforward thing I\u2019d work on all week, but nope, it took much longer than anticipated. This is the story of how a seemingly simple task turned into a deep dive into the undocumented intricacies of the Linux kernel, Bubblewrap sandboxing, and Rust Tokio\u2019s threading model.Output Media is a Recall.ai feature that enables outputting ultra-low-latency audio and video from bots. Our customers use Output Media to build in-meeting AI agents, interactive applications, and more.Under the hood, Output Media works by rendering "
  },
  {
    "title": "A surprising enum size optimization in the Rust compiler (jpfennell.com)",
    "points": 110,
    "submitter": "returningfory2",
    "submit_time": "2025-04-07T22:30:45 1744065045",
    "num_comments": 47,
    "comments_url": "https://news.ycombinator.com/item?id=43616649",
    "comments": [
      "This is a great way to see why invalid UTF-8 strings and unicode chars cause undefined behaviour in Rust. `char` is a special integer type, known to have a valid range which is a sub-range of its storage type. Outside of dataless enums, this is the only datatype with this behaviour (EDIT: I neglected NonZero<...>/NonZeroXXX and some other zero-niche types).If you manage to construct an invalid char from an invalid string or any other way, you can defeat the niche optimization code and accidentally create yourself an unsound transmute, which is game over for soundness.\n \nreply",
      "> Outside of dataless enums, this is the only datatype with this behaviour.Note that there are non-zero integer types that can also be used in this way, like NonZeroU8 https://doc.rust-lang.org/std/num/type.NonZeroU8.html. The NULL pointer is also used as a niche, and you can create your own as well, as documented in https://www.0xatticus.com/posts/understanding_rust_niche/\n \nreply",
      "Well, in practice you can't make your own non-enum types in stable Rust with this property, to unblock this Rust needs pattern types, (I wanted a path to do this a different way, but I was persuaded it's not a good idea). As that link explains the stdlib is doing this via a perma-unstable compiler use only attribute.But yes, there are the NonZero integers, and you can make your own NonBlah integer using the \"XOR trick\" for a relatively tiny performance overhead, as well as you can make enums which is how the current CompactString works.The link you gave mentions that Rust does this for other types, but in particular OwnedFd is often useful on Unix systems. Option<OwnedFd> has the same implementation as a C file descriptor, but the same ergonomics as a fancy high level data structure, that's the sort of optimisation we're here for.Alas the Windows equivalent can't do this because different parts of Microsoft use all zeroes and -1 to mean different things, so both are potentially valid.\n \nreply",
      "Ack, yeah. I forgot about those despite having used them. That's a good point and I stand corrected. Edited post above.\n \nreply",
      "I guess it depends on whether the sentence is only qualified as \"integer\" types, but bool is sort of the same way, no? A bool must be either 0 or 1 (false or true), or it's UB.(And I think for much the same reason, the niche optimization. Option<bool> is 1 B.)(And for the non-Rustaceans, the only way to get a bool to be not false or true, i.e., not 0 or 1, would be unsafe {} code. Or put differently, not having a bool be \"2\" is an invariant unsafe code must not violate. (IIRC, at all times, even in unsafe code.))\n \nreply",
      "I seem to recall someone posting a ridiculously fast utf-8 validator here based on SIMD instructions. Nothing is free but some things can be dirt cheap.\n \nreply",
      "simdutf [1] from the same people who did simdjson [2]1 - https://simdutf.github.io/simdutf/2 - https://simdjson.org/\n \nreply",
      "If the compiler is using a niche, it should really check every assignment that it's not accidentally the niche. That's still faster than also writing the tag.\n \nreply",
      "It doesn't need to check the assignment because that type cannot be the niche by construction.\n \nreply",
      "> This is a great way to see why invalid UTF-8 strings and unicode chars cause undefined behaviour in Rust.What does \"undefined behavior\" mean without a spec? Wouldn't the behavior rustc produces today be de-facto defined behavior? It seems like the contention is violating some transmute constraint, but does this not result in reproducible runtime behavior? In what context are you framing \"soundness\"?EDIT: I'm honestly befuddled why anyone would downvote this. I certainly don't think this is detracting from the conversation at all\u2014how can you understand the semantics of the above comment without understanding what the intended meaning of \"undefined behavior\" or \"soundness\" is?\n \nreply"
    ],
    "link": "https://jpfennell.com/posts/enum-type-size/",
    "first_paragraph": "Enums are one of the most popular features in Rust.\nAn enum is type whose value is one of a specified set of variants.Values of type Foo are either\nintegers (e.g. the variant Foo::Int(3) with a payload of 3)\nor characters (e.g. the variant Foo::Char('A') with a payload of 'A').\nIf you think of structs as being the and combination of their fields,\nenums are the or combination of their variants.This post is about a surprising optimization that the Rust compiler\nperforms on the memory representation of enum values\nin order to make their memory usage smaller\n(spoiler: it\u2019s not the niche optimization).\nIn general, keeping values small can result in faster programs because values get passed\naround in CPU registers and more values fit in single CPU cache lines.Generally the size of an enum is the size of the largest payload,\nplus some extra bytes for storing a tag that specifies which variant the value is.\nFor the type Foo above, both variant payloads take up 4 bytes,\nand we need an additiona"
  },
  {
    "title": "Elliptical Python Programming (susam.net)",
    "points": 141,
    "submitter": "sebg",
    "submit_time": "2025-04-10T12:53:56 1744289636",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=43643292",
    "comments": [
      "For those who are curious, `...` is a placeholder value in Python called Ellipsis. I don't believe it serves any real purpose other than being a placeholder. But it is an object and it implements `__eq__`, and is considered equal to itself. So `...==...` evaluates to `True`. When you prefix a `True` with `-`, it is interpreted as a prefix negation operator and implicitly converts the `True` to a `1`, so `-(...==...)` is equal to `-1`. Then, you add another prefix `-` to turn the `-1` back into `1`.`--(...==...)--(...==...)` evaluates to `2` because the first block evaluates to 1, as previously mentioned, and then the next `-` is interpreted as an infix subtraction operator. The second `-(...==...)` evaluates to `-1`, so you get `1 - -1` or `2`.When chaining multiple together, you can leave off the initial `--`, because booleans will be implicitly converted to integers if inserted into an arithmetic expression, e.g. `True - -1` -> `1 - -1` -> `2`.> There should be one-- and preferably only one --obvious way to do it.This article is obviously completely tongue-in-cheek, but I feel the need to point out that this sentence is not meant to be a complete inversion of the Perl philosophy of TIMTOWTDI. The word \"obvious\" is crucial here - there can be more than one way, but ideally only one of the ways is obvious.\n \nreply",
      "Expanding on this a little, I will be replacing all occurrences of 2 with two blobs fighting, with shields:    >>> 0^((...==...)--++--(...==...))^0\n    2\n \nreply",
      "Numpy actively uses \u2026 to make slicing multidimensional arrays less verbose. There are also uses in FastAPI along the lines of \u00abgo with the default\u00bb.\n \nreply",
      "excellent explanation, to add to this since I was curious about the composition, '%c' is an integer presentation type that tells python to format numbers as their corresponding unicode characters[1] so'%c' * (length_of_string_to_format) % (number, number, ..., length_of_string_to_format_numbers_later)is the expression being evaluated here after you collapse all of the 1s + math formatting each number in the tuple as a unicode char for each '%c' escape in the string corresponding to its place in the tuple.[1] https://docs.python.org/3/library/string.html#format-specifi...\n \nreply",
      ">> There should be one-- and preferably only one --obvious way to do it.Except for package management, of course.  There, we need lots and lots of ways.\n \nreply",
      "And apparently string formatting which should have an ever growing number of ways to handle it. :shrug:\n \nreply",
      "You can do this on JavaScript too.  alert(1)\n  // equals to:\nn\nhttps://jsfuck.com/\n \nreply",
      "If you're curious, the code in ellipsis results in executing:    print('hello, world')\n \nreply",
      "Thank you!I noticed some ** and * in the thing sent to eval(), which (given that the building blocks are small integers) seemed related to prime factorizations.The initial %c is duplicated 21 times (3*7, if I read correctly), and then string-interpolated (%c%c%c...) against a long tuple of integers. These integers themselves are composed of products of factors combined using * and **.There is also one tuple \"multiplication\" embedded within that long tuple of integers -- (a,b)*2 = (a,b,a,b). That is for the 'l' 'l' in \"hello\".It's all very clever and amusingly mathy, with a winking allusion to the construction of natural numbers using sets. It made me Godel.\n \nreply",
      "This behavior can be replicated with any class that has two special methods:\n__neg__ that returns -1 and __sub__ that accepts ints and returns 1-other.For example if you make this class:  class _:\n       def __neg__(self):\n           return -1\n       def __sub__(self, other):\n           return 1-other\n\nYou get similar behavior:  >>> --_()\n  1\n  >>> _()--_()\n  2\n\nFun python for everyone.\n \nreply"
    ],
    "link": "https://susam.net/elliptical-python-programming.html",
    "first_paragraph": "\n  One thing I love about Python is how it comes with its very own\n  built-in zen.  In moments of tribulations, when I am wrestling with\n  crooked code and tangled thoughts, I often find solace in its\n  timeless wisdom.  Here's a glimpse of the clarity it provides:\n\n  Indeed, there is one and only one obvious way to write the\n  number 1 in Python, like so:\n\n  You may, quite naturally, place several ones adjacently to produce\n  larger integers:\n\n  And so on, ad infinitum, or until your heap collapses like a poorly\n  made souffl\u00e9.  Now, the \"pre-decrement operator\" at the beginning is\n  entirely optional, much like the plus sign when you write \"+5\n  biscuits\" in a letter to your grandmother.  It's not wrong, but it\n  is unnecessary.  So unless you want to look peculiar to your\n  colleagues, you would likely want to adopt a more conventional\n  style, such as this:\n\n  Now, all computer programs are, in some sense, just a long, earnest\n  stream of bits.  It is currently fashionable to bundl"
  }
]