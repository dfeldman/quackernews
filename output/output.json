[
  {
    "title": "Committing to Rust in the Kernel (lwn.net)",
    "points": 52,
    "submitter": "todsacerdoti",
    "submit_time": "2024-09-25T00:08:01.000000Z",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=41642313",
    "comments": [
      "On a semi-tangent, does anyone happen to know how Microsofts push to use Rust in the Windows kernel is coming along? They rewrote and shipped some components in Rust about a year ago but it's seemed quiet on that front for a while, unless I missed something.\n \nreply",
      "[flagged]",
      "HN automatically changes some titles, to counteract against SEO'd clickbait titles.dunno about the link, but the part after \"si=\" isn't required, e.g.:https://youtu.be/_wc7ujflrnIworks fine\n \nreply"
    ],
    "link": "https://lwn.net/SubscriberLink/991062/b0df468b40b21f5d/",
    "first_paragraph": "\n\n\nWelcome to LWN.net\n\nThe following subscription-only content has been made available to you \nby an LWN subscriber.  Thousands of subscribers depend on LWN for the \nbest news from the Linux and free software communities.  If you enjoy this \narticle, please consider subscribing to LWN.  Thank you\nfor visiting LWN.net!\n\n\n\n\n\n\n           By Jonathan CorbetSeptember 24, 2024\n           \nMaintainers Summit\n\nThe project to enable the writing of kernel code in Rust has been underway\nfor several years, and each kernel release includes more Rust code.  Even\nso, some developers have expressed frustration at the time it takes to get\nnew functionality merged, and an air of uncertainty still hangs over\nthe project.  At the 2024 Maintainers Summit, Miguel Ojeda led a discussion\non the status of Rust in the kernel and whether the time had come to stop\nconsidering it an experimental project.  There were not answers to all of the\nquestions, but it seems clear that Rust in the kernel will continue\nsteam"
  },
  {
    "title": "On Impactful AI Research (github.com/okhat)",
    "points": 93,
    "submitter": "KraftyOne",
    "submit_time": "2024-09-24T20:56:29.000000Z",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=41640812",
    "comments": [
      "This has good advice about academic research in general not just AI Research. It's huge to \"Select timely problems with large headroom and \"fanout\"\" - you need a research program to have a successful research career. At least most people do. It's also huge to \"Put your work out there and own popularizing your ideas\" - the second part is hard for a lot of academics to do. Putting your work out there is huge to get feedback, which may help you pivot or try different directions, as well as fostering collaboration. Collaboration is a large part of being a successful researcher.\n \nreply",
      "\"Invest in projects, not papers.\"This is excellent advice, and in my experience does not represent the intuition that many young (and not so young) researchers begin with.Papers come from projects and, if you care, good projects can yield many good papers!\n \nreply",
      "The problem is my supervisor only cares about paper count.\n \nreply",
      "Idk, nothing wrong with going for a low-hanging fruit and doing a one-off sometimes. So many academics fail to get stuff over the finish line. Not the right advice for everybody.\n \nreply",
      "nothing wrong except that it might be a distraction, which sometimes is good and sometimes would be better avoided.\n \nreply",
      "Interesting. This is a common problem in academia?\n \nreply",
      "Yeah, but it's not saying \"don't do papers\", it's saying your long-term investment should be projects.\n \nreply",
      "I would say follow the money, create a product or service that generates recurrent income and channel that income to study the fundamental problems that would interest you. Owning a product or platform opens up for a lot of opportunities.\n \nreply",
      "Thankfully research is not guided by notions like \"what makes money in the current economy\"; otherwise we'd be stuck with faster calculators instead of, well, all of modern computer science.\n \nreply",
      "I did not say anything about making money in the current economy. Research requires funding and only way to have academic freedom is to have a steady source of recurrent income or funding. One way to get that is to please those who have money but give up part of your control on what you study. Other way is to monetize your knowledge and acquire a ton of money. You seem to misunderstand what I said or have very little clue on how the academia works.\n \nreply"
    ],
    "link": "https://github.com/okhat/blog/blob/main/2024.09.impact.md",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          "
  },
  {
    "title": "Beyond the route: Introducing granular MTA bus speed data (mta.info)",
    "points": 139,
    "submitter": "Nelkins",
    "submit_time": "2024-09-24T19:26:03.000000Z",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=41640005",
    "comments": [
      "A fun fact about NYC's buses: many of the routes are turn-by-turn replicas of previous streetcar routes; Brooklyn alone had dozens[1]. The B46[2], for example, follows the Utica-Reid line as it ran until 1951.They never actually tore up most of these lines; the city just paved over them. You can see them poking through the pavement whenever the city redoes the roads.[1]: https://en.wikipedia.org/wiki/List_of_streetcar_lines_in_Bro...[2]: https://en.wikipedia.org/wiki/B46_(New_York_City_bus)\n \nreply",
      "> They never actually tore up most of these lines; the city just paved over them.I spotted one of these in July in long island city by vernon blvd while they were repaving. You can see them embedded in the cobblestone. Here's some impromptu phone pictures: https://imgur.com/a/MLdjvxo\n \nreply",
      "Ignoring the huge issue of political will, how much more or less effective would street cars be on these lines, compared to buses?\n \nreply",
      "I think it would depend: one of the reasons the streetcars were originally eliminated is that they were increasingly held up in traffic, and the argument was that buses could navigate (like cars) around traffic, make detours, etc.In practice however that hasn't really been borne out: the city's buses are notoriously slow. The city has (correctly) reprioritized bus lanes (including lane enforcement for scofflaw drivers) and express services (SBS) in response, but at that point we're essentially back to rights-of-way (i.e. how much of Europe runs timely and efficient streetcar networks).In short: I think streetcars would be less effective if not (partially) separated, but more effective otherwise. Given that the city is moving towards bus lane separation anyways, I personally believe they should revitalize the streetcar network instead. But that's (1) expensive, and (2) involves impressive amounts of local political spaghetti, given that the buses are currently run by state-level MTA while the roads are owned by the city.\n \nreply",
      "What's the benefit to streetcars over busses with a dedicated, physically separated right of way?I like the idea of streetcars, but busses seem easier to purchase than streetcars, standard road paving seems easier to maintain than streetcar tracks and power, and likely it's easier to find/train bus operators than streetcar operators (even though I assume streetcars are actually a bit easier to operate).\n \nreply",
      "there are a few* recently a big trend is grass tramways. generally speaking this is more ecologically friendly by reducing impervious surfaces and replacing it with greenery, which generally lowers the urban heat island effect and is better for stormwater absorption. as a nice side effect, it is also generally a more visible differentiator from car lanes that people are less willing to drive over.* trams are generally more capacious than buses because they are laid out better for more standing room. they are also more capacious because it is safer to run very long trams since the tram is fixed to the tracks; there are practical limits to how long a bus can be since a driver needs to be careful when switching lanes and whatnot. The longest single tram unit is 58m, the longest single bus is 32m; and you can couple trams together.* trams don't really move side to side due to being fixed to tracks, so level boarding with little to no gap is much more realistic to achieve than on buses. This is generally much better for accessibility and speeds up boarding time; if you've spent any time riding a city bus, even a low floor bus spends a significant amount of time kneeling to achieve worse results for level boarding. And buses kneel not only for people in wheelchairs, but for people with strollers, with luggage, the elderly, etc.\n \nreply",
      "In prague there is both extensive bus network and tram network. I almost always go for buses. The capacity is just so much higher and usually the drive is much smoother compared to buses. Also trams are powered by electricity making it more efficient and c02 neutral...> standard road paving seems easier to maintain than streetcar tracksI would think that tracks last way longer.Overall I think the cost is lower in long term for street cars but the initial cost is super high - e.g. edinburgh build one awkward tram line for around 700m. But thats with depots, cars everything. In Prague with all existing infrastructure it cost now about 78m usd to build 2.2km of tram with 6 stops.\n \nreply",
      "The main one, in my mind, is permanency: as I mentioned in the adjacent comment, stable car-independent communities tend to be built around transportation systems that can\u2019t be easily removed.(I think there are other benefits, like being slightly more comfortable. But permanency is by far the most important.)\n \nreply",
      "Ya the idea that buses are better than streetcars because they can go around traffic is just completely detached from reality. Maybe a bus can go around one double-parked car but during rush hour that's not happening. It was always just an excuse to avoid taking an inch of space away from cars for dedicated transit right of way.\n \nreply",
      "From the perspective of \"vehicles on the road\" buses make a lot more sense to me:- They can maneuver around double-parked cars and trucks- They can switch up the route when there's construction- There are no tracks tripping up pedestrians and cyclists- They're [probably] easier to get to a service hub for maintenance- They don't require overhead wires to provide electricity- I would guess they're cheaper to purchase and maintain, but don't have a referenceOne area where street cars _might_ win is noise. Busses can be loud.\n \nreply"
    ],
    "link": "https://new.mta.info/article/beyond-route-introducing-granular-mta-bus-speed-data",
    "first_paragraph": "Every weekday, the MTA runs over 4,900 buses across 327 routes, with around 1.3 million folks swiping or tapping to take a bus across the city. It is a remarkable feat, but even with that many passengers using our bus system, less is often written about our bus network than the subway. Given how vital our bus network is in providing travel to New Yorkers across the city, serving millions of residents, we at the MTA are always paying special attention to how this interconnected network can better serve riders.Our buses, though, have to navigate a more complicated landscape than our trains, facing double-parked cars, road closures, delivery vehicles, traffic, and whatever else they might find on NYC\u2019s frenetic roadways. Amidst this obstacle-laden environment, how fast are our buses actually going? Today, we are making it easier for the public to better understand this question with the new MTA Bus Route Segment Speeds Dataset on Open Data, which provides granular and in-depth bus speeds "
  },
  {
    "title": "Deep Dive into Postgres Write-Ahead Logs (artie.com)",
    "points": 17,
    "submitter": "j-cheong",
    "submit_time": "2024-09-24T23:32:36.000000Z",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.artie.com/blogs/postgres-write-ahead-logs",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: OpenFreeMap \u2013 Open-Source Map Hosting (openfreemap.org)",
    "points": 647,
    "submitter": "hyperknot",
    "submit_time": "2024-09-24T11:59:22.000000Z",
    "num_comments": 185,
    "comments_url": "https://news.ycombinator.com/item?id=41635592",
    "comments": [
      "Something I'd be willing to pay for is historical tiles/data.I'm writing an application that lets you view historical data, and the problem is that most/all map services show only current data. It would be nice if the map reflected the year of the data we're layering on top.So if you want to make some money, there's an option for you!\n \nreply",
      "Have you heard of:https://www.openhistoricalmap.orgI don't think you can pay for it, but I'm sure they'd accept donations!\n \nreply",
      "Interesting but not entirely accurate. Moldova has not existed as a state until 1991, after the dissolution of the USSR but it shows up on the map after WW2.\n \nreply",
      "The great thing about open map projects is that they can be updated, and store a historical edit log along with discussions and sources for each change.\n \nreply",
      "As with other community projects such as Wikipedia or OSM, OpenHistoricalMap relies on keen-eyed volunteers such as yourself to improve their database!\n \nreply",
      "The key problem here is a lack of accurate data. OSM is amazing, but is constantly getting improved and closer to realtime \"ground truth.\" Historical OSM data is usually worse all-around, rather than \"equally good, but as of year XXXX\"Perhaps there is a different dataset with better historical accuracy than OSM, but I do not know of one. You'd likely have to reduce your scope: trails in a specific park? Roads in a specific city?As another commenter notes, there is a sister project OpenHistoricalMap that focuses on mapping historical data. It is rather sparse compared to OSM, but super fun to explore around e.g. NYC.\n \nreply",
      "As a hobby historian (not really haha) I'm interested in old streets and names particularly.Especially here in Europe / Germany, where entire quarters where bombed to rubbles newer streets do not match neither namely nor spatially.I loved how you could \"move back in time\" in street view. I think that has been killed too? There is a lovely Twitter/X account for Detroit tho: https://x.com/DetroitStreetVu\n \nreply",
      "I really like the idea.Why OMT instead of protomaps? The latter is clearly where the community is moving towards (albeit very slowly).I'm somewhat sceptical about the \"free with no API keys\" idea. I guess your service is not guaranteed to be up so no one too big will rely on it. But what if you start getting abuse or someone using them on some humongous site (e.g. one of those cheap restaurant email builders that always embed a map), and you start getting way too much traffic from random sources and websites. What would you do?\n \nreply",
      "From the FAQs on GitHub [1]> What about PMTiles?> I would have loved to use PMTiles; they are a brilliant idea!> Unfortunately, making range requests in 80 GB files just doesn't work in production. It is fine for files smaller than 500 MB, but it has terrible latency and caching issues for full planet datasets.> If PMTiles implements splitting to <10 MB files, it can be a valid alternative to running servers.[1] https://github.com/hyperknot/openfreemap\n \nreply",
      "That's an interesting claim. I make range requests to 100GB+ files (genomics) all the time for work and it works great. I've never considered total file size as directly related to latency in this respect, assuming you have some sort of an index of course.\n \nreply"
    ],
    "link": "https://openfreemap.org/",
    "first_paragraph": "OpenFreeMap lets you display custom maps on your website and apps for free.You can either self-host or use our public instance. Everything is open-source, including the full production setup \u2014 there\u2019s no \u2018open-core\u2019 model here. Check out our GitHub. The map data comes from OpenStreetMap.Using our public instance is completely free: there are no limits on the number of map views or requests. There\u2019s no registration, no user database, no API keys, and no cookies. We aim to cover the running costs of our public instance through donations.We also provide weekly full planet downloads both in Btrfs and MBTiles formats.\nHave a look at the default styles and read more about how to integrate it to your website or\n      app:\nI\u2019m Zsolt Ero (blog, email).After 9 years of running my own map tile infrastructure for MapHub, I\u2019ve open-sourced it and launched OpenFreeMap.X: @hyperknot (for details) \nX: @OpenFreeMapOrg (for announcements)GitHub: openfreemap and openfreemap-stylesIf this project helps yo"
  },
  {
    "title": "The Calculator that spawned the Microprocessor (vintagecalculators.com)",
    "points": 46,
    "submitter": "fortran77",
    "submit_time": "2024-09-21T00:59:03.000000Z",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=41606694",
    "comments": [
      "I always wonder where we\u2019re going to see the next kind of world changing innovation like this.Immunotherapy?  Maybe.Recently all I\u2019ve gotten is a phone that listens to my conversations and serves me targeted ads.\n \nreply",
      "Interesting that Japanese companies sometimes help competitors, such as Sharp helping Busicom in the article.  I also think Yamaha helped Korg in their early years [1].[1] https://www.soundonsound.com/series/history-korg\n \nreply",
      "Huh. It never occurred to me that the word chipset was the descendent of a set of chips. That's nifty\n \nreply",
      "The ancient design of the page is very topical.\n \nreply",
      "I dig it. As a vintage tech enthusiast, the last thing I want is a bunch of javascript or framework-of-the-moment  hoohah pummeling my browser. I want pictures and info. HTML with a bit of CSS is perfectly fine for that. There's a time and place for the girthy websites of the modern era, but sometimes my viewport just needs a break.\n \nreply",
      "Simple, fast-loading and unobtrusive, definitely better than a lot of \"modern\" web design.\n \nreply"
    ],
    "link": "http://www.vintagecalculators.com/html/busicom_141-pf_and_intel_4004.html",
    "first_paragraph": "  Calculator ArticlesHome > Collecting CalculatorsThe Calculator that spawned the Microprocessor:The Busicom 141-PF calculator and the Intel 4004 microprocessorThe fascinating story of why the development of a calculator led to the development of the first commercial microprocessor, and the unexpected consequences.\u00a9 2009 Nigel ToutThis is a new article which was not originally in \"The International Calculator Collector\".\u00a0Busicom CorporationOne of the most technologically adventurous calculator manufacturers in the late 1960s and early 1970s was the small Japanese company Busicom Corporation.\u00a0 Under its previous name of Nippon \r\n                Calculating Machine Corporation (NCM) it produced mechanical pinwheel calculators in the mid-1960s.NCM/Busicom HL21 mechanical pinwheel calculator.In the second half of the 1960s Busicom developed and marketed an advanced series of electronic desktop calculators.\u00a0 During this time calculator electronics was at the leading edge of semiconductor de"
  },
  {
    "title": "Move Fast and Abandon Things (engineersneedart.com)",
    "points": 339,
    "submitter": "JKCalhoun",
    "submit_time": "2024-09-24T11:58:02.000000Z",
    "num_comments": 139,
    "comments_url": "https://news.ycombinator.com/item?id=41635583",
    "comments": [
      "Many companies I have worked for operate like this. Engineers get to work on shiny new features, they get released, everyone is happy. Months later tons of bugs accumulate. The original authors are already part of another team (because \u201cbreaking silos\u201d, but actually because \u201cmake everyone replaceable\u201d). The engineers that inherit the project need to maintain it and fix the bugs until another team takes over.It\u2019s awful.\n \nreply",
      "Such is the hellscape we\u2019ve brought on ourselves from the widespread adoption of \u201cminimum viable product\u201d as the right way to build things. We judge viability by some feature set, not whether the stupid thing is resilient or can be maintained.It also doesn\u2019t help that \u201cminimum viable\u201d is only one step away from \u201cnon-viable\u201d. Every project then becomes like Icarus, testing how close to the sun we can fly before our wings melt.\n \nreply",
      "But what's the alternative here? \"We spent longer than was minimally viable but we still don't have a good idea if it has market fit\"-product? In my experience the code usually gets binned whether the idea gets traction or not. Some companies misjudge when to rewrite, but that doesn't make the MVP part of the process wrong.The absolute greatest wastes of talent and humanity I've ever seen in tech didn't come from tech debt, those efforts were almost always at least working on a product that people were paying money for. The biggest wastes were from over-delivering products that hadn't and were never going to succeed.\n \nreply",
      "A portion of \u201cproduct-market fit\u201d failures are actually software quality failures. I think it\u2019s easy to blame the ensh*ttification of software on corporate incompetence, but I think \u201cminimally viable\u201d is part of the story as well.The world we have now where everything is built to be thrown away, including software, has had the side-effect of destroying craftsmanship. And I'm becoming more convinced as I age that the world is poorer for it.\n \nreply",
      "In the context of the topmost comment, the alternative is \u201cdon\u2019t stop at MVP\u201d.If you make an MVP and end up discarding it shortly after, that\u2019s fine, and completely appropriate for an MVP.OTOH, MVP may not be sufficient for something that the business still relies on day in, day out months or years down the road.\n \nreply",
      "I don\u2019t think MVPs are the problem here. Most projects were like this before MVPs were conceived of. Usually the failure is that the project isn\u2019t minimal at all. It\u2019s usually the maximum complexity that a given team can handle.\n \nreply",
      "having been the original author on a company defining feature and then told that the silo must be broken only to see my work stepped on for years to come i wholeheartedly agree. the inheritors not qualified to make the decisions, my grand ideas pushed to the side, and having watched the incompetance in managing said feature has been a hard thing to overcome and im still salty about it every time a stupid bug arises. especially when warnings were raised with ample time to adjust. but i learned an important lesson and i can say with certaintly that i wont hesitate to be perceived as an asshole and die on hills about it the next time\n \nreply",
      "The current state is like an internal, employee-level Not Invented Here.\n \nreply",
      "I often joke that every startup job post Series A is you playing Viscera Cleanup Detail[1] for the \"heroes\" of the pre-PMF stage[1]: https://store.steampowered.com/app/246900/Viscera_Cleanup_De...\n \nreply",
      "completely correct, but I dont think thats where OP is coming from or what the article intends to suggest either. Its recommending that you try multiple things, get a feel for whats technically feasible & if it looks interesting to the customer and push that forward. Its very well applicable to indie devs & also applicable to large companies to some extent. This philosophy is great to identify the feature/product you want to spend meaningful time on.In fact, one could wager that the situation you described is directly a consequence of not adhering to what OP is suggesting.\n \nreply"
    ],
    "link": "https://engineersneedart.com/blog/movefast/movefast.html",
    "first_paragraph": "\n        Maybe it\u2019s the change of weather. Fall often finds me looking backward, to the past \u2014\u00a0and anyway it is as \n        good excuse as any as to why I have found myself peering into old hard drives trying to recover old bits and bytes from games that \n        I wrote some thirty-five years ago or so. \n    \n        Shareware games that I released all those years ago I gathered onto a disk image and posted to GitHub as \n        Soft Dorothy Software \u2014 Early Shareware Projects. \n        I wrote about the sometimes extraordinary work I needed to employ in order to recover some of these in \n        a blog post.\n        \n            The disk image is the kind you can drag to a 68K or PPC Mac emulator such as Basilisk II, \n            Sheepshaver or MiniVMac.\n        \n            I followed up the shareware disk image with a disk image of Casady & Greene Projects. \n            Casady & Greene was the name of the company that published my Glider 4.0 game back in 1991 and so the sources and"
  },
  {
    "title": "Launch HN: Modern Realty (YC S24) \u2013 AI Real Estate Agent for Home Buyers",
    "points": 106,
    "submitter": "greenfish6",
    "submit_time": "2024-09-24T16:23:35.000000Z",
    "num_comments": 214,
    "comments_url": "https://news.ycombinator.com/item?id=41638199",
    "comments": [
      "Best of luck. I\u2019m a commercial real estate professional who has spent time as a broker, lender, and private equity investor.Residential definitely is a lot\nMore of a ridiculous market. But ultimately as an agent, you get hired to work with mostly irrational actors (sellers and buyers).As someone who is very interested in AI and taught myself how to code (I don\u2019t know any other real estate people who know anything about code), I think it\u2019s going to be incredible hard to uproot the brokerage industry.It\u2019s challenging to get buy in from many different types of old school, fragmented actors in the space. I\u2019d love to see someone prove this can be done, but I think it\u2019s a challenge, so best of luck. Curious to follow along.I think proptech needs real professionals who have been in the trenches to be involved because there\u2019s just too much nuance in the industry outsiders have no idea about.\n \nreply",
      "> But ultimately as an agent, you get hired to work with mostly irrational actors (sellers and buyers).I don\u2019t think you\u2019re making the argument you think you are. If an agent is there to be the rational for the irrational, then an AI listing agent talking to an AI buying agent are two rational beings getting more done than ever before, on behalf of sellers and buyers who are free to be themselves.\n \nreply",
      "The ludicrous 6% fee is whats going to drive adoption by end users and in turn by brokers.Move that fee to 1% for buyer agent and you have a massive market.\n \nreply",
      "It's a corrupt market imo, like car dealerships - they work to legislate their continued existence.Any market structured where you have some people doing many transactions and some doing few ends up skewed to benefit the person doing many while screwing the person doing few.It's true with realtors, IPOs with investment banks, car dealerships, funeral homes etc. and it's a hard problem to fix.\n \nreply",
      "How else would a car manufacturer put staff and inventory in every town across the country? They would either build dealerships themselves or franchise it out. Their cost structures don't cover this brick and mortar presence currently so costs would rise across the board.Car dealerships are mostly middlemen between customer, manufacturer, and state government for registration and tax collection.I just can't see how you eliminate the need to have locations to store and move around 5000lb metal objects without them.\n \nreply",
      "If there was a serious opportunity to arbitrage under the 6% fee, you bet that someone would have done it already \u2014 and well before the AI era.\n \nreply",
      "To be fair, NAR goes to great lengths to maintain their monopoly and lock out anyone who tries to buy or sell a house without using them....specifically because they know they're priced insanely high for the services they provide and are in real danger of being undercut.\n \nreply",
      "> When the National Association of Realtors signed a landmark $418 million settlement in March, economists and academics predicted that the deal \u2014 which included an agreement to upend key practices concerning how real estate agents are paid \u2014 would create the most significant shift to the industry in a century.[1] https://www.nytimes.com/2024/08/16/realestate/realtor-commis...\n \nreply",
      "We are already seeing the shift in practice. The changes went into effect just over a month ago (August 17th).\n \nreply",
      "What exactly are we seeing?\n \nreply"
    ],
    "link": "item?id=41638199",
    "first_paragraph": ""
  },
  {
    "title": "Why Most Published Research Findings Are False (plos.org)",
    "points": 112,
    "submitter": "Michelangelo11",
    "submit_time": "2024-09-24T21:45:50.000000Z",
    "num_comments": 123,
    "comments_url": "https://news.ycombinator.com/item?id=41641274",
    "comments": [
      "As I\u2019ve transitioned to more exploratory and researchy roles in my career, I have started to understand the science fraudsters like Jan Hendrik Sch\u00f6n.When you spent an entire week working on a test or experiment that you know should work, at least if you give it enough time, but it isn\u2019t for whatever reason, it can be extremely tempting to invent the numbers that you think it should be, especially if your employer is pressuring you for a result. Now, obviously, reason we run these tests is precisely because we don\u2019t actually know what the results will be, but that\u2019s sometimes more obvious in hindsight.Obviously it\u2019s wrong, and I haven\u2019t done it, but I would be lying if I said that the thought hadn\u2019t crossed my mind.\n \nreply",
      "> When you spent an entire week working on a test or experiment that you know should workI thought the whole point of doing experiments was to challenge what we \"know\" so we can refine our understanding?\n \nreply",
      "Sure in la-la-land where science isn't conducted by humans.In reality, scientists are highly motivated (i.e. biased) individuals like anyone else. Therefore science cannot be done effectively by individuals.The system that derives truth from experiments - the actual scientific system - is the competitive dynamic between scientists who are trying to tarnish each others' legacies and bolster their own. The scientific method etc. primarily makes scientific claims scrutinizable in detail, but without scrutiny they are still highly liable to produce false information.\n \nreply",
      "And yet, it is still the best we got for also producing highly reliable and correct information.Personally, I think the \u201chighly\u201d in your statement is quite over exaggerated. Humans can be convinced to produce bad science, for sure, and there are even journals set up by religious orgs that specifically exist to do just that.But at the same time, science landed humans on the moon.\n \nreply",
      "There are externally motivated scientists who are in it for the prestige or awards. Some fields are more like this than others, but they show up in all fields.Plus these days there's a lot of pressure to run universities more like businesses. To eat, academics have to hit certain numbers, so you see behaviors common in business like faking the KPIs.\n \nreply",
      "In theory, but it is extremely easy to get into the mindset that your hypothesis is absolutely true, and as such your goal is to prove that hypothesis.I\u2019ve never fabricated numbers for anything I\u2019ve done, but there certainly have been times where I thought about it, usually after the fourth or fifth broken multi-hour test, especially if the test breakage doesn\u2019t directly contradict the hypothesis.\n \nreply",
      "Because of that, backing up a claim with research adds weight to the claim.If the claim is false, though, you can still sometimes get research to support it. If you or the researcher stands to profit from the false claim, then there is a conflict of interest.\n \nreply",
      "I think that\u2019s what the parent is acknowledging in the end of the second paragraph.\n \nreply",
      "Well, that depends. What are you paying the guy to do?\n \nreply",
      "I\u2019ve been in a meeting with government research officials where a director of the primary global institution in that field described how when she writes or does research and writes papers she draws a graph she needs to support her research or a point she is trying to make and then goes to look for the data to create that graph.Maybe I\u2019m missing something, but I do not believe that is the way it is stopped to go. Btw, she has a PhD and failed up into a global scale.I\u2019ve been meaning to find out if there are any open tools to evaluate someone\u2019s dissertation.It was equal part stunning and seemingly a bit traumatizing to me considering I still remember it as if it had happened earlier today. I think what surprised me too was her open admission of it, even with external parties present.\n \nreply"
    ],
    "link": "https://journals.plos.org/plosmedicine/article?id=10.1371/journal.pmed.0020124",
    "first_paragraph": "\nPLOS Medicine publishes research and commentary of general interest with clear implications for patient care, public policy or clinical research agendas.\n  \n\nGet Started\n    \nLoading metricsOpen AccessEssayEssays are opinion pieces on a topic of broad interest to a general medical audience.\nSee all article types \u00bb\n\n\n            25 Aug 2022:\n          \n\n\nIoannidis\u00a0JPA\n\n\n  (2022)\n\n    Correction: Why Most Published Research Findings Are False.\n\nPLOS Medicine  19(8): e1004085.\n\nhttps://doi.org/10.1371/journal.pmed.1004085\n \n\n              View correction\n            \nThere is increasing concern that most current published research findings are false. The probability that a research claim is true may depend on study power and bias, the number of other studies on the same question, and, importantly, the ratio of true to no relationships among the relationships probed in each scientific field. In this framework, a research finding is less likely to be true when the studies conducted in a fi"
  },
  {
    "title": "GSoC'24: Differentiable Logic for Interactive Systems and Generative Music (ijc8.me)",
    "points": 65,
    "submitter": "jarmitage",
    "submit_time": "2024-09-24T17:02:24.000000Z",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=41638581",
    "comments": [
      "Difflogic should lead to very efficient hardware implementations of inference for a wide range of problems. But is it going to allow to generate the logical chains that elude current LLMs?--- edit ---After reading the paper more thoroughly, I find the way they implement differentiable logic clever. They use continuous relaxations of 16 logic operators, run them in parallel and apply a softmax to select the most useful operator. At inference time, everything is binarized.\n \nreply",
      "The original cited paper https://arxiv.org/abs/2210.08277 \"Deep Differentiable Logic Gate Networks\" struck me then as very clever, ultra-efficient/small, hardly any inductive bias or prior... But you have to wonder if it's able to scale reasonably well. Differentiating continuous versions of 16 discrete operations in parallel sounds expensive, especially since you presumably need a bunch of them chained in order to approximate a single neural primitive. Even distilling an existing LLM down might be too hard.\n \nreply",
      "It's definitely slept on. I do think it ought to be very powerful given enough compute to throw at it, hopefully. I think short description length algorithms such as simple compression algorithms or instant-ngp could be interesting to play with through that paradigm.\n \nreply",
      "This is fascinating\u2014I've recently been experimenting with something spookily similar after coming across the same paper as OP, only I'm trying to make random DAGs of logic gates reconstruct images rather than audio signals. Great minds like a think, I guess :P\n \nreply",
      "Cool concept and it seems weirdly effective. It would certainly help us lazy people to have the web version hosted somewhere, I'm assuming it could be a static site, since the meat of it is in WASM, right?Would this be amenable to \"morphing between presets\", or even manually combining a selection from one network into another network? Lots of things to try out here!\n \nreply",
      "Most interesting! :DLogic gates implemented with non-ideal transistors have non-zero rise times. Therefore, they are smooth and differentiable.\n \nreply"
    ],
    "link": "https://ijc8.me/2024/08/26/gsoc-difflogic/",
    "first_paragraph": "2024-08-26Last summer, I participated in Google Summer of Code for the first time, working with GRAME on improving support for using the Faust audio programming language on the web.This summer, I returned for another round, this time working with BeagleBoard.org on a project that defies such easy explanation: \u201cDifferentiable Logic for Interactive Systems and Generative Music\u201d. What does that mean? Let\u2019s break it down.The key ingredients that went into this project are difflogic, Bela, and bytebeat, which roughly correspond to \u201cDifferentiable Logic\u201d, \u201cInteractive Systems\u201d, and \u201cGenerative Music\u201d, respectively. I explain what these ingredients are and how they fit together in the intro video I created at the start of the project,but I\u2019ll recap briefly here.In 2022, Felix Petersen, Christian Borgelt, Hilde Keuhne, and Oliver Deussen published an intriguing paper on training machine learning models built out of networks of logic gates rather than \u201cneurons\u201d (as in neural networks). The moti"
  },
  {
    "title": "A Little History of the Anchovy (engelsbergideas.com)",
    "points": 8,
    "submitter": "samclemens",
    "submit_time": "2024-09-20T03:02:20.000000Z",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=41598414",
    "comments": [
      "A lot of people refuse to believe it won't make your food taste fishy. Sigh.\n \nreply",
      "One of the most important family of fishes in the planet by its huge commercial impact.\n \nreply"
    ],
    "link": "https://engelsbergideas.com/reviews/a-little-history-of-the-anchovy/",
    "first_paragraph": "\n\n\n\nReviews\n        The anchovy\u2019s ancient and varied story is ultimately about how food powerfully underpins our sense of identity, security and comfort.    A Twist in the Tail: How the Humble Anchovy Flavoured Western Cuisine, Christopher Beckman, Hurst, \u00a318.99To the physician Tobias Venner, in his Via recta ad vitam longam of 1620, they were \u2018Anchovas, the famous meat of drunkards\u2019, only good \u2018to commend a cup of wine to the pallat, and\u2026 therefore chiefly profitable for Vintners\u2019. No surprise, then, that Prince Hal finds a receipt for \u2018Anchovies and sack after supper\u2019 in the pockets of a sleeping Falstaff in Henry IV Part 1. The association with alcohol has been a durable one. In Spain, tapas \u2013 \u2018small realities\u2019, as 20th-century Spanish foodwriter Jos\u00e9 Sarrau called them \u2013 often anchovy-based and formerly offered free, have long been a staple of the taberna. Anchovies featured heavily among the canap\u00e9s of choice in the speakeasies of Prohibition America. It is perhaps apt, then, that"
  },
  {
    "title": "Winamp Legacy player source code (github.com/winampdesktop)",
    "points": 602,
    "submitter": "gjvc",
    "submit_time": "2024-09-24T14:27:09.000000Z",
    "num_comments": 278,
    "comments_url": "https://news.ycombinator.com/item?id=41636804",
    "comments": [
      "Everyone is commenting on the distribution terms. But the Contributions section is just as bizzare.> Waiver of Rights: You waive any rights to claim authorship of the contributions or to object to any distortion, mutilation, or other modifications of the contributions.I waive the right to claim that I authored my contributions? Wait, what?Why would I ever contribute to this project under this license?\n \nreply",
      "I'm curious how they expect people to contribute to the project. Section 4 of the license says \"Contribution to Project: You are encouraged to contribute improvements, enhancements, and bug fixes back to the project. Contributions must be submitted to the official repository and will be reviewed and incorporated at the discretion of the maintainers.\" However, the restrictions in Section 5 ban forking the code or distributing modified versions. This means that the standard Github \"fork the repo, make your changes in a branch, and send a pull request\" workflow for submitting changes would violate the license.\n \nreply",
      "Open an issue and type your patch into the description.Note that you can't test or debug your patch, because that would mean creating a modified version of the codebase, which is prohibited. Just type that stuff straight in, directly from your fever dreams, unmediated by common practice. If it's good enough for the license, it's good enough for the code.\n \nreply",
      "No, it says: \"You are granted the right to Modify the software for private use only. You may make, run, and propagate Covered works that you do not Convey, without conditions, so long as your License otherwise remains in force.\"It's clear they don't want you distributing modified versions.  The thing people are getting caught up on is \"You may not create, maintain, or distribute a forked version of the software.\" They fail to define \"forked\" but they don't seem to have meant an undistributed modification.\n \nreply",
      "I believe the parent commenter was being deeply sarcastic with their suggestion\n \nreply",
      "The Github ToS gives users the right to fork any public repos.\n \nreply",
      "It's not clear that Github's ToS can do such a thing, is it? What gives them the right to overrule the license from Winamp to me?\n \nreply",
      "```Any User-Generated Content you post publicly, including issues, comments, and contributions to other Users' repositories, may be viewed by others. By setting your repositories to be viewed publicly, you agree to allow others to view and \"fork\" your repositories (this means that others may make their own copies of Content from your repositories in repositories they control).```Section D.5Whoever the user that is posting the content is agreeing to the terms of service. If they don't actually have permission to agree to those terms with the content, then where that liability falls will likely fall to a court, but I'm sure I would argue as a user who forked the content, that I was given permission via the TOS which has to be followed by the user posting the content.\n \nreply",
      "Because Winamp agreed to the ToS of GitHub by uploading their code to GitHub.\n \nreply",
      "On Github. Doesn't give them a license to fork it to their workstation.\n \nreply"
    ],
    "link": "https://github.com/WinampDesktop/winamp",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Iconic media player\n      Winamp is a multimedia player launched in 1997, iconic for its flexibility and wide compatibility with audio formats. Originally developed by Nullsoft, it gained massive popularity with still millions of users. Its development slowed down, but now, its source code was opened to the community, allowing developers to improve and modernize the player to meet current user needs.It really whips the llama's ass.Building of the Winamp desktop client is currently based around Visual Studio 2019 (VS2019) and Intel IPP libs (You need to use exactly v6.1.1.035).\nThere are different options of how to build Winamp:We take libvpx from https://github.com/ShiftMediaProject/libvpx, modify it and pack to archive.\nRun unpack_libvpx_v1.8.2_msvc16.cmd to unpack.We take libmpg123 from https://www.mpg123.de/download.shtml, modify"
  },
  {
    "title": "Show HN: Velvet \u2013 Store OpenAI requests in your own DB (usevelvet.com)",
    "points": 25,
    "submitter": "elawler24",
    "submit_time": "2024-09-24T15:25:52.000000Z",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=41637550",
    "comments": [
      "Seems neat - I'm not sure if you do anything like this but one thing that would be useful with RAG apps (esp at big scales) is vector based search over cache contents. What I mean is that, users can phrase the same question (which has the same answer) in tons of different ways. If I could pass a raw user query into your cache and get back the end result for a previously computed query (even if the current phrasing is a bit different than the current phrasing) then not only would I avoid having to submit a new OpenAI call, but I could also avoid having to run my entire RAG pipeline. So kind of like a \"meta-RAG\" system that avoids having to run the actual RAG system for queries that are sufficiently similar to a cached query, or like a \"approximate\" cache.\n \nreply",
      "I was impressed by Upstash's approach to something similar with their \"Semantic Cache\".https://github.com/upstash/semantic-cache  \"Semantic Cache is a tool for caching natural text based on semantic similarity. It's ideal for any task that involves querying or retrieving information based on meaning, such as natural language classification or caching AI responses. Two pieces of text can be similar but not identical (e.g., \"great places to check out in Spain\" vs. \"best places to visit in Spain\"). Traditional caching doesn't recognize this semantic similarity and misses opportunities for reuse.\"\n \nreply",
      "I strongly advise not relying on embedding distance alone for it because it'll match these two:1. great places to check out in Spain2. great places to check out in northern SpainLogically the two are not the same, and they could in fact be very different despite their semantic similarity. Your users will be frustrated and will hate you for it. If an LLM validates the two as being the same, then it's fine, but not otherwise.\n \nreply",
      "Thanks for the detail! This is a use case we plan to support, and it will be configurable (for when you don\u2019t want it). Some of our customers run into this when different users ask a similar query - \u201cNY-based consumer founders\u201d vs \u201cconsumer founders in NY\u201d.\n \nreply",
      "That would totally destroy the user experience. Users change their query so they can get a refined result, not so they get the same tired result.\n \nreply",
      "Depends on the scenario. In a threaded query, or multiple queries from the same user - you\u2019d want different outputs. If 20 different users are looking for the same result - a cache would return the right answer immediately for no marginal cost.\n \nreply",
      "That's not the use case of the parent comment:> for queries that are sufficiently similar\n \nreply",
      "A cache is better when it's local rather than on the web. And I certainly don't need to pay anyone to cache local request responses.\n \nreply",
      "Congrats on the launch! I love the devex here and things you're focusing on.Have you had thoughts on how to you might integrate data from an upstream RAG pipeline, say as a part of a distributed trace, to aid in debugging the core \"am I talking to the LLM the right way\" use case?\n \nreply",
      "Thanks! You can layer on as much detail as you need by including meta tags in the header, which is useful for tracing RAG and agent pipelines. But would love to understand your particular RAG setup and whether that gives you enough granularity. Feel free to email me too - emma@usevelvet.com\n \nreply"
    ],
    "link": "https://www.usevelvet.com",
    "first_paragraph": "Log requests to your DB, optimize, and run experiments. Just two lines of code to get started. Warehouse every OpenAI and Anthropic request to your PostgreSQL database. Use logs to analyze, evaluate, and generate datasets.We store a customizable JSON object so you can granularly monitor usage, calculate cost, run evaluations, and fine-tune models. Enable caching to reduce costs and latency. Get full transparency into OpenAI's Batch and Files APIs using our built-in proxy support.\"We experiment with LLM models, settings, and optimizations. Velvet made it easy to implement logging and caching. And we're storing training sets to eventually fine-tune our own models. \"Velvet gives us a source of truth for what's happening between the Revo copilot, and the LLMs it orchestrates. We have the data we need to run evaluations, calculate costs, and quickly resolve issues.\"\"Our engineers use Velvet daily. It monitors AI features in production, even opaque APIs like batch. The caching feature reduce"
  },
  {
    "title": "Wasm2Mpy: Compiling WASM to MicroPython so it can run on Raspberrys (github.com/vshymanskyy)",
    "points": 43,
    "submitter": "syrusakbary",
    "submit_time": "2024-09-20T07:10:49.000000Z",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=41599579",
    "comments": [
      "What would be the recommendation to run on ESP32?https://github.com/wasm3/wasm3? https://github.com/espressif/esp-wasmachine ? https://github.com/bytecodealliance/wasm-micro-runtime/tree/... ? https://github.com/TOPLLab/WARDuino ?\n \nreply",
      "I feel like this project is a classic example of the README missing a \"Why?\" section. Not to justify the project, it just makes it hard to evaluate without understanding why they choose implementing a transpiler rather than an embedded WASM VM. Or why not transpile to native assembly? I'm sure they have good reasons but they aren't listed here.\n \nreply",
      "i think your questions are implicitly answered in the top page of the readme, but by showing rather than tellingesp32 and stm32 run three different native assembly instruction sets (though this only supports two of them, the others listed in the first line of the readme are all arm)the coremark results seem like an adequate answer to why you'd use a compiler rather than an interpreteri do think it would be clearer, though, to explain up front that the module being built is not made of python code, but rather callable from python code\n \nreply",
      "> i do think it would be clearer, though, to explain up front that the module being built is not made of python code, but rather callable from python codeI know nothing about micropython. Do the modules contain bytecode?\n \nreply",
      ".mpy modules can contain MicroPython bytecode and/or native machine code. In this case, WASM is compiled (via C) to native code. So the performance is very good, much better than interpreting either MicroPython bytecode or WASM bytecode.The conventional way of creating native modules for MicroPython is to write them in C. This work allows to use any language that supports WASM output target.\n \nreply",
      "Oh, I didn't know MicroPython was fully AOT. I'm surprised, since vanilla Python is typically interpreted with maybe a bytecode cache, right?\n \nreply",
      "It isn\u2019t fully AOT, but support for AOT modules is excellent.\n \nreply",
      "In this case, the modules contain native code compiled for the target architecture. Micropython has something approximating a dynamic linker to load them.https://docs.micropython.org/en/latest/develop/natmod.html\n \nreply",
      "Probably at least one of \"it's cool\" or \"I'm already using MicroPython\"\n \nreply",
      "Can we have python compiled to wasm compiled to python compiled to wasm compiled to python - just for obfuscation reasons?\n \nreply"
    ],
    "link": "https://github.com/vshymanskyy/wasm2mpy",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Compile WebAssembly to native MicroPython modules\n      \n\n\nCompile WebAssembly binary into a MicroPython module and load it dynamically on ESP32, Raspberry Pi Pico, STM32, nRF52 etc.\u2705 builds and runs OK\n\ud83d\udfe1 builds OK, doesn't run\n\ud83d\udea7 work in progressImportantThis is a Proof-of-Concept, not optimized or ready for actual use.You'll need:Set up the environment and build the .mpy module from .wasm:Output:NoteThis requires adding some glue code to the runtime.\nGlue code can be auto-generated, but for now it's a manual process.For example, test/simple.wasm just adds 2 numbers:The idea is very similar to embedded-wasm-apps:esp8266 requires the use of esp.set_native_code_location, and setting WASM_PAGE_SIZE to 8192 (or need to wait for WASM Custom Page Sizes) \u21a9AssemblyScript \u21a9not enough memory to run, need to wait for WASM Custom Page Sizes \u21a9 \u21a9"
  },
  {
    "title": "Neat Randomized Algorithms: RandDiag for Rapidly Diagonalizing Normal Matrices (ethanepperly.com)",
    "points": 50,
    "submitter": "KqAmJQ7",
    "submit_time": "2024-09-20T12:53:48.000000Z",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=41601517",
    "comments": [
      "I guess that is the same Tropp, at the end of the article, ashttps://arxiv.org/abs/0909.4061It is a pretty good framework for eigenvalues, as long as your eigenvalues are good (decay nicely). If your eigenvalues don\u2019t decay nicely\u2026 find a different problem!\n \nreply",
      "There's also a number of other algorithms for randomized numerical linear algebra (\"RandNLA\") that are especially useful when dealing with matrices that are too big to fit in memory, commonly occurring in \"big data\" applications.Here's a recent survey paper with an eye towards practical applications: https://arxiv.org/abs/2302.11474\n \nreply",
      "Interesting:> He and Kressner\u2019s algorithm is delightful. Ultimately, it uses randomness in only a small way. For most coefficients a_1, a_2 \\in \\real, a matrix Q diagonalizing a_1 H + a_2 S will also diagonalize A = H+iS. But, for any specific choice of a_1, a_2, there is a possibility of failure. To avoid this possibility, we can just pick a_1 and a_2 at random. It\u2019s really as simple as that.Does anyone use randomized algorithms like these at work? I\u2019m very curious about the conditions where it makes sense. Another comment links to a monograph but I\u2019m more curious about the product side. I worked a little on geometry processing for maps in the past and I don\u2019t think we used any randomized algorithms.I can see how you could e.g. fix a the random seed for a partition of the data so that if you end up in the bad case you can change it (similar to how you can change consistent hashing keys to load balance).\n \nreply"
    ],
    "link": "https://www.ethanepperly.com/index.php/2024/07/02/neat-randomized-algorithms-randdiag-for-rapidly-diagonalizing-normal-matrices/",
    "first_paragraph": "Ethan N. EpperlyComputational Scientist and MathematicianMenuConsider two complex-valued square matrices  and . The first matrix  is Hermitian, being equal  to its conjugate transpose . The other matrix  is non-Hermitian, . Let\u2019s see how long it takes to compute their eigenvalue decompositions in MATLAB:We see that it takes  longer to compute the eigenvalues of the non-Hermitian matrix  as compared to the Hermitian matrix . Moreover, the matrix  of eigenvectors for a Hermitian matrix  is a unitary matrix, .There are another class of matrices with nice eigenvalue decompositions, normal matrices. A square, complex-valued matrix  is normal if . The matrix  of eigenvectors for a normal matrix  is also unitary, . An important class of normal matrices are unitary matrices themselves. A unitary matrix  is always normal since it satisfies .Let\u2019s see how long it takes MATLAB to compute the eigenvalue decomposition of a unitary (and thus normal) matrix:Even longer than it took to compute an eige"
  },
  {
    "title": "Twitter/X will let people you've blocked see your posts (theverge.com)",
    "points": 132,
    "submitter": "Kye",
    "submit_time": "2024-09-23T20:24:24.000000Z",
    "num_comments": 228,
    "comments_url": "https://news.ycombinator.com/item?id=41630094",
    "comments": [
      "I haven't seen any official reasoning for this. Does anyone have a link to the explanation for this change occurring to begin with?I would like if there was some technical or biz reasoning behind it, maybe I've just not seen it?\n \nreply",
      "I always thought this was a stupid restriction.  \nYou can't view the post while authenticated but you can view the post while unauthenticated.\n \nreply",
      "It provides friction for further misbehaving. Imagine you blocked someone who has serious issues with people who #foobar. It's better for you if they can't easily find you and repost your content to their community who also hate #foobar. It's not perfect, but the friction helps prevent drive-by bad behaviour.\n \nreply",
      "No it doesn't. The people who are malicious about it will be using multiple accounts. The block button doesn't stop them. If anything, it provides them ammunition to go \"See, this person is a sensitive one, let's add them to the list\".Either your posts are public or they're not. There's a pretty clear distinction between the two, and anyone who thinks otherwise is sorely mistaken. The risk of people re-posting your content is a natural consequence of your aspirations to be popular on social media, and we shouldn't be giving people a false sense of security.\n \nreply",
      "This is the old \"it's not perfect, therefore, it's useless\" type of argument. No one claimed it's perfect, but that doesn't mean it's useless.You don't want to interact with me? Fine. Then why should I still see your posts? Yes, some crazy people will go to lengths to see it anyway, but most don't and will take the hint, shrug, and go away.\n \nreply",
      "I think is the old double edged sword instead.\n \nreply",
      "Ironically Elon's been blocking anyone who talks about his missile programs,https://www.reddit.com/r/EnoughMuskSpam/comments/1fnvt8n/elo...\n \nreply",
      "Nah this is a classic case of the no true perfect double-edged slippery-sloped sword of damocles being the enemy of the good no true double-edged slippery-sloped sword of damocles that shouldn't be thrown in glass houses where the chickens have come to roost.\n \nreply",
      "> It's not perfect, but the friction helps prevent drive-by bad behaviour.> No it doesn't.There's really no use in continuing this discussion when one party is unable/unwilling to use precise language to discuss marginal effects. Obviously I presume what you mean is that the marginal effect is too small to be relevant, but discussions with people who round that off to \"No it doesn't\" rarely go anywhere productive.\n \nreply",
      "> The block button doesn't stop them.No and nobody claimed it does. Making it just a bit harder and making the other party jump through an extra hoop reduces it though. The extra friction has been implemented on many platforms and it works. Instagram adds friction in a different way, but also claims it has a positive result: https://builtin.com/software-engineering-perspectives/key-be...You can also see people migrating to other platforms who raise the lack of search / being easily found as a feature. It's not black and white and it's not public or not. There's a whole range of how accessible your content is to parties who will attack you.\n \nreply"
    ],
    "link": "https://www.theverge.com/2024/9/23/24252438/x-blocked-users-view-public-posts",
    "first_paragraph": "By  Emma Roth and  Kylie RobisonX will now make your posts visible to users you\u2019ve blocked. In a reply on Monday, X owner Elon Musk said the \u201cblock function will block that account from engaging with, but not block seeing, public post.\u201dCurrently, X displays a \u201cYou\u2019re blocked\u201d message when trying to view the profile of a person who\u2019s blocked you. In addition to blocking all posts, it also prevents you from seeing their replies, media, followers, and following list.While a source at X told The Verge that the platform is making this change because people can already view posts from users who\u2019ve blocked them when using another account or when logged out, several of us at The Verge (myself included) have noticed that X actually prevents you from viewing someone\u2019s profile if you\u2019re logged out.Musk has been vocal about his dislike of the block button. Last year, he said the feature \u201cmakes no sense\u201d and that \u201cit needs to be deprecated in favor of a stronger form of mute.\u201d He also threatened to"
  },
  {
    "title": "Ethernet in 17 lines of Spade [video] (youtube.com)",
    "points": 10,
    "submitter": "zdw",
    "submit_time": "2024-09-24T22:10:27.000000Z",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=41641495",
    "comments": [
      "I think that's a bit click-baity given that Ethernet appears to be a library of some sort here.Cool-looking language, but would be better to promote it based on its merits.\n \nreply",
      "If you had no idea either, here: https://spade-lang.org/.So it's a hardware description language.\n \nreply"
    ],
    "link": "https://www.youtube.com/watch?v=0a8P0NLYPWA",
    "first_paragraph": ""
  },
  {
    "title": "Fully documented source code for Lander on the Acorn Archimedes (bbcelite.com)",
    "points": 158,
    "submitter": "ibobev",
    "submit_time": "2024-09-24T10:47:23.000000Z",
    "num_comments": 35,
    "comments_url": "https://news.ycombinator.com/item?id=41635166",
    "comments": [
      "According to Wikipedia, \"Lander\" is only a demo, the actual game is \"Zarch\" [1]. Later ported to the Amiga, and renamed \"Virus\" (which is the title I knew, having grown up on the Amiga).Very impressive, and cool to read the ARM assembly since it looks similar today of course. :)[1]: https://en.wikipedia.org/wiki/Zarch\n \nreply",
      "I've always felt that calling Lander a \"demo\" was harsh. It's a fully featured game in itself, and has features that Zarch doesn't (such as falling rocks and hover mode). Yes, Zarch was the result of continued development of Lander, but Lander stands on its own, and to me, that makes it a game in its own right, not a demo.It's also a lot more relaxing to play. There's nothing more chill than flying over the bucolic landscape of Lander - no aliens or viruses in this version!\n \nreply",
      "It's a demo because Braben called it one!It's technically a game; there's no win condition but there is lose condition (3 lives) and a scoring system.But I don't think most people play it as a game (aiming to get a new hiscore), they play it as a toy, slowly become more adept at the controls and meander the landscape, the points don't matter.\n \nreply",
      "OK, I guess if Braben says it's a demo, then it's a demo - fair point!I still think it's a harsh term, especially when Lander has features that Zarch doesn't, and a really different atmosphere.Ah well, me and Lander will be hovering here in the corner, throwing rocks at Zarch and all its fancy features. ;-)\n \nreply",
      "Thanks! My memories of \"Virus\" was that it was super-mega-difficult, but of course it was the late 80s and games were not afraid of having a bit of a learning curve to them. :)\n \nreply",
      "One of the coolest things about BBC BASIC was the ability to slot inline assembly, and (I think?) reference the same variables in both modes as in the code on the op site.[BASIC]FOR I% = 1 TO (TILES_Z - 1) / 2[[ASSEMBLY]  OPT    pass%\n\n  EQUB   &E3, TILES_X               \\ Tile row data (even)\n  EQUB   &E4, TILES_X               \\ Tile row data (odd)\n\n][BASIC AGAIN]NEXT[https://lander.bbcelite.com/source/all/lander_a.html#landsca...\n \nreply",
      "I love the BASIC assembler on the BBC Micro and Archimedes. It is a work of art.Incidentally, the fully buildable Lander source code in the website's accompanying git repository is also in BBC BASIC format - as an attempt to imagine what the original source might have looked like.A Python script converts it to vasm-compatible format for compiling, but you can also build it on a real Archimedes if you want to. See https://lander.bbcelite.com/about_site/building_lander.html for details.\n \nreply",
      "To clarify for anyone else reading this: BBC BASIC had an assembler built in so that you could write in-line assembly language to be assembled at a given memory location, and the source is in the format used by the inline assembler.It doesn't mean there's a port of the game written completely in BASIC!\n \nreply",
      "Oh the envy. The rest of us shlubs on other platforms had to hand assemble and poke it into memory. Ugh.\n \nreply",
      "This is an incredible labor of love and historical record. The technical articles alone have a depth that goes further than the documentation for any living project that I know of. I can only imagine how much work has gone into this. He gives a talk on his disassembly work here, which deserves a wider audience: https://www.youtube.com/watch?v=orP_0aQo-Pc\n \nreply"
    ],
    "link": "https://lander.bbcelite.com/",
    "first_paragraph": "Skip to navigationMy software archaeology sitesMark Moxon's Software ArchaeologyElite on the BBC Micro and NESAviator on the BBC MicroRevs on the BBC MicroLander on the Acorn Archimedes *My writing sitesMark Moxon's Travel WritingWalking Land's End to John o'GroatsTubewalker: The Tube, on FootContact details and moreMark Moxon's HomepageThis site contains reconstructed source code for Lander, David Braben's epic game for the Acorn Archimedes, with every single line documented and (for the most part) explained.Lander was the very first game to be released for the ARM processor, and it is both a milestone and a masterpiece.My hope is that this site will be useful for those who want to learn more about Lander and what makes it tick. It is provided on an educational and non-profit basis, with the aim of helping people appreciate the second classic game from this legend of 3D coding (the first classic being Elite, of course).Note that the code on this site is not David Braben's original sou"
  },
  {
    "title": "Show HN: JSON For You \u2013 Visualize JSON in graph or table views (github.com/loggerhead)",
    "points": 152,
    "submitter": "loggerhead",
    "submit_time": "2024-09-24T08:20:38.000000Z",
    "num_comments": 45,
    "comments_url": "https://news.ycombinator.com/item?id=41634356",
    "comments": [
      "I have a UX complaint about the carousel images on https://json4u.com/While I was looking at the image and trying to understand, the carousel moved to the next image. It's too fast, and I can't get back to the first image without it immediately switching me to the second image. I can't get it to sit still either and NOT switch to the next image. Some carousels pause themselves when the cursor is hovering over it, but this one did not pause when I did that. The only way I had enough time to digest the information was by right clicking on the image and opening it in a new tab.\n \nreply",
      "https://shouldiuseacarousel.com\n \nreply",
      "The pricing icons under the \"free\" section are also a bit confusing.  I'm not sure at a glance that I'm getting or not getting \"30/month graph mode view\".\n \nreply",
      "Thank you very much for your suggestions! I will optimize its experience. By the way, have you seen the two switch buttons on either side of the carousel? I'm thinking about whether I need to adjust its background color to make it more noticeable.\n \nreply",
      "It's a great tool, but no one is going to want to pay $10/mo for it.You will get a better ROI if you replace the pricing with a link to your socials/ website.\n \nreply",
      "You mean offering it for free to everyone, but driving traffic to social media? Also, can I ask, from a consumer's perspective, what pricing do you think would be acceptable for my product?\n \nreply",
      "I don\u2019t get this point, but I 100% agree that a tool turning JSON into graphical views asking for a subscription is a blatant grift. You should be selling one-time payment perpetual licenses IMO.You\u2019re competing in a very crowded market of generally free tools. Unless your offering is VERY good you\u2019re going to struggle selling at all\u2026 $5-10 maybe? That\u2019s about as much as I\u2019d be willing to pay for a hyper-specific tool like this if it makes one of my tasks at hand a little easier.\n \nreply",
      "I understand your point, but I believe that a one-time payment is not conducive to its ongoing development. Think about it, if you charge all the money at once, where does the motivation to continue updating come from after a year or two? But indeed, there is an issue with pricing. You mentioned the $5-$10 price range for a perpetual license, right? If it were a subscription model, how much would you be willing to pay per month?\n \nreply",
      "Never argue with a customer. The customer doesn\u2019t give 2 cent about your motivation, it\u2019s not their job. When I saw the pricing I had a good laugh and moved on.If the only motivation for this product is money, then it will die in no time. Comparing the value I\u2019m getting to the 7\u20ac / month on Amazon prime, or the 10\u20ac for Apple Music \u2013 that\u2019s the value perception you\u2019re competing against.If you tell me you need 120\u20ac a year from multiple customers to maintain and improve a json app  good luck. One time purchase \u2013 get access \u2013 done. You can later upsell me with even more features in a v2 or whatever. I also doubt this tool has a lot of running costs to warrant this much.Maybe if you work in SF and you make 300k a year so 10 bucks don\u2019t mean much, but for the rest of the world 10$ is a lot of money / month.\n \nreply",
      "I love json tools, I use several like https://jsoneditoronline.org/\nAny chance of a hosted version?\n \nreply"
    ],
    "link": "https://github.com/loggerhead/json4u",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n\n\nThe best JSON visualization and processing tool.\n\n\nTry it now \u00b7 \u4e2d\u6587\u7f51\u5740\nIf you want to test webhook:I'm really excited that you are interested in contributing to JSON For You. Before submitting your contribution, please make sure to take a moment and read through the following guide:Search for the TODO keyword in the code first. If it's found, then you can work base on it directly.Otherwise:I wish to keep JSON For You lightweight and fast. Please being aware of the number of npm dependencies and their size and don't add unnecessary dependencies.Run pnpm test to make sure your code pass the core tests.Apache License \u00a9 2022-Present loggerhead"
  },
  {
    "title": "\"Creounity Time Machine\", the universal date converter for coin collectors (creounity.com)",
    "points": 39,
    "submitter": "cvarjas",
    "submit_time": "2024-09-24T18:36:22.000000Z",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=41639589",
    "comments": [
      "Woah, what an interesting site! I'm a very amateur currency (mostly paper money) collector and have struggled mightily with creating a searchable collection index due to the differences in how various countries mark their currencies. I don't have anything particularly old, but have a bit over 1,000 individual pieces.From time to time I need to rely on hours of searches all over the web to try to identify a particular piece or variation of a piece. It can sometimes just be too hard. These kinds of passion sites are what made the old internet incredibly valuable and I'm so glad they can still exist.The text here about American paper currency is also really interesting https://creounity.com/apps/time_machine/?go=mints.php&lang=e...\n \nreply",
      "Love the concept not the UX. I'd love to find the internal converter code\n \nreply"
    ],
    "link": "https://creounity.com/apps/time_machine/index.php?go=&lang=en",
    "first_paragraph": "Idea, implementation and design by\n              Andrey Tretyakov (aka inscriptor)\n              \nand Creative Force\n2009\u2013.\n\u25aa\n \n              Shortcut of the Creounity Time Machine(English version) is:creounity.com/tmconv\n\n\u25aa\nAcknowledgements\n\u25aa\nFriendly sites\n\u25aa\n              \n              The number of countrieswhose coin collectorsuse the web application\u00abCreounity Time Machine\u00bb:214(Google Analytics)\n\u25aa\n\n              This SaaS is freeware.\n\u25aa\nPatent protected (click to show/hide details).\n              \n\nCertificate #117 issued by the Chamber of Commerce and Industry of Samara region, Russian Federation, in the year 2010.\n              \n\nThis is the universal date converter that covers 33 chronological systems and counting. With\u00a0the help of Creounity Time Machine you can easily find out when your coins were minted.To launch the Time Machine, simply select the chronological system you are interested\u00a0in from\u00a0the\u00a0menu on\u00a0the\u00a0lefthand side of this page by clicking on it (or touching/tapping"
  }
]