[
  {
    "title": "Cognitive load is what matters (minds.md)",
    "points": 631,
    "submitter": "zdw",
    "submit_time": "2024-12-22T22:18:12 1734905892",
    "num_comments": 258,
    "comments_url": "https://news.ycombinator.com/item?id=42489645",
    "comments": [
      "Aligning the computer's and the humans' thinking processes.  Cognitive load is exceptionally important - one of the few uncontravenable facts in human psychology is that healthy human short term memory has a capacity of 5 items plus or minus 2.  So reliably 5.  And thus the maximum number of thinking balls you should be juggling at one time.Which then leads to thinking about designs that lead to the management of cognitive load - thus the nature of the balls changes due to things like chunking and context.  Which are theoretical constructs that came out of that memory research.So yes, this is pretty much principal zero -  cognitive load and understanding the theory underneath it are the most important thing - and are closely related to the two hard problems in computer science (cache invalidation, naming things and off by one errors).Thank you for attending my TED talk\n \nreply",
      "I've been thinking about the notion of \"reasoning locally\" recently. Enabling local reasoning is the only way to scale software development past some number of lines or complexity. When reasoning locally, one only needs to understand a small subset, hundreds of lines, to safely make changes in programs comprising millions.I find types helps massively with this. A function with well-constrained inputs and outputs is easy to reason about. One does not have to look at other code to do it. However, programs that leverage types effectively are sometimes construed as having high cognitive load, when it in fact they have low load. For example a type like `Option<HashSet<UserId>>` carries a lot of information(has low load): we might not have a set of user ids, but if we do they are unique.The discourse around small functions and the clean code guidelines is fascinating. The complaint is usually, as in this post, that having to go read all the small functions adds cognitive load and makes reading the code harder. Proponents of small functions argue that you don't have to read more than the signature and name of a function to understand what it does; it's obvious what a function called last that takes a list and returns an optional value does. If someone feels compelled to read every function either the functions are poor abstractions or the reader has trust issues, which may be warranted. Of course, all abstractions are leaky, but perhaps some initial trust in `last` is warranted.\n \nreply",
      "> A function with well-constrained inputs and outputs is easy to reason about.It's quite easy to imagine a well factored codebase where all things are neatly separated. If you've written something a thousand times, like user authentication, then you can plan out exactly how you want to separate everything. But user authentication isn't where things get messy.The messy stuff is where the real world concepts need to be transformed into code. Where just the concepts need to be whiteboarded and explained because they're unintuitive and confusing. Then these unintuitive and confusing concepts need to somehow described to the computer.Oh, and it needs to be fast. So not only do you need to model an unintuitive and confusing concept - you also need to write it in a convoluted way because, for various annoying reasons, that's what performs best on the computer.Oh, and in 6 months the unintuitive and confusing concept needs to be completely changed into - surprise, surprise - a completely different but equally unintuitive and confusing concept.Oh, and you can't rewrite everything because there isn't enough time or budget to do that. You have to minimally change the current uintuitive and confusing thing so that it works like the new unintuitive and confusing thing is supposed to work.Oh, and the original author doesn't work here anymore so no one's here to explain the original code's intent.\n \nreply",
      "> Oh, and in 6 months the unintuitive and confusing concept needs to be completely changed into - surprise, surprise - a completely different but equally unintuitive and confusing concept.But you have to keep the old way of working exactly the same, and the data can't change, but also needs to work in the new version as well.  Actually show someone there's two modes, and offer to migrate their data to version 2?  No way - that's confusing!  Show different UI in different areas with the same data that behaves differently based on ... undisclosed-to-the-user criteria.  That will be far less confusing.\n \nreply",
      "As a user 'intuitive' UIs that hide a bunch of undisclosed but relevant complexity send me into a frothing rage.\n \nreply",
      "I'm trying to learn acceptance: how not to get so angry at despicable UIs.Although I admit I'm kinda failing. My minor successes have been by avoiding software: e.g. giving up programming (broken tools and broken targets were a major frustration) and getting rid of Windows.\n \nreply",
      "Having given up programming, what do you do now?\n \nreply",
      "Plus to everything said. It's an everyday life of \"maintainer\", picking the next battle to pick the best way to avoid sinking deeper and defending the story that exactly \"this\" is the next refactoring project. All that while balancing different factors as you mention to actually believe oneself, because there are countless of paths..\n \nreply",
      "This puts things really well. I\u2019ll add into it that between the first white boarding session and the first working MVP there\u2019ll be plenty of stakeholders who change their mind, find new info, or ask for updates that may break the original plan\n \nreply",
      "It can be done. Sometimes.I am so proud and happy, when I can make a seemingly complicated change quickly, because the architecture was well designed and everthing neatly seperated.Most of the time though, it is exactly like you described. Or randalls good code comic:https://xkcd.com/844/Allmost too painful to be funny, when you know the pain is avoidable in theory.Still, it should not be an excuse to be lazy and just write bad code by default. Developing the habit of making everything as clean, structured and clear as possible allways pays of. Especially if that code, that was supposed to be a quick and dirty throw away code experiment somehow ended up being used and 2 years later you suddenly need to debug it.\n(I just experienced that joy)\n \nreply"
    ],
    "link": "https://minds.md/zakirullin/cognitive",
    "first_paragraph": "The logo image was taken from Reddit.It is a living document, last update: November 2024. Your contributions are welcome! There are so many buzzwords and best practices out there, but let's focus on something more fundamental. What matters is the amount of confusion developers feel when going through the code.Confusion costs time and money. Confusion is caused by high cognitive load. It's not some fancy abstract concept, but rather a fundamental human constraint.Since we spend far more time reading and understanding code than writing it, we should constantly ask ourselves whether we are embedding excessive cognitive load into our code. Cognitive load is how much a developer needs to think in order to complete a task.When reading code, you put things like values of variables, control flow logic and call sequences into your head. The average person can hold roughly four such chunks in working memory. Once the cognitive load reaches this threshold, it becomes much harder to understand thi"
  },
  {
    "title": "Portspoof: Emulate a valid service on all 65535 TCP ports (github.com/drk1wi)",
    "points": 160,
    "submitter": "nateb2022",
    "submit_time": "2024-12-25T17:44:04 1735148644",
    "num_comments": 59,
    "comments_url": "https://news.ycombinator.com/item?id=42509953",
    "comments": [
      "It feels inevitable that computer security will continue evolving towards \"active defense\" typified by approaches like the above. Look at how complex and many-layered your immune system is, and consider that eventually your computer and/or network will resemble that as well.\n \nreply",
      "IMO this is still a passive type of security through obfuscation. Active defence would be more like returning zip bombs to known intruders in order to crash the process.\n \nreply",
      "Or a tar pit: https://github.com/skeeto/endlessh\n \nreply",
      "IT is growing up gradually.  It's only had a few decades to worry about security and I've seen most of them.One day, IT will become time served but not today.\n \nreply",
      "Interesting concept, am curious how this withstands community review and analysis.Bit puzzled though, by the statement made immediately after stating that it is GPL2: For commercial, legitimate applications, please contact the author for the appropriate licensing arrangements.Since the GPL2 doesn't permit restricting what others do with GPLd software, I don't think this statement is doing what the author hopes; they might want to consult a lawyer.(IANAL, etc., but there is nothing in there to prevent me, e.g., from building a business out of this, charging gazillions, and keeping it all for myself, provided I make the source available to my customers.)\n \nreply",
      "Provided you make the source for any derivative works available to your customers.It\u2019s not uncommon that in situations where that\u2019s undesirable (e.g. a closed-source C library that statically links a GPL\u2019d project) that the library owner pays a fee for a separate license allowing that closed-source distribution.Also, this is sometimes done when it\u2019s not strictly legally necessary, either for risk avoidance or as a way to support the project in corporate environments where \u201clicensing fee\u201d gets waved through but \u201cdonation\u201d gets blocked.\n \nreply",
      "I believe the this doesn't apply if you're using existing APIs or using GPL code as a library, otherwise many many corporate codebases would be forced to be open sourced.\n \nreply",
      "GPL absolutely applies when using a library (unless a separate exception has been made).  Of course, the LGPL is often used for libraries when this isn't desired by the author.\n \nreply",
      "> or using GPL code as a libraryNo. The copyleft nature still applies to libraries. That's why the LGPL exists. And the exception in the license for gcc for programs compiled by gcc.\n \nreply",
      "Only if you distribute the binary/source of the GPLd library. You may build a non-GPL program that dynamically links with a GPL library and freely distribute it. As long as your program does not contain copyrightable code, you do not have to comply with the licence requirements, because you do not need a licence at all to do that. Same applies for static linking if you only distribute the source and require your users compile the program themselves.This is not limited to GPL, but applies to proprietary libraries as well. It's OK to require a proprietary library at runtime and you don't need a licence to do that. As long as you do not distribute some intellectual property, copyright law and its limitations are not applicable at all.This sounds quite assertive, so compulsory \"IANAL, this is just my interpretation\".\n \nreply"
    ],
    "link": "https://github.com/drk1wi/portspoof",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Portspoof\n      Portspoof software overview (https://drk1wi.github.io/portspoof/)** Short description:**The Portspoof program primary goal is to enhance OS security through a set of following techniques:All 65535 TCP ports are always openInstead of informing an attacker that a particular port is in a CLOSED or FILTERED state Portspoof will return SYN+ACK for every port connection attempt/As a result it is impractical to use stealth (SYN, ACK, etc.) port scanning against your system, since all ports are always reported as OPEN:Every open TCP port emulates a servicePortspoof has a huge database of dynamic service signatures, that will be used to generate fake banners and fool scanners.Scanning software usually tries to determine a service version that is running on an open port. Portspoof will respond to every service probe with a val"
  },
  {
    "title": "I Thought I Found a Bug (os2museum.com)",
    "points": 28,
    "submitter": "MBCook",
    "submit_time": "2024-12-25T19:55:07 1735156507",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.os2museum.com/wp/i-thought-i-found-a-bug/",
    "first_paragraph": ""
  },
  {
    "title": "Reads Causing Writes in Postgres (jesipow.com)",
    "points": 33,
    "submitter": "thunderbong",
    "submit_time": "2024-12-22T10:24:07 1734863047",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://jesipow.com/blog/postgres-reads-cause-writes/",
    "first_paragraph": "2024-12-21It is good practice to regularly inspect the statements running in the hot path of your Postgres instance. One way to do this is to examine the pg_stat_statements view, which shows various statistics about the SQL statements executed by the Postgres server.Among many other interesting columns, you will find the shared_blks_dirtied and shared_blks_written columns. They keep track of how many blocks, Postgres' smallest unit of I/O, in the shared buffer cache are modified by a statement and (ultimately) written to disk.One observation you may make when inspecting the view is that SELECT queries show non-zero values in the shared_blks_written and shared_blks_dirtied columns. This seems counterintuitive at first as it indicates that a simple SELECT query, which you would expect to only read data, can in fact cause data to be written (keeping track of the statement statistics themselves is not what causes these writes).This article discusses two mechanisms, setting hint bits for tr"
  },
  {
    "title": "Show HN: Super Snowflake Maker (supersnowflakemaker.com)",
    "points": 33,
    "submitter": "shalanah",
    "submit_time": "2024-12-23T12:09:28 1734955768",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=42493832",
    "comments": [
      "A few years ago I saw a talk at a Math conference about some mathematical models for how the shapes of snowflakes come to be.I don't recall the details, but I believe one of them was even able to generate non-hexagonal snowflakes which happen under some circumstances.I've been hoping to create a website around one of these models for some time now.\n \nreply",
      "That was really neat. Thank you!\n \nreply",
      "Hugged to death.\n \nreply"
    ],
    "link": "https://supersnowflakemaker.com",
    "first_paragraph": ""
  },
  {
    "title": "Server-Sent Events (SSE) Are Underrated (igorstechnoclub.com)",
    "points": 119,
    "submitter": "Igor_Wiwi",
    "submit_time": "2024-12-25T21:35:55 1735162555",
    "num_comments": 57,
    "comments_url": "https://news.ycombinator.com/item?id=42511318",
    "comments": [
      "A while ago I created Mercure: an open pub-sub protocol built on top of SSE that is a replacement for WebSockets-based solutions such as Pusher. Mercure is now used by hundreds of apps in production.At the core of Mercure is the hub. It is a standalone component that maintains persistent SSE (HTTP) connections to the clients, and it exposes a very simple HTTP API that server apps and clients can use to publish. POSTed updates are broadcasted to all connected clients using SSE. This makes SSE usable even with technologies not able to maintain persistent connections such as PHP and many serverless providers.Mercure also adds nice features to SSE such as a JWT-based authorization mechanism, the ability to subscribe to several topics using a single connection, events history, automatic state reconciliation in case of network issue\u2026I maintain an open-source hub written in Go (technically, a module for the Caddy web server) and a SaaS version is also available.Docs and code are available on https://mercure.rocks\n \nreply",
      "The site mentions battery-efficiency specifically. I'm curious what features does Mercure provide in that direction?\n \nreply",
      "I utilized SSE when building automatic restart functionality[0] into Doppler's CLI. Our api server would send down an event whenever an application's secrets changed. The CLI would then fetch the latest secrets to inject into the application process. (I opted not to directly send the changed secrets via SSE as that would necessitate rechecking the access token that was used to establish the connection, lest we send changed secrets to a recently deauthorized client). I chose SSE over websockets because the latter required pulling in additional dependencies into our Golang application, and we truly only needed server->client communication.\n One issue we ran into that hasn't been discussed is HTTP timeouts. Some load balancers close an HTTP connection after a certain timeout (e.g. 1 hour) to prevent connection exhaustion. You can usually extend this timeout, but it has to be explicitly configured. We also found that our server had to send intermittent \"ping\" events to prevent either Cloudflare or Google Cloud Load Balancing from closing the connection, though I don't remember how frequently these were sent. Otherwise, SSE worked great for our use case.[0] https://docs.doppler.com/docs/automatic-restart\n \nreply",
      "Generally you're going to want to send ping events pretty regularly (I'd default to every 15-30 seconds depending on application) whether you're using SSE, WebSockets, or something else. Otherwise if the server crashes the client might not know the connection is no longer live.\n \nreply",
      "What do you do for mobile phones: using data/radio for pings would kill the battery?After locking the phone, how is the ping restarted when the phone is unlocked? Or backgrounding the browser/app?\n \nreply",
      "Yeah with cloudflare you need to do it every 30 seconds as the timeout is is 60 seconds\n \nreply",
      "Then why not do it every 59 seconds :)\n \nreply",
      "I also used SSE 6 or so years ago, and had the same issue with out load balancer; a bit hacky but what I did was to set a timer that would send a single colon character (which is the comment delimiter IIRC) periodically to the client. Is that what you meant by \u201cping\u201d?\n \nreply",
      "It doesn\u2019t mention the big drawback of SSE as spelled out in the MDN docs:\u201cWarning: When not used over HTTP/2, SSE suffers from a limitation to the maximum number of open connections, which can be especially painful when opening multiple tabs, as the limit is per browser and is set to a very low number (6).\u201d\n \nreply",
      "One of my company's APIs uses SSE, and it's been a big support headache for us, because many people are being corporate firewalls that don't do HTTP/2 or HTTP/3, and people often open many tabs at the same time. It's unfortunately not possible to detect client-side whether the limit has been reached.Another drawback of SSE is lack of authorization header support. There are a few polyfills (like this one [1]) that simulate SSE over fetch/XHR, but it would be nice to not need to add the bloat.[1] https://github.com/EventSource/eventsource\n \nreply"
    ],
    "link": "https://igorstechnoclub.com/server-sent-events-sse-are-underrated/",
    "first_paragraph": ""
  },
  {
    "title": "Into CPS, Never to Return (bernsteinbear.com)",
    "points": 56,
    "submitter": "g0xA52A2A",
    "submit_time": "2024-12-25T19:43:10 1735155790",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=42510696",
    "comments": [
      "In case anyone is wondering, \"when would I EVER use this (in hand-written code)?\", it's a trick that makes DSL (domain specific language) and small language implementation much easier. A great reference for this is Peter Norvig's Paradigms of Artificial Intelligence Programming, when he implements a subset of Prolog and bolsters the functionality using CPS[1].The second, although more\nobscure, is that you can use it in languages that do not have \"non-local exits\" to terminate a deeply nested computation early or return to an earlier point in the call stack.  For example, Clojure does not have nonlocal exits, as only the final form of the function is returned. However, using CPS, you can terminate the expression early and return to the original caller without executing the rest of the function. You probably only want to use this in specialized cases though or it may upset your team, they are tricky to debug.Lastly and probably most controversially, you can make an extensible \"if\" statement using CPS if you are in a dynamic language and you have no other tools to do so. Admittedly I do sometimes use this in ClojureScript.  This allows you to write \"append only\" code without continually growing the \"cond\". Again, most teams don't like this, so it depends on the circumstances, but might be\nnice to have in your back pocket if you need it.[1]: https://github.com/norvig/paip-lisp/blob/main/docs/chapter12...\n \nreply",
      "I've also used it to make a function tail recursive, which is useful in languages with TCO.\n \nreply",
      "It's also really helpful with defunctionalization; search \"defunctionalize the continuation\" for stuff on that\n \nreply",
      "The author references [scrapscript](https://scrapscript.org/), hopefully we'll hear more about it.\n \nreply",
      "Now that I'm back at a computer:* https://bernsteinbear.com/blog/scrapscript/* https://bernsteinbear.com/blog/scrapscript-baseline/* https://bernsteinbear.com/blog/scrapscript-tricks/* https://bernsteinbear.com/blog/type-inference/* https://bernsteinbear.com/blog/row-poly/and the repo for the main implementation: https://github.com/tekknolagi/scrapscript\n \nreply",
      "See my other blog posts and GitHub if you would like some more!\n \nreply",
      "I realize this is something I should probably know but I've never been able to pin down a definition nor have I used a language with this feature -- could you maybe explain what a \"content addressable language\" is and why that is important? It seems like it's really important but I have no idea why.  You explain it here[1] but it's somewhat brief. I realize it probably should be self-evident why it's important but it's not clicking for me.It's somewhat like when Jack Skelington is trying to explain the meaning of Christmas to the residents of Halloween Town[2] and somehow it hasn't stuck yet.[1]: https://scrapscript.org/#ContentAddressibleEverything[2]: https://youtu.be/l6QZUcRJw-A\n \nreply",
      "To be clear, I am not Taylor and I did not come up with scrapscript! That website belongs to him and I'm just a random guy on the internet who emailed him and built an implementation.The way I think about it is kind of like software versions. Say you want to do some kind of reproducible software. You can write that your software depends on jazzinator==3.0.0 but that's kind of unsatisfying because it relies either on tools or people to make sure that versions are immutable. It also relies on jazzinator to specify its own dependencies pretty strictly. So maybe you end up inventing the concept of a lockfile to partially solve that problem, but you still have the issue of relying on a third party to not change things up on you.However, if you can address a library by a name that is computed from its code (a hash), things get interesting. You end up with this tree/DAG of dependencies where every dependency is immutable--you can't change the code without also changing the name. It's a Merkle DAG like Git. You do lose the ability to say things like \"above version 2.5\"... sort of.If you also build a ref or tag system (similar to Git refs), you can kinda do normal style versioning on top of this content addressable world. But again, that relies on someone or something (maybe your hash-based store) to keep a map point-version names to hash names.The other thing that's interesting with scrapscript in particular is since everything is addressable, you can use (sort of implicitly import/download) any value from any other program in a repository readable by you. But no scrapscript implementation fully does this yet, as far as I'm aware. For a fully working system, check out Unison.\n \nreply",
      "Oh that is really fascinating, thank you. That has some really interesting implications for dependency management that I will have to think through. It sounds like that implies some really useful tree properties on dependency checking, like if the part of the program you are relying on matches a certain hash you don't need to check down the chain because you can be sure the rest of the nodes are as you expect.Much appreciated!\n \nreply",
      "It\u2019s also useful in typed languages to introduce an existentially quantified type\n \nreply"
    ],
    "link": "https://bernsteinbear.com/blog/cps/",
    "first_paragraph": "CPS, or continuation-passing style, is an intermediate representation for\nprograms, particularly functional programs. It\u2019s used in compilers for\nlanguages such as SML and Scheme.In CPS, there are two rules: first, that function/operator arguments must\nalways be trivial; second, that function calls do not return. From this, a\nlot falls out.In this post, we\u2019ll introduce CPS by building a simple (Plotkin1) CPS\ntransform from a small Scheme-like language. We\u2019ll sketch some optimizations on\nthe IR. Then we\u2019ll look at a couple of the common ways to actually compile the\nIR for execution.We have integers: 5We have some operations on the integers: (+ 1 2), (< 3 4) (returns 1 or 0)We can bind variables: (let ((x 1)) x) / (letrec ...) ?We can create single-parameter functions2: (lambda (x) (+ x 1))\nand they can close over variablesWe can call functions: (f x)We can branch: (if (< x y) x y) (where we have decided to use 0 and 1 as\nbooleans)We\u2019re going to implement a recursive function called cps i"
  },
  {
    "title": "A new learning experience on MDN (developer.mozilla.org)",
    "points": 112,
    "submitter": "Vinnl",
    "submit_time": "2024-12-23T12:36:03 1734957363",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=42493962",
    "comments": [
      "It doesn\u2019t look too great to be honest. It\u2019s quite verbose and gets steps out of order. It starts out with loading a font from Google Fonts. https://developer.mozilla.org/en-US/docs/Learn_web_developme...Where MDN used to excel and for now still does, reference documentation, is also showing cracks, due to the recent changes at Mozilla. A long time contributor gave up. https://github.com/mdn/content/pull/36294\n \nreply",
      "> It starts out with loading a font from Google Fonts.Besides the steps order... My first impression is that it's taking someone who knows nothing, and conditioning them from step 1 to not even think about compromising a privacy-respecting, free and open Internet.  Your First Third-Party Tracker.  Your First Gratuitous Third-Party Dependency.A couple times they hit on copyright and licensing, however.  Which I approve of, but is also a corporate-friendly thing to emphasize.Another one:> To choose an image, go to [Google Images](https://www.google.com/imghp) and search for something suitable.If you have to name and link a search engine for the exercise, how about not endorsing a famously privacy-invading option, but instead have the student use a more privacy-respecting one?\n \nreply",
      "> To choose an image, go to Google ImagesOr plug one of the many royalty-free photo sites like Unsplash or Pexels (and comes with the bonus of teaching people to consider copyrights when you publish a site).\n \nreply",
      "And also those two sites you mentioned have higher quality and less clutter. A significant improvement in tool choice to what MDN suggested.Hopefully we can fix this via contribution.\n \nreply",
      "I don\u2019t think either of those websites pay Mozilla millions of dollars. Maybe the more important lesson they\u2019re teaching is that money makes the world go round.\n \nreply",
      "The search engine they linked to happens to provide a significant portion of Mozilla's revenue.\n \nreply",
      "I have zero outside context on that pr but judging it purely by the actual written text in the comments it seems the mdn maintainer was bring far more mature than the contributor who ended up quitting. They both mention a lot of background in the comments themselves; what information is missing which would make the contributor seem more sympathetic? As matters stand, this doesn\u2019t appear as a loss for mdn.\n \nreply",
      "100% agree. This is their contributions: https://github.com/mdn/content/commits?author=WebReflection+Not seeing them as a major contributor.\n \nreply",
      "> A long time contributor gave up. https://github.com/mdn/content/pull/36294Reading through that issue MDN was almost definitely in the right. Also calling them a long time contributor might be a bit off, from what I can see they did one typofix and added one link: https://github.com/mdn/content/commits?author=WebReflection\n \nreply",
      "The author of that pr is acting like a spoilt child. I would reject his contributions on principle alone.\n \nreply"
    ],
    "link": "https://developer.mozilla.org/en-US/blog/curriculum-learn-web-development/",
    "first_paragraph": "Web technology reference for developersStructure of content on the webCode used to describe document styleGeneral-purpose scripting languageProtocol for transmitting web resourcesInterfaces for building web applicationsDeveloping extensions for web browsersLearn to make the web accessible to allWeb technology reference for developersLearn web developmentLearn web developmentLearn to structure web content with HTMLLearn to style content using CSSLearn to run scripts in the browserA customized MDN experienceGet real-time assistance and supportAll browser compatibility updates at a glanceLearn how to use MDN PlusFrequently asked questions about MDN PlusWrite, test and share your codeScan a website for freeGet real-time assistance and supportA major update to the MDN Learn Web Development section started in November 2024 and was finally published in December 2024.\nTo summarize, the MDN Curriculum has been merged into Learn Web Development.\nThis post looks at the background leading up to th"
  },
  {
    "title": "F*: A proof oriented general purpose programming language (fstar-lang.org)",
    "points": 151,
    "submitter": "akkad33",
    "submit_time": "2024-12-25T13:16:40 1735132600",
    "num_comments": 39,
    "comments_url": "https://news.ycombinator.com/item?id=42508642",
    "comments": [
      "I studied formal languages for ~2 years and have professional experience programming coq. The real benefit of this language, over other formal languages is the focus on being able to write real programs in it. Most theorem proving languages are focused on mathematics or proving things about a program, and they are very abstract. This language appears to have a goal of bridging the gap and making it simple to write programs and prove parts of them. I believe this is the future of formal languages. If you write something in Rust, it would be great to prove aspects about it. Why not? Well F* is a vision if this future. As proof automation gets better, we will be able to prove many things about our programs, something which is not typically attempted due to difficulty. For instance, imagine proving that a certain path has no allocations, spawns no threads, cannot deadlock, preserves privacy, only modifies a certain subset of global data, is a specific algorithmic complexity, is not subject to timing attacks, maintains the conference of a cache, is memory safe (without a borrow checker). The limit is your imagination and Rice's theorem.\n \nreply",
      ">memory safe (without a borrow checker)This sounds like a very weird statement.In my opinion, a proper proof-oriented language would inevitably contain a borrow checker variant as a subset of its functionality (assuming the language has notion of pointers/references and focuses on achieving \"zero cost abstractions\"). Lifetime annotations and shared/exclusive references provide essential information and code use restrictions which enable automatic proof generation.After all, type and borrow checkers are nothing more than limited forms of automatic proof generation which are practical enough for wide use.\n \nreply",
      "https://dafny.org/ also allows proof checking and allows do write real programs with it. It has a java like syntax and is also from MS I believe\n \nreply",
      "Having used both Dafny and F* quite extensively, Dafny, and its predecessor Spec#, are simple and practical, thanks to being based on Hoare logic (contracts).It's a great place to start with verification, as proofs are discharged to SAT/SMT, so things are automated. It can get a bit frustrating when automation is not able to prove things, that's the major disadvantage of SAT/SMT.But it's not a toy. Some of the largest verification efforts have been done in Dafny. See e.g. IronFleet [1].[1] https://www.andrew.cmu.edu/user/bparno/papers/ironfleet.pdf\n \nreply",
      "Agree it\u2019s not a toy. AWS implemented a large chunk of IAM in Dafny. Though IIRC they have their own non-public compiler to Java\n \nreply",
      "F* also uses SAT/SMT, specifically Z3.\n \nreply",
      "Do you think you might be able to elaborate a little bit more about this?I was skimming the \"Proof-Oriented Programming\" book, and it seems that the primary way to execute F* programs is by extraction or trusted compilation (same as Rocq and Lean, for example). Does F* have some special way to work directly with realistic source code that these other systems don't?\n \nreply",
      "F* is a programming language with proof support. Lean/Coq are theorem providers that can be used to model and generate code. In Coq, there's not a standard way to generate code, you might model and create code many different ways. F* seems to bring this in as the central goal of the language. So I'm discussing this structural difference. F* has an SMT solver, but Lean can import an SMT solver. So the goal is the important difference here - making theorem proving as accessible as possible in a real language. It's a move in the right direction, but we want to get to the point standard program languages have this support if you need it.\n \nreply",
      "I\u2019ll add that SPARK Ada allows this now, has commercial tooling from Adacore, and was field-prove in years of commercial deployments.https://en.m.wikipedia.org/wiki/SPARK_(programming_language)It builds on the Why3 platform which also supports Frama-C for the C language. IIRC, SPARK can be compiled to C for C-only, runtime targets as well.\n \nreply",
      "Where would a smooth brained CRUD app web developer who failed high school maths perhaps learn more  about the point of this?\n \nreply"
    ],
    "link": "https://fstar-lang.org/",
    "first_paragraph": "\n  F* (pronounced F star) is a general-purpose proof-oriented\n  programming language, supporting both purely functional and\n  effectful programming. It combines the expressive power of dependent\n  types with proof automation based on SMT solving and tactic-based\n  interactive theorem proving.\n  \n  F* programs compile, by default, to OCaml. Various fragments of F*\n  can also be extracted to F#, to C or Wasm by a tool\n  called KaRaMeL,\n  or to assembly using\n  the Vale\n  toolchain. F* is implemented in F* and bootstrapped using OCaml. \n  \n  F* is open source on GitHub and is under \n  active development by Microsoft Research, \n  Inria, and by the community.\n\n  F* programs compile, by default, to OCaml. Various fragments of F*\n  can also be extracted to F#, to C or Wasm by a tool\n  called KaRaMeL,\n  or to assembly using\n  the Vale\n  toolchain. F* is implemented in F* and bootstrapped using OCaml. \n  \n  F* is open source on GitHub and is under \n  active development by Microsoft Research, \n "
  },
  {
    "title": "This open problem taught me what topology is [video] (youtube.com)",
    "points": 354,
    "submitter": "surprisetalk",
    "submit_time": "2024-12-25T06:08:45 1735106925",
    "num_comments": 54,
    "comments_url": "https://news.ycombinator.com/item?id=42507185",
    "comments": [
      "I loved this. I did my PhD in algebraic topology, but studied lots of topology so was familiar with this material. I doubt I could ever have explained these concepts so clearly or tied the esoteric world of topology to a \"practical\" problem.Since my PhD I've had a couple of careers and ended up as a research software engineer working on AI. I often feel nostalgic about pure math (maybe even a little regretful I left academic math). But I think it'd be almost impossible for me to return to academic math. The 3B1B videos always remind me that math is available to all and you don't have to be a working mathematician to enjoy, learn, and even discover, new math. You don't have to be employed as a mathematician in a university.\n \nreply",
      "I agree. My PhD is technically in CS but it made heavy use of algebraic topology. Being 5 years out, having worked briefly in tech, then at a national lab as a software engineer has given me enough outsiders' perspective on pure math. You probably need to work as a professional mathematician to be at the research frontier of a given area, but otherwise the fundamentals of math are unchanging, and in my opinion, that makes it accessible to anyone who is sufficiently interested in and passionate about math.\n \nreply",
      "> working on AII think we're about to enter an incredible new age of mathematics, driven by AI and theorem provers.  It's going to be hugely disruptive to mathematics, but lots of fun to amateur mathematicians.\n \nreply",
      "Yeah, I really hope so. I'm hoping that my background is going to allow me to work/play in this area. I'm currently learning about theorem provers so I can get involved.\n \nreply",
      "Is there some area of math that you consider particularly useful for software developers?\n \nreply",
      "Depending on the area of software development then trigonometry, geometry, linear algebra, number theory, combinatorics and probability theory are the most obviously useful. Beyond that I know that there's a close relationship between category theory and functional programming. I'm not familiar with the details of that or whether it's useful in practice or more of an area of theoretical study. I'm sure there's others on HN that know though. Interestingly I used a fair amount of category theory in algebraic topology, but never closed the loop and learned much about the relationship to programming.\n \nreply",
      "The original understanding of a manifold was simply a \"configuration space\", which is very concrete, so I'm not sure what you mean that you are surprised that the world of topology could be practical.\n \nreply",
      "I didn't say I'm surprised the world of topology could be practical. I said that _I_ wouldn't have been able to explain the concepts in the video so clearly and tie them to a practical problem.\n \nreply",
      "3b1b shows us what\u2019s possible in math pedagogy. I\u2019m excited for the future of the space, but sad it will take so long to adopt methods like this for teaching math\n \nreply",
      "The amount of effort to do a single 30 minute video of this sort when scaled out to a half or full year math class is significant.Another consideration is that we learn things from it because we want to learn it.  We are engaged with the topic the instant we hit play because we want to watch it.Compare that with a high school or college setting where the majority of the class is taking it because they have to - not because they want to.  This means that there's no initial engagement and a professor can't call out the student in the 3rd row from the back that is starting to fall asleep.This can work really well for the people who want to learn it.  However, it potentially adds to people who don't want to become competent in the material falling further behind.\n \nreply"
    ],
    "link": "https://www.youtube.com/watch?v=IQqtsm-bBRU",
    "first_paragraph": ""
  },
  {
    "title": "The software you need for holiday overdecoration (dbos.dev)",
    "points": 145,
    "submitter": "KraftyOne",
    "submit_time": "2024-12-23T14:17:51 1734963471",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=42494512",
    "comments": [
      "If you're in the greater Sacramento area...6516 Jackson Ct, Rocklin, CA 95765It's basically an entire Christmas light show, synced with music which is broadcasted on an FM radio station. The main problem is that because few people have access to an FM radio outside of their car, it pretty much causes traffic chaos in that little cul de sac, and the best view requires you to not be in a car.\n \nreply",
      "If you are in the greater Boston area stop by: https://www.youtube.com/watch?v=xBxB1aroSqE.Lots of animated displays in New England: https://www.nelights.org/\n \nreply",
      "Leeds UK:\nhttps://x.com/HodgsonLights\n \nreply",
      "Northeast of Columbus, OH is Silent Night, Holy Lights and worth at least a 30 minute drive.1215 Venetian Way, Columbus, OH 43230\n \nreply",
      "Are there any good examples for apartments? I am interested in doing similar stuff, but don\u2019t own a house. Seems like all examples are from houses\u2026\n \nreply",
      "Apartments are a lot harder because you can't usually drill into the side.  I've seen some balconies on apartments in my area with small animations, and one person has a matrix in the window.But at the end of the day it's the same as house, you just have a much smaller canvas to work with.You'll want to look up the ESPixelStick to get started if you're in an apartment, it can probably meet all your needs, since you won't be able to do too many lights.[0] https://forkineye.com/product/espixelstick-v3/\n \nreply",
      "I once had a crazy idea to build an inner frame and my own floor and walls onto those frames, in a room I was renting for a long time. I ended up not doing that, and depending on your situation it might not be allowed to do it (either because of rules from the landlord, or fire safety that you have to consider).I still think it\u2019s an idea worth considering in some situations though, as long as you are sure it\u2019s compliant with rules from the landlord and fire safety regulations etc.\n \nreply",
      "I don't know about building an entire false frame (what do you do with it when you move?  You would lose a ton of interior space.  Your ceilings would only be 7 feet, etc).But I've definitely seen people build a false wall that covered 1/2 of a real wall to make fake builtins over a fake fireplace.  But they could take it with them when they left.\n \nreply",
      "Yeah, the idea was to disassemble it and take it with me when I moved out. The inner frame would be assembled using screws, rather than nails and also not using any glue.It might take several days, or even a couple of weekends if you have busy days during Mondays to Fridays, to disassemble it. And that\u2019s if you originally built the whole thing in one go and kept in mind and made notes of how to disassemble it.The worst situation is if your lease suddenly ends on short notice and you don\u2019t have time to disassemble it on the time you have left before you have to leave.Another thing is that even if you disassemble it on time, the dimensions of your frame probably won\u2019t fit well into the next room you rent in a different place. And then you have to do a bunch of cutting and maybe buying even more materials or throwing away some of what you had, or find somewhere to store it or something.There\u2019s also the possibility that you might accidentally damage the original floor or walls even though you try to be super careful, if you go about constructing such a thing.These sorts of potential complications are part of the reason that I ended up not actually building such a thing myself so far. Aside from also not having much in terms of extra cash on hand at the time to even go buy the materials I would have needed for it.The half wall you suggested is far more practical for sure.\n \nreply",
      "Fire safety rules are a good point. Wasn\u2019t thinking about that aspect. But using outdoor compliant lights and hanging from frames outsides could be an option. Guess it would be an interesting start\n \nreply"
    ],
    "link": "https://www.dbos.dev/blog/ezrgb-dbos-light-shows",
    "first_paragraph": "People have been overdecorating for the holidays for a long time.However, as engineers, we realize that the problem shouldn\u2019t just involve more lights, what we really need is computers!Making a good light show sequence is a creative process.\u00a0 In the same way that composing a song requires a pleasing combination of interesting sounds through time, a light show sequence is a combination of interesting lighting effects through time.\u00a0 I\u2019ve been told that it takes about 50 hours per light show to mark the timings, choose colors and effects, line everything up, and adjust to achieve a great sequence.Because sequencing requires lots of time (and creativity), many of us buy the sequences from vendors.Even with purchased sequences, there is still a challenge, because every house is different. Sequences have to be \u201cmapped\u201d from one layout to another.\u00a0The lighting equipment varies significantly between shows.This is where DBOS\u00a0fits in; it was used to build and run the services that coordinate and"
  },
  {
    "title": "Ugandan runner due to arrive in London after 516 days, 7,700 miles on the road (theguardian.com)",
    "points": 25,
    "submitter": "thunderbong",
    "submit_time": "2024-12-23T14:08:04 1734962884",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=42494466",
    "comments": [
      "A man went on a mission to raise awareness.  I'd say he accomplished that.\n \nreply",
      "Having to deal with police four times a day on average on the part of the journey through Croatia is insane. I\u2019d have given up and flown to the next country.\n \nreply",
      "Thankfully our hero is made of sterner stuff than either you or me:\"On other occasions, however, he almost packed it in. In Uganda, his one-man support crew resigned, leaving him without a support vehicle or help at a time when his funding for the run was almost exhausted. To compound matters, all routes ahead involved either conflict or extreme risk.\"\n \nreply"
    ],
    "link": "https://www.theguardian.com/global-development/2024/dec/20/ugandan-runner-deo-kato-cape-town-london-hope-racism-europe-africa",
    "first_paragraph": "Deo Kato says journey from Cape Town gave him hope in humanity, despite facing racism from police and passersby on a daily basisA Ugandan athlete who arrives in London this weekend after running 7,730 miles (12,440km) from South Africa to raise awareness about racism has revealed he suffered repeated abuse on reaching Europe.Deo Kato set off from Cape Town in July 2023, running steadily north on a 516-day odyssey that has seen him jailed for weeks, laid low with serious illness and having to pass through war zones.The epic run was conceived by the London-based Kato to highlight the history of human migration and the discrimination faced by many black Africans, a message underlined by the fact he endured daily racism from police and passersby in parts of Europe.After climbing the equivalent height of 11 Mount Everests during the journey, Kato is due to reach central London on Sunday where he will be joined by hundreds of runners outside Downing Street before completing his route in Hamm"
  },
  {
    "title": "Show HN: Map of YC Startups (yc-map.vercel.app)",
    "points": 7,
    "submitter": "yoouareperfect",
    "submit_time": "2024-12-25T22:37:31 1735166251",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=42511663",
    "comments": [
      "Really neat! We were Tule, in the industrials part of the map in grey.There's something wonky when I zoom in on Chrome on my laptop. It abruptly shifts to another part of the map.\n \nreply",
      "Cool concept! What are the X and Y axes?Oh, and your website has an unchanged Wordpress favicon...\n \nreply",
      "hella nice mate very interestingwhat's the x and y axes?\n \nreply",
      "they don't have meaning by themselves. they are two dimensions that umap projected the original embeddings down to in order to show a combination of local neighborhood similarity or closenes\n \nreply"
    ],
    "link": "https://yc-map.vercel.app/",
    "first_paragraph": ""
  },
  {
    "title": "Sherlock: Hunt down social media accounts by username across 400 social networks (sherlockproject.xyz)",
    "points": 169,
    "submitter": "leonry",
    "submit_time": "2024-12-25T17:14:45 1735146885",
    "num_comments": 97,
    "comments_url": "https://news.ycombinator.com/item?id=42509809",
    "comments": [
      "And this makes it obvious why you should use a unique username everywhere!It makes pervasive tracking a lot harder.Also when you do any research on health related topics, be extra privacy conscious.\n \nreply",
      "Doesn't matter for the next day's witch huntThey are just gonna make fake accounts that look like yours and shitpost ahead anyways.Social media has multiple problems, including authenticity, transparency, validity and verifiability. All of which don't exist and make it the optimum propaganda machine (referring to the criteria that Chomsky described) because it can be corrupted through multiple attack vectors.If we want to survive this hellhole of misinformation, the mentioned criteria has to be implemented for the \"next big platform\" so that censorship and other legislative processes can be encountered with increased transparency and openness.On a network/society scale it can't be driven by financial incentives to prevent corruption, ergo it must be financed by taxes. Preferably on an EU or UN legislative level to prevent political corruption of single state actors.\n \nreply",
      "A state funded platform with a focus on authenticity, transparency, validity and verifiability, is the best thing against censorship? I don\u2019t get how.\n \nreply",
      "Well, the EU is based on federalistic principles, meaning that many states have many opinions on censorship; and a compromise between those states' opinions is what's likely best for the citizens of said states/nations.I mean, that is if we wouldn't have capitalism as the bug of democracy.",
      "This is why I try to use the same name across websites. I want to be identified as the same person. Just resist the urge to post information you don't want others to have.\n \nreply",
      "We often don't know what is or isn't information we don't want others to have, and it will be a lot harder, if not impossible, to delete it after-the-fact. Especially when you consider how it only takes a few innocuous data points to derive what might be information you'd rather not disclose.\n \nreply",
      "> Just resist the urge to post information you don't want others to have.Self-censor you mean?I personally like that information anonymous account `William Shakespeare` posted around 1585\u20131613.\n \nreply",
      "The secret is multiple accounts. I too have a Brand Name Account(tm) I like to float around but it sure as heck isn\u2019t this one.Doing the multiple account thing isn\u2019t as easy as it sounds though. Some sites like Reddit make switching between accounts incredibly easy while others aren\u2019t so much. Plus laziness kicks in and soon enough your Brand Name Account gets tainted and you have to consider taking it out back to the dumpster.Such is life I guess.\n \nreply",
      "> Doing the multiple account thing isn\u2019t as easy as it sounds though. Some sites like Reddit make switching between accounts incredibly easyAnd it's as easy to dox yourself by responding with the wrong account, as I have seen multiple times on Reddit.\n \nreply",
      "> The secret is multiple accounts.There was a \"show hn\" many months ago that did stylometry on HN commenters to show which accounts were most stylistically similar; I ran a throwaway account of mine through it, and it showed my account in the top 3 - which was impressive.Having multiple accounts won't save you when your own word choice, grammar and style can uniquely identify you to anyone sufficiently motivated to link your disparate identities at any point in the future. The author even said their tool was rather basic; IIRC the basis was all pairs similarity on n-grams\n \nreply"
    ],
    "link": "https://sherlockproject.xyz/",
    "first_paragraph": "Hunt down social media accounts by username across 400+ social networks"
  },
  {
    "title": "The Swedish cabin on the frontline of a possible hybrid war (theguardian.com)",
    "points": 96,
    "submitter": "Sami_Lehtinen",
    "submit_time": "2024-12-23T13:31:22 1734960682",
    "num_comments": 37,
    "comments_url": "https://news.ycombinator.com/item?id=42494256",
    "comments": [
      "Tangential, after reading the description of the archipelago.Sweden is the country with most islands in the world, followed by Norway and Finland.https://www.worldatlas.com/articles/which-countries-have-the...\n \nreply",
      "If you've never visited the Stockholm archipelago, I highly recommend it. In fact, I think it's perhaps the best thing about Stockholm, and one of the most beautiful places in the world in general \u2014 if you're into sailing, islands and seas. It's almost too easy to find an island just for yourself for the weekend, and \"Allemansr\u00e4tten\", the law that grants people the right to access wilderness, only makes it even more accessible. Going there at the midst of winter or during summer are both very different experiences, but both are very charming.\n \nreply",
      "Also, the superb torpedo museum!\n \nreply",
      "Do they use the same methods to define \"island\"?The section for Australia seems very broad: \"Australia itself dominates the islands around its coastal fringe, which range in size from smaller rocks that are not covered by water at high tide to ...\"While it says the US has 18,617 islands, I struggle to find an official source for that very precise number.I also see how https://en.wikipedia.org/wiki/List_of_islands_of_Florida says \"The U.S. state of Florida has a total of 4,510 islands that are ten acres or larger\", suggesting that ten acres is the minimum sized used for \"island\" in the US.https://en.wikipedia.org/wiki/List_of_islands_of_Maine says \"Maine is home to over 4,600 coastal islands, ranging from large landmasses like Mount Desert Island to small islets and ledges exposed above mean high tide.\"Clearly these are not using the same definitions.I managed to find the Global Islands data set at https://www.sciencebase.gov/catalog/item/63bdf25dd34e92aad3c... with an explorer at https://rmgsc.cr.usgs.gov/gie/ which should have exactly what I want, except 1) it only lists ocean islands, not inland ones, and 2) I can't figure out how to get the data by country.It categories things as \"Big Islands (greater than 1 km2), Small Islands (less than or equal to 1 km2 and greater than or equal to 0.0036 km2), and Very Small Islands (less than 0.0036 km2).\" \"There are 21,818 big islands in the database. The remaining 318,868 islands are all less than 1 km2 and are classed as small islands.'I give up.\n \nreply",
      "I don't think that quote implies a limit for the definition in any way. It just says that this is the count below a given threshold. It doesn't say anything about that threshold being a standard or anything of that sort.\n \nreply",
      "There\u2019s just literally no possible way that Sweden has an order of magnitude more islands than the US or Canada.Open up Google Earth and scan around northern coastlines of all these countries and you\u2019ll laugh at the premise of this article.With that said I wouldn\u2019t be surprised if they have the most documented/counted islands. That\u2019s another thing entirely and also sort of interesting I suppose.\n \nreply",
      "It all depends on what you count/map. By some european definition Sweden has 24 islands if you discount all the small ones. We basically have an extreme anount of small ones from the last ice age.Bit whatever, it\u2019s a great place to sail/visit no matter how you count.\n \nreply",
      "It's actually quite an interesting question. The West Coast of the contiguous US has almost no islands, you really start getting \"islandy\" only in the Puget Sound.The East Coast has more islands, but then you need to decide how you classify the river deltas. Is a bump in a brackish swamp an island or not?On the other hand, Sweden has thousands of really small but also well-defined islands. They can be just several square meters in area, but they are well above the water and clearly separated from the main landmass.Alaska has similar terrain, though.\n \nreply",
      "Yeah I\u2019m talking about more polar \u201cdrowned coastlines\u201d which clearly are the place to go hunting for lots of islands. In the US that\u2019s Maine and Alaska especially.Sweden sure has a lot of islands I\u2019d believe they are #1. It\u2019s the +10x claim that seems suspicious.\n \nreply",
      "In sweden if you dig a canal around some land, they call the result an island.\n \nreply"
    ],
    "link": "https://www.theguardian.com/world/2024/dec/23/swedish-cabin-frontline-possible-hybrid-war-undersea-cables-sabotage",
    "first_paragraph": "Amid claims of sabotage of undersea cables, a small wooden structure houses a key cog in Europe\u2019s digital connectivityAt the end of an unmarked path on a tiny island at the edge of Stockholm\u2019s extensive Baltic Sea archipelago lies an inconspicuous little wooden cabin, painted a deep shade of red. Water gently laps the snow-dusted rocks, and the smell of pine fills the air.The site offers few clues to the geopolitical drama that has gripped Scandinavia in recent months, driven by accusations of infrastructure sabotage. But in fact the cabin houses a key cog in Europe\u2019s digital connectivity, and a point of vulnerability in a potential hybrid war: a datacentre that amplifies the signal from a 1,615-mile fibre-optic cable running from northern Sweden to Berlin.Last month, two nearby fibre-optic cables were severed, prompting a continuing investigation by Swedish authorities. Western intelligence officials from multiple countries have said they are confident a Chinese ship caused the cuts a"
  },
  {
    "title": "I Saved an Electron Microscope from the Trash [video] (youtube.com)",
    "points": 40,
    "submitter": "starbugs",
    "submit_time": "2024-12-25T21:54:14 1735163654",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=42511426",
    "comments": [
      "My favourite part of these videos of people rescuing obscure tech is when they talk about the community of other people also rescuing the same obscure tech and team up with them. The internet might be a bit of a cesspool now but these little nuggets that remind me of the early promise of a connected world warm my heart.\n \nreply",
      "It's funny too how they exist in the same kinds of spaces they used to. Chat rooms, forums and other areas no one ever talks about anymore with the Twitters, TikToks and so forth dominating most social media attention.\n \nreply",
      "Wonder if there'll be a day when a hobbyist can buy a < $1k SEM?Other equipment like spectrum analyzers, VNAs, scopes, etc. are now way more accessible, but they seem way less complex.\n \nreply",
      "I don\u2019t think an SEM is that much more complex, it\u2019s just necessarily big due to the lack of miniaturization in the supporting components (lens system, transformer, vacuum chamber).  When I was a grad student, there was an old SEM from some defunct company that was being maintained by undergrad assistants (with the equivalent of duct tape and bubblegum)\n \nreply",
      "Is there an effort to get this underway? I\u2019m no expert, but I would guess that the two expensive parts are the electron source and the vacuum pump. UHV chambers seem solvable, and detectors are probably cheaply obtainable. High voltage power supplies can probably also be cheap.\n \nreply",
      "You probably need a sputter coating machine too for most applications, and, at least in some cases, tricky consumables like liquid nitrogen.I'm with you in wishing that they were more accessible, though. So many people want to do skydives, bungee jumps etc. that have never experienced the thrill of exploring the anatomy of tiny insects in incredible detail. They don't know what they're missing! That's before you even get onto cool stuff like WDS/WDX which I remember thinking was like science fiction when I first saw it.\n \nreply",
      "> tricky consumables like liquid nitrogenLN2 costs like $1/liter-- it's cheap.\n \nreply",
      "I'm not going to say it is impossible, but the thing to keep in mind is electronics test equipment benefited from incredible improvements in and the mass adoption of most of the components that go into them. While SEMs can benefit from that, I don't foresee it happening for some of the vital components.\n \nreply",
      "But they need to be calibrated, which is a real bitch.I used to work for a defense contractor, with millions of dollars' worth of that kind of gear, and keeping it calibrated was an expensive pain.\n \nreply",
      "Once hacker-level-hobbyists get involved they'll probably figure out how to calibrate it with a Raspberry Pi and a 3D printer.\n \nreply"
    ],
    "link": "https://www.youtube.com/watch?v=Kqx9blbYDB0",
    "first_paragraph": ""
  },
  {
    "title": "Air missile accident emerges as probable cause of Azerbaijan E190tragedy (euronews.com)",
    "points": 132,
    "submitter": "bratao",
    "submit_time": "2024-12-25T21:25:13 1735161913",
    "num_comments": 68,
    "comments_url": "https://news.ycombinator.com/item?id=42511267",
    "comments": [
      "This is odd.I'm from the area, near Grozny. If Grozny were under fog, there are at least 10 airports nearby (Makhachkala, Vladikavkaz, Nalchik, Minvody, Rostov, Krasnodar etc) in the North Caucasus. Why would you fly east, across the Caspian Sea, toward Kazakhstan?\n \nreply",
      "Obviously just speculation but if one was just fired upon, yet still in one piece and at least somewhat in control, a pilot might decide braving a longer diversion over a body of water to get away from the area, might be the safest course of action.\n \nreply",
      "If I was a pilot flying into an at-war country I\u2019d want my alternate to point in a different direction, the exact opposite course of the war zone ideally. Which this pretty much is.And, to further that point, multiple airports you listed here are currently closed because of that war.\n \nreply",
      "Grozny was not under fog.\n \nreply",
      "Mountains\n \nreply",
      "Just zooming into the tail section photo one can find on main stream media shows very suspicious signs of possible shrapnel hit ...\n \nreply",
      "The shrapnel damage is pretty much established as there are multiple videos from inside the plane during this flight prior to  the crash and you can see shrapnel damage on the fuselage. The survivors are also confirming it, and report that there was a bang(which might be confused for bird strike).The question is, who shot the plane? This part is pure speculation at this point.\n \nreply",
      "> The question is, who shot the plane? This part is pure speculation at this point.It doesn't seem to be too difficult to put together what is likely.  Grozny was under active drone attack at the time with air defenses working.  And Russian air defense crews are pretty infamous for the jumpy trigger fingers at this point.\n \nreply",
      "And notably, the \"drones\" were civilian propeller aircraft fitted out to fly an unmanned suicide trajectory. I'm not sure they would even look all that distinguishable on a SAM operator's screen from a small jet like this.\n \nreply",
      "Is there anyone besides Russia who would have even been capable of shooting it down?\n \nreply"
    ],
    "link": "https://www.euronews.com/2024/12/25/azerbaijani-passenger-plane-crashes-near-kazakh-city-of-aktau",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: I made a website to semantically search ArXiv papers (mitanshu.tech)",
    "points": 215,
    "submitter": "Quizzical4230",
    "submit_time": "2024-12-25T05:44:12 1735105452",
    "num_comments": 55,
    "comments_url": "https://news.ycombinator.com/item?id=42507116",
    "comments": [
      "1. why mixbread's model?2. how much efficiency gain did you see binarising embeddings/using hamming distance?3. why milvus over other vector stores?4. did you automate the weekly metadata pull? just a simple cron job? anything else you need orchestrated?user thoughts on searching for \"transformers on byte level not token level\" - was good but didnt turn up https://arxiv.org/abs/2412.09871 <- which is more recent, more people might wantalso you might want more result density - so perhaps a UI option to collapse the abstracts and display more in the first glance.\n \nreply",
      "I enjoy seeing projects like this!If you expand beyond arxiv, keep in mind since coverage matters for lit reviews, unfortunately the big publishers (Elsevier and Springer) are forcing other indices like OpenAlex, etc. to remove abstracts so they're harder to get.Have you checked out other tools like undermind.ai, scite.ai, and elicit.org?You might consider what else a dedicated product workflow for lit reviews includes besides search(used to work at scite.ai)\n \nreply",
      "Thank you for the appreciation and great feedback!| If you expand beyond arxiv, keep in mind since coverage matters for lit reviews,I do have PaperMatchBio [^1] for bioRxiv and PaperMatchMed [^2] for medRxiv, however I do agree having multiple sites for domains isn't ideal. And I am yet to create a synchronization pipeline for these two so the results may be a little stale.| unfortunately the big publishers (Elsevier and Springer) are forcing other indices like OpenAlex, etc. to remove abstracts so they're harder to get.This sounds like a real issue in expanding the coverage.| Have you checked out other tools like undermind.ai, scite.ai, and elicit.org?I did, but maybe not thoroughly enough. I will check these and add complementing features.| You might consider what else a dedicated product workflow for lit reviews includes besides searchDo you mean a reference management system like Mendeley/Zotero?[1]: https://papermatchbio.mitanshu.tech/\n[2]: https://papermatchmed.mitanshu.tech/\n \nreply",
      "Unusual use case but I write literature reviews for French R&D tax cut system, and we specifically need to: focus on most recent papers, stay on topic for a very specific problematic a company has, potentially include grey literature (tech blog articles from renowned corp), be as exhaustive as possible when it comes to freely accessible papers (we are more ok with missing paid papers unless they are really popular).\nA \"dedicated product workflow\" could be about taking business use cases like that into account.\nThis is a real business problem, the Google Scholar lock up is annoying and I would pay for something better than what exists.\n \nreply",
      "This is quite unique. I believe a custom solution might help you better than Google Scholar.\n \nreply",
      "This can be seen as technology watch, as opposed to a thesis literature review for instance.\nGoogle Scholar gives the best results but sadly doesn't really want you to build products on top of it : no api, no scraping.\nBreaking this monopoly would be a huge step forward, especially when coupled with semantic search.\n \nreply",
      "\"|\" it's a terrible character for signaling quotes, as it looks a bit too much like \"I\" or \"l\" and sometimes even \"1\" or \"i\" depending on the font used. I believe the greater-than symbol (>) is better suited for this task.\n \nreply",
      "For what it's worth, back in the day (a few years ago, before the LLM boom a few years) I found on a similar sized vector database (gensim / doc2vec), it's possible to just brute force a vector search e.g. with SSE or AVX type instructions.  You can code it in C and have a python API. Your data appears to be a few gigs so that's feasible for realtime CPU brute force, <200 ms\n \nreply",
      "What are other good areas where semantic search can be useful? I've been toying with the idea for a while to play around and make such a webapp.Some of the current ideas I had:1. Online ads search for marketers: embed and index video + image ads, allow natural language search to find marketing inspiration.\n2. Multi e-commerce platform search for shopping: find products across Sephora, zara, h&m, etc.I don't know if either are good enough business problems worth solving tho.\n \nreply",
      "3. Quick lookup into internal documents. Almost any company needs it. Navigating file-system like hierarchy is slow and limited. That was old way.4. Quick lookup into the code to find relevant parts even when the wording in comments is different.\n \nreply"
    ],
    "link": "https://papermatch.mitanshu.tech/",
    "first_paragraph": ""
  },
  {
    "title": "Ruby 3.4.0 (ruby-lang.org)",
    "points": 304,
    "submitter": "aaronbrethorst",
    "submit_time": "2024-12-25T06:40:07 1735108807",
    "num_comments": 176,
    "comments_url": "https://news.ycombinator.com/item?id=42507312",
    "comments": [
      "I am most excited about the parser change, previously discussed here:https://news.ycombinator.com/item?id=36310130 - Rewriting the Ruby parser (2023-06-13, 176 comments)I remember being taught to use yacc in our compiler course because \"writing it by hand is too hard\".  But looks like Ruby joins the growing list of languages that have hand-written parsers, apparently working with generated parsers turned out to be even harder in the long run.That said, replacing a ~16k line parse.y[1] with a 22k line prism.c[2] is a pretty bold move.[1] https://github.com/ruby/ruby/blob/master/parse.y[2] https://github.com/ruby/prism/blob/main/src/prism.c\n \nreply",
      "Number of line is as any metrics, it gives you a quick idea of some amount, and that's it. To start having a sense of what it means, you need to be more acquainted with the topic at end.It's not that uncommon to have an implementation with code that is lengthier but with an obvious pattern, while the smarter compressed  implementation whose understanding is not necessary trivial to grab even for people seasoned to metaprogramming, reflexivity and so on.Not to say that is what happen here, the point here was to recall that number of lines is not an absolute linear metrics.\n \nreply",
      "I'm pretty sure the only reason people ever used parser generators is that it allows a language that vaguely resembles the formal description of the target language. I always found them very confusing to write, confusing to debug, and much less efficient than writing your own. It's actually pretty straightforward once you get the tokenization and lookahead working.\n \nreply",
      "Agreed. Parser generators are a magic black box. Parsing is not too difficult, there is some actual computer science in some spots, but I think parsing should be a core complacency of a programming language to unlock full potential.\n \nreply",
      "A very very long list of CVEs disagrees with that parsers are \"not too difficult\".\n \nreply",
      "Binary format parsing != Programming language parsing.\n \nreply",
      "Binary formats are rarely context free.\n \nreply",
      "Agreed, but there are different things being prioritized with each approach.\n \nreply",
      "It seems like you're ignoring the context/environment. Ruby has enough advanced developers, large enough test  suite and enough people who care about performance, that it can tackle the parser as a longer project regardless of its complexity. The same thing will apply to other popular languages. But it won't apply to smaller projects with very localised parser use. In those cases writing anything custom would be a waste of time (and potential introduce bugs solved years ago in generators).\n \nreply",
      "Having tried both on solo projects, I disagree: like other commenters here, I've found parser generators to be a big waste of time.Writing a parser by hand requires understanding the theory of parsing and understanding your implementation language. Writing a parser with a parser generator requires understanding the theory of parsing, your implementation language, and a gigantic black box that tries unsuccessfully to abstract away the theory of parsing.The time spent learning and troubleshooting the black box is almost always better spent putting together your own simple set of helper methods for writing a parser and then using them to write your own. The final result ends up being far easier to maintain than the version where you pull in a generator as a dependency.\n \nreply"
    ],
    "link": "https://www.ruby-lang.org/en/news/2024/12/25/ruby-3-4-0-released/",
    "first_paragraph": "Posted by naruse on 25 Dec 2024We are pleased to announce the release of Ruby 3.4.0. Ruby 3.4 adds it block parameter reference,\nchange Prism as default parser, adds Happy Eyeballs Version 2 support to socket library, improves YJIT,\nadds Modular GC, and so on.it is added to reference a block parameter with no variable name. [Feature #18980]it very much behaves the same as _1. When the intention is to only use _1 in a block, the potential for other numbered parameters such as _2 to also appear imposes an extra cognitive load onto readers. So it was introduced as a handy alias. Use it in simple cases where it speaks for itself, such as in one-line blocks.Switch the default parser from parse.y to Prism. [Feature #20564]This is an internal improvement and there should be little change visible to the user. If you notice any compatibility issues, please report them to us.To use the conventional parser, use the command-line argument --parser=parse.y.The socket library now features Happy Eyeba"
  },
  {
    "title": "Converting shopping malls into apartments [video] (youtube.com)",
    "points": 14,
    "submitter": "debo_",
    "submit_time": "2024-12-23T20:29:44 1734985784",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.youtube.com/watch?v=J1GIF6VNipE",
    "first_paragraph": ""
  }
]