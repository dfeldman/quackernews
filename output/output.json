[
  {
    "title": "DeskPad \u2013 A virtual monitor for screen sharing (github.com/stengo)",
    "points": 567,
    "submitter": "geerlingguy",
    "submit_time": "2024-10-10T16:36:54.000000Z",
    "num_comments": 94,
    "comments_url": "https://news.ycombinator.com/item?id=41800602",
    "comments": [
      "After trying various solutions - including DeskPad - I came up with a custom cross-platform (I'm on macOS, but assume it'll work elsewhere) solution that worked incredibly well on my 40\" ultrawide monitor: OBS[1].Having never used OBS before but knowing it was popular among streamers, I wondered if I could use it to (1) only share the specific applications I wanted to share and (2) share them at a resolution that people could actually read, without constantly being asked to zoom in.I first tried setting up a virtual camera and sharing via my video stream, but it was laggy and the quality was so poor that people couldn't read what I was sharing. I quickly gave up on that approach.Then I discovered Projectors[2]. By right-clicking on the main view in OBS and selecting \"Windowed Projector (Preview)\", it launches a separate window, which I can then share directly via Zoom, Teams, Meet, etc.Whatever I drag into the OBS view is displayed in the Windowed Projector (similar to DeskPad), with the added bonus that I can choose to blur certain applications that might be dragged in. For example, if I open Slack or my password manager, the entire window blurs until I focus back on my terminal or browser.It took a bunch of tweaking to perfect, but I'm very pleased with how well it works now.---[1] https://obsproject.com/[2] https://obsproject.com/kb/power-of-projectors\n \nreply",
      "Why did you prefer this to DeskPad? I haven't tried either but have been looking for a solution for this without knowing it.\n \nreply",
      "This is great; though I have less need for it day to day now.I used to have 49\" 5120x1440 display. We started with Zoom, which under Advanced would allow partial desktop sharing. I would draw a 1920x1080 box and move windows in and out of the box.We moved to Teams and Teams only supports Window or Screen sharing. DeskPad would work great for that situation. Create a virtual display, share it and then use it on right part of the physical screen, moving windows in and out as needed.Currently, I use 2 Studio Displays instead of the 1 Wide Screen. When I need to share screens, I press a button on Stream Deck that calls displaypacer to set the resolution on the second display to 1600x900. When done, I press the button again and it toggles the resolution back to 5K. The resolution switching is instantaneous with Apple Silicon/Studio Display making it hassle free.\n \nreply",
      "Why do change the resolution instead of the scaling?\n \nreply",
      "I've gotten away with simply firing up OBS and \"screen sharing\" the virtual camera. Has worked fine on Zoom and Slack huddles, with the added benefit of giving me other things that OBS can provide: easy recording, scenes, text, source management, plugins, etc. For a casual conversation it's somewhat overkill, but when you're doing something more serious or formal, or need to switch between a keynote/Powerpoint and a screen share, or a video capture device, it's wonderful, and actually rather easy to get going in.\n \nreply",
      "> and actually rather easy to get going in.The other day I tried installing OBS on a Mac and this was not my experience. I couldn't even get it to recognize the built-in MacBook camera, much less share a screen or a mic or...I've successfully got OBS set up on Linux in the past and managed to get a simple workflow running, but even that took a lot of fiddling to get started and I had the darndest time finding what I needed. The UI reminded me of GIMP\u2014I'm sure I could eventually figure out how to work it and it probably makes complicated workflows possible in ways that simpler tools don't, but for a newcomer it has been overwhelming.\n \nreply",
      "This is _genius_. I have been using RegionToShare in Windows to share only a section of a widescreen monitor, but didn't have a good Mac equivalent. Now I have something that may well work _just as well_ with Windows inside Parallels (need to try that ASAP, am on the \"wrong\" Mac now).Edit: A quick test shows that yes, the Windows VM sees the additional display just fine--but, alas, Parallels doesn't let me pass _just_ one physical and that virtual display to the VM, so I can't have my \"personal\" portrait monitor unoccupied by Windows...\n \nreply",
      "+1 for RegionToShare on windows. It's not perfect but it has made sharing on a 49\" monitor much much easier.\n \nreply",
      "The title could clarify it's for MacOS X.\n \nreply",
      "Linux users probably already have some weird workflow with X11 virtual buffers to do this.\n \nreply"
    ],
    "link": "https://github.com/Stengo/DeskPad",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A virtual monitor for screen sharing\n      A virtual monitor for screen sharingCertain workflows require sharing the entire screen (usually due to switching through multiple applications), but if the presenter has a much larger display than the audience it can be hard to see what is happening.DeskPad creates a virtual display that is mirrored within its application window so that you can create a dedicated, easily shareable workspace.You can either download the latest release binary or install via Homebrew by calling brew install deskpad.DeskPad behaves like any other display. Launching the app is equivalent to plugging in a monitor, so macOS will take care of properly arranging your windows to their previous configuration.You can change the display resolution through the system preferences and the application window will adjust acc"
  },
  {
    "title": "The Copenhagen Book: general guideline on implementing auth in web applications (thecopenhagenbook.com)",
    "points": 267,
    "submitter": "sebnun",
    "submit_time": "2024-10-10T18:37:01.000000Z",
    "num_comments": 70,
    "comments_url": "https://news.ycombinator.com/item?id=41801883",
    "comments": [
      "If I'm not mistaken, this is written by the author of Lucia, a popular auth library for TypeScript [0]. He recently announced that he will be deprecating the library and be replacing it with a series of written guides [1], as he no longer feels that the Lucia library is an ergonomic way of implementing auth. He posted an early preview of the written guide [2] which I found enjoyable to read and complements The Copenhagen Book nicely.[0] https://github.com/lucia-auth/lucia[1] https://github.com/lucia-auth/lucia/discussions/1707[2] https://lucia-next.pages.dev/\n \nreply",
      "> he no longer feels that the Lucia library is an ergonomic way of implementing authhas he written up why? lots to learn hereedit: oh: https://github.com/lucia-auth/lucia/discussions/1707this is great. he saw the coming complexity explosion, that the library was no longer useful to him personally, and took the humble route to opt out of the Standard Model of library slop development. rare.\n \nreply",
      "There is a Github Discussion where he goes into more detail. He also talks about it on his twitter:https://github.com/lucia-auth/lucia/discussions/1707https://x.com/pilcrowonpaper/status/1843258855280742481\n \nreply",
      "What an insanely impressive dude. All that and he just started going to university this year.\n \nreply",
      "Yeah, but Lucia is just going to be immediately replaced with some other popular auth library.The thing is, 99% of people really do just need 'log in / log out', and this is an incredibly useful thing to have as a library.If you need Web 8.0 passkeys served via WASM eliptic curve sockets or whatever, sure, roll your own or use Auth0. But it feels really silly for the consensus around auth to be 'oh, you're making a CRUD cooking app to share your love of baking? cool, well here's the OAuth spec and a list of footguns, go roll some auth'. It's not a good use of that person's time - they should be focussed on their actual idea rather than being forced to reinvent plumbing - and tons of people are going to get it wrong and end up with effectively no auth at all.\n \nreply",
      "Haha I've been working on my cooking app[0] (not ready yet, join the waiting list!), and for the last 1 month I've been implementing auth with AuthKit (bad experience IMHO, should have just self host SuperTokens in hindsight), experiencing what you described here 1:1[0] https://prepbook.app\n \nreply",
      "Been rolling my own auth today for luls. Thanks for this :)\n \nreply",
      "Wow, this is very nice. One of my pet peeves is how 90% of security resources seem designed to be absolutely inscrutable by non-security experts - especially anything from cryptography. Every single page in here however is clear, concise, to the point, and actionable, love it! (except the one on elliptic curves, which I find about as incomprehensible as most crypto resources).\n \nreply",
      "I wonder why they recommend hashing server tokens in some cases. Is it so that someone who can read the database can\u2019t hijack an account? Or am I misunderstanding why hashing is used?\n \nreply",
      "My guess is that so people who manage to access  database backup cannot hijack accounts plus it gives  a good defence against timing attacks as a bonus.\n \nreply"
    ],
    "link": "https://thecopenhagenbook.com/",
    "first_paragraph": ""
  },
  {
    "title": "AAA Gaming on Asahi Linux (rosenzweig.io)",
    "points": 413,
    "submitter": "6a74",
    "submit_time": "2024-10-10T14:16:28.000000Z",
    "num_comments": 147,
    "comments_url": "https://news.ycombinator.com/item?id=41799068",
    "comments": [
      "From a performance and technical perspective this is incredible. Well done!It will never happen, but my dream is for the Asahi devs, Valve, and Apple to all get together to build out a cross-platform Proton to emulate and play games built for Windows on both x86 and ARM hardware running Linux.A Steam Deck with the performance and power efficiency of an M-series ARM chip and the entire library of games that run on Proton is just...dreamy.\n \nreply",
      "This makes me think of the classic clip of George Carlin telling a joke about the difference between heaven and hell [1].Is there a modern equivalent with FAANG, Microsoft, Sony, Valve, etc.?[1]https://www.youtube.com/watch?v=oR8xPC4NEro\n \nreply",
      "https://www.pcworld.com/article/2465907/arm-version-of-steam...\n \nreply",
      "A lot of stuff like this shows up, they also have a fork of waydroid and box64. I think a lot of them are projects and a lot of them are just devs with a lot of agency who share the dream\n \nreply",
      "That's awesome news!\n \nreply",
      "An ARM CPU only emulating x86 isn't going to be more efficient than straight x86. ARM is barely more efficient as it is at those performance levels.The real reason Apple is ahead is because they're paying for more expensive more advanced nodes for their CPUs. I you compare CPUs on similar node sizes, you'll see that AMD and Intel are basically caught up architecturally in perf/W metrics.\n \nreply",
      "This is definitely not true. M3 is 2x - 3x more efficient than Lunar Lake on the same N3B node.\n \nreply",
      "I don't think that's true. M3 has much better idle/near-idle power draw, but actual performance per watt when doing things is pretty close.\n \nreply",
      "No, it\u2019s the other way around. Intel has generally caught up in idle power draw but is still severely behind in performance per watt.https://www.notebookcheck.net/Intel-Lunar-Lake-CPU-analysis-...https://youtu.be/ymoiWv9BF7Q\n \nreply",
      "I'm not sure if you know. But Alyssa, the person who basically wrote almost the entire userspace opengl and vulkan driver, works at valve.\n \nreply"
    ],
    "link": "https://rosenzweig.io/blog/aaa-gaming-on-m1.html",
    "first_paragraph": "10 Oct 2024Gaming on Linux on M1 is here! We\u2019re thrilled to release our Asahi game playing toolkit, which integrates our Vulkan 1.3 drivers with x86 emulation and Windows compatibility. Plus a bonus: conformant OpenCL 3.0.Asahi Linux now ships the only conformant OpenGL\u00ae, OpenCL\u2122, and Vulkan\u00ae drivers for this hardware. As for gaming\u2026 while today\u2019s release is an alpha, Control runs well!First, install Fedora Asahi Remix. Once installed, get the latest drivers with dnf upgrade --refresh && reboot. Then just dnf install steam and play. While all M1/M2-series systems work, most games require 16GB of memory due to emulation overhead.Games are typically x86 Windows binaries rendering with DirectX, while our target is Arm Linux with Vulkan. We need to handle each difference:There\u2019s one curveball: page size. Operating systems allocate memory in fixed size \u201cpages\u201d. If an application expects smaller pages than the system uses, they will break due to insufficient alignment of allocations. That\u2019s "
  },
  {
    "title": "Show HN: HTML for People (htmlforpeople.com)",
    "points": 206,
    "submitter": "blakewatson",
    "submit_time": "2024-10-10T17:47:42.000000Z",
    "num_comments": 54,
    "comments_url": "https://news.ycombinator.com/item?id=41801334",
    "comments": [
      "This is great. The decision to skip CSS by depending on https://simplecss.org/ is smart - CSS is a whole other thing, and having that on top of basic HTML would be pretty intimidating.I did worry a bit about https://htmlforpeople.com/zero-to-internet-your-first-websit... - \"Step 1. Create a folder on your computer\" - because apparently a large number of people these days don't understand files and folders at all! https://www.theverge.com/22684730/students-file-folder-direc...Not sure how best to approach that though. Having a whole chapter of the book explaining files and folders feels pretty redundant. Maybe there's something good you could link to?\n \nreply",
      "It's crazy how bad the mobile epidemic has gotten. There are kids coming into a Computer Science degree that can't figure out how to unzip a zip or even finding out where files get downloaded to. (Fwiw, those I know dropped out before 2nd year)\n \nreply",
      "My dad was asking me a question about backing something up onto Google Drive, or saving space on some cloud storage account, or something.He was using the mental model of files and folders -- that files exist and refer to stored bytes, and that there can be one or several copies of a file. There can be links to a file that take very little space relative to the file.I had to tell him that I have no idea what sort of storage model these services expose, if any, and that the concept of a file system backed by a storage device is not the analogy that applications expose to their users these days.He eventually understood, but I could feel his frustration -- that the mental model he had was really just chosen by a past moment in application design, and that what replaced it is nebulous and disempowering.\n \nreply",
      "Can you elaborate on what you told your father?When i use google drive, the interface appears to be folder/file structure. Whether it is or is made to look that way is irrelevant, i suppose, as long as it works that way. I can also increase storage by downloading/deleting things so Im a bit flummoxed.\n \nreply",
      "I don't remember if he was trying to save space on his Google Drive or on his phone. His question was, mostly, that if he deleted files in one place, where would the space savings appear? I immediately thought of Windows' OneDrive and how it's sort of an automated rsync setup. I didn't know enough about his phone, which apps he was using, or about Google Drive to give an answer better than \"I don't know, and I detect that some of your assumptions are probably wrong.\"\n \nreply",
      "In my opinion, Google Drive is basically the same as the traditional file structure. Where it gets very confusing for people is when it comes to collaboration. Before 2020 or so, there was confusion around copying the same Google Doc so it appears in multiple locations, and making shortcuts to it instead. Look up stuff around the \u201cShift + Z\u201d keyboard shortcut if you want to learn more.\n \nreply",
      "I'd say half of my first-year CS students don't know how to create a folder with files, at the start of the school year. To me, it's nuts. But on the other hand, lots of students are very curious and come to learn. You can't blame them for not knowing something.\n \nreply",
      "I try not to get overly-annoyed at this kind of thing too, but to me it just demonstrates an incredible lack of self-drive, or curiosity, especially in the CS domain.If the students are genuinely curious, there is nothing to stop them learning about pretty much any topic in CS - really. There are few university subjects where the entire syllabus is freely available online in almost every format imaginable the way CS often is, and very often the computer you already have works just fine to learn it on.\n \nreply",
      "To keep that line of reasoning going, what is the purpose of the university, if you're supposed to learn everything on your own?\n \nreply",
      "I know this is sarcasm, but\u2014Network building, external proof of ability to work, and a place (and just as important - a time) to translate who you are into who you want to be.These were always the reasons, the rest you learn on the job.\n \nreply"
    ],
    "link": "https://htmlforpeople.com",
    "first_paragraph": "HTML for People\nChapters\n\nBonus chapters\n\nDemos and resources\n\nSettings\nHTML isn\u2019t only for people working in the tech field. It\u2019s for anybody, the way documents are for anybody. HTML is just another type of document. A very special one\u2014the one the web is built on.I\u2019m Blake Watson. I\u2019ve been building websites since the early 2000s. Though I work professionally in the field, I feel strongly that anyone should be able to make a website with HTML if they want. This book will teach you how to do just that. It doesn\u2019t require any previous experience making websites or coding. I will cover everything you need to know to get started in an approachable and friendly way.Ready? Let\u2019s do it!\nRead the introduction\nStart coding already!\nEnjoying the book?\nHTML for People is a labor of love. If you have the\n              means, consider sending me a donation on Ko-fi and sharing the\n              book on social media.\n            \nDonate on Ko-fi\nCheck out some of my other stuff:\nResources\n         "
  },
  {
    "title": "Uxn (100r.co)",
    "points": 167,
    "submitter": "tosh",
    "submit_time": "2024-10-08T14:52:33.000000Z",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=41777995",
    "comments": [
      "Related. Others?Tal is the programming language for the Uxn virtual machine (2021) - https://news.ycombinator.com/item?id=39575102 - March 2024 (18 comments)Virtualizing Uxn - https://news.ycombinator.com/item?id=37091091 - Aug 2023 (4 comments)The Uxn Ecosystem - https://news.ycombinator.com/item?id=36734445 - July 2023 (54 comments)The Uxn Ecosystem - https://news.ycombinator.com/item?id=36642390 - July 2023 (2 comments)Uxn is a virtual machine with 32 instructions - https://news.ycombinator.com/item?id=33926600 - Dec 2022 (84 comments)Uxn: Small permacomputing VM designed for easy implementability - https://news.ycombinator.com/item?id=32158816 - July 2022 (2 comments)MicroFLENG \u2013 concurrent logic programming for CP/M, C64 and the \u201cuxn\u201d VM - https://news.ycombinator.com/item?id=31506240 - May 2022 (4 comments)Uxn \u2013 Virtual AV Computer - https://news.ycombinator.com/item?id=27561463 - June 2021 (5 comments)uxn: a portable 8-bit virtual computer - https://news.ycombinator.com/item?id=27185950 - May 2021 (47 comments)Uxn is a 8-bit virtual stack machine - https://news.ycombinator.com/item?id=26258991 - Feb 2021 (5 comments)\n \nreply",
      "I don't want to go to Chel-C - https://news.ycombinator.com/item?id=31705239 - June 2022 (124 comments) is sorta-related, since it's a rebuttal.\n \nreply",
      "That page answers \"what?\"I had to browse around a bit to answer \"why?\"  I landed here: https://100r.co/site/mission.htmlIt's a cool idea.  I found the contrast with electron helpful:> While solving some of our issues, Electron was rapidly increasing in size and hunger, so despite it being open-source soon joined the rest of the software that we did away with. Our focus shifted toward reducing our energy use, and to ensure reliability we began removing dependencies.\n \nreply",
      "Electron is slow when your code is crappy .\n \nreply",
      "Yea that must be why the original electron authors abandoned it and are now working on an editor in Rust.\n \nreply",
      "HTML is just so big\n \nreply",
      "As a product designer, I don\u2019t fully grasp everything the folks at 100r make.I\u2019ve followed them for a couple of years. From what I can tell they have a ton focus and are serious about craftsmanship.Nothing else to add\u2014just admire people good at making things!\n \nreply",
      "Noob developer here. From what I understand this can only run on emulators. If I have a system powerful enough to run an emulator why would I want to use this? I understand being able to run this on old consoles. But what about modern computers?\n \nreply",
      "The idea is that it's a standard and stable runtime environment.100 years from now we'll still be able to run NES games, but running old windows programs may be nearly impossible. uxn is trying to be like the NES in that regard, but for more general use cases than just games. Write a uxn program once, and it can run anywhere, any time (on any device that can host uxn).\n \nreply",
      "Uxn runs on its own VM, so each emulator emulates this VM, just like every java implementation emulates the JVM, etc. In other words, the emulator isn't designed for any specific physical machine to begin with.\n \nreply"
    ],
    "link": "https://100r.co/site/uxn.html",
    "first_paragraph": "The Uxn/Varvara ecosystem is a personal computing stack based on a small virtual machine that lies at the heart of our software, and that allows us to run the same application on a variety of systems.It is designed with an implementation-first mindset and is tailored to our specific needs for hosting graphical applications, but is entirely open and welcomes anyone to adopt it as a release target. Uxn is programmable in its own unique language, and the distribution of Uxn programs is akin to sharing game roms for classic console emulators, to learn more, see our notes on uxn design. To run Uxn programs, you will need an emulator that works on your system. Below are links to emulators for major operating systems, and for a more obscure environments. Alternatively, you can also implement your own by looking a the VM specs, the IO specs and the source code.If you need a hand getting started, join us on #uxn on irc.libera.chat, or Discord. Once equipped with an emulator, you can pick among "
  },
  {
    "title": "Game Programming in Prolog (thingspool.net)",
    "points": 83,
    "submitter": "febin",
    "submit_time": "2024-10-10T16:50:40.000000Z",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=41800764",
    "comments": [
      "Normally we downweight posts that just have a Part 1 and then stop, but this one actually delivers the goods:https://thingspool.net/morsels/page-11.html (part 2)https://thingspool.net/morsels/page-12.html (part 3)https://thingspool.net/morsels/page-13.html (part 4)https://thingspool.net/morsels/page-14.html (part 5)(and keeps going!)\n \nreply",
      "(Will be continued in Part 13)\n \nreply",
      "Assume you are the author, I found your website is such a treasure. I couldn't believe your website wasn't listed on HN before. Next time please post on HN when you write.\n \nreply",
      "you should consider the opposite to push the author's website and force them to continue ;)\n \nreply",
      "There's an interesting (to me at least) overlap between gamestate as a set of facts and relations(Prolog), and the point of ECS(\"This is a database\"[1]).I personally experiment in Datascript as a gamestate db, but it's still quite an early attempt to conclude if it's a success. It's great seeing how ideas in this tutorial map 1-to-1 to that idea.1. https://www.gamedevs.org/uploads/data-driven-game-object-sys...\n \nreply",
      "In the same vein, I had a lot of fun reading a game programming book with logic programming, but instead of Prolog it used CLIPS:Adventures in Rule-Based Programming: A CLIPS Tutorial https://a.co/d/7wVOcZp\n \nreply",
      "I was going to mention that one as well. I was exploring using CLIPS (or something like it) for a system at work and after digging through the free documentation I picked it up. It was an enjoyable read.https://www.clipsrules.net/\n \nreply",
      "I'd never considered how the commonplace actor-world/entity-trait model is a neat fit for Prolog's whole relational deal. Though predictable and efficient run-time is also critical, and Prolog typically brute-forces its way through matching terms to satisfy the query. I haven't finished reading the series though - maybe they address it?\n \nreply",
      "This is such a breath of fresh air on tackling the state machine issue in games with heavy logic (city simulation, for instance). I never thought about using Prolog for this.Bravo!\n \nreply",
      "I'll leave this here since it is useful: https://github.com/emacstheviking/gnuprolog-libsdl2\n \nreply"
    ],
    "link": "https://thingspool.net/morsels/page-10.html",
    "first_paragraph": "As a fan of unconventional programming paradigms, I enjoy learning new programming languages which are drastically different from the typical object-oriented ones such as C#, Java, and the like. The most iconic of them are LISP (which is a powerful language for both functional programming as well as metalinguistic patterns in software development) and Prolog (which is one of the most popular languages in logic programming). Learning these languages is quite hard, compared to being acquainted with usual C-style imperative languages such as Ruby and Python, yet it has turned out to be one of the most effective ways of exercising one's brain.By the time I started learning LISP via MIT's 1986 lecture series called \"SICP (Structure and Interpretation of Computer Programs)\" back in 2018, I was already quite familiar with some of its core concepts (such as lambda expressions, higher-order functions, etc) because they were already integrated as some of the main features of C#, which was the la"
  },
  {
    "title": "Show HN: Tenno \u2013 Markdown and JavaScript = a hybrid of Word and Excel (tenno.app)",
    "points": 270,
    "submitter": "deepmacro",
    "submit_time": "2024-10-10T13:15:38.000000Z",
    "num_comments": 112,
    "comments_url": "https://news.ycombinator.com/item?id=41798477",
    "comments": [
      "I love the idea of finding new and better interfaces for spreadsheets, and I applaud this effort!That being said, if you want this to be useful for people in general, not just programmers:- People like WYSIWIG. Markdown and the split-pane view seems to be something only programmers like. So I'd suggest being able to do everything, or mostly everything, directly in the rendered/HTML panel. (Maybe the Markdown panel is for power users only)- This is great for working with individual calculations, but a lot (most?) of spreadsheet use is about applying formulas to whole rows, columns, and tables of values. I see you support basic tables, but they're a huge pain to encode/format/edit in Markdown, and I don't see any ability to support things like 200 rows x 5 columns and do things like calculate sums and averagesSo I think there's a ton of potential here! But I think WYSIWIG and easy tabular data support are going to be key here for broader usage. While the kinds of programmers this seems aimed at now, are already using Jupyter notebooks and Matplotlib for this kind of thing. (Like, when you describe \"why did I build this\", I don't understand why you didn't just fire up a Google Colab notebook.)\n \nreply",
      "The large tables issue might be solvable with Emacs. Org mode had two table formats, one of which is a veritable spreadsheet. It's all text under the hood, but Emacs (at least with Evil) provides a easy interface to create and populate rows, columns, and cells.\n \nreply",
      "Tables are something I want to tackle and I'd like to do them right because (as you point out) are crucial. I didn't get there yet...I want to make it such that you can code on the left and then hide everything\nand share that with non technical folks. That's why I did not use a Colab, creating something interactive with it (and I did that quite a lot in the past)\nit's a bit of a PITA.\n \nreply",
      "I highly suggest that you look at both Org mode table formats, one of them almost certainly has much of the UI and features you are targeting.\n \nreply",
      "to your first point i think its a good idea to offer both if possible. Like hide the code behind an interface wysiwig-style but give users the option to also edit the code directly if they want to\n \nreply",
      "These are basically block editors. The problem is more, regular users just arnt going to be doing it period.It's basically a pyramid problem:1 programmer will program all the things2 power users will create all the forms from pieces of the programmers documents999+ will use the output and never care about any of the restThere's just minimal middle ground, and the only answer is to cater to all three but in Different ways\n \nreply",
      "I've been writing something similar that keeps evolving, although computable code blocks and markdown have been in there since v1. Runs locally, saves to LocalStorage and is always in a partially broken state because I add more things than those I fix: https://github.com/rberenguel/weaveAnd a couple recent-ish updates (sadly twitter, because I use it as throw-devlog-there):- https://x.com/berenguel/status/1837917590804451378?s=46&t=jc...- https://x.com/berenguel/status/1799770200310726731?s=46&t=jc...- https://x.com/berenguel/status/1796917242791113118?s=46&t=jc...\n \nreply",
      "Nice work!\n \nreply",
      "I did another take on this, that extends Markdown links to include types (like triples, like Semantic Mediawiki) called \"mdld\". It's quite powerful but I left it at a good-enough stage for my uses. https://github.com/vid/mdld\n \nreply",
      "A beautiful concept. Thank you for sharing.\n \nreply"
    ],
    "link": "https://tenno.app",
    "first_paragraph": ""
  },
  {
    "title": "ARIA: An Open Multimodal Native Mixture-of-Experts Model (arxiv.org)",
    "points": 6,
    "submitter": "jinqueeny",
    "submit_time": "2024-10-11T00:04:52.000000Z",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://arxiv.org/abs/2410.05993",
    "first_paragraph": "Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "BigSearch Browser Extension (github.com/garywill)",
    "points": 5,
    "submitter": "Duckyroad",
    "submit_time": "2024-10-11T00:34:01.000000Z",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://github.com/garywill/BigSearch",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Browser extension. Definitly more than a GET/POST sender. Handily use search engines via a Flexible Tool! UI has Vimium-like feature \ud83c\udf10\ud83d\udd0d (Pure-client. No 3rd-party server needed) \u5927\u672f\u4e13\u641c \u65e2\u4e13\u53c8\u5e7f \u624b\u6572\u51e0\u4e0b \u7eb5\u6a2a\u53bb\u5f80\n       English | \u4e2d\u6587Handily use / switch any one or multiple (uninterruptedly) search engines (or search any websites).Friendly to novices, satisfying to experts. For daily, entertainment & work.Includes basic features that a multi-engine web search tool should have:and so on. Besides above basic features, it can also\u2728: and so on... Go on for readme\nSearch everywhere \ud83d\uddfa\ufe0f for everything \ud83d\udc68\u200d\ud83d\udcbb. Breadth & Focus.\nWays to use:Browser extension (recommended)Web App : For demo purpose. Web app can't function fully like extension. Web app can be used on mobile browsers.Video of full introduction & instructions (Youtube) (choose the chapter you want t"
  },
  {
    "title": "Answer any question about your photo albums with OmniQuery (jiahaoli.net)",
    "points": 28,
    "submitter": "ljhnick",
    "submit_time": "2024-10-07T20:06:46.000000Z",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=41770389",
    "comments": [
      "Well executed and could be very useful. Shouldn't be too hard for Apple to implement this for its Photo album with is Apple Intelligence.\n \nreply",
      "With this, my feeling is that nowadays people are doing \"research papers\" with nothing as content. Like something that would be a basic blog article or a small implementation project of anything.\n \nreply",
      "Unfortunately not new at all. What's new is the richness of the presentation work, for sure. And the self promotion on HN. And the publication of the code should make this far, far more useful than the equivalent of the past which never did... Oh wait, no, the code isn't there - only the link.\n \nreply",
      "And yet the ability for me to annotate useful information in popular platforms is still (at best) free form tags or written descriptions.\n \nreply",
      "but, how good is it at sorting my memes\n \nreply",
      "No so much memes, but I use searching by location and/or date very useful in my iPhone photos, but that doesn't work nearly so well for screenshots. I don't think there's a decent technological answer to that though, I'd have to add the sort of metadata Photos relies on from exif data everything I capture a screenshot for that to be any use.\n \nreply"
    ],
    "link": "https://jiahaoli.net/omniquery/",
    "first_paragraph": "\n          OmniQuery enables answering questions that require multi-hop searching and reasoning over personal memories. Here are some examples of the questions that OmniQuery can answer:\n        \n          OmniQuery leverages Retrieval-Augmented Generation (RAG) to answer complex personal questions on large amount of personal memory.\n        \n          Specifically, the accurate retrieval of relevant memories is crucial for the performance of the system. To this end, we propose a novel taxonomy-based contextual data augmentation method to enhance the retrieval accuracy. The taxonomy is generated based on a one-month diary study, which collects realistic user queries and the necessary contextual information for integrating with captured memories. The taxonomy is then used to augment the captured memories with contextual information, which is used to retrieve relevant memories. The retrieved memories are then used to generate answers to the user queries using a large language model (LLM)"
  },
  {
    "title": "TypedDicts are better than you think (changs.co.uk)",
    "points": 62,
    "submitter": "rbanffy",
    "submit_time": "2024-10-10T17:56:11.000000Z",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=41801415",
    "comments": [
      "Reasons to use dataclass(slots=True) instead of TypedDict- Faster attribute access: your code is faster- Slotted classes take less RAM, less L1 cache pressure, your code is faster- Wrist friendly to with .foobar instead of [\"foobar\"]- Runtime error if you misspell an attribute name\n \nreply",
      "It\u2019s Python. Does L1 matter at  all? I assume anything you\u2019re accessing is behind a few pointers and __dict__ accesses anyway.For me it\u2019s mostly about .attribute being more in line with the rest of the language. Kwargs aside, I find overuse of dicts to clunky in Python\n \nreply",
      "Nope, __slots__ exist explicitly as an alternative to __dict__:https://wiki.python.org/moin/UsingSlotsWhether or not the performance matters...well that's somewhat subjective since Python has a fairly high performance floor which makes performance concerns a bit of a, \"Why are you doing it in Python?\" question rather than a, \"How do I do this faster in Python?\" most of the time.  That said it _is_ more memory efficient and faster on attribute lookup.https://medium.com/@stephenjayakar/a-quick-dive-into-pythons...Anecdotally, I have used Slotted Objects to buy performance headroom before to delay/postpone a component rewrite.\n \nreply",
      "> It\u2019s Python. Does L1 matter at all?depends on the type in question. If you are fetching and operating on a large number of records then it can matter. But otherwise the answer is more often that it does not really matter.\n \nreply",
      "Better than both use Pydantic. You'll never want to use anything else ever again. It's truly transformative in how you write code. Full type hinting support as well as strong verification that your data actually conforms to the types you set. Full recursive parsing of types arbitrarily nested and can parse tagged and untagged unions.\n \nreply",
      "Really like Pydantic - assuming you\u2019re happy to step outside the standard library. It does have a few sharp edges, but out of the box it includes all the stuff you eventually end up needing anyway. attrs is the other big Python parsing / validation library. I know nothing about it other than it\u2019s also popular and that it distinguishes itself philosophically from Pydantic in a number of ways.Don\u2019t forget to use \u2018ConfigDict(frozen=True)\u2019 absolutely everywhere!\n \nreply",
      "TypedDicts are enormously helpful in defining args a function takes. You can\u2019t do that with either dataclasses / pydantic without passing instantiated objects as args - which is really cumbersome.\n \nreply",
      "> Here we have a problem, for subscription does None mean don't change or remove subscriptionI read this like 10 times and I still dont understand this mess of grammar. Am I having a fucking stroke rn?\n \nreply",
      "I\u2019m going to send you some json to update your object \u2013 an HTTP PATCH request. There are three possible updates I might want to make to the subscription field:- change it to a new value- set it to None- leave it as-isIn the json the first two options are specified by sending an object with a \"subscription\" field, either set to a string or to null. The third case is expressed by omitting the field.The OP asks how all three cases could be represented in python, and points out that one could not use subscription=None to represent both case 2 and 3 above.\n \nreply",
      "for \"subscription\", does `None` mean \"don't change\", or \"remove subscription\"?\n \nreply"
    ],
    "link": "https://blog.changs.co.uk/typeddicts-are-better-than-you-think.html",
    "first_paragraph": "In Blog.TypedDict was introduced in PEP-589 which landed in Python 3.8.The primary use case was to create type annotations for dictionaries. For example,I remember thinking at the time that this was pretty neat, but I tend to use dataclass or pydantic to represent 'record' type data. Instead I use dictionaries more as a collection, so the standard dict[KT, VT] annotation is enough.I revisited typeddicts when I looked at implementing a HTTP patch endpoint.Let's suppose I have a data structure represented by the following dataclass:Where subscription = None means no subscription.Let's say we want to option to patch name, subscription. You might define the patch body using dataclass:Here we have a problem, for subscription does None mean don't change or remove subscription. We can fix this a number of ways, for example, we can take the string 'none' to mean no subscription instead, or make a new sentinel value called NoChange to indicate no changes.These solutions all feel a little awkwar"
  },
  {
    "title": "Running WolfSSL and Curl on Windows 2000 (datagirl.xyz)",
    "points": 5,
    "submitter": "todsacerdoti",
    "submit_time": "2024-10-10T23:18:19.000000Z",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "http://datagirl.xyz/posts/wolfssl_curl_w2k.html",
    "first_paragraph": "Created on 2024-03-03 at 14:04As part of my current series of projects, I've been working on a screenshot tool intended for older Windows versions. The goal is to have something similar to ShareX, a tool that lets you take a screenshot and post it online.\nThese days, file sharing is done via the Hypertext Transfer Protocol (HTTP)[1], often using Transport Layer Security (TLS).[2] Built into every version of Windows since Windows 95 is WinINet, which provides HTTP, FTP, and (in XP/2003 and earlier) Gopher. Obviously for older Windows versions, this library won't include support for recent technologies like TLS 1.3 or HTTP/2. cURL still supports Visual C++ 6, but that only provides the HTTP/FTP part. We'll need a TLS library to get connected to most modern systems.\nNote: All patches and documentation here are experimental, and should not be considered secure. My focus was on running something compliant with modern Web protocols, not improving the security posture of the system. Even if m"
  },
  {
    "title": "FreeWP Is Here to Shake Up the WordPress Ecosystem (freewp.com)",
    "points": 14,
    "submitter": "rpgbr",
    "submit_time": "2024-10-10T23:43:14.000000Z",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=41804706",
    "comments": [
      "I feel like that name choice is just asking for Matt to come hassle you about it being Wordpress But Not Wordpress in the same way he's hassling WPEngine.\n \nreply",
      "Am I missing something, or is this mostly an announcement that this guy has bought a bunch of domains?I initially thought this would be a fork, which I'm assuming is what most of the upvotes thought. I'm not sure what it is, but it's definitely not a fork.\n \nreply",
      "I feel like ClassicPress[^1] is a bit of a better approach to the whole \"I just want basic Wordpress that works\" - It seems like it's pretty stable and already has a community behind it.[^1]: https://www.classicpress.net/\n \nreply",
      "> I\u2019m thrilled to introduce FreeWP, a new news media powerhouse dedicated to the WordPress community and broader ecosystem.> Once formally established, FreeWP will solidify into a worker-owned and operated organization, returning power to the community where it rightfully belongs.So, it\u2019s\u2026 another WordPress company?Edit: Oh man, check this out from the FAQ:> What is freewp.com?> To the best of our knowledge, it is a website that starts with \u201cfreewp\u201d and ends with \u201c.com\u201d. Any further details are at the discretion of the individual who manages it.Can't help but feel that we're in the current situation because of deliberately vague roles at the whim of a single individual!\n \nreply",
      "They should make a reality tv show about the OSS community would have been less predictable than \"Days of our lifes\" and would have even more staying power.\n \nreply",
      "god this is cringe over cringe\n \nreply",
      "It must be horrible working for Automattic at the moment having to deal with this seemingly never ending farce.\n \nreply"
    ],
    "link": "https://freewp.com/",
    "first_paragraph": "FreeWPPut a fork in it; the old ways are done for. The wait is over. I\u2019ve solidified my action plan, and it\u2019s time to make waves.I\u2019m thrilled to introduce FreeWP, a new news media powerhouse dedicated to the WordPress community and broader ecosystem.\u00a0Once formally established, FreeWP will solidify into a worker-owned and operated organization, returning power to the community where it rightfully belongs.Related ArticlesI\u2019m also leading Newsplicity, an open platform and resource designed to empower news publishers to adopt WordPress and join our vibrant community.To the current leaders in the space \u2014 WordPress Tavern and Newspack \u2014 brace yourselves. Competition is on the horizon, and I\u2019m stepping into the ring.On the legal front, I\u2019ve secured a suite of domains for WP Class Action. This independent initiative aims to address the issues plaguing our community head-on.Those interested in a fork of WordPress should meet WP2. I\u2019ve locked down dozens of domains like:WP2 signifies \u201cWordPress "
  },
  {
    "title": "Let's talk about animation quality (theorangeduck.com)",
    "points": 201,
    "submitter": "ibobev",
    "submit_time": "2024-10-10T10:38:23.000000Z",
    "num_comments": 61,
    "comments_url": "https://news.ycombinator.com/item?id=41797462",
    "comments": [
      "I love the statement in the conclusion.Curation is something we intrinsically favor over engagement algorithms. Noisy is easy to quantify, but greatness is not. Greatness might have a lag in engagement metrics while folks read or watch the material. It might provoke consideration, instead of reaction.Often we need seasons of production in order to calibrate our selection criteria, and hopefully this season of booming generation leads to a very rich new opportunity to curate great things to elevate from the noise.\n \nreply",
      "Why is curation relevant to \u2018greatness\u2019?By definition 99% of the content produced has to be in the bottom 99 percentiles, in any given year.Even if the entire world decided everything must be curated, that would just mean the vast vast majority of curators have not-great taste.Whereas in a future world where 99% of it is driven by algorithms, that would mean the vast majority of curators have \u2018great\u2019 taste.But this seems entirely orthogonal.\n \nreply",
      "Something I really enjoyed about this article is that really helps explain a counterintuitive result in hand drawn 2D animation. It's a well known phenomenon in hand drawn 2D animation that naively tracing over live action footage usually results in unconvincing and poor quality animation. The article demonstrates how sampling and even small amounts of noise can make a movement seem unconvincing or jittery- and seeing that, it suddenly helps make sense how something like simple tracing at 12 fps would produce bad results, without substantial error correction (which is where traditional wisdom like arcs, simplification etc comes in).\n \nreply",
      "2D animation traced over live action is called rotoscoping. Many of Disney's animated movies from the Walt Disney era used rotoscoping, so I don't think it's fair to say it results in poor quality.https://en.wikipedia.org/wiki/List_of_rotoscoped_works#Anima...\n \nreply",
      "The comment was about naive tracing. When Disney used rotoscoping they had animators draw conforming to a character model on top of the live action pose.The experienced animator and inbetweeners knew how to produce smooth line motion, and the live action was used for lifelike pose, movement, etc. It wasn\u2019t really tracing.There\u2019s examples of this in the Disney animation books, the finished animation looks very different from the live actors, but with the same movement.\n \nreply",
      "On the other side of the same coin, when animating VFX for live action, animation which looks \"too clean\" is also a failure mode. You want to make your poses a little less good for camera, introduce a little bit of grime and imperfection, etc.Animation is a great art and it takes a lot of skill to make things look the way they ought to for whatever it is you are trying to achieve.Most animators don't like the \"digital makeup\" comparison (because it's often used in a way which feels marginalizing to their work on mocap-heavy shows), but if you interpret it in the sense that makeup makes people look the way they are \"supposed to\" I think it's a good model for understanding why rotoscope and motion capture don't yet succeed without them.\n \nreply",
      "Rotoscoping was utilized for some difficult shots. Mostly live action was used for reference, not directly traced, Fleischer style. I've never seen rotoscoping that looked so masterful as Snow White and similar golden age films.https://www.youtube.com/watch?v=smqEmTujHP8\n \nreply",
      "Rotoscoping has its place. It can save a lot of time/money for scenes with complex motion and can produce good results, but overreliance on it does tend to produce worse animation since it can end up being constrained to just what was captured on film. Without it, animators are more free to exaggerate certain motions, or manipulate the framerate, or animate things that could never be captured on camera in the first place. That kind of freedom is part of what makes animation such a cool medium. Animation would definitely be much worse off if rotoscoping was all we had.\n \nreply",
      "\"Animation would definitely be much worse off if rotoscoping was all we had.\" Yeah, then it wouldn't be animation anymore.\n \nreply",
      "I mean, rotoscoping is still animation, but it's just one technique/tool of the trade. I thought it was used well in Undone, and I enjoyed The Case of Hana & Alice\n \nreply"
    ],
    "link": "https://theorangeduck.com/page/animation-quality",
    "first_paragraph": "Attending both CVPR and SIGGRAPH this year it was interesting to observe and discuss the difference between how vision and graphics researchers approach the field of animation. There was a sense from some researchers that the reviews from the graphics communities like SIGGRAPH could be too tough, and rejected papers based on petty irrelevant issues like shadow quality. While on the other side there were feelings that the vision community are willfully ignoring problems in their results while marching forward to develop new models. And I think both of these feelings really come to the forefront on the issue of animation quality, so I thought it might be a good opportunity to examine that subject a bit more.I think one of the best ways to start looking at animation quality is to look at some of the different sources of animation data in the community and compare them. For example, here is a video of some data from the Motorica Dance Dataset which is one of the highest quality publicly av"
  },
  {
    "title": "Bridge to Nowhere (depth-first.com)",
    "points": 48,
    "submitter": "egorpv",
    "submit_time": "2024-10-09T11:39:54.000000Z",
    "num_comments": 28,
    "comments_url": "https://news.ycombinator.com/item?id=41786768",
    "comments": [
      "Neurosurgeons are extremely smart, hardworking, and (usually) amicable physicians. They are also in short supply and can determine whether an entire health system makes or loses money.Neurosurgery is the hardest residency, and the hardest physician career. However, this difficulty is in-part due to the bravado of the neurosurgeons themselves. During neurosurgery residency, you have to learn to be a brain and spine surgeon, undertake two years of research, learn how to do endovascular interventions, and (of course) manage all of the pre-/post- operative care including clinic. It is not uncommon for a single PGY-2 neurosurgery resident to follow 100+ inpatients. Suffice to say neurosurgeons are overburdened, yet they themselves have fought against reducing training hours.Patients can generally expect to spend less than 30 minutes speaking to their surgeon before/after their surgery.For those unaware, you can become a spine surgeon via either the neurosurgery or orthopedic surgery routes. Just my simple opinion, but I think spine surgery should be its own residency. Brains should be left to the neurosurgeons and extremities to the orthopedists.\n \nreply",
      "I had pretty much exactly the same thing happen to me, in 1996. I probably had 2 days to live. Benign brain tumors are bad. They don't have to be cancer.I was given Option 3. I decided not to take it, and they were fairly confident that I'd be in a wheelchair, the rest of my life. That did not happen.As things turned out, I was OK, but it took me a couple of months to learn to walk and chew gum at the same time.\n \nreply",
      "Sometimes, this is the gift of having a trained chaplain, pastor, or advocate with you who has navigated these moments before. I\u2019ve been in these moments with people in my church, and I don\u2019t think it is always about the doctors or healthcare providers withholding info. Sometimes, you are the tenth person they have seen in a short period of time, so they are trying to communicate as best as they can, as efficiently as they can. Having someone - doesn\u2019t have to be religious to be clear - who has been in those rooms can be helpful. They can repeat what the doctor says, because it can be so frightening and hard to hear.I have asked doctors and anesthesiologists to come back into the room and finish answering the questions. I know they are busy. But I know they want to put you at ease and give you all the info you need.- What side effects can we expect from the medication?\n- What alternatives are possible? What if the treatment doesn\u2019t work?\n- What is the prognosis - worst case and best case?\n- How long will recovery be?\n- When can family members/loved ones see them?\n- Who will contact the family members during the procedure?\n- How soon will the patient be up and about?\n- Do you know the patients limits and directives - like no resuscitation?More than once, I have helped the doctors hear something that they had missed, buried in all of those charts. More than once, I helped a friend or loved one gain some clarity on why the course of action is best or whether they want to explore something else.Powerful story! And helpful language to think about them as a Bridge to Nowhere.\n \nreply",
      "As you say we do need better advocacy and more transparency in difficult situations.I have trust issues bringing religion into life and death decisions (or any decision). Either you are bringing in believers, people who can't tell fantasy from reality. Or, you are bringing in liars.Add onto this the still present stigma of therapy and mental health services that is largely religious in basis and avoiding the whole religion thing is just better.\n \nreply",
      "well put. In general , you want someone with experience who is also able to think clearly about the issue. But even having someone in there with you can make a huge difference.I personally know of someone who almost died in a hospital from a medical error , and survived only because a family member decided to check on him at the hospital\n \nreply",
      "I've known two people with glioblastoma (both deceased now).It is incredibly hard to come up-to-speed on a newly diagnosed (or newly undiagnosed) medical situation.But I think many many people will encounter it and be unprepared.  They may encounter it early when a friend or family member faces the situation.Unfortunately a lot of learning happens after the fact.For example, just finding out if someone has glioblastoma can leave you physically or mentally debilitated.  One of the people I knew had a biopsy, but that caused them to be bedridden without control of one side of their body.So in relation to preparation, I think people should prepare.  Reading articles like this one (or his other articles) can be uncomfortable, but well spent.\n \nreply",
      "> But more than this I would come to learn that that I'd fallen into a trap of my own making.I'd blame the medical doctor. In similar cases, they use misleading remarks and partial information to guide the patient in the path they prefer.\n \nreply",
      "It seems like the doctor has fallen victim to the politician's fallacy [0], summarized well on Wikipedia as1. We must do something.2. This is something.3. Therefore, we must do this.People seem to feel like there's merit in \"trying something, anything\" even if by trying something you may actively make the problem worse. We need to accept that we only have limited control. Bad things happen.0. https://en.wikipedia.org/wiki/Politician%27s_syllogism\n \nreply",
      "He also says they said they talked about things, but he might not remember.\n \nreply",
      "More or less, if you enter a hospital, you need a medical case manager. The case manager should be an equal or superior specialty to the treating physician. The case manager should have a medical power of attorney to make decisions concerning your care (not so much to make decisions, but to be allowed into the decision making process to advise you, and then to regulate the execution of the treating physician).In short if your doctor is not employed by you, you should be taking precautions accordingly.This is an absolutely daft situation, but it is where we find ourselves.\n \nreply"
    ],
    "link": "https://depth-first.com/articles/2024/05/24/bridge-to-nowhere/",
    "first_paragraph": "By Richard L. ApodacaOn March 24, 2023 I was laying in a hospital bed for the first time in my life. I'd just been told that a team was being assembled for my upcoming brain surgery. I don't remember being asked if I wanted one. Rather, I was told that I would have one and that it would happen soon.The previous day I'd been shown an MRI of my brain. It revealed a tumor in my right parietal lobe. The thing was huge \u2014 about the size of a tennis ball.But I'd been told little else. I was told it could be malignant or it could be benign. That's where the surgery came in. Some kind of surgery was needed to obtain a tissue sample and through tests run on it learn some basic facts. Two options were presented: (1) a biopsy only; or (2) a surgery to remove the tumor with pathology to be performed on the removed tissue. Option (2) was recommended because it would remove the tumor and provide a sample for further characterization.What bothered me was the glaring absence of Option (3), which was to"
  },
  {
    "title": "Helping wikis move away from Fandom (weirdgloop.org)",
    "points": 842,
    "submitter": "creatonez",
    "submit_time": "2024-10-10T11:21:53.000000Z",
    "num_comments": 398,
    "comments_url": "https://news.ycombinator.com/item?id=41797719",
    "comments": [
      "As the person ultimately responsible for the Minecraft Wiki ending up in the hands of Fandom, it is great to see what Weird Gloop (and similar) are achieving. At the time of selling out, the Minecraft Wiki and Minecraft Forum cost tens of thousands of dollars per month to run and so it didn't feel too much like selling out, because we needed money to survive[1]. 15 years later, the internet is a different place, and with the availability of Cloudflare, running high-traffic websites is much more cost effective.If I could do things over again, on today's internet, I like to believe Weird Gloop is the type of organisation we would have built rather than ending up inside Fandom's machine. I guess that's all to say: thank you Weird Gloop for achieving what we couldn't (and sorry to all who have suffered Fandom when reading about Minecraft over the years).[1] That's a bit of a cop out, we did have options, the decision to sell was mostly driven by me being a dumb kid. In hindsight, we could have achieved independent sustainability, it was just far beyond what my tiny little mind could imagine.\n \nreply",
      "I was approached about a decade ago to combine The Infosphere with then Wikia's Futurama wiki.  I asked it was possible to do a no-ads version of the wiki, and while initially they seemed like that might be possible, they eventually said no, and so we said no.  So now there are two Futurama wikis online.  I still host The Infosphere, haven't checked the Fandom one in years.Fortunately for me, Futurama isn't as popular as Minecraft (for some reason!), so I've been able to pay out of my own pocket.\n \nreply",
      "A bit of a follow up to this; after a bit of thought, I am considering reaching out to Weird Gloop.  I do not feel I am able to give The Infosphere the care that it deserves.  And with Futurama back on Hulu, we are naturally seeing an uptick in activity.  We have a very restrictive sign up in place, because I don't have time to moderate it anymore.  It keeps the spam down, yes, but also new users away.Note: The reason I'm writing I'm _considering_ reaching out and not just straight up reaching out is because the domain itself has a different owner than me, and I want to make sure they are also approving of this decision.\n \nreply",
      "What kind of costs are associated with something like this, and what sort of visitors are you getting? I'm wondering what kind of infrastructure you need.\n \nreply",
      "The Infosphere has always been one of the best fan wikis out there, thank you for your hard work (and for not selling out to Fandom)\n \nreply",
      "Their growth people emailed me again and again and tried to do the same with StrategyWiki decades ago.Here's one of their emails:> [Redacted] mentioned that your site was very cool - and that you're heading off to college.  As you may know, Wikia is founded by Jimmy Wales (of wikipedia fame) and we are trying to become THE resource for all gamers> I was wondering if you'd consider moving over to wikia now that you're going to might have less time with your studies.  As an incentive I can point to a few things that might make the move easier> 1.  We have cool new software\n     - gaming.wikia.com lets users do more blog-like contributions in\naddition to wiki editing\n     - new social networking tools on the wiki - see our test server at\nhttp://sports.box8.tpa.wikia-inc.com/index.php?title=User:[R...> 2.  We could also hire you to help moderate the strategy wiki and other wikis if you need some beer and pizza money :-)> 3.  or we could offer to pay all the hosting costs and share some of the ad impressions/revenue with u> If nothing else, I'd love to chat by phone and get to know you better.> Let me know if that'd be ok :-)\n \nreply",
      "We would like 2 squeeze what u made until all the money runs out + underpay u :-)\n \nreply",
      "Ugh, this sits very close to \u2018exploiting cheap labor\u2019, and if the ads didn\u2019t, it makes me want absolutely nothing to do with the site.It\u2019s so upbeat too. I can totally see someone that doesn\u2019t know better being taken in.\n \nreply",
      "the way this is phrased reminds me so much of IOI from Ready Player One\n \nreply",
      "I remember reading the Minecraft wiki back in the early 2010s, back when Fandom was still Wikia. It would have been much more appealing at the time than it is today - not just for the reasons you list, but because Wikia actually kicked ass in the early 2010s. It was sleek, modern, and easy to use. And today, it isn't.\n \nreply"
    ],
    "link": "https://weirdgloop.org/blog/why-were-helping-more-wikis-move-away-from-fandom",
    "first_paragraph": ""
  },
  {
    "title": "Automating processes with software is hard (learningbyshipping.com)",
    "points": 235,
    "submitter": "rbanffy",
    "submit_time": "2024-10-07T13:02:59.000000Z",
    "num_comments": 82,
    "comments_url": "https://news.ycombinator.com/item?id=41765594",
    "comments": [
      "As someone who spent most of a career in process automation, I've decided doing it well is mostly about state limitation.Exceptions or edge cases add additional states.To fight the explosion of state count (and the intermediate states those generate), you have a couple powerful tools:   1. Identifying and routing out divergent items (aka ensuring items get more similar as they progress through automation)\n   2. Reunifying divergent paths, instead of building branches\n\nWell-designed automation should look like a funnel, rather than a subway map.If you want to go back and automate a class of work that's being routed out, write a new automation flow explicitly targeting it. Don't try and kludge into into some giant spaghetti monolith that can handle everything.PS: This also has the side effect of simplifying and concluding discussions about \"What should we do in this circumstance?\" with other stakeholders. Which for more complex multi-type cases can be never-ending.PPS: And for god's sake, never target automation of 100% of incoming workload. Ever. Iteratively approach it, but accept reaching it may be impossible.\n \nreply",
      "I also like the way the Toyota production system puts it with Jidoka / automate with a human touch. [1]1. Only automate the steps you know how to execute manually very well. This is a prerequisite. This kind of goes in the direction of not automating everything but looking at the parts you can automate well first.2. Enable human intervention in the automation. Enable humans to stop the line when something is wrong. Then you figure out what's wrong and improve your automation. This implies the interative approach.[1] https://global.toyota/en/company/vision-and-philosophy/produ...\n \nreply",
      "Or to put it more concisely, trust but verify the \u2018manual process\u2019, that includes any verbal or written explanations of the process.Only 100% trust the automation after every possible step, procedure, and word has been 100% verified. (Which is to say almost never\u2026)\n \nreply",
      "> never target automation of 100% of incoming workload... Iteratively approach it.This is critical. So many people jump from \"it works\" to \"let's automate it entirely\" without understanding all the nuances, all the various conditions and intermediate states that exist in the real world. The result is a brittle system that is unreliable and requires constant manual intervention.A better approach is to semi-automate things first. Write scripts with manual QA checkpoints and playbooks that get executed directly by devs. Do the thing yourself until it's so boring it hurts. Then automate it.\n \nreply",
      "> Well-designed automation should look like a funnel, rather than a subway map.Do you have any examples of this? Like an example project?> never target automation of 100% of incoming workload. Ever.A new product owner came in last year and wanted to \"automate everything\". They wanted a web page where builds, branches, commits, and more were all on one page that showed exactly which commit was deployed where, by whom, etc etc. They wanted this extravaganza for a 2-person application that was in maintenance with no new features.They're also the kind of person who consults chatgpt or copilot on a subject while you're explaining that subject to them, to check that the LLM agrees with what you are saying. They'll even challenge people to prove some copilot output is incorrect. It seems to me that they consider LLMs more reliable than people.\n \nreply",
      "> They're also the kind of person who consults chatgpt or copilot on a subject while you're explaining that subject to them, to check that the LLM agrees with what you are saying. They'll even challenge people to prove some copilot output is incorrect. It seems to me that they consider LLMs more reliable than people.Dear lord, these tools have just come out, how can they already have invented a new type of asshole?\n \nreply",
      "We had a product manager that made requirements based mostly on ChatGPT.It would output completely nonsensical stuff like QR-Code formats that don't exist, or asking to connect to hallucinated APIs.It was often caught by lead devs quite quickly: the documentation wasn't a link or a PDF but rather some block of text.But in the cases it wasn't, it was super costly: some developer would spend hours trying to make the API work to no avail, or, in the case of the QR code, it would reach QA which would be puzzled about how to test it.So yes there is a new type of asshole.\n \nreply",
      "No, those are the same that have been around forever. They just have a new tool to \"justify\" their crappy behavior.\n \nreply",
      "I experienced this, as well. It\u2019s a whole new level of \u201eI know enough to be dangerous\u201c.\n \nreply",
      "This is as fun as the business or product person that \"knows how to code\".\n \nreply"
    ],
    "link": "https://hardcoresoftware.learningbyshipping.com/p/222-automating-processes-with-software",
    "first_paragraph": ""
  },
  {
    "title": "Designing a Fast Concurrent Hash Table (ibraheem.ca)",
    "points": 85,
    "submitter": "burntsushi",
    "submit_time": "2024-10-10T13:15:28.000000Z",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=41798475",
    "comments": [
      "I'd love to see this put through it's paces with the following:I have a strategy for benchmarking such data-structures, I call it the \"birthday benchmark\".Unfortunately I'm not proficient enough in Rust to have put it into practice there, but the strategy is this:Generate a stream of random bytes, pre-generation is advised to avoid dominating the benchmark.Consume the stream in blocks of n bytes.Try to find a duplicated block.Given the \"birthday paradox / birthday attack\", this is actually much quicker than it might first appear. Simple single-thread basic hashset can find duplicates at a 6-byte length match in around 3 seconds on my hardware, and a specialised data-structure takes this to less than a second.A good concurrent hashtable should improve that greatly even further, because this ought to be a very parallelizable problem, especially if you're not constrained to finding the first such duplicate in the stream, but allow yourself to find any duplicate, nor are constrained to keep track of both sides of the pair, and are content with simply knowing you have found one.\n \nreply",
      "> Generate a stream of random bytes, pre-generation is advised to avoid dominating the benchmark.Current PRNGs are pretty fast. The Xoroshiro RNG \"shootout\" benchmark [0] lists some self-reported speeds. They claim 8+ GB/s for even their slowest, highest-quality PRNG. The general-purpose one they recommend is 10GB/s, and 32GB/s when vectorized.The vectorized versions get close to current DRAM speeds. I think I'd prefer that over reading from a giant table, given that the table reads will have significant implications for caching and disrupt that aspect of the benchmark.[0]: https://prng.di.unimi.it/#shootout\n \nreply",
      "Thanks for that suggestion, I shall explore faster PRNGS and vactorization too then.My domain is c#, where it's perhaps unsurprising that it's a lot faster to have an array in memory than go via the default Random, which is I believe is Xoroshiro ( at least in .net 6+ ). It certainly can generate data quickly with Random.GetBytes(), but repeated calls to Random.NextInt64() are much slower.Another issue I found with generating random numbers and trying to multi-thread is thread safety  / synchronisation. If each thread is doing it's own random generation then it's difficult to compare results between using 1 thread and 2 threads, because it's no longer the same single stream of random data measured across each benchmark, so the meta-randomness of how early you \"should\" hit a dupe becomes a factor.Having pre-generated numbers and single thread responsible for handing out those numbers makes it easier, you can either have a thread-safe counter, or can increment a larger increment plus an offset for each thread number. The first \"real\" dupe is still in the same place in the original pre-generated data.You can then compare the incremental gains, for example, of each thread having their own hashtable would get you logarithmic gains (I think that's the right way to express it, but essentially it's gaining just by having First Dupe = Min(First Dupe across N threads) vs an actual thread-safe concurrent hash-table, where you should[1] still see First dupe but sped up by a greater factor than just a naive work but not state sharing.I recognise there are potential memory caching issues at play with the pregeneration approach, but for larger bit counts the actual work should hopefully dominate, particularly since look-up values aren't revisited by design.[1] \"Should\", because there's a small chance in many algorithms that due to concurrency and race conditions you actually miss the duplicate. Either multiple runs should be tried looking for bi-modal data, or accept that the next dupe shouldn't be so long after the first, and be happy the speed-up is greater than the slow-down caused by very occassional race condition misses. The chance of a such a race condition is absolutely minuscule at the 48bit level, if we assume we are using say, 8 threads, and assume for a race condition to occur, the same 48-number would have to be concurrently being handled/generated by 2 different threads.\n \nreply",
      "In my experience, vectorization is very simple\u2014just running multiple instsnces of Xoroshiro (or one of the weaker variants) inside a vector works quite well. Fitting the resulting peg into the hole of a preexisting API is difficult, but that\u2019s always a problem.\n \nreply",
      "> which is I believe is Xoroshiro ( at least in .net 6+ )Xoshiro I believe is in .NET 6, close cousinhttps://blogs.siliconorchid.com/post/coding-inspiration/rand...\n \nreply",
      "Thanks for that correction, I hadn't appreciated the subtle difference there.\n \nreply",
      "This is a write-heavy workload. Papaya is optimized for read-heavy workloads.It's an interesting benchmark, but the kind of people who would want to use Papaya probably wouldn't be very interested in it.\n \nreply",
      "Do you have other examples of interesting workloads? Benchmarking is difficult, lol.\n \nreply",
      "Have also a look at concurrent_map. It is a concurrent BTreeMap, this means it maintains key order (not insertion order but the keys implement Ord).https://lib.rs/crates/concurrent-mapI am using it for a transactional in-memory key-value store experiment.\n \nreply",
      "Looks very interesting, but seems to serve a pretty different use case:> This is an ordered data structure, and supports very high throughput iteration over lexicographically sorted ranges of values. If you are looking for simple point operation performance, you may find a better option among one of the many concurrent hashmap implementations that are floating around. Pay for what you actually use :)\n \nreply"
    ],
    "link": "https://ibraheem.ca/posts/designing-papaya/",
    "first_paragraph": "I recently released papaya, a fast and feature-complete concurrent hash table for Rust. In this post I want to dive into the design and research that went into creating it, as well as why you might consider using it over existing solutions. If you're looking for an overview of papaya, you might find it more useful to consult the documentation.Concurrent hash tables are a well explored topic, both in academic literature and open-source implementations. In some ways, they are the holy grail of concurrent data structures. On the other hand, a concurrent hash table is an inelegant blob of shared mutable data, often a marker of a poorly architectured program. Hash tables in general have many unfortunate properties, most of which are exacerbated in a concurrent context. However, despite their downsides, hash tables can be a necessary evil, especially for read-heavy use cases where alternative data structures are not competitive in terms of performance.There are a few important properties tha"
  },
  {
    "title": "Ironies of Automation (1983) (complexcognition.co.uk)",
    "points": 16,
    "submitter": "harperlee",
    "submit_time": "2024-10-10T15:42:47.000000Z",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=41800036",
    "comments": [
      "Related:Ironies of Automation (1983) - https://news.ycombinator.com/item?id=36638026 - July 2023 (1 comment)Ironies of Automation (1983) [pdf] - https://news.ycombinator.com/item?id=36505285 - June 2023 (38 comments)Ironies of Automation - https://news.ycombinator.com/item?id=33476157 - Nov 2022 (5 comments)Ironies of Automation (1983) [pdf] - https://news.ycombinator.com/item?id=23300195 - May 2020 (11 comments)Ironies of Automation (1983) [pdf] - https://news.ycombinator.com/item?id=19132724 - Feb 2019 (27 comments)Ironies of Automation (1983) - https://news.ycombinator.com/item?id=18230258 - Oct 2018 (3 comments)Ironies of Automation (1983) - https://news.ycombinator.com/item?id=17587611 - July 2018 (1 comment)Ironies of Automation [pdf] - https://news.ycombinator.com/item?id=12749342 - Oct 2016 (1 comment)Ironies of Automation (1983) [pdf] - https://news.ycombinator.com/item?id=9756838 - June 2015 (2 comments)Ironies of Automation  (1983) - https://news.ycombinator.com/item?id=7726496 - May 2014 (5 comments)\n \nreply",
      "Hmmm...if I had a hammer,\nI'd hammer in the morning,\nhammer in the evening,All over HN....\n \nreply",
      "Very interesting read, and new to me. Thank you!\n \nreply"
    ],
    "link": "http://www.complexcognition.co.uk/2021/06/ironies-of-automation.html",
    "first_paragraph": "\nThis paper discusses ways in which automation of industrial processes may expand rather than eliminate problems with the human operator.\u00a0This was unusual among my papers.\u00a0 Most of the 'big' papers took months of total concentration to write (the marvellous long vacation) - first coming up with relevant points, then mulling over the issues and helping them to emerge into a coherent framework, then translating that into a linear form which could be expressed in sentences.Writing about this topic was unusual in that I felt so strongly about the issues the paper emerged almost fully formed.These ideas were first presented at a conference, and I remember ending by asking the control engineer audience to design bad control systems so the operators would get much practise with taking over \ud83d\ude00I am long retired and have not been keeping up with references to this paper, so I don\u2019t know the current issues or the currently suggested solutions.\u00a0 This was written before I had a personal computer, le"
  },
  {
    "title": "How electric trains work and why they make interesting sounds [video] (youtube.com)",
    "points": 121,
    "submitter": "zdw",
    "submit_time": "2024-10-06T15:30:18.000000Z",
    "num_comments": 45,
    "comments_url": "https://news.ycombinator.com/item?id=41757808",
    "comments": [
      "Fascinating video! One of my favorite train vids is a Taurus starting up in frigid conditions. As the wheels slip and the PWM modulation on the individual motors varies to keep traction, it makes beautiful music.https://www.youtube.com/watch?v=Q_bF1Wb_pSE\n \nreply",
      "That's really neat - it sounds like a violin. I can barely keep a tune so I'm wondering if anyone knows anything special about the melody\n \nreply",
      "So it's more complicated than I thought it was. Now I'm curious about our Russian trains, especially in subways. They've never made any interesting sounds, it seems. The older (Soviet-era) ones don't make any noticeable sounds at all. The newer ones just make a high-pitched whine that varies in volume (but not frequency I think) when they accelerate or brake.\n \nreply",
      "As much as I love the futuristic and sophisticated sounds that electric traction drives make as compared to their fossil-fueled counterparts, I do think that the driving and control systems that actually generate the PWM waveforms that are sent to the motors are even more interesting. Huge, massive IGBTs weighing a kilo+ each chopping up hundreds of thousands of joules/s of energy without destroying themselves, current transformers, contactors, it really tickles parts of my brain. He only spent a handful of seconds on those, would be interesting to hear a deeper dive.\n \nreply",
      "Photo on Wikipedia:https://en.wikipedia.org/wiki/Insulated-gate_bipolar_transis...Are they manufactured using regular silicon lithography?  You'd think when making something so large you could just mix up the chemicals instead.\n \nreply",
      "From what I understand, mostly yes. They are still built up layer-by-layer with standard litho techniques, with pattern masks, ion implantation for the p- and n-type layers, etching, CVD to deposit insulation material (for the 'insulated gate' part of the device). Though they don't have to be nearly as precise, as I understand it as something more sophisticated, like a cpu, they still need to lean on those to make it chooch.\n \nreply",
      "I don't thik they're produced with the same process as CMOS, but I bet some photolithography is involved.\n \nreply",
      "Very early EVs (GM's EV1 and then a few other GMs) used banks and banks of water cooled IGBTs to spin the motor.\n \nreply",
      "Same! That stuff is so freakin' interesting! The other deep dive I really want (pun intended) is submarine sonar transducer drivers, which as I understand do basically the same thing but bidirectional and with a LOT more waveform customization.\n \nreply",
      "I do not have perfect pitch (cool party trick), but I can identify all 8 'normal' equal temperament intervals by ear relative to a reference (If you couldn't guess, I play bass, which is a lame party trick).I was in Austria last year, and a bunch of the trains starting from a standstill had a \"gradual acceleration\" algorithm for their traction motors. As the drive frequency increased, you could hear the drive motor whine (or maybe it was the inverter?) along with the frequency. It was fascinating, because it played chords as it accelerated: root, 2nd minor, 4th major, 6th minor, octave, then it would pause at the octave and do it again after a few seconds until it reached max power I assume. Each chord had a very faint tritone added to it relative to the chord tonic, so you got this really harmonic pulsing.After the second course there was too much rail noise to hear what happened, but it was fascinating. I'll try to find a video, I know I recorded it.Power in Austria/Germany is delivered to trains via a really weird standard too: something like 25hz 27 kV. Leftover standard from 100 years ago.\n \nreply"
    ],
    "link": "https://www.youtube.com/watch?v=IRJIJPTUXXE",
    "first_paragraph": ""
  }
]