[
  {
    "title": "GitHub Git Operations Are Down (githubstatus.com)",
    "points": 164,
    "submitter": "hunkins",
    "submit_time": "2025-01-13T23:47:31 1736812051",
    "num_comments": 100,
    "comments_url": "https://news.ycombinator.com/item?id=42691184",
    "comments": [
      "It's almost as if only Git is distributed, but people sold out to Github for convenience. Too bad Git lacks a distributed bug tracker and wiki system like Fossil. Guess Github has to fail a lot more for things to change.\n \nreply",
      "people could not be more clear that their preference is for reliable and easy-to-use centralized services maintained by professionals, and not decentralized systems that require a great deal of user expertise\n \nreply",
      "I actually don't care whether it's centralised or decentralised, or who's managing it.But you are right that I want reliable and easy-to-use services.  And centralisation is often one way to go there.As an interesting counterpoint: Git itself is decentralised and replaced centralised services like Subversion.  And that made git easier to use, especially easier to get started with: no need for a server, no need to be online, just do `git init` in any old directory.A GitHub-clone could be more decentralised, but they'd need to use that decentralisation to drive those other features that people actually care about day to day.\n \nreply",
      "I do care about the decentralized nature of git, it is very important to me.  In fact it's one of the main reasons I don't mind using github, because for me personally if github died it would have little to no effect on my day.  I could redirect my team to a local repo within minutes.It's when you start depending heavily on all of the other aspects of github that aren't git where it becomes a problem.\n \nreply",
      "this, especially if it's a business\n \nreply",
      "Ironically github is sort of the exception that proves the rule: decentralized in the one way that really matters (decoupled development on individual systems), but centralized for easy interaction in the way the market demands.\n \nreply",
      "But it demands both. The ability to develop in a parallel, decentralized way, and the ability to integrate things at a central point, an authoritative source and a blessed official destination.It's similar to how databases allow to begin parallel, concurrent, even contradictory transactions, and also guarantee serialized, consistent database state, and rejection of invalid updates, at commit time. Both aspects are utterly important.\n \nreply",
      "Similar thing that happens with crypto exchanges, also swift transfers and federal states for that matter.\n \nreply",
      "Yes, subsidiarity is a great principle.. in-principle, but in practice it often gets the curb.  See https://en.wikipedia.org/wiki/SubsidiaritySo far, having individual small countries seems to keep the centralisation at bay for longer than just having states in a federation.(Look at Germany, Austria, Australia, the USA for examples of the latter.  Interestingly, the UK is legally not made of federal states, but in practice they have granted more autonomy to eg Scotland over the years.  And everyone knows that Scotland would secede and get away with it, if there was a power grab by London.  In that sense, they are more federal than the US, where secession is very much verboten.)\n \nreply",
      "Thats mostly because of herdmentality not because of a considered approach. Decentralization assumes the majority are anti social.\n \nreply"
    ],
    "link": "https://www.githubstatus.com/incidents/qd96yfgvmcf9",
    "first_paragraph": "Resend OTP in:  seconds \n                    Didn't receive the OTP?\n                    Resend OTP \nResend OTP in: 30 seconds \n                      Didn't receive the OTP?\n                      Resend OTP \nThe URL we should send the webhooks toWe'll send you email if your endpoint failsGet tips, technical guides, and best practices. Twice a month. Right in your\r\n          inbox.\n          Subscribe to updates for Incident with Git Operations via email and/or text message. You'll receive email notifications when incidents are updated, and text message notifications whenever GitHub creates or resolves an incident.\n        "
  },
  {
    "title": "When a winter storm trapped a luxury passenger train near Donner Pass (smithsonianmag.com)",
    "points": 79,
    "submitter": "pseudolus",
    "submit_time": "2025-01-10T17:16:16 1736529376",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=42657593",
    "comments": [
      "They should rename the pass Train Trapped in Snow Pass to serve as a cautionary reminder for anyone traversing that pass in the winter\n \nreply",
      ">The City was among America\u2019s premier trains, a luxury streamliner that could hit 110 miles per hour while white-jacketed waiters balanced trays of cocktailsI wonder how passengers back then would have imagined rail travel today, 75 years later (aside from the life-threatening storms, of course). The Overland Route is now freight-only, and the closest equivalent, the California Zephyr, takes about 52 hours to make the journey this train did in just 40!More on topic, I was surprised to read:> When the steam generators\u2019 water tanks ran dry, heat disappeared, too.Weren't there surrounded by frozen water? Is there any reason snow couldn't be used in an emergency to heat the train?\n \nreply",
      "> I wonder how passengers back then would have imagined rail travel today, 75 years later (aside from the life-threatening storms, of course). The Overland Route is now freight-only, and the closest equivalent, the California Zephyr, takes about 52 hours to make the journey this train did in just 40!I don't think people ride the California Zephyr to get from Chicago to the Bay Area as quickly as possible. Most of us spent as much time as possible in the observation car marveling at the Rockies and Sierras.\n \nreply",
      "> I don't think people ride the California Zephyr to get from Chicago to the Bay Area as quickly as possible.Of course they don't. It's too slow. Our rail shouldn't be as bad as it is.I love that trip, and I've taken it more than twice, oohing and ahhing all the way, but I do not need it to last as long as it does.\n \nreply",
      "> I wonder how passengers back then would have imagined rail travel today, 75 years laterShow them the airplane that gets them to the same destination in a couple of hours vs days\n \nreply",
      "It was January 13, 1952 they had airlines.\n \nreply",
      "OTOH, flying was considered a luxury in the USA until the airlines were deregulated in 1978. https://www.npr.org/2024/07/05/1197960905/flying-airlines-de...\n \nreply",
      "Deregulation had far less impact on prices than people generally quote. Getting out of the energy crisis did a lot to shift prices quickly which made it seem like deregulation was suddenly working. https://en.wikipedia.org/wiki/1970s_energy_crisisLonger term Airlines got a lot better and a lot cheaper worldwide at roughly the same rates because things like fuel economy and engine maintenance timescales skyrocketed.\n \nreply",
      "A few reasons that occur to me:1. The volume of snow to be collected would have been significantly greater than the resulting water.2. Heating snow at elevation requires more energy.3. Perhaps getting snow into the steam generator wasn't so easy.\n \nreply",
      "> The volume of snow to be collected would have been significantly greater than the resulting water.Yes, dependent on the nature of the snow but a broad idea is that if you want a litre of water, you need five litres of snow.\n \nreply"
    ],
    "link": "https://www.smithsonianmag.com/history/when-a-deadly-winter-storm-trapped-a-luxury-passenger-train-near-the-donner-pass-for-three-days-180985782/",
    "first_paragraph": ""
  },
  {
    "title": "I created an open-source Hardware Hacking Wiki \u2013 with tutorials for beginners (hardbreak.wiki)",
    "points": 348,
    "submitter": "hw-f3nter",
    "submit_time": "2025-01-12T11:29:52 1736681392",
    "num_comments": 53,
    "comments_url": "https://news.ycombinator.com/item?id=42672821",
    "comments": [
      "Thanks for the wiki -- I have always been interested in hardware hacking but I have always felt overwhelmed as I didn't know where to start. I believe this kind of resource can greatly help with that, especially the case studies.However, I can't help but feel that a major part of the content is LLM-generated, or at least LLM-rewritten. It feels off and uninteresting to read, honestly. Is it the case? To support my case, I see that the case study page (https://www.hardbreak.wiki/introduction/case-study-led-to-a-...) has very similar paragraphs next to each other, the second one seemingly being the \"genuine\" one, and the first one being the LLM-rewritten version.I'm not against using LLMs to help fix typos or reformulate things, but you should definitely keep some of your style. The LLM that you used (if you used one) made the content super bland, and as a reader, I'm not really incentivized to browse more.\n \nreply",
      "Case in point, under Case Study > Reconnaissance > OSINT, these two paragraphs follow one another - same content but different wording.> The first step in any hardware hacking project is research. I started by Googling the router model number, \"ASUS RT-N12 D1\", and came across an article about a similar model, the ASUS RT-N12+ B1. The article mentioned that the device had an open UART interface allowing unauthenticated root access. However, it provided no exact details on how to exploit this or where the UART interface might be located. Could my router model have the same vulnerability?> In the first step I googled the model number for my router \"ASUS RT N12 D1\" and I came accross this article. It shows that a similar model the  \"ASUS RT N12+ B1\" appears to have an open UART interface, which gives unauthenticated root access. It does not show how to exacltly abuse this or any details where to find the UART interface.  Let's see if our router model may have the same vulnerability!\n \nreply",
      "Get a ham radio technician license, and you may develop an intuitive perspective on most electrical engineering concepts.i.e. the physics lab derivation of the core EE tool set is unnecessary if you understand what the models are describing.AI is slop in and slop out... and dangerous to students... =3John Shive's Wave Machines is where every student should start:https://www.youtube.com/watch?v=DovunOxlY1k\n \nreply",
      "> Get a ham radio technician license, and you may develop an intuitive perspective on most electrical engineering concepts.May. I managed to get one without developing much intuition for most EE concepts, unfortunately.\n \nreply",
      "Did you mean you don't understand the equations/theory, or are having difficulty applying the concepts to design circuits?In the first case, install LTSpice (free from Analog Devices), and head here to run down the basics:https://www.youtube.com/@FesZElectronics/videosAnd in the latter, go though common basic designs analyzing how they work:https://archive.org/details/encyclopediaofelectroniccircuits...https://archive.org/details/encyclopediaofel02grafhttps://archive.org/details/isbn_9780070110779https://archive.org/details/encyclopediaofel0006grafThen try your own designs combining properties of several designs. Start with simple blinkers and buzzers at first... Try to avoid Arduino designs until you've done a few 555, transistor, and opamp circuits first.  =3\n \nreply",
      "Most of my issues seem to be about power - I have no feel for the relevant math, so even as I remember the basic equations and methods, I never feel certain I'm calculating it right. So in terms of hands-on experience, I pretty much jumped straight from burning through-hole resistors with 12V battery to ignite rocket motors made of PVC and caramel fuel, to Arduinos and RPIs and NodeMCUs -- basically, stuff that comes with an USB port it can draw power from...Thanks for the links, I'll work through them and hopefully come out with some understanding at the end of this process :).\n \nreply",
      "I mean I'm a dummy who just wanted to listen to ISS static and trucker jargon.\n \nreply",
      "Indeed, we also end up learning about our sun in levels of detail no person should find enthralling... lol =3\n \nreply",
      "dangerous to studentsIt's fatally dangerous to students who ignore it or dismiss it out of hand.  That much is already certain.\n \nreply",
      "How so?\n \nreply"
    ],
    "link": "https://www.hardbreak.wiki",
    "first_paragraph": ""
  },
  {
    "title": "Webtop \u2013 Alpine,Ubuntu,Fedora,and Arch containers containing full desktop envs (linuxserver.io)",
    "points": 15,
    "submitter": "weitzj",
    "submit_time": "2025-01-13T23:25:08 1736810708",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://docs.linuxserver.io/images/docker-webtop/",
    "first_paragraph": "         Webtop - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.We utilise the docker manifest for multi-platform awareness. More information is available from docker here and our announcement here.Simply pulling lscr.io/linuxserver/webtop:latest should retrieve the correct image for your arch, but you can also pull specific arch images via tags.The architectures supported by this image are:This image provides various versions that are available via tags. Please read the descriptions carefully and exercise caution when using unstable or development tags.The Webtop can be accessed at:Modern GUI desktop apps have issues with the latest Docker and syscall compatibility, you can use Docker with the --security-opt seccomp=unconfined setting to allow these syscalls on hosts with older Kernels or libseccompWarningDo not put this on the Internet if you do not know what you are doing.B"
  },
  {
    "title": "Debugging: Indispensable rules for finding even the most elusive problems (2004) (dwheeler.com)",
    "points": 409,
    "submitter": "omkar-foss",
    "submit_time": "2025-01-13T12:07:42 1736770062",
    "num_comments": 177,
    "comments_url": "https://news.ycombinator.com/item?id=42682602",
    "comments": [
      "In my experience, the most pernicious temptation is to take the buggy, non-working code you have now and to try to modify it with \"fixes\" until the code works. In my experience, you often cannot get broken code to become working code because there are too many possible changes to make. In my view, it is much easier to break working code than it is to fix broken code.Suppose you have a complete chain of N Christmas lights and they do not work when turned on. The temptation is to go through all the lights and to substitute in a single working light until you identify the non-working light.But suppose there are multiple non-working lights? You'll never find the error with this approach. Instead, you need to start with the minimal working approach -- possibly just a single light (if your Christmas lights work that way), adding more lights until you hit an error. In fact, the best case is if you have a broken string of lights and a similar but working string of lights! Then you can easily swap a test bulb out of the broken string and into the working chain until you find all the bad bulbs in the broken string.Starting with a minimal working example is the best way to fix a bug I have found. And you will find you resist this because you believe that you are close and it is too time-consuming to start from scratch. In practice, it tends to be a real time-saver, not the opposite.\n \nreply",
      "The quickest solution, assuming learning from the problem isn't the priority, might be to replace the entire chain of lights without testing any of them. I've been part of some elusive production issues where eventually 1-2 team members attempted a  rewrite of the offending routine while everyone else debugged it, and the rewrite \"won\" and shipped to production before we found the bug. Heresy I know. In at least one case we never found the bug, because we could only dedicate a finite amount of time to a \"fixed\" issue.\n \nreply",
      "Rule 0: Don't panicReally, that's important. You need to think clearly, deadlines and angry customers are a distraction. That's also when having a good manager who can trust you is important, his job is to shield you from all that so that you can devote all of your attention to solving the problem.\n \nreply",
      "100% agree. I remember I had an on-call and our pagerduty started going off for a SEV-2 and naturally a lot of managers from teams that are affected are in there sweating bullets because their products/features/metrics are impacted. It can get pretty frustrating having so many people try to be cooks in the kitchen. We had a great manager who literally just moved us to a different call/meeting and he told us \"ignore everything those people are saying; just stay focused and I'll handle them.\" Everyone's respect for our manager really went up from there.\n \nreply",
      "Slow is smooth and smooth is fast. If you don't have time to do it right, what makes you think there is time to do it twice?\n \nreply",
      "\"We have to do something!\"\n \nreply",
      "And this is something, so I\u2019m doing it.\n \nreply",
      "There's a story in the book - on nuclear submarines there's a brass bar in front of all the dials and knobs, and the engineers are trained to \"grab the bar\" when something goes wrong rather than jumping right to twiddling knobs to see what happens.\n \nreply",
      "I read this book and took this advice to heart. I don't have a brass bar in the office, but when I'm about to push a button that could cause destructive changes, especially in prod, my hands reflexively fly up into the air while I double-check everything.\n \nreply",
      "A weird, yet effective recommendation from someone at my last job: If it's a destructive or dangerous action in prod, touch both your elbows first. This forces ou to take the hands away from the keyboard, stop any possible auto-pilot and look what you're doing.\n \nreply"
    ],
    "link": "https://dwheeler.com/essays/debugging-agans.html",
    "first_paragraph": "\nThe entire book revolves around the \"nine rules.\"\nAfter the typical introduction and list of the rules,\nthere's one chapter for each rule.\nEach of these chapters describes the rule,\nexplains why it's a rule, and\nincludes several \"sub-rules\" that explain how to apply the rule.\nMost importantly, there are lots of \"war stories\"\nthat are both fun to read and good illustrations of\nhow to put the rule into practice.\n\n\nSince the whole book revolves around the nine rules, it might help\nto understand the book by skimming the rules and their sub-rules:\n\nUnderstand the system: Read the manual, read everything in depth,\n know the fundamentals, know the road map, understand your tools, and\n look up the details.\nMake it fail: Do it again, start at the beginning, stimulate the failure,\n don't simulate the failure, find the uncontrolled condition that makes\n it intermittent, record everything and find the signature of intermittent\n bugs, don't trust statistics too much, know that \"that\" can happen,\n "
  },
  {
    "title": "Snyk security researcher deploys malicious NPM packages targeting Cursor.com (sourcecodered.com)",
    "points": 19,
    "submitter": "arkadiyt",
    "submit_time": "2025-01-13T22:38:27 1736807907",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=42690473",
    "comments": [
      "Looks like a white hat audit from Snyk testing. Got flagged because oastify.com is a default Burp Collaborator server.They should be running a private npm repo for tests (not difficult to override locally) and also their own collaborator server.\n \nreply",
      "Without more context, this doesn't look great for Snyk either way: either they have an employee using NPM to live test their own services, or they have insufficient controls/processes for performing a legitimate audit of Cursor without using public resources.\n \nreply",
      "Just a reminder that Snyk was founded by ex-IDF Unit 8200 soldiers. I would not trust them given what we've seen Israel do to supply chains.https://en.wikipedia.org/wiki/Snyk\n \nreply"
    ],
    "link": "https://sourcecodered.com/snyk-malicious-npm-package/",
    "first_paragraph": "Every morning I get up and check what malicious packages my detector had found the night before.\u00a0 \u00a0It\u2019s like someone checking their fishing nets to see what fish they caught.As I was looking at last nights malicious packages I noticed something strange:\u00a0 Someone from Snyk had deployed several packages to NPM.\u00a0 Even weirder, the names of those packages appeared to show they were targeting Cursor, the hot new AI coding company.These packages were deployed by an NPM user named sn4k-s3c.\u00a0 The packages are named things like \u201ccursor-retreival\u201d, \u201ccursor-always-local\u201d and \u201ccursor-shadow-workspace\u201d.If you install any of these packages they will collect data about your system and send it to an attacker controlled web service.\u00a0\u00a0You can find the packages on NPM here: https://www.npmjs.com/~sn4k-s3cYou can see in this screen shot that the package is grabbing the output of a env command which will include many configuration options for your system.\u00a0 Often things like AWS keys, NPM tokens, GitHub cre"
  },
  {
    "title": "Fluid Simulation Pendant (mitxela.com)",
    "points": 184,
    "submitter": "sschueller",
    "submit_time": "2025-01-13T13:50:46 1736776246",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=42683389",
    "comments": [
      "Fascinating video. I watched almost the whole thing without planning to, I got sucked in.This is one of those examples of software that reminds me of my struggle to understand how LLMs are passing code evaluations that culminate with people declaring that they are now better than even the best human coders. I have tried to get LLMs (specifically, Claude and ChatGPT, trying various models) to assist with niche problems and it's been a terrible experience. Fantastic with CRUD or common algorithms, terrible when it's something novel or unusual.The author creates his own version of a \"FLIP simulation\". I'm going to go out on a limb and posit that even ChatGPT's unreleased o3 model would not be up to the task of writing the software that powers this pendant. Is this incorrect? I realize perhaps that my comment is a little off-topic given that this is not an AI project. However, this project seems like an excellent example of the sort of thing that I am quite skeptical the supposedly \"world-class\" artificial software engineers could pull off.\n \nreply",
      "> access to a lathe is a fundamental human rightA teacher once told me their (middle? high?) school was the last in their state with lathes.  Something which couldn't be created there today, and couldn't exist now in some other states, but which had been repeatedly grandfathered, since its creation with many others, just after World War 2. And that it would disappear upon the first serious accident, leaving none at all.\n \nreply",
      "Access to a CNC mill and a CNC lathe should be a fundamental right.Being CNC with an enclosure mitigates 99+% of all the safety issues and makes them 1000% more useful.  With CNC, the most harmful injury is likely to be a broken bone because  you're only in the envelope with servos active but not the spindle.  With manual, the spindle or chuck can grab you and kill you or send shrapnel into you.And I really wish we had a good, open source pick and place.  Those still can't handle 0201 components and higher density BGAs even though those PCBs are really cheap nowadays.\n \nreply",
      "Charlieplexing:https://en.m.wikipedia.org/wiki/Charlieplexing\n \nreply",
      "I learned recently that Charlieplexing is kind of like the discrete version of the Radon Transform: https://en.wikipedia.org/wiki/Radon_transform\n \nreply",
      "I really love mitxela's project ideas and process videos, I recommend checking out  his other projects as well\n \nreply",
      "I would not use \"prototype\" to describe this as he did.\n \nreply",
      "This is super cool! I love the simulation aspect of it.On the same note, I've been working on a bike POV display with lots of LEDs and just got \"live-ish\" video working over wifi with it:https://youtu.be/hxAHBvuyqpY?si=8XraFuG_Fi54Bs7T\n \nreply",
      "Ooo nice! Looks sweet\n \nreply",
      "Fascinating that with such a simple simulation you can see grain boundaries like those in metals forming. Look at the second image, those are almost identical to what they looked like in our material science courses.\n \nreply"
    ],
    "link": "https://mitxela.com/projects/fluid-pendant",
    "first_paragraph": "\n\r\n\r\nWatch the following video to experience the narrated design and construction:\n\r\n\r\nI produced the first pendant in March 2024, and then several more over the next few months. I now have a small handful of pendants, and if you'd really, really like to own one, then while stocks last, a few of them are for sale.\nIntro\r\nThe motivation and initial design is described extensively in the youtube video, so I won't repeat myself too much here, but in short, following the volumetric display animations, I've been looking to implement a realtime fluid simulation that ultimately could create a 3D virtual snowglobe. Progress has been made on that front, but along the way, we came up with the Simsim concept, upon which this pendant is based.\r\n\r\nWhile working on it, I came up with a bunch of cool new developments that led to several other projects, which I'll post in due time, but this is the project that spawned them. Not just the fluid simulation stuff, but also the unexpected benefits of a dia"
  },
  {
    "title": "How we used GPT-4o for image detection with 350 similar illustrations (olup-blog.pages.dev)",
    "points": 71,
    "submitter": "olup",
    "submit_time": "2025-01-10T21:02:32 1736542952",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=42660184",
    "comments": [
      "It's tough to judge without seeing examples of the targets and the user photos, but I'm curious if this could be done with just old-school SIFT. If it really is exactly the same image in the in the corpus and on the wall, does a neural embedding model really buy you a lot? A small number of high confidence tie points  seems like it'd be all you need, but it probably depends a lot on just how challenging the user photos are.\n \nreply",
      "I find a lot of applied AI use-cases to be \"same as this other method, but more expensive\".\n \nreply",
      "Better to spend $100 in op-ex money than spend $1 in cap-ex money reading a journal paper, especially if it lets you tell investors \"AI.\" :p\n \nreply",
      "Calling an llm and a cv model by the same name to give the appearance of agi is a pet peeve of mine.And someone that's not openai buying into this naming convention is just unpaid propaganda\n \nreply",
      "First time for me posting this kind of story - I thought it would make an interesting case on solving a hard computer vision problem with a crafty product engineer team.\n \nreply",
      "Just a small feedback\u2026 I have switched to the reader mode because the font used is very challenging to read for me.\n \nreply",
      "Also, having a blog post about image detection, and not showing a single picture in the whole post was quite frustrating.\n \nreply",
      "Especially given the detailed description surely the author could just generate a similar image\n \nreply",
      "Just thinking that. Spend a few minutes trying to have chatgpt generate some images with Dall-E 3. Flux would probably be better to get all the specific details but ya\n \nreply",
      "Interesting approach to a a very interesting challenge, given how close the images supposedly are.With the limited training data they have I'm surprised they don't mention any attempts at synthetic training data. Make (or buy) a couple museum scenes in blender, hang one of the images there, take images from a lot of angles, repeat for more scenes, lighting conditions and all 350 images. Should be easy to script. Then train YOLO on those images, or if that still fails use their embedding approach with those training images.\n \nreply"
    ],
    "link": "https://olup-blog.pages.dev/stories/image-detection-cars",
    "first_paragraph": ""
  },
  {
    "title": "A laptop stand made from a single sheet of recycled paper (core77.com)",
    "points": 220,
    "submitter": "surprisetalk",
    "submit_time": "2025-01-11T01:07:31 1736557651",
    "num_comments": 183,
    "comments_url": "https://news.ycombinator.com/item?id=42662329",
    "comments": [
      "Looks like a Miura fold: https://en.wikipedia.org/wiki/Miura_fold.\nWhen going to theme parks and the like, I love folding the physical maps like this. It's nice that the maps stay rigid when fully open, and the single-motion for opening and closing is glorious.\n \nreply",
      "I hope my brain stows your comment safely away until the next opportunity.\n \nreply",
      "I'm reminded of similarly useless \"sustainable cardboard furniture\" that came out about a decade ago.On the positive side, kudos to whomever in marketing/pr at the design firm got this useless product so much press.This is just the sort of \"win\" that a design consulting shop loves to have for actual briefs that lead to real moving-the-needle revenue.  One example would be SmartDesign's modular slip-on \"S-Grips\" that led to the iconic vegetable peeler that then bled into the \"design language\" of every product at OXO.\n \nreply",
      "Didn't know about the SmartDesign/OXO vegetable peeler, very interesting rabbit hole to go down.https://www.fastcompany.com/90239156/the-untold-story-of-the...\n \nreply",
      "Indeed, it's an interesting rabbit hole!I liked the part where they were looking for someone to manufacture the handles, and the Japanese machinist said \"If he could make it, I can make it!\".Indeed, having gone down the rabbit hole of machining (both to see if it would be a viable hobby and if it could even be a career), this was the attitude of the shop teacher:  \"if you can think it, you can probably make it\".  I am far more surprised that neither the American nor the Taiwanese manufacturers said this.  Then again, perhaps it was because management didn't talk to the guys who made things!(Now that I think of it, had they done that, perhaps they would have gotten the answer \"We can do it, but the fins will wear down the tool too fast, at least until we can figure out a better material for the tools!\" instead of \"Nope, we can't do that!\")\n \nreply",
      "This is a bit of a random place to mention it, but while I very much like OXO goods, IKEA makes the best (in my opinion) potato peeler for $5 - cheaper than anything OXO makes: https://www.ikea.com/us/en/p/ikea-365-vaerdefull-potato-peel...\n \nreply",
      "Brilliant write up. I remember using the old ones, and only last year found the oxo model. truly amazing. Many important lessons in product design in that article; with the most important in the last sentence - it has to work!\n \nreply",
      "that's something i never understood: why do they sell peelers with a movable part? like we are meant to peel in curves and expect the knife to follow the curve beautifully? the fixed ones are easier to use and easier to clean!\n \nreply",
      "The hinge allows you to peel in both directions (i.e. forwards and backwards across your potato/carrot/etc. without lifting the peeler.) It also means it can track a rough surface more easily. I haven't had any issues with the hinge, and I use a dishwasher for cleaning - what issues have you run into?\n \nreply",
      "i'm almost never using a movable one but:- on the practicity: i can do exactly what i want with a fixed one, without risk for the blade to slip- small dust and bits tend to gather at the junctions and sit there\n \nreply"
    ],
    "link": "https://www.core77.com/posts/134948/A-Laptop-Stand-Made-from-a-Single-Sheet-of-Recycled-Paper",
    "first_paragraph": "This g.stand, by Seoul-based industrial design firm grape lab, is made from a single sheet of recycled paper. It weighs just 45g (1.5oz), but is sturdy enough to hold \"even the heaviest laptops,\" the firm writes.  It collapses down to 3cm (1.2\") to slide into its carry case. The case, by the way, is notched and can serve as a phone stand.  These run about $22. Love the design and concept, although it looks like it won't be very comfortable on the palms\u00a0These products and many others on sale on their Etsy store are certainly examples of good design, originality and practicality while remaining quite affordable (very reasonable prices and shipping cost).Love this design and the notch in the case.\u00a0As an origami enthusiast, I'm really curious what the manufacturing process looks like. I'm guessing a machine takes a sheet and creates each long fold one-by-one, like an accordion. Then you would need a comb-like jig (same number of teeth as valley folds) to make the final folds in a partially"
  },
  {
    "title": "Lines of code that will beat A/B testing every time (2012) (stevehanov.ca)",
    "points": 161,
    "submitter": "Kerrick",
    "submit_time": "2025-01-09T23:34:17 1736465657",
    "num_comments": 85,
    "comments_url": "https://news.ycombinator.com/item?id=42650954",
    "comments": [
      "Pure, disinterested A/B testing where the goal is just to find the good way to do it, and there's enough leverage and traffic that funding that A/B testing is worthwhile is rare.More frequently, A/B testing is a political technology that allows teams to move forward with changes to core, vital services of a site or app. By putting a new change behind an A/B test, the team technically derisks the change, by allowing it to be undone rapidly, and politically derisks the change, by tying it's deployment to rigorous testing that proves it at least does no harm to the existing process before applying it to all users. The change was judged to be valuable when development effort went into it, whether for technical, branding or other reasons.In short, not many people want to funnel users through N code paths with slightly different behaviors, because not many people have a ton of users, a ton of engineering capacity, and a ton of potential upside from marginal improvements. Two path tests solve the more common problem of wanting to make major changes to critical workflows without killing the platform.\n \nreply",
      "> politically derisks the change, by tying it's deployment to rigorous testing that proves it at least does no harm to the existing process before applying it to all users.I just want to drop here the anecdata that I've worked for a total of about 10 years in startups that proudly call themselves \"data-driven\" and which worshipped \"A/B testing.\" One of them hired a data science team which actually did some decently rigorous analysis on our tests and advised things like when we had achieved statistical significance, how many impressions we needed to have, etc. The other did not and just had someone looking at very simple comparisons in Optimizely.In both cases, the influential management people who ultimately owned the decisions would simply rig every \"test\" to fit the story they already believed, by doing things like running the test until the results looked \"positive\" but not until it was statistically significant. Or, by measuring several metrics and deciding later on to make the decision based on whichever one was positive [at the time]. Or, by skipping testing entirely and saying we'd just \"used a pre/post comparison\" to prove it out. Or even by just dismissing a 'failure,' saying we would do it anyway because it's foundational to X, Y, and Z which really will improve (insert metric) The funny part is that none of these people thought they were playing dirty, they believed that they were making their decisions scientifically!Basically, I suspect a lot of small and medium companies say they do \"A/B testing\" and are \"data-driven\" when really they're just using slightly fancy feature flags and relying on some director's gut feelings.\n \nreply",
      "At a small enough scale, gut feelings can be totally reasonable; taste is important and I'd rather follow an opinionated leader with good taste than someone who sits on their hands waiting for \"the data\". Anyway, your investors want you to move quickly because they're A/B testing you for surviveability against everything else in their portfolio.The worst is surely when management make the investments in rigor but then still ignores the guidance and goes with their gut feelings that were available all along.\n \nreply",
      "> In short, not many people want to funnel users through N code paths with slightly different behaviors, because not many people have a ton of users, a ton of engineering capacity, and a ton of potential upside from marginal improvements.I\u2019ve been in companies that have tried dozens if not hundreds of A/B tests with zero statistically significant results. I figure by the law of probabilities they would have gotten at least a single significant experiment but most products have such small user bases and make such large changes at a time that it\u2019s completely pointless.All my complaints fell on deaf ears until the PM in charge would get on someone\u2019s bad side and then that metric would be used to push them out. I think they\u2019re largely a political tool like all those management consultants that only come in to justify an executive\u2019s predetermined goals.\n \nreply",
      "> I\u2019ve been in companies that have tried dozens if not hundreds of A/B tests with zero statistically significant results.What I've seen in practice is that some places trust their designers' decisions and only deploy A/B tests when competent people disagree, or there's no clear, sound reason to choose one design over another. Surprise surprise, those alternatives almost always test very close to each other!Other places remove virtually all friction from A/B testing and then use it religiously for every pixel in their product, and they get results, but often it's things like \"we discovered that pink doesn't work as well as red for a warning button,\" stuff they never would have tried if they didn't have to feed the A/B machine.From all the evidence I've seen in places I've worked, the motivating stories of \"we increased revenue 10% by a random change nobody thought would help\" may only exist in blog posts.\n \nreply",
      "> I\u2019ve been in companies that have tried dozens if not hundreds of A/B tests with zero statistically significant results.Well, at least it looks like they avoided p-hacking to show more significance than they had!  That's ahead of much of science, alas.\n \nreply",
      "> I\u2019ve been in companies that have tried dozens if not hundreds of A/B tests with zero statistically significant results.Yea, I've been here too. And in every analytics meeting everyone went \"well, we know it's not statistically significant but we'll call it the winner anyway\". Every. Single. Time.Such a waste of resources.\n \nreply",
      "Tracks that I\u2019ve primarily seen A/B tests used as a mechanism for gradual rollout rather than pure data-driven experimentation. Basically expose functionality to internal users by default then slowly expand it outwards to early adopters and then increment it to 100% for GA.It\u2019s helpful in continuous delivery setups since you can test and deploy the functionality and move the bottleneck for releasing beyond that.\n \nreply",
      "I wouldn\u2019t call that A/B testing but rather a gradual roll-out.\n \nreply",
      "I think parent is confusing A/B testing with feature flags, which can be used for A/B tests but also for roll-outs.\n \nreply"
    ],
    "link": "https://stevehanov.ca/blog/index.php?id=132",
    "first_paragraph": "\r\nA/B testing is used far too often, for something that performs so badly. It is defective by design: Segment users into two groups. Show the A group the old, tried and true stuff. Show the B group the new whiz-bang design with the bigger buttons and slightly different copy. After a while, take a look at the stats and figure out which group presses the button more often. Sounds good, right? The problem is staring you in the face. It is the same dilemma faced by researchers administering drug studies. During drug trials, you can only give half the patients the life saving treatment. The others get sugar water. If the treatment works, group B lost out. This sacrifice is made to get good data. But it doesn't have to be this way. \r\n\n\r\nIn recent years, hundreds of the brightest minds of modern civilization have been hard at work not curing cancer. Instead, they have been refining techniques for getting you and me to click on banner ads. It has been working. Both Google and Microsoft are foc"
  },
  {
    "title": "Sonos CEO steps down after app update debacle (reuters.com)",
    "points": 223,
    "submitter": "saaaaaam",
    "submit_time": "2025-01-13T19:42:48 1736797368",
    "num_comments": 236,
    "comments_url": "https://news.ycombinator.com/item?id=42687932",
    "comments": [
      "Please stop putting salespeople in charge of highly technical product companies like Sonos. I'm so glad that Tom Conrad is an engineer by training. I hope he can turn this mess around.The key technical change that broke Sonos was abandoning their reliable UPnP (Universal Plug and Play) system for device discovery in favor of mDNS, while also shifting from direct device communication to a cloud-based API approach. This new architecture made all network traffic encrypted and routed through Sonos cloud servers (even for local operations), adding significant overhead and latency, especially for older Sonos devices with limited processing power. They also switched from native platform-specific UX frameworks to a JavaScript-based interface while moving music service interactions through their cloud instead of direct SMAPI calls, resulting in slower performance and reduced functionality.For a more extended discussion, see this excellent LinkedIn post from Andy Pennell, a principal engineer at Microsoft with a deep technical understanding of Sonos systems. He created one of the most successful third-party Sonos apps for Windows Phone and worked directly with Sonos on their official Windows Phone 8 app.https://www.linkedin.com/pulse/what-happened-sonos-app-techn...\n \nreply",
      "I don't think having a sales person in charge was the problem.The problem is the fundamental disconnect between what's good for users and what's good for the company.  The company wants you to have to pay them money every month and control how you interact with the product, so that they can be a services company with recurring revenue.The consumer wants a device that they buy once and it just works.\n \nreply",
      "> The problem is the fundamental disconnect between what's good for users and what's good for the companyThe fundamental problem with 95% of companies, and 99% of publicly listed companies.\n \nreply",
      "I haven\u2019t owned Sonos gear in a long time, but certainly back in the day they had just amazing products. That SUB where it was so perfectly balanced? They did a demo (that you could easily reproduce at home) where you could have it driving \u201ccall the cops\u201d noise disturbance bass without upsetting a nickel set lengthwise on top, just a great unit and not the only one. Awesome stuff.But while superior products at a price point can capture a bunch of share, after that they grow at the rate of the market. Those markets have \u201cmatured\u201d.For whatever reason we don\u2019t as a society let \u201ctech\u201d markets mature. We demand growth long after everyone is satisfied.This is where ideas like \u201cgrowth\u201d and ideas like \u201cuseful\u201d diverge: raise your hand if you like Facebook or Google in 2025 more than 10-15 years ago.Sonos (and I\u2019m aware of the structure) \u201cgrew\u201d right out of a sustainably profitable business with happy customers.\n \nreply",
      "Engineers are in a better position to understand what the customer wants and needs. Salespeople are there to sell their product, and fundamentally don't need to understand what the customer wants, or needs.Give a good salesperson a handwavy outline of something to sell, and they will sell it. They don't need technical accuracy for success. Yes, this is bad for customers, and makes life harder, and results in ridiculous, counterproductive, infuriating situations for IT staff, engineers, and other people who have to deal with the technical realities of every day business.A salesperson can just mash psychological buttons in manager's brains, and they'll make the sale. The consumer, in enterprise level markets, is hardly ever the team or individual in charge of operating the technology. The consumer is the manager, or managerial team, looking to check boxes and shuffle numbers and spend $X on Y department, for which they get rewarded for a wide array of arbitrary outcomes, almost none of which have anything to do with the practical impact of the product in question on the people who end up most affected by the purchase.If an engineer with a solid understanding of the product being sold is in charge, he's in the best place to rein in the sales and marketing teams, and to direct development based on customer reality. This probably results in lower profits, overall, but a better product, and a better reputation in the long run.\n \nreply",
      "> Engineers are in a better position to understand what the customer wants and needs. Salespeople are there to sell their product, and fundamentally don't need to understand what the customer wants, or needs.Why do you say that? My gut reaction is that the opposite is true. Salespeople must understand their customers' wants and needs in order to effectively sell! Engineers are generally a step or two removed from the customers. This may be an unpopular take on HN but I'd wager the people who spend time directly with the customers have a better chance at understanding what they want. Taken a step further, customer support probably has the best understanding of their markets' needs!\n \nreply",
      "I'd go as far as to say that the role doesn't matter, it's the attitude of the individual.I've worked with a few developers AND sales people that didn't give a hoot about what their customers thought. In the case of Sales, they only cared about making their targets. In the case of the devs that didn't care, they spent 99% of their time doing silly (in my opinion) arguments about frameworks, design patterns, and whitespace and formatting rules in CI. Not that things like design patterns are inherently silly. But if they don't result in a better customer experience (via more stable and maintainable software, for example), then it's a waste of time.I'm a developer by trade but have ALWAYS had an attitude of \"it only matters if it's useful to the user\" \u2013 and have butted heads sometimes with developers on which features to prioritize.\n \nreply",
      "> Taken a step further, customer support probably has the best understanding of their markets' needs!People working in customer support, from my experience, sort of see the anti-survivorship bias working in action.  Not many people call up to say how well something works.  I would agree with you though on good Salespeople (ones that do try to understand what customers need and all that, not necessarily ones that sell the most) knowing what the customer wants/needs.\n \nreply",
      "> People working in customer support, from my experience, sort of see the anti-survivorship bias working in action.I used to see this all the time at an old job where my team worked on open source client libraries for using the main product that our company sold. A decent number people seemed to think that an increasing number of tickets being filed against one of the libraries was a sign that users weren't happy with it, but it always seemed obvious to me that you couldn't easily conclude that; you might have 99 happy users with no issues for every 1 unhappy user who filed a ticket, or you might have literally only unhappy users and nobody without issues. On the other hand, getting literally zero tickets might mean that you have plenty of happy users, or it might mean you have basically no users at all.I'd often talk to younger engineers who were interning on the team or recently joined full-time about how this dynamic informed how I approached my job; usually, we'd only hear from users who had issues, so the \"goal\" in some ways to was to make the software so good that you'd never hear from them. If you did hear from a user, that was a valuable opportunity where you might learn something you could do in the future to make things better the first time.\n \nreply",
      "Think about individual incentives rather than of the role, though.I agree with your assessment, except that an engineer has the incentive to make the product work as specified.A salesperson is given their goals by management, and they are compensated on achieving that goal - not necessarily what the customer wants.\n \nreply"
    ],
    "link": "https://www.reuters.com/business/retail-consumer/sonos-ceo-patrick-spence-steps-down-after-app-update-debacle-2025-01-13/",
    "first_paragraph": ""
  },
  {
    "title": "FreeBSD Suspend/Resume (vermaden.wordpress.com)",
    "points": 75,
    "submitter": "vermaden",
    "submit_time": "2025-01-11T01:47:55 1736560075",
    "num_comments": 30,
    "comments_url": "https://news.ycombinator.com/item?id=42662552",
    "comments": [
      "RIP S3 sleep... Took years to get it to work reliably under Linux, then we had a good decade+ run of it \"just working\" like this, now back to trying to weed out all the wacky platform quirks and weird hardware/firmware behavior that make the S0ix states be just barely unusable.Maybe in another five years...\n \nreply",
      "Can you explain a bit more? What happened?Linux used to be able to do S3 sleep well, and now it can't because... new platforms removed S3 for S0ix? Or S3 became even more complicated with mroe platform quirks and weird hardware?\n \nreply",
      "The problem is platforms moved away from S3 sleep. I've heard people claim it was mostly so managed Windows laptops could force updates with the lid shut and the laptop suspended.Now I have to worry about my laptop randomly overheating itself in my backpack and even catching fire.\n \nreply",
      "My Macbook Pro lasts about two days on battery while doing work (in clamshell mode, with the screen off). My Thinkpad drains its battery in less time than that in sleep. The removal of S3 is a travesty.\n \nreply",
      "FreeBSD and Suspend/Resume\u2026 About 10 years ago, I switched from FreeBSD to Linux because I couldn't get suspend/resume to work reliably (i.e. suspend/resume cycle succeeds and it doesn't drain my laptop battery in between) on FreeBSD on my Thinkpad.\nAnd this was only Suspend to RAM. Suspend to Disk is really nice to have, especially if coupled with hybrid standby, as on macOS and Windows by default.I really appreciate that people still maintain FreeBSD on the desktop, though.\n \nreply",
      "Odd that you would say \"only Suspend to RAM\", because that is far more difficult to reliably implement in terms of hardware compatibility than Suspend to Disk.\n \nreply",
      "Windows used to work about this well back in the XP days, possibly Windows 7 as well. Plenty of times I hit the \"sleep\" button that Logitech put right next to the esc key (....) and resumed the system to find everything working as expected.Not sure if the embedded video is suspend to RAM or disk. Also not sure why there wasn't a PW prompt upon resume, but I'm not a BSD person, just someone who is paranoid about PW prompts.\n \nreply",
      "> Not sure if the embedded video is suspend to RAM or disk.Its Suspend to Disk (S3).> Also not sure why there wasn't a PW prompt upon resume, but I'm not a BSD person, just someone who is paranoid about PW prompts.The purpose of this videos were to show only the suspend/resume process of FreeBSD system.In my daily life I have two shortcuts related to this:- [SUPER] + [L] - locks the system and leaves it running - and it requires to enter password- [SUPER] + [CTRL] + [ALT] + [L] - locks the system AND PUTS IT INTO S3 SLEEP - and it requires to enter password if you wake it upHope that helps.Regards,vermaden\n \nreply",
      "Its Suspend to Disk (S3)S3 is suspend to RAM.  Suspend to disk is S4.\n \nreply",
      "Because there is usually a graceful period before forcing to authenticate.Also, if it's Xorg lockscreen, then it's probably not very secure to begin with.\n \nreply"
    ],
    "link": "https://vermaden.wordpress.com/2025/01/11/freebsd-suspend-resume/",
    "first_paragraph": "I have been using FreeBSD on the desktops/laptops since about 20 years now and I have described all that I configured in the FreeBSD Desktop series.About 1 year ago I shared a video on YouTube and Vimeo showing how a busy FreeBSD 12.2 handles the suspend/resume cycle on a ThinkPad W520 laptop on a FreeBSD system.Here it is:Fast year forward I tried the same on FreeBSD 14.1 system \u2013 and it still works properly the same way.Why not FreeBSD 14.2 as its already available? Because pkg(8) packages are built against \u2018oldest\u2019 FreeBSD version in the current tree \u2013 which means FreeBSD 14.1 \u2013 and that often breaks kernel related packages such as really important drm-kmod or virtualbox-ose-kmod packages.I will upgrade from 14.1 to 14.2 shortly after 14.1 runs out of support \u2013 which would guarantee having working pkg(8) packages on FreeBSD 14.2.As for the recommended settings \u2013 check Suspend and Resume part of the earlier The Power to Serve \u2013 FreeBSD Power\u00a0Management article.Now for the latest susp"
  },
  {
    "title": "voyage-code-3 (voyageai.com)",
    "points": 5,
    "submitter": "fzliu",
    "submit_time": "2025-01-13T23:09:14 1736809754",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://blog.voyageai.com/2024/12/04/voyage-code-3/",
    "first_paragraph": "By\u00b7TL;DR \u2013 Introducing voyage-code-3, our next-generation embedding model optimized for code retrieval. It outperforms OpenAI-v3-large and CodeSage-large by an average of 13.80% and 16.81% on a suite of 32 code retrieval datasets, respectively. By supporting smaller dimensions with Matryoshka learning and quantized formats like int8 and binary, voyage-code-3 can also dramatically reduce storage and search costs with minimal impact on retrieval quality.Since its launch in Jan, voyage-code-2 has been the most heavily used model with exponentially increasing adoption by code assistants and agents startups for their code retrieval. Today, we\u2019re thrilled to announce voyage-code-3, which:Storage and search costs in vector-based search can become significant for large corpora, such as in code retrieval with massive repositories. The costs scale linearly in the embedding dimensionality and precision (i.e., the number of bits used to encode each number). voyage-code-3 supports much lower dimens"
  },
  {
    "title": "Spain proposes 100% tax on homes bought by non-EU residents (theguardian.com)",
    "points": 115,
    "submitter": "vinni2",
    "submit_time": "2025-01-13T23:06:43 1736809603",
    "num_comments": 142,
    "comments_url": "https://news.ycombinator.com/item?id=42690781",
    "comments": [
      "Blaming foreigners for housing prices is misdirected. The real culprit is slow bureaucracy & zoning laws making it impossibly slow to get a permit to build anything in both Spain and Portugal. Both of these countries for example have so many abandoned houses needing to be renovated, and so many foreigners coming in with money to do it - but they can never do it because you can't get a permit in literally forever... I don't know about Spain, but another problem in PT is the building companies too, are unreliable, and typically don't deliver houses in less than 3-5 years if you decide to build new. Increase the supply, and the prices will go down.\n \nreply",
      "No, that argument assumes you can only blame 1 thing at a time.Even if the bureaucracy is the worst offender, every foreigner buying a house still results in 1 less house for Spaniards.Sure, fix bureaucracy, but don't pretend foreign purchases have zero effect.\n \nreply",
      "I'm not saying it has zero effect. I'm saying it's a misdirected effort that would cause them more harm than good. Spain isn't exactly in the fittest economic position. It needs to attract foreigners to cultivate its growth - hence their Beckham law and other benefits for foreigners. You can deter people from coming and see the country stagnate/go down, or you can actually match the demand and foreign dynamism, and use that as an opportunity for the whole place to grow and modernize.\n \nreply",
      "How does allowing *non-residents* to buy real estate help in attracting foreigners and cultivate growth?\n \nreply",
      "If the decent property in an area becomes more valuable, there will be more market pressure to fix the dilapidated ones.",
      "If you\u2019re in oversupply, as the parent comment suggested, then is the effect of additional buyers meaningful?\n \nreply",
      "So would you say it's fair game to blame \"migrants\" for crimes? After all, you can't steal something if you're not in a country, so letting someone into a country strictly increases the crime rate. Even if migrants commit crimes at a lower rate than the local population, unless it's exactly zero, it'll still increase the crime rate.\n \nreply",
      "Do crimes have a liquid market with supply and demand mechanics?If so, then sure, you can blame every criminal for x% of every crime, I guess.\n \nreply",
      "The comment was in reply to:>Even if the bureaucracy is the worst offender, every foreigner buying a house still results in 1 less house for Spaniards.It's pretty clear that supply and demand isn't a consideration here.",
      "Anything to stop a non-EU resident owning an EU company that owns a Spanish home?\n \nreply"
    ],
    "link": "https://www.theguardian.com/world/2025/jan/13/spain-proposes-100-tax-on-homes-bought-by-non-eu-residents",
    "first_paragraph": "Pedro S\u00e1nchez announces measure in response to anger over rising housing costsSpain has announced plans to impose a tax of up to 100% on real estate bought by non-residents from countries outside the EU, such as the UK, in an aim to tackle the country\u2019s housing crisis.The measure was one of a dozen unveiled on Monday by the country\u2019s prime minister, Pedro S\u00e1nchez, as the government seeks to quell mounting anger over housing costs that have soared far beyond the reach of many in Spain.S\u00e1nchez sought to underline the global nature of the challenge, citing housing prices that had swelled 48% in the past decade across Europe, far outpacing household incomes.\u201cThe west faces a decisive challenge: to not become a society divided into two classes, the rich landlords and poor tenants,\u201d he told an economic forum in Madrid.The proposed measures include expanding the supply of social housing, offering incentives to those who renovate and rent out empty properties at affordable prices and cracking "
  },
  {
    "title": "AI Engineer Reading List (latent.space)",
    "points": 235,
    "submitter": "ingve",
    "submit_time": "2025-01-13T18:11:17 1736791877",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=42686457",
    "comments": [
      "I believe that most of the papers presented here focus on acquiring knowledge rather than deep understanding. If you\u2019re completely unfamiliar with the subject, I recommend starting with textbooks rather than papers. The latest Bishop\u2019s \"Deep Learning: Foundations and Concepts (2024)\" [1] is an excellent resource that covers the \"basics\" of deep learning and is quite updated. Another good option is Chip Huyen\u2019s \"AI Engineering (2024)\" [2]. Another excellent choice will be \"Dive into Deep Learning\" [3], Understanding Deep Learning [4], or just read anything from fast.ai and watch Karpathy's lectures on YouTube.[1]: https://www.bishopbook.com\n[2]: https://www.oreilly.com/library/view/ai-engineering/97810981...\n[3]: https://d2l.ai\n[4]: https://udlbook.github.io/udlbook/\n \nreply",
      "Is there a textbook like [1] or [4], which also incorporates PyTorch into learning?\n \nreply",
      "Dive into Deep Learning is implemented using various libraries such as PyTorch, NumPy/MXNet, JAX, and TensorFlow.Here\u2019s an example: https://d2l.ai/chapter_natural-language-processing-pretraini...\n \nreply",
      "This resource is not as profound compared to the other 2, unfortunately.\n \nreply",
      "I don't know what an \"AI Engineer\" is, but, is reading research papers actually necessary if the half life of the relevancy of many of these papers is only a few months until the next breakthrough happens?I have a feeling, unless you're dabbling at the cutting edge of AI, there's no point in reading research papers. Just get a feel for how these LLMs respond then build a pretty and user friendly app on top of them. Knowing the difference between \"multi head attention\" and \"single head attention\" isn't very useful if you're just using OpenAI or Groq's API.Am I missing something here? I'd love to know where I'm wrong\n \nreply",
      "> I don't know what an \"AI Engineer\" is, but, is reading research papers actually necessaryLet's put it this way: if even half the people who call themselves \"AI Engineers\" would read the research in the field, we'd have a lot less hype and a lot more success in finding the actual useful applications of this technology. As is, most \"AI Engineers\" assume the same thing you do and consider \"AI Engineering\" to be \"I know how to plug this black box into this other black box and return the result as JSON! Pay me!\". Meanwhile most AI startups are doomed from the start because what they set out to do is known to be a bad fit.\n \nreply",
      "> I know how to plug this black box into this other black box and return the result as JSON!To be fair, most of software engineering is this.\n \nreply",
      "Okay, now take a slightly imbalanced stance: What is most software engineering?\n \nreply",
      "I kind of see this the opposite way...Or rather, I guess I feel like it's a sign of the immaturity of the space that it is still kind of unclear (at least it is to me) how to build useful things without reading all the research papers.To me, it seems like there is an uncanny valley between \"people who are up on all the papers in this reading list\" and \"people who are just getting a feel for how these LLMs respond and slapping a UI on top\".Maybe it kind of reminds me of the CGI period of the web. The \"research papers\" side is maybe akin to all the people working on networking protocols and servers necessary to run the web, and the \"slap a UI over the llm APIs\" is akin to those of us slinging html and perl scripts.You could make ok stuff that way, without needing to understand anything about TCP. But it still took a little while for a more professionalized layer to mature between those two extremes.I feel like maybe generative AI is in the early days of that middle layer developing?\n \nreply",
      "Even before the amazing achievement of LLM, there were millions of \"ML engineers\" on LinkedIn, per some stats about LinkedIn jobs. I'll bet a single digit percent of them could even derive the math of linear regression or every implemented a single ML algorithm from scratch. Not that it is wrong, mind you, but it means it's unlikely for half the \"AI engineers\" to read research papers.\n \nreply"
    ],
    "link": "https://www.latent.space/p/2025-papers",
    "first_paragraph": ""
  },
  {
    "title": "Why is my CPU usage always 100%? (downtowndougbrown.com)",
    "points": 417,
    "submitter": "pncnmnp",
    "submit_time": "2025-01-09T21:15:33 1736457333",
    "num_comments": 126,
    "comments_url": "https://news.ycombinator.com/item?id=42649862",
    "comments": [
      "An old manager of mine once spent the day trying to kill a process that was running at 99% on Windows box.When I finally got round to see what he was doing I was disappointed to find he was attempting to kill the 'system idle' process.\n \nreply",
      "Years ago I worked for a company that provided managed hosting services.  That included some level of alarm watching for customers.We used to rotate the \"person of contact\" (POC) each shift, and they were responsible for reaching out to customers, and doing initial ticket triage.One customer kept having a CPU usage alarm go off on their Windows instances not long after midnight.  The overnight POC reached out to the customer to let them know that they had investigated and noticed that \"system idle processes\" were taking up 99% of CPU time and the customer should probably investigate, and then closed the ticket.I saw the ticket within a minute or two of it reopening as the customer responded with a barely diplomatic message to the tune of \"WTF\".  I picked up that ticket, and within 2 minutes had figured out the high CPU alarm was being caused by the backup service we provided, apologised to the customer and had that ticket closed... but not before someone not in the team saw the ticket and started sharing it around.I would love to say that particular support staff never lived that incident down, but sadly that particular incident was par for the course with them, and the team spent inordinate amount of time doing damage control with customers.\n \nreply",
      "In the 90s I worked for a retail chain where the CIO proposed to spend millions to upgrade the point-of-sale hardware. The old hardware was only a year old, but the CPU was pegged at 100% on every device and scanning barcodes was very sluggish.He justified the capex by saying if cashiers could scan products faster, customers would spend less time in line and sales would go up.A little digging showed that the CIO wrote the point-of-sale software himself in an ancient version of Visual Basic.I didn't know VB, but it didn't take long to find the loops that do nothing except count to large numbers to soak up CPU cycles since VB didn't have a sleep() function.\n \nreply",
      "That's hilarious. I had a similar situation, also back in the 90s, when a developer shipped some code that kept pegging the CPU on a production server. He insisted it was the server, and the company should spend $$$ on a new one to fix the problem. We went back-and-forth for a while: his code was crap versus the server hardware was inadequate, and I was losing the battle, because I was just a lowly sysadmin, while he was a great software engineer. Also, it was Java code, and back then, Java was kinda new, and everyone thought it could do no wrong. I wasn't a developer at all back then, but I decided to take a quick look at his code. It was basically this:1. take input from a web form2. do an expensive database lookup3. do an expensive network request, wait for response4. do another expensive network request, wait for response5. and, of course, another expensive network request, wait for response6. fuck it, another expensive network request, wait for response7. a couple more database lookups for customer data8. store the data in a table9. store the same data in another table. and, of course, another one.10. now, check to see if the form was submitted with valid data. if not, repeat all steps above to back-out the data from where it was written.11. finally, check to see if the customer is a valid/paying customer. if not, once again, repeat all the steps above to back-out the data.I looked at the logs, and something like 90% of the requests were invalid data from the web form or invalid/non-paying customers (this service was provided only to paying customers).I was so upset from this dude convincing management that my server was the problem that I sent an email to pretty much everyone that said, basically, \"This code sucks. Here's the problem: check for invalid data/customers first.\", and I included a snippet from the code. The dude replied-to-all immediately, claiming I didn't know anything about Java code, and I should stay in my lane. Well, throughout the day, other emails started to trickle in, saying, \"Yeah, the code is the problem here. Please fit it ASAP.\" The dude was so upset that he just left, he went completely AWOL, he didn't show up to work for a week or so. We were all worried, like he jumped off a bridge or something. It turned into an HR incident. When he finally returned, he complained to HR that I stabbed him in the back, that he couldn't work with me because I was so rude. I didn't really care; I was a kid. Oh yeah, his nickname became AWOL Wang. LOL\n \nreply",
      "Hehe, being a Java dev since the late 90\u2019s meant seeing a lot of bad code. My favorite was when I was working for a large life insurance company.The company\u2019s customer-facing website was servlet based. The main servlet was performing horribly, time outs, spinners, errors etc. Our team looked at the code and found that the original team implementing the logic had a problem they couldn\u2019t figure out how to solve, so they decided to apply the big hammer: they synchronized the doService() method\u2026 oh dear\u2026\n \nreply",
      "For those not familiar with servlets, this means serializing every single request to the server that hits that servlet. And a single servlet can serve many different pages. In fact, in the early days, servlet filters didn't exist, so you would often implement cross-cutting functionality like authentication using a servlet.TBF, I don't think a lot of developers at the time (90's) were used to the idea of having to write MT-safe callback code. Nowadays thousands of object allocations per second is nothing to sweat over, so a framework might make a different decision to instantiate callbacks per request by default.\n \nreply",
      "That's what managers do.Silly idle process.If you've got time for leanin', you've got time for cleanin'\n \nreply",
      "I abandonned Windows 8 for linux because of an bug (?) where my HDD was showing it was 99% busy all the time. I had removed every startup program that could be and analysed thouroughly for any viruses, to no avail. Had no debugging skills at the time and wasn't sure the hardware could stand windows 10. That's how linux got me.\n \nreply",
      "Recent Linux distributions are quickly catching up to Windows and macOS. Do a fresh install of your favorite distribution and then use 'ps' to look at what's running. Dozens of processes doing who knows what? They're probably not pegging your CPU at 100%, which is good, but it seems that gone are the days when you could turn on your computer and it was truly idle until you commanded it to actually do something. That's a special use case now, I suppose.\n \nreply",
      "IME on Linux the only things that use random CPU while idle are web browsers. Otherwise, there's dbus and NetworkManager and bluez and oomd and stuff, but most processes have a fraction of a second used CPU over months. If they're not using CPU, they'll presumably swap out if needed, so they're using ~nothing.\n \nreply"
    ],
    "link": "https://www.downtowndougbrown.com/2024/04/why-is-my-cpu-usage-always-100-upgrading-my-chumby-8-kernel-part-9/",
    "first_paragraph": "If you\u2019re new to this series, I\u2019ve been documenting the process I went through upgrading my old PXA166-based Chumby 8\u2019s 2.6.28 Linux kernel to a modern 6.x version. Here are links to parts 1, 2, 3, 4, 5, 6, 7, and 8. At this point in the project, all of the main hardware peripherals were working great. I noticed something odd when running top though. The CPU usage was always really high, and it wasn\u2019t obvious why.That\u2019s really weird! Why would top be using all of my CPU? It says 100% usr in the second line. Sometimes the usage showed up as 50% usr and 50% sys. Other times it would show up as 100% sys. And very rarely, it would show 100% idle. In that rare case, top would actually show up with 0% usage as I would expect. The 2.6.28 kernel did not have this problem, so it was something different about my newer kernel.I started theorizing about what might be wrong here. My ideas were nothing more than wild guesses: maybe one of the drivers I got working earlier was totally monopolizing th"
  },
  {
    "title": "Detrimental Decibels: A Study of Noise Levels in Vancouver's SkyTrain System (2022) (ubc.ca)",
    "points": 27,
    "submitter": "luu",
    "submit_time": "2025-01-13T09:49:46 1736761786",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=42681762",
    "comments": [
      "The rail grinding noise of those Mark 1 Skytrain cars are really something. They literally made my ears hurt. For reference New York's subway rail noise never made my ears hurt that much.The explanation I read online is that Translink (the transport authority) lost one of the 2 rail grinders they contracted, and had to buy a grinder for use. So for a few years, while waiting for the grinder to arrive, the rails were not getting the regular grinding needed that'd lessen the wheels-on-rail noise.An unverified rumor I heard was that Translink cheaped out and bought a batch of substandard rails that are softer than needed. This means the rails wear out and become out of spec faster. The issue was compounded by the fact that the softer rails were used to replace a large portions of routes with sharp curves.The rolling stocks use linear induction propulsion, which means there is no electric motor on the train. The trains are very light as a result and require different maintenance.\n \nreply",
      "> LIMA few thoughts:The downside to LIMs is that they have ann unexpected derailment/failure mode (1), as manifested by the 2023 SRT derailment.Briefly, the magnetic repulsion/attraction forces of an accelerating train caused a section of the reaction rail to catch on the train, which catapulted a train car.I\u2019ll also mention used to live near the SRT. They were still great and quirky around the 10 year mark. However, the Mark Is didn\u2019t age well. They just got louder and louder.They also became more and more susceptible to severe weather, to the point they were run in manual mode (versus ATO) with every snow storm.(1) https://stevemunro.ca/2024/01/31/the-scarborough-rt-derailme...\n \nreply",
      "I agree. From what I can recall, the Expo line is just as loud as riding in a Tokyo subway. Good thing I always have an in-ear or NC headphone with me when I travel.\n \nreply",
      "The paper basically reinforces one of the tenets of transit noise and vibration analyses: if you don't maintain your system (specifically wheels and rails in the case of noise), things tend to get louder over time. BCRTC knows this [0] and they're working on it. As with all things, it's about time and money, but they are trying to be proactive with vehicle and track maintenance via rail grinding and complaint tracking.[0] https://archive.wheel-rail-seminars.com/archives/2022/rt-pap...\n \nreply",
      "> Studies in Toronto and New York have shown that\nsound intensity peaks in their respective transit systems\nexceed medically-safe sound level limitsI still remember the shrieking rail noise when the subway in Toronto took the tight corners into and out of Union Station, and the same for the streetcar that went south from there to the waterfront. Always felt like that gave me some permanent hearing damage since I often didn't cover my ears quickly enough. Have not been there for 15 years though - is it still like that?\n \nreply",
      "When Skytrain first came out it was touted about how quiet it was vs. other metro systems. [1] The problem (as others have pointed out) is just the Mark I trains are 40 years old and the maintenance hasn't kept up with the track and the wheels. Things wear out.[1] https://youtu.be/pTsSXdSjU1I?t=455\n \nreply",
      "I don't have anything particularly enlightening to say but I once visited an apartment that was within a few meters of the skytrain track. Thing was loud as can be and made me nope out very quickly. The place wasn't even cheaper than equivalent (minus deafening noise) options, maybe they were hoping to find someone who was already deaf.\n \nreply",
      "London Underground destroys all other transit on the planet when it comes to noise, and ironically, it's not even the trains themselves, it's the effing speakersMIND THE GAPlouder than an Iron Maiden concert, it's unbearable and unnecessary, no idea why they don't turn that shit down\n \nreply",
      "Well, the trains are still quite bad on their own. Especially the deep lines.\n \nreply",
      "At least the lights stay on most of the time these days.\n \nreply"
    ],
    "link": "https://open.library.ubc.ca/media/stream/pdf/51869/1.0421693/5",
    "first_paragraph": ""
  },
  {
    "title": "Railroad Tycoon II (filfre.net)",
    "points": 225,
    "submitter": "doppp",
    "submit_time": "2025-01-10T17:15:22 1736529322",
    "num_comments": 118,
    "comments_url": "https://news.ycombinator.com/item?id=42657585",
    "comments": [
      "I played the Linux version the article mentions while at Goldman Sachs; a colleague on the Red Hat coverage team gave me a boxed copy of Corel Linux including the game. The port ran very well on my Red Hat Linux box at home.In retrospect it was part of a brief flurry of Linux ports of major games. I also got to play Return to Castle Wolfenstein and Neverwinter Nights; in both cases the publishers made Linux clients available for download that use the retail version's assets. Despite the valiant efforts of Wine and related projects, the world would have to wait 15 more years before Proton leveraged Wine technology to bring quasi-native games to Linux, and 20 years before Steam Deck made it the norm or close to it.\n \nreply",
      "That reminds me of 1999, where I threw a party to help my friends modify their Celeron 300A CPUs so they could run dual-socket.  My dual 300A running at 450MHz would run Starcraft under WINE faster than Windows could run it because at the time Windows couldn't do multi-core.  Under Linux one processor would run the graphics (in X) and the other would run the game mechanics, and it would blaze.\n \nreply",
      "Was that the period of time when you got more bang for your buck building a PC with dual-socket Celerons than one high-end Pentium?EDIT: An excellent retrospective on it here: https://www.youtube.com/watch?v=UE-k4hYHIDE\n \nreply",
      "Yes, the dual Celeron 300As, if you could take advantage of multiple cores, were faster than the higher end CPUs, particularly if you overclocked to 450MHz.  My box was stable at 450MHz for around a year, then I had to gradually down-clock it, eventually back to 300.  Never really did much to track down why that was, just rolled with it and figured I should be grateful for the overclocking I had.\n \nreply",
      "Did you pet you cpus at the end and say something like, \u201cyou had a good run boys but we best be putting you out to pasture.\u201d\n \nreply",
      "I also ran a dual Celeron system overclocked to 450mhz - it was great value in 1999. Abit even launched a motherboard that let you run dual Celerons without modifying the processors, the legendary BP6:https://en.wikipedia.org/wiki/ABIT_BP6This was first board to let you use unmodified Celerons, the \"hack\" to let dual CPUs work with those chips was performed at the motherboard level, no CPU pin modifications needed.\n \nreply",
      "The real problem with this setup was that a vanilla Pentium 3 would run circles around the dual Celerons. I had my Celerons clocked to something ridiculous at one point like 600MHz and still could not beat the Pentium.\n \nreply",
      "You are forgetting the massive price difference though. For sure a P3 was great if you had an unlimited budget, but a quick look at pricing sheets for September 1999 shows a 600mhz P3 at ~650 dollars.The 300mhz celerons, easily over-clockable to 450/500mhz, where only ~150 dollars each. These prices are in 1999 dollars too, I haven't adjusted for inflation.It was the value proposition, not the outright performance that made dual celeron builds attractive, especially in an age where we were having to upgrade far more often than we do today to keep up with latest trends.In 1999 I vividly remember not being able to afford a P3 build, was largely why I ended up with the BP6. The P3 also had significant supply issues throughout its lifespan, which didn't help pricing at retail either.\n \nreply",
      "I recall some kind of Intel trade show event where attendees got to buy a P3-500 and an SE440BX motherboard for $250.It was awesome and was my main computer for years.\n \nreply",
      "iirc those overclocks needed thermal paste to be reapplied, plus dust in case probably crushed airflow\n \nreply"
    ],
    "link": "https://www.filfre.net/2025/01/railroad-tycoon-ii/",
    "first_paragraph": "Like a lot of boys, I grew up loving trains. And like a lot of men, I retain my fascination for them today.Once upon a time, I could happily spend hours and hours with my Lionel locomotives. They were, back in that era at least, satisfyingly heavy, made out of the same good solid iron as the full-sized models they imitated; they even smoked the same as the real things when you dropped a bit of \u201csmoke fluid\u201d down the stack. I wiled away many an afternoon driving my trains around and around in circles, learning through trial and error just how fast I could take those corners before disaster struck. But for better or for worse, after I was given a Commodore 64 for Christmas in 1984, model railroading fell by the wayside pretty quickly. (How\u2019s that for a parable of the modern homo digitalis?)Nevertheless, and much to the chagrin of my long-suffering wife, I\u2019m always chomping at the bit to visit any train museum that happens to be within range, whether I\u2019m in Dallas or Nuremberg, Odense or "
  },
  {
    "title": "Scientists Discover Underground Water Vault in Oregon 3x the Size of Lake Mead (scitechdaily.com)",
    "points": 25,
    "submitter": "geox",
    "submit_time": "2025-01-13T22:02:04 1736805724",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://scitechdaily.com/scientists-discover-a-massive-underground-water-vault-in-oregon-3x-the-size-of-lake-mead/",
    "first_paragraph": ""
  },
  {
    "title": "Humanize Healthcare Content as Wyndly (YC W21) 's first content hire (dover.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2025-01-13T17:00:21 1736787621",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://app.dover.com/apply/Wyndly/008f0389-988d-4b63-87c1-026b7b20c6fa/?rs=76643084",
    "first_paragraph": ""
  }
]