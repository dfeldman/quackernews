[
  {
    "title": "I made my VM think it has a CPU fan (wbenny.github.io)",
    "points": 418,
    "submitter": "todsacerdoti",
    "submit_time": "2025-06-29T13:55:18 1751205318",
    "num_comments": 102,
    "comments_url": "https://news.ycombinator.com/item?id=44413185",
    "comments": [
      "Huh so new antimalware tactic: Buy passively cooled PC :)And also set up a Russian keyboard: https://krebsonsecurity.com/2021/05/try-this-one-weird-trick...reply",
      "Writing this from a passively cooled (Streacom FC8 Evo) Linux PC with a Russian keyboard.    # dmidecode 3.6\n    Getting SMBIOS data from sysfs.\n    SMBIOS 2.8 present.\n\n    Handle 0x002C, DMI type 27, 15 bytes\n    Cooling Device\n        Temperature Probe Handle: 0x0029\n        Type: <OUT OF SPEC>\n        Status: <OUT OF SPEC>\n        Cooling Unit Group: 1\n        OEM-specific Information: 0x00000000\n        Nominal Speed: Unknown Or Non-rotating\n        Description: Cooling Dev 1\n\n    Handle 0x002F, DMI type 27, 15 bytes\n    Cooling Device\n        Temperature Probe Handle: 0x0029\n        Type: <OUT OF SPEC>\n        Status: <OUT OF SPEC>\n        Cooling Unit Group: 1\n        OEM-specific Information: 0x00000000\n        Nominal Speed: Unknown Or Non-rotating\n        Description: Not Specified\n\n    Handle 0x0037, DMI type 27, 15 bytes\n    Cooling Device\n        Temperature Probe Handle: 0x0036\n        Type: Power Supply Fan\n        Status: OK\n        Cooling Unit Group: 1\n        OEM-specific Information: 0x00000000\n        Nominal Speed: Unknown Or Non-rotating\n        Description: Cooling Dev 1\n\nSo a cooling device is still present.Sensor data:    iwlwifi_1-virtual-0\n    Adapter: Virtual device\n    temp1:        +59.0\u00b0C  \n\n    acpitz-acpi-0    # Fake, always reports these temperatures\n    Adapter: ACPI interface\n    temp1:        +27.8\u00b0C  \n    temp2:        +29.8\u00b0C  \n\n    coretemp-isa-0000\n    Adapter: ISA adapter\n    Package id 0:  +51.0\u00b0C  (high = +86.0\u00b0C, crit = +92.0\u00b0C)\n    Core 0:        +51.0\u00b0C  (high = +86.0\u00b0C, crit = +92.0\u00b0C)\n    Core 1:        +47.0\u00b0C  (high = +86.0\u00b0C, crit = +92.0\u00b0C)\n    Core 2:        +49.0\u00b0C  (high = +86.0\u00b0C, crit = +92.0\u00b0C)\n    Core 3:        +49.0\u00b0C  (high = +86.0\u00b0C, crit = +92.0\u00b0C)reply",
      "> Streacom FC8 EvoI normally think PC cases are gaudy and boring even when trying to evoke some style. That stuff in Streacom website however makes me want to build something with it.reply",
      "Passively cooled PC probably won't work because the board will still have fan headers even if nothing is connected to them.reply",
      "So we just need to implement the opposite of what OP has on our PCs, i.e. make OS think there are no fans.reply",
      "Yes and another method of controlling them.reply",
      "External cooling device?reply",
      "The computer knows there's a fan because it sees tacho output. If it doesn't see tacho, shrug. You can get an external temperature-controlled PWM controller for a few units of your local currency on AliExpress, steal 12V from somewhere (Molex header or whatever) and run the fans off that. Figure out where to put the temp sensor to get the desired effect.There are far better ways to do this, but they require software engineering, not \u20ac3 and 15 minutes.reply",
      "The computer knows there is a fan because it knows when there isn't a fan. By subtracting where there is a fan from where there isn't a fan, or where there isn't from where there is (whichever is greater) it obtains a difference, or deviation...",
      "The problem is not the fan, it\u2019s the fan controller on the motherboard. I doubt a nonfancy fan controller will bother to drop off the bus/whatever if it doesn\u2019t have fans connected, and the comment by 'patrakov upthread seems to confirm this.reply"
    ],
    "link": "https://wbenny.github.io/2025/06/29/i-made-my-vm-think-it-has-a-cpu-fan.html",
    "first_paragraph": "Some malware samples are known to do various checks to determine if they are\nrunning in a virtual machine. One of the common checks is to look for\nthe presence of certain hardware components that are typically not emulated\nin virtualized environments. One such component is the CPU fan.\nOne of the observed ways malware checks for the presence of a CPU fan is by\nlooking for the Win32_Fan class in WMI:And the reason they do this is they want to avoid running\nin virtual machines, because they want to complicate the analysis process\nfor security researchers.There are plenty of ways for malware to detect if it is running in a VM.\nIn fact, there are plenty of WMI classes that can reveal the presence of\nvirtual hardware, such as Win32_CacheMemory, Win32_VoltageProbe, and\nmany others.In this post, I will be focusing on the CPU fan. Just because I like the idea\nmaking a virtual machine think it has it. However, the same approach can\nbe applied to other hardware components and WMI classes as well"
  },
  {
    "title": "Bitcoin's Security Budget Issue: Problems, Solutions and Myths Debunked (budget.day)",
    "points": 52,
    "submitter": "marcbarbosa",
    "submit_time": "2025-06-29T22:22:30 1751235750",
    "num_comments": 39,
    "comments_url": "https://news.ycombinator.com/item?id=44417090",
    "comments": [
      "The whole point of restricting the block size was to ensure space in the blockchain was scarce to drive the price of fees up, better securing the network. Well, that and keeping the blockchain total size small enough to be processed on an regular user's PC for decentralization sake. While a loss of some decentralization is non-ideal, \nincreasing the block size dynamically, similarly to how difficulty is handled, would be a reasonable compromise to ensure the security of the network long term.reply",
      "Monero does dynamic block size. It works fine. There is a penalty for large swings in size and that controls the fee which allows the fee to be appropriate during swells and luls in volume.reply",
      "Something I would like to see from the cryptocurrency space is some way for the block size to fluctuate with daily and weekly transaction volume. For example, you would expect that the transaction volume would be greater when it is daytime on the east coast, so the blocksize should adapt to those temporal changes as well.If there is a certain latentcy/bandwidth/storage/decentralization tradeoff with block sizes, then we ought to design cryptocurrencies to make the most of this tradeoff with respect to predictable low/high demand.reply",
      "Bitcoin: lets make it so a medium grade computer and internet connection by 2008\u2019s midrange standards works. Forever.Solana: let\u2019s make it so that enthusiast grade computers and internet connectivity by 2024\u2019s high range standard works. Sometimes. But keep pushing.reply",
      "Is solana even decentralized? I thought it was like ripple. I haven't been paying too much attention though.reply",
      "Lol total garbage people have been whining about the blocks regularly being EMPTY now, a huge % of transactions just occur off chain on exchanges/lightning/etc. There are no 100 dollar fees you can basically do everything for basically free.\nhttps://mempool.space/\nlook, you can see how many blocks aren't filled lol. This piece is literally just garbage. Big blockers are scam artists.reply",
      "On the lightning network, fees are distributed to rent-seeking intermediaries instead of miners, yet the network is still dependent on the security from the miners. The lightning network is parasitic to bitcoin.Blocks are empty because people decided that bitcoin was not a feasible means of transaction nearly a decade ago during the blocksize war.reply",
      "fair challenge to their proposed solution, but it doesn't negate the security premise does it? what do you think is a good alternative?reply",
      "This page's design is great and what I thought tufte-ian journalism would have led to. Using the presentation of quasi-mathematical facts in relatively grokkable formats to explain the state of the world in a way that can update itself several months or years later.Specifically some of the political discussions lately feel like they could use better dashboards. The call to action at the end of this article with three main solutions called out now has some context in several dimensions (time, space, monetary).The doge.gov website for instance would've been a prime candidate for that, like some sort of observablehq.com ability slice and dice a data dashboard. But then you also have to be able to trust the data I suppose.reply",
      "Like this? https://www.project2025.observer/reply"
    ],
    "link": "https://budget.day/",
    "first_paragraph": "\nBitcoin was designed to be trustless and secure\u00a0\u2014 but what happens when the engine that powers its security starts running dry?\n\nBitcoin's breakthrough was solving the double-spending problem using a Proof\u2060-\u2060of\u2060-\u2060Work (PoW) mechanism (see\u00a0whitepaper). Bitcoin remains secure as long as honest miners control the majority of the network's computing power.\nThe reverse situation is known as a\n51%\u00a0attack, which can manifest in different ways:A double-spending attack in Bitcoin happens when someone tries to spend the same coins twice. If they control more than half the network\u2019s mining power, they can create a secret version of the blockchain that removes a payment they already made. When they reveal this version, it replaces the original, canceling the first transaction and letting them keep the coins.With majority control, an attacker can choose to ignore or exclude certain transactions from blocks. This means they can selectively prevent transactions from or to specific addresses or entit"
  },
  {
    "title": "Ask HN: What Are You Working On? (June 2025)",
    "points": 90,
    "submitter": "david927",
    "submit_time": "2025-06-29T20:21:28 1751228488",
    "num_comments": 311,
    "comments_url": "https://news.ycombinator.com/item?id=44416093",
    "comments": [
      "Still working on:  an enclosure-compatible open-source version of the 2nd gen Nest thermostat. It reuses the enclosure, encoder ring, display, and mounts of the Nest but replaces the \"thinking\" part with an open-source PCB that can interact with Home Assistant.- The encoder ring which works like an LED mouse, but in reverse: Fully reverse-engineered and on its own demo PCB- The faceplate PCB, which does the actual control of the thermostat wires, has been laid out, but the first version missed a really-obvious problem involving the behavior on power-on with certain of the GPIO pins from the ESP32, so I've got rev 3 on order from the PCB manufacturer.Nest Thermostats of the 1st and 2nd generation will no longer be supported by Google starting October 25, 2025. You will still be able to access temperature, mode, schedules, and settings directly on the thermostat \u2013 and existing schedules should continue to work uninterrupted. However, these thermostats will no longer receive software or security updates, will not have any Nest app or Home app controls, and Google will end support for other connected features like Home/Away Assist. It has been pretty-badly supported in Home Assistant for over a year anyway, missing important connected features.reply",
      "Is this project online anywhere yet that I can watch for it to be ready?reply",
      "Wow! Useful work, if that\u2019s true about them planning to remotely nerf everyone\u2019s product.Yet another example of why not to buy a product that needs to be tethered to its manufacturer to work. Good luck. I\u2019d be willing to beta test (I\u2019d have to check what rev mine is)reply",
      "http://axcas.net  is an online computer algebra system I've been working on.  I'm working to finish the programming language which is based on C, and I'm adding an ode solver which I plan to use to evaluate special functions.I release code into the public domain hoping it will be useful.  There's some fast code for Groebner basis computations using the F4 algorithm (parallelized - article to follow), and some routines for machine integers e.g. discrete logarithm, factoring, and prime counting.reply",
      "Still chugging away at:https://github.com/WillAdams/gcodepreviewCurrently finishing up a re-write which changes from using union commands (which resulted in an ever more deeply nested CSG tree) to collecting everything in a pair of lists using append/extend and then applying one each union operation, resulting a flatter structure.Once all that is done I'm hoping to add support for METAFONT/POST curves....reply",
      "I'm working on a new app for creating technical diagrams - https://vexlio.com. It's an area with some heavyweight incumbents (e.g. Visio, Lucid) but I think there's good opportunity here to differentiate in simplicity and overall experience. I'm still in the fairly early phase, and I suspect I haven't quite found the best match of features to customers yet.From a dev perspective this area has a ton of super interesting algorithmic / math / data structure applications, and computational geometry has always been special to me. It's a lot of fun to work on.If anyone here is interested in this as a user, I'd love for any feedback or comments, here or you can email me directly: tyler@vexlio.com.Some pages the HN crowd might be interested in:* https://vexlio.com/blog/making-diagrams-with-syntax-highligh...\n* https://vexlio.com/solutions/state-diagram-maker/\n* https://vexlio.com/blog/speed-up-your-overleaf-workflow-fast...reply",
      "It looks like a pretty interesting product so I really hate to be that guy but the  FAQ page at https://vexlio.com/faq/ straight up doesn't work (whenever I click any of the questions, it does nothing). Also, wanted to know if there was anything in the pipeline to get a Desktop application which would work offline. In several places in the enterprise world especially, I do feel there would be scope for that. I would definitely pay for a desktop version which worked offline for example.reply",
      "Whoops - FAQ issue should be fixed if you refresh (if it's still broken, give it some time for caches to be invalidated). Thanks for mentioning that!Re: desktop version. The short answer is yes, probably, but I don't have a concrete timeline. I made tech and architecture choices from the beginning to make sure a cross-platform desktop version always remains possible. Frankly, the biggest obstacle for desktop is not the app itself, but distribution and figuring out a pricing model. The current solution for enterprise, business, and other interested people, is to self-host Vexlio, with separate licensing.reply",
      "FAQ works fine for me now.reply",
      "oh cool! I want to try this soon.reply"
    ],
    "link": "item?id=44416093",
    "first_paragraph": ""
  },
  {
    "title": "The Book of Shaders (thebookofshaders.com)",
    "points": 28,
    "submitter": "max_",
    "submit_time": "2025-06-26T17:48:03 1750960083",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44389622",
    "comments": [
      "If you're discovering this for the first time and think it looks interesting, I shall post the customary warning to perhaps not bother. It's a well-written resource, for what's there, but it is left unfinished right where things start getting interesting and hasn't had an update in almost a decade now.reply",
      "I have tried a few times to learn shaders, but it always feels like I'm about 20 years behind on all sorts of random but necessary facts about shaders with no way to catch up in a reasonable timeframe. This book looks like it could help catch me up, and I like that all the code samples are interactive and immediately update.reply",
      "Try looking up Ben Cloward on YouTube. He's quite concise and thorough.reply"
    ],
    "link": "https://thebookofshaders.com/",
    "first_paragraph": "\n\u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430 -\n        Bahasa Indonesia -\n        Ti\u1ebfng Vi\u1ec7t -\n        \u65e5\u672c\u8a9e -\n        \u4e2d\u6587\u7248 -\n        \ud55c\uad6d\uc5b4 -\n        Espa\u00f1ol -\n        Portugues -\n        Fran\u00e7ais -\n        Italiano -\n        Deutsch -\n        \u0420\u0443\u0441\u0441\u043a\u0438\u0439 -\n        Polski -\n        English\nby Patricio Gonzalez Vivo and Jen LoweThis is a gentle step-by-step guide through the abstract and complex universe of Fragment Shaders.About this bookGetting startedAlgorithmic drawingGenerative designsImage processingSimulation3D graphicsAppendix: Other ways to use this bookExamples GalleryPatricio Gonzalez Vivo (1982, Buenos Aires, Argentina) is a New York based artist and developer. He explores interstitial spaces between organic and synthetic, analog and digital, individual and collective. In his work he uses code as an expressive language with the intention of developing a better together.Patricio studied and practiced psychotherapy and expressive art therapy. He holds an MFA in Design & Technology from Parsons The New School, where he"
  },
  {
    "title": "Cell Towers Can Double as Cheap Radar Systems for Ports and Harbors (2014) (ieee.org)",
    "points": 29,
    "submitter": "transpute",
    "submit_time": "2025-06-29T21:48:12 1751233692",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=44416761",
    "comments": [
      "More coverage of RF sensing, including laptops/phones with radios+NPU to sense their human:2025, \"Espargos: ESP32-based WiFi sensing array\", 30 comments, https://news.ycombinator.com/item?id=430790232024, \"How Wi-Fi sensing became usable to track people's movements\", https://www.technologyreview.com/2024/02/27/1088154/wifi-sen...2023, \"What Is mmWave Radar?: Everything You Need to Know About FMCW\", 30 comments, https://news.ycombinator.com/item?id=353123512022, \"mmWave radar, you won't see it coming\", 180 comments, https://news.ycombinator.com/item?id=301726472021, \"The next big Wi-Fi standard is for sensing, not communication\", 200 comments, https://news.ycombinator.com/item?id=29901587reply",
      "The gap between the people demanding these systems and those who design it it is so large, it\u2019s vulnerable to corruption in infinite ways, let\u2019s be honest.reply",
      "With how cheap radar has gotten in the past decade I would be curious to know if any ports/harbors actually use cell towers?reply",
      "I spoke with a startup that is using 5G cell towers as radar. They said it is high-enough resolution to perform gait recognition.reply",
      "There's a whole host of radar research using OFDM/ Wifi (I wrote a paper on the topic a while back where i implemented it with some software defined radios).The best paper on the topic is Martin Brauns[1]. It's insanely comprehensive and easy to digest.[1] https://publikationen.bibliothek.kit.edu/1000038892/2987095reply",
      "Doesn't the thesis assume you are the one sending out the OFDM signal, while the OP is about a passive radar thing? Maybe I got one of those mixed up.reply",
      "I seem to recall reading (on HN, no less) that advanced passive radar technology is classified as munitions, by the US Government and is under export controls?reply",
      "Yes, they are on the BIS Commerce Control List. It doesn't need to be particularly advanced to be export controlled.5A001.g Passive Coherent Location (PCL) systems or equipment, \u201cspecially designed\u201d for detecting and tracking moving objects by measuring reflections of ambient radio frequency emissions, supplied by non-radar transmitters. Technical Note: For the purposes of\n5A001.g, non-radar transmitters may include commercial radio, television or cellular telecommunications base stations.https://www.bis.doc.gov/index.php/documents/regulations-docs...reply",
      "Hmm. I wonder how big a different the whole 24Ghz vs 6Ghz thing makes, when used as a radar.reply",
      "To properly understand, how much resolution is needed for that ?reply"
    ],
    "link": "https://spectrum.ieee.org/cell-tower-signals-can-improve-port-security",
    "first_paragraph": "How do you see ships without a pricey radar system? The question has troubled seaports around the world as they work to improve security. Without radar installations, it can be hard for port employees to detect small ships like those employed by pirates or by the\u00a0terrorists who attacked the USS Cole in 2000. A team of researchers in Germany can now offer security teams a new option, though: putting existing cellular towers to work as quick and dirty radar systems.Developed at the Fraunhofer Institute for Communications, Information Processing and Ergonomics, the new security system employs a technology known\u00a0as Passive Coherent Location (PCL), which harnesses the radio signals sent out by cell towers to pinpoint the location of ships entering a harbor. (PCL) works in much the same way as radar\u2014sending signals that bounce off of objects and reading the signals that return to determine the objects\u2019 locations.Radar uses strong, directed waves that make it easy to find objects. In contrast"
  },
  {
    "title": "Revisiting Knuth's \"Premature Optimization\" Paper (probablydance.com)",
    "points": 67,
    "submitter": "signa11",
    "submit_time": "2025-06-26T11:17:12 1750936632",
    "num_comments": 30,
    "comments_url": "https://news.ycombinator.com/item?id=44386236",
    "comments": [
      "I think the problem with the quote is that everyone forgets the line that comes after it.  We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil.\n\n  vvvvvvvvvv\n  Yet we should not pass up our opportunities in that critical 3%. A good programmer will not be lulled into complacency by such reasoning, he will be wise to look carefully at the critical code; but only after that code has been identified.\n  ^^^^^^^^^^\n\nThis makes it clear, in context, that Knuth defines \"Premature Optimization\" as \"optimizing before you profile your code\"@OP, I think you should lead with this. I think it gets lost by the time you actually reference it. If I can suggest, place the second paragraph after  > People always use this quote wrong, and to get a feeling for that we just have to look at the original paper, and the context in which it was written.\n\nThe optimization part gets lost in the middle and this, I think, could help provide a better hook to those who aren't going to read the whole thing. Which I think how you wrote works good for that but the point (IMO) will be missed by more inattentive readers. The post is good also, so this is just a minor critique because I want to see it do better.https://dl.acm.org/doi/10.1145/356635.356640\n(alt) https://sci-hub.se/10.1145/356635.356640reply",
      "Amdahl\u2019s Law is the single best thing I learned in 4 years of university. It sounds obvious when spelled out but it blew my mind.No amount of parallelization will make your program faster than the slowest non-parallelizable path. You can be as clever as you want and it won\u2019t matter squat unless you fix the bottleneck.This extends to all types of optimization and even teamwork. Just make the slowest part faster. Really.https://en.wikipedia.org/wiki/Amdahl%27s_lawreply",
      "> faster than the slowest non-parallelizable pathRather, than the slowest non-parallelized path. Ultimately you may reach maximum speed on that path but the assumptions that we are close to it often turn out to be poorly considered, or considered before 8 other engineers added bug fixes and features to that code.From a performance standpoint you need to challenge all of those assumptions. Re-ask all of those questions. Why is this part single threaded? Does the whole thing need to be single threaded? What about in the middle here? Can we rearrange this work? Maybe by adding an intermediate state?reply",
      "> It sounds obvious when spelled out but it blew my mind.\n\nI think there's a weird thing that happens with stuff like this. Cliches are a good example, and I'll propose an alternative definition to them.  A cliche is a phrase that's so obvious everyone innately knows or understands it; yet, it is so obvious no one internalizes it, forcing the phrase to be used ad nauseam\n\nAt least, it works for a subset of cliches. Like \"road to hell,\" \"read between the lines,\" Goodheart's Law, and I think even Amdahl's Law fits (though certainly not others. e.g. some are bastardized, like Premature Optimization or \"blood is thicker than water\"). Essentially they are \"easier said than done,\" so require system 2 thinking to resolve but we act like system 1 will catch them.Like Amdahl's Law, I think many of these take a surprising amount of work to prove despite the result sounding so obvious. The big question is if it was obvious a priori or only post hoc. We often confuse the two, getting us into trouble. I don't think the genius of the statement hits unless you really dig down into proving it and trying to make your measurements in a nontrivially complex parallel program. I think that's true about a lot of things we take for grantedreply",
      "another commonly misinterpreted one is the `shouting fire in a crowded theatre` quote.In it's original context it means the opposite of how people use it today.reply",
      "Interestingly, you didn't learn the full lesson:When optimizing, always consider the cost of doing the optimization vs. it's impact.In a project where you are looking a 45/30/25 type split.  The 45 may actually be well optimized, so the real gains may be in the 30 or 25.The key is to understand the impact you CAN have, and what the business value of that impact is.  :)The other rule I've learned is: There is always a slowest path.reply",
      "I didn't get that impression from their response. I mean I could be wrong, but in context of \"use a profiler\" I don't think anything you said runs counter. I think it adds additional information, and it's worth stating explicitly, but given my read yours comes off as unnecessarily hostile. I think we're all on the same page, so let's make sure we're on the same side because we have the same common enemy: those who use Knuth's quote to justify the slowest piece of Lovecraftian spaghetti and duct tape imaginablereply",
      "> The key is to understand the impact you CAN have, and what the business value of that impact is. :)Like I tell everyone in system design interviews: AWS will rent you a machine with 32TB of RAM. Are you still sure about all this extra complexity?reply",
      "... to the tune of about 10 cents a second, yeah. If you can hire a dev team to optimize one of those out, you plausibly come out ahead (well, vs face value).",
      "There is more to it than that.1. Decide if optimization is even necessary.2. Then optimize the slowest pathreply"
    ],
    "link": "https://probablydance.com/2025/06/19/revisiting-knuths-premature-optimization-paper/",
    "first_paragraph": "The most famous quote from Knuth\u2019s paper \u201cStructured Programming with go to Statements\u201d is this:There is no doubt that the grail of efficiency leads to abuse. Programmers waste enormous amounts of time thinking about, or worrying about, the speed of noncritical parts of their programs, and these attempts at efficiency actually have a strong negative impact when debugging and maintenance are considered. We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil.People always use this quote wrong, and to get a feeling for that we just have to look at the original paper, and the context in which it was written. The paper isn\u2019t actually about optimization. It\u2019s about when we have to use goto statements because structured programming couldn\u2019t express certain things at the time. Or at least it couldn\u2019t do so efficiently, requiring extra checks, and that\u2019s why Knuth has to talk about performance: The topic he is addressing is \u201cCan we g"
  },
  {
    "title": "Modelling API rate limits as diophantine inequalities (vivekn.dev)",
    "points": 37,
    "submitter": "viveknathani_",
    "submit_time": "2025-06-27T05:48:22 1751003302",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=44393998",
    "comments": [
      "The whole diophantine aspect of this seems contrived - where is the integer restriction coming from? Does that make the problem more tractable or more difficult?reply",
      "If they do not know about it already, the OP would benefit from knowing more about Linear Programming and Mixed Integer Linear Programming. Many optimization problems can be naturally modeled into LPs or MILPs and there are POWERFUL solvers with decades of theory and optimization behind them already developed to solve them.reply",
      "> The retry times are integers.There's no reason the retry times have to be integers.  But the number of retries has to be an integer.reply",
      "Wrote something about applying math in modelling a rate-limiting scenario for API clients. Felt like posting it here. Happy to hear your thoughts, HN!reply"
    ],
    "link": "https://vivekn.dev/blog/rate-limit-diophantine",
    "first_paragraph": "You're allowed 10 requests per hour. Each task you run makes three attempts: initial call, retry after 10 minutes, and retry after 30 minutes.What\u2019s the maximum number of tasks you can safely run per hour?Most engineers throw exponential backoff at the problem. And it works great in most cases! But can we, for the sake of having fun, be more mathematical about this?In a way, this is just an integer feasibility problem.Let\u2019s define the retry pattern: [0, 10, 30]. Every task fires three requests: at minute 0, 10, and 30 after its start.Now, suppose you start a new task every 20 minutes:Now, examine the 60-minute window [30, 90]:Total: 6 requests in that window. What if you had 4 such tasks? Or 5?At some point, that window exceeds the limit.Let's generalise this. Then,Let Xi be the number of tasks started at time Ti.Let Ai be the number of attempts for those tasks that fall into our window.Let R be the rate limit of our window.Therefore, we are looking at,This is a bounded integer linear "
  },
  {
    "title": "Nearly 20% of cancer drugs defective in 4 African nations (dw.com)",
    "points": 55,
    "submitter": "woldemariam",
    "submit_time": "2025-06-29T23:23:09 1751239389",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=44417549",
    "comments": [
      "I'll never forget a coworker telling me that in a previous job hunting round he had interviewed with a pharmaceutical group that was tracking the manufacturing process for batches of drugs and comparing the little tolerance mistakes (heated a little too high or held at temp a little too long or not quite long enough) and finding a market where they can sell that batch.You'd like to think that companies have factories with quality control laws and there are local people trying to ensure that all of their product are up to the local standards. What you don't expect is that they are binning them like Intel CPUs, where they just make a batch and hope for the best, take cream off the top until the priority orders are done and then everyone else gets whatever is left. You might get a slightly better product sometimes but not be so lucky the next time.reply",
      "Is this system not preferable over just trashing anything not perfectly made? Sure it would be nice if everyone can have perfectly manufactured medicine, but that's not reality. I would think something that's still likely good is still better than nothing.reply",
      "Does that mean that generics really are worse than the brand pharmaceuticals. Or are they binned the same way?In the UK I know the NHS buys generics, which implies they are effective, but I wonder.reply",
      "Generally it\u2019s different companies manufacturing generics.Instead this mostly comes down to how effective each countries regulations are.reply",
      "Generics lack the ownership of the intellectual property, but that\u2019s about itGenerics are effectivereply",
      "Generics tends to be different companies altogether.reply",
      "The political uncertainties of western countries where \"there is no truth\" and \"facts don't matter\" could easily bring this level of systemic corruption to them as well. People love to rage bait and say how bad it is now, but that seems to have largely led to groups giving up on enforcing norms, and bodes poorly for the future.reply",
      "Leo Szilard (he's credited with theorising purposeful fission and patenting core ideas long before the Manhattan project got off the ground) wrote a long time ago about a (dys/u)topia where technocrats made the decisions. He had this idea \"the bund\" would fix politics by moving decision making to pure evidence based rational methods.It wouldn't work, but when I see appeals to authority (FDA) enter the room, it's usually to feel superior because its a logical fallacy in argument but the place it actually fits (which btw, is here, in this thread) is that compliance to standards and policing them, is not \"argument\" it's the \"you only had one job\" part of the gig.\"yes Mr Kennedy, these friends of yours are very nice at parties, but unfortunately they are neither qualified, nor actually capable of fulfilling their role and so no, you won't be appointing them\" is what the Bund would do.Being able to take a compliance body oversight function and leverage it to remove adjuvents because of one paper, despite overwhelming evidence to the contrary, is precisely whats wrong in the current politicised situation.If people making generic cancer drugs for use in africa had to be held to the standards in the west, we'd all be better off. I have said elsewhere that if the US rejects flu vaccines because of the mercury, they should be checked for other compliance and standards, and subject to cold chain integrity shipped to economies who usually can't afford them, and can use them.reply",
      "I don\u2019t see how. FDA is widely respected.reply",
      "The FDA has been approving generics from factories known to have repeatedly failed prior audits or had products recalled for quality issues without re-inspecting the factories or inspecting the drugs on import. And they're doing it via a special process that bypasses the ordinary review process and over the objections of many of the inspectors.reply"
    ],
    "link": "https://www.dw.com/en/nearly-20-of-cancer-drugs-defective-in-4-african-nations/a-73062221",
    "first_paragraph": "Across Africa, cancer medications have been found to be substandard or counterfeit. That means people are being given medicine that may not work, or that could even cause them harm.An alarming number of people across Africa may be taking cancer drugs that don't contain the vital ingredients needed to contain or reduce their disease.It's a concerning finding with roots in a complex problem: how to regulate a range of therapeutics across the continent.A US and pan-African research group published the findings this week in The Lancet Global Health. The researchers had collected dosage information, sometimes covertly, from a dozen hospitals and 25 pharmacies across Ethiopia, Kenya, Malawi and Cameroon.They tested nearly 200 unique products across several brands. Around 17% \u2014 roughly one in six \u2014 were found to have incorrect active ingredient levels, including products used in major hospitals.Patients who receive\u00a0insufficient dosages of these ingredients could see their tumors\u00a0keep growing,"
  },
  {
    "title": "Show HN: Octelium \u2013 FOSS Alternative to Teleport, Cloudflare, Tailscale, Ngrok (github.com/octelium)",
    "points": 284,
    "submitter": "geoctl",
    "submit_time": "2025-06-29T11:24:17 1751196257",
    "num_comments": 111,
    "comments_url": "https://news.ycombinator.com/item?id=44412207",
    "comments": [
      "For everyone who's having a hard time parsing what Octelium does, I found this page to be the clearest explanation: https://octelium.com/docs/octelium/latest/overview/how-octel...It's clearer because, instead of starting with a massive list of everything you could do with Octelium (which is indeed confusing), it starts by explaining the core primitives Octelium is built on, and builds up from there.And it actually looks pretty cool and useful! From what I can tell, the core funtionality is:- A VPN-like gateway that understands higher-level protocols, like HTTP or PostgreSQL, and can make fine-grained security decisions using the content of those protocols- A cluster configuration layer on top of KubernetesAnd these two things combine to make, basically, a personal cloud. So, like any of the big cloud platforms, it does a million things and it's hard to figure out which ones you need at first. But it seems like the kind of system that could be used for a homelab, a small company that wants to keep cloud costs down, or a custom PaaS selling cloud functionality. Neat!reply",
      "TailScale is wonderful but they do need competition. I imagine an IPO is on the horizon, and as soon as they enter that phase, nasty price increases are sure to follow unless someone else is nipping hard at their heels.reply",
      "Hopefully their tolerance to self-hosters (Headscale) doesn't change.reply",
      "They seem to be fine with it: \"You could alternatively host your own trusted control server with Headscale.\"[1][1] https://tailscale.com/blog/tailnet-lock-ga#self-hostingreply",
      "The problem is, commercial services will always enshittify. It's inevitable. Even when they conquer the whole market (see Netflix) they will want to see a rising line in profits so then they will turn the thumbscrews on the customers.reply",
      "It\u2019s especially when they conquer the whole market. It\u2019s why investors favor growth and adoption, even at a loss, until it\u2019s won the market and can turn up the monetization dial.reply",
      "Well, they do it anyway.All the streaming services are enshittifying, even the smaller ones. And other smaller webshops are enshittifying the same way that Amazon does. Like Cory Doctorow described, there's a few big webshops in the Netherlands like bol.com and coolblue.com and they are now also allowing third party sellers, often even from China. The webshops are absolved of all responsibility but they do cash out on every transaction.reply",
      "The term 'enshittification' sounds negative for what an organization needs to do to take care of employees.reply",
      "Sorry no. A stable organization with a good profit margin is enough to take care of employees and pay their salaries. Boundless growth which is what enshittification is associated with, is driven by money-hungry stakeholders and \u201cinvestors\u201d that demand an ever growing return on investment - they don\u2019t settle for speed, they need constant acceleration.reply",
      "But there are so so many competing products already?Not all are commercial (but why would you want that anyway). But ZeroTier is another one like that. Basically the same thing.reply"
    ],
    "link": "https://github.com/octelium/octelium",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A next-gen FOSS self-hosted unified zero trust secure access platform that can operate as a remote access VPN, a ZTNA/BeyondCorp architecture, API/AI gateway, a PaaS, an infrastructure for MCP & A2A architectures or even as an ngrok-alternative and a homelab infrastructure.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n\n\nOctelium is a free and open source, self-hosted, unified platform for zero trust resource access that is primarily meant to be a modern alternative to remote access VPNs and similar tools. It is built to be generic enough to not only operate as a zero-config remote access VPN (i.e. alternative to OpenVPN Access Server, Twingate, Tailscale, etc...), a ZTNA platform (i.e. alternative to Cloudflare Access, Teleport, Google BeyondCorp, etc..."
  },
  {
    "title": "Finding a former Australian prime minister\u2019s passport number on Instagram (2020) (pdf.zone)",
    "points": 57,
    "submitter": "guiambros",
    "submit_time": "2025-06-29T22:22:32 1751235752",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=44417091",
    "comments": [
      "The story is a lot more enjoyable in conference talk form than written form imo https://www.youtube.com/watch?v=lijyQ_HAysAreply",
      "I believe this is the same story covered by Dark Diaries. Very interesting story.\nhttps://darknetdiaries.com/episode/84/reply",
      "Previously:Finding a former Australian prime minister\u2019s passport number on Instagram (2020) - https://news.ycombinator.com/item?id=34966909 - Feb 2023 (41 comments)When you browse Instagram and find Tony Abbott's passport number - https://news.ycombinator.com/item?id=24488224 - Sept 2020 (340 comments)reply",
      "Love the humor. I am a fan of Alex's writing style!reply",
      "I love this blog post. Its a classic.reply",
      "Really interesting, but the writing was so bad I had to bail out halfway through.reply",
      "> I had to bail out halfway throughTelling us you didn't read the article is exactly the kind of unsubstantive comment we don't want on HN. The comments thread is for people who did read the article and have something to say about the content.This kind of comment breaks the guidelines particularly these ones:Be kind. Don't be snarky. Converse curiously...Don't be curmudgeonly. Thoughtful criticism is fine, but please don't be rigidly or generically negative.Please don't fulminate. Please don't sneer....Please respond to the strongest plausible interpretation of what someone says, not a weaker one that's easier to criticize. Assume good faith.Please don't post shallow dismissals, especially of other people's work. A good critical comment teaches us something.Please don't complain that a submission is inappropriate. If a story is spam or off-topic, flag it. Don't feed egregious comments by replying; flag them instead. If you flag, please don't also comment that you did.Please don't complain about tangential annoyances\u2014e.g. article or website formats, name collisions, or back-button breakage. They're too common to be interesting.Please take a moment to remind yourself of the guidelines and make an effort to observe them in future.https://news.ycombinator.com/newsguidelines.htmlreply",
      "I enjoy the meandering style but it did become a little long because of the meandering, glad I skipped ahead instead of just closing thoreply"
    ],
    "link": "https://mango.pdf.zone/finding-former-australian-prime-minister-tony-abbotts-passport-number-on-instagram/",
    "first_paragraph": "\"work\" by the hacker known as \"Alex\" / @mangopdfDo not get arrested challenge 2020Sep 16, 2020\n\u2022 mangopdf (Alex Hope)Do not get arrested challenge 2020So you know when you\u2019re flopping about at home, minding your own business, drinking from your water bottle in a way that does not possess any intent to subvert the Commonwealth of Australia?It\u2019s a feeling I know all too well, and in which I was vigorously partaking when I got this message in \u201cthe group chat\u201d1.\nA nice message from my friend, with a photo of a boarding pass \ud83d\ude42 A good thing about messages from your friends is that they do not have any rippling consequences \ud83d\ude42\ud83d\ude42\ud83d\ude42The man in question is Tony Abbott, one of Australia\u2019s many former Prime Ministers.\nThat\u2019s him, officerFor security reasons, we try to change our Prime Minister every six months, and to never use the same Prime Minister on multiple websites.2This particular former PM had just posted a picture of his boarding pass on Instagram (Instagram, in case you don\u2019t know it, is an"
  },
  {
    "title": "WorldVLA: Towards Autoregressive Action World Model (arxiv.org)",
    "points": 4,
    "submitter": "chrsw",
    "submit_time": "2025-06-29T23:51:57 1751241117",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://arxiv.org/abs/2506.21539",
    "first_paragraph": "Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "We accidentally solved robotics by watching 1M hours of YouTube (ksagar.bearblog.dev)",
    "points": 54,
    "submitter": "alexcos",
    "submit_time": "2025-06-29T16:08:53 1751213333",
    "num_comments": 47,
    "comments_url": "https://news.ycombinator.com/item?id=44414171",
    "comments": [
      "I just wrote a reply to a comment talking about the AI tells this writing has, but it got flagged so my comment disappeared when I hit post. I'll rephrase out of spite:My first thought upon reading this was that an LLM had been instructed to add a pithy meme joke to each paragraph. They don't make sense in context, and while some terminally online people do speak in memes, those people aren't quoting doge in 2025.There's also a sense of incoherence in the whole piece. For instance, this section:\"- after: 22 million videos + 1 million images (now we're talking)they basically hoovered up everything: something-something v2, kinetics, howto100m, and a billion youtube videos\"Was it a billion vids or 22m? It turns out the latter sentence is just rephrasing the list of sources in a cool casual way, and the last one is called YT-Temporal-1B. That's a billion frames of video, not a billion videos.reply",
      "This was a bit hard to read. It would be good to have a narrative structure and more clear explanation of concepts.reply",
      "Very intentional. Their response would be: \u201cif you need narrative structure and clear explanation of concepts, yngmi\u201d.reply",
      "This article contains so many falsehoods and history rewrites that it's pretty painful to read.reply",
      "IMO, VideoMimic is a better proof-of-concepthttps://www.videomimic.net/https://www.videomimic.net/page1.htmlreply",
      "Looks like it was trained on Shaolin Drunken Fist videos. Does it look drunk because of the videos or because there's a discrepancy between videos and it not accounting for gravity and physics in general?reply",
      "Someone watched 'Devs' ?if you havent - highly recommended.reply",
      "Do you have a link or a less generic search term?reply",
      "It\u2019s a TV show made by Adam Garland https://m.imdb.com/title/tt8134186/\nIt\u2019s pretty good sci fi IMHOreply",
      "[flagged]"
    ],
    "link": "https://ksagar.bearblog.dev/vjepa/",
    "first_paragraph": ""
  },
  {
    "title": "4-10x faster in-process pub/sub for Go (github.com/kelindar)",
    "points": 103,
    "submitter": "kelindar",
    "submit_time": "2025-06-29T15:19:19 1751210359",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=44413809",
    "comments": [
      "After a brief skim, it looks like this implementation is highly optimized for throughput and broadcasts whereas a channel has many other usecases.Consumers subscribing to the same event type are placed in a group. There is a single lock for the whole group. When publishing, the lock is taken once and the event is replicated to each consumer's queue. Consumers take the lock and swap their entire queue buffer, which lets them consume up to 128 events per lock/unlock.Since channels each have a lock and only take 1 element at a time, they would require a lot more locking and unlocking.There is also some frequent polling to maintain group metadata, so this could be less ideal in low volume workloads where you want CPU to go to 0%.reply",
      "Seems that the trick would be detecting if there is a queue building up and dispatching multiple events per lock if so. Double buffering is a common enough solution here. The reader gets one buffer to write to and the writer gets another, and when the read buffer is drained the write buffer is swapped.For low traffic messages you need only send one message at a time, but if the receiver slows down the sender can avoid resorting to back pressure until the buffer is more than half full.reply",
      "OP: the readme could really benefit from a section describing the underlying methodology, and comparing it to other approaches (Go channels, LMAX, etc...)reply",
      "It\u2019s a fairly standard broadcaster based on sync.Cond.reply",
      "Why are channels so much slower? I would expect a channel to operate basically like a ring buffer + a semaphore.reply",
      "Channels allow for many-to-many communication.To a first approximation, you can imagine any decently optimized concurrency primitives as being extremely highly optimized, which means on the flip side that no additional capability, like \"multi-to-multi thread communication\", ever comes for free versus something that doesn't offer that capability. The key to high-performance concurrency is to use as little \"concurrency power\" as possible.That's not a Go-specific thing, it's a general rule.Channels are in some sense more like the way dynamic scripting languages prioritize ease-of-use and flexibility over performance-at-all-costs. They're a very powerful primitive, and convenient in their flexibility, but also a pretty big stick to hit a problem with. Like dynamic scripting languages being suitable for many tasks despite not being the fastest things, in a lot of code they're not the performance problem, but if you are doing a ton of channel operations, and for some reason you can't do the easy thing of just sending more work at a time through them, you may need to figure out how to use simpler pieces to do what you want. A common example is, if you've just got a counter of some kind, don't send a message through a channel to another goroutine to increment it; use the atomic increment operation in the sync/atomic package.(If you need absolute performance, you probably don't want to use Go. The runtime locks you away from the very lowest level things like memory barriers; it uses them to implement its relatively simple memory model but you can't use them directly yourself. However, it is important to be sure that you do need such things before reaching for them.)reply",
      "I never benchmarked this, so just guessing from principles, take this with a grain of salt. Channel isn't a broadcast mechanism (except when you call close on the channel), so a naive channel-based broadcaster implementation like the one you find in bench/main.go here uses one channel for each subscriber; every event has to be sent on every subscriber channel. Condition variable on the other hand is a native broadcast mechanism. I imagine it's possible to leverage channel close as a broadcast mechanism to achieve similar performance.Edit: https://news.ycombinator.com/item?id=44416345 seems to have done a much more detailed analysis of the code. There's likely more to this.reply",
      "The actual code and the actual bench is very short.reply",
      "It\u2019s always worth discussing what features were thrown out to get the performance boost, whether it\u2019s fair for those features to impose a tax on all users who don\u2019t or rarely use those features, and whether there\u2019s a way to rearrange the code so that the lesser used features are a low cost abstraction, one that you mostly only pay if you use those features and are cheap if not free if you don\u2019t.There\u2019s a lot of spinoff libraries out there that have provoked a reaction from the core team that cuts down cost of their implementation by 25, 50%. And that\u2019s a rising tide that lifts all boats.reply",
      "This might be useful to some if you need a very light pub/sub inside one process.I was building a small multiplayer game in Go. Started with a channel fan-out but (for no particular reason) wanted to see if we can do better. Put together this tiny event bus to test, and on my i7-13700K it delivers events in 10-40ns, roughly 4-10x faster than the plain channel loop, depending on the configuration.reply"
    ],
    "link": "https://github.com/kelindar/event",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Simple internal event bus for Go applications\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n\n\n\n\n\n\nThis package offers a high-performance, in-process event dispatcher for Go, ideal for decoupling modules and enabling asynchronous event handling. It supports both synchronous and asynchronous processing, focusing on speed and simplicity.Use When:Not For:This repository contains a simple, in-process event dispatcher to be used to decouple internal modules. It provides a generic way to define events, publish and subscribe to them.For convenience, this package provides a default global dispatcher that can be used with On() and Emit() package-level functions.When publishing events, you can create a Dispatcher which is then used as a target of generic event.Publi"
  },
  {
    "title": "Bloom Filters by Example (llimllib.github.io)",
    "points": 185,
    "submitter": "ibobev",
    "submit_time": "2025-06-29T11:56:09 1751198169",
    "num_comments": 28,
    "comments_url": "https://news.ycombinator.com/item?id=44412370",
    "comments": [
      "Note to the author --  I love the interactive part. One suggestion to really drive the point home: Give the user an example of two strings that have a hash collision, and tell them to enter one into the box, and then test for the other in the second box.It will demonstrate why the answer is always \"maybe it's in the set!\" instead of \"yes\".reply",
      "\"bloom\" and \"demonstrators \" (mind the trailing space character)Both collide with: fnv: 7 murmur: 12reply",
      "This article is aimed squarely at people like me. I'd heard of them. I kept meaning to look them up everytime I saw them mentioned. I finally did when I saw your articale and it was the perfect intro that I was looking for :)reply",
      "Learned about them when I was told to implement one for iBooks (for search) \u2014 over a decade ago.reply",
      "Same with mereply",
      "I wrote a Bloom Filter for college in CUDA in 2009. My advisor was a former Nvidia guy. I then went on to not do any GPU programming at all in my career.I probably could have made $100,000,000 if I had made a different choice there.reply",
      "I ported a machine learning algorithm to CUDA for my honours project, shrugged my shoulders and went into embedded programmingreply",
      "Improbable considering it was a CS idea in 1970. Surely every idea for GPGPU was fair game.I wrote a hashcash implementation on a GPU 10 years ago. Pretty sure it's valueless now.reply",
      "Could have also bought Bitcoin and made a lot more... just saying.reply",
      "I recently used a bloom filter to achieve a log message anti-spam feature. In the logger I hashed the messages and inserted into the filter. If the entry was present I didn\u2019t output the messages. Then every few seconds I would iterate over the filter and clear all the bits. It worked out nicely that I didn\u2019t have to worry about atomically clearing all the bits in the filter, if messages were coming in and any of their bits had been cleared that was sufficient to cause them to be logged again. This was much more efficient than the previous implementation which kept a count of messages seen and would saturate at N and had the effect that if a particular message was being repeatedly logged it would be seen, just at most at the rate at which the filter was being cleared.After being aware of bloom filters for a while it was quite satisfying to organically find a real use for one that was such an improvement.reply"
    ],
    "link": "https://llimllib.github.io/bloomfilter-tutorial/",
    "first_paragraph": "A Bloom filter is a data structure designed to tell you, rapidly and memory-efficiently, whether an element is\n      present in a set.\n\n    The price paid for this efficiency is that a Bloom filter is a probabilistic data structure: it\n      tells us that the element either definitely is not in the set or may be in the set.\n\n    The base data structure of a Bloom filter is a Bit Vector. Here's a small one we'll use to\n      demonstrate:\n\n    \n\n\n\n\n\nEach empty cell in that table represents a bit, and the number below it its index. To add an element to the Bloom\n      filter, we simply hash it a few times and set the bits in the bit vector at the index of those hashes to 1.\n\n    It's easier to see what that means than explain it, so enter some strings and see how the bit vector changes. Fnv\n      and Murmur are two simple hash functions:\n\n    \nEnter a string: \n\n        fnv: \n        murmur: \n\nYour set: []\n    \nWhen you add a string, you can see that the bits at the index given by the hash"
  },
  {
    "title": "Many ransomware strains will abort if they detect a Russian keyboard installed (2021) (krebsonsecurity.com)",
    "points": 198,
    "submitter": "air7",
    "submit_time": "2025-06-29T18:29:55 1751221795",
    "num_comments": 119,
    "comments_url": "https://news.ycombinator.com/item?id=44415233",
    "comments": [
      "If you make your machine look like a malware execution sandbox, a lot of malware will terminate to avoid being analyzed. This is just part of the cat and mouse game.reply",
      "Most windows servers are virtualised these days so I'm not sure this would work anymore. It might look at other indicators thoughreply",
      "Put VirtualBox strings in your firmware :)reply",
      "Yes, and don't forget to install the VirtualBox guest extensions in your host machine to make it looks even more like a VM!reply",
      "Is there any downside to unironically doing this? Seems like it'd actually work.reply",
      "It\u2019s not much harder to just harden your system to not be vulnerable in the first place, and that protects your from a lot more.reply",
      "Agreed - like using a non admin account.reply",
      "How does that protect against ransomware?reply",
      "Limits the blast radius to only the files that the more limited user has write access to.reply",
      "Wikipedia's page on \"just intonation\" is, oddly, about music.reply"
    ],
    "link": "https://krebsonsecurity.com/2021/05/try-this-one-weird-trick-russian-hackers-hate/",
    "first_paragraph": "In a Twitter discussion last week on ransomware attacks, KrebsOnSecurity noted that virtually all ransomware strains have a built-in failsafe designed to cover the backsides of the malware purveyors: They simply will not install on a Microsoft Windows computer that already has one of many types of virtual keyboards installed \u2014 such as Russian or Ukrainian. So many readers had questions in response to the tweet that I thought it was worth a blog post exploring this one weird cyber defense trick.The Commonwealth of Independent States (CIS) more or less matches the exclusion list on an awful lot of malware coming out of Eastern Europe.The Twitter thread came up in a discussion on the ransomware attack against Colonial Pipeline, which earlier this month shut down 5,500 miles of fuel pipe for nearly a week, causing fuel station supply shortages throughout the country and driving up prices. The FBI said the attack was the work of DarkSide, a new-ish ransomware-as-a-service offering that says"
  },
  {
    "title": "Using the Internet without IPv4 connectivity (jamesmcm.github.io)",
    "points": 254,
    "submitter": "jmillikin",
    "submit_time": "2025-06-29T08:23:40 1751185420",
    "num_comments": 112,
    "comments_url": "https://news.ycombinator.com/item?id=44411273",
    "comments": [
      "Slightly misleading title, this is more \u201cgetting to the IPv4 internet via an IPv6 tunnel through a VPS\u201d. Also just called 4in6.Interesting nonetheless!We find at our ISP that if we break something with IPv4 we experience a very different type of support issue to if we break IPv6. Breaking v4 results in, broadly, a pretty hard \u201cdown\u201d state. While folks are unhappy, it is at least simple. Breaking v6 results in weird, and a partial down, which manifests for the users as partial outages, slow starts due to fall back, etc. Especially if their gateways believe there is v6 when there isn\u2019t.reply",
      "When my IPv4 died last time, I noticed it mostly because Github didn't work anymore. These days, most consumer websites just work on IPv6. That said, people whose routers were only provisioned IPv4 DNS servers did have a full outage.If Microsoft would get off their incompetent assets already, my biggest concern would've been remembering the mDNS hostname I've assigned to my router so I could log in and see if IPv4 is back already.reply",
      "The POSIX bug tracker is not accessible over IPv6, either, because their AWS setup does not support it. The website administrators refused to fix this[1].[1] https://austingroupbugs.net/view.php?id=1623reply",
      "The Meta Quest software also sucks at this. You\u2019d expect an essentially new platform struggling with this. Valve is basically all IPv4 afaict too.Pretty annoying and lazy if you ask me.reply",
      "My ISP (TekSavvy) manages to semi regularly screw up ipv4 and what I notice is that \"big\" sites like Amazon, Google, Facebook, SO, etc all work as before, but it's the in-between sites, someone's blog on a search result, etc\u2014 that's the stuff that breaks.reply",
      "It's easy enough to port forward v6 on some server to v4 GitHub - i'm doing it right now but can't remember the address. Think there's any demand for this, considering you can save $0.50-$2 per month per server by not having v4?reply",
      "There's certainly a long tail of IPv4, but the last time IPv4 broke at home, my wife didn't even notice since Google, Facebook, Apple/iCloud, and most CloudFlare-hosted properties all still worked over IPv6.reply",
      "GitHub is definitely a part of that long tail.reply",
      "Mirrors my experience. IPv6 issues are frustratingly hard to triage and reproduce, lots of \u201cworks on my machine\u201d etc.reply",
      "I think it's because of all of those transition mechanisms and fallback code added over the years. IPv6 fails the same way IPv4 does, but because of the terrible bullshit ISPs do to IPv6 connections, you end up with tons of software triggering obscure timeouts and fallback mechanisms that lead to a system of almost working networking code.If the absence of IPv6 would've been treated the same way absence of IPv4 is, troubleshooting would've become a lot clearer. In fact, it probably would've been easier because ISPs can't just ignore and disable ICMP on IPv6 so you can actually get a hunch where in the network the problem is rather than seeing traffic vanish into the void.reply"
    ],
    "link": "https://jamesmcm.github.io/blog/no-ipv4/",
    "first_paragraph": "A few days ago my ISP broke the IPv4 connectivity from my router after a\npower cut. Fortunately IPv6 connectivity still worked fine, but only a\nsmall fraction of websites were accessible.In this post\nI'll cover how Linux, WireGuard, and Hetzner came to the rescue - keeping the whole internet usable\nwith only an IPv6 connection.Opinions expressed are solely my own and do not express the views or opinions of my employer.One morning I woke up with no power, and noticed the breakers had tripped. After\nresetting them, everything went back to normal - except I couldn't\nconnect to GitHub and many other websites.During the process of contacting my ISP, I realised the issue was only\nwith IPv4 servers. I could connect fine to IPv6 servers - and this\nexplained why Google and Meta worked fine, but many websites\ndidn't. ping -6 and traceroute on both my machine and the router's\ndiagnostic page confirmed this immediately. It seems this was an issue\nwith the Carrier Grade NAT (CG-NAT),\nand this is wh"
  },
  {
    "title": "Error handling in Rust (felix-knorr.net)",
    "points": 95,
    "submitter": "emschwartz",
    "submit_time": "2025-06-29T20:28:25 1751228905",
    "num_comments": 83,
    "comments_url": "https://news.ycombinator.com/item?id=44416157",
    "comments": [
      "I'm a recent snafu (https://docs.rs/snafu/latest/snafu/) convert over thiserror (https://docs.rs/thiserror/latest/thiserror/). You pay the cost of adding `context` calls at error sites but it leads to great error propagation and enables multiple error variants that reference the same source error type which I always had issues with in `thiserror`.No dogma. If you want an error per module that seems like a good way to start, but for complex cases where you want to break an error down more, we'll often have an error type per function/struct/trait.reply",
      "I disagree that the status quo is \u201cone error per module or per library\u201d. I create one error type per function/action. I discovered this here on HN after an article I cannot find right now was posted.This means that each function only cares about its own error, and how to generate it. And doesn\u2019t require macros. Just thiserror.reply",
      "> I disagree that the status quo is \u201cone error per module or per library\u201d.It is the most common approach, hence, status quo.> I create one error type per function/action. I discovered this here on HN after an article I cannot find right now was posted.I like your approach, and think it's a lot better (including for the reasons described in this article). Sadly, there's still very few of us taking this approach.reply",
      "I thought I was a pedantic non-idiomatic weirdo for doing this. But it really felt like the right way---and also that the language should make this pattern much easier.reply",
      "The \"status quo\" way erodes the benefit of Rust's error system.The whole point (in my mind at least) of type safe errors is to know in advance all if the failure modes of a function. If you share an error enum across many functions, it no longer serves that purpose, as you have errors that exist in the type but are never returned by the function.It would be nice if the syntax made it easier though. It's cumbersome to create new enums and implement Error for each of them.reply",
      "> also that the language should make this pattern much easierOpen sum types? I\u2019m on the fence as to whether they should be inferrable.reply",
      "I suspect you're referring to this article, which is a good read indeed: https://mmapped.blog/posts/12-rust-error-handlingreply",
      "With that scheme, what about propagating errors upwards? It seems like you have to wrap all \"foreign\" error types that happen during execution with an explicit enum type.For example, let's say the function frobnicate() writes to a file and might get all sorts of file errors (disk full, no permissions, etc.). It seems like those have to be wrapped or embedded, as the article suggests.But then you can't use the \"?\" macro, I think? Because wrapping or embedding requires constructing a new error value from the original one. Every single downstream error coming from places like the standard library has to go through a transformation with map_err() or similar.reply",
      "\"?\" call \"into()\" automatically, which covers simple wrapping.reply",
      "It\u2019s a nice, well-written and well-reasoned article, and yet after shoveling through all the boilerplate it offers as the solution I can\u2019t help but \u201cWTF WTF WTF ...\u201d[1].[1] https://danluu.com/wat/reply"
    ],
    "link": "https://felix-knorr.net/posts/2025-06-29-rust-error-handling.html",
    "first_paragraph": "On Error Handling in Rust2025-06-29On Error Handling in Rust\nThe current standard for error handling, when writing a crate, is to define\none error enum per module, or one for the whole crate\nthat covers all error cases that the module or crate\ncan possibly produce, and each public function that returns a Result will use\nsaid error enum.\n\nThis means, that a function will return an error enum, containing error variants that\nthe function cannot even produce. If you match on this error enum, you will\nhave to manually distinguish which of those variants are not applicable in\nyour current scope, based on the documentation of the function (and who reads that anyway? /s).\nThe problem with the status quo\nWhat makes Rust so great, is the ability to express requirements via the type\nsystem in a way that makes it very hard for you to violate them, and yet, we\ncollectively decided to create these huge error-enums. I completely understand\nwhere this is coming from. Defining an extra error enum for e"
  },
  {
    "title": "Commodore acquired for a 'low seven figure' price \u2013 CEO from retro community (tomshardware.com)",
    "points": 33,
    "submitter": "amichail",
    "submit_time": "2025-06-29T23:03:07 1751238187",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44417417",
    "comments": [
      "Discussion yesterday (92 points, 44 comments) https://news.ycombinator.com/item?id=44408459reply",
      "If they can sell me something for $500 or less that will let me shove in original cartridges or floppy disks, I am cash in hand.  If they can\u2019t, they go away.reply",
      "Would be cool to have a C64-inspired line of Linux laptops with a custom C64-themed distro of Linux, rock-solid drivers, and an app store of well-tested applications.reply"
    ],
    "link": "https://www.tomshardware.com/video-games/retro-gaming/commodore-acquired-for-a-low-seven-figure-price-new-acting-ceo-comes-from-the-retro-community",
    "first_paragraph": "While funding is being organized, TechTuber 'Peri Fratic' ropes in lots of big Commodore names from yesteryear to build new hope.\nWhen you purchase through links on our site, we may earn an affiliate commission. Here\u2019s how it works.\nYouTube\u2019s Christian \u2018Peri Fratic\u2019 Simpson claims to be \u201cthe acting CEO of Commodore Corporation.\u201d The surprise Commodore buyout deal hinted at three weeks prior, seems to have been put into motion. In a new episode on the rebranded Retro Recipes x Commodore channel, Peri Fratic provides details of the seven-figure deal, outlines his vision for the company, and lists a growing number of ex-Commodore luminaries who will be joining him to relaunch the beloved brand. Last and definitely not least, the video ends in a signature tease \u2013 this time it\u2019s a tease for new hardware.Concerning the deal, a key point from the above video is that Peri Fratic \u201csigned a share purchase agreement\u201d with the previous owners of Commodore Corporation. It has been agreed that a pri"
  },
  {
    "title": "Anticheat Update Tracking (not-matthias.github.io)",
    "points": 10,
    "submitter": "not-matthias",
    "submit_time": "2025-06-29T21:06:57 1751231217",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://not-matthias.github.io/posts/anticheat-update-tracking/",
    "first_paragraph": "A few years ago when I was into reverse engineering and binary analysis (and game modding), I did a lot of research into anticheats work. I was curious about tracking their updates, since that would allow me to:Know when a new version is releasedUnderstand what changes were madeUse older versions for research purposesSo I ended up researching different ways on how to track updates of various anticheats. Some of them are already very well documented, while others haven't been explored much. This post will summarize my findings and outline how they work.EasyAntiCheatEasyAntiCheat is widely recognized as one of the most advanced anticheats, and is used in many popular games like Rust, Fortnite, Apex Legends, and more.Prior to the acquisition by Epic Games, EAC was using their own CDN to distribute updates: https://download.eac-cdn.com/api/v1/games/{game_id}/client/{system}/download/?uuid=1239688.game_id: unique identifier for each game (e.g. 154 for Apex Legends)system: target platform/sy"
  },
  {
    "title": "The Medley Interlisp Project: Reviving a Historical Software System [pdf] (interlisp.org)",
    "points": 78,
    "submitter": "pamoroso",
    "submit_time": "2025-06-29T14:45:10 1751208310",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=44413574",
    "comments": [
      "They have an informative website and an online emulator at https://interlisp.org/software/access-online/reply",
      "Retro lisp machines are cool. Kudos to the team. Love it.That said\u2026 we need the \u201clisp machine\u201d of the future more than we need a recreation.reply",
      "What does a Lisp Machine of the future look like?There is Mezzano [1] as well as the Interlisp project described in the linked paper and another project resurrecting the LMI software.[1] https://github.com/froggey/Mezzanoreply",
      "I love this quote (from Interlisp-D: Overview and Status):\"Interlisp is a very large software system and large software systems are not easy to construct. Interlisp-D has on the order of 17,000 lines of Lisp code, 6,000 lines of Bcpl, and 4,000 lines of microcode.\"So large. :)http://www.softwarepreservation.net/projects/LISP/interlisp-...reply",
      "Same thing could probably be some 200k or more LoC in enterprise Java.reply",
      "A better URL:https://www.softwarepreservation.org/projects/LISP/interlisp...reply"
    ],
    "link": "https://interlisp.org/documentation/young-ccece2025.pdf",
    "first_paragraph": ""
  }
]