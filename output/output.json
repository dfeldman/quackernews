[
  {
    "title": "NeuralSVG: An Implicit Representation for Text-to-Vector Generation (sagipolaczek.github.io)",
    "points": 347,
    "submitter": "lnyan",
    "submit_time": "2025-01-08T18:16:37 1736360197",
    "num_comments": 38,
    "comments_url": "https://news.ycombinator.com/item?id=42636873",
    "comments": [
      "This is excellent!I think the utility of generating vectors is far, far greater than all the raster generation that's been a big focus thus far (DALL-E, Midjourney, etc). Those efforts have been incredibly impressive, of course, but raster outputs are so much more difficult to work with. You're forced to \"upscale\" or \"inpaint\" the rasters using subsequent generative AI calls to actually iterate towards something useful.By contrast, generated vectors are inherently scalable and easy to edit. These outputs in particular seem to be low-complexity, with each shape composed of as few points as possible. This is a boon for \"human-in-the-loop\" editing experiences.When it comes to generative visuals, creating simplified representations is much harder (and, IMO, more valuable) than creating highly intricate, messy representations.\n \nreply",
      "Have you looked at https://www.recraft.ai/ recently? The image quality of their vector outputs seems to have gotten quite good, although you obviously still wouldn't want to try to generate densely textured or photographic-like images like Midjourney excels at. (For https://gwern.net/dropcap last year or before, we had to settle for Midjourney and create a somewhat convoluted workflow through Recraft; but if I were making dropcaps now, I think the latest Recraft model would probably suffice.)\n \nreply",
      "There is also the possibility for using these images as guidance for rasterization models.  Generate easily manipulatable and composible images as a first stage then add detail once the image composition is satisfactory.\n \nreply",
      "My little project for the highly intricate, messy representation ;) https://github.com/KodeMunkie/shapesnap (it stands on the backs of giants, original was not mine). It's also available on npm.\n \nreply",
      "Ah, we should be friends!I'm not sure what else to add, except that these are exactly the thoughts I think, and it used to feel lonely ;)\n \nreply",
      "I am a huge fan of this type of incremental generative approach. Language isn\u2019t precise enough to describe a final product, so generating intermediate steps is very powerful.I\u2019d also like to see this in music generation. Tools like Suno are cool but I would much rather have something that generates MIDIs and instrument configurations instead.Maybe this is a good lesson for generative tools. It\u2019s possible to generate something that\u2019s a good starting point. But what people actually want is long tail, so including the capability of precision modification is the difference between a canned demo and a powerful tool.> Code coming soonThe examples are quite nice but I have no idea how reproducible they are.\n \nreply",
      "I\u2019d also like to see this in music generation. Tools like Suno are cool but I would much rather have something that generates MIDIs and instrument configurations instead.Sounds like you're looking for something like https://www.aiva.ai\n \nreply",
      "Honestly that site feels like they have a database of midis tagged by genre and pick them out randomly. It\u2019s totally different from their demo song.I guess I\u2019m hoping for something better. It\u2019s also closed source, the web ui doesn\u2019t have editing functionality, and the output is pretty disjointed. Maybe if I messed around with it enough the result would be decent.\n \nreply",
      "MIDI isn't enough. I want MIDI + filters, plus separate voice and custom sounds tracks.\n \nreply",
      "microtonal midi would be super awesome\n \nreply"
    ],
    "link": "https://sagipolaczek.github.io/NeuralSVG/",
    "first_paragraph": "\r\n                            Vector graphics are essential in design, providing artists with a versatile medium for creating resolution-independent\r\n                             and highly editable visual content. Recent advancements in vision-language and diffusion models have fueled interest \r\n                             in text-to-vector graphics generation. However, existing approaches often suffer from over-parameterized outputs or \r\n                             treat the layered structure --- a core feature of vector graphics --- as a secondary goal, diminishing their practical \r\n                             use. Recognizing the importance of layered SVG representations, we propose NeuralSVG, an implicit neural representation\r\n                              for generating vector graphics from text prompts. Inspired by Neural Radiance Fields (NeRFs), NeuralSVG encodes the \r\n                              entire scene into the weights of a small MLP network, optimized using Score D"
  },
  {
    "title": "A Supermarket in California (1955) (poetryfoundation.org)",
    "points": 24,
    "submitter": "squircle",
    "submit_time": "2025-01-08T23:29:06 1736378946",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=42639691",
    "comments": [
      "Apparently Mr Ginsberg was a friend to young men. And not in a good way:https://chroniclesmagazine.org/web/allen-ginsberg-pedophilia...\n \nreply",
      "Wonderful. And another Ginsberg Berkeley poem, maybe my favorite:https://www.poetryfoundation.org/poems/49304/sunflower-sutra\n \nreply",
      "Nice. I was vibing to this poem you shared earlier:\nhttps://news.ycombinator.com/item?id=42639593(I'm not familiar with Carl Sandburg and appreciate the introduction.)\n \nreply",
      "Go Bears\n \nreply"
    ],
    "link": "https://www.poetryfoundation.org/poems/47660/a-supermarket-in-california",
    "first_paragraph": ""
  },
  {
    "title": "Salesforce will hire no more software engineers in 2025, says Marc Benioff (salesforceben.com)",
    "points": 162,
    "submitter": "lordswork",
    "submit_time": "2025-01-08T22:56:27 1736376987",
    "num_comments": 166,
    "comments_url": "https://news.ycombinator.com/item?id=42639417",
    "comments": [
      "Current SFDC software engineer - this is just cover for a widespread engineering hiring freeze since the layoffs in January 2023. There's a ton of pressure to control costs after the near shareholder revolt that caused the layoffs.The public nature of the announcement is certainly marketing for our AI offerings as well, but at this point I think most engineers are just worried there will be additional layoffs, in the event management cannibalizes product for short term stock gains again.\n \nreply",
      "Ah, the toxic env, I'm too familiar with it. Quarterly layoffs, perks gone, more RTO, but execs can still travel around lavishly.\n \nreply",
      "Thanks for sharing some inside baseball.This definitely reads more like a \u201ceverything is going AWESOME ignore anything else you hear about us\u201d PR-ese.I read this as messaging to shareholders more than anyone else (and sure some word-spreading about the product).\n \nreply",
      "2$ per interactions (negotiable to 1$) btw\n \nreply",
      "I really don't care generally if a business feels the need to hype things like this - but these kinds of announcements have downstream effects on salaries and job availability far outside a company like this. Other management/C-suites are gonna hear \"we replaced all our engineers with AI!\" and similarly slow down hiring/etc. This is already being seen throughout the industry, I am aware, but such a visible player making an announcement like this, while it almost certainly is just marketing, drives me a little crazy because it indirectly affects a lot of people.\n \nreply",
      "Well to the extent that this happens (I agree it probably has this effect) that would benefit them anyway and I suspect they know about it.\n \nreply",
      "Sure, but it's either true or it's not.  If they fall for the hype, the company will pay the price for it eventually.(And it's not true - if you could \"replace engineers with AI\" we engineers would have already done it and be relaxing while AI does our work)\n \nreply",
      "There is no company-wide hiring freeze, but there\u2019s teams/products/etc\u2026 who have them.There\u2019s other things going on though this will help spin.There\u2019s no way that productivity metric includes the last 2-4 months.\n \nreply",
      "Looks like it. The only other explanation is they just stopped investing in other products and focused on Agents, thus no need for loads more of engineering.No way in the world they got 30% gains. 5 maybe realistically\n \nreply",
      "Their ultimate agent product strategy feels like reducing cost of sales... by automating salespeople.I have doubts that will ever happen, but who knows?Sales folks are highly-compensated, so even making a few of them redundant (or making existing salespeople more efficient) would be a big win for companies (Salesforce's customers).\n \nreply"
    ],
    "link": "https://www.salesforceben.com/salesforce-will-hire-no-more-software-engineers-in-2025-says-marc-benioff/",
    "first_paragraph": ""
  },
  {
    "title": "Cracking a 512-bit DKIM key for less than $8 in the cloud (dmarcchecker.app)",
    "points": 570,
    "submitter": "awulf",
    "submit_time": "2025-01-08T12:32:34 1736339554",
    "num_comments": 295,
    "comments_url": "https://news.ycombinator.com/item?id=42633501",
    "comments": [
      "Me writing over 14 years ago: https://blog.jgc.org/2010/06/facebooks-dkim-rsa-key-should-b... This was doable 14 years ago for 512-bit keys.\n \nreply",
      "For a number of years it was (non-officially) thought to be a feature to use weak DKIM keys. Some folks argued that short keys allowed you to preserve deniability, since DKIM signatures would only be short-lived and nobody would be able to use DKIM signatures to prove that any email was authentic. (I\u2019m not saying that this is why most companies used short keys, just that there was a general view that short keys were not all bad.)DKIM deniability is a particular hobbyhorse of mine [1]. These short keys are obviously not the way to achieve it, but I view this kind of thing as a result of the muddled thinking that\u2019s been associated with DKIM and the community\u2019s lack of desire to commit to the implications of an all-email signing mechanism.[1] https://blog.cryptographyengineering.com/2020/11/16/ok-googl...\n \nreply",
      "I forget where but someone proposed regularly rotating your DKIM key and publishing old keys for deniability.  So you can still use strong keys and provide a level of deniability.\n \nreply",
      "Doing this only provides deniability in public. If this was brought to a court there are enough server logs to build out if that DKIM record was valid along with a number of DNS history providers.\n \nreply",
      "As if courts care about any of that. They'll just ask the witness \"did you send this email\"\n \nreply",
      "Counter-example: I've used DKIM as evidence in court.\n \nreply",
      "Counter-example example: I've been an expert witness in court to prove an email was a forgery; using DKIM.\n \nreply",
      "It'd be funny if we were working together and just telling the same story behind our aliases.\n \nreply",
      "My case was a family court dispute where one parent forged an email from the other parent about the child's care. It was a pretty wild case. After that, I was pretty convinced some people are just evil.\n \nreply",
      "That would be a counter-counterexample, wouldn't it?\n \nreply"
    ],
    "link": "https://dmarcchecker.app/articles/crack-512-bit-dkim-rsa-key",
    "first_paragraph": "In our study on the SPF, DKIM, and DMARC records of the top 1M websites, we were surprised to uncover more than 1,700 public DKIM keys that were shorter than 1,024 bits in length. This finding was unexpected, as RSA keys shorter than 1,024 bits are considered insecure, and their use in DKIM has been deprecated since the introduction of RFC 8301 in 2018.Driven by curiosity, we decided to explore whether we could crack one of these keys. Our goal was to extract the private key from a public RSA key, enabling us to sign emails as if we were the original sender. We were also curious to see whether emails signed with this compromised key would pass the DKIM verification checks of major email providers like Gmail, Outlook.com, and Yahoo Mail, or if they would outright refuse to verify a signature generated with such a short key.For our experiment, we chose redfin.com after discovering a 512-bit RSA public key at key1._domainkey.redfin.com (now no longer available):The public key, located in "
  },
  {
    "title": "You don't have to pay the Microsoft 365 price increase (consumer.org.nz)",
    "points": 11,
    "submitter": "lancewiggs",
    "submit_time": "2025-01-09T00:25:39 1736382339",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.consumer.org.nz/articles/you-don-t-have-to-pay-the-microsoft-365-price-increase",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: Atlas of Space (atlasof.space)",
    "points": 347,
    "submitter": "pieix",
    "submit_time": "2025-01-08T14:47:34 1736347654",
    "num_comments": 84,
    "comments_url": "https://news.ycombinator.com/item?id=42634787",
    "comments": [
      "This is incredibly well done. Thank you!Love that it works so seamlessly on mobile. I clicked on it expecting it to be almost impossible to useInstead, I was able to easily navigate everything without getting lostAlso, the speeding up/down controls are excellent, very useful\n \nreply",
      "Well done! I could spend a long time on this.One minor suggestion: you should make the labels clickable instead of just the planets/stars. I found it difficult to click on a tiny pixel on screen.\n \nreply",
      "... also the orbits themselves ideally? Maybe I missed it but in looking at some of the larger orbits it was hard to zoom in and out to figure out what orbit went with what. It would have been nice to more easily click on the orbit.I really like it though.\n \nreply",
      "After 90s of playing I came back to add the same comment :)\n \nreply",
      "The project is amazing, thanks and congrats.A bit of an off-topic comment, I can't cease to be amazed by the quality of HTML apps we can build these days. I remember the days when rendering too many rows on a table could completely break the browser.\n \nreply",
      "Thank you and not off topic at all, I was thinking this the whole time I was working on this project. The modern browser is magic.\n \nreply",
      "This is very nice. I didn't know Pluto's orbit was more inclined than many of the others.It also gives me strong \"The Expanse\" vibes. Probably because there are so many orbital bodies shown that were mentioned in those books. I also learned that Pallas is an actual asteroid.\n \nreply",
      "Appreciate the comment! The Expanse and Paul McAuley's Quiet War series both get a lot of inspiration credit for this project. I tried to include every body that has some \"brand recognition\", whether from fiction or from real spacecraft missions. There are actually quite a few asteroids and comets that have been visited in real life \u2014 NASA, ESA, and JAXA have been doing amazing things in the Asteroid Belt over the past few decades.\n \nreply",
      "Where is the ring gate?\n \nreply",
      "It doesn't seem it is showing the tilt for Earth correct. When I zoom in for around now, the North Pole is in full sun rather than mid Winter. (I'm in Australia so I don't know if it is somehow using my local timezone wrongly)\n \nreply"
    ],
    "link": "https://atlasof.space/",
    "first_paragraph": ""
  },
  {
    "title": "I had to take down my course-swapping site or be expelled (linkedin.com)",
    "points": 324,
    "submitter": "jdkaim",
    "submit_time": "2025-01-08T21:27:12 1736371632",
    "num_comments": 170,
    "comments_url": "https://news.ycombinator.com/item?id=42638626",
    "comments": [
      "Update: I immediately took down my class project site after receiving yesterday\u2019s ultimatum. I still don\u2019t think the simple demo site violated the letter or spirit of the registration rules, but I took it down because I always want to operate in good faith.They followed up today to thank me for doing it, but also indicated that they were putting a hold on my account anyway. As a result, I am not going to be able to register for my final quarter and have been de facto expelled at the end of this quarter.Unless, that is, I agree to work on a comparable solution for the university focused on solving the underlying problem I was building HuskySwap for. They would presumably own the IP and were clear that I wouldn\u2019t be compensated. But it was implied that they would then remove the hold, allowing me to graduate.I really love UW and have had a wonderful time here. But this is so demoralizing.Update #2:I appreciate you guys for all of your advice.This platform was never intended to be monetized, and I am not planning to get a lawyer involved as I have faith that UW leadership will make it right in the end.I'm not planning to pursue this project at this point. If they came up to me at first with the offer to work with them it might be different, but the way they handled it makes me just want to walk away.\n \nreply",
      "> I am not planning to get a lawyer involved as I have faith that UW leadership will make it right in the end.All evidence so far indicates they will not make it right, but instead they may make it even worse. Your faith is wildly misplaced. Seriously, talk to a lawyer.Keep in mind, just because you seek advice from a lawyer doesn't mean you need to take legal action against the school. Talking to a lawyer is not an escalation; the school doesn't even need to know you consulted one. A lawyer will advise whether you should take legal action and any more amicable alternatives available before they do anything on your behalf.\n \nreply",
      "Just piling on here because upvotes are not visible. The one thing you can guarantee is that your good faith is not reciprocated by the university. Get a lawyer.To make it easier: it sounds like you're still registered. University of Washington offers Student Legal Services ( https://depts.washington.edu/slsuw/ ). Set up a referral with one of them and talk to them. Even if they're employees of the university and don't want to work with you to sue the university itself they may be able to give you good advice about how to proceed.\n \nreply",
      "It\u2019s a funny thought, but looks like a nonstarter:> SLS cannot represent a student when the opposing party is another UW-Seattle, Tacoma, or Bothell student or UW entity.\n \nreply",
      "OP please consider listening to this reply. Do not rely on an unaccountable bureaucracy to \"do the right thing.\" They don't.\n \nreply",
      "At least he'll learn this valuable lesson pretty young. It was fairly devastating to me by the time I learned it well into my 30's.\n \nreply",
      "Having seen what some other university administrations have done to darling students and innovators even just around such things as lab space, parent comment is right on the money.\n \nreply",
      "If you had managed to build this system during my time at UW, I know for a fact that I and dozens of other students would have happily paid hundreds of dollars to use your project. The class and reservation system there was (and presumably is?) incredibly broken.I remember literally the only way to get a spot reserved in some /mandatory/ courses was to find an upper classman with prioritized registration dates and a free schedule to hold the class for you. In you're in a frat, great. If you're a bit of an introvert that lives off campus, you're shit out of luck.I imagine UW is fully aware of this, I cant believe that it's still so much an issue that they felt the jeed to expell you for even having the gall to demo an idea. Absolutely appalling\n \nreply",
      "You may want to consult with a lawyer. This is starting to sound like extortion.\n \nreply",
      "100% this. You'd be surprised what kinds of problems go away when you mention your lawyer casually or you have a lawyer send a letter. Even if you don't get the right kind of lawyer right away, they might be able to recommend someone or tell you how to research the right kind of lawyer to get ahold of. Professionals are usually helpful about those kinds of things.Also get a second or third opinion. I've sometimes gotten different answers from different lawyers about our prospects of success on things we've called about.\n \nreply"
    ],
    "link": "https://www.linkedin.com/posts/jdkaim_github-jdkaimhuskyswap-huskyswap-project-activity-7282609173316415488-1jdb",
    "first_paragraph": "\n              Agree & Join LinkedIn\n            \n      By clicking Continue to join or sign in, you agree to LinkedIn\u201a\u00c4\u00f4s User Agreement, Privacy Policy, and Cookie Policy.\n    \n                CS @ UW | Prev @ GitHub\n            Welp, looks I might be getting expelled from the University of Washington.\n\u00ac\u2020\nAs many of you know, last quarter I built an initial version of HuskySwap for a class project. It was a simple app designed to help students find partners to trade spots in critical classes after they filled up. I\u201a\u00c4\u00f4m sure other people have pursued this kind of thing before, but there\u201a\u00c4\u00f4s no go-to solution at UW and I wanted to contribute something cool for everyone.\n\u00ac\u2020\nAt first it was a fun project to catch up to the latest versions of .NET and Angular with some practice implementing features around database abstraction, real-time chat, and the full stack challenges associated with things like role-based permissions. I was probably going to build it anyway, so it was great that I c"
  },
  {
    "title": "Fidget (mattkeeter.com)",
    "points": 355,
    "submitter": "todsacerdoti",
    "submit_time": "2025-01-08T14:30:58 1736346658",
    "num_comments": 41,
    "comments_url": "https://news.ycombinator.com/item?id=42634624",
    "comments": [
      "Hi, this is my project :)I particularly love this corner of CS because there's something for everyone \u2013 data structures and algorithms, low-level performance work, compilers, rendering / computer graphics, UI/UX for design tools, GPGPU programming, and more!I'll be answering questions in the threads as I see them, but feel free to connect on social media (https://mattkeeter.com/links/) or follow my blog's RSS feed for further updates (https://mattkeeter.com/atom.xml)\n \nreply",
      "Hi Matt,\nSince you're here I have a quick question. I did not do my homework so please excuse if that's too general or stupid.How does Fidget differ from libfive and Ao, functionality wise?Thanks in advance.\n \nreply",
      "Here's a quick list, off the top of my head:\"Ao\" was an early codename for libfive, so those are the same thing (at different stages of development).Fidget is written in Rust, versus C/C++ for libfive.  This makes it easier to use as a dependency (in Rust projects) and cross-compile to WebAssembly.  Also, I don't have to debug segfaults anymore, except when touching the raw assembly in the JIT.They both implement a similar set of algorithms (meshing, 2D and 3D rasterization).Fidget has the potential to be faster due to its JIT, and is faster for 2D / 3D rasterization.  (I suspect that the non-JIT interpreter is also faster at rasterization, for architectural reasons)libfive has more effort put into its meshing algorithms, so it does a better job of handling edge cases (heh).  I've heard reports that libfive is faster than Fidget at meshing, but haven't done much investigation.Fidget is not limited to 2D and 3D functions: it can be used wherever you want to quickly evaluation graphs of math, with arbitrary numbers of inputs and outputs.  libfive, on the other hand, is specialized to functions of the form f(x, y, z, *vars) -> v.Extremely in the weeds: if you know what libfive's \"feature\"-flavored evaluator is, Fidget doesn't have it.\n \nreply",
      "Neat!  I remember contributing the expression parser code for the Knoll et. al 2009 work that you cited in your SIGGRAPH paper.  That just rewrote a single user-friendly expression into nested function calls to our IA library in GLSL, without any sort of optimization.You've clearly taken things waaay farther.  Nicely done.\n \nreply",
      "Coincidentally I was just reading this other wonderful post from the author https://www.mattkeeter.com/projects/constraints/\n \nreply",
      "Hah, I actually wrote a similar constrain solver that uses Fidget's evaluation + differentiation!  This blog post was getting too long, so I'm going to write it up separately, but in the meantime:demo:\nhttps://mattkeeter.com/projects/fidget/constraintssource: https://github.com/mkeeter/fidget/blob/main/demos/constraint...docs on the solver: https://docs.rs/fidget/latest/fidget/solver/\n \nreply",
      "You might be interested in http://omrelli.ug/g9/gallery/ too\n \nreply",
      "Oh wow. This would have been incredibly useful to have found when I was writing my own implicit-surface drawer. My approach is similar in some ways (interval arithmetic), and different in others (not as optimized, I directly produce GLSL for a fragment shader).Honestly I'm tempted to just toss everything away and replace it with (a reimplementation of) this. Dunno if I should be happy or sad about that.\n \nreply",
      "Happy! You work in a field where you can both make your own tools and use tools others have created. Maybe you can steal some of his ideas and use them, or use his stuff and contribute to the project. either way, rad.\n \nreply",
      "> libfive is 40K lines of mostly C++, and is extremely challenging to hack on, even as the original author. It's also frustrating to touch: if it's been a few months since I last compiled it, it's inevitable that the build will have broken, and I'll have to mess with CMake for 10 minutes to unbreak it.I'm a bit shocked at this. Is build breakage that much of an issue? Is this \"we are merging in patches and then fixing them up later\"? Why would something not being touched break?\n \nreply"
    ],
    "link": "https://www.mattkeeter.com/projects/fidget/",
    "first_paragraph": "Fidget is a library for representing,\ncompiling, and evaluating large-scale math expressions, i.e. hundreds or\nthousands of arithmetic clauses.  It's mainly designed as a backend for\nimplicit surfaces, but the\nlibrary is flexible enough for many different uses!\nTry the demo\nImplicit surfaces are expressions of the form\n$f(x, y, z) \\rightarrow d$\nreturning a single distance value $d$.\nIf that value is positive, then the point $(x, y, z)$ is outside the model;\nif it's negative, then the point is inside the model.For example, a sphere of radius 1 can be expressed\nas$$ f(x, y, z) = \\sqrt{x^2 + y^2 + z^2} - 1 $$By evaluating the expression at many points in space and checking its sign, we\ncan render this function into an image.  In this example, we'll render a\nheightmap, where filled-in voxels are colored based on their distance to the\ncamera:Fidget focuses on closed-form implicit surfaces, which build their\nexpressions out of basic arithmetic operations. This is in contrast with more\nflexi"
  },
  {
    "title": "Operating System in 1,000 Lines \u2013 Intro (operating-system-in-1000-lines.vercel.ap...)",
    "points": 760,
    "submitter": "ingve",
    "submit_time": "2025-01-08T07:18:50 1736320730",
    "num_comments": 84,
    "comments_url": "https://news.ycombinator.com/item?id=42631873",
    "comments": [
      "Author here.I wrote this book so you can spend a boring weekend writing an operating system from scratch. You don\u2019t have to write it in C - you can use your favorite programming language, like Rust or Zig.I intentionally made it not UNIX-like and kept only the essential parts. Thinking about how the OS differs from Linux or Windows can also be fun. Designing an OS is like creating your own world\u2014you can make it however you like!BTW, you might notice some paragraphs feel machine-translated because, to some extent, they are. If you have some time to spare, please send me a PR. The content is written in plain Markdown [1].Hope you enjoy :)[1] https://github.com/nuta/operating-system-in-1000-lines/tree/...\n \nreply",
      "> Designing an OS is like creating your own worldOr like building your temple so you can talk to God directly\n \nreply",
      "TempleOS: https://en.m.wikipedia.org/wiki/TempleOS\n \nreply",
      "Great resource, thanks for sharing.I thought the written text was very high quality and didn't show many of the usual tells of a non-native writer. Could you share some details of how you used AI tools to help write it?\n \nreply",
      "Are you planning to also provide an English translation of your microkernel book? That sounds very interesting...\n \nreply",
      "How does your book compare with the classic \"Operating systems design and implementation\" by Andrew S. Tanenbaum and Albert S. Woodhull implementing MINIX?\n \nreply",
      "Hi OP, this looks super cool. I remember hearing about this (https://www.linuxfromscratch.org/) many years ago but have never done it.Curious, what are the prerequisites for this? Do I have to know about how kernels work? How memory management, protection rings or processes are queued? Some I'd like to definitely learn about.\n \nreply",
      "LFS is about building a Linux distribution from scratch (i.e. using the Linux kernel.)The book in question is about how to build your own operating system (i.e. a non-Linux) kernel from scratch.> We'll implement basic context switching, paging, user mode, a command-line shell, a disk device driver, and file read/write operations in C. Sounds like a lot, however, it's only 1,000 lines of code!\n \nreply",
      "Did you post to OSDev?\n \nreply",
      "This is fantastic. Thank you so much for writing this.\n \nreply"
    ],
    "link": "https://operating-system-in-1000-lines.vercel.app/en",
    "first_paragraph": "Hey there! In this book, we're going to build a small operating system from scratch, step by step.You might get intimidated when you hear OS or kernel development, the basic functions of an OS (especially the kernel) are surprisingly simple. Even Linux, which is often cited as a huge open-source software, was only 8,413 lines in version 0.01. Today's Linux kernel is overwhelmingly large, but it started with a tiny codebase, just like your hobby project.We'll implement basic context switching, paging, user mode, a command-line shell, a disk device driver, and file read/write operations in C. Sounds like a lot, however, it's only 1,000 lines of code!One thing you should remember is, it's not as easy as it sounds. The tricky part of creating your own OS is debugging. You can't do printf debugging until you implement it. You'll need to learn different debugging techniques and skills you've never needed in application development. Especially when starting \"from scratch\", you'll encounter ch"
  },
  {
    "title": "Steve Langasek, One of Ubuntu Linux's Leading Lights, Has Died (thenewstack.io)",
    "points": 73,
    "submitter": "CrankyBear",
    "submit_time": "2025-01-08T23:13:08 1736377988",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=42639563",
    "comments": [
      "45 years :(The article says illness, but which illness?\n \nreply",
      "https://discourse.ubuntu.com/t/remembering-and-thanking-stev...\n \nreply",
      "So young.. It's sad\n \nreply",
      "Sad news. He did a lot for Debian and Ubuntu.\n \nreply"
    ],
    "link": "https://thenewstack.io/steve-langasek-one-of-ubuntu-linuxs-leading-lights-has-died/",
    "first_paragraph": ""
  },
  {
    "title": "Bringing SerenityOS to real hardware, one driver at a time (sdomi.pl)",
    "points": 182,
    "submitter": "LorenDB",
    "submit_time": "2025-01-08T16:54:39 1736355279",
    "num_comments": 59,
    "comments_url": "https://news.ycombinator.com/item?id=42636086",
    "comments": [
      "Read somewhere that it is relatively easy to adapt NetBSD's drivers into a custom kernel... maybe Serenity folks can go that way? Device drivers are huge obstacle for any fledgling OS.\n \nreply",
      "One of Serenity's philosophical decisions is that as much as possible they build everything themselves from scratch. So even if NetBSD's drivers would be easy to adapt and have a compatible license they probably wouldn't go that route and would instead write their own drivers.\n \nreply",
      "> Device drivers are a huge obstacle for any fledgling OS.I've wondered if new/hobby OSes would fare better by starting out targeting a popular single board computer like a raspberry pi? A mostly fixed set of hardware to make/get drivers for and test your system on.\n \nreply",
      "I think the path Serenity took is the better one. Initially targeting QEMU as the single supported platform. You have the same advantage as far as targeting a single platform for drivers but contributors don't need to buy additional hardware, can develop using the platform/tools they are accustomed to, starting instances is faster than rebooting hardware and no need to deal with the issues of remotely debugging. Targeting a specific SBC as a 2nd platform after a certain level of stability is reached is probably a good idea.\n \nreply",
      "That implies AArch64 support which many hobby OSes don't have, usually because the introductory osdev material is written largely for x86.But yes, raspi is a good platform if you are targeting arm.As I'm also designing an OS, my biggest piece of advice for anyone seriously considering it is to target two archs at once, in parallel. Then adding a third becomes much easier.\n \nreply",
      "Raspberry Pi has a bizarre boot sequence and bringup process, much of it which is not open and not implemented in open source code.  I think it's probably not a great platform for this sort of thing, despite it being decently well-documented.(And even then, its USB controller, for example, has no publicly-available datasheet.  If you want to write your own driver for it, you have to read the Linux driver source and adapt it for your needs.)\n \nreply",
      "QEMU is a fixed set of hardware. And far easier to target than a Pi.The founder of SerenityOS created it as therapy and a pure \u201chappiness\u201d project. I am not sure actually using it was a real goal. So, he did the stuff he found interesting. That led him to writing display servers and web engines and crypto libraries and away from \u201creal\u201d drivers. He wrote his own C/C++ standard libraries and userland utilities but only enough driver code to make QEMU happy. It only ever ran in a VM on his Linux desktop. In the end, he found the web browser more interesting than the OS it was created for.Very different project from Linux where what Linus wanted was an OS for his own computer. Linus was happy to leave the userland to others and still sticks to the kernel even now.\n \nreply",
      "I've also argued in favor of that; I don't actually like Pis personally, but they're a super common, cheap enough, easy to acquire system and that's huge.\n \nreply",
      "Raspberry Pi's are highly proprietary for hardware blobs...\n \nreply",
      "Well unless they want to target PowerPC and make interested parties buy a Raptor Talos workstation what else is open enough for you? (Actually I would support this) Are there RISCV systems that are blobless?\n \nreply"
    ],
    "link": "https://sdomi.pl/weblog/23-serenityos-realhw/",
    "first_paragraph": "Many moons ago, around the time when Andreas formally resigned from being Serenity's BDFL, I decided that I want to get involved in the project more seriously. Looking at it from a perspective of \"what do I not like about this (codebase)\", the first thing that came to mind was that it runs HERE points at QEMU and not THERE points at real hardware. Obvious oversight, let's fix it.First thing I looked at was UEFI support, but there's an ongoing effort by spholz which I didn't want to hijack. For my purposes, kernel from the master branch successfully boots from GRUB running on a TianoCore UEFI runtime, so this is fine.Debugging the OS on the same machine as your main isn't fun, and I wanted to focus my efforts on porting it to something I'd actually want to daily drive - which limited me to recent-ish hardware. I went onto Allegro (polish online auction site) and searched for the cheapest Chromebook I could find. After discarding the literal cheapest option (due to it being a fire hazard"
  },
  {
    "title": "28h Days: year 1 update (sidhion.com)",
    "points": 6,
    "submitter": "HAMSHAMA",
    "submit_time": "2025-01-08T23:37:54 1736379474",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://sidhion.com/blog/28h_days_update_1/",
    "first_paragraph": ""
  },
  {
    "title": "Multiplicative Infinitesimals (github.com/ericson2314)",
    "points": 50,
    "submitter": "Ericson2314",
    "submit_time": "2025-01-08T19:58:22 1736366302",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=42637853",
    "comments": [
      "I find infinitesimals more intuitive than the formal 'limits-based' approach. I'm currently studying my old degree material but using a fairly interesting book:\"Full Frontal Calculus: An Infinitesimal Approach\" by Seth Braver.I like his readable style. His poetic intro finally gave me an intuition why infinitesimals might be useful, compared to the good old reals:\"Yet, by developing a \"calculus of infinitesimals\" (as it was known for two centuries), mathematicians got great insight into `real` functions, breaking through the static algebraic ice shelf to reach a flowing world of motion below, changing and evolving in time.\"\n \nreply",
      "If you are going to use infinitesimals, though, it requires some additional doing for notation.  The standard notation for higher-order derivatives (and partial derivatives) needs to be modified in order for them to work (but they do work great once you do this).Instead of the second derivative being \"d^2y/dx^2\" it is \"(d^2y/dx^2) - (dy/dx)(d^2x/dx^2)\" and the differentials can be manipulated just like any other entity.  Additionally, you can infer this notation by simply applying the quotient rule to the first derivative (which is a quotient of infinitesimals).See more:\"Extending the Algebraic Manipulability of Differentials\" ( 10.48550/arXiv.1801.09553 )\"Total and Partial Differentials as Algebraically Manipulable Entities\" ( \n10.48550/arXiv.2210.07958 )\n \nreply",
      "It's a tradeoff. You can have excluded middle in your logic or infinitestimals in your extended reals. For mathematicians dealing with all the wild stuff coming out of studying infinities in the calculus, getting rid of excluded middle was a non-starter, so the system based on limits was created. If non-constructible proofs via contradiction aren't useful to you, as in physics, then you can certainly use infinitesimals.\n \nreply",
      "That's interesting - I read something similar in Bell's 'A primer of infinitesimal analysis' where he said the price for 'Smooth World' infinitestimals is giving up the Law of Excluded Middle (LEM).Don't really understand why (he said something about unconstrained use of LEM allows discontinuous functions...)Is there any link to Brouwer's Intuitionism where LEM is rejected too (?!)Ah it's all an interesting can of worms...\n \nreply",
      "https://ncatlab.org/nlab/show/real+numbers+object you can definitely have real numbers without the infinitesimals in constructive math, however.\n \nreply",
      "Side comment: anyone interested in calculus via infinitesimals may also be interested in taking a look at Radically Elementary Probability Theory by Ed Nelson: https://web.math.princeton.edu/~nelson/books/rept.pdf\n \nreply",
      "My recollection from real analysis was that I liked sequential continuity a lot (https://en.wikipedia.org/wiki/Continuous_function#Sequences_...).Sequences form a nice beginner-friendly monad (`bind` is the diagonal nth from nth), and lifting a real function over a real sequence is just `fmap`! (This is the same notion of sequence that https://clash-lang.org/ uses for sequential circuits, but it skips the monad because circuits are first order.)Convergent sequences are like ordered binary tree sets, they do also form a monad, but one in a sub-category: sequentially continuous functions are precisely those that are in the domain of the underlying functor! :)\n \nreply",
      "Nice, I didn't know about this book. Did you try the Keisler book too, \"Elementary Calculus: An Infinitesimal Approach\"? See https://people.math.wisc.edu/~hkeisler/calc.html\n \nreply",
      "Thanks for the tip...  it seems to mention Robinson's 'hyperreals' too...!\n \nreply",
      "I'm generally a little skeptical about approaches that treat infinitesimals in a symbolic computation. The approach typically is to solve traditional analysis problems but throw in some infinitesimals and show that you can get the same answers. But if you approach infinitesimals from first principles I feel like you run into a lot of problems.For example it is almost always the case that you can remove higher order infinitesimals, like (dx)^2, when computing things like derivatives. But this always necessitates a step where you translate from infinitesimals to \"standard\" reals, and then continue on your merry way. We happily round away the higher-order terms when we compute something like ((x + dx)^3 - x^3) / dx, but if we're continuing to do infinitesimal math they may become relevant again. Call that function, f_1(x) = 3x^2 + 3xdx + dx^2; we'll typically just call this f_2(x) = 3x^2, but these functions are not equivalent if we then proceed to compute (f(x) - 3x^2) / dx, which, presumably, we can just do because we've admitted this horror of a syntax into our formal language.I'm very skeptical of this being useful outside of being able to reason about trivial limits for this reason.\n \nreply"
    ],
    "link": "https://github.com/Ericson2314/baccumulation/blob/main/math/multiplicative-infinitesimals.md",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          This goes with Geometric Calculus, but where as that is mostly summarizing others work, this is original as far as I know, and so I split it out.Despite their lack of formal rigor (in conventional analysis), infinitesimals are liked in some settings, like informally solving differential equations, and other applied tasks.\nThey are, \"additive\", in a few key ways:They are near 0, which is the additive identity, and \"not a multiplicative number\"They correspond to subtraction inside limits.They thus suffice for regular additive calculus, but not the geometric calculus linked above.For the first, the intuition for a regular infinitesimal is that is a very small number, smaller than any non-zero real number.\nIf we multiply a real number by an infinitesimal, we always get another infinitesimal, never a real number, just like when we multiply any re"
  },
  {
    "title": "How many real numbers exist? New proof moves closer to an answer (2021) (quantamagazine.org)",
    "points": 16,
    "submitter": "lisper",
    "submit_time": "2025-01-07T20:47:38 1736282858",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.quantamagazine.org/how-many-numbers-exist-infinity-proof-moves-math-closer-to-an-answer-20210715/",
    "first_paragraph": "\nAn editorially independent publication supported by the Simons Foundation.\n\nGet the latest news delivered to your inbox.\nCreate a reading list by clicking the Read Later icon next to the articles you wish to save.Type search term(s) and press enterPopular\n                                    SearchesJuly 15, 2021There are an infinite number of infinities. Which one corresponds to the real numbers? Olena Shmahalo/Quanta MagazineSenior EditorJuly 15, 2021In October 2018, David Asper\u00f3 was on holiday in Italy, gazing out a car window as his girlfriend drove them to their bed-and-breakfast, when it came to him: the missing step of what\u2019s now a landmark new proof about the sizes of infinity. \u201cIt was this flash experience,\u201d he said.Asper\u00f3, a mathematician at the University of East Anglia in the United Kingdom, contacted the collaborator with whom he\u2019d long pursued the proof, Ralf Schindler of the University of M\u00fcnster in Germany, and described his insight. \u201cIt was completely incomprehensible "
  },
  {
    "title": "Ratchet effects determine engineer reputation at large companies \u2013 sean goedecke (seangoedecke.com)",
    "points": 61,
    "submitter": "rbanffy",
    "submit_time": "2025-01-06T12:30:11 1736166611",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=42610021",
    "comments": [
      "I work at a \"large company\", and I don't agree with most of this. Your write-up is highly subjective, and fairly pessimistic.Some people hit the ground running, and teams/organizations/companies can thrive if they find ways to embrace that. Sometimes people get hired at the wrong level, and everyone benefits if some sort of work demonstrates that quickly. I have seen promotions happen based on prudent choices around one's individual strengths, simply by choosing to do a bit of the right work and getting eyes on your capabilities. There is no \"one size fits all\" prescription for what someone should work on.Having a \"shadow lead\" can be one of the best situations for your growth, too. Not only do you get the experience leading a thing (for most of what that means, anyway), you may end up with a very strong ally when you knock it out of the park. I had a version of this experience, and I've watched others have it as well.I'm guessing most of the negatives here are based on your personal experience, and for that I'm sorry. Hopefully you can encourage positive changes in your company's engineering culture.\n \nreply",
      "> Having a \"shadow lead\" can be one of the best situations for your growth,In a successful company with high retention, many senior engineers who would fill these roles as shadow lead, often have their ego turned down, less to prove, and will encourage you to succeed. In companies with a lot of churn, or always on the brink of disaster, you don't get that support.overall though, I do agree with the article. orgs run on reputation, and it's slow to change, and snap judgements sadly matter.\n \nreply",
      "> you may end up with a very strong ally when you knock it out of the parkI imagine this will be determined by the culture and the system of rewards which are out of your control. A shadow lead could be an ally, or they could pin any deficiencies on you. The author\u2019s comment is sound in my opinion: depending on altruistic behavior is a bad position to be in.\n \nreply",
      "I\u2019m engineering adjacent (analytics / data sci) but my experience has been the best engineers pitch and pick their own projects rather than being assigned out weeks in advance.Just recently an engineering manager told me \u201cI trust [IC7 engineer] to go where he is most impactful\u201dSo this isn\u2019t the only model, and successfully identifying and pitching working on high impact projects is a seniority marker that will lead to rapid promotion. In any organization. The pitch may look different in different places but I promise you - if an engineer is successfully pitching and delivering high impact projects promotion WILL follow.Identifying and pitching high impact projects is a combo of technical and soft skills though, and the way this happens depends on the org.\n \nreply",
      "This seems generally true in my experience.\nAnother aspect of this, from personal experience: while it may be easy to move around in a large organization, you risk losing reputational capital. I had a habit of building reputation in some team/platform, then after I no longer found it engaging or there was enough turnover/focus shift, I'd ask to transition to a wildly different team for a new challenge. \nIt _is_ fun, but if you opt to start as an IC and work your way up, you're sorta letting the ratchet slip, and if you do it every couple years you may have broad experience, but your reputation (and likely level) will be well below where it could be.Thus, unless you can ramp to expertise really quickly to leverage your skills developed elsewhere, I'd recommend (perhaps obviously) to try to move to peripheral teams where your skills and relationships transfer as much as possible.\n \nreply",
      "There is a time honored tradition of blaming the last person for all of your problems, or at least any they had proximity to.Somewhat awkward if you later see them in a meeting.\n \nreply",
      "Quite true! Having been fairly instrumental in a few areas that I'd eventually moved on from, it was always interesting to see some of my trademark accomplishments become The Old Thing We're Trying To Replace (or even just The Big Thing We Have To Maintain); gave me a lot of empathy for prior contributors of code I ended up inheriting. \nI tend to assume that the old thing seems dumb because of the constraints when it was written and changing requirements over time; if a tool made by one person in a few weeks seems hopelessly naive to the medium sized team investing a few quarters in replacing it a few years later, that seems to be a rousing success for the original author.\n \nreply",
      "Problem for new hires is the onboarding process is very critical to determine if you'll be doing good work or not. Fighting against a code base all the time as you're left to your own devices is an uphill battle.\n \nreply",
      "Problem for new hires is also whether your manager will support the onboarding. If you get throw n to the wolves with 1 month of \u201conboarding\u201d, you\u2019ll fail even with straightforward codebases. I\u2019ve seen managers who bring you in and ask you, what the you and the team should be doing. And that\u2019s never ended well.\n \nreply",
      "A lot of places end up selecting for their own brand of crazy because of that.The people who think, \"this is fine\" tend to fit in better. From a team stability perspective that's fine? But echo chambers eventually eat themselves and new perspective can lead to new features or bug fixes.\n \nreply"
    ],
    "link": "https://www.seangoedecke.com/ratchet-effects/",
    "first_paragraph": "How do engineers become higher-status or lower-status at large tech companies? In other words, what determines who gets promoted and who doesn\u2019t, or who gets assigned the exciting difficult work and who gets put on keep-the-lights-on maintenance duty?The naive answer is that strong engineers are recognized and rewarded for their talent. There\u2019s a grain of truth in this (talent does matter), but it\u2019s broadly false. Many technically strong engineers go unrecognized and many technically weak engineers succeed. The slightly-less naive answer is that engineers who can deliver value to shareholders (e.g. by shipping projects) are placed in positions where they can do that. This is closer to the truth, but it doesn\u2019t explain the mechanism. Nobody at a large tech company is sitting in a high tower assessing how much value you personally can deliver. They\u2019re all busy with their own jobs. How, then, do effective engineers get recognized?The answer is a natural ratchet effect. When an engineer jo"
  },
  {
    "title": "Who killed the rave? (ft.com)",
    "points": 247,
    "submitter": "this_weekend",
    "submit_time": "2025-01-06T00:29:35 1736123375",
    "num_comments": 624,
    "comments_url": "https://news.ycombinator.com/item?id=42606318",
    "comments": [
      "https://archive.is/ul4Ui",
      "One big change is that they got better and much more organized. I go to an annual event with a few hundred of my friends and family. We rent a lodge in a national forest, set up an enormous sound system, and dance for 3 days around some very confused deer. There are food trucks and coffee bars and dozens of portapotties scattered around, plus daytime poolside sets while we swim around and listen to 100dB house.We grayvers still like to have fun, just more comfortably. We have work next week, you know.\n \nreply",
      "I\u2019m confused. You say that you  \u201cgo to\u201d an annual event, but then you describe it at a massive private festival that you\u2019re self organizing. Which is it?\n \nreply",
      "There are all sorts of volunteer roles someone needs to do, from directing parking, to helping in the kitchen, to roaming around at 3am to see if anyone needs help, to working the first aid stand, and a hundred other things. I always sign up for at least a couple of shifts doing something, so feel like part of the \"we\" helping to put it on, but it's still something I go to as a participant to have fun.\n \nreply",
      "As someone who does something similar, it\u2019s easily both\n \nreply",
      "Those two things are not mutually exclusive.\n \nreply",
      "The best festivals are co-creative experiences.\n \nreply",
      "I still remember the first one I was supposed to go to. They didn't tell you the location until the day of.It was a high school gymnasium.Didn't work out so well.\n \nreply",
      "> One big change is that they got better and much more organized.If I'm thinking of the same groups you're mentioning, they were already super organized. Mostly because they've been going for decades now.\n \nreply",
      "If you\u2019re thinking of groups, plural, then you probably know the ones I mean. And yeah, I wear the 20th anniversary tank top to the gym.\n \nreply"
    ],
    "link": "https://www.ft.com/content/2138e940-0c81-44b0-87a7-325f278413e1",
    "first_paragraph": "Once registered, you can:\n\n\u2022 Read this article and many more, free for 30 days with no card details required\n\u2022 Enjoy 8 thought-provoking articles a day chosen for you by senior editors\n\u2022 Download the award-winning FT Edit app to access audio, saved articles and moreThen $75 per month. Complete digital access to quality FT journalism. Cancel anytime during your trial.Essential digital access to quality FT journalism on any device. Pay a year upfront and save 20%.Complete digital access to quality FT journalism with expert analysis from industry leaders. Pay a year upfront and save 20%.Terms & Conditions applySee why over a million readers pay to read the Financial Times."
  },
  {
    "title": "Robotics 101 at UMich: Applied numerical linear algebra as intro linear algebra (umich.edu)",
    "points": 182,
    "submitter": "jamesliudotcc",
    "submit_time": "2025-01-08T13:11:40 1736341900",
    "num_comments": 43,
    "comments_url": "https://news.ycombinator.com/item?id=42633805",
    "comments": [
      "I took this course 3 years ago. I found it fast-moving, and it focused a lot more on applications than fundamentals, which meant it was more wide than it was deep. This didn't turn out so well when I decided to study ML later and needed stronger linear algebra fundamentals, but it was a fun course. There were a couple interesting course projects, one of which was using linear algebra to balance a (simulated) 2D robot.\n \nreply",
      "No one, and let me repeat that, no one \"gets\" linear algebra, differential equations, or frequency domain on the first pass. It takes years to absorb and multiple passes.See:Bruner / Spiral Curriculum.Ebbinghaus / Spacing effectHattie / Deep-surface-transfer learningChunking (\"How People Learn\" has a good copy on this)Etc.The way you do this is you take a course, and then you take more courses. After a few years, it all connects and makes sense. The first course, I find, is often best short, simplified, and applied. Once you get through that, you can go deeper.Different angles are nice too. For linear algebra:- Quantum computing- Statistics and probability- Machine learning- Control theory- Image processing- Abstract algebra / groups / etc.- Computer graphicsAll come to mind.On a mile-high level, this course seems ideal for a first pass. On a detailed level, I'm confused by some licensing issues.\n \nreply",
      "Not with the way it is taught. But if the course structure is changed slightly to have reinforcement of early concepts woven through the course, people learn much better.At least that was my experience when I taught it. See https://bentilly.blogspot.com/2009/09/teaching-linear-algebr... for more detail on my experience.\n \nreply",
      "Where do you feel the gaps were for what you needed for ML? Downthread, Jesse Grizzle notes they've added some stuff in 2023 (it's on Github I think?) to support an ML class.\n \nreply",
      "What would you recommend for building a strong linear algebra foundation?\n \nreply",
      "Also a big fan of Strang. \"Linear algebra and its applications\" has problem sets with solutions for odd number questions.Would highly recommend https://mathacademy.com/courses/linear-algebra or https://mathacademy.com/courses/mathematics-for-machine-lear...I originally spent time working through practice problems from one of Strang's books, now really appreciate how systematic math academy is in assessing, building a custom curriculum, then doing spaced repetition.\n \nreply",
      "I took 18.085 (applied linear algebra) as a grad student at MIT. The best taught math course I've ever taken. Strang is a fantastic teacher.\n \nreply",
      "After working with math academy, any form of video learning seems so inefficient. I think people lose a lot of time watching these videos thinking that they are learning  without applying anything by themselves.\n \nreply",
      "UMich has a couple other linear algebra courses that might be better for that: MATH 214, MATH 217 are the numbers if I remember correctly. 217 is known for having a high workload and greater rigor, but some say it's worth it even for non-Math majors.\n \nreply",
      "In terms of books, I would say Linear Algebra Done Right. The book requires some background to understand efficient. But, once you have some background, it is very good for having a systematic and rigorous understanding of Linear Algebra theory\n \nreply"
    ],
    "link": "https://robotics.umich.edu/academics/courses/course-offerings/rob101-fall-2020/",
    "first_paragraph": ""
  },
  {
    "title": "Brief Introduction to Fix and Fix JSON (fixparser.dev)",
    "points": 4,
    "submitter": "logotype",
    "submit_time": "2025-01-05T15:33:47 1736091227",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=42602438",
    "comments": [
      "For anyone interested: it's an extraordinarily simple protocol (it predates complexity in protocols), consisting of key=value pairs, where the keys are all numbers (look up \"fix tag dictionary\" for 100 different decoder rings), everything's in text, and, IIRC, all the KVPs are separated by ASCII 01h (SOH), which by convention is written with the pipe filter. That's it, that's the protocol.A real-world FIX gateway will demand a BodyLength tag, so you have to compute your message length, and it'll want SenderCompID and TargetCompID (\"from\" and \"to\", respectively). So it's like, well, that much more complicated.The complexity in these systems will all be the semantics given to the messages and the zillion fields your vendor/partner supports.\n \nreply",
      "If it meets the guidelines, this might make a good 'Show HN'. Show HN guidelines: https://news.ycombinator.com/showhn.html\n \nreply",
      "Thanks! not sure if it meets the guidelines given that it is a paid product. cheers\n \nreply",
      "Paid products are ok (so long as they are consistent with the rest of HN).If in doubt, you can ask the mods using the contract link.\n \nreply",
      "HN people have to be able to use the thingy, and signup forms don't count (\"you have to have something more than a signup\", per 'dang).\n \nreply",
      "Isnt xml preferred in fix and not json?\n \nreply",
      "It's been like 10 years for me but all the systems I worked with just use the classic ASCII format; the last thing you'd want to do is inflate the messages with XML or JSON. Has that changed?\n \nreply",
      "https://www.fixtrading.org/standards/json-online/#issues-for...\nI guess so.\n \nreply",
      "Mine was actually a question as well. My thought was because of nano second accuracy, json won't be preferred. XML causes no issues here just the bloat.\n \nreply"
    ],
    "link": "https://fixparser.dev/what-is-fix",
    "first_paragraph": "The FIX Protocol (Financial Information Exchange) is a standardized messaging system for real-time electronic communication of trade-related information in financial markets.Developed in the early 1990s, the FIX Protocol enables the seamless exchange of trade-related information, such as orders, executions, and market data, between trading institutions, brokers, exchanges, and other financial entities. It is highly valued for its speed, reliability, and real-time capabilities, which are essential for high-frequency trading and other time-sensitive financial activities. The protocol defines a comprehensive set of message types and field formats, making it adaptable for a variety of trading environments.A FIX tag value message is structured as a sequence of key-value pairs where each key (tag) is a numeric identifier representing a specific data field, and the value contains the associated data. FIX tagvalue encoding is standardised in ISO 3531-1:2022.8=FIXT.1.1|9=61|35=A|34=1|49=EXEC|52"
  },
  {
    "title": "Did we miss P In CAP? Partial Progress Conjecture under Asynchrony (arxiv.org)",
    "points": 14,
    "submitter": "belter",
    "submit_time": "2025-01-05T15:23:00 1736090580",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://arxiv.org/abs/2501.00021",
    "first_paragraph": "Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "A Pixel Parable (olano.dev)",
    "points": 80,
    "submitter": "facundo_olano",
    "submit_time": "2025-01-06T00:48:58 1736124538",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=42606433",
    "comments": [
      "Beautifully written and worth the read. And the screensaver nerd snipe is epic.\n \nreply",
      "That was a great read!The library at Skywalker Ranch looked like a wonderful place.\n \nreply",
      "I\u2019ve heard him recount the story of how he ended up at LucasFilm Games before, so I could tell that \u201dMark\u201d refers to Mark Ferrari. But it certainly feels a little unusual to tell a story like this using only his first name.\n \nreply",
      "It worked for me. It's intentionally written like a piece of fiction, you don't even have to know the characters are all real people to enjoy the story. Though I guess most readers at least know who \"Ron\" refers to.\n \nreply",
      "Anyone have a link to \"Purcell\u2019s million-dollar animation\" of the grail scene? I'm really curious to see it now.\n \nreply",
      "https://www.reddit.com/r/indianajones/comments/1hwce4a/india...\n \nreply",
      "I started researching Skywalker Ranch recently and I've found it quite difficult to find floor plans or  pictures of the interior of the building.It's kind of odd.  I wonder what Disney has in store for that place.I hope that it is preserved due the historical role that it had in being the site of the genesis of so many of our cherished cultural artifacts.\n \nreply"
    ],
    "link": "https://olano.dev/blog/a-pixel-parable/",
    "first_paragraph": "An imagined town is at least\nas real as an actual town.\nRichard Hugo\n\u201cHow would you like to work on video games?\u201d\nMark is holding his Best of the Show certificate in one hand and Gary\u2019s card in the other:Gary W.Art DirectorLucasFilm Games\nLucasFilm Games. As in George Lucas. As in Star Wars.\nThis is his second lucky break of the weekend. A friend recommended he go to this sci-fi convention; she said it would be good for networking. Mark wouldn\u2019t mind having one of his illustrations on a trading card, or a rule book, or, who knows, one of those fantasy novels he used to read in high school.\nSo he shows up to the convention on Friday. Someone notices his work\u2014his pencil landscapes that look hand-painted\u2014, they invite him to join in the art show, he does, two days later he wins first place. That\u2019s his first lucky break. The second is this guy, Gary, coming over to him, praising his work, asking him to \u2018audition\u2019 for a video game job.\n\u201cCould you come over to the Ranch for an interview?\u201d Ga"
  }
]