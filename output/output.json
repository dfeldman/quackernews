[
  {
    "title": "15,000 lines of verified cryptography now in Python (protzenko.fr)",
    "points": 244,
    "submitter": "todsacerdoti",
    "submit_time": "2025-04-18T19:28:44 1745004524",
    "num_comments": 65,
    "comments_url": "https://news.ycombinator.com/item?id=43731165",
    "comments": [
      "There's no mention of what Python version this is actually in.After some digging, it looks like the answer is 3.14 [0], so we won't be seeing this until October [1].One could argue that this is a security fix (just read the first sentence of the blog post) and should be included in all the currently supported versions (>=3.9) of Python [2].[0] https://github.com/python/cpython/blob/main/Doc/whatsnew/3.1...[1] https://peps.python.org/pep-0745/[2] https://devguide.python.org/versions/\n \nreply",
      "Many famous libraries like Spacy do not support Python 3.13 and are stuck on Python 3.12 (Oct 2023).So, even if this comes out in Python 3.14, any non-trivial project will have to wait till Oct 2026 (or Oct 2027) to be able to use it.1 - https://github.com/explosion/spaCy/issues/13658\n \nreply",
      "Good grief that issue is a clusterfuck of bozos.Sometimes I wish there was a GitHub with entry exam. \"A library you use has a bug, you find a find a 3 month old bug report for your exact issue. Do you 1) add a comment with \"me too\", 2) express your frustration this issue hasn't been fixed yet, 3) demand the maintainers fix it as soon as possible as it's causing issues for you, or 4) do nothing\".Only half joking.\n \nreply",
      "I actually find that hugely helpful that so many people are actually actively expressing they are hitting this. It's not easy to be able to get an idea what issues people are actually hitting with anything you have made. An issue being bumped with essentially \"me too\" is a highly valuable signal.\n \nreply",
      "Do you really think the maintainers don't understand that \"doesn't work with Python 3.13\" isn't going to affect tons of people?There's some bozo asking \"any news? I cant downgrade because another lib requirement\" just two days after the maintainer wrote several paragraphs explaining how difficult all of this is. This adds no value for anyone and is just noise. Anyone interested in actual useful information (workaronds, pointers on how to help) has to wade though a firehose of useless nonsense to get at anything remotely useful.Never mind the demanding nature of some people in that thread.Just upvote. That's why this entire feature was added.",
      "It\u2019s not just that, it\u2019s people commenting \u201cthis is unacceptable\u201d and \u201cI hate this library\u201d that add very little value.Also, you can upvote issues as well / leave reactions without leaving comments. It ensures a better signal:noise ratio in the actual discussion.\n \nreply",
      "Reactions, though.\n \nreply",
      "Just ran into something similar with Great Expectations. Python 3.12 is the newest I can run.\n \nreply",
      "uv seems to have reverted to defaulting to 3.12 instead of 3.13. Which I fully endorse owing to how many packages are not yet compatible.\n \nreply",
      "> One could argueHow?\n \nreply"
    ],
    "link": "https://jonathan.protzenko.fr/2025/04/18/python.html",
    "first_paragraph": "\nApr 18, 2025\n      In November 2022, I opened issue 99108 on\nPython\u2019s GitHub repository, arguing that after a recent CVE in its implementation of\nSHA3, Python should embrace verified code for all of its hash-related infrastructure.As of last week, this issue is now closed, and every single hash and HMAC algorithm exposed by\ndefault in Python is now provided by HACL*, the\nverified cryptographic library. There was no loss of functionality, and the transition was entirely\ntransparent for Python users. Python now vendors (includes in its repository) 15,000 lines of\nverified C code from HACL*. Pulling newer versions from the upstream HACL* repository\nis entirely automated and is done by invoking a script. HACL* was able to successfully implement\nnew features to meet all of the requirements of Python, such as: additional modes for the Blake2\nfamily of algorithms, a new API for SHA3 that covers all Keccak variants, strict abstraction\npatterns to deal with build system difficulties, proper er"
  },
  {
    "title": "Full Text Search of US Court records (judyrecords.com)",
    "points": 150,
    "submitter": "FigurativeVoid",
    "submit_time": "2025-04-18T20:24:09 1745007849",
    "num_comments": 27,
    "comments_url": "https://news.ycombinator.com/item?id=43731552",
    "comments": [
      "I've searched for \"sandwich murder\" and did not find what I was looking for, but the way the elisions line up are sometimes pretty funny. I've also learned that Subway shops are among the most dangerous eateries and that bologna especially seems to make people irritable enough to open fire.  A few highlights for your consideration, redacted to protect the innocent, guilty, or hungry bystanders  - that the evidence that defendant fired the murder weapon during the sandwich\n  - bologna sandwich found at the crime scene\n  - presence in sandwich the morning of the murder\n  - ways in which they could murder her mother. these included the sandwich ... sandwich incident could not be used\n  - crime of capital murder. as a habitual offender, sentenced to life ... to the \"bologna sandwich\" constituted reversible error\n  - coroner testified that victim had eaten a fish sandwich within 2 hours ... prior to his death\n  - it was not first degree murder, and the court should have ... sandwich. he paid for the sandwich, but did not pay for the coffee\n  - convicted of malice murder and possession of a ... sandwich\n  - she was shot and that she had some change in one hand and a sandwich in the other ... sandwich in your hand kind of slow your progress down in getting a gun out of your ... sandwich\n \nreply",
      "Search my name got the traffic infraction records, but none of the briefs and deposition I filed during discovery.\n \nreply",
      "Some big Show HN threads a couple of years ago:https://news.ycombinator.com/item?id=30399881https://news.ycombinator.com/item?id=25150702\n \nreply",
      "I searched my name. It gave me a hit for someone (criminal trespass) in Texas, in a year I lived there, with my exact same height and ~same weight, and the arraignment date is my birthday. Wasn't me. Spooky!\n \nreply",
      "Entire search system is a long-con for a \"clear your name\" business.\n \nreply",
      "Sleep walker per chance?\n \nreply",
      "All of the five searches I tried had Tennessee court documents as the top result, anyone else experience this?\n \nreply",
      "As a free service, I wonder if the burden of complying with a right to be forgotten would be too much to sustain.\n \nreply",
      "Almost certainly. Presumably why it\u2019s not available to euros.Also would be a very strange to apply this so-called \u201cright\u201d when court records are essential to keeping organs of government accountable.\n \nreply",
      "I would think so if the right to be forgotten was legal principle in the United States. It only applies in Europe and I don\u2019t think it applies to court records that are public.\n \nreply"
    ],
    "link": "https://www.judyrecords.com/",
    "first_paragraph": ""
  },
  {
    "title": "Cozy video games can quell stress and anxiety (reuters.com)",
    "points": 27,
    "submitter": "vinhnx",
    "submit_time": "2025-04-19T00:21:13 1745022073",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=43733097",
    "comments": [
      "One of my favorite games is A Short Hike. It's not the same kind of game as Animal Crossing, Stardew Valley, etc, but the writing is brilliant and it always makes me content whenever I play it.I really wish more games like it existed.\n \nreply",
      "Absolutely love A Short Hike. Perfect to relax in bed or on the couch on the Deck and just relax. I have fallen asleep playing it multiple times. Just wandering and soaring and climbing.\n \nreply",
      "Smushi come home if the most similar I've played\n \nreply",
      "Thank you!\n \nreply",
      "This was difficult to read in Firefox without reader mode. No mention of that tiny town building game I've been looking for again (non-gridded, very adaptive, kind of medieval), which is shame because I completely forgot its name.EDIT: It's tiny glade\n \nreply",
      "Stardew Valley helped my non-gamer partner so much during the pandemic.\n \nreply",
      "Stardew is the opposite of relaxing for me. It\u2019s a never ending to-do list and sense that you don\u2019t have enough time. It\u2019s \u201cChores: The video game\u201d\n \nreply",
      "Came here to post this. There\u2019s just something so comforting to the soul about that world. There are no politics, crime, religion, homelessness, war, or disease. Just melons. Melons, pumpkins, turnips, corn, rice, and potatoes. Visiting that place is like pure heroin for people with anxiety.\n \nreply",
      "I hear your point, but there's literally a homeless NPC and an NPC suffering from combat PTSD. Another way of looking at it might be that you're empowered to make a meaningful difference in the lives of those people which feels good.\n \nreply",
      "There is politics from scene one? You are literally fighting against a giant corporation which is taking over the town.\n \nreply"
    ],
    "link": "https://www.reuters.com/business/retail-consumer/cozy-video-games-can-quell-stress-anxiety-2025-01-27/",
    "first_paragraph": ""
  },
  {
    "title": "Hypertext TV (hypertext.tv)",
    "points": 54,
    "submitter": "coloneltcb",
    "submit_time": "2025-04-18T23:29:04 1745018944",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=43732805",
    "comments": [
      "Not only is this a wonderful idea, the skeuomorphic design looks awesome and it works well on mobile. Wow!Note also that the source can be found through the menu button, which leads to https://github.com/evadecker/hypertext.tv.\n \nreply",
      "very smooth on mobile. wish it had some soft sound effects to match the vibe\n \nreply",
      "omg, this was made at sfpc! spent some time there in 2016, love to see things being made there still.the crt shader aesthetic is really cool. will try and make a pr of my own sometime :)\n \nreply",
      "make the internet weird again. 10/10 rating\n \nreply",
      "Nice! The word \"hypertext\" still evokes a sense of wonder and futurism to me, no matter how old the term is. I own hypertext.plus. Someday I'll have to make a list of all the active hypertext.* websites and register another one as a sort of meta-hypertext site listing them all.\n \nreply",
      "Yeah, I miss buttons and VFD displays.\n \nreply",
      "this is so cool\n \nreply"
    ],
    "link": "https://hypertext.tv/",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: I made a Doom-like game fit inside a QR code (github.com/kuberwastaken)",
    "points": 326,
    "submitter": "kuberwastaken",
    "submit_time": "2025-04-18T16:40:25 1744994425",
    "num_comments": 93,
    "comments_url": "https://news.ycombinator.com/item?id=43729683",
    "comments": [
      "I sometimes pick up random projects just because I can, this was one of those times. I made it as a week long project a while back this year but never shared here, so thought to go for it haha.I created a game inspired by Doom and the backrooms called The Backdooms under 2.4kb in minified html. (for reference, this entire post would be around 1.8kB haha)\nI had to use a not popular way of using GZip with Zlib headers (had to write my own script for compressing it, also in the repo) to eventually convert it a size 40 QR code that works right in your browser using Decompressionstream API.This is of course a very oversimplified description of it, using a lot of the same technologies that DOOM had but combining it with infinite seed based map generation in 2.4kb (QR codes can only store 3kb, which includes changing formats) was pretty hard.Here are some links about it if you want to nerd out and read more:Repository Link (MIT License): https://github.com/Kuberwastaken/backdoomsA Hosted (slightly improved) version of The Backdooms: https://kuberwastaken.github.io/backdooms/Game Trailer: https://www.youtube.com/shorts/QWPr10cAuGcMy Linkedin post about it: https://www.linkedin.com/feed/update/urn:li:activity:7295667...(PS: You'd need something like https://qrscanner.org/ or something that can scan bigger QR codes and put the text data onto your browser to play it)My Blogs documenting the process and development in detail:https://kuberwastaken.github.io/blog/Projects/How-I-Managed-...\nhttps://kuberwastaken.github.io/blog/Projects/How-I-Managed-...\n \nreply",
      "TIL DecompressionStream, thanks. I managed to shave some more bytes by trimming the HTML bits, raised a PR in case you're interested.\n \nreply",
      "YOU'RE A LEGEND! I just managed to ADD (somewhat of) TOUCHSCREEN SUPPORT, better movement, enemy spawning and damage mechanisms in the space that freed up because of this! Genuinely, thank you, made my month :)\n \nreply",
      "Damn, that\u2019s awesome! Glad that was a help :D\n \nreply",
      "Open source victory right here\n \nreply",
      "Absolutely!\n \nreply",
      "Very cool! You\u2018ve definitely motivated me to continue my own experimentation in the realm of \u201ewhat cool stuff can I put in a QR code\u201c:\nhttps://strich.io/blog/posts/embedding-webassembly-in-qrcode...\n \nreply",
      "Your game trailer links to a short called \"Fly me to the moon - 19 September 2024\". I think this is a mistake?\n \nreply",
      "Should be fixed, sorry haha\n \nreply",
      "Never gonna give you up lives on in new ways\n \nreply"
    ],
    "link": "https://github.com/Kuberwastaken/backdooms",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A self-contained game that fits inside a QR code inspired by DOOM 1993 and The Backrooms\n      \n\n\n    Yes, this is literally the entire game. You can scan it to play.\n\n\n\n\nThe Backdooms is a compressed, self-extracting and infinitely generating HTML game inspired by DOOM 1993 and The Backrooms that can be launched and played in a web browser directly from a QR code.This project was a week-long study I performed (now slightly longer) designed to push the limits of QR code storage and compression, to demonstrate an innovative method of hosting lightweight web applications entirely within a QR code.\nPlay a slightly less compressed version of this game here\n\nYes, it's 8bit Undertale Music There\n\n\n\u2705 Fully Offline: No internet connection is required to play the game after scanning the QR code. The URL basically has the ENTIRE code to the g"
  },
  {
    "title": "I passionately hate hype, especially the AI hype (unixdigest.com)",
    "points": 82,
    "submitter": "smartmic",
    "submit_time": "2025-04-18T21:32:04 1745011924",
    "num_comments": 69,
    "comments_url": "https://news.ycombinator.com/item?id=43732047",
    "comments": [
      "What a shallow, negative post. \"Hype\" is tautologically bad. Being negative and \"above the hype\" makes you sound smart, but this post adds nothing to the discussion and is just as fuzzy as the hype it criticizes.> It is a real shame that some of the most beneficial tools ever invented, such as computers, modern databases, data centers, etc. exist in an industry that has become so obsessed with hype and trends that it resembles the fashion industry.Would not the author have claimed at the time that those technologies were also \"hype\"? What consistent principle does the author use (a priori) to separate \"useful facts\" from \"hype\"?Or, if the author would have considered those over-hyped at the time, then they should have some humility because in 10 years they may look back at AI as another one of the \"most beneficial tools ever invented\".> In technology, AI is currently the new big hype. ... 10% of the AI hype is based on useful factsThe author ascribes malice to people who disagree with them about the use of AI. The author says proponents of AI are \"greedy\", \"careless\", unskilled, inexperienced, and unproductive. How does the author know that these people don't believe that AI has great utility and potential?Don't waste your time on this article. I wish I hadn't. Go build something, or at least make thoughtful, well defined critiques of the world.\n \nreply",
      ">> Would not the author have claimed at the time that those technologies were also \"hype\"? What consistent principle does the author use (a priori) to separate \"useful facts\" from \"hype\"?Are you saying someone hyped ... databases? In the same way as AI is hyped today?This is a tweet from Sam Altman, dated April 18 2025:https://x.com/sama/status/1913320105804730518Whence I quote:  i think this is gonna be more like the renaissance than the industrial revolution\n\nDo you remember someone from the databases industry claiming that databases are going to be \"like the renaissance\" or lik the industrial revolution? Oracle? Microsoft? PostgreSQL?Here's another one with an excerpt of an interview with Demis Hssabis, dated April 17, 2025:https://x.com/reidhoffman/status/1912929020905206233Whence I quote:  \" I think maybe in the next 10, 15 years we can actually have a real crack at solving all disease.\"\n\n  Nobel Prize Winner and DeepMind CEO Demis Hassabis on how AI can revolutionize drug discovery doing \"science at digital speed.\"\n\n\nWho, in databases, has claimed that \"in the next 10, 15 years we can actually have a real crack at solving all disease\"? Data centers? Computers in general? All disease?\n \nreply",
      "Sure, databases didn't get as much hype but that's partly because they are old.Look at something more recent: \"cloud\", \"social networking\", \"blockchain\", \"mobile\".Plenty of hype! Some delivered, some didn't.\n \nreply",
      "The last time I remember the hype being even remotely real was Web 2.0. And most of everything that made that hypeworthy is long gone (interoperability and open standards like RSS or free APIs) or turned out to be genuinely awful (\"social media was a mistake\") or has become far worse than what it replaced (SaaS).\n \nreply",
      "It's one of the stupidest concepts on the face of the earth and tons of people ascribe to it unknowingly: hype = bad.AI is one of the most revolutionary things to ever happen in the last couple of years. But with enough hype tons of people now think it's complete garbage.I'm literally shocked how we can spend a couple decades fantasizing and writing stories about this level of AI, only to be bored of it in two years when a rudimentary version of it is finally realized.What especially pisses me off is the know it all tone, like they knew all along it's garbage and that they're above it all. These people are tools with no opinions other then hype = bad and logic = nonexistent.\n \nreply",
      "> I'm literally shocked how we can spend a couple decades fantasizing and writing stories about this level of AIIt was never this level of AI. The stories we wrote and fantasised were about AI you could blindly rely on, trust, and reason about. No one ever fantasised about AI which couldn\u2019t accurately count the number of letters in a common word or that would give you provably wrong information in an assertive authoritative tone. No one longed for a level of AI where you have to double check everything.\n \nreply",
      "> No one longed for a level of AI where you have to double check everything.This has basically been why it's a non-starter in a lot of (most?) business applications.If your dishwasher failed to clean anything 20% of the time, would you rely on it? No, you'd just wash the dishes by hand, because you'd at least have a consistent result.That's been the result of AI experimentation I've seen: it works ~80% of the time, which sounds great... except there's surprisingly few tasks where a 20% fail rate is acceptable. Even \"prompt engineering\" your way to a 5% failure/inaccuracy rate is unacceptable for a fully automated solution.So now we're moving to workflows where AI generates stuff and a human double checks. Or the AI parses human text into a well-defined gRPC method with known behavior. Which can definitely be helpful, but is a far cry from the fantasized AI in sci-fi literature.\n \nreply",
      "\"The stories we wrote and fantasised were about AI you could blindly rely on, trust, and reason about.\"Stanley Kubrick's 2001: A Space Odyssey - some of the earliest mainstream AI science fiction (1968, before even the Apollo moon landing!) was very much about an AI you couldn't trust.\n \nreply",
      "Please find me someone with any background in technology who thinks AI is complete garbage (zero value or close to it). The author doesn't think so, they assert that \"perhaps 10% of the AI hype is based upon useful facts\" and \"AI functions greatly as a \"search engine\" replacement\". There is a big difference between thinking something is garbage and thinking something is a massive bubble (in the case of AI, this could be the technology is worth hundreds of billions rather than trillions).\n \nreply",
      "Don't be mad about their opinions, be grateful for the arbitrage opportunity\n \nreply"
    ],
    "link": "https://unixdigest.com/articles/i-passionately-hate-hype-especially-the-ai-hype.html",
    "first_paragraph": "Published on 2024-08-21. Modified on 2024-08-23.I truly and passionately hate hype. From the fakeness of it to the sheer stupidity it represents, but perhaps most of all, because of the devastating consequence it often results in.Hype is basically to promote or publicize something extravagantly and the modern hype promoted by \"Big Tech\" is not much different from medieval charlatans.Hype begins by some company or industry wanting to earn a profit by some new product or service. Massive propaganda is launched which is then propagated by the media, who's objectivity and investigation procedure is totally sidestepped by yet another desperate craving for profit. Then all of this is followed-up by the majority of the masses, which unfortunately mostly consists of mindless sheeple that easily become dumpfounded by all of this, and as a result, start parroting the hype like lunatics.Hype is always bad.Hype hurts investors who end up loosing a lot of money because all the \"golden\" promises whe"
  },
  {
    "title": "Understanding the Origins and the Evolution of Vi and Vim (pikuma.com)",
    "points": 102,
    "submitter": "amosjyng",
    "submit_time": "2025-04-15T10:33:02 1744713182",
    "num_comments": 34,
    "comments_url": "https://news.ycombinator.com/item?id=43691020",
    "comments": [
      "It's incredible how good of a design Vi is. Try this experiment: Busybox includes a tiny clone of vi with a reduced feature set. It's very stripped down when compared to Vim or even other vi clones, but as a pure text editor it's still more powerful than most modern day IDEs.I love my Jetbrains IDEs, but you can take my Vim plugin from my cold dead hands :)\n \nreply",
      "I have used VI for many, many years and honestly use perhaps 25% at best of its abilities.  But still I get comments about how fast and smoothly I can use it from other developers.  Which I think speaks to how powerful even the basic editor can be.And yes, you can also take my VIM plugin (for Visual Studio) from my cold dead hands.\n \nreply",
      "Same here.  Tbh, you're comment just inspired to do a deep dive on VI.  Wonder how much more productivity I can squeeze out if I spend an weekend focused on it.\n \nreply",
      "The productivity comes from not having to think about your editing while simultaneously realizing that you can do some complex editing really easily. I use Emacs and Vim both (I prefer Emacs) and It's quite nice when you can streamline some quick code edits.My latest experience with Vim was helping a friend fixing some import with a React Native project. A quick grep on one terminal (I could have used quickfix) and using the vim fzf plugin to quickly locate the file. VS Code could have done this but the context switching and UI clutter is not great there.As for emacs, the main advantages lies in the fact that so many great tools already exist there. Things like Occur, Shell Mode and Compilation Mode (relying on Comint, a more general feature for anything REPL), Project, Eglot, and Magit.\n \nreply",
      "I've always considered TECO as the ur editor.Of course, TECO is the explicit ancestor of emacs, as emacs was originally implemented as TECO macros. However, I can't find a paper trail giving similar credit to TECO for vi. That said, istuff<esc> is the same in TECO as it is in vi and TECO (1963) well predated vi (1976). RSTS (along with TECO) was used at Berkeley in 1974 before v6 Unix was installed by Ken Thompson on a sabbatical to his alma mater in 1975. Bill Joy started as a grad student at Berkeley that same year. emacs (1976) wasn't ported to Unix until the 80s.There's no hard evidence and neither Ken Thompson nor Joy has ever mentioned TECO. So I'm probably wrong.But I still consider TECO to be the ur editor.\n \nreply",
      "TECO was just a DEC line editor, not entirely unlike ed/ex.  The idea of TECO managing a display terminal (i.e. the environment in which emacs was written as a bunch of macros) came much later, and really only existed at MIT.Glass TTY terminals were very new in the early 70's.  TECO was primarily written to the \"Knight TV\" system, which was a fancy MMIO framebuffer array hooked up to a PDP-10 that would multiplex a bunch of displays and keyboards.  There really was no \"terminal\" device per se, it was all software.  There were other such devices (the MIT one was actually inspired by a similar system at Stanford), but nothing compatible enough to target an editor.So basically if you were at MIT you'd understand TECO as the pinnacle of editting .  But no one else could use it.By the time Joy started writing vi, the idea of a \"terminal\" being a serial-connected device speaking a byte protocol with a handful of reasonable operations (position cursor, clear screen, etc...) had solidified.  So a portable editor that would work with multiple devices was feasible.  Emacs wouldn't get that for a few years yet.\n \nreply",
      "I started with TECO (Text Editor Character Oriented) on Caltech's PDP-10 back in 1975. There were no glass ttys, just DECwriters and ASR-33s (ugh). I.e. TECO was a line editor.A couple years later, ADM-3A's arrived. And so did a TECO macro that turned TECO into a screen editor! Oh, what joy!Isn't it a amazing that a macro could turn a line editor into a screen editor?I also used TECO on my H-11 PDP-11 computer.\n \nreply",
      "At the time, I was told that a student once claimed that TECO was a complete programming language. He was challenged to write a FORTRAN compiler in TECO, and did.I'm not sure if that was true.\n \nreply",
      "Here's that TECO macro (have fun!):    [4 [5 [6 [7 [8 [9 +0U7 0,0X4 10U4 [4 ETU4 [4 EDU4 [4 EUU4 [4\n    ^D ET&(128#64#32#1^_)#512#16#8#2ET ED\"G 0ED '\n    @^U5/U9 ET#1ET 27^T Q9^T ET&(1^_)ET/\n    @^U6/.U8 ZU4 -3U6 ^^HM5 13^T ^^KM5 10^T ^^KM5 13^T :G4\n     < ^TU7 !F! Q7^T ZJ Q7@I%%\n      Q7-10\"E 13^T ^^KM5 -1%6 '\n      Q7-21\"E Q6^W 0U7 0; '\n      Q7-127\"E -D Z-Q4\"N -1AU9 -D Q9-27\"E 32U9 '\n       Q9-31\"G ^^DM5 ^^KM5 1+ ' 0\"E\n 13^T -Q6-2< ^^KM5 ^^AM5 > 10^T 13^T :G4 Q4,ZT '\n       ' '\n      Q7-27\"E ^TU7 Q7-27\"E !F0! 27@I%% Q4,ZX4 ^^HM5 13^T -1U7 0; '\n       Q7-^^?\"E ^T^[ @O!F0! ' @O!F! '\n     > Q4,ZK Q8J Q7/\n    0,0X7 G_ ^YX8 ^YK 0,0X9\n    ^^HM5 13^T ^^=M5\n    < !A! 0U4 0U6 !B! 1U5\n    ET#32ET ^TU7 ET&(32^_)ET Q7\"L -1^W ^TU7 ' !V!\n    Q7-127\"E .-Q5\"L .U5 ' -Q5D @O!A! '\n    Q7-31\"G Q7@I%% @O!A! '\n    Q7-26\"E 0; '\n    Q7-21\"E 0K @O!A! '\n    Q7-11\"E Q5K @O!A! '\n    Q7-8\"E Q5L .-1\"G 2R ' @O!A! '\n    Q7-4\"E Q5K @13I%% 10@I%% 2R @O!A! '\n    Q7-3\"E 0; '\n    Q7-27\"N Q7@I%% @O!A! '\n    ^TU7\n     Q7-^^C\"E Z-.-Q5\"L Z-.U5 ' Q5C @O!A! '\n     Q7-^^D\"E .-Q5\"L .U5 ' Q5R @O!A! '\n     Q7-^^?\"E ^T&31#32U7\n      Q7-^^0\"E Q5L @O!A! '\n      Q7-^^1\"E Q5-1\"E 0U5 ' Q5J @O!A! '\n      Q7-^^2\"E ZJ @O!A! '\n      Q7-^^3\"E 0L @O!A! '\n      Q7-^^4\"E -Q5L @O!A! '\n      Q7-^^5\"E Z-.-Q5\"L Z-.U5 ' Q5D @O!A! '\n      Q7-^^6\"E @FR%% @O!A! '\n      Q7-^^7\"E Q5< 13@I%% 10@I%% 2R > @O!A! '\n      Q7-^^8\"E Q5P @O!A! '\n      Q7-^^9\"E Q5-1\"E ^TU5 ' Q5@I%% @O!A! '\n      Q7-045\"E @^U4%Search: % M6\"F @O!A! ' G4 ^Y-2X8 ^YK @O!S! '\n      Q7-^^.\"E 0U6 !S! Q5:@S%^EQ8%^[ Q6\"N Q6^W ' @O!A! '\n      @O!A!\n     '\n     Q7\"D 0U5 < Q5*10+Q7-^^0U5 ^TU7 Q7\"D > ' @O!V! '\n     0U8\n     Q7-^^A\"E -1U8 '\n     Q7-^^B\"E 1U8 '\n     Q8\"N Q5*Q8U5 Q6\"E 0U7 .U8 0L\n      Q8-.%6< 0A-32\"L 0A-27\"N 0A-9\"E 6-(Q7&7)%6^[ -2U7 ' %7 1%6 ' ' C %7 > '\n      Q5L -Q6U9 0U7 Q6< .-Z; 0A-32\"L 0A-13\"E 0; '\n      0A-27\"N 0A-9\"E 6-(Q7&7)%9^[ -2U7 ' %7 1%9 ' ' C %7 1%9\"G R ' Q9; >\n      0U4 @O!B! '\n     Q7-^^Q\"E @^U4%Command: % M6\"F @O!A! ' G4 ^YX9 ^YK @O!C! '\n     Q7-27\"E 0U6 !C! ]4 Q4EU ]4 Q4ED ]4 Q4ET ]4 Q4-10\"N ^O ' M9\n      10U4 [4 ETU4 [4 EDU4 [4 EUU4 [4\n      ^D ET&(128#64#32#1^_)#512#16#8#2ET ED\"G 0ED ' -1EU\n      Q6\"N Q6^W ' @O!A! '\n     Q7-^^R\"E G7 @O!A! '\n     Q7-^^P\"E Q4\"E .+1U4 ' Q5L Q4-1,.X7 Q4-1,.K G7 0U6 @O!B! '\n    >\n    ET#16ET ^^>M5 ^^YM5 23+32^T 0+32^T ^^KM5 13^T\n    !Z! ]4 Q4EU ]4 Q4ED ]4 Q4ET ]4 Q4-10\"N ^O ' ]9 ]8 ]7 ]6 ]5 ]4\n    \u001b\u001b\n\nObviously, the TECO programming language was a challenge to understand. Mitigating this is it needed to be extremely compact, as it was used on a 64Kb PDP-11.\n \nreply",
      "TECO was a character-oriented editor. Also, it was widely available on RSTS, RSX, RT-11, ... and other DEC systems in the mid-70s. There's a character cursor. So if you opened a file with:  The quick brown fox jumped over the lazy.\n\nThe cursor would start before the T. 4C would position the cursor before the q. The 6D would delete quick . Then <esc><esc> would execute the command buffer.These fingers of mine learned TECO before they learned vi and then found vi easier to learn as a result. Besides the basic editing syntax, it was a programmable editor, hence the TECO emacs macros.Funny thing is that as fondly as I remember TECO, I've tried emacs a few times and have always worked my way back to vi/vim. I particularly like neovim now. I like using ex/command mode for doing bulk editing. Of course you can do the same thing in emacs but I've gotten used to it in vi. I remember programming TECO but I don't remember ever doing programmed editing.\n \nreply"
    ],
    "link": "https://pikuma.com/blog/origins-of-vim-text-editor",
    "first_paragraph": "The history of both Vi & Vim goes hand in hand with the history of open-source software itself. This article is a trip back to the origins of UNIX text editors. Let's look at the important players and historical events that shaped their evolution.I went to East London last week to visit my wife's alma mater, Queen Mary University. As I stopped to grab a cup of coffee, I received a message saying that Bram Moolenaar, the creator of Vim, had passed.To be honest, with a new family member keeping me busy at home, and a new course on MIPS assembler that I'm recording for my school, I am finding very difficult to keep up with the latest news. So, I confess that I received the news of Bram's passing almost a week too late.I did not know Bram personally and I am far from being a Vim connoisseur, but the fact that I was visiting Queen Mary University forced me to stop for a moment and reflect on how that place was connected to the long and vibrant history of Vim.Queen Mary University had an imp"
  },
  {
    "title": "Hydrogen vs. Battery Buses: A European Transit Reality Check (cleantechnica.com)",
    "points": 11,
    "submitter": "xbmcuser",
    "submit_time": "2025-04-16T11:26:27 1744802787",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43703998",
    "comments": [
      "I think battery buses have comprehensively won this one, to be honest. The biggest hydrogen bus fleet seems to be 35 vehicles; there are many BEV bus fleets in the hundreds and some in the thousands.As a certified old person, I'm having trouble getting used to them. It is unnatural for a double-decker bus to pull up near-silently, and then move off smoothly when you get on. They are _supposed_ to vibrate violently and sound like they might explode at any moment; it's traditional.(One of the bus route closest to me has a mix of fancy BEV buses and ancient diesel things from 2007, so I get an interesting selection. The other is mostly plugin hybrids, which are extra-disconcerting, as they're either silent or very noisy depending on mode.)\n \nreply",
      "The hydrogen economy hasn't made since to me from when I first heard about it 15+years ago. It's one of the clearest examples of academics not understanding how business works.\n \nreply",
      "I'm not really sure there is any place for a discussion - you would need a whole new infrastructure for hydrogen powered buses, while keeping a lot of the downsides of fossil fueled air breathing vehicles (eq. air filters filters regardless of if you burn the hydrogen or use it in fuel cells).With battery buses - you might need to slightly beef up the local transformer and installs some new wires and that's it.Or even better, do what the city mass transit company does here in Brno, Czech Republic - get trolley busses with batteries, that charge from the overhead wires while on the way, so they can then continue to serve additional destinations past the terminus of road electrification.It is also super handy for any road work, they just automatically stow their collectors and then once again under wires, deploy them. There is usually a small trough around the wires at this spot, guiding the 2 collectors to the 2 wires. As a result, the driver does not have to leave the vehicles when connecting or disconnecting from wired power.And it looks super cool! :)\n \nreply",
      "While I agree with you; just to be clear it's not \"slightly\" beef up the local transformer. If you imagine a medium sized depot with 50 buses stabled at any one time, and 300kW chargers (I believe you could go higher), that's 15MW peak which is not trivial to add in many cities overnight. You really need some sort of HV connection for that kind of load, the existing local LV distribution grid isn't going to handle it.I do definitely think green hydrogen has a big future ahead of itself though. We still use an absolutely ridiculous about of H2 in industrial processes (especially fertilizers).Europe could produce huge amounts of fertilizers in the summer in the future with all the excess solar and wind it has via this method.It seems to me hydrogen skipped a step - focus on replacing hydrogen feedstocks in industrial processes directly with green hydrogen, instead of replacing stuff up the chain that can be done with batteries directly anyway.\n \nreply",
      "> you would need a whole new infrastructure for hydrogen powered buses, while keeping a lot of the downsides of fossil fueled air breathing vehicles (eq. air filters filters regardless of if you burn the hydrogen or use it in fuel cells).Unless you burn the hydrogen, you aren't producing any emissions... unless you count water as an emission. Fuel cells don't produce any emissions.Burning hydrogen though, does produce some emissions, however it's pretty minimal. I believe it's only NOx, and even then at far lower rates compared to gas vehicles. No CO2, CO, or any other stuff from gas or not-fully-burnt gas.That said, I agree hydrogen has seemingly no place in something like buses. Frankly, the only places that I see hydrogen has any future is either going to be for planes and boats, or potentially for intermediate storage akin to batteries (i.e., create hydrogen with excess solar/wind power).\n \nreply",
      "Fundamentally battery buses are going to be cheaper to run. Regardless of initial outlay costs electricity that goes directly in with no conversion is achieving near 100% efficiency. Whereas with hydrogen that same electricity is being used to do electrolysis to get the hydrogen to begin with, compressing into fuel containers, travelling the fuel around the country and then pumping the fuel back in and then all the conversion losses from hydrogen to electricity to drive the vehicle. That chain is at best about 30% efficiency so its going to cost 3x as much at least.While it gets you better fuel density for added vehicle complexity its pricey to run even when the infrastructure exists, which it currently doesn't. Hydrogen is notoriously difficult to store because its the smallest element in the periodic table it just wafts through whatever container we try to put it in too causing a constant loss of fuel.There might be circumstances where its the right thing to do and the extra cost is worth it, public transport is unlikely to be that scenario. Its got value mostly for remote locations where the nearest electricity is quite far away, although the issue then becomes can you get the hydrogen there. If it never reaches proper economies of scale and infrastructure deployment it might always be a dead end and there really aren't that many people using vehicles so remote to have no access to electricity but are carrying fuel cells to get the range they need.\n \nreply",
      "From the article, \"A second obvious theme is the prevalence of hydrogen buses in industrial regions and cities that bought into the hydrogen for energy narrative that\u2019s falling apart now. Cologne, Aberdeen, Bolzano, Groningen/Drenthe, and Wuppertal are all trying to be hydrogen valleys, centers of the hydrogen economy\u2019s industry. That\u2019s going badly because it was always a bad idea, devoid of thermodynamic and economic reality.\"I think the last sentence speaks alot to hydrogens place in the sustainable energy field. It sounds like a good idea but the applications always seem to struggle with reality.\n \nreply",
      "Incomplete because of https://dialog.hochbahn.de/bus-in-zukunft/neue-brennstoffzel... and https://www.hochbahn.de/de/presse/pressemitteilungen/brennst... and https://www.ndr.de/nachrichten/hamburg/Hamburger-Hochbahn-st...(jooze tr\u00e4nntzl\u00e4yshun z\u00f6rvizz\u00e4ss!)TL;DR: Hamburgs mobility provider is trying it again, after failure in 2019 with 5 Busses, with 5 Busses (Fuel-Cell) again, this time allegedly 'mass production ready'.With the intent of max. 10% of the fleet based on this \u00b9, or similar, in 2030, which is their target for carbon neutrality.Got a little bit more range, refuels faster (in 15 minutes), than the few hours E-Busses (currently) need.Regarding infrastructure this has to be seen in the context of Hamburg wanting to be a hydrogen hub, because of its harbour, shipping, processing and such.Shrug? We'll see...\u00b9 actually the Hamburger Hochbahn isn't the only provider, about the other half comes from VHH ( https://vhh-mobility.de ) which don't use or intend to use hydrogen, instead going for battery electric exclusively. Which in the context of 'Hydrogen Hub Hamburg' mentioned above, seems logical, because they operate lines far out of that also.\n \nreply",
      "There's a few companies and labs in Germany who still manage to somehow sell hydrogen as a \"local innovation\" to government grants every now and then... Hydrogen busses, hydrogen trams, hydrogen trains. It never sticks, unsurprisingly.\n \nreply",
      "Yah well... \u201eGr\u00fcner Wasserstoff\u201c aus Hamburg: Senat weicht der Frage nach den Kosten aushttps://www.mopo.de/hamburg/hamburg-bei-gruenem-wasserstoff-...shrug Who am I to judge? ;->\n \nreply"
    ],
    "link": "https://cleantechnica.com/2025/04/14/hydrogen-vs-battery-buses-a-european-transit-reality-check/",
    "first_paragraph": ""
  },
  {
    "title": "Principles for Building One-Shot AI Agents (edgebit.io)",
    "points": 44,
    "submitter": "robszumski",
    "submit_time": "2025-04-16T16:30:53 1744821053",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43707372",
    "comments": [
      "Author of the post, love to see this here.Curious what folks are seeing in terms of consistency of the agents they are building or working with \u2013 it's definitely challenging.\n \nreply",
      "> A different type of hard failure is when we detect that we\u2019ll never reach our overall goal. This requires a goal that can be programmatically verified outside of the LLM.This is the largest issue : using LLMs as a black box means for most goals, we can't rely on them to always \"converge to a solution\" because they might get stuck in a loop trying to figure out if they're stuck in a loop.So then we're back to writing in a hardcoded or deterministic cap on how many iterations counts as being \"stuck\". I'm curious how the authors solve this.\n \nreply",
      "I think we need quantum systems to ever break out of that issue.EDIT: not as to creating an agent that can do anything but creating an agent that more reliably represents and respects its reality, making it easier for us to reason and work with seriously.\n \nreply",
      "Could you share the logic behind that statement?Because here I'm getting \"YouTuber thumbnail vibes\" at the idea of solving non-deterministic programming by selecting the one halting outcome out of a multiverse of possibilities\n \nreply",
      "That would be some Dr. Strange stuff. I\u2019m just saying a quantum AI agent would be more grounded when deciding when to stop based on the physical nature of their computation vs. engineering hacks we need for current classical systems that become inherently inaccurate representations of reality. I could be wrong.\n \nreply",
      "I don\u2019t believe quantum computers can solve the halting problem, so I don\u2019t think that would actually help.This issue will likely always require a monitor \u201coutside\u201d of the agent.\n \nreply",
      "I think you\u2019re right that they can\u2019t \u201csolve\u201d the halting problem but are more capable at dealing with it than classic ai agents and more physically grounded. Outside monitoring would be required but I\u2019d imagine less so than classical systems and in physically different ways; and to be fair, humans require monitoring too if they should halt or not, haha.\n \nreply",
      "u can\u2019t one shot anything, you have to iterate many many times.\n \nreply",
      "What is a \u201cone-shot\u201d AI Agent?\nA one-shot AI agent enables automated execution of a complex task without a human in the loop.Not at all what one-shot means in the field. Zero-shot, one-shot and many-shot means how many examples at inference time are needed to perform a taskZero shot: \"convert these files from csv to json\"One shot: \"convert from csv to json, like \"id,name,age/n1,john,20\" to {id:\"1\",name:\"tom\",age:\"20\"}\n \nreply",
      "Fair criticism. I was going for the colloquial usage of \"you get one shot\" but yeah I did read that Google paper the other day referring to these as zero-shot.\n \nreply"
    ],
    "link": "https://edgebit.io/blog/automated-dependency-updates-with-ai/",
    "first_paragraph": "EdgeBit is a security platform that helps application engineering teams to find and fix security vulnerabilities. The Dependency Autofix feature contains an extremely accurate reachability engine to identify impact to your app. Most updates have no impact, so engineers using EdgeBit can dedicate efforts on impactful upgrades. This translates to more time spent \u201con-mission\u201d instead of managing dependencies.This post will cover how to identify areas that can 1) use focused tools, 2) smartly handle errors and 3) harness the persistence of an AI agent to unlock massive efficiency gains, like we have done for Dependency Autofix, with some data to back it up.What is a \u201cone-shot\u201d AI Agent?\nA one-shot AI agent enables automated execution of a complex task without a human in the loop.EdgeBit\u2019s Dependency Autofix is built around one-shot code maintenance workflows - no human input is required. Unlike the typical AI within an IDE experience, where a developer manually accepts or rejects changes, "
  },
  {
    "title": "Hextraction, a free and open source board game (playhextraction.com)",
    "points": 38,
    "submitter": "chedoku",
    "submit_time": "2025-04-18T20:50:18 1745009418",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=43731746",
    "comments": [
      "\"Hextraction is a free-form board game for any number of people where players compete to race a ball across a customizable board, strategically placing hexagonal tiles to create paths and obstacles. Players can 3D-print their own tiles and configure the board to their liking.\"I feel like that text is missing from the landing page.\n \nreply",
      "Worth noting that the designer, Zack Freedman, has a popular YouTube channel[0] detailing all sorts of projects in witty videos. They are targeted towards a broad audience so aren't excruciatingly technical, but I think they make for good entertainment and inspiration.[0]: https://www.youtube.com/zackfreedman\n \nreply",
      "And Hextraction was one of his April 1st videos if I remember correctly, where he pitched it as a hexagonal gridfinity variant.\n \nreply",
      "Big fan of Zack - his videos are informative and enjoyable while not being in the \u201cboring tutorial\u201d zone.\n \nreply",
      "Why does the video link go to gridfinity? Maybe the author has made a mistake\n \nreply",
      "Hextraction is gridfinity 2.0, and in addition to being a game, a particularly high effort april fools joke.\n \nreply",
      "I can't find any reference to \"open source\" on the page. I see \"free\" in the title of the page but it's clear from context that this is meant as \"gratis\".The \"free and open source board game\" in this posts title is misleading as \"free\" can be easily misinterpreted as \"libre\" (as in libre/freedom).The title should probably be changed for this post.EDIT: Nevermind, the 3d design files for the tiles are available under an MIT license [0] and the \"where to get\" page at does say \"open source\" (correctly) [1].[0] https://thangs.com/designer/ZackFreedman/3d-model/Hextractio...[1] https://www.playhextraction.com/where-to-get\n \nreply"
    ],
    "link": "https://www.playhextraction.com/",
    "first_paragraph": ""
  },
  {
    "title": "UML diagram for the DDD example in Evans' book (github.com/takaakit)",
    "points": 57,
    "submitter": "takaakit",
    "submit_time": "2025-04-18T19:40:06 1745005206",
    "num_comments": 28,
    "comments_url": "https://news.ycombinator.com/item?id=43731250",
    "comments": [
      "I used to work heavily in this kind of system modeling (developing tools for it, and dogfooding), and still use it when high-value for figuring out or communicating an aspect of a system.Here's a challenge, to help appreciate the nature of these: try to find an error in the diagrams.It's usually harder than you might think, since, even when you know the notation and metamodel semantics, it's information-dense talking about a domain.You usually have to know or learn a lot about the domain, and/or have an domain expert you can walk through it exhaustively, before you can find errors.And an error can be whopper: a single graph edge missing, or between the wrong vertices, or with the wrong adornments can have huge implications.For example, large amounts of work that have to be redone, or a project abandoned, or a mess that takes 10x longer than it should to write, and 10x the tech debt going forward with a bad architecture, or a fundamental security flaw.One of the mistakes many people make is treating formalized diagrams as \"marketecture\" visuals, like they only need for handwaving sales presentation slides, where there's some kind of visual for every concept they want to be able to literally point to.Nope, if you have software engineers and domain experts communicating and reasoning about your system in only the fuzzy terms of sales/exec presentations, you're really stabbing yourself in the face.\n \nreply",
      "What happened to UML? I remember it was everywhere in enterprise computing 20 years ago but seems to have disappeared now.Is it still around or did it go the way of SOAP, Java Applets? If not, what has replaced it?\n \nreply",
      "My theory is that Agile killed it. UML requires a lot of planning up front, and in my unfortunate experience, any sort of planning is completely antithetical to Agile.\n \nreply",
      "Experiencing this right now, zero planning for a re-write of a system\n \nreply",
      "I'm kind of hazy about where the boundaries between bona fide UML and PlantUML are, but PlantUML is in pretty common use in my world - more for sequence diagrams and state diagrams than class diagrams though. Of course PlantUML has competition from things like Mermaid, but they're all much of a muchness.My very non-scientific impression is that tools like Rational were mostly used for drawing class diagrams and ... that just turned out not to be that useful because the tooling didn't exist to round-trip changes in the code back into the diagrams meaning the diagrams lost parity with the code rather quickly. It was sort of useful in the linear design/code/deliver world, but we're a lot more iterative now.\n \nreply",
      "I remember having to use Rational Rose back in the day, and I had to ask my boss why because the software crashed and the files got corrupted all of the time. If it didn\u2019t help them write better software, why were we using it?That said, I still find plantuml to be helpful, particularly for sequence and activity diagrams. With LLMs especially. Use dependency injection, fine granularity components, sequence and activity flows. At least for me, helps keep my mind organized. But, these days I work alone. I feel it may be too dated for the modern developer.\n \nreply",
      "I just learned about UML earlier today when I wanted to bring in a mermaid flowchart into lucidchart. If you bring in mermaid using lucidchart, it makes it a raster image. But if you use UML markup, you can ungroup it and modify. I couldn\u2019t get a good way to convert from mermaid to UML  markup that lucidchart could handle. Ended up a dead end for me.\n \nreply",
      "On a similar note I've had various annoyances with wanting to round trip diagrams from Mermaid or PlantUML into Miro and vice versa. There doesn't seem to be much out there to facilitate this, which is strange, because it feels like a very enterprisey thing to want to do.There's probably a SaaS product in it for someone sufficiently interested in the topic... probably not at unicorn scale, but enough for a side income perhaps?\n \nreply",
      "I think folks upgraded to GML [0][0] https://wiki.c2.com/?GalacticModelingLanguage\n \nreply",
      "I love it.  Even with GML, you run into problems. Diagramming is an art more than a science. You have to know your audience (technical people, marketing types, investors, customers...)Leaving stuff out is also important. (Example: Unless you're building a DNS related product, don't bother to include \"DNS\" in your diagrams. Your use of it is assumed.)\n \nreply"
    ],
    "link": "https://github.com/takaakit/uml-diagram-for-ddd-example-in-evans-book",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        UML diagram for the DDD example\u2014a cargo shipping system\u2014from Eric Evans' book\n      This project uses UML diagrams to illustrate the structure and behavior of the DDD example\u2014a cargo shipping system\u2014from Eric Evans' book (Domain-Driven Design: Tackling Complexity in the Heart of Software). These diagrams are created based on the source code of the dddsample-core project on GitHub. The diagrams aim to help us understand how the example implements the strategic and tactical designs of DDD and the mechanisms by which it operates.If you want to get into DDD theory, check out Evans' book. If you want to get into the implementation details, check out the source code of the dddsample-core project. Also, if you want to understand the UML model behind these diagrams, open the model file (ddd-example-in-evans-book.asta) using the modeling too"
  },
  {
    "title": "Jupiter, it's mushballs all the way down (sciencedaily.com)",
    "points": 24,
    "submitter": "docmechanic",
    "submit_time": "2025-04-16T14:46:47 1744814807",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.sciencedaily.com/releases/2025/04/250415183433.htm",
    "first_paragraph": ""
  },
  {
    "title": "Judge Rules Blanket Search of Cell Tower Data Unconstitutional (404media.co)",
    "points": 309,
    "submitter": "bradac56",
    "submit_time": "2025-04-18T18:16:27 1745000187",
    "num_comments": 126,
    "comments_url": "https://news.ycombinator.com/item?id=43730545",
    "comments": [
      "> U.S. District Juste Miranda M. Du rejected this argument, but wouldn\u2019t suppress the evidence. \u201cThe Court finds that a tower dump is a search and the warrant law enforcement used to get it is a general warrant forbidden under the Fourth Amendment,\u201d she said in a ruling filed on April 11. \u201cThat said, because the Court appears to be the first court within the Ninth Circuit to reach this conclusion and the good faith exception otherwise applies, the Court will not order any evidence suppressed.\u201dIt continues to amaze me that police are the only group who can use the defense of ignorance of the law.\n \nreply",
      "Not only that, when they lie in conversations/interrogations, they can lie about what the law is, as well as what official acts can/will undertake.To me there is a fundamental difference between lies like:1. \"Your buddy in the next room already ratted you out.\"2. \"Sign this admission and you'll only get 6 months, tops. If you don't, we can seize your house and your mother will be living on the streets. \"\n \nreply",
      "When I was a child, I thought police had to go to law school. How else would you enforce the law if you didn't know what the law was?\n \nreply",
      "We all have to go to law school.How could you live in the world without breaking the law if you didn't know what the law was?\n \nreply",
      "There have been many periods in US history where sets of laws were purposefully created that criminalized activities that nearly ~100% of the population engage in. The intent of those isn't to stop those activities, and there's no intent of prosecuting everyone. The intent is to be able to prosecute any individual person or someone close to them, at any arbitrary point in time.Many of today's lawmakers no longer have that intent, but the system as a whole still keeps running in a manner that allows tools of that nature to be used against targeted individuals and populations.\n \nreply",
      "Yup. Today these are traffic laws (even if you're a pedestrian).\n \nreply",
      "I took a class in college from a lawyer who said he started as a cop but wanted to understand the law better so he went to law school at night. When he graduated the chief (or whatever) told him he couldn\u2019t practice law and be a cop, and even though he had no intention of actually being an attorney, they let him go.\n \nreply",
      "PDs have attorneys on call and prior to that they can call their sergeant if they are unsure. Even real lawyers don't know every aspect of every law on the books.What baffles me is the hypocrisy in the political party that wants more government and regulation is the same one that hates the men who enforce it.\n \nreply",
      "They're supposed to be trained on it, and they probably get a week maybe, depending on the academy. The rest is how to beat your ass.\n \nreply",
      "Never talk to the police.  Let your lawyers do the talking.\n \nreply"
    ],
    "link": "https://www.404media.co/judge-rules-blanket-search-of-cell-tower-data-unconstitutional/",
    "first_paragraph": "This article was produced in collaboration\u00a0with Court Watch, an independent outlet that unearths overlooked court records.\u00a0Subscribe to them here.A judge in Nevada has ruled that \u201ctower dumps\u201d\u2014the law enforcement practice of grabbing vast troves of private personal data from cell towers\u2014is unconstitutional. The judge also ruled that the cops could, this one time, still use the evidence they obtained through this unconstitutional search.\u00a0Cell towers record the location of phones near them about every seven seconds. When the cops request a tower dump, they ask a telecom for the numbers and personal information of every single phone connected to a tower during a set time period. Depending on the area, these tower dumps can return tens of thousands of numbers.Cops have been able to sift through this data to solve crimes. But tower dumps are also a massive privacy violation that flies in the face of the Fourth Amendment, which protects people from unlawful search and seizure. When the cops "
  },
  {
    "title": "There's Life Inside Earth's Crust (noemamag.com)",
    "points": 58,
    "submitter": "jprohov",
    "submit_time": "2025-04-18T18:35:05 1745001305",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=43730701",
    "comments": [
      ">If the subsurface were like an inert container, we could just pump that gas down there, sit back and watch the global temperature stabilize and the glaciers creep back to where they\u2019re supposed to be.I find it fascinating how some scientists seem so sure about how things are 'supposed to be'. The Earth's climate has never been static. Almost everything present today (temperature, pressure, percentage of each gas in air, etc.) has been higher and lower (sometimes by a lot) in the past.What makes anyone think that they know the ideal amount of anything? Higher temperatures will certainly cause change, but why does every prediction paint a 'worst case scenario'?\n \nreply",
      "> The major categories of visible life on Earth have been pretty much settled for centuries. But it wasn\u2019t until the 1980s that scientists found \u201cintraterrestrials\u201d \u2014 microscopic organisms living in what the biogeochemist David Valentine calls a \u201cmicrobial purgatory deep below the Earth\u2019s surface.\"Does anyone know the paper(s) from the 1980s where the discovery was published?\n \nreply",
      "Here's a survey article from the late 80s which should have a rich references section for you:Ghiorse & Wilson, https://doi.org/10.1016/S0065-2164(08)70206-5I think there are two strands: petroleum companies have long been interested in any connection between deep biology and oil; and I think around that time people found microbes in a few sterile-seeming aquifers.\n \nreply",
      "Thanks!\n \nreply",
      "This reminded me of a Kurzgesagt video from a few months ago on the same topic [0]. I see that the author, Karen Lloyd, was one of the experts they consulted when making that video.[0] https://www.youtube.com/watch?v=VD6xJq8NguY\n \nreply",
      "Reminds me of Thomas Gold's \"Deep Hot Biosphere\" theory: \nhttps://en.wikipedia.org/wiki/Thomas_Gold#%22Deep_Hot_Biosph...\n \nreply",
      "If there is life on Mars, it will be deep underground!Do we know anything about the occasional Methane emissions I heard about on Mars?\n \nreply",
      "There are areas on Mars where we strongly believe brine is right below the surface, so there could be life underground but it may not all be that deep.Edit: found it:https://www.jpl.nasa.gov/images/pia10911-ice-on-mars-now-its...There have been cases where we believe we've seen ice form in rover tracks, hinting at water just below the surface.\n \nreply",
      "This is incredibly exciting! I had no idea that we have photo evidence of ice on Mars. Thank you for sharing this!Update: It\u2019s so hard to believe that this was captured in 2008!\n \nreply",
      "Perhaps. If it does, it probably couldn't be past a certain depth. The deepest man-made hole was about 12km, and reached roughly 180C at that depth. That's well beyond what even the most durable hyperthermophile organisms can withstand, to speak nothing of what the pressure would be like at greater depths.\n \nreply"
    ],
    "link": "https://www.noemamag.com/theres-life-inside-earths-crust/",
    "first_paragraph": ""
  },
  {
    "title": "A New ASN.1 API for Python (trailofbits.com)",
    "points": 138,
    "submitter": "woodruffw",
    "submit_time": "2025-04-18T14:11:40 1744985500",
    "num_comments": 46,
    "comments_url": "https://news.ycombinator.com/item?id=43728279",
    "comments": [
      "Oh right, the asn1 crate, which supports CHOICE but only up to 3 alternatives, which means it can't even be used to implement X.509 certificate decoding. Makes me wonder what they're going to do when they get that far.\n \nreply",
      "A small bit of historical context. When I was participating in the PKP meetings at RSADSI, I believe it was Ron who insisted that DER was the only reasonable choice if we were going to encode things with ASN.1 (which we were because both DEC and RSA had already insisted that it had to be OSI compatible or they wouldn't support it, my suggestion that we use Sun's XDR was soundly rebuked, but hey I had to offer)Generally it was presumed that because these were 'handshake' type steps (which is to say the prelude to establishing a cryptographic context for what would happen next) performance wasn't as important as determinism.\n \nreply",
      "oh.  did i meet you there?  i was contracting at RSADSI at the time and argued w/ Burt K. about how easy it was to mess up a general DER parser, much less an ASN.1 compiler.  I remember we found about two bugs per week in ICL's compiler.  Burt and Ron were BIG ASN.1 fans at the time and I could never figure out why.  Ron kept pushing Burt and Bob Baldwin to include more generic ASN.1 features in BSAFE.  Part of my misery during SET development can be directly traced to ICL's crappy ASN.1 compiler, yet it was probably the best one on the market at the time.Anywho... XDR isn't my favourite, but I would have definitely preferred it to DER/BER/ASN.1.Stop me before I make a CORBA reference.\n \nreply",
      "> oh. did i meet you there?Probably :-). Ron was a huge fan of Roger Needham's (and, ngl, I was too) and Roger along with Andy Birrell and others were on a kick to make RPCs \"seamless\" so that you could reason about them like you did computer programs that were all local. Roger and I debated whether or not it was achievable (vs. desirable) at Cambridge when we had the PKI meeting there. We both agreed that computers would get fast and cheap enough that the value of having a canonical form on the wire vastly outweighed any disadvantage that \"some\" clients would have to conversion to put things in a native format they understood. (Andy wasn't convinced of that, at least at that time). But I believe that was the principle behind the insistence on ASN.1, determinism and canonical formats. Once you built the marshalling/unmarshalling libraries you could treat them as a constant tax on latency. That made analyzing state machines easier and debugging race conditions. Plus when they improved you could just replace the constants you used for the time it would take.\n \nreply",
      "One of the few concessions I'll make to Sun: XDR was under-appreciated.\n \nreply",
      "You can thank Tom Lyon for it. Tom pretty much did the entire RPC/XDR/NFS stack to kick things off.\n \nreply",
      "There is also rasn library for Rust that now supports most of the codecs (BER/CER/DER/PER/APER/OER/COER/JER/XER).Disclaimer: I have contributed a lot recently. OER codec (modern flair of ASN.1) is very optimized (almost as much as it can be with safe Rust and without CPU specific stuff). I am still working with benchmarking results, which I plan to share in close future. But it starts to be the fastest there is in open-source world. It is also faster than Google's Protobuf libraries or any Protobuf library in Rust. (naive comparison, no reflection support). Hopefully other codecs could be optimized too.[1] https://github.com/librasn/rasn\n \nreply",
      "This one looks interesting. A few years ago I looked at all of the Rust ASN.1 libraries I could find and they all had various issues. I'm a little surprised I didn't find this one.\n \nreply",
      "[flagged]",
      "The Python library proposed in TFA is to be based on a different, DER-only Rust ASN.1 library[1]. So ASN.1 in Rust is more than tangentially relevant here.[1] https://github.com/alex/rust-asn1\n \nreply"
    ],
    "link": "https://blog.trailofbits.com/2025/04/18/sneak-peek-a-new-asn.1-api-for-python/",
    "first_paragraph": "If you\u2019ve ever worked with cryptography, PKI schemes, or low-level networking\nin Python, you\u2019ve likely encountered ASN.1.\nASN.1 undergirds every TLS handshake (via X.509 path validation),\nprovides the serialization layer for core internet protocols like LDAP, SNMP,\nand 3GPP, and generally operates as the lingua franca of cryptographic\nprimitive and protocol representation.ASN.1\u2019s critical role is complemented by a colorful security history:\nimplementations of ASN.1\u2019s encoding rules have historically been a\nrich source of\nmemory corruption and denial-of-service vulnerabilities. Similarly,\nASN.1\u2019s presence at the lowest layers of the internet\u2019s protocols\nmakes performance and a lack of parser differentials a critical requirement.Python has multiple excellent ASN.1 implementations (like pyasn1,\nasn1, and\nasn1tools), but these generally\nfall into the latter category: being written purely in Python makes performance\na concern, and integration into a stack where other ASN.1 parsers are used\n"
  },
  {
    "title": "Cyberpunk 1958: The Early Days of the Polish IT Industry (culture.pl)",
    "points": 102,
    "submitter": "StefanBatory",
    "submit_time": "2025-04-15T21:01:02 1744750862",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=43698327",
    "comments": [
      "It's fascinating to have a glimpse into a parallel history of computing that happened in a small country without the resources to make it big, but with tireless efforts of brilliant mathematicians and engineers who made the advancements against the odds.If the history ran along a parallel path, I wonder what could have been different and what would have ended up exactly the same.For the PL nerds who are curious about Loglan, check out: \nhttps://www.researchgate.net/profile/Andrzej-Salwicki/public...\n \nreply",
      "I found this YouTube channel about the MERA-400, complete with interviews with its designer [0]. Unfortunately, it is all in Polish.[0] https://youtube.com/@mera400\n \nreply",
      "Fortunately, automatically generated subtitles are often good enough.\n \nreply",
      "> as the inefficiency of the centralisation efforts meant that it was met with delays and a lack of coordination.Starting in 1981, I lived through the evolution of \"personal computers\" and have worked in the startup side of high tech most of my career. Even in the U.S. it was hard to create a successful, sustainable business in computing. I can't even imagine trying to do the same in the Eastern block with central planning, lack of ecosystem and myriad other challenges. Here in the U.S. there was a rueful saying in tech that \"sometimes the better product doesn't win\" but it was a saying because it was usually an exception. At least there was a general expectation that better products would win. It's kind of tragic how much engineering talent went to waste or was never utilized behind the iron curtain.A little over 20 years ago I visited Warsaw for a few days and, of course, sought out the technology museum. I think I may have been the only visitor while I was there. Every large hall had a dedicated guard sitting in a chair, who mostly looked like retired pensioners. I felt bad because I woke up a lot of nice people just walking quietly through. The museum was mostly focused on industrial, manufacturing and agricultural technology but there was quite an extensive computer hall and it was chock full of fascinating mainframe and mini-looking systems I'd never seen, even in pictures. I was surprised that, other than terminals, there was little in the way of desktop or home computers. Thinking about it I realized that circa 2000, Poland's early desktop and home computers were probably still in use and a few years away from museum fodder. The only bad part was there was virtually no info in English (at least back then) and no mobile phone translate apps.\n \nreply",
      "> Thinking about it I realized that circa 2000, Poland's early desktop and home computers were probably still in useAround 2000 we were already using normal x86 machines in the offices and homes. There was a company named Optimus which had multiple branches that back then provided: computers (assembling and selling these), software - they've become an official distributor for e.g. Activision, Ubisoft, Id Software, Disney etc., translations for foreign software, and they also become one of two offical Nintendo distributors in Poland. Optimus had chances to become a really good player here but due to financial management \"problems\" they have failed - to put this short. In 2009 Optimus merged with what nowadays is known as CD Projekt. Optimus' other child - a web portal known originally Optimus Net has become onet.pl and it survived till today but become a part of Ringier Axel Springer Poland.There were specific places which used our \"native\" machines for years. For example last Odra computer was shut down on April 30th in 2010 after 34 years of continuos work at Polish Railways computer centre.Beside the technology museum you mentioned there is (or was - not sure what happen) an Apple museum in Warszawa - folks hoarded over 1700 items under their care.https://applemuzeumpolska.webflow.io/en/homehttps://nmt.waw.pl/en/Country itself changed in last 20 years and if you haven't seen it again in that time, you should return\n \nreply",
      "> Around 2000 we were already using normal x86 machines in the offices and homes.Yes, I assumed so but figured if Poland had 8-bit micros in the mid-80s similar to the Galaksija in Yugoslavia or the rare Pecom 64 (of which I have one in my collection!), that they might still be in original owners hands in 2000 instead of museums.> Country itself changed in last 20 years and if you haven't seen it again in that time, you should returnIt was lovely when I visited but there were still some signs of the old soviet era lingering. I'm sure with the economic growth since then it's remarkably different today. I hope to see it someday!\n \nreply",
      "It\u2019s not mentioned but the ODRA 1300s were ICT/ICL 1900 compatibles, pretty far from the Western state of the art (circa early 1960s).\n \nreply",
      "also pre cyberpunk movie https://en.wikipedia.org/wiki/On_the_Silver_Globe_(film)\n \nreply"
    ],
    "link": "https://culture.pl/en/article/cyberpunk-1958-the-early-days-of-the-polish-it-industry",
    "first_paragraph": ""
  },
  {
    "title": "How a yacht works: sailboat physics and design (onemetre.net)",
    "points": 162,
    "submitter": "stass",
    "submit_time": "2025-04-15T21:19:33 1744751973",
    "num_comments": 61,
    "comments_url": "https://news.ycombinator.com/item?id=43698522",
    "comments": [
      "I've been getting into sailing, solely for the purpose of cruising and sailing for fun with no interest in racing.  As I've started talking to sailors, I've realized that you need to gauge whether you're speaking with a racer or a cruiser.  Racers will claim these are not mutually exclusive categories, because of course racers can also cruise.  But racers who cruise will ultimately talk to you like racers.Racers are, as you might expect, fanatical about performance.  They will go very deep into details about optimizing sail trim and shape, and using wildly-named specialized foresails (not merely spinnakers, but asymmetric spinnakers, reachers, screachers, code-zeroes, etc). It's a bit like talking to an SCCA racer about your new pickup truck.In fact, if you have a good grounding in the basics of sail trim (\"when in doubt, let it out\"), and know how to put a reef in you can have a fine time getting between points A and B in a sloop with a basic mainsail and jib.\n \nreply",
      "I learned to race first and am now learning to cruise. And I\u2019m glad I learned in that order. Cruising has a very specific set of skills that you\u2019ll never learn racing. That stuff will be obvious and if you want to cruise, you\u2019ll learn those skills.But what is not obvious to cruisers is that racing teaches you how to handle your boat in many different and difficult conditions, with confidence. When you race you have to go from a specific place to another specific place and you don\u2019t get to pick the weather. You\u2019re often pushing your boat and are in high stress situations.Often, cruisers will go out, when it\u2019s nice, and turn on the motor when they can\u2019t make their boat go the way they want it to go.So, what happens when you\u2019re out sailing and an unexpected storm rolls in?  Because if you sail enough, especially offshore, it 100% without a doubt will happen. I\u2019d honestly be pretty comfortable handling the boat through all but the worst weather, boat breaking weather. And even that, I would be confident in my safety gear and ability to contact support for a rescue. Because all of that is drilled into you as a seasoned racer. And I\u2019ve been through some bad weather on the race course. I\u2019ve had to make my boat go upwind in horrible sea state for hours on end while my crew is throwing up from sea sickness.There are multiple occasions on which I\u2019ve turned down sailing with cruisers because I just don\u2019t trust that they have the skills or equipment to keep me safe should things go sideways.\n \nreply",
      "Yup - realised the knife wasn\u2019t for show when we were out of control with a knotted spinnaker halyard headed for some rocks.\n \nreply",
      "Exactly right.  I\u2019ve known from when I started sailing 35 years ago that I was a racer.Sailboat racing is amazing; it\u2019s this incredibly complex exercise involving physical boat handling skills, teamwork, leadership, communication (in a jargon that itself takes a year to internalize), as well as physics, geometry, meteorology, and minute observation of effects (that dark patch on the water or the flutter of a telltale).  All of this feeds into strategic decisions on where to position your boat and tactical decisions of how to do so.It looks crazy boring from the outside but if you get into it, it\u2019s an activity that is intensely mental as well as physical and requires a very broad set of skills.\n \nreply",
      "That sounds like so much fun. How much of a demand does it place on you physically, ie how fit do you need to be to do it well?\n \nreply",
      "Counterintuitively, the bigger the boat the less the fitness requirement.Small boats (dinghies) require crew weight in certain places (\u201chiking\u201d as far out to windward as possible) and have less mechanical advantage in the boat systems.Larger boats, the forces scale out of the human range quickly and the crew relies on winches and pulleys to move the sails.\n \nreply",
      "I started sailing in high school and I was fat and out of shape but I was good and I was told I could have been very good. The joy of sailboat racing as the comment above made very clear, it's a brain game. If you're interested you can learn to sail, and race, pretty much anywhere with water, most places have some club or group that is racing Lasers, it's a good place to learn, how fit you need to be depends how far you want to go but it's not the primary factor in being good as far as I can tell (I'm an ok sailor these days,  but some of the folks in here are clearly very good).\n \nreply",
      "I finished my first race Wednesday after a few years sailing casually. And, although it\u2019s true that whenever there is more than one sailboat going the same direction it\u2019s a race, being in a fleet on a defined course is much faster paced and precise.  My analogy to driving is that cruising is being able to drive on empty roads, and racing is driving in traffic \u2014 it becomes about understanding the flow and rules spoken and unspoken.\n \nreply",
      "The hardest thing for me to get used to is that unlike cars, sailboats do not have brakes! Even the \"throttle\" is under your control only indirectly.   Out in the ocean with nothing to hit this is not much of an issue, anyone can do it.Close to other boats and rocks and other hazards it takes some practice. Pros can to sail into the harbor,  luff up and grab the buoy without touching the engine.Having no brakes really teaches you to plan ahead.\n \nreply",
      "I've been teaching dinghy sailing since I turned 18 (20 years now, give or take) as a voluntary position in a youth group and whilst the fundamentals of sailing yachts and dinghies are much the same, dinghy sailing is a much more dynamic and (oftentimes more fun) discipline. For example, whilst it's true that there's no brake on a yacht (save for backing your motor hard astern), in a dinghy you have the ability to do stuff like backing the sail which gives you much more control. It's _so_ satisfying when it's blowing hard to come steaming up towards a safety RIB then turn head to wind at the last moment, back the sail hard (literally push the boom over), jump onto the foredeck and then step off into the safety boat with the painter in your hand.\n \nreply"
    ],
    "link": "https://www.onemetre.net/Design/Design.htm",
    "first_paragraph": "\n\n      \u00a0\u00a92025 Lester Gilbert"
  },
  {
    "title": "Show HN: (bits) of a Libc, Optimized for Wasm (github.com/ncruces)",
    "points": 54,
    "submitter": "ncruces",
    "submit_time": "2025-04-18T18:06:25 1744999585",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=43730458",
    "comments": [
      "Wasm intrinsics look neat as a higher-level fixed size SIMD abstraction. I wonder how good the compilers can do if using them for AOT targets with libraries like simd-everywhere.string.h is missing strstr(), there's an algorithm of similar complexity you might consider: http://0x80.pl/notesen/2016-11-28-simd-strfind.html\n \nreply",
      "Yeah, so far I did exactly the ones (my build of) SQLite needed and not others.If there's interest, the set of implemented functions can definitely be extended.\n \nreply",
      "This looks like a nice approach to making wasi-libc faster. Could you submit these changes upstream?\n \nreply",
      "I'd like to be a little more sure that I'm not totally messing things up before doing that, but yes, eventually, that would be a nice outcome.I've also only really tested wazero. I can't know for sure that this is a straight improvement for other runtimes and architectures.For instance, the code delays using wasm_i8x16_bitmask as much as possible, because on Aarch64 it can be slower than not using SIMD at all, whereas it's plenty fast on x86-64.\n \nreply",
      "The maintainers of wasi-libc are some of the best people to review this, and I don\u2019t think it would be wasting their time to ask them to look at a PR.\n \nreply",
      "A PR is a significant investment from me. I'd have to figure out where something like this is supposed to fit, how the build infra works, etc.One of the nice things about Go is how much that's a solved issue out of the box, compared to almost everything else; certainly compared to C.Pinging them in an issue: https://github.com/WebAssembly/wasi-libc/issues/580\n \nreply",
      "It is still a bit early, but I'm majorly bullish on WASM for multiple use cases:1. Client side browser polyglot \"applets\" (Java applets were ahead of their time IMO)2. Server side polyglot \"servlets\" (Node.js, embedded runtimes, etc.)3. Language interop/FFI (Lang A -> WASM -> Lang B, like wasm2c)Why is #3 so interesting? The hardest thing in language conversion is the library calls. WASI standardizes that, so all the proprietary libs will eventually compile down to WASI as a sort of POSIX/libc like layer. In addition, WASM standardizes calling convention. The resulting new source code may not look like much, but it will solve the FFI calling convention/marshalling/library issues nicely.\n \nreply",
      "I\u2019m not sure how it solves the FFI problem. Lowest common denominator calling conventions don\u2019t make it any easier to bridge languages than it already is.C calling conventions are already the standard for FFI in native code, and that means dropping down to what can be expressed in C if you want to cross that boundary.\n \nreply",
      "As far as Go is concerned, the Wasm sandbox makes the (addressable, C) stack explicit, which solves at least some of the issues CGO has to deal with.It's not a panacea, though; it introduces other issues.\n \nreply"
    ],
    "link": "https://github.com/ncruces/go-sqlite3/tree/main/sqlite3/libc",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          "
  },
  {
    "title": "Ink and Switch Constraint System (2023) (inkandswitch.com)",
    "points": 66,
    "submitter": "mpweiher",
    "submit_time": "2025-04-18T17:09:53 1744996193",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=43729932",
    "comments": [
      "The comment on constraints which still blows me away is the footnote on the readme for Dune 3D:https://github.com/dune3d/dune3d>1. I ended up directly using solvespace's solver instead of the suggested wrapper code since it didn't expose all of the features I needed. I also had to patch the solver to make it sufficiently fast for the kinds of equations I was generating by symbolically solving equations where applicable.(anyone looking for an easy-to-use opensource 3D CAD program should consider it)For folks not familiar w/ Solvespace it's a light-weight 3D CAD program: https://solvespace.com/index.plProbably a bit more approachable for folks is: https://www.cadsketcher.com/ which adds the Solvespace constraint solver to Blender.\n \nreply",
      "Nice.Constraint solving like that has been a feature in CAD programs for years. Here's Autodesk Inventor's 2D sketch mode.[1] You get an error if you try to overconstrain something. There's a symbolic solver checking for over-constraint.Under-constraint is harder to deal with. There's a count of the number of additional constraints needed to specify the drawing fully. You don't have to get that count down to 0, but if you aren't just sketching for illustration, it's expected that you reach the fully constrained and dimensioned state before cutting metal.Scaling problems dominate as drawings get more complex. It's easy to do this for high school geometry problems. It's hard to do it for jet engines. User interface design for dense drawings is really hard. \nWhat do you do when stuff is on top of other stuff? The big, expensive CAD systems (Autodesk, Dassault, SolidWorks) have struggled through the scaling problem.[1] https://www.youtube.com/watch?v=r3LB0f-keL8\n \nreply",
      "One of the cited references is Guillermo Webster \u2014 and while the article lists uncmin as the desired artifact, the project that uncmin was developed for takes the concept beyond layout to back solving for desired program outputs.Carbide [0] is the project that encapsulated some of this in a workable demo. It\u2019s really cool![0] https://alpha.trycarbide.com/\n \nreply",
      "See also their blog post on Fuzzy Constraints (2023). https://www.inkandswitch.com/untangle/Madly in love with how forward a frontier Ink & Switch cuts towards. Trying to make software less of a handcrafted artifact that each individual corporation builds on their own, as they see fit, and making computing a broader more universal project, with more regular hooks for humans to get themselves in the loop.A lot of \"why are we still writing dead programs\" vibes, in great ways. https://jackrusher.com/strange-loop-2022/ https://news.ycombinator.com/item?id=33270235 (181 points, Oct 2022, 61 comments)\n \nreply",
      "This is a rad read. I love everything ink and switch does, and Ivan's podcast \"The Future of Coding.\"There is an important age-old piece of advice though: \"never ask a man his salary, a woman her age, or Ivan when he's going to publicly release hest.\"\n \nreply",
      "A reminder, for those who find TAOCP useful, Knuth released \"Volume 4 Fascicle 7, Constraint Satisfaction\" last month. It connected a lots of dots for me, but like most of TAOCP may/ or may not be useful standalone depending on the individual.It helped unify what can be a complex intersection of fields with conflicting terms in a way that I could guess the direction this post was going.\n \nreply",
      "i will just say that i think these guys do amazing, amazing, very thoughtful work.\n \nreply"
    ],
    "link": "https://www.inkandswitch.com/ink/notes/phase-2-constraint-system/",
    "first_paragraph": "At the beginning of phase 2, we weren\u2019t sure what to do about constraints. Based on past exploration, constraints seemed to hold a lot of promise but were notoriously unreliable. A good constraint system could unify and power a number of key aspects of the dynamic medium we seek. It would allow for mechanical constructions, like a rope and pulley, that feel physically correct. It would allow for a computational model that bridged between algebraic formulae and tangible objects, like an architectural drawing that changed in response to edits in a parameter table. It\u2019d allow for true bidirectional computation, instead of the limited / biased computation we had in Crosscut.But constraint systems are hard to implement. They tend to suffer from the following issues:Early in this phase Alex was optimistic that with a bit of effort these issues could be overcome. After a few weeks he was able to show very promising results. This early success built on his earlier work on propagation of knowns"
  },
  {
    "title": "Defold: cross-platform game engine (defold.com)",
    "points": 326,
    "submitter": "xd",
    "submit_time": "2025-04-18T08:15:20 1744964120",
    "num_comments": 136,
    "comments_url": "https://news.ycombinator.com/item?id=43726051",
    "comments": [
      "They have gone with an interesting licensing solution here. I really appreciate that it is labeled as a source-available license instead of Open Source.https://defold.com/license/You can make proprietary changes to the engine without releasing them (unlike GPL). You can freely monetize games built with the engine, and they make some assurances that there won't be a bait-and-switch.And finally, the reason why this is not Apache 2.0- you cannot monetize (forks of) the game engine itself.This seems fair and carefully considered. Kudos to the team!\n \nreply",
      "I agree that the license looks fair. Not everything has to be OSI-compliant open source. They even support WASM!\n \nreply",
      "I like the licence, and it is  for me open source in spirit if not in letter, but there is a case that could cause problems : what if you sell services for a closed source version of defold ?\n \nreply",
      "It specifically says you are not allowed to commercialize the engine or a derivative, so that sounds like something that is not intended to be allowed, though I feel like it might take a lawyer to decide whether or not that is technically allowed by the license.\n \nreply",
      "You'd first have to make proprietary changes, which you are not allowed to release, and so there's nobody to sell those services to.\n \nreply",
      "> You are free to distribute original or modified (derivative) versions of DefoldYou just don't have to release the code if you do change it.Although I'm unsure if selling services on your modified game engine, that you released the source of, counts as commercialization.\n \nreply",
      "This is an awesome license. More products should be source-available like this.This is what sustainable \"equitable open source\" looks like. It keeps the team that built the product able to monetize, but it does so without harming or killing the community. The community has full access to the code and can modify it, make money from products made with it, and can presumably take over if the originating organization dies.The company can choose which services to offer for free and which ones to charge a premium for. Cloud CI/builds and hosting seem like good monetization levers while leaving the engine and editor completely free of charge and open for development and modification. You can build a sustainable lifestyle business this way.Database vendors should use licenses like this to prevent Amazon from stealing their work and bleeding their cash flow.Redis and Elasticsearch should have done this before Amazon cloned their products, started making bank on managed versions, killed their monetization efforts, and turned their communities against them.Matt Mullenweg should have done this instead of throwing a fit.\n \nreply",
      "At least they mention that it is source-available, but they still mix \"open source\" into the mix on their site.It is a really nice and fair source-available license and there should be more of this, but a license like theirs also restricts what kind of software you can make in a rather harsh way.Since you can't commercialise game engine products and they are defined in a broad way. You could land in legal issues. Game engine products are defined in the license as:\u201cGame Engine Product\u201d shall mean software used for video game development. This includes both the content authoring software and the software used to show the created content.IANAL, but map editors, modding tools and many other kind of tools that can be used for developing video games could be in violation of the license.Since meaning of \"commercialise\" isn't being defined or narrowed in the license small creators using Patreon or the like while asking donations could be classified as a violation too.\n \nreply",
      "The only options i see are:- Give the modding tools for free with the game (like many games do anyway). You're commercializing the game no the modding tools\n- Make the tools defold-free ? So it reads the game data but its not defold.\n- Tools for free but charge for support/warranty?, Clause 9 lets you sell support/warranty; you just can\u2019t charge for the software license itself.\n \nreply",
      "It could be nice if they had some sort of easy approval process for small Patreon users to commercialize the building of tools for their platform.\n \nreply"
    ],
    "link": "https://defold.com",
    "first_paragraph": "Void Scrappers - 8BitSkullDefold comes fully featured out of the box. There's nothing to set up or configure, not even when building. Simply download the editor and get creative!Using just one code base, and without the need for external tools, Defold lets you publish your game to all of the major platforms:What would your life be without modern technology on the deserted island? Dive into simplicity of the primal world with the modern Stone Age family in this thrilling offline adventure game. Stranded on the remote island, a family of four - Bruce, Eva and their kids - needs your guidance and help starting a new family home from scratch and navigating through various family life situations with humour.Defold release 1.9.8\nPublished on Mar 10, 2025\nDefold 1.9.8 has been released. - READDefold release 1.9.7\nPublished on Feb 03, 2025\nDefold 1.9.7 has been released. - READDefold release 1.9.6\nPublished on Dec 18, 2024\nDefold 1.9.6 has been released. - READDefold 2024 Showreel\nPublished on"
  }
]