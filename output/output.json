[
  {
    "title": "Bypassing Google's big anti-adblock update (0x44.xyz)",
    "points": 403,
    "submitter": "deryilz",
    "submit_time": "2025-07-12T19:06:09 1752347169",
    "num_comments": 342,
    "comments_url": "https://news.ycombinator.com/item?id=44544266",
    "comments": [
      "Even if bigs exists to work around what Google is doing, that isn\u2019t the right way forward. If people don\u2019t agree with Google move, the only correct course of action is to ditch Chrome (and all Chromium browsers). Hit them where it hurts and take away their monopoly over the future direction of the web.reply",
      "A monopoly achieved thanks to everyone that forgot about IE lesson, and instead of learning Web standards, rather ships Chrome alongside their application.reply",
      "> instead of learning Web standards, rather ships Chrome alongside their applicationI am confused.- The \"shipping Chrome alongside their application\" part seems to refer to Electron; but Electron is hardly guilty of what is described in the article.- The \"learning web standards\" bit seems to impune web developers; but how are they guilty of the Chrome monopoly? If anything, they are guilty of shipping react apps instead of learning web standards; but react apps work equally well (or poorly) in all major browsers.- Finally, how is Chrome incompatible with web standards? It is one of the best implementer of them.reply",
      "Consumers never really pick products for ideological reasons, no matter how galling that is to ideologuesreply",
      "IE was far less user-hostile than Chrome.reply",
      "Only because Microsoft got slapped on the wrist way back when.Google should get slapped too, and they might be headed that way...https://www.npr.org/2025/04/20/nx-s1-5367750/google-breakup-...Safari is also pretty user-hostile, which is why Apple is getting sued by the DOJ for purposely hobbling Safari while forbidding any other browser engine on IOS. They did this so that developers are forced to write native apps, which allows Apple to skim 30% off any purchase made through an app.reply",
      "Excuse me. If it's on MDN, I'm going to use it if it's useful for my app. Not my fault if not all browsers can keep up!\nHalf JK. If I get user complaints I'll patch them for other browsers but I'm only one person so it's hard and I rely on user feedback. (Submit bug reports y'all)reply",
      "Chrome was made to fracture, and everything started with the aptly named \u201cAtom\u201d editor (they \u201cinvented\u201d Electron).Everybody choose convenience over efficiency and standards, because apparently nobody understood what \u201cbeing lazy\u201d actually is.reply",
      "Not everyone. Some of us used Firefox all along and didn't just go with the \"default\" invasive thing.reply",
      "The answer is antitrust.The FTC / DOJ should strip Google of Chrome.Honestly, they should split Google into four or five \"baby Bell\"-type companies. They're ensnaring the public and web commerce in so many ways:- Chrome URL bar is a \"search bar\"- You have to pay to maintain your trademark even if you own the .com, because other parties can place ads in front of you with Google Search. (Same on Google Play Store.)- Google search is the default search- Paid third parties for Google search to be the default search- Paid third parties for Google Chrome to be the default browser- Required handset / Android manufacturers to bundle Google Play services- Own Adsense and a large percentage of web advertising- Made Google Payments the default for pay with Android- Made Google accounts the default- Via Google Accounts, removes or dampens the ability for companies to know their customer- Steers web standards in a way advantageous to Google- Pulls information from websites into Google's search interface, removing the need to use the websites providing the data (same as most AI tools now)- Use Chrome to remove adblock and other extensions that harm their advertising revenues- Use Adsense, Chrome performance, and other signals to rank Search results- Owns YouTube, the world's leading media company - one company controls too much surface area of how you publish and advertise- Pushes YouTube results via Google and Android... and that's just scratching the surface.Many big tech companies should face this same judgment, but none of the rest are as brazen or as vampiric as Google.reply"
    ],
    "link": "https://0x44.xyz/blog/web-request-blocking/",
    "first_paragraph": "If you know anything about browsers, you've probably heard that Google Chrome is phasing out MV2 in favor of MV3. You've probably also heard that this hurts adblockers.A quick explainer: \"MV\" stands for \"manifest version.\" MV3 introduces a new type of runtime for Chrome extensions that, among other things, gets rid of webRequestBlocking, a permission that allows extensions to block requests dynamically based on their content (which its replacement does not support). Adblockers heavily rely on webRequestBlocking to function properly. Pretty convenient (cough cough) for a company that makes most of its revenue from ads to be removing that.Anyway, with the phasing-out of MV2 pretty much done, now seems like a good time to talk about a bug in Chrome that I found and reported to Google in 2023. The bug let webRequestBlocking (and yes, adblockers) work in MV3.I still consider it probably the funniest bug I've ever found.Yes, Chrome is written in C++. However, extensions are written in JavaSc"
  },
  {
    "title": "Hacking Coroutines into C (wiomoc.de)",
    "points": 16,
    "submitter": "jmillikin",
    "submit_time": "2025-07-13T01:12:37 1752369157",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44546640",
    "comments": [
      "The intent here is nice. I historically hate state machines for sequential executioners. To me they make sense in FPGA/ASIC/circuits. In software, they just get so complicated. I've even seen state managers managing an abstracted state machine implementing a custom device to do what's ultimately very sequential work.It's my same argument that there should be no maximum number of lines to a function. Sometimes, you just need to do a lot of work. I comment the code blocks, maybe with steps/parts, but there's no point in making a function that's only called in one place.But anything is better than one person I met who somehow was programming without knowing how to define their own functions. Grossreply",
      "FreeRTOS can also be used with a cooperative scheduler: https://www.freertos.org/Why-FreeRTOS/Features-and-demos/RAM...That said, if I was stuck rolling this myself, I think I\u2019d prefer to try to do it with \u201creal\u201d codegen than macros. If nothing else it would give the ability to do things like blocks and correctness checks, and you\u2019d get much more readable resulting source when it came to stepping through it with a debugger.reply",
      "As the article acknowledges at the end, this is sort of like protothreads which has been around for ages.  The article's CSS was so awful that I didn't read anything except the last paragraph, which seemed to tell me what I wanted to know.reply"
    ],
    "link": "https://wiomoc.de/misc/posts/hacking_coroutines_into_c.html",
    "first_paragraph": "A while ago, I was part of a team developing embedded software. The software was deeply rooted in state machines - dozens of them\u2014spread across multiple functions. While this architecture is common in embedded development, especially for systems without an operating system, I started to question: Is this really the clearest way to express control flow?The state machines in our code worked fine, but understanding and maintaining them was often a headache. They lacked a linear flow, requiring mental juggling of flags, states, and transitions scattered across polling functions.I kept thinking: Wouldn't this be easier if we could just write the logic like a sequential program\u2014waiting for events and resuming where we left off?Of course, the project didn\u2019t allow us to use an RTOS. So, the conventional approach of using threads or blocking system calls to manage concurrency was off the table. Yet, I knew there had to be a middle ground.Around that time, I had been using coroutines in language"
  },
  {
    "title": "Light exposure at night predicts incidence of cardiovascular diseases (medrxiv.org)",
    "points": 51,
    "submitter": "gnabgib",
    "submit_time": "2025-07-12T22:48:14 1752360494",
    "num_comments": 29,
    "comments_url": "https://news.ycombinator.com/item?id=44545858",
    "comments": [
      "Preprint not peer reviewed.Also: \u201dA.J.K.P. and S.W.C. are co-founders and co-directors of Circadian Health Innovations PTY LTD.\u201dLemme guess, looking for funding.reply",
      "The best thing to do is to take commonly held knowledge and make a study out of it.Maybe the next study could be \u201clive king cobra in the bed results in sleep reduction\u201d.Probably a book and a TED talk to go with it.reply",
      "What can we do about the tendency of research articles to get their big flash of publicity before undergoing peer review?reply",
      "Couldn't find the actual light levels associated with relative most/least bright.reply",
      "Sorry for exposing my personal medical data, but... I literally cannot fall asleep without at least some light. So I sleep with lights on. Trying to be like normal people would only make my overall health worse.Is this a medical condition that has a name?reply",
      "Maybe they're exposed to light at night because they're awake at night more often, possibly shift workers, which we already know is unhealthy. I doubt just having light on is causing the effect.reply",
      "Yes they tracked hours of light exposure (above some threshold? I don't see that they say.) and found this result in the 90-100th percentile. So almost certainly night shift workers.reply",
      "Nyctophobia.reply",
      "does it make a difference if it's warm or blue light?reply",
      "> including physical activity, smoking, alcohol, diet, sleep duration, socioeconomic status, and polygenic riskWondering how much of this is due to geography and air quality. City centers have relatively bad air quality and a high amount of ambient lighting at night, compared to non urbanized areas.The cardiovascular effects of poor air quality is arguably well understood.reply"
    ],
    "link": "https://www.medrxiv.org/content/10.1101/2025.06.20.25329961v1",
    "first_paragraph": ""
  },
  {
    "title": "Kimi k2 largest open source SOTA model? (github.com/moonshotai)",
    "points": 223,
    "submitter": "ConteMascetti71",
    "submit_time": "2025-07-12T17:26:24 1752341184",
    "num_comments": 59,
    "comments_url": "https://news.ycombinator.com/item?id=44543508",
    "comments": [
      "I tried Kimi on a few coding problems that Claude was spinning on. It\u2019s good. It\u2019s huge, way too big to be a \u201clocal\u201d model \u2014 I think you need something like 16 H200s to run it - but it has a slightly different vibe than some of the other models. I liked it. It would definitely be useful in ensemble use cases at the very least.reply",
      "Reasonable speeds are possible with 4bit quants on 2 512GB Mac Studios (MLX TB4 Ring - see https://x.com/awnihannun/status/1943723599971443134) or even a single socket Epyc system with >1TB of RAM (about the same real world memory throughput as the M Ultra). So $20k-ish to play with it.For real-world speeds though yeah, you'd need serious hardware. This is more of a \"deploy your own stamp\" model, less a \"local\" model.reply",
      "> or even a single socket Epyc system with >1TB of RAMHow many tokens/second would this likely achieve?reply",
      "1reply",
      "I write a local LLM client, but sometimes, I hate that local models have enough knobs to turn that people can advocate they're reasonable in any scenario - in yesterday's post re: Kimi k2, multiple people spoke up that you can \"just\" stream the active expert weights out of 64 GB of RAM, and use the lowest GGUF quant, and then you get something that rounds to 1 token/s, and that is reasonable for use.Good on you for not exaggerating.I am very curious what exactly they see in that, 2-3 people hopped in to handwave that you just have it do agent stuff overnight and it's well worth it. I can't even begin to imagine unless you have a metric **-ton of easily solved problems that aren't coding. Even a 90% success rate gets you into \"useless\" territory quick when one step depends on the other, and you're running it autonomoously for hoursreply",
      "I do deepseek at 5tk/sec at home and I'm happy with it.  I don't need to do agent stuff to gain from it, I was saving to eventually build out enough to run it at 10tk/sec, but with kimi k2, plan has changed and the savings continue with a goal to run it at 5 tk/sec at home.reply",
      "I agree, 5 tokens per second is plenty fast for casual use.reply",
      "Also works perfectly fine in fire-and-forget, non-interactive agentic workflows. My dream scenario is that I create a bunch of kanban tickets and assign them to one or more AI personas[1], and wake up to some Pull Requests the next morning. I'd me more concerned about tickets-per-day, and not tk/s as I have no interest in watching the inner-workings of the model.1. Some more creative than others, with slightly different injected prompts or perhaps even different models entirely.reply",
      "Cosign for chat, that's my bar for usable on mobile phone (and correlates well with avg. reading speed)reply",
      "looks very much usable for local usage.reply"
    ],
    "link": "https://github.com/MoonshotAI/Kimi-K2",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Kimi K2 is the large language model series developed by Moonshot AI team\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n\ud83d\udcf0\u00a0\u00a0Tech Blog \u00a0\u00a0\u00a0 | \u00a0\u00a0\u00a0 \ud83d\udcc4\u00a0\u00a0Paper Link (coming soon)\nKimi K2 is a state-of-the-art mixture-of-experts (MoE) language model with 32 billion activated parameters and 1 trillion total parameters. Trained with the Muon optimizer, Kimi K2 achieves exceptional performance across frontier knowledge, reasoning, and coding tasks while being meticulously optimized for agentic capabilities.NoteYou can access Kimi K2's API on https://platform.moonshot.ai , we provide OpenAI/Anthropic-compatible API for you.The Anthropic-compatible API maps temperature by real_temperature = request_temperature * 0.6 for better compatiblity with existing applications.Our"
  },
  {
    "title": "Zig's New Async I/O (kristoff.it)",
    "points": 48,
    "submitter": "afirium",
    "submit_time": "2025-07-12T23:03:41 1752361421",
    "num_comments": 30,
    "comments_url": "https://news.ycombinator.com/item?id=44545949",
    "comments": [
      "I feel that I have to point this out once again, because the article goes so far as to state that:> With this last improvement Zig has completely defeated function coloring.I disagree with this. Let's look at the 5 rules referenced in the famous \"What color is your function?\" article referenced here.> 1. Every function has a colorWell, you don't have async/sync/red/blue anymore, but you now have IO and non-IO functions.> 2. The way you call a function depends on its color.Now, technically this seems to be solved, but you still need to provide IO as a parameter. Non-IO functions don't need/take it.It looks like a regular function call, but there's no real difference.> 3. You can only call a red function from within another red functionThis still applies. You can only call IO functions from within other IO functions.Technically you could pass in a new executor, but is that really what you want? Not to mention that you can also do this in languages that don't claim to solve the coloring problem.> 4. Red functions are more painful to callI think the spirit still applies here.> 5. Some core library functions are redThis one is really about some things being only possible to implement in the language and/or stdlib. I don't think this applies to Zig, but it doesn't apply to Rust either for instance.Now, I think these rules need some tweaking, but the general problem behind function coloring is that of context. Your function needs some context (an async executor, auth information, an allocator, ...). In order to call such a function you also need to provide the context. Zig hasn't really solved this.That being said, I don't think Zig's implementation here is bad. If anything, it does a great job at abstracting the usage from the implementation. This is something Rust fails at spectacularly.However, the coloring problem hasn't really been defeated.reply",
      "The key difference to typical async function coloring is that `Io` isn't something you need specifically for asynchronicity; it's something which (unless you make a point to reach into very low-level primitives) you will need in order to perform any IO, including reading a file, sleeping, getting the time, etc. It's also just a value which you can keep wherever you want, rather than a special attribute/property of a function. In practice, these properties solve the coloring problem:* It's quite rare for a function to unexpectedly gain a dependency on \"doing IO\" in general. In practice, most of your codebase will have access to an `Io`, and only leaf functions doing pure computation will not need them.* If a function does start needing to do IO, it almost certainly doesn't need to actually take it as a parameter. As in many languages, it's typical in Zig code to have one type which manages a bunch of core state, and which the whole codebase has easy access to (e.g. in the Zig compiler itself, this is the `Compilation` type). Because of this, despite the perception, Zig code doesn't usually pass (for instance) allocators explicitly all the way down the function call graph! Instead, your \"general purpose allocator\" is available on that \"application state\" type, so you can fetch it from essentially wherever. IO will work just the same in practice. So, if you discover that a code path you previously thought was pure actually does need to perform IO, then you don't need to apply some nasty viral change; you just grab `my_thing.io`.I do agree that in principle, there's still a form of function coloring going on. Arguably, our solution to the problem is just to color every function async-colored (by giving most or all of them access to an `Io`). But it's much like the \"coloring\" of having to pass `Allocator`s around: it's not a problem in practice, because you'll basically always have easy access to one even if you didn't previously think you'd need it. I think seasoned Zig developers will pretty invariably agree with the statement that explicitly passing `Allocator`s around really does not introduce function coloring annoyances in practice, and I see no reason that `Io` would be particularly different.reply",
      "> It's quite rare for a function to unexpectedly gain a dependency on ...If this was true in general, the function coloring problem wouldn't be talked about.However, the second point is more interesting. I think there's a bit of a Stockholm syndrome thing here with Zig programmers and Allocator. It's likely that Zig programmers won't mind passing around an extra param.If anything, it would make sense to me to have IO contain an allocator too. Allocation is a kind of IO too. But I guess it's going to be 2 params from now on.reply",
      "Go also suffers from this form of \u201csubtle coloring\u201d.If you\u2019re working with goroutines, you would always pass in a context parameter to handle cancellation. Many library functions also require context, which poisons the rest of your functions.Technically, you don\u2019t have to use context for a goroutine and could stub every dependency with context.Background, but that\u2019s very discouraged.reply",
      "Here's a trick to make every function red (or blue? I'm colorblind, you decide):    var io: std.Io = undefined;\n\n    pub fn main() !void {\n       var impl = ...;\n       io = impl.io();\n    }\n\nJust put io in a global variable and you won't have to worry about coloring in your application. Are your functions blue, red or green now?Jokes aside, I agree that there's obviously a non-zero amount of friction to using the `Io` intreface, but it's something qualitatively very different from what causes actual real-world friction around the use of async await.> but the general problem behind function coloring is that of contextI would disagree, to me the problem seems, from a practical perspective that:1. Code can't be reused because the async keyword statically colors a function as red (e.g. python's blocking redis client and asyncio-redis). In Zig any function that wants to do Io, be it blue (non-async) or red (async) still has to take in that parameter so from that perspective the Io argument is irrelevant.2. Using async and await opts you automatically into stackless coroutines with no way of preventing that. With this new I/O system even if you decide to use a library that interally uses async, you can still do blocking I/O, if you want.To me these seems the real problems of function coloring.reply",
      "Well, it's not really a joke. That's a valid strategy that languages use. In Go, every function is \"async\". And it basically blocks you from doing FFI (or at least it used to?). I wonder if Zig will run into similar issues here.> 1. Code can't be reused because the async keyword statically colors a functionThis is fair. And it's also a real pain point with Rust. However, it's funny that the \"What color is your function?\" article doesn't even really mention this.> 2. Using async and await opts you automatically into stackless coroutines with no way of preventing thatThis however I don't think is true. Async/await is mostly syntax sugar.In Rust and C# it uses stackless coroutines.In JS it uses callbacks.There's nothing preventing you from making await suspend a green thread.reply",
      "I should have specified that better, of course async and await can be lowered to different things (that's what Zig does afterall), what I wanted to say is that that's how it works in general. JS is a good counter example, but for all other mainstream languages, async means stackless coroutines (python, ruby, c#, rust, ...).Which means that if I want to use a dependency that uses async await, it's stackless coroutines for me too whether I like it or not.reply",
      "The global io trick would totally be valid if you\u2019re writing an application (i.e. not a library) and don\u2019t have use of two different implementations of ioreply",
      "I think of it this way.Given an `io` you can, technically, build another one from it with the same interface.For example given an async IO runime, you could create an `io` object that is blocking (awaits every command eagerly). That's not too special - you can call sync functions from async functions. (But in JavaScript you'd have trouble calling a sync function that relies on `await`s inside, so that's still something).Another thing that is interesting is given a blocking posix I/O that also allows for creating processes or threads, you could build in userspace a truly asynchronous `io` object from that blocking one. It wouldn't be as efficient as one based directly on iouring, and it would be old school, but it would basically work.Going either way (changing `io` to sync or async) the caller doesn't actually care. Yes the caller needs a context, but most modern apps rely on some form of dependency injection. Most well-factored apps would probably benefit from a more refined and domain-specific \"environment\" (or set of platform effects, perhaps to use the Roc terminology), not Zig's posix-flavoured standard library `io` thing.Yes rust achieves this to some extent; you can swap an async runtime for another and your app might still compile and run fine.Overall I like this alot - I am wondering if Richard Feldmann managed to convince Andrew Kelley that \"platforms\" are cool and some ideas were borrowed from Roc?reply",
      "> but most modern apps rely on some form of dependency injectionDoes Zig actually do anything here? If anything, this seems to be anti-Zig, where everything must be explicit.reply"
    ],
    "link": "https://kristoff.it/blog/zig-new-async-io/",
    "first_paragraph": "\nJuly 13, 2025\n    \u2022\n    13\n    min read \u2022 by\n    Loris Cro\n\nIn the Zig Roadmap 2026 stream Andrew announced a new way of doing I/O, let\u2019s see what are the goals of this upcoming design and how that relates to the revival of async / await in Zig.The most notable change to Zig is the introduction of a new interface in charge of all I/O operations. Most importantly, the Io interface is now expected to be provided by the caller, just like we already do with Allocator.Old Zig:New Zig:The main implication of this change is that now the author of a program is able to decide the concrete I/O implementation and inject it also into code coming from dependencies.The Io interface is also in charge of concurrency operations as those can intertwine with I/O, especially in the case of event loops. If a piece of code properly expresses concurrency of operations, then the Io implementation will have the opportunity of introducing parallelism.To show this concept using a code example, let\u2019s imagine tha"
  },
  {
    "title": "MacPaint Art from the Mid-80s Still Looks Great Today (decryption.net.au)",
    "points": 760,
    "submitter": "decryption",
    "submit_time": "2025-07-12T08:45:15 1752309915",
    "num_comments": 171,
    "comments_url": "https://news.ycombinator.com/item?id=44540402",
    "comments": [
      "There's a term I read about a long time ago, I think it was \"aesthetic completeness\" or something like that. It was used in the context of video games whose art direction was fully realized in the game, i.e. increases in graphics hardware or capabilities wouldn't add anything to the game in an artistic sense. The original Homeworld games were held up as examples.Anyway, this reminded me of that. Making these pictures in anything but the tools of the time wouldn't just change them, they'd be totally different artworks. The medium is part of the artwork itself.reply",
      "The same holds true for everything from cave paintings to Roman frescos. It's part of human expression. The tools of that expression shape it.For example, Bach's music was shaped by the fact that the harpsichord had no sustain. The piano changed that, but \"upscaling\" Bach's work to take advantage of this new technology would destroy them. You use the new technology to play them as they were written for the old. The beauty comes through despite the change.reply",
      "Switched on Bach is one of my favorite albums of all time.reply",
      "Switched-on Bach is a revelation in part because the synth bass tones are more focused, distinct, and identifiable than when the same notes are played on acoustic instruments \u2014 allowing you to hear harmonic interplay which I believe is closer to what Bach heard in his head.But here are lots of Bach synth albums and only Wendy Carlos\u2019 work has the taste and obsessive fidelity to the original compositions to allow those ideas to come through. Most synth Bach falls into the trap of being idiomatic synth rather than idiomatic Bach, akin to playing Bach on the piano without considering how it would have sounded on the harpsichord.reply",
      "Awesome, thanks. Had an inkling whatever Spotify came up with wasn\u2019t right\u2014thank you TIA for Wendy Carlos\u2019s 1968 original!:https://archive.org/details/wendy-carlos-witched-on-bach(have to donate to Internet Archive again now\u2026) anyway Wiki says this album essentially brought the Moog/synths from experimental to popular music. In a lovely fashion, my ears do say.reply",
      "Update:Wendy Carlos is still with us at 85 years of age, but apparently hasn\u2019t been able to press CDs for two decades, and hasn\u2019t licensed her music for streaming. Her site links to CDs on Amazon, w/o new copies available. She sounds dope, even being an \u201caccomplished solar eclipse photographer\u201d per Wiki.If anyone knows her I\u2019m curious if someone could help her preserve/distribute these beautiful sounds. (Maybe they\u2019re all preserved but just not distributed, and maybe she\u2019s chillin\u2019 and doesn\u2019t need another cent so it\u2019d just be hassle\u2014wanted to throw it all out there for y\u2019all.)\u2014\u2026thanks OP for the great art btw, since I haven\u2019t mentioned it yet. Stood the test of time!reply",
      "You should take a listen to Tomita as well then! There is so much beautiful music in the worldreply",
      "I definitely listened to a lot of Tomita as a kid, I used to check out vinyls of his albums from my local library. The one that sticks with me most distinctly is his very unique rendition of Golliwog\u2019s Cakewalk. https://youtube.com/watch?v=dPQ9d10fnko But yeah, lots of other great stuff from him too.reply",
      "Way too much, in fact, if we go by daily Spotify uploads.reply",
      "This reminds me of how the pixel version of Chicago font looks great but the vector version doesn't.https://x.com/susankare/status/1599662756252483585?s=46reply"
    ],
    "link": "https://blog.decryption.net.au/posts/macpaint.html",
    "first_paragraph": "I really enjoyed browsing the BMUG's CD-ROM and discovering early 80s art made in MacPaint, so I browsed all 18,000+ MacPaint images on Discmaster to see what gems I can unearth. Here is some what I found.Would be cool to try track down some of these artists and see what they're up to these days. If they could do this type of work on those little 9-inch, 1-bit screens 40 years ago, I'd love to see what they've achieved since.The Amiga was another computer around the same time that could do similar (arguably better) levels of computer art at home, so I think I'll explore that soon. Could be some cool stuff there!Lots of people like this post! Here's some of the less spectacular art (e.g: not designed so much to be art in and of itself) but still cool logos, graphics, icons and the like. If you'd like to see more, just visit the wonderful Discmaster and use the search feature to find images by file type. MacPaint, MacDraw or any other old graphics program (perhaps even Photoshop files da"
  },
  {
    "title": "Show HN: I made a JSFiddle-style playground to test and share prompts fast (langfa.st)",
    "points": 14,
    "submitter": "eugenegusarov",
    "submit_time": "2025-07-12T17:41:44 1752342104",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=44543638",
    "comments": [
      "On page load, execution logs panel hide all the buttons for me. https://i.imgur.com/eqDpu3Y.pngMaybe not obvious to users to collapse the panel.Follow up, how are you handling actual calls to LLM?reply",
      "Is this open source? Is it local browser API calls, or routing through your server?reply"
    ],
    "link": "https://langfa.st/",
    "first_paragraph": ""
  },
  {
    "title": "OpenAI\u2019s Windsurf deal is off, and Windsurf\u2019s CEO is going to Google (theverge.com)",
    "points": 958,
    "submitter": "rcchen",
    "submit_time": "2025-07-11T21:35:31 1752269731",
    "num_comments": 616,
    "comments_url": "https://news.ycombinator.com/item?id=44536988",
    "comments": [
      "https://web.archive.org/web/20250711213611/https://www.theve...",
      "IMO other than the Microsoft IP issue, I think the biggest thing that has shifted since this acquisition was first in the works is Claude Code has absolutely exploded. Forking an IDE and all the expense that comes with that feels like a waste of effort, considering the number of free/open source CLI agentic tools that are out there.Let's review the current state of things:- Terminal CLI agents are several orders of magnitude less $$$ to develop than forking an entire IDE.- CC is dead simple to onboard (use whatever IDE you're using now, with a simple extension for some UX improvements).- Anthropic is free to aggressively undercut their own API margins (and middlemen like Cursor) in exchange for more predictable subscription revenue + training data access.What does Cursor/Windsurf offer over VS Code + CC?- Tab completion model (Cursor's remaining moat)- Some UI niceties like \"add selection to chat\", and etc.Personally I think this is a harbinger of where things are going. Cursor was fastest to $900M ARR and IMO will be fastest back down again.reply",
      "Agreed on everything. Just to add, not only anthropic is offering CC at like a 500% loss, they restricted sonnet/opus 4 access to windsurf, and jacked up their enterprise deal to Cursor. The increase in price was so big that it forced cursor to make that disastrous downgrade to their plans.I think only way Cursor and other UX wrappers still win is if on device models or at least open source models catch up in the next 2 years. Then i can see a big push for UX if models are truly a commodity. But as long as claude is much better then yes they hold all the cards. (And don't have a bigger company to have a civil war with like openai)reply",
      "Not sure this is true. Inference margins are substantial and if you look at your claude code usage it's very clever at caching  Input \u2502      Output \u2502  Cache Create \u2502     Cache Read\n 916,134 \u2502  11,106,507 \u2502   199,684,538 \u2502  2,767,614,506\n\n\nas an example here's my usage. Massive daily usage for the past two months.reply",
      "> CC at like a 500% lossDo you have a citation for this?It might be at a loss, but I don\u2019t think it is that extravagant.reply",
      "The way I am doing the math with my Max subscription and assuming DeepSeek API prices, it is still x5 times cheaper. So either DeepSeek is losing money (unlikely) or Anthropic is losing lots of money (more likely). Grok kinda confirms my suspicions. Assuming DeepSeek prices, I've probably spent north of $100 of Grok compute. I didn't pay Grok or Twitter a single cent. $100 is a lot of loss for a single user.reply",
      "Comparison should be with Claude API pricing. It doesn't matter what other models cost.reply",
      "Claude API pricing has significant margin baked in. I think it's safe to assume that anthropic is getting 80% margin on their api and they are selling claude code for less than that.reply",
      "what?? sonnet/opus is way better than deepseek, how can you compare that to deepseekalso you probably talking about distilled deepseek modelreply",
      "I haven't tried deepseek but I've seen claude do crazy things if you are at the correct random.seedreply"
    ],
    "link": "https://www.theverge.com/openai/705999/google-windsurf-ceo-openai",
    "first_paragraph": "Key researchers from the AI coding startup are also heading to Google.Key researchers from the AI coding startup are also heading to Google.OpenAI\u2019s deal to buy Windsurf is off, and Google will instead hire Windsurf CEO Varun Mohan, cofounder Douglas Chen, and some of Windsurf\u2019s R&D employees and bring them onto the Google DeepMind team, Google and Windsurf announced Friday.Mohan and the Windsurf employees will focus on agentic coding efforts at Google DeepMind and work largely on Gemini. Google will not have any control over nor a stake in Windsurf, but it will take a non-exclusive license to some of Windsurf\u2019s technology.Effective immediately, Jeff Wang, Windsurf\u2019s head of business, has become interim CEO, and Graham Moreno, its VP of global sales, will be Windsurf\u2019s new president.\u201cGemini is one of the best models available and we\u2019ve been investing in its advanced capabilities for developers,\u201d Chris Pappas, a spokesperson for Google, told The Verge in a statement. \u201cWe\u2019re excited to w"
  },
  {
    "title": "A better Ghidra MCP server \u2013 GhidrAssistMCP (github.com/jtang613)",
    "points": 56,
    "submitter": "jtang613",
    "submit_time": "2025-07-12T18:21:33 1752344493",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=44543913",
    "comments": [
      "It's been a few years since I've rolled up my sleeves and did some reverse engineering with Ghirda. The skill is very \"use it or lose it\" so I wonder if this will help me get back into it quicker. Or... a ton of hallucinations leading down dead end rabbit holes.Curious if anyone has given it a shot an can speak to the experience.reply",
      "I can't comment on MCP use specifically but I can comment on using an LLM while reversing. I use a local instance of whatever ends up being SOTA for local reasoning LLMs at 30B-70B params quantized to 4-6b. I feed it decompiled code to identify functions that are 'tedious' to reverse engineer. I recently reversed a binary that was compiled with soft float and had no symbols or strings. A lot of those functions end up being a ton of bit-twiddling. While I reversed the business logic I had the reasoning model identify the soft float functions with very minimal prompting. It did quite well on those!I also tried to have it automatically build some structs from code showing the access patterns, and it failed miserably on that task. Likely a larger model (o3 or opus) would do better here.I personally don't think letting an LLM do large parts of the reversing would be useful to me as I build up a lot of my mental model of the system during the process, so I'd be missing out on that. But for handling annoying bits of code I'd likely just forego otherwise? Go ham!reply",
      "You hit the target on what most miss about LLMs, part of work is building up a lot of mental model of the system you are working on.  When LLM does the work, it becomes easy to miss that mental model.reply",
      "I tried to use an LLM for assistance with reversing some embedded code and agree with this. I had built up a pretty decent model of what was going on before starting. It was able to explain what was going on in this one perplexing function quite well but when I'd feed it decent sized blocks of code it would hallucinate like crazy.  But I was quite happy with the performance at finding the basic library and ROM functions and annotating them correctly.  I think it is all in how you use it.reply",
      "Thanks for the interest. I wrote GhidrAssistMCP and the original GhidrAssist plugin which work hand-in-hand because I find they improve my RE workflow. They're not immune from hallucinations because the underlying models are not. However, they are fairly rare and I have had very reliable results with both Claude and ChatGPT. When used together, GhidrAssist+GhidrAssistMCP have been able to do some impressive analysis tasks.If you're just getting back in the saddle, you might want to give both a try. In particular, GhidrAssist's \"Explain Function\" tool is really helpful at quickly summarizing code and reducing the mental overhead of making sense of large binaries.reply",
      "Applies to everything. If you never had it in muscle memory, you lose it.reply",
      "Thanks so much for sharing!I'm interested to see how MCP and the development in AI will impact the CTF scene in the future.reply",
      "Why is this better than the other one?reply",
      "GhidrAssistMCP features:- several additional tools (like get_class_info, search_classes, etc),- it has GUI config and logging,- and it does not rely on an external Python bridge to host the MCP Server - it's monolithic (using the official MCP Java SDK).reply",
      "nice, now do x64dbg!reply"
    ],
    "link": "https://github.com/jtang613/GhidrAssistMCP",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n        An MCP extension for Ghidra\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.A powerful Ghidra extension that provides an MCP (Model Context Protocol) server, enabling AI assistants and other tools to interact with Ghidra's reverse engineering capabilities through a standardized API.GhidrAssistMCP bridges the gap between AI-powered analysis tools and Ghidra's comprehensive reverse engineering platform. By implementing the Model Context Protocol, this extension allows external AI assistants, automated analysis tools, and custom scripts to seamlessly interact with Ghidra's analysis capabilities.Shameless self-promotion: GhidrAssist supports Ghid"
  },
  {
    "title": "Lost Chapter of Automate the Boring Stuff: Audio, Video, and Webcams in Python (inventwithpython.com)",
    "points": 87,
    "submitter": "AlSweigart",
    "submit_time": "2025-07-12T16:45:45 1752338745",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44543240",
    "comments": [
      "And a transit nerd supporter!reply",
      "I learned Python from your Udemy course of the same name. Congrats on the new edition of the book!reply",
      "One of my favorite programming books of all times. Cheers Al!reply"
    ],
    "link": "https://inventwithpython.com/blog/lost-av-chapter.html",
    "first_paragraph": "\n      Posted by Al Sweigart\n    in \n    \n      misc\n    \u00a0\u00a0\n  The third edition of Automate the Boring Stuff with Python is now available for purchase or to read for free online. It has updated content and several new chapters, but one chapter that was left on the cutting room floor was \"Working with Audio, Video, and Webcams\". I present the 26-page rough draft chapter in this blog, where you can learn how to write Python code that records and plays multimedia content.These days a smartphone is a portable film studio that fits in your pocket. The ability to not just readily view but also produce video has led to an explosion of video content easily accessible over the internet. There\u2019s plenty of video and audio editing software available for users of all levels of sophistication. But if you have, say, a thousand video files that you need to automate reducing their volume by 50% and then extract thumbnail images, you don\u2019t want to have to edit each of those files individually yourself. "
  },
  {
    "title": "The fish kick may be the fastest subsurface swim stroke yet (2015) (nautil.us)",
    "points": 172,
    "submitter": "bookofjoe",
    "submit_time": "2025-07-12T12:25:28 1752323128",
    "num_comments": 121,
    "comments_url": "https://news.ycombinator.com/item?id=44541576",
    "comments": [
      "Amazing! This is about the dolphin kick performed on its side, rechristened \u201cthe fish kick.\u201d I couldn\u2019t fathom (ha) why the same kick rotated 90 degrees could be faster but it turns out that the kicking motion is constrained by the motion of the water around it. In the dolphin kick, the water moves up and down and is limited by the water\u2019s surface and pool\u2019s bottom. The swimmer frees themself of these constraints by turning on their side.reply",
      "Does that give advantage to those in the middle lanes?reply",
      "Middle lanes are faster, and for some reason swimmer with the fastest record gets the middle in most events, which always seemed weird to me -- it's a positive feedback system. Seems like you should give the advantage to the people who are behind, not ahead... but that's common in sports and in modern society for some reason.reply",
      "Giving advantages to the better participants is a practice common across a variety of racing sports. The idea being that, if you could earn an advantage by doing worse, then in a race where you know at a certain point that you can't medal anyway, it would be optimal to just intentionally slow down to try to come in last and secure an advantage in the next race.reply",
      "It\u2019s not strange at all. People want to see records broken. Levelling the playing field works against that goal.Sports is an aspirational medium of entertainment. People want to see excellence. They want to see dynasties. Too much fairness and balance leads to loss of interest.Look at the NBA. We\u2019re in a period of unprecedented parity and balance. It seems like every year brings a different championship team. Ratings are way down and loads of people are complaining about the CBA which was written with the goal of bringing more parity to the league, a goal it\u2019s quite obviously achieving!reply",
      "I know that's the narrative about the NBA lately but it's just that - narrative.It's far from proven that the short-lived \"parity\" that has emerged in the aftermath of the KD Warriors dynasty is the cause of down ratings.I do personally dislike it though and find the parity via CBA to be artificial. It just causes continuity on a contender to be untenable.And continuity is what makes for good basketball, hence why dynasties are so fun to watch. It's not just that they win, a lot. It's that they have a consistent style of play with a consistent cast of players (stars and role players) that fans get to know over the course of those dynastic years.reply",
      "On the other hand the NFL\u2019s hard salary cap and consequent parity is what has made it the most popular US professional sporting league. People in the US don\u2019t want to see big markets buy their way to championships.reply",
      "as an adult the NFL is the most watchable professional sport for me, despite my city having no NFL team.  every year I can just choose a playoff bound team to root for based on their style or storyline.  And each game is meaningful whereas the other professional sports have regular seasons that just drag on and on.  also love the one and done knockout playoff format.reply",
      "In US sports it is very common in the tournament for a single season, or in a single event to reward better performance earlier in that same season or same tournament.  I like this because it incentivizes doing well early in a season.On the other hand, the NFL and NBA give better draft odds for to teams who did badly in the previous season. I also like this because it allows teams who don't have the (comparatively) massive resources of a team based in a large market to compete.  This is NEGATIVE feedback, and of course fans of teams in large markets don't like it. Even so, negative feedback is the core of making a stable system.To summarize, in a single season or in a single tournament, doing well is rewarded.  Across seasons, some sports have mechanisms to help poor teams become better.reply",
      "It's strange to reward slower contestants in sports.reply"
    ],
    "link": "https://nautil.us/is-this-new-swim-stroke-the-fastest-yet-235511/",
    "first_paragraph": "Art+ScienceBiology + BeyondCosmosCultureEarthLifeMindOceanOne QuestionQuanta AbstractionsRewildingScience at the Ballot BoxScience Philanthropy AllianceSpark of ScienceThe Animal IssueThe Kinship IssueThe PortholeThe Reality IssueThe Rebel IssueWomen in Science & Engineering\nThe surprising performance and physics of the fish kick.\nThe surprising performance and physics of the fish kick.\nThe full Nautilus archive\n\u2022\neBooks & Special Editions\n\u2022\nAd-free reading\nI tug my black swim cap over my hair, strap on my pink goggles, and keep a focused calm, like Michael Phelps before a race. It\u2019s lap swim on a Monday afternoon at my local YMCA, and I\u2019m going to attempt the fish kick. Most fish move through the water with a horizontal wiggle. The fish kick challenges you to copy this movement: You completely submerge yourself underwater, position yourself on your side, keep your arms tight above your head in a streamline, and propel yourself forward with symmetrical undulations. After decades of swi"
  },
  {
    "title": "Two-step system makes plastic from carbon dioxide, water and electricity (phys.org)",
    "points": 30,
    "submitter": "PaulHoule",
    "submit_time": "2025-07-09T22:10:37 1752099037",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=44515210",
    "comments": [
      "I guess mass extinction (via microplastics) works for some planet-saving outcome.reply",
      "This, some random organism digests CO2 into petroleum, and gargle with this liquid and have no more cavities are the \"tomorrow, all beer is free\" of my lifePOC||GTFOreply"
    ],
    "link": "https://phys.org/news/2025-06-plastic-carbon-dioxide-electricity.html",
    "first_paragraph": ""
  },
  {
    "title": "Exposing a web service with Cloudflare Tunnel (2022) (erisa.dev)",
    "points": 82,
    "submitter": "sturza",
    "submit_time": "2025-07-09T09:08:34 1752052114",
    "num_comments": 34,
    "comments_url": "https://news.ycombinator.com/item?id=44507799",
    "comments": [
      "I use CF tunnels all the time at work and for my side projects but I've always found the web ui for remotely managed tunnels a bit hard to use. I recently asked Claude to help me build a TUI so I can easily create and manage them:https://github.com/justingosan/tunnelmanJust yesterday I added support for adding a traefik reverse proxy that has (just) basic auth (for now) for a little bit of added protectionreply",
      "I absoltuley love it. Recently used this to host my blog along with multiple hobby projects on my 5-6 years old Raspberry Pi, more on it here:https://aazar.me/posts/reincarnating-a-raspberry-pireply",
      "This is awesome, makes me want to try out a Pi for this.reply",
      "Would 100% recommend, cheapest bare metal you can get, AFAIK.reply",
      "Likely, minus those great little used units.reply",
      "The missing part of this recipe is to make it so that when your internet exposed app gets compromised the attacker doesn\u2019t have easy access to your home network.reply",
      "I greatly appreciate the fact that solutions to the real concern you point out are not somehow bundled into this.  There are many ways to deal with isolating the backend, and I prefer my own, and evolving them as and when I wish.  Cloudflare Tunnel is a primitive that solves the part I can't without much greater effort and expense.reply",
      "I've been using this for years. There's even a kubernetes deployment to directly point your tunnel to your local kubetnetes network.\nCloudflare's free tier is very generous.\nI've never experienced any issues with this solution.reply",
      "I'm sorry, I don't get the point. Perhaps I'm missing something.If I open a single port to my home server, then anybody can send any traffic to my server on that port. The attack surface is exactly the process running on my home server, listening on that port.If I use the cloudflare tunnel, anybody using my web service connects to some cloudflare server which transparantly forwards, through the tunnel, everything to the process running at home. The attack surface is ... exactly the process running on my home server, receiving everything coming into the tunnel, effectively listening on the port opened on the cloudflare server.Where is the difference? Any security issue in the process running on my server that can be exploited by sending traffic to it is attackable in either case.Does cloudflare filter the traffic in any way? How does it know what's good and what's bad traffic?reply",
      "> If I open a single port to my home server, then anybody can send any traffic to my server on that port. The attack surface is exactly the process running on my home server, listening on that port.If you open a single port on your home server, you're exposing that port, sure. But you're also exposing your IP, and with that comes attacks on your IP stack, if you're worried about that. Presumably cloudflare proxies application traffic, but likely normalizes fragmentation and tcp flags and what nots.Additionally, when you're exposing your IP, you're subject to volumetric attacks on your IP. High volume DDoS is often spoofs your IP to UDP servers that will respond, generating high volumes of traffic that overwhelm either your system in general, or the bandwidth on your connection. If you're behind a tunnel, the tunnel endpoint will get that traffic, and Cloudflare seems to manage that well. If you manage to attract a DDoS at your application level, that could very well make it through the tunnel and overwhelm your service. I think Cloudflare does offer some filters for that, but my knowledge is limited. IMHO, most of the value is from avoiding non-application traffic; but I just host most of my stuff in cheap hosting and if someone wants to DDoS me, my server will go down and that's fine.reply"
    ],
    "link": "https://erisa.dev/exposing-a-web-service-with-cloudflare-tunnel/",
    "first_paragraph": ""
  },
  {
    "title": "HNSW as abstract data structure: video intro to Redis vector sets (youtube.com)",
    "points": 5,
    "submitter": "antirez",
    "submit_time": "2025-07-10T11:59:35 1752148775",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.youtube.com/watch?v=kVApsFUeuEA",
    "first_paragraph": ""
  },
  {
    "title": "Supreme Court's ruling practically wipes out free speech for sex writing online (ellsberg.substack.com)",
    "points": 418,
    "submitter": "macawfish",
    "submit_time": "2025-07-12T18:14:37 1752344077",
    "num_comments": 541,
    "comments_url": "https://news.ycombinator.com/item?id=44543865",
    "comments": [
      "All these ID check laws are out of hand. Parents are expecting the government, and random websites, to raise their kids. Why would anyone trust some random blog with their ID?If these laws move forward (and I don\u2019t think they should), there needs to be a way to authenticate as over 18 without sending picture of your ID off to random 3rd parties, or giving actual personal details. I don\u2019t want to give this data, and websites shouldn\u2019t want to shoulder the responsibility for it.It seems like this could work much like Apple Pay, just without the payment. A prompt comes up, I use some biometric authentication on my phone, and it sends a signal to the browser that I\u2019m 18+. Apple has been adding state IDs into the Wallet, this seems like it could fall right in line. The same thing could be used for buying alcohol at U-Scan checkout.People should also be able to set their browser/computer to auto-send this for single-user devices, where it is all transparent to the user. I don\u2019t have kids and no one else\u2019s uses my devices. Why should I need to jump through hoops?reply",
      "You mean like this?https://webkit.org/blog/16993/news-from-wwdc25-web-technolog...It\u2019s a W3C spec led by Okta, Apple and Google based on an ISO standard and it is being rolled out as we speak.This part  other iOS applications that have registered themselves as an Identity Document Provider.\n\nHas some fun history: California went with an independent contractor for its mDL implementation, which ultimately pressured Apple into integrating open(-ish) standards to interoperate.reply",
      "This is interesting, but I\u2019d like to go a step further. I watched the first quarter of the video on where they go over how it works. The site requests data from your ID and they get that data. The site chooses which data it needs and if it will store it or it or not. Sites these days have a tendency to ask for more than what they need, and to store it for profiling purposes. The user can deny the request, but then can\u2019t use the site. They are then left with a dilemma. Give up this personal information or not have access at all? Companies are betting on users giving up privacy in exchange for access.What I\u2019d like to see is for the site\u2019s request to contain their access rules. Must be over 18, must be in country X, etc. Then on-device it checks my ID against that rule set, and simply returns a pass/fail result from those checks. This way the site would know if I\u2019m allowed to be there, but they don\u2019t get any specific or identifiable information about me. Maybe I\u2019m 18, maybe I\u2019m 56\u2026 they don\u2019t know, they both simply send a pass. For a simple age check, a user\u2019s exact birthday, name, address, etc are irrelevant, but I bet companies will get greedy and try to pull it anyway.I see the monkey paw of the ID spec as leading to more companies seeking to get all our data, when they really don\u2019t need it, and have shown they can\u2019t be trusted with it.I already see this with Apple Pay. When buying a digital item, some companies are awesome and simply take the payment with no other data. Others pull name, address, email, etc to make a payment when none of that is required.reply",
      "The spec is being implemented by Apple, who is sensitive to privacy issues.The intent of the ISO spec is to allow you to request fine-grained data, like birth year only, but if you read the W3C standard, they explicitly call out privacy as a complex thing that maybe should be regulated.The spec spells out the complexity: some ID verification processes actually need a lot of info! But some, like an alcohol age check, do not. The spec can do both, but it\u2019s hard to differentiate these technically. The spec does lay out what user agents should do to make it clear which information is going where.A bad scenario would be designing an API that is too hobbled to replace the invasive \u201cphoto of an ID\u201d companies, which this spec seeks to do.I\u2019d prefer an open web standard that can be abused (with user consent) to a closed App Store-only API or the status quoreply",
      "> The intent of the ISO spec is to allow you to request fine-grained data, like birth year only, but if you read the W3C standard, they explicitly call out privacy as a complex thing that maybe should be regulated.Aren't the regulations the problem here? If not for that nobody would be getting pressured to divulge this personal information to every shady app and website in the first place.Suppose I want to make a service that verifies your age by asking you questions about what life was like before 9/11. Can I do that? And if I can't, is the problem the standards, or the law?reply",
      "Yes, they are! but also because the law sets the standard, it can also provide a new one. For example:a) you are still legally required to age verify online alcohol purchases butb) it\u2019s illegal to use information collected for that purpose for other purposes andc) Which information is collected is made legible by the user agentsMaybe something around only collecting minimal data, too.Some of the first eager customers are banks with onerous KYC requirements \u2013 they want one click account creation! Good luck changing financial disclosure laws, though, my bank knows quite a bit about me.reply",
      "> but also because the law sets the standard, it can also provide a new one.If the people writing the law cared about privacy they wouldn't have passed that one, and anybody who does would be repealing it rather than trying to find the best shade of lipstick for the pig.> Which information is collected is made legible by the user agentsThis is the part you don't need a law in order to do because the user can choose their user agent. Or if they can't, you should stop talking about any of this and go fix your antitrust problem.> you are still legally required to age verify online alcohol purchases butBy conceding this you've already lost, because:> it\u2019s illegal to use information collected for that purpose for other purposesThis is the part which is hopeless. If they have the information, you're already screwed, because once they have it it's almost impossible for you or the government to know what they're doing with it, which makes those laws nearly impossible to enforce. And on top of that, a large part of the problem is what criminals or governments do once there is a legally-mandated database of all of that stuff, and those entities aren't constrained by laws.Which is why anybody who really cares about this knows that the only solution is to not have the law requires that data to be collected.> Good luck changing financial disclosure laws, though\"Slippery slope is a fallacy\", they said. \"It's just one inch\", they said.reply",
      "I figured I\u2019d get this response, but:I don\u2019t see my primary care doctor selling my health data, due in part to data privacy laws like HIPAA. Consumer companies take COPPA seriously.You absolutely cannot control what companies do with data, so you want to prevent its collection in the first place \u2013 but you can penalize them when they do something wrong, which does influence their beyavior. The jury is still out on the effectiveness of the GDPR, but to say it had no effect would be an odd claim.reply",
      "I think most age verification ranges from silly to chilling to speech.  But I don\u2019t think we can somehow punt these problems to the quiz from the beginning of Leisure Suit Larry (which never stopped 10 year old me).reply",
      "Requiring someone to have a government ID isn't anywhere near 100% effective because people will just borrow one from dad's wallet while he's not looking or use a device already signed in as someone else or the high school freshmen will get one from the high school seniors etc.If we're admitting solutions that aren't 100% effective, why can't we admit solutions that aren't 100% effective but are much better at preserving privacy?reply"
    ],
    "link": "https://ellsberg.substack.com/p/free-speech",
    "first_paragraph": ""
  },
  {
    "title": "A.I. Is Making Sure You Pay for That Ding on Your Rental Car (nytimes.com)",
    "points": 6,
    "submitter": "pseudolus",
    "submit_time": "2025-07-13T01:25:53 1752369953",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44546707",
    "comments": [
      "Really I wonder how.reply",
      "https://archive.ph/NhhzBreply",
      "The Hertz from this article is a company you should never do business with, unless you like getting falsely accused of a felony, arrested, and imprisoned for no reason:https://www.npr.org/2022/12/06/1140998674/hertz-false-accusa...I personally use other companies when I rent a car... but I'm also paranoid about the kind of nonsense described in the article, so I just buy the damage coverage when I rent the car. It means renting a car is far more expensive than it should be, but it saved my bacon the last time I rented when someone dinged the paint.It's funny that the AI bogeyman is used in the article to make this new tech seem scarier. The problem is the general practice of trying to milk you for money over regular wear and tear.reply",
      "as long as I get the same tool, or there is a clearer chronology of when the ding occurred between rentalsreply"
    ],
    "link": "https://www.nytimes.com/2025/07/09/travel/rental-car-ai-scanner-hertz.html",
    "first_paragraph": ""
  },
  {
    "title": "Working through 'Writing A C Compiler' (jollygoodsw.wordpress.com)",
    "points": 115,
    "submitter": "AlexeyBrin",
    "submit_time": "2025-07-12T12:23:33 1752323013",
    "num_comments": 30,
    "comments_url": "https://news.ycombinator.com/item?id=44541565",
    "comments": [
      "I love this book! I worked through a bunch of it during my winter break last year and found the incremental teaching style extremely rewarding. For readers of the book, Sandler\u2019s reference OCaml implementation is super useful for getting your bearings. I was kind of thrown off by the use of TACKY as an IR, but it was nice to have a solid reference as I worked through the book. For those more experienced with compilers: what are some good resources for stuff like SSA and optimisation? I\u2019ve looked at some of the resources here https://bernsteinbear.com/pl-resources/ but are there other canonical resources?reply",
      "> Sandler\u2019s reference OCaml implementation is super useful for getting your bearingsThe author also maintains a list of implementations created from the book: https://github.com/nlsandler/c-compiler-implementationsreply",
      "The author of the book also has a series of blog entries: https://norasandler.com/2017/11/29/Write-a-Compiler.htmlreply",
      "From what the blog author says (I haven\u2019t looked into the book), the approach reminds me of> Abdulaziz Ghuloum, 2006, An Incremental Approach to Compiler Construction http://scheme2006.cs.uchicago.edu/11-ghuloum.pdfreply",
      "Oh that\u2019s exactly what the book\u2019s author blog mentions: https://norasandler.com/2017/11/29/Write-a-Compiler.htmlreply",
      "You can also find this approach in this book that comes in Racket and Python flavors [0].[0] https://mitpress.mit.edu/9780262047760/essentials-of-compila...reply",
      "Sounds like a great book. I worked through nand2tetris ages ago and remember enjoying it as well.reply",
      "This makes the book sound very well structured!  I also found Ghuloum's paper inspirational.reply",
      "The crafting interpreting asks the reader to use the visitor pattern, and this was quite a turn off for me, I stopped there.reply",
      "You can choose to implement it differently based on your implementation language. Data Classes and If statements work really well for this in Python, for example.Statement Data Classes: https://github.com/alabhyajindal/plox/blob/main/stmt.pyIf statements in the parser matching against them: https://github.com/alabhyajindal/plox/blob/main/parser.py#L3...reply"
    ],
    "link": "https://jollygoodsw.wordpress.com/2025/03/13/working-through-writing-a-c-compiler/",
    "first_paragraph": "Old programmer discusses stuff about software (mainly)Some time ago I decided I wanted to create a c compiler for the Hack processor in the nand2tetris book. After several dead end attempts that I might describe later I found this book : Writing a C Compiler | No Starch PressI decided to work my way through it. I plan to do blog posts as I progress through it, probably chapter by chapter.I have emailed the author a couple of times and have got helpful timely replies! \u2013 thank youWhat makes the book so good?By the end of chapter 1 you have a working compiler. Each subsequent chapter adds more features. The chapter 1 compiler can only handleBut it works producing a complete executableChapter 2 adds unary operators so we can now do something like.This contrasts with most other books I have worked with on compilers like the also excellent Crafting Interpreters and Home | nand2tetris The fact that we are building a real language as opposed to a made up one is great too.Side note: Some c feat"
  },
  {
    "title": "ETH Zurich and EPFL to release a LLM developed on public infrastructure (ethz.ch)",
    "points": 655,
    "submitter": "andy99",
    "submit_time": "2025-07-11T18:45:10 1752259510",
    "num_comments": 91,
    "comments_url": "https://news.ycombinator.com/item?id=44535637",
    "comments": [
      "I hope they do well. AFAIK they\u2019re training or finetuning an older LLaMA model, so performance might lag behind SOTA. But what really matters is that ETH and EPFL get hands-on experience training at scale. From what I\u2019ve heard, the new AI cluster still has teething problems. A lot of people underestimate how tough it is to train models at this scale, especially on your own infra.Disclaimer: I\u2019m Swiss and studied at ETH. We\u2019ve got the brainpower, but not much large-scale training experience yet. And IMHO, a lot of the \u201cmagic\u201d in LLMs is infrastructure-driven.reply",
      "No, the model has nothing do to with Llama. We are using our own architecture, and training from scratch. Llama also does not have open training data, and is non-compliant, in contrast to this model.Source: I'm part of the training teamreply",
      "If you guys need help on GGUFs + Unsloth dynamic quants + finetuning support via Unsloth https://github.com/unslothai/unsloth on day 0 / 1, more than happy to help :)reply",
      "absolutely! i've sent you a linkedin message last week. but here seems to work much better, thanks a lot!reply",
      "Hey, really cool project, I\u2019m excited to see the outcome.\nIs there a blog / paper summarizing how you are doing it ?  \nAlso which research group is currently working on it at eth ?reply",
      "So you're not going to use copyrighted data for training? That's going to be a disadvantage with respect to LLaMa and other well-known models, it's an open secret that everyone is using everything they can get their hands on.Good luck though, very needed project!reply",
      "Not sure about the Swiss laws, but the EU AI Act and the 2019/790 digital millennium directive it piggies back on the topic, does allow for training on copyrighted data as long as any opt-out mechanisms (e.g. robots.txt) are respected. AFAICT this LLM was trained by respecting those mechanisms (and as linked elsewhere they didn't find any practical difference in performance - note that there is an exception to allow ignoring the opt-out mechanisms for research purposes, so they could make that comparison).reply",
      "Thanks for clarifying! I wish you all the best luck!reply",
      "L3 has open pretraining data, it's just not official for obvious legal reasons: https://huggingface.co/datasets/HuggingFaceFW/finewebreply",
      "Are you using dbpedia?reply"
    ],
    "link": "https://ethz.ch/en/news-and-events/eth-news/news/2025/07/a-language-model-built-for-the-public-good.html",
    "first_paragraph": ""
  },
  {
    "title": "Proposed NOAA Budget Kills Program Designed to Prevent Satellite Collisions (skyandtelescope.org)",
    "points": 301,
    "submitter": "bikenaga",
    "submit_time": "2025-07-12T16:31:03 1752337863",
    "num_comments": 177,
    "comments_url": "https://news.ycombinator.com/item?id=44543150",
    "comments": [
      "I get the desire to reduce government spending. It looks like sticker shock seeing budgets in the billions and trillions.This type of program has high value per dollar spent. It's an asset, not a waste. The first order, second order, and even third order effects are very large.Let us get/return to more reasonable principles for doing these budget evaluations and requests.reply",
      "There\u2019s no plausible discussion of reducing spending when the added debt commensurate with that effort is as astronomical as it is.This is privatization and federal dismantling, and it\u2019s happening so fast and recklessly it will also show up as cultural and civil destruction too. He\u2019s wrecking America so that technocrats can buy it all up.There\u2019s no intended upside for citizens or for the society they make up. People die and his supporters shrug and defend. It\u2019s Microsoft\u2019s embrace, extend, extinguish as political policy, but reduced by hyperscaling to \u201ceviscerate\u201d.reply",
      "We\u2019re watching the fire sale of America, like was imposed on Russia in the 90s, and resulted in one of the largest declines in life expectancy in the country\u2019s history. I expect the same to happen here, including its eventual culmination in the rise of a Putin-like figure from the security state apparatus, after we similarly suffer a decade or more of internal collapse and humiliation.reply",
      "> We\u2019re watching the fire sale of America,This is very naive and a typical US-exceptionist take. EU is going through the same thing: the bill for neoliberal policies and globalization came due.reply",
      "Not really. Just authoritarian scooping up capital, same as always after the end of hegemony. Next come the dark ages. I'm not sure it was ever as deliberate as Trump's losses.reply",
      "Neoliberalism and globalization were the state ideology of the American empire, of which the EU (was) a part, so of course they\u2019re experiencing the same. They\u2019ll now either re-align themselves with China (who capitalized best on the prior era) or face a similar fate.reply",
      "I don't think it's an exaggeration to say that the people who promoted neoliberalism in Russia saw how it ended in authoritarian oligarchy- supported by a religious nationalism which displaced science and progressive democratic values - and decided same would be a good outcome for them personally if rolled out across the rest of the West.This is dense, but stunningly prescient.https://library.fes.de/libalt/journals/swetsfulltext/1230310...While things are undoubtedly bad in the US, Trump's grip on everything - including personal health - is far more tenuous than Yeltsin's was. And (ironically) the US has more of a history of violent resistance and agitation for both worker rights and civil rights.The US has always been a soft economic dictatorship. But a lot of people still expect a functioning social contract, and they're going to become increasingly angry as that disappears.It's a much more complicated picture than the one in Russia, which has essentially been the same kind of violent autocratic monarchy for centuries, even as the set dressing around it changed.reply",
      "Your link looks very interesting. Thanks.reply",
      "> But a lot of people still expect a functioning social contract, and they're going to become increasingly angry as that disappearsI would argue that was happening way before Trump, it's precisely why he was elected. He didn't just scapegoat but also pretended to take their economic grievances seriously and was the only permitted political outlet to people's grievances.I think what happens is just the natural course of neoliberalism in the west, not any conscious long term strategy. That's why you can see the far-right gaining ground in every western country.reply",
      "I dont think America will have Putin like figure. It howver may have Trump like figure and Vance like figure.Security state apparatus in Russia filled different role. These guys are true Putin equivalents.reply"
    ],
    "link": "https://skyandtelescope.org/astronomy-news/proposed-noaa-budget-kills-program-to-prevent-satellite-collisions/",
    "first_paragraph": ""
  },
  {
    "title": "Second Variety, by Philip K. Dick (1953) (gutenberg.org)",
    "points": 30,
    "submitter": "djoldman",
    "submit_time": "2025-07-09T11:14:14 1752059654",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=44508580",
    "comments": [
      "Anecdote, but I\u2019ve never read this anywhere \u2014The day after he died Ursula LeGuin was supposed to give the commencement address at Reed College, in Portland. She started by saying, \u201cYesterday the greatest science fiction author of all time, and the greatest living author in English, died. So I\u2019m going to talk about Philip K Dick instead of give this speech I wrote.\u201d(Source: I took SF classes at Portland State University with Tony Wolk, a good friend of Ursula LeGuin. He\u2019d often have her come and talk to a class.)Now, many people I respect would still say LeGuin herself is still the literary pinnacle in SF, and I agree. That she, the most human of writers, saw such humanity in PKD \u2014 that\u2019s always struck me.reply",
      "While I think some details of your anecdote might be wrong (Dick died in early March 1982, which is probably too early for Reed College's commencement), I think it is clear that LeGuin had a lot of admiration for Dick.She talked extensively about him in a 2012 interview with Wired (https://www.wired.com/2012/07/geeks-guide-ursula-k-le-guin/) and in the introduction to the Folio Society's edition of The Man in the High Castle (included in her essay collection Words are My Matter). In both, she mentioned the Phildickian anecdote that they were both students at the same large high school in Berkeley at the same time, but that none of her friends or acquaintances remember Dick.reply",
      "Screamers (1995) is one of my favourite sci-fi movies and it's more or less The Secondary Variety in film form.Beware: low ratings on Rotten Tomatoes, \"frustrating close to being great.\"reply",
      "I liked the idea of Screamers, how the robots started self replicating and took over.  Also liked Total Recall, I was never sure if the whole second part of the movie was real or in his head.reply",
      "Ah, this one.Yes, it's close to be great, but lacks to be it. Mostly because it's not another Hollywood sugar story about the good guys killing all the bad ones.But I would recommend it to anyone who like a serious SF.reply",
      "Dick is one of the writers that accompanied me in my youth, along with the Golden Agers (IA, RAH, AC etc.). His books are the base for many SF tv/movies. Total Recall, The Man in the High Castle, and others. This story, written in the fifties, is eerily evocative of todays drone warfare.reply",
      "Terminator evoked Second Variety for me more than anything else ever has.Never understood why Harlan Ellison insisted it was ripping off his work instead.reply",
      "Actually, when it came out, Fred Saberhagen's Brother Assassin came to mind.reply",
      "I always have to comment whenever I see a PKD thread. He's my favorite author, and nobody else has impacted the way I see reality as much as he has.> What struck me was the oddity of a lunatic discounting his hallucinations in this sophisticated manner; Fat had intellectually dealt himself out of the game of madness while still enjoying its sights and sounds.- VALISreply"
    ],
    "link": "https://www.gutenberg.org/files/32032/32032-h/32032-h.htm",
    "first_paragraph": "BY PHILIP K. DICKILLUSTRATED BY EBELThe claws were bad enough in the first\r\n\tplace\u2014nasty, crawling little death-robots.\r\n\tBut when they began to imitate\r\n\ttheir creators, it was time for the\r\n\thuman race to make peace\u2014if it could!\u00a0The Russian soldier made his\r\n\tway nervously up the ragged\r\n\tside of the hill, holding his gun\r\n\tready. He glanced around him,\r\n\tlicking his dry lips, his face set.\r\n\tFrom time to time he reached\r\n\tup a gloved hand and wiped\r\n\tperspiration from his neck, pushing\r\n\tdown his coat collar.Eric turned to Corporal Leone.\r\n\t\u201cWant him? Or can I have him?\u201d\r\n\tHe adjusted the view sight so the\r\n\tRussian\u2019s features squarely filled\r\n\tthe glass, the lines cutting across\r\n\this hard, somber features.Leone considered. The Russian\r\n\twas close, moving rapidly, almost\r\n\trunning. \u201cDon\u2019t fire. Wait.\u201d\r\n\tLeone tensed. \u201cI don\u2019t think\r\n\twe\u2019re needed.\u201dThe Russian increased his\r\n\tpace, kicking ash and piles of\r\n\tdebris out of his way. He reached\r\n\tthe top of the hill and stopped,\r\n\tpant"
  }
]