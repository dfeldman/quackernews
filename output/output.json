[
  {
    "title": "GPUs Go Brrr (stanford.edu)",
    "points": 205,
    "submitter": "nmstoker",
    "submit_time": "2024-05-12T22:05:58",
    "num_comments": 27,
    "comments_url": "https://news.ycombinator.com/item?id=40337936",
    "comments": [
      "\"And we ask: if your matrix multiply is smaller than 16x16, are you sure what you\u2019re doing is AI?From a philosophical point of view, we think a frame shift is in order. A \u201cregister\u201d certainly shouldn\u2019t be a 32-bit word like on the CPUs of old. And a 1024-bit wide vector register, as CUDA uses, is certainly a step in the right direction. But to us a \u201cregister\u201d is a 16x16 tile of data. We think AI wants this.\"The hardware needs of AI are starting to focus. GPUs, after all, were designed for an entirely different job. They're used for AI because they have good matrix multiply hardware. \"AI GPUs\" get to leave out some of the stuff in a real GPU (does an H100 even have texture fill units?). Then there's a trend towards much shorter numbers. 16 bit floating point? 8 bit? 2 bit? 1 bit? That will settle out at some point. This paper indicates that hardware that likes 16x16 tiles makes a lot of sense. It's certainly possible to build such hardware. Someone reading this is probably writing it in VHDL right now, or will be soon.Then we'll see somewhat simpler, less general, and cheaper devices that do \"AI\" operations with as little excess hardware baggage as possible. Nice.",
      "> Then we'll see somewhat simpler, less general, and cheaper devices that do \"AI\" operations with as little excess hardware baggage as possible. Nice.Apple has already been doing this for a few years now. The NPU is totally different from the GPU or CPU on the die itself[1]. Nvidia is likely working on this as well, but I think a device that's a gaming/entertainment/crypto bundle is probably a better business move.[1] https://github.com/hollance/neural-engine/blob/master/docs/a...",
      "Wait but nvidia tensor-cores are exactly the hardware that likes 16x16 tiles, no? I thought that was the whole point? The hardware is already here and I'm sceptical if there is another order of magnitude in performance to be gained from even more specialized designs.",
      "Would you say this is ultimately \"ASICs for AI\"?",
      "In the same way that CPUs are ASICs for integer operations, that makes sense to me.",
      "> NVIDIA\u2019s lies. This is an extraordinarily misleading representation of the actual 128b swizzled wgmma layout. This diagram cost us three weeks of life that we will not get back, hence the public shaming.Wondering if anyone would be surprised that a huge amount of progress in AI is on the engineering side (optimizing matmuls), and that a huge portion of the engineering is about reverse engineering NVIDIA chips",
      "This article rekindles the joy I experienced during CS 149 Parallel Programming.",
      "Interesting! Would this support fp8? Does anyone know how it would compare to Triton?",
      "What is needed are true NPUs as dedicated co-processors, especially for prosumer desktop systems (devs, other professionals, gamers). GPUs work in the enterprise, but they're a hassle to use for AI on the personal computing side of the market. Especially VRAM limitations, but also the lack of a standard open API other than Vulkan (again, using video stuff for AI).",
      "Fwiw, Vulkan isn\u2019t specifically a graphics api and has had compute specific features for a while now. (Potentially since its inception)"
    ],
    "link": "https://hazyresearch.stanford.edu/blog/2024-05-12-tk",
    "first_paragraph": "May 12, 2024 \u00b7 26 min read"
  },
  {
    "title": "Show HN: I made an open-source Loom alternative (cap.so)",
    "points": 71,
    "submitter": "mcilroy",
    "submit_time": "2024-05-12T23:09:08",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=40338275",
    "comments": [
      "How does it compare to using either of the following on macOS- OBS- The built in screen recording functionality in macOS itself- ffmpeg (see http://trac.ffmpeg.org/wiki/Capture/Desktop for details on doing screen capture with it)",
      "Loom is software that, in one click, overlays your face in a bubble as you can narrate your screen recording, uploads it as it's recording, and when you press stop it copies a link to your clipboard you can share immediately with whoever you are showing. It's a very polished and complete experience.OBS is for streamers. It could be set up in a similar way if you already have a twitch channel hooked into it. It won't be as polished and easy.macOS doesn't have any upload or overlay function so it's not comparable.ffmpeg is ffmpeg",
      "macOS does have overlay functionality, it\u2019s called presenter mode or something like that. Look for it in the green camera icon that shows up in the menu bar when you\u2019re sharing your screen. It puts your face in a bubble overlayed on top of whatever you\u2019re sharing, as you said. You\u2019re right it doesn\u2019t have upload though.",
      "With any of those you need to upload the video directly into Slack, or something like YouTube, Vimeo, etc. Plausible for short videos, but can become a pain if recording for more than a few mins.If you record with Cap, we'll auto handle the segmentation of the video so it can be played back efficiently (so the whole video doesn't have to be download in one go).You can also receive comments on your Cap link, reactions, and see the analytics data.It just makes it easier. Do your recording, then receive your shareable Cap link in just a few seconds.",
      "That makes sense. How about if I already run a PeerTube instance. In that case I already have segmentation of videos so people can watch without downloading the whole file, and they could also comment on the video on my PeerTube instance if I allowed them to.How does Cap compare to using a PeerTube instance to host screen recordings?",
      "This is like the classic Dropbox comment. It\u2019s about ease of use and the fewest steps.",
      "Yeah, but not quite. I\u2019m not dismissing their product. Just wondering if it would be worth running a Cap server when I already have tools to make screen recordings, and I already have a PeerTube instance where I can host videos.And actually now I am also wondering if Cap could be integrated with PeerTube so you could have which ever things Cap brings to the table aside from video hosting and have it either upload to PeerTube by API, or even having some version of Cap existing as a sort of plugin into PeerTube so that you could use it from within PeerTube",
      "One of the benefits of Loom is the convenience of video messaging. So it\u2019s less about screen recording in the same way as OBS but more about replacing Slack with something more efficient. I\u2019m not sure Cap is a replacement for Loom in that sense.",
      "How do you quantify \u201clightweight\u201d? This is used in a couple places, but without additional information it\u2019s essentially meaningless.I\u2019m starting to think that this is a red flag when looking at a project when there\u2019s no further information. It\u2019s marketing-speak masquerading as a technical attribute, but without additional information could just be 100% incorrect. It\u2019s also overly-generic\u2026 depending on the intent of the author, lightweight could mean CPU-efficient, small binary, feature-light, and so on, but when not qualified further it seems to be implicitly all of these and more, but most likely that\u2019s not accurate.My marketing pet-peeve aside, this looks nice and I will be trying it out. :) Congrats on your HN launch!",
      "Good point. Will definitely take another look at the copy! I'm referring to it being a small bundle size to download :)"
    ],
    "link": "https://Cap.so",
    "first_paragraph": "Cap is the open source alternative to Loom. Lightweight, powerful, and stunning. Record and share in seconds."
  },
  {
    "title": "Vision Pro has the same effective resolution as Quest 3... Sometimes? (douevenknow.us)",
    "points": 38,
    "submitter": "jsheard",
    "submit_time": "2024-05-12T23:58:51",
    "num_comments": 30,
    "comments_url": "https://news.ycombinator.com/item?id=40338486",
    "comments": [
      "We're still a few tech generations away from that being physically possible. The absolute best on the market (clocking in at way pricier and heavier than the AVP) hit about 70 PPD, while a 4K laptop at a reasonable distance is the equivalent of about 110 PPD or so.",
      "Maybe AI will speed up the development process",
      "Maybe AI will replace eyes",
      "I'm not going to stop talking about AI just because some hate it",
      "One of the issues with VR glasses is that at reasonable viewing distances a normal 4k monitor takes up about a quarter of your vision (in each axis, so 1/16th the area), maybe a bit less. That's why 4k glasses can't replicate the feeling of looking at a 4k monitor, you would need 16k screens for each eye to achieve that. And those simply don't exist in that size.For a lot of use cases you don't need that. Even 720p AR headsets can be useful if they are fast enough, both for gaming and industry applications. But really crisp fonts or high-resolution virtual monitors are simply not possible yet",
      "I think XReal-style \"AR\" glasses will win out when it comes to being a monitor replacement. XReals already have near-monitor level clarity, at the cost of not being fully immersive (also not 4k yet). A benefit of not being fully immersive is that you're much less likely to get headaches.",
      "Curious how many who bought a Vision Pro are still using it?My bet based on the success of Meta's RayBan Smartglasses Apple will be releasing their version in the next year or two.  If you wear sunglasses and like / do take a good amount of photos/videos daily Meta's Rayban is a great solid and very useful product! I use them daily since buying them in October.  This is a mass product like Apple Watch and personally per my use I think the next iPhone.Vision Pro as of today is not a mass product yet they are trying to work towards getting to that point.  Though today it's a mixed bag of features that do not enhance daily life much and or make things we already do easier.. Meta's RayBans do just that and more.",
      "I expected mine to gather dust. Instead, I am using it all the time to watch shows and movies. Before the AVP, I actually watched very few movies the last several years.  But the viewing experience is so amazing with the Vision Pro, I can\u2019t get enough and I\u2019m catching up like crazy.",
      "How many people are in your household? If multiple individuals, do you share TV/movie interests. Do you watch by yourself while they watch something different? I\u2019m interested in learning more from users who are super happy with the product.",
      "I have a family, but I\u2019m only user of the AVP.The most delightful thing is watching 30 mins in bed before sleep.  Just me in front of a gigantic cinema screen floating above me, with my airpods so it\u2019s completely silent."
    ],
    "link": "https://douevenknow.us/post/750217547284086784/apple-vision-pro-has-the-same-effective-resolution",
    "first_paragraph": "This article is a partial-rebuttal/partial-confirmation to KGOnTech\u2019s Apple Vision Pro\u2019s Optics Blurrier & Lower Contrast than Meta Quest 3, prompted by RoadToVR\u2019s Quest 3 Has Higher Effective Resolution, So Why Does Everyone Think Vision Pro Looks Best? which cites KGOnTech. I suppose it\u2019s a bit late, but it\u2019s taken me a while to really get a good intuition for how visionOS renders frames, because there is a metric shitton of nuance and it\u2019s unfortunately very, very easy to make mistakes when trying to quantify things."
  },
  {
    "title": "Did GitHub Copilot increase my productivity? (yshui.dev)",
    "points": 26,
    "submitter": "fzliu",
    "submit_time": "2024-05-12T23:02:52",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=40338241",
    "comments": [
      "From my experience, Github Copilot is useful for its seamless autocompletes.  But Github Copilot chat, a new feature, noticeably lags behind GPT-4.  I get far better performance copying and pasting code into ChatGPT (GPT-4) than using Github Copilot.  Both definitely help productivity, especially when generating code using an unfamiliar framework or library.  It's great for generating skeleton code for small programs using new libraries, but it in its current form can only get you around 80% of the way there.  You will spend hours fighting with the prompt to try and get the remaining 20% complete when it's much easier to just finish it yourself.",
      "Weird, because Copilot chat /is/ GPT-4 as far as I know. Or maybe they run it on 3.5?",
      "It runs both. Had seen this on the discussions on Github.https://github.com/community/community/discussions/58059#dis...",
      "Local maxima go BRRRRRRRAI will get there eventually, but this current paradigm seems increasingly only useful for spam and shitty clip art. Even so, everyone is throwing absurd amounts of investment capital at it in the hopes that something useful will happen.  It's a pretty clear depiction of the investor class being so detached from the technical reality of what they're investing in that they just sit around lighting billions on fire thinking that they're getting richer instead of poorer.  Go ahead and buy more H100s though...",
      "I've been finding this stuff genuinely useful for two years now, across Copilot and ChatGPT and Claude 3 Opus and similar tools.Either I'm a dimwit, easily conned by hype and shiny tools to the point that I can imagine benefits for two years that simply aren't there... or there's something to them.",
      "> spamThe first 100 lines of any project is spam (usually 0 entropy), so AI is a nice win.",
      "I don\u2019t know if Copilot has made me more productive, I think I get the same stuff done, but I think it has made getting the stuff done more enjoyable. At times with better quality at times with worse probably.",
      "This made me think: the thing Microsoft has been good at for a very long time is developer tools. Think about how much better visual studio is was than Xcode.If Microsoft focuses copilot on simply making things more enjoyable rather than do the work for you, I think it will be an amazing thing.",
      "https://news.ycombinator.com/item?id=40293461",
      "Writing fairly standard typescript APIs and React code, Copilot is immensely helpful and almost always correct. It definitely hits a wall when I am working on something sufficiently esoteric. As does ChatGPT, etc."
    ],
    "link": "https://trace.yshui.dev/2024-05-copilot.html#did-github-copilot-really-increase-my-productivity",
    "first_paragraph": "I had free access to GitHub Copilot for about a year, I used it, got used to it, and slowly started to take it for granted, until one day it was taken away. I had to re-adapt to a life without Copilot, but it also gave me a chance to look back at how I used Copilot, and reflect - had Copilot actually been helpful to me?"
  },
  {
    "title": "MacRelix \u2013 Unix-like features for classic Mac OS (macrelix.org)",
    "points": 13,
    "submitter": "Lammy",
    "submit_time": "2024-05-12T23:47:18",
    "num_comments": 0,
    "comments_url": "",
    "comments": [],
    "link": "https://www.macrelix.org/",
    "first_paragraph": "MacRelix is a Unix-like environment that runs in classic Mac OS."
  },
  {
    "title": "The Alternative Implementation Problem (pointersgonewild.com)",
    "points": 102,
    "submitter": "mpweiher",
    "submit_time": "2024-05-12T19:49:05",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=40337036",
    "comments": [
      "I'll add one more point which the OP missed, but which is also very important. If you're developing an alternative implementation, you probably have a different architecture from the canonical version, and things that are easy to do in the main implementation might be very difficult to do in yours.Let's say there's a piece of proprietary software for creating financial reports[1], which is using a weird binary format to store their documents. You want to make  a free alternative, which can load and save these documents. The format is not fun to deal with, so you have a single function that loads the whole document into memory and one that dumps your data structures back to disk and entirely overwrites the file, but you operate purely on in-memory data while the software is running. What you don't know is that the proprietary software doesn't do this, it was developed in the days when users had very little RAM, so it only loads and saves the section the user is currently operating on, and knows how to modify the document in-place.Then, the proprietary software introduces a way to add attachments to their documents. People keep adding stupidly large files, recordings of investor calls, scanned PDFs with hundreds of pages and so on. THe proprietary software loads documents one section at a time, so this works just fine. You, on the other hand, always deserialize the entire document at once, which suddenly becomes a problem when the documents are bigger than the users' available RAM memory. You now basically have to re-architect the entirety of your software, to support a change that took a week of a single developer's time for the main implementation.[1] a purely hypothetical example, I've never actually worked in this space.",
      "> things that are easy to do in the main implementation might be very difficult to do in yours.The author mentions this when they talk about the ease of implementing new features in an interpreted language vs. a compiled language.",
      "I learned something similar founding a startup. If I could do it again, I would have aggressively avoided pursuing the table stakes feature in our space.  Instead we should have done the minimal amount to be comfortable that our architecture could support the enterprisey things. We should have then concentrated everything on something that would set us apart, something we could demo and get a \u201cwow\u2026 I see where this could go\u201d instead of something like \u201coh this is just a clone of x\u201d.",
      "If I understand you correctly, you\u2019re saying implement the bare minimum for enterprise customers\u2014whatever their leadership requires to do business with you\u2014but beyond that, forget about those features and focus on something very novel that sets you apart from the competition?",
      "If you're just like the competition, you lose, because you're more of an unknown.  If you want to win business, you have to have something that your established competitors do not.  (And, of course, it has to be something that your customers want, not just some random thing.)",
      "That\u2019s what I was trying to express.  We implemented the features that were unique and interesting too late.  We should have led with them and build some compelling demos",
      "Kind of like what the iPhone did when they launched without copy-pasting, and a very underwhelming gsm radio",
      "Yeah, that original iPhone launch keynote is something I like to watch every so often. It really emphasized we\u2019re only doing this because we see what\u2019s wrong with smartphones and this is our vision.  They didn\u2019t go \u201cwe made the best stylus you can have\u201d.",
      "I sort of see your point, but you\u2019re misusing the term \u201ctable stakes\u201d, which by definition are what you have to put up to play at all. It sounds like you would implement the table stakes features, but not go farther with the \u201cnormal\u201d extensions. The strategy being to get a callback with the exciting features, and have the table stakes features that let you avoid being vetoed for missing something essential.",
      "Yeah that\u2019s pretty much what happened.  What I was thinking was we over estimated what the table stakes were.  We were building a collaborative SQL editor aka notebooks.  We spent way too much time getting it working with different dbs instead of focusing on a couple and building the things that actually made us stand out.  A single customer wouldn\u2019t really care about all the dbs we could talk to that were the one she was using."
    ],
    "link": "https://pointersgonewild.com/2024/04/20/the-alternative-implementation-problem/",
    "first_paragraph": "coding, compiler, javascript, programming, python, ruby"
  },
  {
    "title": "Homoiconic Python (aljamal.substack.com)",
    "points": 132,
    "submitter": "aburjg",
    "submit_time": "2024-05-12T16:24:05",
    "num_comments": 37,
    "comments_url": "https://news.ycombinator.com/item?id=40335608",
    "comments": [
      "Only tangentially related, but for anyone interested in the idea of a simple, quick Python-like scripting Lisp, there are two Clojure-style languages to look at:1) Hy (https://hylang.org/, compiles to Python bytecode, usually slower than Python but compatible with all Python libraries)2) Janet (https://janet-lang.org/, very light Lua-style embeddable VM ~1 Mb, roughly twice as fast as Python for similar ops, very easy C interop)",
      "> quick python-like scriptingsince we're at it, why not a batteries-included Common Lisp: https://github.com/ciel-lang/ciel it comes as a binary that starts fast and that includes libraries for mundane tasks.(for more CL<->Python if anyone's interested: https://github.com/CodyReichert/awesome-cl?tab=readme-ov-fil...)",
      "Ciel is exactly what I wanted out of a \"scripting language\" that runs atop Common Lisp. Really glad that you mentioned it. The built-in SLY/SLIME support makes me instantly want to ditch Babashka for this",
      "Hy slower than Python? It shouldn't be, at least at run-time. I maintain Hy. If you notice any meaningful performance differences, that's a bug.",
      "3) Basilisp (https://github.com/basilisp-lang/basilisp, \"A Clojure-compatible(-ish) Lisp dialect targeting Python 3.8+\")",
      "Wait... Isn't this just an implementation of lisp in python?It's not a homoiconic version of python as the title sugests, right?Or am I missing something?",
      "You would be correct according to Greenspun's 10th Rule: https://en.m.wikipedia.org/wiki/Greenspun's_tenth_rule",
      "Yep. I also got really excited thinking this is homoiconic python I might be able to make my coworkers use (without having them buy into lisp). But no, it's just lisp.",
      "Another functional language that can be concisely implemented [1] in Python is Binary Lambda Calculus, with a large part of the code dealing with BLC's pure I/O model. Instead of using an association list for variable lookup, it uses de-Bruijn indices to index the environment array. The same page shows implementations in 9 other languages, with BLC's self interpreter being the most concise at 232 bits (29 bytes), which includes a parser and tokenizer.[1] https://rosettacode.org/wiki/Universal_Lambda_Machine#Python",
      "MIT's fundamentals of programming course requires all its students to write a Lisp interpreter in Python. It's a throwback to when the class actually was in Lisp.https://py.mit.edu/spring24"
    ],
    "link": "https://aljamal.substack.com/p/homoiconic-python",
    "first_paragraph": ""
  },
  {
    "title": "I built an online PDF management platform using open-source software (pdfequips.com)",
    "points": 42,
    "submitter": "sanusihassan",
    "submit_time": "2024-05-12T22:05:30",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=40337933",
    "comments": [
      "Unfortunately, most of the PDF work I do involves things I\u2019m not uploading to a service - ever.  I don\u2019t care if they\u2019re \u201cdeleted immediately after processing\u201d - they left my control.  This sort of software would be great if it were 100% offline.This isn\u2019t just a niche issue either: this is a very real consideration for any corporate user.  More companies are taking data loss and security issues seriously, which often means restricting what cloud services they are willing to use.",
      "I decided to create pdfequips.com when a friend kept sending me PDF files for translation, realizing the widespread need for PDF solutions Now, it serves as a central hub for PDF management, offering conversion tools like PDF to Word and CSV, as well as OCR technology Over the past year, I extensively developed the website, leveraging a wide range of open-source tools on both the front-end and back-end.",
      "I'd like if there's more details on the open source software used.",
      "i used open source solutions to built it, like libreoffice, ghostscript, google's tesseract and a bunch of other tools, Google's Tesseract: https://github.com/tesseract-ocr/tesseract",
      "The PDF metadata says it's PyPDF2",
      "i used PyPDF2 to implement some tools, but not all of them.",
      "Same here. No (F)OSS licenses to be found on the page itself. Sus.\nPerhaps it is simply injecting remote root vulnerabilities into the PDF's.",
      "the web app i.e the front end part is next.js and typescript mostly, the landing page is built using astro.js, and the back end is heavily python, flask and some javascript for web-to-pdf and markdown-to-pdf, the rest is mostly python",
      "I hope those are FOSS remote root PDF vulns!",
      "This is great, definitely going into bookmarks. The website design lacks some refinement, but overall easy to use."
    ],
    "link": "https://www.pdfequips.com/",
    "first_paragraph": "All the PDF tools you can imagine are readily available at your disposal. Completely free and easy to use! You can merge, split, compress, convert, rotate, open and add watermarks to PDF files effortlessly with just a few clicks."
  },
  {
    "title": "Feynman Symbolic Regression Database (space.mit.edu)",
    "points": 9,
    "submitter": "gone35",
    "submit_time": "2024-05-12T22:47:09",
    "num_comments": 0,
    "comments_url": "",
    "comments": [],
    "link": "https://space.mit.edu/home/tegmark/aifeynman.html",
    "first_paragraph": ""
  },
  {
    "title": "Professional Corner-Cutting (2016) (ometer.com)",
    "points": 127,
    "submitter": "MississippiGary",
    "submit_time": "2024-05-12T18:55:39",
    "num_comments": 82,
    "comments_url": "https://news.ycombinator.com/item?id=40336609",
    "comments": [
      "The hook of the article leaves unanswered the question of why Steve Jobs made a big deal out of the backs of cabinets. The answer is that Steve Jobs knew how to sell luxury items to people who identified themselves with the quality of their work, whether they were accomplished creative professionals or cube-dwelling (now coworking) \"knowledge workers\" or MBAs who take sommelier classes or aspiring writers grinding on their novels at Starbucks. It was partly about the experience of using an Apple product, but it was just as much, if not more, about vicariously identifying with the standards of craftsmanship. If it was only about the experience, and the craftsmanship was a means to the experience, then the backs of the cabinets would not have mattered. They mattered because the craftsmanship was not just a means but was fetishized for its own sake.",
      "Article is spot about its topic - tradeoffs. The professionalism is in picking the right corners to cut.Steve's marketing was IMO a whole load of bollocks, like all other marketing. it gets attention now when Apple is a trillion $$$ company, and superficial minds wanting a simple answer attribute it to the most visible thing - Apple's marketing. no one bought Apple products for Apple's marketing or advertising. Its for the weirdos. Same theme as other Apple marketing e.g. the bicycle for the mind metaphor, the 1984 ad, etc.This article is good and its not about the backs of cabinets.",
      "> no one bought Apple products for Apple's marketing or advertising.That statement would require quite a source. Of course a lot of people bought Apple products because of the ads, like for any company that is a serious advertiser.",
      "It is not about the backs of cabinets. It is about telling your customers how big of a deal the backs of cabinets really are.",
      "The back of Apple cabinets are are actually pretty good even in the Tim Cook era.[1]: https://www.cultofmac.com/320883/why-samsungs-design-sucks-i...[2]: https://ioshacker.com/iphone/image-compares-ugly-samsung-bea...",
      "The first is not really the back of the cabinet, it is more like the design on the front.The second\u2026 more like the back of the cabinet maybe. Although the better style there might also be somewhat functional; the internals are clearly quite different, one could imagine that the nice packaging in the Apple case might be a result of only wanting people to use approved parts.",
      "It's in the link on the relevant bit [0]. TLDR: his dad built stuff, including as a hobby, and he liked overengineering. He liked he dad very much and also got on board with overengineering.[0] http://thenextweb.com/apple/2011/10/24/steve-jobs-obsession-...",
      "> If the technical debt is a problem, 1) we shouldn\u2019t have put it in there, and 2) we should include it in our estimates and address it.Yes. Don't tell your boss that you'll need to take time to address technical debt. The boss will always say \"No don't do that, just add the feature\". Sometimes they add \"We'll fix that later.\"Later never happens and eliminating related technical debt is part of implementing the feature.Don't ask your boss about this stuff. It's part of your job and it's something you understand that your boss probably doesn't.",
      "This is not the right answer for a real business. Sometimes we'll fix that later is perfectly acceptable. If that was good enough for Facebook it can certainly be good enough for others.",
      "And sometimes \u2014 quite a lot of the time, in fact \u2014 never fixing it is the way to go. It sucks, your users will keep complaining about it, and it'll nag you at the back of your mind forever. But if fixing things properly means somebody else ships first and you have no users and you get cancelled, that bug still wouldn't have been fixed.But sometimes your product is so buggy nobody wants to use it. It's all trade-offs, just like\u2026 well, engineering."
    ],
    "link": "https://blog.ometer.com/2016/05/04/professional-corner-cutting/",
    "first_paragraph": ""
  },
  {
    "title": "Scott Galloway: How the US is destroying young people's future [video] (ted.com)",
    "points": 17,
    "submitter": "Anon84",
    "submit_time": "2024-05-13T00:24:48",
    "num_comments": 0,
    "comments_url": "",
    "comments": [],
    "link": "https://www.ted.com/talks/scott_galloway_how_the_us_is_destroying_young_people_s_future",
    "first_paragraph": "TED is supported by ads and partners 00:00"
  },
  {
    "title": "Page Dewarping (2016) (mzucker.github.io)",
    "points": 71,
    "submitter": "Tomte",
    "submit_time": "2024-05-12T17:33:28",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=40336095",
    "comments": [
      "This writeup was great. I might reference this at work as an example of how technical projects (and decisions) can be effectively documented.",
      "I'd be wary of applying such a harsh threshold to the output as the author has done here. While it captures the page well enough for typical text, I have encountered many pages from Google Books where the threshold has mutilated illustrations or small footnotes to the point of making them unreadable. And if the Google Books scan is the only one available, you're completely out of luck.",
      "It's 2024. Why my freaking document scanner app still doesn't have this built-in?",
      "We use GeniusScan at school and it does that: https://blog.thegrizzlylabs.com/2024/03/genius-scan-7.16.htm....",
      "This is very nice. Having a low-dimension page warping model to optimize seems to be what makes this work.This is a good YC-sized problem - weeks to market, a few hundred thousand dollars to launch. Apple has a phone app for this which requires too much manual adjustment, and Microsoft has Office Lens / Microsoft Lens, which has comments such as \"The edges just eventually go crazy and look horrendous\". So there's a market for one that Just Works. Exit by selling to the usual suspects.",
      "I\u2019ve scanned probably thousands of pages with ms lens over the years and it works quite reliably in my experience, at least on iPhone.",
      "SwiftScan does pretty well in my experience.",
      "vflat is good for this",
      "I ran into a different issue while trying to make an app to scan color coded notes in college. The colors skewed from the top to the bottom of the page making it hard to reliably tell blue pens from green ones. At some point I should look at it again."
    ],
    "link": "https://mzucker.github.io/2016/08/15/page-dewarping.html",
    "first_paragraph": "Why do it by hand if you can code it in just quadruple the time?"
  },
  {
    "title": "Memory Management Every Developer Should Know (webdeveloper.beehiiv.com)",
    "points": 21,
    "submitter": "thunderbong",
    "submit_time": "2024-05-10T10:21:23",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=40317196",
    "comments": [
      "The content of this article is overly simplified and misleading.Heap and stack exists and are widely used, but they are presented here as the only memory allocation strategies.Static memory allocation is widely used in the embedded world.And custom memory allocators are very often used in the gamedev world, quite often arenas, with allocations grouped by lifetime (like a frame or a level) and destroyed all at once. But there are many other approaches, more or less advanced and with different tradeoffs.Memory management is not difficult but it is also not exactly entry-level, the problem we have is that many beginners are told that manual memory management is just outdated and unnecessary, while the cost of using \"managed\" solutions, quite often involving an annoying and intrusive garbage collector, and even worse, small allocations scattered all over the place for no reasons are very tangible.",
      "Trivia note: the IBM PL/I (F) compiler, circa mid60s, used OS calls to allocate and free stack frames on entry/exit of each procedure. My guess is that they did this because they were trying to implement concurrency (TASKs), and threads were not yet understood. As a result, the Programmer's Guide has the following tip: \u201cDo not use procedures; they are expensive.\u201dI would hazard a guess that later PL/I compilers did this better.",
      "> ...it will temporarily interrupt the current CPU execution process...If you unwind the stack (say in a debugger), you'll find that there's no \"interruption\" occurring.",
      "Should I know this if I almost never write javascript?"
    ],
    "link": "https://webdeveloper.beehiiv.com/p/memory-management-every-programmer-know",
    "first_paragraph": ""
  },
  {
    "title": "Assembly (louve.systems)",
    "points": 45,
    "submitter": "shpx",
    "submit_time": "2024-05-11T06:05:24",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=40326313",
    "comments": [
      "This was a bit confusing for me. Is this a simplified Core War[0]?[0] https://en.m.wikipedia.org/wiki/Core_War",
      "Seems like it, the footer has a note that it\u2019s \u201cinspired by Core War\u201d",
      "I love the idea! I never got too seriously into Core War but I remember discovering it as a high school student and getting exposed to assembly programming. I think that the \"natural\" language that this game uses is quite intuitive and the whole game is a great way to get started with assembly.However, I do find the UI quite unintuitive at certain points. Especially when I wrote a program, I couldn't figure out how to run it in the local training assembly.",
      "Slightly unrelated, but does anyone know what font is being used on the website? \"Dos\" is the only reference to it in the CSS stylesheet but I can't seem to find it online.",
      "I feel like not being able to treat data as code and code as data limits the strategy a lot.You can't read what code is in a cell, you can only read and write data. So you can't do self-modifying code, beyond blindly copying an existing code cell somewhere else.",
      "hello! i just discovered this forum post was the reason why my server load got off the charts :p  \nThanks so much for all the nice comments!!In the game instructions are also data, the ones called \"data\" just happen to be empty instructions. So you can modify instructions on the fly!\nFor instance adding +1 to a WRITE X TO Y statement will affect the Y parameter, so you can do self modifying programs. There is all sort of clever stuff you can do but I haven't tried too much - but you can also create instructions by adding or masking existing instructions :)  there's also a handful of useful undocumented operations like multiply or skip if greater.The whole source is at github.com/Rackover/assembly so if you feel like becoming a mastermind you can check out how the compiler looks like and predict how it will react to live instruction modificationHave a very good day \u2665",
      "Thanks for the explanation, appreciate itHave a good day as well <3",
      "Website has gone down.",
      "If you click \"Let's take a peek\", you can never get back to the front page. That's kinda annoying."
    ],
    "link": "https://assembly.louve.systems/",
    "first_paragraph": "Welcome to LouveSystems' Assembly! We're thrilled to have\n                        you here \u2665"
  },
  {
    "title": "Learning K programming: idiom by idiom [pdf] (nsl.com)",
    "points": 70,
    "submitter": "tosh",
    "submit_time": "2024-05-12T17:06:55",
    "num_comments": 37,
    "comments_url": "https://news.ycombinator.com/item?id=40335921",
    "comments": [
      "My experience when trying to give such tools to data scientists is that they can't use them effectively and will attempt to circumvent the idea of vector programming whenever they can get away with it.They will also often write code that doesn't do what they really want but has the appearance of doing so.",
      "Sounds like your data scientists are not big on R.",
      "> http://www.finnapl.fi/texts/Idiot.htmI somehow doubt that is the actual URL, and doubly so since it's 404. I tried URL surgery into http://www.finnapl.fi/texts/Idiom.htm but that was also 404 and searching for \"FinnAPL blue book\" didn't cough up anythng",
      "https://web.archive.org/web/20130630212847/http://www.finnap...",
      "https://aplwiki.com/wiki/FinnAPL_idiom_library",
      "Note that this is about K, the APL derivative language for the kdb database software.Not to be confused with K, the rewrite based semantic execution language built by the University of Illinois Urbana-Champaign and now primarily built and maintained by Runtime Verification.https://kframework.org/",
      "KDB implements k3. By contrast, Arthur's latest endeavor, Shakti, is k9.",
      "KDB+ provides Q, which is implemented in terms of k4.",
      "Looks like a pretty neat reference to have when dabbling in J as well, which I prefer over Kona for several reasons, including that I can run it on Android.https://www.jsoftware.com/",
      "I have a somewhat negative experience with Kona and its derivatives Kerf and Kerf2.For example, among Kerf and Kerf2: - there is no explanation about why two versions exist; - the code does not build; - it has memory leaks; - both are abandoned; - there are dubious performance claims, but when I asked the author to clarify, he closed issues without answering.The same experience with the K community: https://github.com/kparc\nThey maintain a cult-like impression of their software, and the examples are typically represented by a few code dumps with no clear way of using them.That's not to dismiss the overall idea of array programming languages, which I admire."
    ],
    "link": "http://nsl.com/papers/idioms_K3.pdf",
    "first_paragraph": ""
  },
  {
    "title": "Peter Jackson on how Tolkien stopped a Beatles LOTR film (2021) (bbc.com)",
    "points": 79,
    "submitter": "Caiero",
    "submit_time": "2024-05-10T18:18:41",
    "num_comments": 57,
    "comments_url": "https://news.ycombinator.com/item?id=40322137",
    "comments": [],
    "link": "https://www.bbc.com/news/entertainment-arts-59387182",
    "first_paragraph": ""
  },
  {
    "title": "Zero Feet: a proposal for a systems-free Lisp (applied-langua.ge)",
    "points": 60,
    "submitter": "tosh",
    "submit_time": "2024-05-12T16:02:57",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=40335472",
    "comments": [
      "If I understand the point of this, I believe Coral Common Lisp (now Clozure CL) has always been this way, if not more so. The lowest level is a Lisp program generating native machine code. [0] There\u2019s no lower-level implementation language or even a bytecode translator.[0] https://github.com/Clozure/ccl/tree/master/level-0/ARM",
      "Interesting. Although I think the author advocates for going a step further than CCL. My understanding is that the GC of CCL is implemented by its lisp kernel [0]. The lisp kernel is a platform specific C / ASM program which seems to provide a runtime for CCL. The author states that the GC should be written in the\nlanguage itself.[0] https://github.com/Clozure/ccl/blob/master/lisp-kernel/gc-co...",
      "Ah, so there is some C! Thanks for the correction. I haven\u2019t worked on it since 68K CCL days (like, 1990) and I\u2019m almost positive there was no C in that version, just inline assembler in Lisp. It was awesome.",
      "Wasn't Symbolics' Genera OS fully Lisp all the way down?",
      "Yes, definitely.",
      "Not sure I understand all the ideas presented but it was an interesting read, thanks!"
    ],
    "link": "https://applied-langua.ge/posts/zero-feet.html",
    "first_paragraph": "or, I don't know what I've been told, rustaceans done stole Guy Steele's gold"
  },
  {
    "title": "Scientists Find an 'Alphabet' in Whale Songs (nytimes.com)",
    "points": 175,
    "submitter": "tintinnabula",
    "submit_time": "2024-05-10T18:28:07",
    "num_comments": 103,
    "comments_url": "https://news.ycombinator.com/item?id=40322267",
    "comments": [],
    "link": "https://www.nytimes.com/2024/05/07/science/whale-song-alphabet.html",
    "first_paragraph": ""
  },
  {
    "title": "Whole-body magnetic resonance imaging at 0.05 Tesla (science.org)",
    "points": 123,
    "submitter": "Jimega36",
    "submit_time": "2024-05-12T15:20:39",
    "num_comments": 101,
    "comments_url": "https://news.ycombinator.com/item?id=40335170",
    "comments": [
      "A few months ago there were articles going around about how Samsung galaxy phones were upscaling images of the Moon using AI [0]. Essentially, the model was artificially adding landmarks and details based on its training set when the real image quality was too poor to make out details.Needless to say, AI upscaling as described in this article would be a nightmare for radiologists. 90% of radiology is confirming the absence of disease when image quality is high, and asking for complementary studies when image quality is low. With AI enhanced images that look \"normal\", how can the radiologist ever say \"I can confirm there is no brain bleed\" when the computer might be incorrectly adding \"normal\" details when compensating for poor image quality?[0] - https://news.ycombinator.com/item?id=35136167",
      "They've already made this mistake.  There was one model that detected skin cancer because there was always a ruler in the images.",
      "The Samsung phone wasn\u2019t a technological advancement, it was sheer fraud.A camera is supposed to take pictures of what it sees.Imagine going to a restaurant, ordering French onion soup, and getting a bowl of brown food coloring in water.",
      "Good gravy!https://www.youtube.com/watch?v=G4wh-Pbxgok",
      "> \u201cA camera is supposed to take pictures of what it sees.\u201dFeels like that\u2019s just a matter of expectations.A phone used to be a device for voice communications. It\u2019s right there in the Greek etymology, \u201cphon\u0113\u201d for sound. But 95% of what people do today on devices called phones is something else than voice.Similarly, if people start using cameras more to produce images of things they want rather than what exists in front of the lens, then that\u2019s eventually what a camera will mean. Snapchat thinks of themselves as a camera company, but the images captured within their apps are increasingly synthesized.(The etymology of \u201ccamera\u201d already points to a journey of transformation. A photographic camera isn\u2019t a literal room, as the camera obscura once was.)",
      "Taking this thought to its logical conclusion: https://bjoernkarmann.dk/project/paragraphica",
      "Some of us want a record of what was, not a hallucination of what might have or could have been.Courts, for example. Forensic science was revolutionized  by widespread adoption of photography leading to a reduction of the importance given to witnesses. Who also hallucinate what might have happened.",
      "small correction\n\u201cphon\u0113\u201d means voice not sound :)",
      "In ancient and koin\u0113 Greek it meant both voice and sound (including the sound of instruments, which carries in modern instrument names like \"saxophone\" and so on).They would say \"\u1f40\u03c1\u03b3\u03ac\u03bd\u03c9\u03bd \u03c6\u03c9\u03bd\u03b1\u03af\", \"\u03c6\u03c9\u03bd\u1f74 \u03b2\u03c1\u03bf\u03bd\u03c4\u1fc6\u03c2\", \"\u03c6\u03c9\u03bd\u1f74 \u1f51\u03b4\u03ac\u03c4\u03c9\u03bd\" and so on for example.",
      "> Imagine going to a restaurant, ordering French onion soup, and getting a bowl of brown food coloring in water.Welcome to England!"
    ],
    "link": "https://www.science.org/doi/10.1126/science.adm7168",
    "first_paragraph": ""
  }
]