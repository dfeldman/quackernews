[
  {
    "title": "Frequent reauth doesn't make you more secure (tailscale.com)",
    "points": 595,
    "submitter": "ingve",
    "submit_time": "2025-06-12T19:05:12 1749755112",
    "num_comments": 270,
    "comments_url": "https://news.ycombinator.com/item?id=44261777",
    "comments": [
      "Forced password rotation and expiry seems the bigger problem; given that it causes people to get locked out so often, (e.g. if pw expires when on holiday), \u2014 often then requiring travelling to IT, or at least a few hours trying to get IT on the phone to reset, or chasing up colleagues who aren't locked out to get in touch with IT.Many (most?) companies still do it, despite it now not being recommended by NIST:> Verifiers SHOULD NOT require memorized secrets to be changed arbitrarily (e.g., periodically)https://pages.nist.gov/800-63-3/sp800-63b.htmlOr by Microsoft> Password expiration requirements do more harm than good...https://learn.microsoft.com/en-us/microsoft-365/admin/misc/p...But these don't seem to be authoritative enough for IT / security, (and there are still guidelines out there that do recommend the practice IIRC).\n \nreply",
      "Does anyone not add the year & month of the last password change to the end of their password? E.g. PascalCasePassphraseGoesHere2025-06, then at the next required change in (for example) 6 months: PascalCasePassphraseGoesHere2026-01. It almost certainly fits the inane \"letter, number, and special character\" requirements they probably have, complies with \"different from your last X passwords\", and is easy to keep track of the change interval. It also adds no security whatsoever! A user could almost certainly get away with Password2025-06, etc.\n \nreply",
      "Sometimes when I log into a random website and I see a forced password reset, I wonder if it has been compromised, rather than setting a time-based expiry.If a site owner knows that certain accounts are part of a database breach or something, a reasonable step would be to force the users to change the password at next login.\n \nreply",
      "Last time I brought this to our cyber folks, they pointed out that PCI standards require password rotation. So it depends upon which auditors you care about more.\n \nreply",
      "This requirement is in section 8.3.9 of the PCI DSS[0], and only applies to single-factor authentication implementations, two-factor auth removes this requirement.[0] https://docs-prv.pcisecuritystandards.org/PCI%20DSS/Standard...\n \nreply",
      "Your broker/bank still needs to do it, unfortunately... someone please fix this :([0] https://www.finra.org/filing-reporting/entitlement/password-...\n \nreply",
      "What's the scope of that?  Not consumer accounts I imagine?  I haven't had to change my bank account passwords in over a decade.\n \nreply",
      "> If the password length is 12 to 15 characters, it will be valid for 180 days> If the password length is 16 to 32 characters, it will be valid for 365 daysMadness.\n \nreply",
      "if my password has not been leaked it's insane that providers think i should rotate it, but this still seems to be standard practice for some completely baffling reason\n \nreply",
      "There\u2019s weird math that says your password or generally a secret key is more secure if it\u2019s existed for less time (generated fresh) because there hasn\u2019t been as much time to brute force it. I don\u2019t believe it but some hardcore types do.\n \nreply"
    ],
    "link": "https://tailscale.com/blog/frequent-reath-security",
    "first_paragraph": "You're happily working away, fingers flying, deep in flow, and suddenly, boink, your session has expired. You sigh, re-enter your password (again), complete an MFA challenge (again), maybe approve an email notification (again), and finally \u2014 access restored. Until next time.This wasn't so bad when it was just passwords; we all got pretty fast at retyping our passwords. But all those MFA challenges really slow us down. And MFA fatigue attacks, a growing vector for phishing, get worse as more legitimate MFA requests arrive.We all used to believe that changing passwords often was a good idea; turns out the opposite is true. Similarly, we all used to believe that making people log in frequently was good security. If authentication is good, then surely more authentication is better, right? Like taking vitamins \u2014 one a day is good, so twenty must be great! Except, well, that\u2019s not how anything works.Security isn\u2019t about how often you log in. It\u2019s about how well your access is managed in the "
  },
  {
    "title": "A Dark Adtech Empire Fed by Fake CAPTCHAs (krebsonsecurity.com)",
    "points": 63,
    "submitter": "todsacerdoti",
    "submit_time": "2025-06-12T22:15:43 1749766543",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=44263780",
    "comments": [
      "> According to Qurium, TacoLoco is a traffic monetization network that uses deceptive tactics to trick Internet users into enabling \"push notifications,\" a cross-platform browser standard that allows websites to show pop-up messages which appear outside of the browser.An elderly relative of mine was hit by this a couple years back: his computer's desktop was constantly being spammed with messages on startup, and there was no simple way to turn them all off. It turned out that they were all notifications from web workers that he'd inadvertently allowed at some point prior. (I set his browser to auto-deny notifications so it wouldn't happen again.)\n \nreply",
      "I think the \u201cprove you\u2019re human by hitting the button\u201d attack is pretty clever.With the range of different ways captchas are presented today I can see it getting a good % of folks.\n \nreply",
      "It's our own fault for making the internet such a confusing Kafkaesque maze. Click this button, click that button, sign in to confirm you're not a bot, select the traffic signs, select the items that a rat would not eat, solve this maze to prove you're a human, type out the numbers hidden in these demonic noises, provide your phone number to prove you're real, compute proof-of-work, download this browser if you're having issues... The line between fraudster and modern tech company is honestly not clear anymore and especially not for people who don't care much about tech and just want to access something\n \nreply",
      "> TacoLoco is a traffic monetization network that uses deceptive tactics to trick Internet users into enabling \u201cpush notifications,\u201dWhy is it even possible for hostile code (i.e. JavaScript) to send OS-level notifications? If clicking a link runs untrusted code with layers of legal insulation, that code should run in a very limited sandbox. It's crazy that we're turning the \"Open Web\" into an ever-expanding attack surface.\n \nreply"
    ],
    "link": "https://krebsonsecurity.com/2025/06/inside-a-dark-adtech-empire-fed-by-fake-captchas/",
    "first_paragraph": "Late last year, security researchers made a startling discovery: Kremlin-backed disinformation campaigns were bypassing moderation on social media platforms by leveraging the same malicious advertising technology that powers a sprawling ecosystem of online hucksters and website hackers. A new report on the fallout from that investigation finds this dark ad tech industry is far more resilient and incestuous than previously known.Image: Infoblox.In November 2024, researchers at the security firm Qurium published an investigation into \u201cDoppelganger,\u201d a disinformation network that promotes pro-Russian narratives and infiltrates Europe\u2019s media landscape by pushing fake news through a network of cloned websites.Doppelganger campaigns use specialized links that bounce the visitor\u2019s browser through a long series of domains before the fake news content is served. Qurium found Doppelganger relies on a sophisticated \u201cdomain cloaking\u201d service, a technology that allows websites to present different"
  },
  {
    "title": "The Case for Software Craftsmanship in the Era of Vibes (zed.dev)",
    "points": 30,
    "submitter": "Bogdanp",
    "submit_time": "2025-06-12T23:42:00 1749771720",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=44264376",
    "comments": [
      "I like the article. In fact just yesterday I quipped to someone about how the quality of AI output will be determined by the competence of its \"operators\".I have always had a strong drive to produce awe-inspiring software. At every job I have had, I have strived for usability, aesthetics, performance and reliability. I have maintained million LoC codebases and never caused a major issue, while people around me kept creating more problems than they fixed. However I do not recall one single word of encouragement, let alone praise. I do recall being lectured for being fixated on perfectionism a few times.I took me 15 years to realize that consumers themselves do not care about quality. Until they do, the minority of engineers who strive for it are gonna waste their efforts.Yes software is complex. Yes, you cannot compare software engineering to mechanical, electrical engineering or architecture. But do we deserve the absolute shit show that every app, website and device has become?\n \nreply",
      "Exactly and that's why we're here - against all odds you do your best to make things right - that's THE job.\n \nreply",
      "I think the key question is what new or unique problems we need to solve. Unique problems demand unique designs and implementations, which can't be threatened by vibe coding, which requires software craftsmanship. That said, AI-assisted coding should still improve our productivity, therefore reducing the average number of engineers per project. Hopefully Jevon's Paradox will come into play, but that's really not a technical problem but a business problem.\n \nreply",
      "Honestly I feel AI has helped me be a better craftsman. \nI can think \"oh it would be kinda nice to add this little tidbit of functionality in this code\". Previously I'd have to spend loads of time googling around the question in various ways, wording it differently etc, reading examples or digging a lot for info. This would sometimes just not be worth adding that little feature or nice to have.Now, I can have Claude help me write some code, then ask it about various things I can add or modify it with or maybe try it differently. It gives me more time to spend figuring out the best thing for the user. More various ideas for how to tackle a problem.I don't let it code willy nilly. I'm fairly precise in what I ask it to do and that's only after I get it to explain how it would go about tackling a problem.\n \nreply",
      "+1 with greater power comes greater responsibility.Power doesn\u2019t mean lack of craft. Just different things to craft. Eg we don\u2019t hand-roll assembly anymore.Still have to know when you need to dive deep and how to approach that.\n \nreply"
    ],
    "link": "https://zed.dev/blog/software-craftsmanship-in-the-era-of-vibes",
    "first_paragraph": ""
  },
  {
    "title": "A receipt printer cured my procrastination (laurieherault.com)",
    "points": 770,
    "submitter": "laurieherault",
    "submit_time": "2025-06-12T11:41:04 1749728464",
    "num_comments": 433,
    "comments_url": "https://news.ycombinator.com/item?id=44256499",
    "comments": [
      "> Why can I focus for hours on a game but procrastinate when writing an email?OK I got a bit triggered by this sentence. Not at TFA, but sharing my own experience:  Games are fun. And I don't mean Type 1 vs Type 2 fun and the email is somehow type 2 fun. I mean that the stimulation / \"hit\" from a game is just higher than 90-99%% of work tasks (writing a new CLI or optimizer excluded!!). We pile on much stimulation to the work to get it to hit harder: Working by others (social/peer), snacks (biological rewards), free caffeine, money (sometimes lots), etc. And physical trinkets.We have studied this to death in other parts of our own biology, like food. Unhealthy food/drink is fun. It's a pleasurable reward sometimes, but if it forms the basis for your diet you are going to have a lot of trouble enjoying healthy stuff. You can't outrun a bad diet. You can't add a kale salad after a bowl of ice cream and expect your insulin levels to go down. You have to treat the underlying problem: A hugely stimulating / rewarding thing is displacing the healthy stuff. Almost every piece of sane health advice after 1900 has focused on removing unhealthy factors first.Work/hobby is no different. When I'm obsessed with factorio (it happened a lot once or twice), I find it harder to focus on work. When I \"fast\" from those \"treats\", work takes on new enjoy-ability. Dopamine diet is probably the wrong technical term, but it nails the practical effects well.I'm sure phones are just as stimulating for some. We all have our vices.\n \nreply",
      "> I'm sure phones are just as stimulating for some.This is one of my big objections do 2FA. My work has been pushing it hard, and from a security perspective, I get it. However, it\u2019s all via an Authenticator app on the phone. We can no longer set down our phones and simply work. To start working, and periodically throughout the day, we are now forced to pickup our phones to authenticate. This invites the chance to see other notifications, check and app quickly, or more generally, break flow as we have to switch to another device and back again.All of this seems like a suboptimal solution.\n \nreply",
      "I'm old enough to have lived through the era of standalone authenticators. The downsides of that approach are also numerous.I understand where you're coming from though, and I think this is where OS features like Focus Modes come into play.When I'm in a \"Work\" mode, I literally don't see notifications from most of my apps. They don't show up in the notification center, or on app icon badges, or anywhere.This takes a few minutes to set up, but once it's in place, it's fantastic. I also do this for other aspects of my life: Photography, Research, etc. When I'm in those modes, I don't want to see anything except for the apps that are specific to what I'm doing. It's worth the effort of setting this up IMO, and extends far beyond just work.\n \nreply",
      "You should try a CLI-based workflow for 2FA. As long as you can exfiltrate the secret (and you often can by pretending you can't scan QR codes), then you can use oathtool to generate passcodes.1. use 'pass' to save the secret: 'pass edit work.secret' <enter it and quit>2. use oathtool to generate 2fa given a secret:'\n#!/bin/bashoathtool -b --totp \"`pass show $1.secret`\" >&1\n'use it like '2fa work'If you have 'xsel' you can even do'oathtool -b --totp \"`pass show $1.secret`\" | xsel -ib'to copy it to clipboard automatically.\n \nreply",
      "Even if you only have the QR code, you can download the image or screenshot it and then extract the secret without ever having to use a smartphone by using zbarimg and then manually extracting the secret from the URI:    sudo apt-get install zbar-tools oathtool\n    zbarimg qr-2fa-code.png\n    \nOutput:    QR-Code:otpauth://totp/username?secret=ABCDEFSECRET012349BASE32&period=30&digits=6\n\nIf you have some 2FA that you need to enter 10 times per day, then you can also add a global shortcut to automatically paste it. Of course, this undermines the \"second device\" security. Some PC password managers also support 2FA, e.g. https://github.com/paolostivanin/OTPClient ( sudo apt install otpclient )\n \nreply",
      "I have this little one-liner mapped to a hotkey combo:`bash -c 'xfce4-screenshooter -r -o zbarimg | gxmessage -title \"Decoded Data\" -fn \"Consolas 12\" -wrap -geometry 640x480 -file -'`Works great if you have xfce4-screenshooter, gxmessage, and zbarimg installed.  It allows you to draw a box around a screen region, screenshots it, decodes it via zbarimg, and pipes the output into a dialog box with copyable text.\n \nreply",
      "Just to add, 'pass' has an otp extension to simplify this a bit [1]With that, you can do    $ zbarimg -q --raw qrcode.png | pass otp insert <some-name>\n    $ pass otp <some-name>  # or pipe to xsel\n\n[1] https://github.com/tadfisher/pass-otp\n \nreply",
      "Heh, I use pass like this; but it's on my (Pine)Phone, so it doesn't solve the parent's original problem ;-)Although the nice thing about CLI workflows is that I can easily run it by SSHing into my phone (just make sure you set up GPG so the passphrase prompt will appear in your terminal, and not as a popup on the phone!)\n \nreply",
      "We also have Microsoft authentication that displays a number on the browser and asks you to enter in on the device! :-(\n \nreply",
      "Unless they have explicitly disabled it even m365 has the option to add a totp 2fa method. Might be worth double checking.\n \nreply"
    ],
    "link": "https://www.laurieherault.com/articles/a-thermal-receipt-printer-cured-my-procrastination",
    "first_paragraph": "I started my business when I was 21 (I'm now 39). I built custom apps and did consulting for accounting software, invoicing systems, and point-of-sale tools.Procrastination has always been my biggest struggle. The only way I could get things done was by relying on stress, coming from clients or financial pressure. That worked for a while, but it cost me my health (I burned out) and my business (I went bankrupt).I noticed that I have no problem spending hours fully focused on a video game. If I can focus on a game, then my brain must also be capable of focusing on other tasks. So I naturally started asking myself why it's so easy to get hooked by a game, and how I could apply that same effect to tasks I struggle to complete.It turns out that many of the struggles I've had throughout my life are linked to ADHD (Attention Deficit Disorder). The goal of this article isn't to focus on ADHD, but it's important to mention. ADHD affects many people, often without them even knowing it, in vario"
  },
  {
    "title": "iPhone 11 emulation done in QEMU (github.com/chefkissinc)",
    "points": 214,
    "submitter": "71bw",
    "submit_time": "2025-06-12T15:04:59 1749740699",
    "num_comments": 17,
    "comments_url": "https://news.ycombinator.com/item?id=44258670",
    "comments": [
      "Discussion on upstream repo (356 points, 2022, 144 comments) https://news.ycombinator.com/item?id=30545425Related (mentions this repo): Emulating an iPhone in QEMU (268 points, 2 months ago, 64 comments) https://news.ycombinator.com/item?id=43592409\n \nreply",
      "Looking at the issue tracker it sounds like they've made significant progress since then.\n \nreply",
      "Progress update, https://eshard.com/posts/emulating-ios-14-with-qemu-part2  iOS emulated in QEMU with:\n\n  \u2022 Restore / Boot\n  \u2022 Software rendering\n  \u2022 Kernel and userspace debugging\n  \u2022 Pairing with the host\n  \u2022 Serial / SSH access\n  \u2022 Multitouch\n  \u2022 Network\n  \u2022 Install and run any arbitrary IPA\n\nIn other news, Cellebrite acquired Corellium iOS/Android virtualization for $170M, https://news.ycombinator.com/item?id=44221982\n \nreply",
      "The eShard thing and this GitHub are fairly different, as far as I know.The eShard people found an earlier version of this repository and set about patching one billion parts of the iOS kernel, library cache, and userland to make it run on the limited emulator.Meanwhile, the actual emulator has been advancing, arguably more quickly than the eShard patch set.The current set of patches needed for the latest commits on this repo to run iOS are less than 10 instructions, all to enable the software-rendering/framebuffer fallback code path instead of trying to use display drivers.https://github.com/ChefKissInc/QEMUAppleSilicon/wiki/Filesys...\n \nreply",
      "Presumably to build a exploit test framework.\n \nreply",
      "This is the ultimate emulation hack bar none - congrats to everyone involved. This also bodes well for the hackintosh project. It's may no longer be a dead end (though miles away), and eventually we might even see efficient emulation as ARM PCs become generally available.\n \nreply",
      "Woah this sounds like it boots all the way to Springboard at least! That's pretty huge!\n \nreply",
      "Does it support trollstore with ability to decrypt IPAs?\n \nreply",
      "For the ignorant: what does this mean?\n \nreply",
      "Just to expand a bit on the sibling comment, IPAs downloaded from the App Store are encrypted with a DRM scheme with a key tied to the Apple account. The binaries actually stay encrypted on-disk and the OS has facilities to transparently decrypt them when executed. The usual way of decrypting is to actually execute the app, attach a debugger (normally not possible for production apps) and read the decrypted code from memory.\n \nreply"
    ],
    "link": "https://github.com/ChefKissInc/QEMUAppleSilicon",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n        Apple Silicon devices emulated on QEMU, currently only iPhone 11.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.QEMU is a generic and open source machine & userspace emulator and\nvirtualizer.QEMU is capable of emulating a complete machine in software without any\nneed for hardware virtualization support. By using dynamic translation,\nit achieves very good performance. QEMU can also integrate with the Xen\nand KVM hypervisors to provide emulated hardware while allowing the\nhypervisor to manage the CPU. With hypervisor support, QEMU can achieve\nnear native performance for CPUs. When QEMU emulates CPUs directly it is\ncapable of running operating"
  },
  {
    "title": "Being Full of Value\u2011Added Shit (feld.com)",
    "points": 65,
    "submitter": "rmason",
    "submit_time": "2025-06-12T20:03:42 1749758622",
    "num_comments": 39,
    "comments_url": "https://news.ycombinator.com/item?id=44262528",
    "comments": [
      "This reminds me of the observation that you shouldn't buy a car from a dealer who calls himself Honest Ed.Because honest people just go around being honest, they don't go around broadcasting honesty.\n \nreply",
      "That reminds me of the Guarantee scene from the movie Tommy Boy:https://www.youtube.com/watch?v=mEB7WbTTlu4To briefly summarize (and sanitize), just because someone puts a guarantee on the box doesn't mean they'll stand by it. The guarantee on the box makes you feel warm and toasty, and that's what you bought -- the warm feelings. But if you have a quality product, you don't need to advertise the guarantee... the product is good enough on it's own.(or something like that...)\n \nreply",
      "Honest Achmed, on the other hand\u2014I hear he issues only the most legitimate of certificates from his Used Cars and Certificates Emporium!https://bugzilla.mozilla.org/show_bug.cgi?id=647959\n \nreply",
      "Yeah discussing any kind of morality like honesty seems pretty much irrelevant in real life considering a much lower bar\u2026 avoiding writing provable factual lies on the record\u2026 is often not even satisfied by large swathes on the population.In comparison even a deceiver and intriguer that says a dozen half truths an hour, without any outright factual lies, seems like a paragon of virtue.\n \nreply",
      "Or how countries with \"democratic\" in the name invariably are not.\n \nreply",
      "And few countries are as split into two warring camps as the United States of America.\n \nreply",
      "Where\u2019s the war? I must not be in a conflict zone\n \nreply",
      "I think that's true of most marketing. The bigger the lie the more shouting has to be done. Peter Thiel mentions that monopoly companies often have the most 'sales' in order to seem competitive. And conversely small competitive companies want to seem large and stable. A bag of lettuce won't have 'healthy' all over the packaging because that's self evident but a bottle or can sugary drink will have all sorts of claims about vitamins there is even a brand called Vitamin Water.Honey Nut Cheerios Heart Healthy Breakfast Cereal.\nVitamin Water.\nGreen Hydrogen.\nClean Diesel.\nPatriot Act.\n \nreply",
      "Sounds like people that claim to be religious or mention they are Christian to gain trust, I lived in the Bible Belt and saw that a lot\n \nreply",
      "In general, one's own words are the cheapest, and thus least reliable, form of signaling. If you call yourself \"Honest Ed\", it's pretty suspicious; if others unironically give you a moniker \"Honest Ed\", it's high praise.Understatement is something only the renowned can afford; those who suck (or swindle) have to resort to overstatement and seek gullible audience.\n \nreply"
    ],
    "link": "https://feld.com/archives/2025/06/being-full-of-value%e2%80%91added-shit/",
    "first_paragraph": "My morning started early with a 6:30 a.m. drive to Denver to give a talk about\u00a0Give First: The Power of Mentorship, which Erik Mitisek had organized for a group of Denver-area founders.In it, one of Erik\u2019s questions caused me to go off on a riff about authenticity, which led me to one of the Techstars Mentor Manifesto items titled Be Authentic\u2014Practice: What You Preach and a section in the book titled Nonsense Phrases Such as \u201cI\u2019m Value Added\u201d. I gave the example in the section Being Full of Value\u2011Added Shit and explained that when I hear someone say \u201cI\u2019m an (adjective) (noun)\u201d I insert (in my brain) the word \u201cnot\u201d after the word \u201cI\u2019m.\u201d From the book:I\u2019m amused when someone says, \u201cI\u2019m authentic,\u201d \u201cI\u2019m transparent,\u201d \u201cI\u2019m founder-friendly,\u201d or \u201cI\u2019m a value-added investor.\u201d Whenever I hear something like that, I automatically insert the word \u201cnot\u201d between \u201cI\u2019m\u201d and the rest of the phrase.I\u2019m suspicious whenever someone says, \u201cI\u2019m an (adjective) (noun).\u201d Why did you need to say, \u201cI\u2019m a gre"
  },
  {
    "title": "Show HN: Tritium \u2013 The Legal IDE in Rust (tritium.legal)",
    "points": 130,
    "submitter": "piker",
    "submit_time": "2025-06-12T12:06:59 1749730019",
    "num_comments": 66,
    "comments_url": "https://news.ycombinator.com/item?id=44256765",
    "comments": [
      "It looks like code editor with symbol references. Is that all the functionality? \nI expected document to be tied to some law (or part of) and use outline of that law as outline for document, and then populating document to cover all the aspects of selected law, with AI, and indicating which generated parts were reviewed by human.\n \nreply",
      "Feedback: the UI feels like a direct reference to VSCode, which is familiar to software developers, but not to lawyers. If you're hoping this will be adopted by lawyers, I would focus on making the UX familiar to them. Look at software that they already use, and mimic those idioms insomuch as it makes sense to do so. I would also have the base web domain link to a normal home/info page, not to the demo directly. And maybe prefill the demo with some actual content (documents/etc) so people can really see what it does and howGood luck!\n \nreply",
      "Great feedback; and I do agree. The HN link goes to the app itself because we're impatient, but there is an actual landing page most visitors hit.I've gone back and forth on the UX idea, and while I do agree, it's important that Tritium selects for users that are going to be able to quickly adopt the newer concepts. Just simply presenting a \"better Word\" isn't really going to move the needle. It's really a shift in expectations. That said, I have recently backed off defaulting to dark mode to make it feel slightly more familiar.\n \nreply",
      "I think software people tend to underestimate the value of superficial familiarity. By all means, adhere to your new concepts and mental model. But even things like coloring, placement of the menu bar, the icons that you use, the organization of the UI, etc can go a really long wayThink about programming languages- ones that introduce radical new concepts may still employ familiar syntax/naming to smooth the transition for newcomers. Rust mimicked C++, TypeScript extended JS, etc. These languages were made to introduce powerful new ways of thinking about code, but by appearing as similar as possible to what devs already knew, they freed up more brain cycles for people trying to adopt them. They didn't muddy their concept-space for the sake of familiarity, but they didn't introduce any more unfamiliarity than they actually needed to for the benefits they wanted to give\n \nreply",
      "> Rust mimicked C++if anything, it didn't mimick /enough/\n \nreply",
      "No attorney who is flummoxed by this UX is going to touch an AI product in any meaningful way. Making legal tools for lawyers who would otherwise be using cuneiform tablets or the dictation pool is a waste of conversation. Looking similar to the tools a seventy five year old lawyer uses is like making an F1 car that would look familiar to Jackie Stewart: yeah, it\u2019d probably help him adapt, but not enough to be competitive with an actual car.Dig the idea of this product, will give it a whirl tonight.Source: attorney, former dev\n \nreply",
      "It's not about being flummoxed, it's about being annoyed enough not to give it a chanceHow much less adoption would Rust have gotten if it looked like OCaml instead of C++?Its adopters are not stupid, they could have figured out alien syntax if they were already convinced of the benefit. But selling someone on an entirely new substrate for their professional work is a huge ask. You need to make it as immediately-palatable as possible, or they'll just keep on sailing without giving it a chance.\n \nreply",
      "I really like the idea. I could see some of my academic collaborators use something like this because it has features typically only supported when working with plaintext. A lot of academics do not love working with LaTeX.But I would push back a bit against the UX and it being a \"better Word\". It is not immediately clear from looking at the website whether you support tracking changes. If you support editing Word documents, why aren't basic editing features, like font selection, size and weight, exposed in the UI. (I am viewing it on mobile Chrome and I might have missed it because your page doesn't support pinch to Zoom.)You don't have to make it look like Word but it must be designed to facilitate common interaction patterns needed for working with Word documents.(If you are building it on top of VSCode you could use its multiplayer features, which could be a good sell. )\n \nreply",
      "I\u2019ve been dreaming of a better contract writing tool for a while now.I\u2019m not a lawyer but I draft insurance contracts and work with reviewing lawyers closely. As a former software developer I miss version control, partial includes, conditional logic, etc. I am shocked at how poorly supported the business world is by the ubiquity of MS Word.I\u2019ve been experimenting with Typst now for some time and it has a lot of what I want in creating and versioning documents but I believe may be too technical to become integrated with existing workflows and the non-technical users engaged in the development process. Basically my experience is normal users tune out once you get outside of even basic MS Word.I really want a great tool to exist but I\u2019m afraid I\u2019m an outlier and unique in my technical ability in this space. Nice to see others interested in such a tool.\n \nreply",
      "Couldn't enter Japanese into the web version. Looks like it trying to read keys directly. Copy and paste don't work. Right clicking doesn't bring up a context menu with system options so no looking up words using the locally installed dictionary. No OS level spell checking that uses the user's dictionary.I guess all of that is TBD though I suspect based on the tech choices will be way harder than it sounds.\n \nreply"
    ],
    "link": "https://tritium.legal/preview",
    "first_paragraph": "\n            Loading\u2026(Hint: Load an example contract via File > Open Example)\n        "
  },
  {
    "title": "The curse of Touma\u00ef: an ancient skull and a bitter feud over humanity's origins (theguardian.com)",
    "points": 28,
    "submitter": "benbreen",
    "submit_time": "2025-06-12T21:50:08 1749765008",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=44263562",
    "comments": [
      "This image of the femur, can anyone shed light on why there are notches carved on the side?https://i.guim.co.uk/img/media/b6b6509049556deef91d0459df864...Also, regarding \"There is no technology, extant or imaginable, that could extract that marvellous secret from her bones\",I put those under the \"famous last words\" category.We cannot predict today what we may discover about bones in the future. There could be something akin to DNA fingerprinting that lets people discover ancestry. Just because we've not discovered it yet, doesn't mean we will never discover it. Not saying we will, but I prefer to keep an open mind about science and human creativity.\n \nreply",
      "> \"There is no technology, extant or imaginable, that could extract that marvellous secret from her bones\"It's because the inference depends on having data from a very large sample of other finds.  It wouldn't matter if there were a single Eve and we found her entire skeleton and extracted the DNA perfectly.  We couldn't prove it was Eve without all the other samples, and it's beyond unlikely they'll just show up.I'm disgusted by the convention that findings are controlled by self-interested glory-seeking finders.  These belong to the entirety of humanity and should be treated as such, with utmost care and complete openness and humility.  We shouldn't tolerate grave robbers any more than bank robbers. Like banks, archeaologists are fiduciaries of the highest order, and should be selected and managed as such, not like salespeople on commission.  If you want to seek abandoned treasure, go elsewhere.\n \nreply",
      "\u201cIt belongs in a museum!\u201d\n-Indy\n \nreply",
      "When humanity (including all the homo species) gained intelligence over 2-300000 years ago, I'm genuinely surprised that they were able to live so long together!Although 'species' is term is bit extreme, which is why they reproduced with each other a lot!I also wonder what kind of history they might have! It's interesting to think about. \nMost of the history that we have is already opinionated....\n \nreply",
      "Do you mean why didn\u2019t they fight?  Probably they did.  Chimpanzee tribes are highly aggressive, early hominid tribes probably were as well.  Human level intelligence didn\u2019t suddenly evolve, it was a gradual transition.\n \nreply",
      "I love the passion and bitchiness of the researchers.\n \nreply",
      "As a story arc for a forthcoming film? Sure. But I'm reminded of the comp sci aphorism: physics advanced by standing on the shoulders of giants.. CS by standing on each other's toes.\n \nreply",
      "[flagged]",
      "Probably not. What I think you mean here is something called the \"multiregional human origin\" hypothesis, which isn't  well supported. The current model is that the vast majority of human ancestry, including what makes us identifiably human, originated in Africa. When anatomically modern humans left Africa, they incorporated and replaced archaic humans in other parts of the world. Those archaic ancestors are largely invisible in modern populations and only become visible with genetic tools.If you actually mean within Africa, we currently don't have a great model for archaic human population structure. However, I've never read a reputable paper drawing a line between archaic population structure and differences in modern populations. I suspect none exist.\n \nreply",
      "[flagged]"
    ],
    "link": "https://www.theguardian.com/science/2025/may/27/the-curse-of-toumai-ancient-skull-disputed-femur-feud-humanity-origins",
    "first_paragraph": "When fossilised remains were discovered in the Djurab desert in 2001, they were hailed as radically rewriting the history of our species. But not everyone was convinced \u2013 and the bitter argument that followed has consumed the lives of scholars ever sinceOn a late-summer day in 2001, at the University of Poitiers in west-central France, the palaeontologist Michel Brunet summoned his colleagues into a classroom to examine an unusual skull. Brunet had just returned from Chad, and brought with him an extremely ancient cranium. It had been distorted by the aeons spent beneath what is now the Djurab desert; a crust of black mineral deposits left it looking charred and slightly malevolent. It sat on a table. \u201cWhat is this thing?\u201d Brunet wondered aloud. He was behaving a bit theatrically, the professor Roberto Macchiarelli recalled not long ago. Brunet was a devoted teacher and scientist, then 61, but his competitive impulses were also known to be immoderate, and he seemed to take a ruthless p"
  },
  {
    "title": "Show HN: Tool-Assisted Speedrunning the Boring Parts of Animal Crossing (GCN) (github.com/hunterirving)",
    "points": 52,
    "submitter": "hunterirving",
    "submit_time": "2025-06-12T13:37:06 1749735426",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=44257655",
    "comments": [
      "I\u2019ve never played the original Animal Crossing, but this is neat! You\u2019re basically hacking quality-of-life improvements into an old game running on original hardware.\n \nreply",
      "Thanks! Yeah, I was surprised how much utility I could get out of it without directly modifying the game or console themselves. The first Animal Crossing has this great, simple charm. I would definitely recommend it!\n \nreply",
      "This is so cool and impressive. I loved the original Animal Crossing but also feel like the clunky keyboard input hasn't aged well. Thanks for sharing!\n \nreply",
      "In a way, I'm glad the OSK was so tedious, since it drove me to create this whole crazy project. Thanks for checking it out!\n \nreply"
    ],
    "link": "https://github.com/hunterirving/pico-crossing",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        hack Animal X-ing with a Pi Pico and a GameCube Keyboard Controller\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.What if the GameCube Keyboard Controller worked with Animal Crossing...?It started out as a \"quick, simple project\", then quickly turned into seven quick simple projects.Typing in Animal Crossing (GCN) is painfully slow.Or, at least.. it was. Not anymore.Pro Gamer WPM (unassisted): TBD\nTool-assisted WPM: Also TBDCompose digital diary entries in style with this set of 81 custom, 3D printed keycaps that map perfectly to Animal Crossing's in-game character set.See the separate pico-crossing-keycaps repository for FreeCAD project files and OBJ exports.Cycle through your favorite Town Tunes without having to futz about with e-Reader cards.Type the n"
  },
  {
    "title": "Worldwide power grid with glass insulated HVDC cables (omattos.com)",
    "points": 26,
    "submitter": "londons_explore",
    "submit_time": "2025-06-12T20:04:09 1749758649",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=44262537",
    "comments": [
      "I swoop in on something like this looking for the first obvious error in units/arithmetic/materials that renders the whole thing ludicrous, but the author has a spreadsheet and it looks like the units are about right. It's an absurdly cheap cable in terms of materials to transmit 10 GW across an ocean. The main things that render it dubious as a practical matter:- I don't know if operating at 14 million volts is achievable in terms of converter stations. Today's highest voltage HVDC projects operate at 1.1 megavolts and it took years of development to get there from 0.6 megavolts.- The mechanical practicality of thousands of kilometers of silica clad aluminum. There's a big mismatch in coefficients of thermal expansion and silica is brittle.Still, this appears to be facially valid in scientific terms if not in engineering terms. That's impressive! It's a really thin intercontinental cable carrying a lot of power.The whole thing reminded me of this discussion here from 3 years ago:https://news.ycombinator.com/item?id=31971039It has rough numbers for a globe-spanning HVDC cable on the order of a meter in diameter (assumes voltages more like present day commercial HVDC, much thicker conductor to compensate).\n \nreply",
      "I don't buy it1. The technical solution relies heavily on fantasy.2. It is not needed. We have no significant power transmission across the low lying fruit of continental America or Eurasia, and those lines are built!  Why bother crossing an ocean?3. Why not cross Greenland and the North Sea and its islands? Under sea cables are expensive.4. Why not cross the Bearing Strait?\n \nreply",
      "> glass isn\u2019t known for its ability to bendNot quite true.  Glass optical fibre is reasonably flexible. More so than many coaxial cables.  Just don't go below its minimum bend radius, as it is brittle and will snap.Glass insulated power cables might work, provided the glass layer is thin enough and its band radius isn't exceeded.  One can imagine a cable insulated with many thin layers/strips of glass, which have some movement relative to each other.  Multiple layers of insulation is normal practise with plastic insulation, as the failure mode is typically pinholes in the insulation and multiple layers reduced the probability of pin holes going all the way through.Biggest problem might be a conductor with decent diameter will put a lot of stress on the interior and exterior of a bend.  Some ides:* A multi-standed conductor with each individual conductor insulated.  Maybe have high voltage in the interior stands and have a radial voltage gradient (to zero) across the outer strands so no one thin layer of glass is taking the full electric field?* Could a conductor be insulated with a woven/stranded insulating layer?  One can imagine many layers of extremely fine glass fibre finished off with an enclosing layer of something else to keep everything in place.  Sort of like a glass insulated coaxial cable.\n \nreply",
      "It's an interesting take to be sure. I suspect that the lack of flexibility is going to be the real killer.You'd probably have to build offshore platforms on either side to bring the cables up and terminate them and now that's a nightmare, saltwater/salty air and electronics don't mix well.Or you're going to have to trench very deeply for the first few miles.Either way you're stuck with something that really doesn't want to be bent.I think the \"glass is great insulation\" is a good insight and perhaps a composite glass fiber/polymer sheath would really increase the V/m without the brittleness.\n \nreply",
      "a material that stretches 1% to failure (like steel/aluminum) can ballpark bend to a radius  100 times the thickness. so  a 1 meter cable could bend 100m radius before cracking. assuming 10x margin that would be 1 km radius. large but not crazy. A tube that size can easily span 1 km trenches in water. you could also add a few meters of foam around it to make it neutrally buoyant and just barely press on the ocean floor.\n \nreply",
      "> interesting takeI think that's being generous.\n \nreply",
      "> The cable, if snagged by a ship anchor, would catastrophically fail. Not only would it snap, but the internal stresses would propagate the crack along the entire length.I can\u2019t this writeup seriously with comments like this.  There is no mention of any attempt to calculate the allowable bend radius. Also, quenching a glass tube in a continuous process?  Does that work?\n \nreply",
      "imo, least believable part for me is the \"a custom ship with a glass factory onboard\" partas I understand it, nobody is doing cable laying this way - and this dream of 14MV cable is kinda hinges on that\n \nreply",
      "Continuous melted silica coating is fine, but how does one account for all the movement, bends and vagaries of the high seas, especially for something that is so brittle?\n \nreply",
      "> Fused silica (glass) is a really good insulator (500 MV/m, vs 150 MV/mm for XLPE plastic)500 MV/m is 0.5 MV/mm, so it's  300x worse insulator than XLPE plastic per article.Would be a bummer if we build the worldwide insulated network, only to find out it's not insulated enough \u30c4)_/\u00af\n \nreply"
    ],
    "link": "https://omattos.com/2025/06/12/glass-hvdc-cables.html",
    "first_paragraph": "Moving electricity around the world has huge financial and environmental benefits.   Unfortunately, current power transmission systems are both lossy and expensive to build.   This post explores an alternative design for cables to make undersea power transmission substantially cheaper.Fused silica (glass) is a really good insulator (500 MV/m, vs 150 MV/mm for XLPE plastic), and is very cheap.   By using it as cable insulation, cables can be made substantially thinner and cheaper.Unfortunately, glass isn\u2019t known for its ability to bend, which introduces logistical challenges.    I propose these be solved by manufacturing the cable onboard a boat in a continuous process and directly laying it.The cable would consist of an aluminium conductor surrounded by a silica insulator.   There would be no outer protection - instead, the silica would be surface hardened, rather like a prince ruperts drop.     The extreme internal tensions should be sufficient to allow the cable to be laid on the oce"
  },
  {
    "title": "Maximizing Battery Storage Profits via High-Frequency Intraday Trading (arxiv.org)",
    "points": 208,
    "submitter": "doener",
    "submit_time": "2025-06-12T09:43:47 1749721427",
    "num_comments": 202,
    "comments_url": "https://news.ycombinator.com/item?id=44255728",
    "comments": [
      "> However, because it is physically not possible to charge and discharge the battery at the same time, such trades have to be prevented.The authors are observing that, if electricity prices are negative and your battery is not perfectly efficient, then you would like to charge and discharge simultaneously to get paid for wasting energy, but you can\u2019t.This is a silly limitation.  Surely the power electronics or even just the control algorithms in a BESS could be slightly modified to consume power, get warm, and not transfer any current to or from the battery cells, effectively taking advantage of the BESS\u2019s heat sink to sink excess power and sell that service.More seriously, in a world with occasional negative prices, you would want your battery to be able discharge itself, without exporting power, in a controlled and power-limited manner so as to avoid overheating.  And the optimization algorithms should factor this in. I wonder if real grid-scale BESS systems have this capability.\n \nreply",
      "Not sure if it's discussed in the paper but apparently in Australia there have already been recorded instances of batteries charging with negative price electricity and then selling back that electricity at a still negative but closer to zero price and so profiting.When I first heard it, it seemed wild that they couldn't hold on for the price to go back above zero, but I guess if we're talking high frequency trading it makes more sense. They might have bought and sold many times while the price is different levels of negative before switching to charging up in preparation for the later price rises.And the round trip inefficiency helps too.\n \nreply",
      "That's not as ridiculous as it sounds!As you know, negative electricity prices mean that someone is willing to pay you to dispose of electricity they need to generate for some reason. For example, a conventional steam-turbine-based electricity plant might prefer to just keep running for a brief period of time when demand is low, rather than subject their equipment to a power cycle, which increases their maintenance costs. There's other, dumber, examples based on stupid contracts and badly designed solar... but this example is a reasonable one that exists for good engineering reasons.The battery provider in this circumstance is profiting from their ability to accept power when demand to dispose of electricity is particularly high. When that need goes down, they can reasonably profit by dumping that energy on someone else who is also able to dispose of the electricity. But at a lower cost. E.g. imagine an big industrial refrigerated storage facility that can consume some excess energy by supercooling their refrigerators. But they can't consume unlimited excess energy, because at some point their warehouse just gets too cold, and they don't have unlimited refrigeration capacity anyway.So in this simplified example, the battery storage service is getting paid a lot of money to quickly absorb a lot of energy, which they then dump more slowly to the refrigerated warehouse (and similar providers) as the surplus diminishes, in anticipation of another surplus in the near future.\n \nreply",
      "If it was so profitable, why wouldn't the electricity utility do it themselves? Certainly, they have the scale, infrastructure, and pricing power to do it.Oh, that's right. This is supposed to be wealth transfer.\n \nreply",
      "What do you mean by electricity utility? Which organisation specifically? The electrical supply is usually formed of multiple organisations with different responsibilities, which usually works pretty well, but it generally means that e.g. storage, transmission, and generation are not one single organisation.\n \nreply",
      "Yes, including because firms at one level of the supply chain (eg, transmission) are in many countries precluded from operating in another level (eg, generation).\n \nreply",
      "Even if the arbitrage exists, it does not mean you are equipped to profit from it. Furthermore, the rapid installation of battery capacity means that the profit margin for this activity is likely to dwindle as more entrants try and do the same thing.\n \nreply",
      "I\u2019m just guessing but it probably isn\u2019t so profitable. More like a \u201cyou already have the batteries, so why not?\u201d type thing.\n \nreply",
      "Your electric utility could be doing this if they were more forward thinking and installed grid scale batteries, but that's not their business model so they don't do it.\n \nreply",
      "Someone at the generation facility ran the numbers and found that the grid was able to dispose of excess energy for peanuts but installing and maintaining a dedicated electronic load cost more than peanuts.I'd recommend digging elsewhere for conspiracy bait. This is a mild curiosity at best.\n \nreply"
    ],
    "link": "https://arxiv.org/abs/2504.06932",
    "first_paragraph": "Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "Show HN: McWig \u2013 A modal, Vim-like text editor written in Go (github.com/firstrow)",
    "points": 58,
    "submitter": "andrew_bbb",
    "submit_time": "2025-06-12T13:32:56 1749735176",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=44257609",
    "comments": [
      "I love bugs being a feature lol.Awesome project man. I'll have to spend some time exploring the code base when I have time.\n \nreply",
      "That's a lot of code for a toy project, impressive commitment!How does the VIM family generally handle extensibility?Do you have any unique takes there?I use Emacs, and I get  how emacs does it (smallish runtime for text display and lisp interpreter, everything else in lisp).\n \nreply",
      "Like the color schemes! I myself am working on an app called https://vimgolf.ai to make it easier to learn how to use vim. Might copy what you did with copying the color schemes from the helix code editor.\n \nreply",
      "So interesting that you use diffs for undo/redo!  Ingenious!\n \nreply",
      "Looks lovely. Where does it deviate from vim? Evidently it is modal. What features make it more effective than vim is?\n \nreply",
      "This is incredible! It looks beautiful, with a perfect type of minimalism, and supports modern features out of the box. Very good job! If I used terminal editors anymore, I would certainly use this!\n \nreply",
      "I appreciate your feedback!\n \nreply",
      "No problem. Glad it made it to the front page quickly like I said it would. Now I don't look so dumb :D\n \nreply"
    ],
    "link": "https://github.com/firstrow/mcwig",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Hi! Welcome to my text editor page.\nMcWig is a modal, Vim-like text editor written in Go. I use it as my daily driver, btw.Note: McWig currently supports only .go files. Do not edit files that are not backed up. McWig is still in an early stage of development and may damage your files.This project was written as a \"speed run\" \u2014 not for speed in terms of time, but rather as an exercise to explore the text editor problem space without overthinking or planning ahead. It\u2019s a quick and \"dirty\" implementation, so to speak.Most common Vim keybindings are implemented, providing minimal but enough (for me) support for daily source code editing. See config/config.go for all implemented keybindings.To get started:I plan to turn this \"to"
  },
  {
    "title": "Rust compiler performance (kobzol.github.io)",
    "points": 159,
    "submitter": "mellosouls",
    "submit_time": "2025-06-10T08:24:44 1749543884",
    "num_comments": 126,
    "comments_url": "https://news.ycombinator.com/item?id=44234080",
    "comments": [
      "A true champion> when I started contributing to Rust back in 2021, my primary interest was compiler performance. So I started doing some optimization work. Then I noticed that the compiler benchmark suite could use some maintenance, so I started working on that. Then I noticed that we don\u2019t compile the compiler itself with as many optimizations as we could, so I started working on adding support for LTO/PGO/BOLT, which further led to improving our CI infrastructure. Then I noticed that we wait quite a long time for our CI workflows, and started optimizing them. Then I started running the Rust Annual Survey, then our GSoC program, then improving our bots, then\u2026\n \nreply",
      "I'm worried this person is going to experience a Yak overflow, honestly.\n \nreply",
      "Coincidentally, I discovered this glorious page literally five minutes ago:https://github.com/SerenityOS/yaksplained?tab=readme-ov-file...\n \nreply",
      "Talk about proper `continuous improvement`\n \nreply",
      "> Speaking of DoD, an additional thing to consider is the maintainability of the compiler codebase. Imagine that we swung our magic wand again, and rewrote everything over the night using DoD, SIMD vectorization, hand-rolled assembly, etc. It would (possibly) be way faster, yay! However, we do not only care about immediate performance, but also about our ability to make long-term improvements to it.This is an unfortunate hyperbole from the author. There's a lot of distance between DoD and \"hand-rolled assembly\" and thinking that it's fair to put them in the same bucket to justify the argument of maintainability is just going to hurt the Rust project's ability to make a better compiler for its users.You know what helps a lot making software maintainable? A Faster development loop. Zig has invested years into this and both users and the core team itself have started enjoying the fruits of that labor.https://ziglang.org/devlog/2025/#2025-06-08Of course everybody is free to choose their own priorities, but I find the reasoning flawed and I think that it would ultimately be in the Rust project's best interest to prioritize compiler performance more.\n \nreply",
      "I was working on a zig project recently that uses some complex comptime type construction. I had bumped to the latest dev version from 0.13, and I couldn't believe how much improvement there has been in this area. I am very appreciative of really fast iteration cycles.\n \nreply",
      "\"Hand-rolled assembly\" was one item in a list that also included DoD. You're reading way more into that sentence than they wrote- the claim is that DoD itself also impacts the maintainability of the codebase.\n \nreply",
      "Yeah but it's Zig. Rust is for when you want to write C but have it be easier. Zig is when you want it to be harder than C, but with more control over execution and allocation as a trade off.\n \nreply",
      "For anyone who wants to form their own opinion about whether this style of programming is easier or harder than it would be in other languages:https://github.com/ziglang/zig/blob/0.14.1/lib/std/zig/token...\n \nreply",
      "The tokenizer is not really a good demonstration of the differences between these styles. A more representative comparison would be the later stages that build, traverse, and manipulate tree and graph data structures.\n \nreply"
    ],
    "link": "https://kobzol.github.io/rust/rustc/2025/06/09/why-doesnt-rust-care-more-about-compiler-performance.html",
    "first_paragraph": "\n        Jun 9, 2025\n      |Reddit discussionPerhaps the most often repeated complaint about Rust is its slow feedback loop and long compilation times. I hear about it all the time; in Rust podcasts, blog posts, surveys, conference talks or offline discussions. I also regularly complain about it, being a Rust user myself!Recently, in addition to the usual compile times complaints, I also started noticing the following sentiments being expressed by frustrated Rust developers: \u201cWhy doesn\u2019t the Rust Project care more about this pressing and known issue? Why don\u2019t they do something about it?\u201d. As a member of the Rust compiler performance working group, I take these questions very seriously, and I of course have some opinions on the topic. In this blog post, I would like to offer some thoughts that might serve as answers to these (and other similar) questions.Disclaimer: all opinions expressed in this post are mine only and do not necessarily represent the broader views of the Rust Project "
  },
  {
    "title": "Solving LinkedIn Queens with SMT (buttondown.com/hillelwayne)",
    "points": 85,
    "submitter": "azhenley",
    "submit_time": "2025-06-12T16:18:01 1749745081",
    "num_comments": 31,
    "comments_url": "https://news.ycombinator.com/item?id=44259476",
    "comments": [
      "Formal Methods in general are underrated in the industry. Pretty much no large companies except AWS (thank you Byron Cook!) use them at a large scale.Edit: maybe there are large companies that use them behind the curtains, but AWS is the only place I know of where they publicly acknowledge how much they appreciate and use formal methods. If you know any of them, please comment and I'd be curious to learn about how they're using it!\n \nreply",
      "Microsoft, Amazon, Oracle, Google, all sorts of large companies use them, and talk about it, publicly.  They've all published whitepapers and resources about them.  Microsoft even employs Dr. Leslie Lamport who created and maintains TLA+ (among other things).Just for some quick examples:Microsoft: https://github.com/Azure/azure-cosmos-tla, https://www.youtube.com/watch?v=kYX6UrY_ooAGoogle: https://research.google/pubs/specifying-bgp-using-tla/, https://www.researchgate.net/publication/267120559_Formal_Mo...Oracle: https://blogs.oracle.com/cloud-infrastructure/post/sleeping-...  (note the author is a \"Formal Verification Engineer\", it's literally his job at Oracle to do this stuff)Intel: https://dl.acm.org/doi/10.1145/1391469.1391675, https://link.springer.com/chapter/10.1007/978-3-540-69850-0_...Jetbrains: https://lp.jetbrains.com/research/hott-and-dependent-types/Arm: https://ieeexplore.ieee.org/document/9974354\n \nreply",
      "Lamport+Microsoft  was the first thing that I thought of when I read the comment. FWIW he retired at the beginning of this year.\n \nreply",
      "I don't think they are underrated. They are heavily used where they work really well and bugs have a very high cost (e.g. hardware design).For the vast majority of software though they don't really make much sense because formally verifying the software is 10-100x more work than writing it and testing it with normal methods. And formal verification of software generally requires faaaaar more expertise than most people have. (The situation is much better for hardware design because it tends to be way simpler.)It's a very powerful tool but also extremely difficult to use.\n \nreply",
      "> Formal Methods in general are underrated in the industry. Pretty much no large companies except AWS (thank you Byron Cook!) use them at a large scale.At least Microsoft and Google poured a lot of money into this by funding well-staffed multi-year research projects. There's plenty of public trail in terms of research papers. It's just that not a whole lot came out of it otherwise.The problem isn't that the methods are underrated, it's that they aren't compatible with the approach to software engineering in these places (huge monolithic codebases, a variety of evolving languages and frameworks, no rigid constraints on design principles).\n \nreply",
      "> Pretty much no large companies except AWS (thank you Byron Cook!) use them at a large scale.I don't think that's true at all. I suppose that depends on what you mean by formal methods and in what context you're concerned about those. Off the top of my head this comes to mind from Microsoft: https://learn.microsoft.com/en-us/windows-hardware/drivers/d...\n \nreply",
      "Haha, Marijn Heule who is pushing a lot of limits of SAT solving would love this. If you manage to get him excited, he might spend a few years on this problem :) He's kinda famous for solving the Boolean Pythagorean Triples problem using SAT [1]. He loves puzzles. He also got Knuth excited about a bunch of fun puzzles.BTW, these puzzles also tend to have a lot of symmetries, which SAT solvers are pretty bad at handling. You can break them, though, using a variety of techniques, e.g. static symmetry breaking [2], or symmetric learning.[1] https://www.cs.utexas.edu/~marijn/ptn/\n[2] https://github.com/markusa4/satsuma\n \nreply",
      "SAT solvers and the algorithms surrounding them are so much fun. I agree they are very unappreciated.Shameless plug: I wrote a (admittedly very deriative) introduction with some examples I thought at the time were cool.https://www.nhatcher.com/post/on-hats-and-sats/\n \nreply",
      "SMT is so much fun. The Z3 Python api  lets you write your problem very directly and then gives you fast answers, even for quite large problems.\n \nreply",
      "This post is the programming joke about Python, \"import solution; solution()\".\n \nreply"
    ],
    "link": "https://buttondown.com/hillelwayne/archive/solving-linkedin-queens-with-smt/",
    "first_paragraph": "I\u2019ll be speaking at Systems Distributed. My talk isn't close to done yet, which is why this newsletter is both late and short. The article Modern SAT solvers: fast, neat and underused claims that SAT solvers1 are \"criminally underused by the industry\". A while back on the newsletter I asked \"why\": how come they're so powerful and yet nobody uses them? Many experts responded saying the reason is that encoding SAT kinda sucked and they rather prefer using tools that compile to SAT. I was reminded of this when I read Ryan Berger's post on solving \u201cLinkedIn Queens\u201d as a SAT problem. A quick overview of Queens. You\u2019re presented with an NxN grid divided into N regions, and have to place N queens so that there is exactly one queen in each row, column, and region. While queens can be on the same diagonal, they cannot be adjacently diagonal.(Important note: Linkedin \u201cQueens\u201d is a variation on the puzzle game Star Battle, which is the same except the number of stars you place in each row/column/"
  },
  {
    "title": "Roundtable (YC S23) Is Hiring a President / CRO (ycombinator.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2025-06-12T21:00:00 1749762000",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.ycombinator.com/companies/roundtable/jobs/wmPTI9F-president-cro-founding",
    "first_paragraph": "Proof-of-Human APIRoundtable is a research and deployment company building the proof-of-human layer in digital identity. Roundtable seeks to research and build real-world Turing Tests, and to productize these developments in bot detection, fraud prevention, and continuous authentication.You\u2019ll be joining Roundtable\u2019s C-suite alongside CEO Mayank Agrawal and CTO Mathew Hardy. The primary job will be to design, manage, and execute the commercial muscle of the company.You should be prepared to spend your time doing front-facing work such as top-of-funnel and pipeline management (including content-led marketing), sales calls, and customer success.The ideal candidate feels comfortable in both sales and product contexts. Technical knowledge is not necessary, but the candidate should feel comfortable building a commercial operation in the technology industry.Roundtable is a research and deployment company building the proof-of-human layer in digital identity. Roundtable seeks to produce high-"
  },
  {
    "title": "Why does my ripped CD have messed up track names? And why is one track missing? (akpain.net)",
    "points": 87,
    "submitter": "surprisetalk",
    "submit_time": "2025-06-12T15:03:52 1749740632",
    "num_comments": 98,
    "comments_url": "https://news.ycombinator.com/item?id=44258654",
    "comments": [
      "A maintain my own digital music collection. The only two tools I use for maintaining the CD portion of my collection are k3b and MusicBrainz Picard. k3b can rip to flac and it will on embed metadata present on the CD itself. Then after I rip it, I add it to Picard.I use the \"lookup CD\" feature in Picard, which gives me a selection of releases to choose from. Among the choices, I usually see a release matching the catalog number on my CD's case. When I don't see a matching release, I will typically add the disc ID to an existing release, or I will create a new release, or sometimes even creating a new release + new release group and add the necessary metadata to MusicBrainz.I haven't tried any automatic tagging process like the ripping program the article talks about does, mostly because I want to use Picard to make sure the metadata is correct or contribute to MusicBrainz if it isn't.I like MusicBrainz a lot because applications like Plex use it very well to group release groups together and will (usually) deduplicate identical recordings so that identical tracks can share a rating. It's a really great database and is kept up to date pretty well.\n \nreply",
      "MusicBrainz Picard is wonderful, but has one of the most unintuitive \"first contact\" experiences I can remember. If you're not sure how to get started, try this:\u2022 Drag your album folders (one at a time so it doesn't get confused) into the pane that initially shows \"Unclustered Files (0)\" and \"Clusters (0)\".\u2022 Select the \"Clusters\" folder in that pane and click \"Lookup\". This will find any close matches, and in my experience works ~25% of the time.\u2022 For albums that weren't auto-matched, right-click the album folder name and choose \"Search for similar albums\u2026\". As long as you're sorting by \"Score\", often you'll find a reasonably-good match in the top 5 options.\u2022 NEVER use \"Scan\", basically.For matched albums, carefully review things like album covers, titles, etc. before you \"Save\" the updated metadata. After using it to rebuild my personal music library, including ~200 contributions to the MusicBrainz database, I still haven't cracked (for example) how to stop Picard from defaultly replacing a perfect, 1500px album cover with a less-good, 1000px cover from its database.\n \nreply",
      "Yeah, imo using musicbrainz/picard is great for the process of bringing something into your collection. I encounter errors like others here have mentioned, but they're straightforward to fix. Importantly, it sets up a reference to an evolving update process so changes down the line can get back to my files cleanly.\n \nreply",
      "since you mention Picard and wanting contribute to MusicBrainz. I'm working on a new fast tagger[1] in the spirit of Picard or beets. Just a little different and more scriptableIt makes it's best attempt to match with MusicBrainz, but if there's no match it it offers links to pre-seed MusicBrainz with tools like Harmonyhttps://github.com/sentriz/wrtag\n \nreply",
      "Harmony (https://harmony.pulsewidth.org.uk/) is amazing, and completely changed my relationship with MusicBrainz.What are you using for tag reading/writing in Go? Robust, complete options are non-existent in JavaScript land (Deno, Bun, Node, etc.), so I ended up creating a Wasm version of TagLib with a TypeScript API.\n \nreply",
      "haha that's funny! I made a WASM TagLib for Gohttps://github.com/sentriz/go-taglib\n \nreply",
      "Cooool, I love that you arrived at the same conclusion! Mine's not ready for its ShowHN, but as an enthusiast, I'm super-excited to dig into yours. Very nice work!\n \nreply",
      "This is a small point, but calling the 33-byte unit a sector in CDDA is a bit misleading and probably incorrect for the quantity being labeled. This is a channel data frame and contains 24-bytes of audio data, 1 byte of subcode data (except for the channel data frames that have sync symbols instead) and the rest is error correction. This is the smallest grouping of data in CDDA, but it's not really an individually addressable unit.98 of these channel data frames make up a timecode frame which represents 1/75th of a second of audio and has 2352 audio data bytes, 96 subcode bytes (2 frames have sync codes instead) with the remainder being sync and error correction. Timecode frames are addressable (via the timecodes embedded in the subcode data) and are the unit referred to in the TOC. This is probably what's being called a sector here. Notably, a CD-ROM sector corresponds 1:1 with a timecode frame.Note: Red book actually just confusingly calls both of these things frames and does not use the terms \"channel data frame\" or \"timecode frame\"\n \nreply",
      "I used to do the MusicBrainz thing with Picard and later with Beets, but I got sick of Somebody Else's Metadata because of MusicBrainz's (former?) policy where everything must be Title Cased regardless of how it's presented on the CD sleeve. I prefer my tags to match the artist's choice, because I consider it a tonal indicator that helps set the mood for the work.It seems like they might not enforce that any more since the album I was going to pick on as an example is now tagged like I have it, although I also have lower-case \u201cmy bloody valentine\u201d Artist tags on every track with Title Cased \u201cMy Bloody Valentime\u201d Album-Artist tag for browsing in Navidrome: https://musicbrainz.org/release/1e4c282b-8b0d-4d20-9f74-175f...\u2026but I already got out of the habit and will still just keep typing them out myself :)I also always include the catalog number in the Comment field and in brackets in my folder names to separate different releases of supposedly the same thing. Good example of why you would want to do this is the 2004 vs the 2007 releases of MM..FOOD? where the last track (Kookies) had to be redone to remove the Sesame Street samples:- 2004: https://www.youtube.com/watch?v=Ci_XcL4nYos- 2007: https://www.youtube.com/watch?v=8iYSwvdEfeYShout-out to https://covers.musichoarders.xyz/ and https://fanart.tv/ for high-quality album art to embed.\n \nreply",
      "As someone responsible for setting the track naming policy originally at a big streaming company, I can't remember what the policy was. I know I would be called in all the time for crazy shit like Aphex Twin having just a page of equations as track names, or I seem to remember some album by R\u00f6yksopp that had just colors printed for the track names and no words. That stuff killed me.Or the team doing all the ingestion being overworked minimum wage high school grads and suddenly an entire semi truck turns up and it's just palettes of CDs completely in many various East Asian languages.If I had to do it over I would have two fields, one for whatever best represented what the CD says (and as someone below me points out, this was usually the publisher's artistic discretion and differed between the data they sent, the back of the CD, the track list printed on the CD and the liner notes) and I would have a separate field for Title Cased Titles.\n \nreply"
    ],
    "link": "https://www.akpain.net/blog/inside-a-cd/",
    "first_paragraph": "A delve into CD ripping and metadataAs of late, I've been getting into growing my music collection by buying and ripping CDs. That was all fine and dandy until I discovered that one of my albums, Echo Afternoon by Finish Ticket, was slightly off.There are three problems here:To work out just what's going on here, we've got to delve into some techy details about data and CDs.If you ignore all the physics and lasers, an audio CD is a very simple thing. Aside from some audio tracks and a table of contents over those tracks, very little extra information is included on a disk - you've pretty much only got the artist name, album name and track names actually burned into the disk.When ripping a CD to get the nice, lossless audio out of it, this poses a little bit of a problem - we want as much metadata to be included with our resultant files as possible, but there's not really the space to include much of it on the disk. Plus, since library managers like Navidrome rely on the metadata embedd"
  },
  {
    "title": "Microsoft Office migration from Source Depot to Git (danielsada.tech)",
    "points": 296,
    "submitter": "dshacker",
    "submit_time": "2025-06-12T00:15:23 1749687323",
    "num_comments": 242,
    "comments_url": "https://news.ycombinator.com/item?id=44253212",
    "comments": [
      "Always nice to read a new retelling of this old story.TFA throws some shade at how \"a single get of the office repo took some hours\" then elides the fact that such an operation was practically impossible to do on git at all without creating a new file system (VFS). Perforce let users check out just the parts of a repo that they needed, so I assume most SD users did that instead of getting every app in the Office suite every time. VFS basically closes that gap on git (\"VFS for Git only downloads objects as they are needed\").Perforce/SD were great for the time and for the centralised VCS use case, but the world has moved on I guess.\n \nreply",
      "Some companies have developed their own technology like VFS for use with Perforce, so you can check out the entire suite of applications but only pull the files when you try to access them in a specific way. This is a lot more important in game development where massive source binary assets are stored along side text files.It uses the same technology that's built into Windows that the remote drive programs (probably) use.Personally I kind of still want some sort of server based VCS which can store your entire companies set of source without needing to keep the entire history locally when you check out something. But unfortunately git is still good enough to use on an ad-hoc basis between machines for me that I don't feel the need to set up a central server and CI/CD pipeline yet.Also being able to stash, stage hunks, and interactively rebase commits are features that I like and work well with the way I work.\n \nreply",
      "Doesn\u2019t SVN let you check out and commit any folder or file at any depth of a project you choose? Maybe not the checkouts and commit, but that log history for a single subtree is something I miss from the SVN tooling.\n \nreply",
      "You can indeed. The problem with this strategy is that now you need to maintain the list of directories that needs to be checked out to build each project. And unless this is automated somehow, the documentation will gradually diverge from reality.\n \nreply",
      "Can you not achieve the log history on a subtree with `git log my/subfolder/`? Tools like TortoiseGit let you right click on a folder and view the log of changes to it.\n \nreply",
      "Yes it can, but the point is that in a git repo you store the entire history locally, so whenever you clone a repo, you clone its history on at least one branch.So when you have a repo that's hundreds of GB in size, the entire history can be massive.\n \nreply",
      "My firm still uses perforce and I can't say anyone likes it at this point. You can almost see the light leaves the eyes of new hires when you tell them we don't use git like the rest of the world.\n \nreply",
      "Yeah it's an issue for new devs for sure. TFA even makes the point, \"A lot of people felt refreshed by having better transferable skills to the industry. Our onboarding times were slashed by half\".\n \nreply",
      "Interesting to hear it was so much of a problem in terms of onboarding time. Maybe Source Depot was particularly weird, and/or MS were using it in a way that made things particularly complicated? Perforce has never felt especially difficult to use to me, and programmers never seem to have any difficulty with it. Artists and designers seem to pick it up quite quickly too. (By and large, in contrast to programmers, they are less in the habit of putting up with the git style of shit.)\n \nreply",
      "> Interesting to hear it was so much of a problem in terms of onboarding time. Maybe Source Depot was particularly weird, and/or MS were using it in a way that made things particularly complicated?It was not. It was literally a fork of perforce with executable renamed to sd.exe from p4. Command line was pretty much identical.\n \nreply"
    ],
    "link": "https://danielsada.tech/blog/carreer-part-7-how-office-moved-to-git-and-i-loved-devex/",
    "first_paragraph": ""
  },
  {
    "title": "Helion: A modern fast paced Doom FPS engine in C# (github.com/helion-engine)",
    "points": 129,
    "submitter": "klaussilveira",
    "submit_time": "2025-06-10T22:56:51 1749596211",
    "num_comments": 51,
    "comments_url": "https://news.ycombinator.com/item?id=44242435",
    "comments": [
      "I am curious if the author considered use of the built-in numerics library over hand-rolling types like Vector4F.All of the methods defined here:https://github.com/Helion-Engine/Helion/blob/20300d89ee4091c...Are available in the kitchen sink:https://learn.microsoft.com/en-us/dotnet/api/system.numerics...Same idea applies to methods like GetProjection, which could be replaced with methods like:https://learn.microsoft.com/en-us/dotnet/api/system.numerics...Advantages of using this library are that it is uses intrinsics (SIMD) to accelerate operations. There is a lot of Microsoft money & time that has been invested into these code piles.\n \nreply",
      "I also see the guys from Intel constantly stabbing at all these low-level types to optimize them too. There are optimizations in .NET 10 for processors that aren't even released yet.\n \nreply",
      "It looks like these types were code-gen from something else.https://github.com/Helion-Engine/Helion/commit/e6affd9abff14...\n \nreply",
      "Further down in the commit there's a Generators project that has the VectorGenerator class.\n \nreply",
      "> [a diff with] +4620 -1454 [lines]Someone should learn some CS and then how to make proper commits.\n \nreply",
      "This is pull requests, there are commitsAdditionally this is generated code.\n \nreply",
      "Computer science has literally nothing to do with good commit habits.\n \nreply",
      "I wonder if it can play through MyHouse.wad. Which, if you haven't seen before, is an incredible art piece.https://www.youtube.com/watch?v=5wAo54DHDY0If you've read House of Leaves, do yourself a favor and check it out.\n \nreply",
      "He used Eviternity 2 as an example, my personal GOTY for 2024. Check it out if you haven\u2019t!\n \nreply",
      "I\u2019m also curious about this.\n \nreply"
    ],
    "link": "https://github.com/Helion-Engine/Helion",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A modern fast paced Doom FPS engine\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.A modern Doom engine written from the ground up with a focus on performance.Content creators have created maps that struggle to render at high framerates with even the latest and most expensive hardware. With Helion, Doom\u2019s most complex maps are no longer stressful on modern GPUs and playable on old hardware that was previously impossible.Helion uses static rendering with a state management system to reconcile dynamic map changes in Doom. In contrast to the typical BSP tree rendering that requires significant CPU processing, Helion is able to manage dynamic changes and optimally utilize the GPU resulting in dramatic performance increases.Helion supports WADs targeting vanilla"
  },
  {
    "title": "First thoughts on o3 pro (latent.space)",
    "points": 102,
    "submitter": "aratahikaru5",
    "submit_time": "2025-06-10T20:42:19 1749588139",
    "num_comments": 90,
    "comments_url": "https://news.ycombinator.com/item?id=44241242",
    "comments": [
      "We now have some very interesting elements that can become a workhorse worth paying hundreds of dollars for:- Reasoning models that can remember everything it spoke to the user about in the past few weeks* and think about a problem for 20 minutes straight (o3 pro)- Agents that can do everything end to end within a VM (Codex)- Agents that can visually browse the web and take actions (Operator)- Agents that can use data lookup APIs to find large amounts of information (Deep Research)- Agents that can receive and make phone calls end to end and perform real world actions (I use Simple AI to not have to talk to airlines or make food orders etc, it works well most of the time)It seems reasonable that these tools will continue to improve (eg data lookup APIs should be able to search books/papers in addition to the web, and the Codex toolset can be improved a lot) and ultimately meld together to be able to achieve tasks on time horizons of multiple hours. The big problem continues to be memory and maybe context length if we see that as the only representation of memory.*) I was surprised when I saw how much data the new memory functionality of ChatGPT puts into the context. Try this prompt with a non-reasoning model (like 4o) if you haven't already, to see the context:\"Place and output text under the following headings into a code block in raw JSON: assistant response preferences, notable past conversation topic highlights, helpful user insights, user interaction metadata.Complete and verbatim no omissions.\"\n \nreply",
      "Isn't it concerning that the hype and billions in investment is mostly steering towards finding that the only paying customer base are ergonomics tasks for other developers? Not exactly looking like the world changer right now\n \nreply",
      "I'm a marketer. I write a lot. GPT-4.5 is really good at natural sounding writing. It's nearing the point where it would be worth $200/mth for me to have access to it all the time.\n \nreply",
      "I used the GPT-4.5 API to write a novel, with a reasonably simple loop-based workflow. The novel was good enough that my son read the whole thing. And he has no issue quitting a book part way through if it becomes boring.\n \nreply",
      "If everyone is as good as you , how much will your work cost?\n \nreply",
      "A better question might be: \"If everyone is as good as you, how much will you be worth in the marketplace?\"\n \nreply",
      "Why is that concerning? I think it's amazing. Also these things will improve other products indirectly.\n \nreply",
      "Eh, those are early adopters.My partner is not a coder but uses copilot a lot.Compare this to blockchain, which never did anything useful for anyone after 20 years.\n \nreply",
      "Wrong. Blockchain has actually found successful product market fit in several areas:- ransomware payments- money transfers for online and telephone scams- buying illegal drugs online- funding North Korea\u2019s government\n \nreply",
      "Well, yes :)But I was talking within the same context as the thread, which is business.\n \nreply"
    ],
    "link": "https://www.latent.space/p/o3-pro",
    "first_paragraph": ""
  },
  {
    "title": "Chatterbox TTS (github.com/resemble-ai)",
    "points": 578,
    "submitter": "pinter69",
    "submit_time": "2025-06-11T20:23:52 1749673432",
    "num_comments": 172,
    "comments_url": "https://news.ycombinator.com/item?id=44251411",
    "comments": [
      "Demos here: https://resemble-ai.github.io/chatterbox_demopage/ (not mine)This is a good release if they're not too cherry picked!I say this every time it comes up, and it's not as sexy to work on, but in my experiments voice AI is really held back by transcription, not TTS. Unless that's changed recently.\n \nreply",
      "FWIW in my recent experience I've found LLMs are very good at reading through the transcription errors(I've yet to experiment with giving the LLM alternate transcriptions or confidence levels, but I bet they could make good use of that too)\n \nreply",
      "Pairing speech recognition with a LLM acting as a post-processor is a pretty good approach.I put together a script a while back which converts any passed audio file (wav, mp3, etc.), normalizes the audio, passes it to ggerganov whisper for transcription, and then forwards to an LLM to clean the text. I've used it with a pretty high rate of success on some of my very old and poorly recorded voice dictation recordings from over a decade ago.Public gist in case anyone finds it useful:https://gist.github.com/scpedicini/455409fe7656d3cca8959c123...\n \nreply",
      "An LLM step also works pretty well for diarization. You get a transcript with speaker-segmentation (with whisper and pyannote for example), SPEAKER_01 says at some point \u201eHi I\u2019m Bob. And here\u2019s Alice\u201c, SPEAKER_02 says \u201eHi Bob\u201c and now the LLM can infer that SPEAKER_01 = Bob and SPEAKER_02 = Alice.\n \nreply",
      "Yep, my agent i built years ago worked very well with this approach, using a whisper-pyannote combo. The fun part is knowning when to end transcription in noisy environments like a coffee shop.\n \nreply",
      "thanks for sharing. are some local models better than others? can small models work well or do you want 8B+?\n \nreply",
      "So in my experience smaller models tend to produce worse results BUT I actually got really good transcription cleanup with CoT (Chain of Thought models) like Qwen even quantized down to 8b.\n \nreply",
      "I think the 8B+ question was about parameter count (8 billion+ parameters), not quantization level (8 bits per weight).\n \nreply",
      "Yeah I should have been more specific - Qwen 8b at a 5_K_M quant worked very well.\n \nreply",
      "I was going to say, ideally you\u2019d be able to funnel alternates to the LLM, because it would be vastly better equipped to judge what is a reasonable next word than a purely phonetic model.\n \nreply"
    ],
    "link": "https://github.com/resemble-ai/chatterbox",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        SoTA open-source TTS\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n\n\n_Made with \u2665\ufe0f by We're excited to introduce Chatterbox, Resemble AI's first production-grade open source TTS model. Licensed under MIT, Chatterbox has been benchmarked against leading closed-source systems like ElevenLabs, and is consistently preferred in side-by-side evaluations.Whether you're working on memes, videos, games, or AI agents, Chatterbox brings your content to life. It's also the first open source TTS model to support emotion exaggeration control, a powerful feature that makes your voices stand out. Try it now on our Hugging Face Gradio app.If you like the model but need to scale or tune it for higher accuracy, check out our competitively priced TTS service (link). It deliv"
  }
]