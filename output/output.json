[
  {
    "title": "Understanding Reasoning LLMs (sebastianraschka.com)",
    "points": 117,
    "submitter": "sebg",
    "submit_time": "2025-02-06T21:34:12 1738877652",
    "num_comments": 47,
    "comments_url": "https://news.ycombinator.com/item?id=42966720",
    "comments": [
      "I like Raschka's writing, even if he is considerably more optimistic about this tech than I am. But I think it's inappropriate to claim that models like R1 are \"good at deductive or inductive reasoning\" when that is demonstrably not true, they are incapable of even the simplest \"out-of-distribution\" deductive reasoning: https://xcancel.com/JJitsev/status/1883158738661691878They are certainly capable of doing is a wide variety of computations that simulate reasoning, and maybe that's good enough for your use case. But it is unpredictably brittle unless you spend a lot on o1-pro (and even then...). Raschka has a line about \"whether and how an LLM actually 'thinks' is a separate discussion\" but this isn't about semantics. R1 clearly sucks at deductive reasoning and you will not understand \"reasoning\" LLMs if you take DeepSeek's claims at face value.It seems especially incurious for him to copy-paste the \"a-ha moment\" from Deepseek's technical report without critically investigating it. DeepSeek's claims are unscientific, without real evidence, and seem focused on hype and investment:  This moment is not only an \"aha moment\" for the model but also for the researchers observing its behavior. It underscores the power and beauty of reinforcement learning: rather than explicitly teaching the model on how to solve a problem, we simply provide it with the right incentives, and it autonomously develops advanced problem-solving strategies. \n\n  The \"aha moment\" serves as a powerful reminder of the potential of RL to unlock new levels of intelligence in artificial systems, paving the way for more autonomous and adaptive models in the future.\n\nPerhaps it was able to solve that tricky Olympiad problem, but there are an infinite variety of 1st grade math problems it is not able to solve. I doubt it's even reliably able to solve simple variations of that root problem. Maybe it is! But it's frustrating how little skepticism there is about CoT, reasoning traces, etc.\n \nreply",
      "> they are incapable of even the simplest \"out-of-distribution\" deductive reasoningBut the link demonstrates the opposite- these models absolutely are able to reason out of distribution, just not with perfect fidelity. The fact that they can do better than random is itself really impressive. And o1-preview does impressively well, only vary rarely getting the wrong answer on variants of that Alice in Wonderland problem.If you would listen to most of the people critical of LLMs saying they're a \"stochastic parrot\" - it should be impossible for them to do better than random on any out of distribution problem. Even just changing one number to create a novel math problem should totally stump them and result in entirely random outputs, but it does not.Overall, poor reasoning that is better than random but frequently gives the wrong answer is fundamentally, categorically entirely different from being incapable of reasoning.\n \nreply",
      "anyone saying an LLM is a stochastic parrot doesn't understand them... they are just parroting what they heard.\n \nreply",
      "A good literary production. I would have been proud of it had I thought of it, but it's a path to observe a strong \"whataboutery\" element that if we use \"stochastic parrot\" as shorthand and you dislike the term, now you understand why we dislike the constant use of \"infer\", \"reason\" and \"hallucinate\"Parrots are self aware, complex reasoning brains which can solve problems in geometry, tell lies, and act socially or asocially. They also have complex vocal chords and can perform mimicry. Very few aspects of a parrots behaviour are stochastic but that also underplays how complex stochastic systems can be in their production.\n \nreply",
      "There is definitely a mini cult of people that want to be very right about how everyone else is very wrong about AI.\n \nreply",
      "There are a couple Twitter personalities that definitely fit this description.There is also a much bigger group of people that haven't really tried anything beyond GPT-3.5, which was the best you could get without paying a monthly subscription for a long time.  One of the biggest reasons for r1 hype, besides the geopolitical angle, was people could actually try a reasoning model for free for the first time.\n \nreply",
      "Firstly this is meta ad hom. You're ignoring the argument to target the speaker(s)Secondly, you're ignoring the fact that the community of voices with experience in data sciences, computer science and artificial intelligence themselves are split on the qualities or lack of them in current AI.So yes. There are a lot of \"us\" who are pushing back on the hype, and no we're not a mini cult.\n \nreply",
      "ie, the people that AI is dumb? Or you are saying I'm in a cult for being pro it - I'm definitely part of that cult - the \"we already have agi and you have to contort yourself into a pretzel to believe otherwise\" cult. Not sure if there is a leader though.\n \nreply",
      "You think we have AGI? What makes you think that?",
      "I didn't realize my post can be interpreted either way. I'll leave it ambiguous, hah. Place your bets I guess.\n \nreply"
    ],
    "link": "https://magazine.sebastianraschka.com/p/understanding-reasoning-llms",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: SQLite disk page explorer (github.com/quadruplea)",
    "points": 164,
    "submitter": "QuadrupleA",
    "submit_time": "2025-02-06T18:40:30 1738867230",
    "num_comments": 27,
    "comments_url": "https://news.ycombinator.com/item?id=42965198",
    "comments": [
      "This is really neat. I posted an animated GIF screenshot here https://simonwillison.net/2025/Feb/6/sqlite-page-explorer/\n \nreply",
      "Ha, honored :) When I was hacking this together the thought did occur, \"I bet this is up SimonW's alley.\" Thanks for all the great LLM experiments & writeups.\n \nreply",
      "Neat! It's surprisingly easy to sit down with a copy of the sqlite file format docs and start writing code to parse sqlite files (like this project does), and I'd strongly recommend it for all the same reasons listed in the \"Why?\" section of the readme here.https://www.sqlite.org/fileformat.html\n \nreply",
      "This looks cool, nice job.Maybe add a color-legend to the front page? I didn't know what the colors represented at first.It's kind of choking on a larger db (3.6GB, 942719 pages) - maybe you can paginate the pages.\n \nreply",
      "That's really impressive! As someone who's worked with SQLite internals in the past, I know this kind of work and tinkering is no small feat. On a related note, I recently came across sqlite-repr [1] (built with Dioxus), which offers an interesting take on SQLite visualizations as well.[1] https://torymur.github.io/sqlite-repr/\n \nreply",
      "Did that for a security tool about more than ten years ago. Makes you love that tightly designed engine a bit more.I always thought an explorer or just an base lib would be fun. Great to see yours, especially with a MIT license. Tbanks for sharing.\n \nreply",
      "Thank you!As someone who isn't disciplined enough to sit through a course or class, this was a really good way to visualize what's going on under the hood, and how to structure my data more efficiently.\n \nreply",
      "I recently wrote an explainer for the sqlite file format with some helpful diagrams. This might help.https://blog.jabid.in/2024/11/24/sqlite.html\n \nreply",
      "A true masterpiece:)\n \nreply",
      "Tool works well.\n \nreply"
    ],
    "link": "https://github.com/QuadrupleA/sqlite-page-explorer",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Visual tool to explore SQLite databases page-by-page, the way they're stored on disk and the way SQLite sees them.\n      A small GUI application built in redbean that lets you explore your SQLite databases \"page by page\" the way SQLite sees them.SQLite (and most databases) store data in disk-block-sized pages, usually 4KB, which helps make reads and writes as fast as possible.Normally developers interact with databases on the \"schema level\" - tables, rows, and SQL. But taking a peek at the \"page level\" can give you some interesting insights:Thanks to the magic of redbean, cosmopolitan and \u03b1c\u03c4\u00b5\u03b1lly p\u03b4r\u03c4\u03b1bl\u03b5 \u03b5x\u03b5c\u00b5\u03c4\u03b1bl\u03b5, it's just a single 6.5 MB executable that runs natively on Windows, Linux, MacOS, various BSDs, on both ARM64 and x64.It's also a zip file that contains the Lua code that runs the app, parses the database binary format"
  },
  {
    "title": "Open source AI: Red Hat's point-of-view (redhat.com)",
    "points": 27,
    "submitter": "alexrustic",
    "submit_time": "2025-02-03T22:08:20 1738620500",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=42923940",
    "comments": [
      "No real information, just a marketing spiel.\n \nreply",
      "i mean... it's IBM so what did we really expect?\n \nreply",
      "Disappointing that red hat is basically validating open weights as open source, and excusing it by saying this:> The majority of improvements and enhancements to AI models now taking place in the community do not involve access to or manipulation of the original training data. Rather, they are the result of modifications to model weights or a process of fine tuning which can also serve to adjust model performance.Well yes, because they have no access to anything more. With training source code and data they might do something different. If you don\u2019t have all the things used to produce the final result, it\u2019s not open source.\n \nreply",
      "Do you believe that open source can exist on top of closed hardware? I ask because you can't produce the final result without having someone give you the firmware blob. To me, this seems like an analogue to building on top of open weight models.\n \nreply",
      "The math underpinning an AI model exists independent of the hardware it's realized on. I can train a model on one GPU and someone else can replicate my results with a different GPU running different drivers, down to small numerical differences that should hopefully not have major effects.Data isn't fungible in the same way: I can't just replace one dataset with another for research where the data generation and curation is the primary novel contribution and expect to replicate the results.There's also a larger accountability picture: just like scientific papers that don't publish data are inherently harder to check for statistical errors or outright fraud, there's a lot of uncomfortable trust required for open-weight closed-data models. How much contamination is there for the major AI benchmarks? How much copyrighted data was used? How can we be sure that the training process was conducted as the authors say, whether from malfeasance or simple mistakes?\n \nreply",
      "Turing completeness makes it a different problem.\n \nreply",
      "i have very little knowledge of any of this, but i had an impression that OpenAI was trained on commodity cloud hardware that's available for purchase/rent to anyone, including off-the-shelf GPUs from Nvidia and AMD? are those what you are referring to as \"the firmware blob\", or was there some other, more specialized and custom-built closed hardware involved?\n \nreply",
      "It's not exactly practical to hand out the training material given the sheer quantity of data we're talking about.\n \nreply",
      "But they could provide training code and let people provide their own Common Crawl (or whatever other pile of training data), couldn't they?\n \nreply",
      "Yeah, no.  We can move an arbitrary amount of data around the world at breakneck speed.  Netflix does this for a living.  It's not practical to hand out the training material because of the massive rampant copyright violations.\n \nreply"
    ],
    "link": "https://www.redhat.com/en/blog/open-source-ai-red-hats-point-view",
    "first_paragraph": "As you browse redhat.com, we'll recommend resources you may like. For now, try these.ShareTL;DR - Red Hat views the minimum criteria for open source AI as open source-licensed model weights combined with open source software components.More than three decades ago, Red Hat saw the potential of how open source development and licenses can create better software to fuel IT innovation. Thirty-million lines of code later, Linux not only developed to become the most successful open source software but the most successful software to date. Our commitment to open source principles continues today, not only in our business model, but in our corporate culture as well. We believe that these concepts can have the same impact on artificial intelligence (AI) if done the right way, and yet there is a distinct divide within the technology world as to what \u201cthe right way\u201d is.AI, especially the large language models (LLMs) driving generative AI (gen AI), cannot be viewed in quite the same way as open so"
  },
  {
    "title": "Frank Lloyd Wright's mile high skyscraper proposal (2021) (onverticality.com)",
    "points": 102,
    "submitter": "nohide",
    "submit_time": "2025-02-06T22:39:22 1738881562",
    "num_comments": 72,
    "comments_url": "https://news.ycombinator.com/item?id=42967226",
    "comments": [
      "That's a fun blog. The author writes about tall buildings almost to a point of fetishism, but seems at least aware of that obsession, hence the name.Although I don't care much about most tall buildings, I do like that blogs on single, weird topics still exist and are being written. Niche blogs are one of the best uses cases for the web.\n \nreply",
      "Thats's from Wright's big pointy object period. Several of his unbuilt designs, including Broadacre City and the Arizona state capital, included big pointy objects. The Marin Civic Center was the only completed project where the big pointy object [1] was built.[1] https://media-cdn.tripadvisor.com/media/photo-s/26/a4/cb/8f/...\n \nreply",
      "Does Price Tower count?https://en.m.wikipedia.org/wiki/Price_Tower\n \nreply",
      "The spire in Scottsdale is also a big pointy object that was completed (but long after he died). Looks like it was originally meant to be at the state capital, so perhaps it's the same one you're referring to?https://maps.app.goo.gl/ftdtd2WhghdcYV9R7https://www.atlasobscura.com/places/frank-lloyd-wright-spire\n \nreply",
      "Actually, it's not about pointy, but about the high rise as a building type - structure as a tall tree.  Wright's prototype for this is Price Tower in OK [1][1] https://www.gibson-design.com/sketch-price.html\n \nreply",
      "It's worth noting that the \"tower in the park\" modernist ethos of building very tall towers to create lots of green space was largely a bust.Parks need a certain level of activation, and developments like these tended to fall below those thresholds. If not active, parks become ill-maintained, desolate, and foreboding. In the worst case scenario, they become havens for crime, since there are no witnesses or bystanders to help out someone getting mugged.\n \nreply",
      "What's the difference between a city park and e.g. the hundreds of miles of trails and national forest behind my house?  Somehow that manages to be crime-free despite less usage.  Would love a theory of how density works in your model.\n \nreply",
      "I'm assuming you live in a less populated area, which would also (on average) mean fewer criminals. Lower usage in high density vs lower usage in low density.\n \nreply",
      "Some guesses:1. A low traffic urban park still has some traffic, and criminals want reasonable waiting times.  You might wait all day on a hiking trail.2. Escape routes.  Harder to make a clean getaway on a trail.  Often one way out, a single trail head, and then a drive.  That's another thing, you probably need a car.  In an urban park you can vanish back into the city from multiple exit points.3. Crimes of opportunity.  Most muggings aren't planned out far in advance.  Driving to a hiking spot and patiently waiting isn't the psychological place typical criminals are operating from.  Serial killers, maybe... and sometimes those killings do happen in secluded hiking areas.\n \nreply",
      "I am not the person you asked, but it seems to me the key difference is concentration of accessible resources. If so, the areas where the trails behind your house intersect with wealthy suburban or urban areas are the areas most likely to conceal would-be robbers.\n \nreply"
    ],
    "link": "https://www.onverticality.com/blog/frank-lloyd-wright-mile-high-skyscraper",
    "first_paragraph": "Main perspective rendering and project description for Frank Lloyd Wright\u2019s Illinois skyscraper proposal.In the debate over density, architects and planners are split into two camps. The first is pro-density, which believes in dense, centralized cities that function through complex mass-transit systems and clusters of skyscrapers. This is the pro-city crowd. The second is the anti-density camp, which believes in de-centralized, spread-out networks of neighborhoods that rely on automobiles and low buildings. This is the pro-suburb crowd. Modern architect Frank Lloyd Wright was an outspoken member of the latter camp, and his visionary Broadacre City project is a model suburb, with low buildings and green space prioritized over tall buildings and density.In addition to his anti-city stance, Wright is famous for his organic approach to architecture, which is based on a building\u2019s intimate connection to its surroundings. Organic buildings respond to their context and should be unique to the"
  },
  {
    "title": "Humanity's Last Exam (safe.ai)",
    "points": 22,
    "submitter": "uladzislau",
    "submit_time": "2025-02-03T11:03:34 1738580614",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=42917037",
    "comments": [
      "Some of the example prompts are unintentionally hilarious:> Hummingbirds within Apodiformes uniquely have a bilaterally paired oval bone, a sesamoid embedded in the caudolateral portion of the expanded, cruciate aponeurosis of insertion of m. depressor caudae. How many paired tendons are supported by this sesamoid bone? Answer with a number.LLMs are so intelligent they don't know that a \"how many\" question is answered with a number.Also, something something Goodhart's law.\n \nreply",
      "Apparently OpenAI's Deep Research already saturated a quarter of this benchmark, more or less a month in. But I also imagine it makes baffling mistakes anyway.\"Humanity's Laster Exam\" coming up when?\n \nreply",
      "An insider's trivia game means nothing if they design the test to the trajectory of LLM capabilities and not to the real world that human's value. Let every high score get fresh news coverage to align with their updated timeline scaremongering.Let me know when there is more on the line than a misnamed test.\n \nreply",
      "calling it \"last\" is defeating their own premise - that tests need to keep pace developments in ability\n \nreply",
      "The name is very intentional, this isn't \"AI's Last Evaluation\", it's \"Humanity's Last Exam\". There will absolutely be further tests for evaluating the power of AIs, but the intent of this benchmark is that any more difficult benchmark will either be- Not an \"exam\" composed of single-correct-answer closed-form questions with objective answers- Not consisting of questions that humans/humanity is capable of answering.For example, a future evaluation for an LLM could consist of playing chess really well or solving the Riemann Hypothesis or curing some disease, but those aren't tasks you would ever put on an exam for a student.\n \nreply"
    ],
    "link": "https://agi.safe.ai/",
    "first_paragraph": "Long Phan*1, Alice Gatti*1, Ziwen Han*2, Nathaniel Li*1Josephina Hu2, Hugh Zhang\u2021, Sean Shi2, Michael Choi2, Anish Agrawal2, Arnav Chopra2Adam Khoja1, Ryan Kim\u2020, Richard Ren1, Jason Hausenloy1, Oliver Zhang1, Mantas Mazeika1Summer Yue**2, Alexandr Wang**2, Dan Hendrycks**11Center for AI Safety, 2Scale AIDaron Anderson3, Tung Nguyen4, Mobeen Mahmood5, Fiona Feng6, Steven Y. Feng7, Haoran Zhao8, Michael Yu3, Varun Gangal3, Chelsea Zou7, Zihan Wang9, Jessica P. Wang10, Pawan Kumar11, Oleksandr Pokutnyi12, Robert Gerbicz13, Serguei Popov14, John-Clark Levin15, Mstyslav Kazakov16, Johannes Schmitt17, Geoff Galgon18, Alvaro Sanchez3, Yongki Lee19, Will Yeadon20, Scott Sauers21, Marc Roth22, Chidozie Agu23, S\u00f8ren Riis22, Fabian Giska3, Saiteja Utpala24, Zachary Giboney25, Gashaw M. Goshu3, Joan of Arc Xavier26, Sarah-Jane Crowson27, Mohinder Maheshbhai Naiya28, Noah Burns7, Lennart Finke17, Zerui Cheng29, Hyunwoo Park30, Francesco Fournier-Facio15, John Wydallis3, Mark Nandor3, Ankit Singh31,"
  },
  {
    "title": "OpenLDK: A Java JIT compiler and runtime in Common Lisp (github.com/atgreen)",
    "points": 120,
    "submitter": "varjag",
    "submit_time": "2025-02-05T12:17:47 1738757867",
    "num_comments": 37,
    "comments_url": "https://news.ycombinator.com/item?id=42947447",
    "comments": [
      "Reminds me of Greenspun's tenth rule of programming (also counts for Java, but this most probably predates it):Any sufficiently complicated C or Fortran program contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of Common Lisp.https://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule\n \nreply",
      "Ritchie's Revenge: And this half is still faster than Common Lisp.\n \nreply",
      "Hello -- I wrote this!  It's still very much a work in progress.\n \nreply",
      "Very cool! I'm curious whether you're using it (or planning to use it) yourself for anything serious or if it's just to see if it could be done. Are you planning to support classes beyond Java 8 at some point?\n \nreply",
      "I'll definitely use it when it becomes usable.  And, yes, it needs to support newer versions of Java.  Crawl.. walk.. run.  But you are right.. part of my motivation was just to see if it was possible.  Many years ago, I worked on gcj, which was similar in concept, except that it mapped Java classes to C++ classes (as implemented by g++).  I've been on a Common Lisp kick for the past few years, so it seemed like a fun challenge. The fact that the OpenJDK class libraries are free software now makes this more practical.\n \nreply",
      "Are you planning to do a Futamura projection?\n \nreply",
      "@atgreen - Would love to hear what key lessons / takeaways you've learned while working on this project?\n \nreply",
      "A pragmatist will point to this and say, why not Clojure? Can you share more about what keeps you using SBCL instead of Clojure?\n \nreply",
      "> why not Clojure?Common Lisp implementations like SBCL have static typing, performance, instant (and effortless) compilation to native machine code, and so on. No need to deal with Leiningen or copy-pasting a deps.edn / build.clj template across projects. If I want to experiment with SIMD intrinsics with the comfort of a REPL, I can't do that with Clojure, but I can do that with SBCL and a built-in library (SB-SIMD).Note: I have used Clojure professionally and still use it for some personal projects, but I try to be aware of the trade-offs when deciding to use Clojure / Common Lisp / any other programming language.\n \nreply",
      "do you have any reference libraries/apps/projects you could refer me to? curious to see what a healthy and idiomatic project looks like.\n \nreply"
    ],
    "link": "https://github.com/atgreen/openldk",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          OpenLDK is a Just-In-Time (JIT) compiler and runtime environment for\nJava, implemented entirely in Common Lisp. It bridges the gap between\nJava and Common Lisp by incrementally translating Java bytecode into\nLisp, which is then compiled into native machine code for\nexecution. This unique approach allows Java classes to be seamlessly\nmapped to Common Lisp Object System (CLOS) classes, enabling\neffortless integration between Java and Common Lisp codebases.OpenLDK is not designed to be a high-performance Java\nruntime. Instead, it's for when you want to use SBCL, but need that\none Java library. It provides a practical solution for integrating\nJava libraries into a Lisp-based workflow without the need for an\nout-of-process Java runtime environment.openldk has only been tested with sbcl.  It's possible that other\nCommon Lisp implementations could "
  },
  {
    "title": "Simulating water over terrain (lisyarus.github.io)",
    "points": 246,
    "submitter": "ibobev",
    "submit_time": "2025-02-06T14:15:28 1738851328",
    "num_comments": 28,
    "comments_url": "https://news.ycombinator.com/item?id=42962508",
    "comments": [
      "Another take on fluid simulation (Coding Adventure):Rendering Fluids: https://www.youtube.com/watch?v=kOkfC5fLfgEI Tried Putting my Fluid Simulation on a Planet: https://www.youtube.com/watch?v=8nIB7e_eds4&t=817sGitHub: https://github.com/SebLague/Fluid-Sim?tab=readme-ov-file\n \nreply",
      "I really enjoy Coding Adventure. He has a small game 'Geographical Adventures' which has lovely music and is really relaxing [0] [1][0] https://www.youtube.com/playlist?list=PLFt_AvWsXl0dT82XMtKAT...[1] https://github.com/SebLague/Geographical-Adventures\n \nreply",
      "That second one was a joy to watch. I thoroughly enjoy that kind of high level tour/discovery video.\n \nreply",
      "Each of his videos is a joy to watch. He has a very relaxing voice\n \nreply",
      "Off topic, but the post mentions needing terrain manipulation for resource gathering.I always thought animal crossing had a clever and efficient approach to this without any terrain manipulation. You can chop a tree, and it'll dispense logs, but only so many before it essentially has a cooldown. You get the feedback and the finite resources, without expensive terrain manipulation.Of course that doesn't work for every game, and really works better on smaller maps, but something worth considering. Terrain manipulation is pretty expensive, if your game doesn't need it it's probably better to do without (again, a generalisation)\n \nreply",
      "The blog mentioned that strategy, in the form of gold ore in a gold ore boulder found lying aroundIt a standard strategy for resource dispensation (though cooldown doesn\u2019t alleviate the infinite resource problem; it just slows it down), it\u2019s just\u2026 boring and unimpactful\n \nreply",
      "Neat dive on this topic, and I appreciate calling out Timberborn! I'm obsessed with that game currently, big big big recommendation if you haven't checked it out yet. The water physics are like another character in the game and figuring out how to dam up a bunch of water to use in your engines and to water your fields is an essential part of the gameplay loop.\n \nreply",
      "This is super, super cool!I was experimenting with a similar idea recently with the help of o3-mini-high. I talked it through my idea for an algorithm, and it implemented and rendered it in 3D with no manual intervention (although I did prompt it a number of times):https://3d-water-sim.netlify.app/It's not perfect yet because I stopped playing with it, but it was improving significantly with each iteration.Fun fact, it implemented a working version of perlin noise correctly from scratch instead of pulling it from a CDN or something as part of this, for the terrain generation.\n \nreply",
      "Crude plug of a curiosity I had a few years ago: https://aperocky.com/hydrosim/I couldn't figure out erosion before this project moved to the cold shelf of personal project storage.. I liked how author mentioned this and attached the equations.\n \nreply",
      "Nice explanation. I like the viscosity part, I implemented something similar a couple of years ago in an open source RTS game engine (test video at: https://www.youtube.com/watch?v=cQW8WXNpYXk), and without viscosity water was spreading thin and due to floating point, at some point it was spreading on flat surfaces and \"evaporating\".Also, the grid resolution required to obtain nice waves was a bit too much for the effort I put 5 years ago (probably needed another thread, etc.)\n \nreply"
    ],
    "link": "https://lisyarus.github.io/blog/posts/simulating-water-over-terrain.html",
    "first_paragraph": "If you don't want a long an boring introduction, skip directly to the virtual pipes method description.I will get a little bit sad if you do this, though x)I'm somewhat obsessed with terrain generation, grid-based games, simulations, and stuff like that. And this stuff often involves water, \u2014 or at least it seems natural for water to be there.Say, you're generating a map for a strategy game, and you don't want the map borders to just be filled with inpenetrable void (like in old-school RTS games). Wouldn't it be nice for the border to be filled with water, like in this map from one of my abandoned projects:This provides a nice natural border, and maybe allows you to introduce some more water-related mechanics like sailing, fishing, trading, and sea warfare. Here's a 3D view of a similar island from the same project, for no particular purpose:Or, say, you're making a peaceful village/town simulation game and you want your town to have a river for drinking, fishing, transportation, or ev"
  },
  {
    "title": "Nontraditional Red Teams (zachholman.com)",
    "points": 43,
    "submitter": "feross",
    "submit_time": "2025-02-04T18:01:45 1738692105",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=42936162",
    "comments": [
      "This is called \"quality control\". A lost concept in the era of continuous integration and \"move fast and break things\".\n \nreply",
      "Tech has a long history of declaring things useless and then gradually bootstrapping them back up as we learn all the lessons that led to those things existing.\n \nreply",
      "'\"Tradition\" is a set of solutions for which we have forgotten the problems. Throw away the solution and you get the problem back.'This is, by far, my most conservative opinion. Credit to Donald Kingsbury for the quote.Honorable mention re: the same problem, \"dogfooding\"[0] is gone from the software industry, which is why users often feel like they're getting suckered by the companies they patronize; the decision makers, who don't themselves use the product, absolutely see the users as suckers.[0] https://en.wikipedia.org/wiki/Eating_your_own_dog_food\n \nreply",
      "Reminds me of that AI company that didn't want it's applicants too use AI in the process. Like... you made this monster.\n \nreply",
      "Don\u2019t forget to declare it an innovation, we have re-invented the way everyone was doing thing anyway!\n \nreply",
      "To be fair, QA is seen by a lot of folks as license to not fully test their code themselves.So it's not necessarily that QA was useless, but that it was actively harmful\n \nreply",
      "We don't need testing. We're \"agile\". Or something like that.\n \nreply",
      "chesterton's fence would like a word\n \nreply",
      "The bike shed needs another coat of taupe paint though\n \nreply",
      "This is the weapon of a good programmer. Not as clumsy or random as continuous integration or \u201cmove fast and break things\u201d; an elegant weapon for a more civilized age.\n \nreply"
    ],
    "link": "https://zachholman.com/posts/red-teams",
    "first_paragraph": ""
  },
  {
    "title": "Paper Apps (gladdendesign.com)",
    "points": 526,
    "submitter": "bluebirdfirewin",
    "submit_time": "2025-02-06T07:58:33 1738828713",
    "num_comments": 85,
    "comments_url": "https://news.ycombinator.com/item?id=42960144",
    "comments": [
      "I had the Dungeon Notebook. It was fun. I played it until I got bored, which was quick, then gave it away.The ability to \"give away\" these little games are part of the fun. I'd like to see a game like this where \"giving it away\" is part of the game. Something you can pass around a school or a con. Like an analog version of Chain World, which was a mini-Minecraft-on-a-USB-stick that you were supposed to pass on. (https://en.wikipedia.org/wiki/Chain_World )\n \nreply",
      "I've seen this in the wild: for sale at Gamescape in San Francisco.\n \nreply",
      "Subnautica has a somewhat related concept which is that at the end of the game you have the ability to send a single time capsule to the maps of new players. They contain text, a picture (taken with the in game camera), and a handful of items.It's a cute little feature that allows you to send something helpful (or just amusing) to the next generation of players.\n \nreply",
      "I got a little fish in my first capsule (along something useful that I can't remember, maybe a suit). I kept it the whole game, then passed it on in my own capsule. It's silly, but I still think about that fish.\n \nreply",
      "Sounds like a NetHack \"bones level\" that gets created when you die, and may appear in someone else's game.  Full of cursed items, of course.https://nethackwiki.com/wiki/Bones#Description\n \nreply",
      "Nothing like finding your own bones and being attacked by your ghost.\n \nreply",
      "Sounds like the nethack equivalent of seeing bad code, running  git blame\n\nand finding out it was me.\n \nreply",
      "Wait until you hear about PaperBooks. They're like a Kindle download except, once you finish reading one, you can give it to anyone else to read. And BookNotes are completely portable - anything you write in it stays with the PaperBook and can be read by any other person.\n \nreply",
      "This reminds me of a scene in Parks and Recreation where a local fashionista in a small town is pitching the latest evolution of almond milk and oat milk....beef milk.https://www.youtube.com/watch?v=SMIW2tBpnDI\n \nreply",
      "You're going to be blown away when you hear about DRM free eBooks and LibGen...\n \nreply"
    ],
    "link": "https://gladdendesign.com/collections/paper-apps",
    "first_paragraph": "\n                Free U.S. shipping on orders of $30 or more\nDelightfully simple and simply delightful, Paper Apps\u2122 are a fun, smart alternative to screen time. Check out our solo games like DUNGEON, GALAXY and GOLF, as well as gamified tools like TO\u2022DO and NUTRI\u2022TRACK. For the full experience, we recommend grabbing a couple of Pencil Dice as well!8 products\nThe highest price is We appreciate your support."
  },
  {
    "title": "Complex Systems and Quantitative Mereology (abeljansma.nl)",
    "points": 24,
    "submitter": "abelaer",
    "submit_time": "2025-02-05T14:06:44 1738764404",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://abeljansma.nl/2025/01/28/mereoPhysics.html",
    "first_paragraph": "\nJan 28, 2025\n      \u2022 Abel Jansma\n\nHave a look at these three rings:\nWhy are they connected? If you only consider two of the rings and ignore the third, then any pair can be smoothly separated. The triplet is connected and cannot be taken apart, but any description purely in terms of pairwise relationships would miss the fact that the three rings are connected.While the three rings above\u2014known as the Borromean rings\u2014are especially simple and symmetric, similar links can be created for any number of rings. Here are links of four and six rings, for example, that fall apart if a single ring is removed:I find this kind of magical. There seems to be a kind of \u2018top-down\u2019 causation: the behaviour of individual rings is restricted by the group as a whole, not by any individual. \n\nThe rings above are a simple example of a more general phenomenon known as \u2018higher-order structure\u2019 or \u2018emergence\u2019. These two terms are often used in an imprecise way. Imprecise use of \u2018emergence\u2019 does not bother me s"
  },
  {
    "title": "Steve Meretzky \u00e2\u20ac\u201c Working with Douglas Adams on the Hitchhiker's Guide (spillhistorie.no)",
    "points": 53,
    "submitter": "Retrogamingpap",
    "submit_time": "2025-02-05T10:53:02 1738752782",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=42946752",
    "comments": [
      "For it's 30th anniversary, the BBC released a free to play version:\nhttps://www.bbc.co.uk/h2g2gameIt is not easy; but there are hints!\nhttps://www.bbc.co.uk/programmes/articles/3tmVKGc4dR463kWs0g...\n \nreply",
      "Related reading, Andy Baio's article from 2008 digging into the contents of a hard drive from Infocom:https://waxy.org/2008/04/milliways_infocoms_unreleased_seque...\n \nreply",
      "We talked with the designer behind games such as The Hitchhiker\u2019s Guide to the Galaxy, A Mind Forever Voyaging and Leather Goddesses of Phobos.American game designer Steve Meretzky startet his career at Infocom, where he created some of the great adventure classics of the eighties. For instance, it was he who got the task of making the official Hitchhiker\u2019s Guide to the Galaxy game together with author Douglas Adams, a game that became a massive bestseller and is still remembered for its great jokes and devilish puzzles.\n \nreply",
      "This was such a fun read.The photo of Douglas Adams laying face down is just perfect.\n \nreply",
      "Here's a great interview with Steve where he goes over his life story & favourite video games https://shows.acast.com/my-perfect-console/episodes/steve-me...\n \nreply",
      "> Douglas, procrastinator that he was, was already a year past his deadline for delivering the manuscript for So Long And Thanks For All The Fish to his publisher \u2026 and he hadn\u2019t yet written a word.Jesus, I feel anxious just reading that.\n \nreply",
      "My favourite quote from Douglas Adams\n\u201c I love deadlines. I like the whooshing sound they make as they fly by.\u201d\n \nreply",
      "Other related reading, the excellent piece from the Digital Antiquarian :https://www.filfre.net/2024/07/the-later-years-of-douglas-ad...\n \nreply"
    ],
    "link": "https://spillhistorie.no/qa-with-game-designer-steve-meretzky/",
    "first_paragraph": "We talked with the designer behind games such as The Hitchhiker\u2019s Guide to the Galaxy, A Mind Forever Voyaging and Leather Goddesses of Phobos.American game designer Steve Meretzky startet his career at Infocom, where he created some of the great adventure classics of the eighties. For instance, it was he who got the task of making the official Hitchhiker\u2019s Guide to the Galaxy game together with author Douglas Adams, a game that became a massive bestseller and is still remembered for its great jokes and devilish puzzles.But this wasn\u2019t his only success. Games like the sci-fi adventure Planetfall from 1983 and the risque comedy Leather Goddesses of Phobos fram 1986 were very well received by both critics and buyers, and with the fascinating A Mind Forever Voyaging he helped change the ideas of what games could be. After Infocom, he did the well received Spellcasting series as well as the unique role-playing game Superhero League of Hoboken for Legend Entertainment. His final major adven"
  },
  {
    "title": "How to prove false statements? (Part 1) (cryptographyengineering.com)",
    "points": 31,
    "submitter": "feross",
    "submit_time": "2025-02-04T21:47:12 1738705632",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=42939312",
    "comments": [
      "and for those who already saw this first post, part 2 was published today: https://blog.cryptographyengineering.com/2025/02/06/how-to-p...\n \nreply",
      "Here's how - just say:This statement is false.https://en.m.wikipedia.org/wiki/Liar_paradox\n \nreply"
    ],
    "link": "https://blog.cryptographyengineering.com/2025/02/04/how-to-prove-false-statements-part-1/",
    "first_paragraph": "\nMy academic website\nBlueSky\nMastodon\nTwitter\nTop Posts\nUseful crypto resources\n\nBitcoin tipjar\nCryptopals challenges\nApplied Cryptography Research: A Board\nJournal of Cryptographic Engineering\n(not related to this blog)\nJournal of Cryptographic Engineering\n(not related to this blog)Trigger warning: incredibly wonky theoretical cryptography post (written by a non-theorist)! Also, this will be in two parts. I plan to be back with some more thoughts on practical stuff, like cloud backup, in the near future.If you\u2019ve read my blog over the years, you should understand that I have basically two obsessions. One is my interest in building \u201cpractical\u201d schemes that solve real problems that come up in the real world. The other is a weird fixation on the theoretical models that underpin (the security of) many of those same schemes. In particular, one of my favorite bugaboos is a particular model, or \u201cheuristic\u201d, called the random oracle model (ROM) \u2014 essentially a fancy way to think about hash fu"
  },
  {
    "title": "Show HN: An homage to Tom Dowdy's 1991 screensaver, \"Kaos\" (thestrikeagency.com)",
    "points": 102,
    "submitter": "noduerme",
    "submit_time": "2025-02-06T15:35:32 1738856132",
    "num_comments": 52,
    "comments_url": "https://news.ycombinator.com/item?id=42963346",
    "comments": [
      "Your description plus the name makes me suspect the original program was rendering a variety of \"hopalong fractals\": https://jolinton.co.uk/Mathematics/Hopalong_Fractals/Text.pd...I miss having a wide selection of screensavers on my Mac. Nobody's writing new ones that properly plug into the system screensaver framework, everything on the App Store is just a little program that wants to run in the background, almost all my old .savers quit working and the ones that do still work have terrible framerates, and the ability to cram a Quicktime composition into the savers directory is long gone. Having some bit of procedural art on my screen was just nice.\n \nreply",
      "The Mac screensaver ecosystem's going through some interesting shifts in recent years. The permissions and stated capabilities of 3rd party software are much more delineated now, but screensaver modules are architected in an old NeXTSTEP kind of way, where software you trust loads and runs software you don't.It's not visible to end users, but nowadays, Apple-authored screensavers use a private framework, and 3rd party screensavers use the traditional framework. Sometimes the traditional framework hiccups. Because these aren't essential programs, presumably they are lower priority, so it may be a while before things settle:https://github.com/AerialScreensaver/ScreenSaverMinimal?tab=...https://github.com/AerialScreensaver/ScreenSaverMinimal/wiki...Nevertheless, here are a few more contemporary offerings:https://github.com/agarrharr/awesome-macos-screensaversAnd here's mine from last year! Got another one in the works.https://github.com/Rezmason/Iconic\n \nreply",
      "Hey, first of all, it's awesome to hear that. I miss screen savers and procedural animation so much... I mean, I used to zone out on them for hours, and try to write my own as a kid. It was a lot of fun. I realize the world has no need for them anymore, but I still like them. I'm not sure how we got to a point where there's only one basic screen saver for the Mac and it's almost impossible to find anything else.I hadn't heard of hopalong fractals, but this code implements something very similar. Conceptually, if you scan the whole image space at each iteration and, for each lit pixel you light up another random pixel at half the brightness within a certain radius, things will begin to trend in one direction. Because if the first one you light happens to be off to the left, then there's double the probability that the next will be at least that far to the left, and then the leftward spread becomes exponentially more likely in the following iterations. I haven't actually encountered spiral arms in this, but maybe following hopalongs will be my next saver ;) There's a lot you can do with a little code here. You can warp the space you want to light up, or over/under light certain things, re-amplify, or run a fader on the entire screen in a few bytes. The possibilities are endless. But it's kind of like...how do I make a thing that looks like that? The fun part, for me, of making a screen saver or any procedural art is cooking with very few ingredients and lots of limitations.\n \nreply",
      "> I miss having a wide selection of screensavers on my Mac.i've used https://www.jwz.org/xscreensaver/ for over a decade on macos (currently on 15.3).\n \nreply",
      "You can't link to Jwz directly from hn, because jwz is a man-childhttps://www.google.com/url?sa=t&source=web&rct=j&url=https:/...\n \nreply",
      "That's weird, the site loads fine for me (macOS with Safari).  Is it supposed to redirect elsewhere if it's clicked on hacker news?Edit: I tried it on Firefox and Chrome, and it does indeed redirect to that ... image.  But it doesn't do so with Safari (latest version, latest macOS).  What is Safari doing differently?  Not passing along the referrer?\n \nreply",
      "If your HTTP referer is HN, it redirects to https://cdn.jwz.org/images/2024/hn.png\n \nreply",
      "Rumor has it that photo is of one of JWZ's actual testicles, which he had removed and photographed just to spite HN, long before AI image generation was a thing. He's such a dedicated troll!\n \nreply",
      "Uh... that link has an interesting redirect.\n \nreply",
      "I know what's coming and it still makes me laugh every time.\n \nreply"
    ],
    "link": "https://thestrikeagency.com/kaos/",
    "first_paragraph": ""
  },
  {
    "title": "Scala 3 Migration: Report from the field (pierre-ricadat.com)",
    "points": 131,
    "submitter": "AzzieElbab",
    "submit_time": "2025-02-06T17:54:50 1738864490",
    "num_comments": 61,
    "comments_url": "https://news.ycombinator.com/item?id=42964773",
    "comments": [
      "Scala used to be my hobby / enthusiast language. Introduced to it through a college course, and used a bit through school. Later, I would use it for Advent of Code, tinkered with a Scala Play webapp, and dream about using it professionally. Rust has almost completely filled that void now. Rust is native, I'm not waiting on the 1.0 release of `scala-native` anymore. The community around Rust seems to be enthusiastic and growing, as opposed to languishing for Scala. I hold some reservations about Rust in terms of how complicated it is. Despite having used it for an amount of time that I would be feeling comfortable in most languages, I am still not comfortable and continually encounter _stuff I don't understand_.RIP Scala, I will miss you! You showed me the joy of pattern matching, functional OO, currying, how to use `map` `flatMap` `fold`, etc. All things with continued influence! <3\n \nreply",
      "> Scala Play webappI feel like the biggest misstep that the Scala ecosystem and Typesafe/Lightbend did was that they didn't invest more in Play Framework. 10 or 12 years ago, Play had a lot of energy and momentum, and it's a kind of thing that has broad enterprise/start up appeal. But focus was always more on Akka and what seemed like really niche architecture astronaut stuff like Actors and Actor System Clusters and Event Sourcing etc, rather than getting the basics to be super ergonomic or productive.If they had keep just making Play Framework better and better and focusing on the practical problems that every web service faces, they could be in a similar great position as Laravel is in today or any of the many Rails/Laravel consultancies.\n \nreply",
      "> I feel like the biggest misstep that the Scala ecosystem and Typesafe/Lightbend did was that they didn't invest more in Play Framework. 10 or 12 years ago, Play had a lot of energy and momentum, and it's a kind of thing that has broad enterprise/start up appeal. But focus was always more on Akka and what seemed like really niche architecture astronaut stuff like Actors and Actor System Clusters and Event Sourcing etc, rather than getting the basics to be super ergonomic or productive.I'd say the opposite. They pushed Play a lot. But it was never a killer app, and it never even really leveraged the strengths of Scala.People and especially companies don't switch languages for \"super ergonomic and productive\". They switch because they want to do something they can't do in their current language. I'm not a fan of Akka or Actors, but it made for some incredible demos that you really couldn't do in anything else except Erlang.\n \nreply",
      "That is correct.Play's hype did more harm than good. I work at a company that has many legacy projects in Scala because we were/are heavily invested in Spark, and Play is a disaster overall.\n \nreply",
      "Totally agree. I wrote a few Play apps way back when and really enjoyed it. I was so excited about the future of the framework and how it would beat out Java for web apps, and steal folks away from the Rails ecosystem.And then it just\u2026stopped. Not sure what happened there honestly.\n \nreply",
      "I thought I was reading my own story! same here... 10 years of Scala 2.xx till it was Scala 3 that caused my withdrawal, and that infinite waiting for scala-native... killed my interest. Now, and for the foreseeable future, it is Rust.I had a look at Mojo, love it, but I am no longer interested in OO (used OO for 20+ years and I figured I am no more interested).EDIT: even John DeGoes (the ZIO guy) left Scala for similar reasons, now I just remembered, and prefers Rust over it... I love what they are doing with their Golem Cloud.\n \nreply",
      "It depends on what you want to do, of course, but for back end servers the Rust ecosystem is relatively immature.  There is nothing comparable to ZIO in Rust world, for example.\n \nreply",
      "I have been writing Scala and Rust everyday for the last few years.I actually don\u2019t see the two overlapping all that much. Rust is a terrible backend language compared to Scala/JVM. When you are dealing with real world concurrency i.e. error/thread management Rust\u2019s memory management model becomes unusably complex very quickly. And the entire ecosystem lacks maturity i.e. the majority of libraries I use are not at version 1.Whereas from Scala you can just use any Java library e.g. Vertx, Spring almost all of which have commercial, enterprise support and continue to be proven time and time again. It almost always just works.Rust\u2019s strength is in desktop apps e.g. Tauri and low-level programming.\n \nreply",
      "> When you are dealing with real world concurrency i.e. error/thread management Rust\u2019s memory management model becomes unusably complex very quicklyI've seen this several times, but having built several highly concurrent applications in Rust, I just don't agree. Building a concurrent Rust application the wrong way is certainly complex, but if you know how Rust's strong opinions on how to structure an application work, it's downright pleasant.Except async. Rust's async story still sucks and should be avoided as much as possible.\n \nreply",
      "> And the entire ecosystem lacks maturity i.e. the majority of libraries I use are not at version 1.I'm marginally bothered by the reluctance to bite the bullet and accept a 2.0 will happen in the future, but version numbers do not make for mature libraries. There are plenty of foundational libraries written in C keeping Linux desktops running that are permanent 0.x versions.> Whereas from Scala you can just use any Java library e.g. Vertx, Spring almost all of which have commercial, enterprise support and continue to be proven time and time again.I find that \"wide and storied library ecosystem\" can be a double edged sword: an old library can either be battle-tested, or just old (with cruft or poor design or implementation) and you can't always tell which it is ahead of time. This is true for libraries in any language, and the same thing will happen to Rust in 10 years.\n \nreply"
    ],
    "link": "https://blog.pierre-ricadat.com/scala-3-migration-report-from-the-field",
    "first_paragraph": "Photo by Chris Briggs on Unsplash16 min readApril 30, 2024. I decided to dedicate a week to migrate our main project at work (a multiplayer mobile game server in production for over 4 years) from Scala 2.13 to Scala 3.May 7, 2024. I gave up. The removal of several features from Scala 3 (macro annotations, type projections, etc.), combined with the large number of changes necessary for the migration, was overwhelming. I was barely able to migrate a single module, had to modify thousands of lines of code (while my colleagues were adding new features to the main branch, a large number of merge conflicts were already appearing), and the IDE was completely unresponsive due to hundreds of compile errors. At that point, I thought the project might be stuck on Scala 2 forever.Flash forward to January 2025. I had a little free time, so I decided to give it another try. And (spoiler!) this time I made it to the end. Let\u2019s see what the various problems I encountered were, the changes I had to mak"
  },
  {
    "title": "Verse (YC W22) Is Hiring",
    "points": 0,
    "submitter": "",
    "submit_time": "2025-02-06T21:00:23 1738875623",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "item?id=42966455",
    "first_paragraph": ""
  },
  {
    "title": "Elastic Binary Trees (2011) (wtarreau.blogspot.com)",
    "points": 15,
    "submitter": "tosh",
    "submit_time": "2025-02-05T13:08:40 1738760920",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=42947973",
    "comments": [
      "For the problem this was designed for, what this is missing is an argument for why this is better than a heap with a last-resort ordering trivially added. (If you're not using this for a scheduler of course a heap doesn't make sense.)Note that C padding can be unfortunate here; for some types (but not when `sizeof(key) == sizeof(pointer)`) it may make sense to pack `bit` (in the generic struct; this does not need a whole `int` even) and `key` (in the type-specific struct) into the same word. I think `bit` needs `bitsizeof(key) + bitsizeof(max_dups)` values, so you only need 7 bits (log2(64+64)) at most (hmm, that's almost small enough to try cramming into the low bits of the pointers again ...).I forget if pointer-bit stuffing is actually defined in C, or if you should be using `uintptr_t`. Debugging is probably saner if you do regardless.It appears that this is intended to be used intrusively (in which case the value also needs to think about padding), but this completely fails to use the appropriate vocabulary. In fact, I think that might be the only difference between this and a typical bit-oriented radix trie? If so, Wikipedia is completely correct to delete this, since in general any node-based container can be made intrusive quite trivially.Using absolute indexes (against a known origin) is probably saner than relative-pointers if you have something simple enough, since it lacks the problem of moving/copying.Despite those considerations, this is definitely worth reading if you're interested in data structures (unlike some articles that get posted occasionally, which can be blogspam or outright incorrect).\n \nreply",
      "Related. Others?Ebtrees: Elastic Binary Trees (2011) - https://news.ycombinator.com/item?id=20007752 - May 2019 (8 comments)\n \nreply"
    ],
    "link": "http://wtarreau.blogspot.com/2011/12/elastic-binary-trees-ebtree.html",
    "first_paragraph": "Brain dumps. Reports about experiments, ideas, and various stuff that's more useful on the net than written on paper stacked on my desk.It is not very clear how this is better than the radix tree. Please elaborate on that. Why would the allocations and deletions be lesser here?With a normal radix tree, the allocation will depend on whether the value you want to add already exists or not. Each node will typically be a list head to which you attach all nodes having an identical value. Depending on how your radix tree is built, you may even have to allocate the intermediary nodes and the leaf nodes separately. Here the approach is different, you allocate one item which contains both the node and the leaf, and you can use these two parts to plug it anywhere into an existing tree, even supporting duplicated values if needed.Are there any benchmarking studies? I stumbled on this recently. I am especially interested n the longest prefix matching applications. Not that I'm aware. I used to do "
  },
  {
    "title": "Trails of Wind (2019) (figures.cc)",
    "points": 9,
    "submitter": "matthberg",
    "submit_time": "2025-02-06T22:27:22 1738880842",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=42967146",
    "comments": [
      "There's something weird for the rendering of the runways on my machine.  For example, IAD's 1L/19R is grey while 1L/19C and 1L/19R both show up blue, as expected.  12/30 is the proper yellow.\n \nreply",
      "Related:Trails of Wind: Data Visualization of the Architecture of Airport Runways - https://news.ycombinator.com/item?id=20757801 - Aug 2019 (33 comments)(Reposts are fine after a year or so; links to past threads are just to satisfy extra-curious readers!)\n \nreply"
    ],
    "link": "https://trailsofwind.figures.cc/",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: An API that takes a URL and returns a file with browser screenshots (github.com/us-artificial-intelligence)",
    "points": 111,
    "submitter": "gkamer8",
    "submit_time": "2025-02-06T18:48:05 1738867685",
    "num_comments": 69,
    "comments_url": "https://news.ycombinator.com/item?id=42965267",
    "comments": [
      "For anyone who might not be aware, Chrome also has the ability to save screenshots from the command line using:\nchrome --headless --screenshot=\"path/to/save/screenshot.png\" --disable-gpu --window-size=1280,720 \"https://www.example.com\"\n \nreply",
      "Quick note: when trying to do full page screenshots, Chrome does a screenshot of the current view, then scrolls and does another screenshot. This can cause some interesting artifacts when rendering pages with scroll behaviors.Firefox does a proper full page screenshot and even allows you to set a higher DPS value. I use this a lot when making video content.Check out some of the args in FF using: `:screenshot --help`\n \nreply",
      "I've been having trouble figuring out the best way to make a full page pdf. It's really useful on MacOS and iOS. If you want something self contained, but preserves rich text and images without the useless page breaks.I was able to throw something together with node and puppet, but it still doesn't work as reliably as just Safari.I'm not sure why this isn't more popular. If you were happy with pdfs as an archiving format anyway, why not have it be continuous? You can very easily insert the breaks back in if you want.Almost everything I could find was either stitching together A4 pages, or OCRing a full page screenshot.EDIT: Actually, I just found someone who made something very similar to my project: https://github.com/OAguinagalde/single_page_pdf_maker\n \nreply",
      "That's not the behavior I'm seeing (with Puppeteer). Any elements positioned relative to the viewport stay within the area specified by screen size (eg. 1200x800) which is usually the top of the page. If the browser would scroll down these would also move down (and potentially appear multiple times in the image). Also intersection observers which are further down on the page do not trigger when I do a full-page screenshot (eg. an element which starts animation when it enters into the viewport).\n \nreply",
      "Where would you type that command in?\n \nreply",
      "I mean, if you have some of those annoying \"hijack scrolling and turn the page into some sort of interactive animation experience\" sites, I don't think \"full page\" would even be well-defined.\n \nreply",
      "Firefox equivalent:    firefox -screenshot file.png https://example.com --window-size=1280,720\n\nA bit annoyingly, it won't work if you have Firefox already open.\n \nreply",
      "Does it work if you use a different profile with -p?\n \nreply",
      "Maybe with --no-remote\n \nreply",
      "> it won't work if you have Firefox already opennow try and go ahead how you could isolate these instances so they cannot see each other. this leads into a rabbit hole of bad design.\n \nreply"
    ],
    "link": "https://github.com/US-Artificial-Intelligence/scraper",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A self-hosted API that takes a URL and returns a file with browser screenshots.\n      You run the API on your machine, you send it a URL, and you get back the website data as a file plus screenshots of the site. Simple as.This project was made to support Abbey, an AI platform. Its author is Gordon Kamer.Some highlights:This web scraper is resource intensive but higher quality than many alternatives. Websites are scraped using Playwright, which launches a Firefox browser context for each job.You should have Docker and docker compose installed....and the service will be available at http://localhost:5006. See the Usage section below for details on how to interact with it.You may set an API key using a .env file inside the /scraper folder (same level as app.py).You can set as many API keys as you'd like; allowed API keys are those that"
  },
  {
    "title": "Show HN: ArXivTok (arxivtok.vercel.app)",
    "points": 64,
    "submitter": "Miguel07Code",
    "submit_time": "2025-02-05T12:59:50 1738760390",
    "num_comments": 37,
    "comments_url": "https://news.ycombinator.com/item?id=42947875",
    "comments": [
      "It looks great. But it's missing one critical feature of \"fast-food\" apps like TikTok: the content is not easily digestible. Which is understandable, because scientific papers are dense.Maybe a good idea would be to parse the abstract through an LLM to make it more understandable (maybe caching the results so it's not expensive)? Maybe also using some standard style, like starting with a couple of \"dumbed-down\" sentences of the article for the non-expert, and progressively explaining better.\n \nreply",
      "Mm maybe running a local LLM for doing it would be a great idea, I'll try to do that and if it doesn't work well, I'll consider doing it with an API.\n \nreply",
      "Please don't follow the original comments suggestion; I feel that \"easily digestible\" is not compatible with what makes the idea shine in the first place. \nYour suggestion delegating such functionality to a local LLM is quite nice as a choice but adding it as a core functionality is quite antithetical to leverage the arXiv part, without which everything reverts back to a bland and generic whateverTok format.Although the suggestion seems to be aware of the fact and provides both a good reasoning and a quite good solution (progressively deepening explanations), the implicit information and nuance lost in a summary by an unreliable LLM would undeniably turn this from a useful and interesting idea to a cool party trick no one uses for more than 5 minutes.\n \nreply",
      "Thanks for the feedback, I think that it would be like having 2 modes with a toggle: unhingered summaries from local LLMs or the real summaries.\n \nreply",
      "Cool :) I am a scientist, so having an easier way to parse the abstracts would be most welcome. Keep up the good work.\n \nreply",
      "Thanks! I'll text you here when I add the feature. It wouldn't be core, so I think that having two modes where you can read easily papers with LLms or not will be of great help.\n \nreply",
      "Great idea!  The scrolling is a bit broken though.  I can't scroll down the text on my trackpad without it going to the next article, and also it just a lot of articles with a tiny movement of the trackpad.Otherwise it's a really fun idea!  Can I suggest you also scrape from https://www.medrxiv.org/?  This is where a lot of medical research preprints, not arxiv\n \nreply",
      "I added now the MedRxiv API, you can try it out and tell me if you notice something weird.\n \nreply",
      "I saw that medrxiv has an API so I'll add it too!About the behaviour of the scroll it's a bit buggy haha but I'll try to fix that, thanks for the feedback.\n \nreply",
      "Funny to think this is actually kind of similar to how ByteDance got their start. One of their first apps is called \"Today's headlines\", which is basically the TikTok format, but instead of short videos you are scrolling news article.\n \nreply"
    ],
    "link": "https://arxivtok.vercel.app/",
    "first_paragraph": "Discover research, swipe by swipeTry adjusting your search filters or try a different query"
  },
  {
    "title": "Show HN: Heap Explorer (github.com/heap-exploitation)",
    "points": 40,
    "submitter": "bkallus",
    "submit_time": "2025-02-06T04:54:18 1738817658",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=42959226",
    "comments": [
      "Can you modify this to listen to a signal (e.g. SIGUSR) instead, for triggering the REPL?\n \nreply",
      "I went with SIGINT because it's more fun to press ctrl-c than to pgrep and kill. If you'd rather use SIGUSR1, just change SIGINT to SIGUSR1 line 654.\n \nreply",
      "OK. RTFM. You already did! Wonderful.\n \nreply"
    ],
    "link": "https://github.com/heap-exploitation/heap-explorer",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        LD_PRELOADable library for exploring the glibc heap\n      Heap Explorer is an LD_PRELOADable library that exports only 1 function:explore_heap starts a REPL that allows the user to perform a few different actions, such as freeing chunks, mallocing chunks, printing freelists, etc.libheap_explorer.so installs explore_heap as the SIGINT handler at load time, so you can do stuff like this:This library has been tested only on programs using Arch's glibc package, version 2.41+r2+g0a7c7a3e283a-1.\nIt's pretty easy to port to other modern versions of glibc; just change the *_OFFSET constants in heap_explorer.c.You shouldn't :)\n        LD_PRELOADable library for exploring the glibc heap\n      "
  }
]