[
  {
    "title": "MCP-B: A Protocol for AI Browser Automation (mcp-b.ai)",
    "points": 91,
    "submitter": "bustodisgusto",
    "submit_time": "2025-07-09T22:37:17 1752100637",
    "num_comments": 47,
    "comments_url": "https://news.ycombinator.com/item?id=44515403",
    "comments": [
      "> If I asked you to build a table and gave you a Home Depot you probably would have a harder time than if I gave you a saw, a hammer and some nails.I doubt that, first and not least because Home Depot stocks lumber.reply",
      "Fixed. Nice catchreply",
      "The contributions for the Github project is quite intriguing: https://github.com/MiguelsPizza/WebMCP/graphs/contributorsMiguelsPizza | 3 commits | 89++ | 410--claude | 2 commits | 31,799++ | 0--reply",
      "I did some git history re-visioning when I closed sourced the extension for a bit. So these are not super accurate. Claude code did write about 85% of the code though.reply",
      "Nice!reply",
      "I was checking that out too. Looks like claude was co-author on the initial commit, which is like 90%.https://github.com/MiguelsPizza/WebMCP/commit/26ec4a75354b1c...reply",
      "Claude's contributions graph is interesting. What is going on here? Does Claude Code commit as itself sometimes, but extremely rarely? I don't understand.https://github.com/claudereply",
      "If you ask it to commit it'll sign itself as the author.reply",
      "But then, how are there so few commits in its profile graph? I suppose I may be admitting my ignorance of how public GitHub works, but still curious.reply",
      "That doesn't look right... if you look at the actual commits, they are all fromMiguelsPizza / Alex Nahashttps://github.com/MiguelsPizza/WebMCP/commits/main/reply"
    ],
    "link": "https://mcp-b.ai/",
    "first_paragraph": ""
  },
  {
    "title": "Biomni: A General-Purpose Biomedical AI Agent (github.com/snap-stanford)",
    "points": 136,
    "submitter": "GavCo",
    "submit_time": "2025-07-09T19:20:08 1752088808",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=44513843",
    "comments": [
      "Interesting. It's just an agent loop with access to python exec and web search as standard, BUT with premade, curated, 150 tools like analyze_circular_dichroism_spectra, with very specific params that just execute a hardcoded python function. Also with easy to load databases that conform to the tools' standards.The argument is that if you just ask claude code to do niche biomed tasks, it will not have the knowledge to do it like that by just searching pubmed and doing RAG on the fly, which is fair, given the current gen of LLM's. It's an interesting approach, they show some generalization on the paper(with well known tidy datasets), but real life data is messier, and the approach here(correct me if im wrong) is to identify the correct tool for a task, and then use the generic python exec tool to shape the data into the acceptable format if needed, try the tool and go again.It would be useful to use the tools just as a guidance to inform a generic code agent imo, but executing the \"verified\" hardcoded tools narrows the error scope, as long as you can check your data is shaped correctly, the analysis will be correct.  Not sure how much of an advantage this is in the long term for working with proprietary datasets, but it's an interesting directionreply",
      "This is nice, a lot of possibilities regarding AI use for scientific research.There is also the possibility of building intelligent workspaces that could prove useful in aiding scientific research:https://news.ycombinator.com/item?id=44509078reply",
      "I'm sure they've thought of this but curious how it fared on evaluations for supporting biological threats, ie elevating threat actor capabilities with respect to making biological weapons.I'm personally sceptical that LLMs can currently do this (and it's based on Claude that does test this) but still interesting to see.reply",
      "Creating a biological weapon requires a whole bunch of unique and specialised skills, equipment, safety measures (so you don't infect/kill yourself/your people) and even multidisciplinary skill sets. Take for example the Kameido (Japan) incident by the Aum Shinrikyo cult/religious group [1]. Same group which committed the Sarin attack [2].> The use of an attenuated B. anthracis strain, low spore concentrations, ineffective dispersal, a clogged spray device, and inactivation of the spores by sunlight are all likely contributing factors to the lack of human cases.Now you may say, that's bacteria, what about viruses? A similar set of problems would arise, how do you successfully grow virus to high titers? Even vaccine companies struggle to do this with certain viruses. Then the issue of dispersal, infectivity and mortality arise (too quick, it kills the host without spreading and authorities will notice, too slow, same problem: authorities will notice). I haven't even mentioned biological engineering which requires years of technical knowledge and laboratory experience combined with a intimate knowledge of the organism you're working with.What worries me the most is nature springing a new influenza subtype. Our farming practices, especially in developing countries, is bound to breed a new subtype. It happened in 2009 (H1N1pdm) and it is bound to happen again. We got lucky with H1N1pdm.1. https://pmc.ncbi.nlm.nih.gov/articles/PMC3322761/\n2. https://en.wikipedia.org/wiki/Tokyo_subway_sarin_attackreply",
      "Awesome!  This is the type of stuff I'm most excited about with AI - improvements to medical research and capabilities.  AI can be awesome at identifying patterns in data that humans can't, and there has to be troves of data out there full of patterns that we aren't catching.Of course there's also the possibility of engineering new drugs/treatments and things, which is also super exciting.reply",
      "Agreed. There is deep potential for ML in healthcare. We need more contributors advancing research in this space. One opportunity as people look around: many priors merit reconsideration.For instance, genomic data that may seem identical may not actually be identical. In classic biological representations (FASTA), canonical cytosine and methylated cytosine are both collapsed into the letter \"C\" even though differences may spur differential gene expression.What's the optimal tokenization algorithm and architecture for genomic models? How about protein binding prediction? Unclear!There are so many open questions in biomedical ML.The openness-impact ratio is arguably as high in biomedicine as anywhere else: if you help answer some of these questions, you could save lives.Hopefully, awesome frameworks like this lower barriers and attract more people.reply",
      "I wonder if giving 150+ tools is really a good idea considering context limitations. Need to check out if this works IRL.reply",
      "There's an inner ToolRetriever which is a LLM call to select the most relevant tools/data/libraries.reply",
      "This is great, I've been on the waitlist for their website for a while and am now excited to be able to try it out!reply",
      "Very interesting work!If biomedical research and paper analysis is of interest to you, I've been working on a set of open source projects that enable RAG over medical literature for a while.PaperAI: https://github.com/neuml/paperaiPaperETL: https://github.com/neuml/paperetlThere is also this tool that annotates papers inline.AnnotateAI: https://github.com/neuml/annotateaireply"
    ],
    "link": "https://github.com/snap-stanford/Biomni",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Biomni: a general-purpose biomedical AI agent\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBiomni is a general-purpose biomedical AI agent designed to autonomously execute a wide range of research tasks across diverse biomedical subfields. By integrating cutting-edge large language model (LLM) reasoning with retrieval-augmented planning and code-based execution, Biomni helps scientists dramatically enhance research productivity and generate testable hypotheses.Our software environment is massive and we provide a single setup.sh script to setup.\nFollow this file to setup the env first.Then activate the environment E1:then install the latest biomni package:Or install from the github source version.Lastly, configure your API keys in bash pr"
  },
  {
    "title": "Tree Borrows (ethz.ch)",
    "points": 404,
    "submitter": "zdw",
    "submit_time": "2025-07-09T14:40:24 1752072024",
    "num_comments": 61,
    "comments_url": "https://news.ycombinator.com/item?id=44510600",
    "comments": [
      "Recent blog post from Ralf Jung providing some extra context: https://www.ralfj.de/blog/2025/07/07/tree-borrows-paper.htmlBonus: recent talk from Ralf Jung on his group's efforts to precisely specify Rust's operational semantics in executable form in a dialect of Rust: https://youtube.com/watch?v=yoeuW_dSe0oreply",
      "The Stacked Borrows mentioned had threads in 2020 and 2018https://news.ycombinator.com/item?id=22281205https://news.ycombinator.com/item?id=17715399reply",
      "> On the one hand, compilers would like to exploit the strong guarantees of the type system\u2014particularly those pertaining to aliasing of pointers\u2014in order to unlock powerful intraprocedural optimizations.How true is this really?Torvalds has argued for a long time that strict aliasing rules in C are more trouble than they're worth, I find his arguments compelling. Here's one of many examples: https://lore.kernel.org/all/CAHk-=wgq1DvgNVoodk7JKc6BuU1m9Un... (the entire thread worth reading if you find this sort of thing interesting)Is Rust somehow fundamentally different? Based on limited experience, it seems not (at least, when unsafe is involved...).reply",
      "I would agree that C's strict aliasing rules are terrible. The rules we are proposing for Rust are very different. They are both more useful for compilers and, in my opinion, less onerous for programmers. We also have an actual in-language opt-out: use raw pointers. And finally, we have a tool you can use to check your code.But in the end, it's a trade-off, like everything in language design. (In life, really. ;)  We think that in Rust we may have found a new sweet spot for this kind of optimizations. Time will tell whether we are right.reply",
      "As someone who has been writing a lot of unsafe Rust (mostly in an embedded context), I'm thrilled about and thankful for the work that you, your students, and the opsem team are doing.When you're working with anything below the application level, C's confusing and underspecified rules about UB are almost impossible to keep track of, especially when it comes to aliasing and volatile/MMIO. The spec is so difficult to read and full of complicated cross-references that to actually get a practical answer you have to look for a random Stack Overflow post that may or may not have a correct interpretation of the spec, and may or may not address your specific problem.Rust right now feels a lot harder to work with, because the spec isn't done. When you have a concrete question about a piece of code, like \"is this conversion from an &mut to a *mut and back sound\", and you try to look for documentation on it, you get either \"Nobody knows, Rust aliasing model isn't defined\"; a hand-wavy explanation that is not rigorous or specific; or a model like Stack Borrows or Tree Borrows that's defined a little too formally for easy digestion :)But when I really started digging, I realized just how much cleaner Rust's semantics are. References aren't actually hard, Tree Borrows basically boils down to \"while an &mut reference is live, you can only access the value through pointers or references derived from that reference\". Pointer operations have straightforward semantics, there's no confusing notions of typed memory, and no UB \"just because\" for random things like integer overflow. It's just so much less complicated to understand than C's abstract machine.I'm really looking forward to things like MiniRust, and to an aliasing model making it into the Reference / other documentation, because at that point I feel like unsafe Rust will be way easier to write confidently and correctly than C.Congrats on the publication, and thanks again for the work you all have put into this.reply",
      "Agreed about C's aliasing rules. Fortran had a better set of defaults.reply",
      "Rust's aliasing rules are very different from C's.In C you have a nuclear `restrict` that in my experience does anything only when applied to function arguments across clang & gcc, and type-based aliasing which is both not a generally-usable thing (don't have infinite different copies of the int64_t type (and probably wouldn't want such either)), and annoying (forces using memcpy if you want to reinterpret to a different type).Whereas with Rust references you have finely-bounded lifetimes and spans and mutability, and it doesn't actually care about the \"physical\" types, so it is possible to reinterpret memory as both `&mut i32`/`&i32` and `&mut i64`/`&i64` and switch between the two for the same memory, writing/reading halves of/multiple values by the most bog standard Rust safe reads & writes, as long as the unsafe abstraction never gives you overlapping `&mut` references at the same time, or split a `&mut` into multiple non-overlapping `&mut`s.reply",
      ">How true is this really?I\u2019d be interested to see a more thorough analysis, but there is a simple way to gauge this - rip out all the parts of the compiler where aliasing information is propagated to LLVM, and see what happens to performance.I found a claim that noalias contributes about 5% performance improvement in terms of runtimes[0], though the data is obviously very old.https://github.com/rust-lang/rust/issues/54878#issuecomment-...reply",
      "> I found a claim that noalias contributes about 5% performance improvementNote that that comment is implying a range, from 0% improvement on some benchmarks to 5% improvement on others. It suggests that 5% is generally in the ballpark of the upper bound of what you should expect from putting noalias on mutable references, but that some specific cases could see better results.reply",
      "Take anything Linus says about compilers with a grain of salt--he writes OS kernels, not compilers, and those are pretty different domains.Alias analysis is extremely important for getting good performance these days--but it should also be remembered that the biggest benefits accrue from the simplest heuristics (like two loads that use the same SSA value as the pointer must alias each other). In LLVM terms, that's BasicAA: a collection of very simple heuristics that primarily amounts to \"if we can track down the allocation sites of objects, we can definitively resolve these alias queries; otherwise, we don't know.\"The real question that you're trying to ask, though, is what is the value of alias analyses that go beyond the most basic, obvious tests. At the point where the alias queries are no longer trivial to solve, then it's generally the case that what you can do as a result of those queries also shrinks dramatically, pretty much to looking for code motion hazards, and the benefits you get from that are much reduced. One of the experiments I would like to do is measure the total speedup you'd get from a theoretically perfect alias analysis, and my guess is that it's somewhere in the 20% range even on non-HPC code like the Linux kernel [1].[1] This doesn't account for the heroic optimizations, such as data-layout transformations, that you wouldn't attempt to write without a very high-quality alias analysis. But since we already know that alias analysis doesn't exist in practice, we're not going to attempt those optimizations anyways, so it's not worth including such stuff in prospective speed gains.reply"
    ],
    "link": "https://plf.inf.ethz.ch/research/pldi25-tree-borrows.html",
    "first_paragraph": ""
  },
  {
    "title": "A Typology of Canadianisms (ubc.ca)",
    "points": 59,
    "submitter": "gnabgib",
    "submit_time": "2025-07-09T21:54:53 1752098093",
    "num_comments": 41,
    "comments_url": "https://news.ycombinator.com/item?id=44515101",
    "comments": [
      "\"upload\" and \"download\" are interesting to me, which, in addition to the standard meaning, refer to the transfer of costs/jurisdiction to a higher and lower level of government respectively (between provincial and federal for instance)reply",
      "I wish they would've explained the term \"soaker\" a bit better as it's such a Canadian thing.Basically, when the snow starts to melt in the spring, you'll sometimes accidentally step on some thin ice that leads directly to a puddle underneath and soak your boot. It sucks! Also, we would often call these \"booters\" in Manitoba, where I'm from.reply",
      "I'll have to go through this with my family; we have a number of terms we use that we're never sure if they're Canadian, non-regional uncommon words, or just things our family say.My grandpa called toonies \"bearbucks\", which isn't listed, but is in one of the quotes on the toonie entry. No listing for \"reef\" as in yanking on something, though I don't know if that's a Canadianism or not.reply",
      "You reef lines (ropes) on a boat.reply",
      "Sad to not see \"dart\" in there, I assumed from Letterkenny that it was a regular Canadianism. Perhaps it's too new?reply",
      "Popularized by Trailer Park Boys in the 2000s, if not well beforereply",
      "I don't remember darts as much on TPB... the phrase \"Corey, Trevor, two smokes, let's go\" stands out.reply",
      "We called em darts when I was in highschool back in the 90s.reply",
      "As a Nova Scotian I can tell you it was present before 2000s... at least 90s.reply",
      "Apparently originated in Australia, though it is definitely an established usage in Canada. I seem to recall hearing that usage in Vancouver in the 90s.https://gikken.co/mate-translate/blog/from-darts-to-cigarett...reply"
    ],
    "link": "https://dchp.arts.ubc.ca/how-to-use",
    "first_paragraph": "The basic principles of entry structure remain the same as in DCHP-2 (see here), though the appearance is quite different.While this dictionary lists entries (headwords, lexemes), meanings are its smallest unit. Each meaning is assigned to one of six Types of Canadianism or is marked as \u201cNon-Canadian\u201d. The label \u201cNon-Canadian\u201d is used for meanings that were previously classified as Canadian or that were suspected to be Canadian but turned out to be none of our six types. The six types of Canadianisms are:(Dollinger 2019: 122-23)Type 1 is a Canadianism by virtue of originating\u2014entering the English language\u2014in what is now Canada. A classic example is garburator; newer examples from this edition are hang a larry, hang a roger, levidrome, renovict and quinzhee. Type 2 is a preservation in Canadian English from another variety of English, often from the UK but also from the US. The standard example is pencil crayon, once used in the US and now exclusively Canadian. Newer examples are joe jo"
  },
  {
    "title": "Show HN: FlopperZiro \u2013 A DIY open-source Flipper Zero clone (github.com/lraton)",
    "points": 177,
    "submitter": "iraton",
    "submit_time": "2025-07-09T17:34:09 1752082449",
    "num_comments": 46,
    "comments_url": "https://news.ycombinator.com/item?id=44512763",
    "comments": [
      "The LilyGo T-Embed CC1100 has similar hardware capabilities of the FlipperZero plus WiFi/bluetooth and runs the Bruce Pentest firmware all for under half the price of the flipper. The Bruce firmware works well on it but is not as polished as the flipper zero but both hardware and software are open source and easily modded.reply",
      "The popularity and usefulness of many devices like the Arduino and the Raspberry Pi doesn't stem from the hardware capabilities, but the \"communities of scale\" (lots of people use it -> it's much easier to find compatible software, hardware, guides etc.)I would expect this to be the same for the Flipper Zero.reply",
      "Yes i know It, but when i started It this, It didn't exist yetreply",
      "Its sometimes fun re-inventing the wheel, at least you get to understand it all better.reply",
      "I\u2019m not sure I\u2019ll ever understand HN aggression with certain downvotes. This is the OP from Italy and likely English is not their first language. Why is this comment so bad?reply",
      "Also the Kiisu which is 1:1 with capabilities, plus a few more.reply",
      "Do this device and the other alternative mentioned (Capibara Zero) have the same level of software support as the Flipper Zero? I imagine the strong community behind the Flipper Zero is a big factor in its ongoing popularity.reply",
      "It is exactly same problem like Raspberry Pi vs all other (cheaper, better) single board computers.reply",
      "Except the RPi competition isn't better, only cheaper, because it has terrible software; and without a big community, no support?reply",
      "Totally depends on what \u201cbetter\u201d means to you and your use case.reply"
    ],
    "link": "https://github.com/lraton/FlopperZiro",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n        A Flipper Zero clone, but cheapest, DIY and simply Open Source, made with Arduino IDE\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n\n\n\n\n\n\n\nAn orribol copi of FlipperZero, uit worst inglish\nA Flipper Zero clone, but cheapest, DIY and simply Open Source, made with Arduino IDE\n\u26a0\ufe0f Important Notice: This is just a fun project, it was started to pass the time, it is not at all professional and is not intended to be. Is not an alternative for professional device.RubberDuckyRFID/NFC (Work in progress)IRRFSave/Load from SDBattery percentageSd memory left percentageAll programmable via Arduino IdeAdd 3d printed shell (https://www.printables.com/mode"
  },
  {
    "title": "Show HN: MCP server for searching and downloading documents from Anna's Archive (github.com/iosifache)",
    "points": 61,
    "submitter": "iosifache",
    "submit_time": "2025-07-09T21:06:38 1752095198",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=44514753",
    "comments": [
      "What advantage do you get from this being an MCP server rather than simply a command line tool? Genuinely curious, as I'm trying to develop my mental model of when to use one or the other.Lovely project!reply",
      "Cheers, glad you like it!I justified the hours I invested by thinking I could search, download, and explore books directly from Claude Desktop. While the initial steps are achievable with a CLI tool, the integration opens up new possibilities.Some general thoughts:- You\u2019ll find the MCP mental model similar to the API one.\n- MCP integrations make it easier for non-technical users to access tools that were previously too technical.\n- An MCP integration implicitly respects a contract, unlike CLIs and GUIs which involve human aspects (aesthetics, information organisation, etc.).\n- MCP is an excuse for people to democratize data access. I wrote about this aspect here: https://x.com/iosifache/status/1941049600162574676?s=46And BTW, that\u2019s a good idea! The functionality should probably also be exposed via CLI.reply",
      "https://neon.com/blog/building-a-cli-client-for-model-contex... might be of interest.An MCP server provides enough metadata and self-documentation that it's quite straightforward to make a MCP-agnostic CLI client that adapts an arbitrary MCP server into a set of flags that allow you to call its explicit tools with explicit arguments - without ever needing to involve an LLM in the mix! You could even have that CLI tool launch the MCP server as a local subprocess, if you wanted - again, all deterministically.And if you want to have an SDK in any language under the sun, once you have an MCP outputting reasonable tool descriptions, any LLM could make a best-in-class SDK for you in a heartbeat following that language's best practices.So it's not unreasonable for someone working on a greenfield project to make an MCP server first nowadays!reply",
      "Edit: Would you accept a PR to override the search and download endpoint hostnames with env vars? For someone who has their own copy and ES index, it might be helpful to support overriding the public endpoint hostnames (/internal/anna/anna.go#L22-L23).reply",
      "> local copy of this corpusAre you referring to the JSON index (https://annas-archive.org/faq#api)?reply",
      "love this. god bless anna's archivereply",
      "Cheers!reply",
      "I'm an LLM noob, but how feasible it is to make a research agent that can not only download articles, but read and reference them in it's process?reply",
      "It's doable, as you'll also find MCP servers for reading files [1].Claude Desktop also has a built-in file reader [2], so you can ask it to read the file and process the content (e.g., generate a summary or even a meta-summary [3]).[1] https://github.com/sylphxltd/pdf-reader-mcp\n[2] https://github.com/modelcontextprotocol/servers/tree/main/sr...\n[3] https://x.com/iosifache/status/1942247320302547175reply",
      "Firecrawl -> Rag -> mcp is the general pathreply"
    ],
    "link": "https://github.com/iosifache/annas-mcp",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        MCP server for searching and downloading documents from Anna's Archive\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.An MCP server for searching and downloading documents from Anna's ArchiveNoteNotwithstanding prevailing public sentiment regarding Anna's Archive, the platform serves as a comprehensive repository for automated retrieval of documents released under permissive licensing frameworks (including Creative Commons publications and public domain materials). This software does not endorse unauthorized acquisition of copyrighted content and should be regarded solely as a utility. Users are urged to respect the intellectual property rights of authors and acknowledge the considerable effort invested in document creation.Download the appropriate binary f"
  },
  {
    "title": "Jank Programming Language (jank-lang.org)",
    "points": 210,
    "submitter": "akkad33",
    "submit_time": "2025-07-06T16:56:42 1751821002",
    "num_comments": 44,
    "comments_url": "https://news.ycombinator.com/item?id=44482273",
    "comments": [
      "Hey folks. I'm the creator of jank. I didn't expect to be on HN today, but I appreciate the interest.In short, jank is Clojure, but it's on LLVM and has seamless C++ interop. You still get full nREPL capabilities, can redefine anything on the fly, and we can actually JIT compile C++ code alongside your Clojure. The seamless C++ interop is first of its kind, for a lisp, and is done by JIT compiling C++ alongside the LLVM IR we generate for jank and then stitching them together into one IR module.Note, jank isn't released yet. I'm targeting the end of this year for the first alpha release. I put out monthly development updates on the jank blog, with the next one coming out this week.reply",
      "beautiful work. clojure is very nice. one of the most impactful talks I have ever seen was from Rich Hickey - simple made easy.however my only gripe with clojure while it's easy to write and comprehend at first - it's difficult to read. & yet most our time we read code not write it. but then again it might be my lack of brain power.reply",
      "I agree with you, but perhaps in my own way. Jumping into an arbitrary Clojure program can be tough, since the data shapes may not be defined anywhere. Hopefully the program uses spec or malli, but even then, unless they annotate every function with the shape it expects, you may be left needing to REPL in and poke around. However, REPLing in to check just a function or two may not be easy if the program requires some setup and doesn't use integrant or similar.Once Clojure parity is achieved, I'm interested in static typing, pattern matching, value-based errors, and some other opt-in improvements that I think will greatly improve both readability and toolability (i.e. how well tooling can work with the code, based on what it knows of the code). Stay tuned. :)reply",
      "What\u2019s your take on Hickey\u2019s talk titled \u201cMaybe Not\u201d which fundamentally criticizes static types? Is there a middle ground where some form of static typing makes sense in a Clojure-esque world?https://youtu.be/YR5WdGrpoug?si=4mI8doBX6jj6PJkkreply",
      "Rich has many great ideas and he founded Clojure. I respect him deeply. On typing, however, we do not agree entirely.For a practical example of a Clojure-like language with a completely static type system (with affine typing), see Carp. https://github.com/carp-lang/CarpI don't see why there can't be a Carp mode in jank, with bridges in place to connect the Clojurey world from the Carpy world. This would allow jank users to develop interactively to start with, figure out their shapes, use the REPL, etc. Then, if they want, they can lock down some parts of the code for both performance and correctness gains.reply",
      "FWIW, (I have one Clojure project I inherited at work that my team maintains) I love this direction.reply",
      "Been a while since I've watched/read it, but I remember the ideas in Maybe Not being quite interesting.To me, the really important idea wasn't a criticism of static types in general.Instead it was the idea that static typing in most (all?) mainstream implementations conflates concepts that should be separate, specifically the shape of the information that we have (e.g. what fields of what types), and whether a particular bit of information is available and required (e.g. nullability).He contends that the former belongs in our usual \"type definition\", whereas the latter relates instead to a given context. For example, my PassportForm type always has a date-of-birth field in its _shape_, but whether it's statically required/present to exist depends on whether we're at a HTTP API boundary, an internal domain function boundary, writing into a database.It sounded like that kind of \"nullability masking\" was intended as a feature of Spec, but I don't get the impression it was ever implemented.reply",
      "My comment to code ratio is magnitudes higher in Clojure than in other languages, which helps a lot with this.Also  writing Clojure can be incredibly terse, resulting in quite high-effort when reading. Conversely, a lot of time I can condense hundreds of lines of equivalent python into 5 or 6 lines of Clojure. Having all of this functionality condensed into something you can fit in a tweet really helps for grokking larger parts of the dataflow or even larger system. So there are tradeoffsPlus structural editing and the repl really help with the \u201creading\u201d experience (reading in quotes because it\u2019s much more interactive than reading)reply",
      "> Conversely, a lot of time I can condense hundreds of lines of equivalent python into 5 or 6 lines of Clojure.I'm curious if you have any example of this? Even if it's an hyperbole, I don't really see how.reply",
      "In my (limited) experience with Clojure and other functional languages, this is usually true under situations where:1. You\u2019re mapping or reducing some dataset2. Your iteration logic does not branch a lot3. You can express your transformation logic using higher order functions (e.g. mapping a reduction operation across a multidimensional array)Some domains have a log of this style of work\u2014finance comes to mind\u2014others do not. I suspect this is why I\u2019ve personally seen a lot more of Clojure in finance circles than I have in other industries.reply"
    ],
    "link": "https://jank-lang.org/",
    "first_paragraph": "The jank programming languagejank is a general-purpose programming language which embraces the interactive, value-oriented nature of Clojure as well as the desire for native compilation and minimal runtimes. jank is strongly compatible with Clojure and considers itself a dialect of Clojure. Please note that jank is under heavy development; assume all features are planned or incomplete.Where jank differs from Clojure JVM is that its host is C++ on top of an LLVM-based JIT. This allows jank to offer the same benefits of REPL-based development while being able to seamlessly reach into the native world and compete seriously with JVM's performance.Still, jank is a Clojure dialect and thus includes its code-as-data philosophy and powerful macro system. jank remains a functional-first language which builds upon Clojure's rich set of persistent, immutable data structures. When mutability is needed, jank offers a software transaction memory and reactive agent system to ensure clean and correct "
  },
  {
    "title": "Multi-Region Row Level Security in CockroachDB (cockroachlabs.com)",
    "points": 28,
    "submitter": "rusticwizard",
    "submit_time": "2025-07-09T21:53:19 1752097999",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=44515087",
    "comments": [
      "The first example demonstrating row level security contains results from the wrong tenant.reply",
      "well done!reply"
    ],
    "link": "https://www.cockroachlabs.com/blog/fine-grained-access-control-row-level-security/",
    "first_paragraph": "Dikshant AdhikariMatt SpilchenLast edited on July 9, 20250 minute readControlling who can access what data is more important than ever as organizations scale and modernize their data infrastructure.\u00a0Enterprises are modernizing their critical databases, and they need fine-grained, built-in access controls that go beyond table-level permissions. That\u2019s why, with the 25.2 release of CockroachDB, we\u2019re introducing Row-Level Security \u2014 a powerful feature that allows you to define and enforce access policies at the row level, directly within the database.This form of mandatory access control enables developers and operators to tightly govern data visibility based on user roles or attributes. That makes it a natural fit for securing sensitive workloads and building robust multi-tenant applications.\u00a0In this article we\u2019ll explore how CockroachDB makes it simple to isolate data, comply with regulatory requirements, and reduce application-side complexity, all while maintaining performance at scal"
  },
  {
    "title": "Show HN: Petrichor \u2013 a free, open-source, offline music player for macOS (github.com/kushalpandya)",
    "points": 34,
    "submitter": "kushalpandya",
    "submit_time": "2025-07-09T22:17:31 1752099451",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=44515266",
    "comments": [
      "Without even looking at anything else, I love the name.reply",
      "Anyone want to let me in on the joke/reference/pun/pronunciation/why it's a clever name?reply",
      "There you go https://en.wikipedia.org/wiki/Petrichor> Petrichor is the earthy scent produced when rain falls on dry soil.reply",
      "Does it have FLAC support (or other high res audio formats)?reply",
      "OP should put it up front in their README.But from the code, seems it does.  static let supportedExtensions = [\"mp3\", \"m4a\", \"wav\", \"aac\", \"aiff\", \"flac\"]reply",
      "Thanks for the feedback, I'll add it to Readme, although app lists supported formats (as supported by AVFoundation) on app UI where user can add folders.reply",
      "Congratulations on the release! This looks really cool!reply"
    ],
    "link": "https://github.com/kushalpandya/Petrichor",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        An offline macOS music player\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.An offline music player for macOS\ud83d\udca1 Tip: Petrichor relies heavily on tracks having good metadata for all its features to work well.P.S. I plan publish it on Homebrew soon.I have a large collection of music files that I\u2019ve gathered over the years, and I missed having a good offline\nmusic player on macOS. I used Swinsian (great app, by the way!), but it hasn't been\nupdated in years. I also missed features commonly found in streaming apps; so I built Petrichor to scratch that\nitch and learn Swift and macOS app development along the way!MIT\n        An offline macOS music player\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please rel"
  },
  {
    "title": "A fast 3D collision detection algorithm (cairno.substack.com)",
    "points": 176,
    "submitter": "OlympicMarmoto",
    "submit_time": "2025-07-09T14:12:16 1752070336",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=44510282",
    "comments": [
      "Nice. It's definitely an optimization problem. But you have to look at numerical error.I had to do a lot of work on GJK convex hull distance back in the late 1990s.\nIt's a optimization problem with special cases.Closest points are vertex vs vertex, vertex vs edge, vertex vs face, edge vs edge, edge vs face, and face vs face.\nThe last three can have non-unique solutions. Finding the closest vertices is easy but not sufficient. When you use this in a physics engine, objects settle into contact, usually into the non-unique solution space. Consider a cube on a cube. Or a small cube sitting on a big cube. That will settle into face vs face, with no unique closest points.A second problem is what to do about flat polygon surfaces. If you tesselate, a rectangular face becomes two coplanar triangles. This can make GJK loop. If you don't tesselate, no polygon in floating point is truly flat. This can make GJK loop. Polyhedra with a minimum break angle between faces, something most convex hullers can generate, are needed.Running unit tests of random complex polyhedra will not often hit the hard cases. A physics engine will. The late Prof. Steven Cameron at Oxford figured out solutions to this in the 1990s.[1] I'd discovered that his approach would occasionally loop. A safe termination condition on this is tough. He eventually came up with one. I had a brute force approach that detected a loop.There's been some recent work on approximate convex decomposition, where some overlap is allowed between the convex hulls whose union represents the original solid. True convex decomposition tends to generate annoying geometry around smaller concave features, like doors and windows. Approximate convex decomposition produces cleaner geometry.[2] But you have to start with clean watertight geometry (a \"simplex\") or this algorithm runs into trouble.[1] https://www.cs.ox.ac.uk/stephen.cameron/distances/[2] https://github.com/SarahWeiii/CoACDreply",
      "> But you have to look at numerical error.Yeah I agree, the error analysis could be many blogs in and of itself. I kinda got tired by the end of this blog. I would like to write a post about this in the future. For global solvers and iterative.> Finding the closest vertices is easy but not sufficient.As I'm sure you are aware, most GJK implementations find the closest features and then a one shot contact manifold can be generated by clipping the features against each other. When GJK finds a simplex of the CSO, each vertex of the simplex keeps track of the corresponding points from A and B.> A second problem is what to do about flat polygon surfacesModern physics engines and the demo I uploaded do face clipping which handle this. For GJK you normally ensure the points in your hull are linearly independent.reply",
      "There's been some recent work on approximate convex decomposition, where some overlap is allowed between the convex hulls whose union represents the original solid.I wonder if it would be smart to restate the problem in just those terms -- managing bounding-volume overlap rather than interpenetration at the geometric level.If everything is surrounded by bounding spheres, then obviously collision detection in the majority of cases is trivial.  When two bounding spheres do intersect, they will do so at a particular distance and at a unique angle.  There would then be a single relevant quantity -- the acceptable overlap depth -- that would depend on the angle between the BV centers, the orientation of the two enclosed objects, and nothing else.  Seems like something that would be amenable to offline precomputing... almost like various lighting hacks.Ultimately I guess you have to deal with concavity, though, and then the problem gets a lot nastier.reply",
      "Most physics engines do indeed do this and call it something like \"collision margin\"[1].[1]: https://gamedev.stackexchange.com/questions/113774/why-do-ph...reply",
      "I'm trying to work through the math here, and I don't understand why these two propositions are equivalent:1) \n   min_{x,y} |x-y|^2   x \u2208 A\n\n   y \u2208 B\n\n2) \n = min_{x,y} d   d \u2265 |x-y|^2\n\n   x \u2208 A\n\n   y \u2208 B\n\nWhat is 'd'? If d is much greater than |x-y|^2 at the actual (x, y) with minimal distance, and equal to |x-y|^2 at some other (x', y'), couldn't (2) yield a different, wrong solution? Is it implied that 'd' is a measure or something, such that it's somehow constrained or bounded to prevent this?reply",
      "This is the epigraph form of the problem. You try to find the point with the lowest height in the epigraph.https://en.wikipedia.org/wiki/Epigraph_(mathematics)reply",
      "I think you are missing that d, x, and y are variables that get optimized over. Any choice of d lower than the the solution to 1) is infeasible. Any d higher than the solution to 1) is suboptimal.edit: I see now that the problem 2) is missing d in the subscript of optimization variables. I think this is a typo.reply",
      "But why would d be much greater. The problem asks to minimise d, and so it cannot be greater than the smallest |x-y|^2.reply",
      "I can't read substack on my phone, so I can't see the article, but the correct statement that is closest to what you have written is just that d is any real number satisfying this inequality. We define a subset U of AxBxR byU={(a,b,x):x>|a-b|^2}and then were looking for the infimum of (the image of) U under the third coordinate functiond(a,b,x)=xreply",
      "Aside: I learned the Sep Axis Theorem in school and often use it for interviews when asked about interesting algorithms. It's simple enough that you can explain it to non-technical folks. \"If I have a flashlight and two objects, I can tell you if they're intersected by shining the light on it\". Then you can explain the dot product of the faces, early-exit behavior and MTV.reply"
    ],
    "link": "https://cairno.substack.com/p/improvements-to-the-separating-axis",
    "first_paragraph": ""
  },
  {
    "title": "Understand CPU Branch Instructions Better (chrisfeilbach.com)",
    "points": 33,
    "submitter": "mfiguiere",
    "submit_time": "2025-07-06T15:34:04 1751816044",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=44481627",
    "comments": [
      "This is why the old-fashioned university course on assembly language is still useful. Writing assembly language (preferably for a less-complex architecture, so the student doesn't get bogged down on minutiae) gives one a gut feeling for how machines work. Running the program on a simulator that optionally pays attention to pipeline and cache misses can help a person understand these issues.It doesn't matter what architecture one studies, or even a hypothetical one. The last significant application I wrote in assembler was for System/370, some 40 years ago. Yet CPU ISAs of today are not really that different, conceptually.reply",
      "> Yet CPU ISAs of today are not really that different, conceptually.CPU true.GPU no. It's not even the instructions that are different, but I would suggest studying up on GPU loads/stores.GPUs have fundamentally altered how loads/stores have worked. Yes it's a SIMD load (aka gather operation) which has been around since the 80s. But the routing of that data includes highly optimized broadcast patterns and or butterfly routing or crossbars (which allows for an arbitrary shuffle within log2(n)).Load(same memory location) across GPU Threads (or SimD lanes) compiles as a single broadcast.Load(consecutive memory location) across consecutive SIMD lanes is also efficient.Load(arbitrary) is doable but slower. The crossbar will be taxed.reply",
      "ISAs have not changed, sure. Microarchitectures are completely different and basically no school is going to teach you anything useful for that.reply",
      "Nice article! Always good to see easy-to-follow explainers on these kinds of concepts!One minor nit, for the \u201codd corner case that likely never exists in real code\u201d of taken branches to the next instruction, I can think of at least one example where this is often used: far jumps to the next instruction with a different segment on x86[_64] that are used to reload CS (e.g. on a mode switch).Aware that\u2019s a very specific case, but it\u2019s one that very much does exist in real code.reply",
      "its such a fascinating thing that most people just ignore\ni too wrote (using AI) an article on Branch Prediction after i found out that most of my team members only read this in college but never understoodreply",
      "Weird cookie policy on that blog?reply"
    ],
    "link": "https://chrisfeilbach.com/2025/07/05/understand-cpu-branch-instructions-better/",
    "first_paragraph": "Branch instructions are the primary means by which a program running on a CPU makes a decision.This post is part of a series of posts on CPU performance, as part of the Pointer Wars: Linked List Edition challenge. This challenge is great for undergraduates, graduate students, and new engineers who want feedback about writing high performance C or C++ code. Much more info here.Programs written to execute on a CPU follow something called the sequential execution model. Sequential execution means that each CPU instruction is executed one at a time, and unless specified otherwise, the next instruction to execute is at a memory location directly after the current instruction. Do note that the sequential execution model refers to the semantics that the CPU must follow, not their actual implementations, as implementations violate this rule in ways the programmer isn\u2019t aware of all the time. Instructions that might change the control flow of a program (control flow being the path the program t"
  },
  {
    "title": "Configuring Split Horizon DNS with Pi-Hole and Tailscale (bentasker.co.uk)",
    "points": 69,
    "submitter": "gm678",
    "submit_time": "2025-07-09T17:08:54 1752080934",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=44512470",
    "comments": [
      "I do force all plain DNS on port 53 to my local dns (Adguard home + unbound on a gl-inet router). And I block common DoH addresses. There are many lists on Github. I collect them using github action to have one big list of their IP and addresses and block them.This is not a bullet proof solution in case there is a semi known custom DoH an application use. But it is the best that I can do without Enterprise network gear and more complex setup that I would like to maintain.reply",
      "Would you be willing to share the list sources you use?reply",
      "And perhaps automate pushing to a gist or repository?reply",
      "Secondedreply",
      "The post says:> Side note: for those wondering, Tailscale is Canadian and can't see the content of connections (although if you're worried about this it's also possible to self-host using Headscale).However this is no longer the case. From Tailscale's Terms of service \"Schedule A\", \"New customer accounts on or after September 3, 2024\" are bound to \"Tailscale US Inc., a Delaware corporation\"reply",
      "It can\u2019t see the contents of connections but it records all the metadata. You know a lot about what the contents are going to be based on the ports. The default configuration of Tailscale will also collect all your DNS requests.https://github.com/tailscale/tailscale/issues/16165reply",
      "> Chromecasts ignore local DNS... grrrCan\u2019t you force traffic to 8.8.8.8 / 8.8.4.4 (especially port 53) to hit your PiHole instead?reply",
      "Its a trick one.  Traditional DNS runs over port 53/udp and fails over to 53/tcp for large queries/results.  That's easy to deal with on a packet filter firewall.Then in the name of ... something, something, security ... DNS over http(s) was invented.  Now you can balkanize DNS by requiring certain SSL certificates be involved.  To my knowledge this hasn't been abused large scale yet but it could.Let's go easy on the tinfoil and simply redirect outbound traffic to 53/udp and tcp to a PiHole or other DNS server under your control.If you insist on the tin foil, you will probably need to look into a MitM proxy such as Squid - look into \"bump\" and \"spice\".reply",
      "This falls apart when you realize DoH can (and does) just go out to 443/TCP.It looks like a web request, which was literally the point of the specification.\"DoH ensures that attackers cannot forge or alter DNS traffic. DoH uses port 443, which is the standard HTTPS traffic port, to wrap the DNS query in an HTTPS request. DNS queries and responses are camouflaged within other HTTPS traffic, since it all comes and goes from the same port.\"reply",
      "My older Kindle Fire HD 10 flips over to DNS over HTTPS if it can't see Google on port 53.I've tried to add a couple of rules in iptables on my Ubiquiti Dream Machine (UDM), but the out-of-box configuration on the UDM is pages and pages to iptables rules. I can modify that config via a shell interface (a shell script with four iptables command lines), but it doesn't play with the web based GUI, and I have yet to figure out how the UDM handles such traffic.Yes, I've simply blocked all traffic for 8.8.8.8 and 8.8.4.4, via the UDM GUI, the rules are there. The Kindle still shows me ads.It may be possible to delete the entries for Google DNS on the Kindle via adb commands during boot, but I haven't gotten that far.Someday I will get around to setting up a homelab network enough to learn iptables etc without blacking out my home network. As any network outage bring immediate screams from the house, I have to treat the firewall configuration as critical infrastructure: brittle. Don't touch.reply"
    ],
    "link": "https://www.bentasker.co.uk/posts/blog/general/configuring-pihole-to-serve-different-records-to-different-clients.html",
    "first_paragraph": "\n                    Ben Tasker\n            \n\n2025-07-05 16:05\nI've long had some form of VPN for my devices to use when I'm out and about. Although I used to run OpenVPN, I moved to Tailscale a little while back. Tailscale builds a mesh network using Wireguard protocol and so is able to connect and run quite a bit faster than OpenVPN.Side note: for those wondering, Tailscale is Canadian and can't see the content of connections (although if you're worried about this it's also possible to self-host using Headscale).Although the tailnet has been up for some time, I hadn't got around to setting up split horizon DNS for clients on the tailnet. I was in a bit of a hurry when first setting up and so configured my reverse proxy box to advertise a route to it's own LAN IP.This post talks about configuring my Pi-hole to implement a split horizon: returning the tailnet IP to tailnet clients and the LAN IP to LAN clients.Many of the DNS names that I wanted to do this for already had a split horiz"
  },
  {
    "title": "White Noise \u2013 secure and private messenger (whitenoise.chat)",
    "points": 32,
    "submitter": "onhacker",
    "submit_time": "2025-07-09T21:44:22 1752097462",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=44515023",
    "comments": [
      "> White Noise stands out by merging Nostr\u2019s decentralized network with advanced encryption.How does White Noise address criticisms surrounding Nostr's implementation[1]:> While nostr offers the ability to send encrypted DMs to user pubkeys, the metadata of these messages are broadcast publicly via relays. This is the same as a bitcoin transaction being viewable on the public ledger. The contents of the direct message will be encrypted, but other metadata like the sender and recipient can be viewed by anyone.Even assuming if metadata is encrypted, does WN's implementation broadcast messages across public relays?If you can map out social networks based on publicly available data, can tell if one user messages another, or correlate when messages were sent to/from whom, I would not call that private.[1] https://ron.stoner.com/nostr_Security_and_Privacy/reply",
      "i admit i havent looked at the app, but i assume is centrally run.firstly: i think the only way secure p2p messaging can work is if its decentralised. no 3rd parties to communication, how this would be done i have no idea. maybe like email but without the server?secondly: you'd need to ensure a secure os on each end that you can trust to not take screenshots and send to hq before transmission or after reception.since its not possible to use the internet without a source ip. its almost provably insecure (in terms of privacy), no matter what protocols are dreamed up. a 3rd party will have to be trusted to distribute packets. and thats the weak point. (unless you force the source IP to be 0.0.0.0 or something before it goes out)couldnt we just use dns to point to recipients, force zero the source ip and send udp packets directly?reply",
      "As I understand it, it's just a nostr client, so it uses nostr's decentralized network of relays.reply",
      "As much as I love the idea of these secure messaging apps, until I see how a company responds to government intimidation I am always wary of being too invested and trustworthy of the marketing.reply",
      "Congratulations on the release!As someone who used to be in the Secure Scuttlebutt community an now works on OpenMLS, I wonder how they (you?) deal with concurrency of Commit messages. I spent quite some time thinking about ways to detect and resolve forks, and the current iteration of MLS doesn't really have good answers here.reply",
      "Austria's goverment agreed on spying messengers for the public safety.\nHow does white noise protects itself from getting legally hacked?reply",
      "interesting but still very alpha. It doesn't have any desktop/PC clients yet, but I assume it will?reply",
      "Looks like a flutter app that can build for desktop Linux https://github.com/parres-hq/whitenoise_flutter .I started my reply thinking it was still using Tauru but apparently things change fast!reply"
    ],
    "link": "https://www.whitenoise.chat/",
    "first_paragraph": "A truly secure and private messenger that\u2019s lightning fast, infinitely scalable, and identity-free."
  },
  {
    "title": "Archaeologists unveil 3,500-year-old city in Peru (bbc.co.uk)",
    "points": 123,
    "submitter": "neversaydie",
    "submit_time": "2025-07-07T06:58:10 1751871490",
    "num_comments": 32,
    "comments_url": "https://news.ycombinator.com/item?id=44487451",
    "comments": [
      "https://www.google.com/maps/place/10%C2%B055'54.5%22S+77%C2%...via https://en.wikipedia.org/wiki/Pe%C3%B1icoreply",
      "I don't understand how this is an \"announcement\" when there is clearly a visitor's center with a parking lot nearby?Perhaps something got lost in translation?reply",
      "Stealth visitor center?reply",
      "I feel irrational hatred towards people who think \"decimated\" is a synonym of \"destroyed\".reply",
      "Honest advice: free yourself from that and live a happier life. And I don't mean it in an \"ignorance is bliss\" kind of way, on the contrary really. Otherwise, to be consistent, you'd need to- demand your salary be paid in salt- have all arenas be covered in sand- calculate only with pebbles- only allow xylophones made of woodAnd so on. It's a tiring journey to embark on -- oops, one can only embark on ships...reply",
      "That ship has long since sailed.OED dates the first known use of \"to reduce drastically or severely; to destroy, ruin, devastate\" to 1660.reply",
      "This wasn't on my radar until...  now! I will take up your banner with gleereply",
      "I'll sacrifice a goat in Jupiter's temple for you.reply",
      ">The 3,500-year-old city, named Pe\u00f1ico, is believed to have served as a key trading hub connecting early Pacific coast communities with those living in the Andes mountains and Amazon basin....>Researchers say the discovery sheds light on what became of the Americas' oldest civilisation, the Caral.Oldest civilization is a bit of a stretch.  Earliest surviving structures is a stretch, but it's one we know about, so I guess they have to base it off that.  More and more evidence is showing that humans were in the Americas farther back in time.  While they weren't the builders of of fine stonework and megalithic structures like the Olmec (that we know of), there were certainly civilizations and cities before humans suddenly started building the massive pyramids and cities we have uncovered so far.  There's a lot of secrets still hidden in the South American jungles.reply",
      "This site (~1475 BCE) is older than the Olmecs (1200-400BCE) and is associated with another city, Caral, which is even older than them (3000-1800BCE) and both are much farther south than Mexico is compared to the Bering Land Bridge.Caral at 5000 years old is quite old! For additional context the Pyramids of Giza are ~4600 years old and Stonehenge is ~5100 years old. Given that it's in Peru this does not counter your narrative. But Archaeology is a Science and they cannot definitively say there is an older city without discovering it. It also might be unlikely to find what would be qualified as a \"City\" that is older. We've certainly found much older human settlements in the Americas, but megalithic building and cities is harder to say. Perhaps we'll find packed earth ones somewhere, but Peru really did have the jump on what would term \"complex societies\" in the Americasreply"
    ],
    "link": "https://www.bbc.co.uk/news/articles/c07dmx38kyeo",
    "first_paragraph": "Archaeologists have announced the discovery of an ancient city in Peru's northern Barranca province.The 3,500-year-old city, named Pe\u00f1ico, is believed to have served as a key trading hub connecting early Pacific coast communities with those living in the Andes mountains and Amazon basin.Located some 200km north of Lima, the site lies about 600 metres (1,970 feet) above sea level and is thought to have been founded between 1,800 and 1,500 BC - around the same time that early civilisations were flourishing in the Middle East and Asia.Researchers say the discovery sheds light on what became of the Americas' oldest civilisation, the Caral.An aerial view of the archaeological zone of Pe\u00f1ico, in Peru, an ancient city established 3,500 years agoDrone footage released by researchers shows a circular structure on a hillside terrace at the city's centre, surrounded by the remains of stone and mud buildings. Eight years of research at the site unearthed 18 structures, including ceremonial temples"
  },
  {
    "title": "Would You Like an IDOR With That? Leaking 64m McDonald's Job Applications (ian.sh)",
    "points": 52,
    "submitter": "samwcurry",
    "submit_time": "2025-07-09T19:31:46 1752089506",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=44513940",
    "comments": [
      "> We immediately began disclosure of this issue once we realized the potential impact. Unfortunately, no disclosure contacts were publicly available and we had to resort to emailing random people. The Paradox.ai security page just says that we do not have to worry about security!Amazing.reply",
      "Having a security.txt would be best, but they've updated the page to include a security email address which is a start.reply",
      "> The personality test was a disturbing experience powered by Traitify.com where we were asked if phrases like \u201cenjoys overtime\u201d are either Me or Not Me. It was simple to guess that we should probably select Me for the pro-employer questions and Not Me for questions referencing being argumentative or aggressive, but it was still quite strange.Offtopic from the security issue, but I wonder if they really get any value out of this \"Personality test.\" It seems like it's just a CAPTCHA that makes sure the applicant knows when to lie correctly.reply",
      "Working in retail is 99% lying that you care about your job, so might as well start it out on the right footing.reply",
      "Overtime can be enjoyable if you get paid overtime rates.reply",
      "For the employer, the question is self fulfilling. Either way they get what they want. Even if someone knows enough to lie, the lie betrays that they\u2019re desperate enough to be unable to resist anything management demands.reply",
      "While also providing evidence that you do indeed love overtime based on your answer. Ugh\u2026 the only way to win is not to play.reply",
      "Is it simple to guess? I always assumed if you went too hard with those answers they'd assume you were lying and reject you.Maybe this is why I never got the mcdonalds call back last time I was layed off.reply",
      "I cannot believe the 123456 worked, it's literally a joke from SpaceBalls.reply",
      "In a past life, I had an investment stake in Krispy Kreme donuts. We were poking around to see if we could learn anything about the company. We watched a training video for new store managers. It told the viewer to go to some URL and enter their credentials. In the video, the example credentials were \"admin\" and \"admin\" as the password. So we tried that, and of course it worked on their live system. We immediately had access to global, live, online revenue data for every real Krispy Kreme outlet, not some training simulation.Most people are not qualified to handle computer security, is what I learned from that.reply"
    ],
    "link": "https://ian.sh/mcdonalds",
    "first_paragraph": "McHire is the chatbot recruitment platform used by 90% of McDonald\u2019s franchisees. Prospective employees chat with a bot named Olivia, created by a company called Paradox.ai, that collects their personal information, shift preferences, and administers personality tests. We noticed this after seeing complaints on Reddit of the bot responding with nonsensical answers.During a cursory security review of a few hours, we identified two serious issues: the McHire administration interface for restaurant owners accepted the default credentials 123456:123456, and an insecure direct object reference (IDOR) on an internal API allowed us to access any contacts and chats we wanted. Together they allowed us and anyone else with a McHire account and access to any inbox to retrieve the personal data of more than 64 million applicants.We started by applying for a job at our local McDonald\u2019s. McHire has a consumer-facing site at https://jobs.mchire.com/ where it is easy to find available postings near yo"
  },
  {
    "title": "Linda Yaccarino is leaving X (nytimes.com)",
    "points": 362,
    "submitter": "donohoe",
    "submit_time": "2025-07-09T14:52:04 1752072724",
    "num_comments": 551,
    "comments_url": "https://news.ycombinator.com/item?id=44510731",
    "comments": [
      "https://archive.today/9zvHZ",
      "The Economist always comes up with good tag lines for stories. In this case:Linda Yaccarino goes from X CEO to ex-CEO.https://www.economist.com/business/2025/07/09/linda-yaccarin...reply",
      "What are other memorable tag lines from them?reply",
      "\"Yaccarino got X-terminated like an old piece of peccorino\"reply",
      "I don't know, why don't you go have a look?reply",
      "One time they let her speak publicly it turned out to be a disaster. She never had any say and worst part is she was not even a good fall guy, it was clear who\u2019s pulling the strings.  The most immaterial and inconsequential hire ever.I love all the replies on Twitter thanking her but during her time the valuation dropped 80% and they were suing advertisers for not advertising. Remarkably inept.reply",
      "It's weird that you say both she had no material power and also seem to imply the valuation drop and lawsuits were due to her ineptitude?Anyway she volunteered to be a puppet for a man who is clearly off the rails and her legacy will forever be stained.reply",
      "Both things can be true: Valuation did drop during her tenure, AND she was not to blame.Therefore the praise is weird, because she seemingly neither helped nor hurt the business.reply",
      "One would imagine that a CEO lacking power is the precise reason a company would perform poorly.reply",
      "Indeed. It was such a paradoxical situation from the start, with her both reporting to Musk as the chairman and owner, while at the same time \"managing\" him as the CTO. I'm surprised that the charade went on for as long as it did.reply"
    ],
    "link": "https://www.nytimes.com/2025/07/09/technology/linda-yaccarino-x-steps-down.html",
    "first_paragraph": ""
  },
  {
    "title": "HyAB k-means for color quantization (30fps.net)",
    "points": 21,
    "submitter": "ibobev",
    "submit_time": "2025-07-09T21:34:30 1752096870",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=44514946",
    "comments": [
      "I\u2019ve done some color quantization tests with HyAB and OKLab on this same image. A couple notes:- what works well for this image might not work well for other images! I learned the hard way after lots of testing on this image, only to find things that did not generalize well.- parametrizing the AB plane weight is pretty useful for color quantization; I\u2019ve found some images will be best with more weight given to colour, and other images need more weight given to tone. OKLab creator suggests a factor of 2 in deltaEOK[1] but again this is something that should be adjustable IMHO..- there\u2019s another interesting and efficient color space (poorly named) sUCS and sCAM[2] that boasts impressive results in their paper for tasks like this. Although I\u2019ve found it not much better for my needs than OKLab in my brief tests[3] (and note, both color spaces are derived using CIEDE2000)[1] https://github.com/color-js/color.js/blob/9d812464aa318a9b47...[2] https://opg.optica.org/oe/fulltext.cfm?uri=oe-32-3-3100&id=5...[3] https://x.com/mattdesl/status/1902699888057446670reply",
      "Highly recommend Celebi's K-Means, weighted square means.It feeds the results from a box cutting quantizer (Wu) into K-Means, giving you deterministic initial clusters and deterministic results. It leverages CIELAB distance to avoid a bunch of computation. I used it for Material 3's dynamic color and it was awesome as it enabled higher cluster counts.reply",
      "Surely this would be even faster and potentially better with OKLab? Especially in the context of CIELab based distance metrics like CIEDE2000 which are a bit heavy.My own gripe with box cutting is that perceptual color spaces tend not to have cube shaped volumes. But they are very fast algorithms.reply",
      "I am very strongly opinionated on this, but am aware this isn't a very serious matter most of the time. Imagine my tongue in cheek, and a smile, i.e. I'm open to discussion:Oklab is a nightmare in practice - it's not linked to any perceptual color space, but it has the sheen of such in colloquial discussion. It's a singular matmul that is supposed to emulate CAM16 as best as it can.It reminds me of the initial state of color extraction I walked into at Google, where they were using HSL -- that is more obviously wrong, but I submit they suffer from the same exact issue: their verbiage is close enough to actual verbiage that they obfuscate discussion, and prevent people from working with the actual perceptual spaces, where all of a sudden a ton of problems just...go away.</end rant>In practice, quantizers are all slow enough at multimegapixel that I downscale - significantly, IIRC I used 96x96 or 112x112. IIRC you could convert all 16M of RGB to CAM16 and L* in 6 seconds, in debug mode, in Dart, transpiled to Javascript in 2021, so I try to advocate for doing things with a proper color space as much as possible, the perf just doesn't matter.EDIT: Also, I should point out that my goal was to get a completely dynamic color system built, which required mathematically guaranteeing a given contrast ratio for two given lightness values, no matter hue and chroma, so trying to use pseudo-perceptual-lightness would have been enough to completely prevent that.I do still think it's bad in general, i.e. if it was people doing effects on images in realtime, a couple weeks ago I finally got past what I had internally at Google, and was able to use appearance modeling (i.e. the AM in CAM-16) to do an exquisite UI whose colors change based on the lighting naturally. https://x.com/jpohhhh/status/1937698857879515450reply",
      "> IIRC you could convert all 16M of RGB to CAM16 and L* in 6 seconds, in debug mode, in Dart, transpiled to Javascript in 2021, so I try to advocate for doing things with a proper color space as much as possible, the perf just doesn't matter.Coming from the \"real-time graphics\" world, if I read that something which is going to be a minor part of your whole pipeline would take 6 seconds (or even 600 or 60 ms) it would be instantly disqualified so I don't really understand why you'd say \"the perf just doesn't matter\" ?reply",
      "> I don't understand how \"the perf just doesn't matter\"Ah, apologies, I don't mean to imply color perf never matters :)The paragraph is discussing a color quantization algorithm to extract colors from an image, not color  conversion in general. It's very hard in that situation> \"a minor part of your whole pipeline would take 6 seconds (or even 600 or 60 ms\"Ah, apologies for the lack of clarity: you don't need to ever convert the entirety of RGB to CAM16 and L*. :) That's just a rough instructive benchmark I can remember.If I'm worried about realtime, say, I know I want to convert an 6K* wallpaper with realtime appearance modelling, at 120 fps on 2022 Android, I use a shader. 0 perf issues so far. (knock on wood)* now that I think about it...it's probably at display res, not the original 6K. Maybe 2 megapixel? shrugsreply",
      "It does a pretty good job at emulating CAM16 with a fraction of the parameters, computational complexity, and processing; it\u2019s no wonder it was adopted by CSS.I don\u2019t know what you mean by \u201cnot being linked to any perceptual color space\u201d - it is derived from CAM16 & CIEDE2000, pretty similar in ethos to other spaces like ITP and the more recently published sUCS.There\u2019s also tons of discussion on w3c GitHub about OKLab, and it\u2019s evolved in many ways since the original blog post such as improved matrices, new lightness estimate and OKHSV/OKHSL, and very useful cusp & gamut approximations.I have a hard time seeing how it\u2019s a nightmare in practice!reply",
      "Because it is a matmul best-effort approximation of a perceptual color space, not a perceptual one, and in my experience that's a significant difference when deployed and for design. YMMV. :)I cringe myself, it sounds like a nitpick, but it's an extremely significant upgrade in every case.Most concretely, if I use actual L*, design can use palettes linked to L* and vary hue / colorfulness while meeting any contrast standard.reply"
    ],
    "link": "https://30fps.net/pages/hyab-kmeans/",
    "first_paragraph": ""
  },
  {
    "title": "Ruby 3.4 frozen string literals: What Rails developers need to know (prateekcodes.dev)",
    "points": 203,
    "submitter": "thomas_witt",
    "submit_time": "2025-07-06T09:58:26 1751795906",
    "num_comments": 101,
    "comments_url": "https://news.ycombinator.com/item?id=44479302",
    "comments": [
      "Well it is not quite a mutable vs immutable strings war, nor Ruby being late to the party or something like that.The move is so we can avoid allocating a string each we declare and use it since it will be frozen by default. It is a big optimization for GC mainly. Before we had to do such optimization by hand if we intend not to modify it:    # before\n    def my_method\n      do_stuff_with(\"My String\") # 1 allocation at each call\n    end\n    \n    # before, optim\n    MY_STRING = \"My String\".freeze  # this does 2 allocations with 1 at init being GC quite early\n\n    def my_method\n      do_stuff_with(MY_STRING)\n    end\n\n    # after\n    def my_method\n      do_stuff_with(\"My String\") # 1 allocation first time\n    end\n\nBut this move also complicates strings manipulation in the sense of it will lean users toward immutable ops that tend to allocate a lot of strings.    foo.upcase.reverse\n    # VS\n    bar = foo.dup\n    bar.upcase!\n    bar.reverse!\n\nSo now we have to be deliberate about it:    my_string = +\"My String\" # it is not frozen\n\nWe have frozen string literals for quite a while now, enabled file by file with the \"frozen_string_literal: true\" comment and I've seen it as the recommended way by the community and the de-facto standard in most codebase I've seen. It is generally enforced by code quality tools like Rubocop.So the mutable vs immutable is well known, and as it is part of the language, well, people should know the ins and outs.I'm just a bit surprised that they devised this long path toward real frozen string literals, because it is already ongoing for years with the \"frozen_string_literal: true\" comment. Maybe to add proper warnings etc. in a way that does not \"touch\" code ? I prefer the explicit file by file comment. And for deps, well, the version bump of Ruby adding frozen string literals by default is quite a filter already.Well, Ruby is well alive and it is what matters)reply",
      "> I'm just a bit surprised that they devised this long pathThe original plan was to make the breaking change in 3.0, but that plan was canceled because it broke too much code all at once.Hence why I proposed this multi-step plan to ease the transition.See the discussion on the tracker if you are curious: https://bugs.ruby-lang.org/issues/20205reply",
      "It is sorta late to the party.  Common Lisp has similar with regards to how lists are done.  Specifically, it is not uncommon to make a static list like `'(1 2 3)`.  Doing this, however, has implications on what operations you can do on the data elsewhere.I say sorta late to the party, as I think it is more than fair to say there was not much of a party that folks were interested in in the lisp world. :Dreply",
      "Is it the future path of any successful JIT / dynamic typed / scripting language to realize they needed all optimizations from compiled / statically typed / lower level languages ?Would Ruby be as successful if they had all those complicated features right from the start ?Or do all languages start from a nice simple clean slate tabula rasa to get developers hooked, until the language is enough famous to get well developed and starts to be similar to all others big programming languages ?reply",
      "I would actually say it\u2019s the opposite in this case: it\u2019s extremely common in scripting languages for strings to be immutable, mutable strings are usually only available in lower level languages. I\u2019m very surprised Ruby had this feature at all.reply",
      "Even in C, string literals are immutable, and mutating them is undefined behavior.reply",
      "But in the syntax of scripting language its very easy to create a new string from the old string, destroy old string, replace variable by new string. Which appears mutable from the point of view of the developerreply",
      "Can't you do the exact same in compiled languages e.g. C or Rust?reply",
      "You can, but allocating and deallocating is more tedious without a GC, and if you care about performance, you might want to have mutable strings.reply",
      "Common Lisp and Smalltalk have mutable strings, I think. So it\u2019s not too surprising that ruby does too, since it was pretty heavily influenced by these languages.reply"
    ],
    "link": "https://www.prateekcodes.dev/ruby-34-frozen-string-literals-rails-upgrade-guide/",
    "first_paragraph": "Spread the wordRuby 3.4 takes the first step in a multi-version transition to frozen string literals by default. Your Rails app will continue working exactly as before, but Ruby now provides opt-in warnings to help you prepare. Here\u2019s what you need to know.Ruby is implementing frozen string literals gradually over three releases:By default, nothing changes. Your code runs exactly as before. But when you enable deprecation warnings:Important: These warnings are opt-in. You won\u2019t see them unless you explicitly enable them.Frozen strings enable Ruby to deduplicate identical string literals:Performance improvements vary by application, but benchmarks have shown:For more Rails performance optimization strategies, check out our guide on finding the 20% of code causing 80% of performance problems.The biggest impact won\u2019t be your code - it\u2019ll be your dependencies:Ruby 3.4 introduces a clever mechanism called \u201cchilled strings\u201d for files without a frozen_string_literal pragma:This allows Ruby to"
  },
  {
    "title": "Ask HN: How is the tech scene in LA?",
    "points": 28,
    "submitter": "asdev",
    "submit_time": "2025-07-07T00:21:42 1751847702",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=44485428",
    "comments": [
      "Tech people I meet in LA are much less careerist in general compared to the Bay Area (where I used to live). They work for either big tech, smaller not household name companies, or remote. Pay is on average less than the bay. Tech people in LA live in LA for the lifestyle and use the job to fund their lifestyle.Personally (and contrary to the other comment about LA) it\u2019s been the best place I have lived. It\u2019s a polarizing city, understandably. But I think if you can make enough money and are ok with driving there\u2019s endless amounts of things to do and passionate people to meet.reply",
      "> if you\u2026are ok with driving there\u2019s endless amounts of things to do and passionate people to meet.I\u2019m someone who is currently struggling to find these people; what has worked for you? It often feels that everyone cool is trapped in their car, and we are destined to never cross paths.reply",
      "For me:1. Neighborhood matters a lot. This determines the kinds of events you\u2019ll go to and people you see regularly. I explored a lot before I settled some place that felt like home. I live some place with good walkability and being able to walk to a coffee shop or park has been very important.2. Hobbies. Outdoor fitness, DIY/underground music, and board games for me. It took some digging to find groups I liked (some of which I found out about online and some by asking people I met), but now I participate in at least one event/meetup pertaining to these hobbies every week (more if I can). Ex helping out at a DIY show, run clubs, hiking groups, board game meetups.3. Having a dog. I\u2019m outside regularly bumping into people. Having a dog often sparks a conversation and helped me to know my neighbors. You don\u2019t really need a dog though any way you can open a conversation is good. Compliment someone\u2019s shirt, ask a question, etcSo TL;DR walkable neighborhood that suits you, find something related to your hobbies and do it as much as you can, start conversations.Good luck, it took me years before I got into a rhythm.reply",
      "what neighborhood did you choose? was it santa monica, venice or mahattan beach? did you have any second choices/other favorites?reply",
      "the phrase I've heard about LA is that its \"a company town for creatives.\"reply",
      "If you work remote or in office two days a week, driving becomes more than manageable. ;)reply",
      "> \nPay is on average less than the bay.But how is the cost of living? or is that already factored in?reply",
      "Not sure if you mean LA-LA proper, but Orange County is definitely cheaper. Of course, it depends on where you work. I used to commute from Irvine to Santa Monica, and that drive was hell.reply",
      "Not really better than the Bay Area  I\u2019d say, especially in areas with a higher concentration of tech jobs. I think LA (and SD for that matter) are poor choices strictly financially speaking. But there\u2019s more to life than spending every dollar as efficiently as possible.reply",
      "Exactly, I love LA and there is no amount of money someone could pay me to move to SF. Interesting work, maybe, but SF is just nasty every time I go.Edit: this is my personal opinion, I shouldn\u2019t be so harsh on SF. Obviously a ton of great food and talented people there, it\u2019s just not for me.reply"
    ],
    "link": "item?id=44485428",
    "first_paragraph": ""
  },
  {
    "title": "Making Explainable Minesweeper (sublevelgames.github.io)",
    "points": 22,
    "submitter": "greentec",
    "submit_time": "2025-07-06T13:56:04 1751810164",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=44480852",
    "comments": [
      "Nice article, I wanted to point out though that your example board at the beginning has no such ambiguities or 50/50's. Here's a recreation of it so you can see for yourself, if you open it up from the bottom left as you did, the 1 2 1 leads to the board being solved rather quickly:https://agustinfitipaldi.com/minesweeper?seed=eyJ3aWR0aCI6OS...reply",
      "Yes, that's right.\nI'll have to update my blog with additional information about this. Thank you!reply",
      "Simon Tatham's Puzzles app has a minesweeper version that both A) generates on first click so you are guaranteed to never hit a mine on the first click and B) every board is 100% solvable with no need to guess. I have no idea what method it uses. I believe that _every_ puzzle in it is 100% solvable with no need to guess. It's also add free and completely local. It's a great app for anyone who likes puzzles on their phone.reply",
      "I looked at the code for this once. It's sort of a hack. It generates a random puzzle, tries to solve it with a deterministic backtracking(IIRC) solver that detects situations where it's stuck. If it is stuck, it shifts some mines around in the place where the solver got stuck, according to some heuristics, and keeps solving. It keeps doing this until the entire puzzle has been solved, verifying that the puzzle can be solved without any guesswork.I will second the recommendation. As someone who's wasted too many hours on minesweeper, it radically changes the game. Because I know there's a logical solution, I'm able to find patterns that I never found in the original, because I'd often assume it was just one of those guesswork situations. It's similar to how chess puzzles are easier than an equivalent position during a game. Because you know there's a neat solution, you're more willing to put in the legwork of searching for it. Learned a lot about the game simply by playing Simon's version.reply",
      "> anyone who likes puzzles on their phoneit's also available on windows and android - very good.reply",
      "It's also available in HTML/js/wasm, so practically all networked devices:https://www.chiark.greenend.org.uk/~sgtatham/puzzles/js/mine...However, the minesweeper puzzle is the one that causes a big wart in the API, which part of me has wanted to refactor for years.  (it's for the reason given in GP comment, the puzzle isn't generated until first click; it's the only one with this behavior and could be reworked to have the clicked area be a parameter to creation, but then it would have a slightly quirky main()-equivalent function.. IMO worth it for the cleaner API)Simon's puzzles have overall been an inspiration, some good reading if you're into algorithms and applied graph theory and don't mind that it's in C.reply",
      "The first example is not ambiguous. You can solve it starting at the bottom leftreply",
      "Thank you. I didn't see that!reply",
      "Do you mean the first screenshot of Windows Minesweeper (the left half of ems02.png)?Could you explain how? I haven't played a huge amount of Minesweeper, but I can't see how that can be solved without risk/luck.reply",
      "On the left side, the 1 at the bottom means that the third from the bottom must be  a mine (since the 2 can't point to the bottom two). The 1 touching that mine then excludes a bunch more, and that's sufficient to solve the rest.reply"
    ],
    "link": "https://sublevelgames.github.io/blogs/2025-07-06-making-explainable-minesweeper/",
    "first_paragraph": " Jul 6, 2025  \ud83d\udc41 0 views  \ud83c\udfaeGame \ud83e\udde9Puzzle \ud83d\udca3Minesweeper \ud83e\udd16Algorithm \ud83d\udcbbGame DevI recently purchased and played a game called 14 Minesweeper Variants during a Steam Summer sale. It was a fun game. However, I became curious while looking at the hints provided in the game. What exactly are these?Actually, when I played Minesweeper, which was a default Windows game, I could solve cases where there was a definite answer, but I remember stepping on countless mines in ambiguous situations. For example, situations like this:The numbers 1 and 2 indicate the number of mines in each cell\u2019s 8 neighbors (up, down, left, right, and diagonals). Empty cells mean there are no mines in their neighbors. However, in situations like the image above, it\u2019s not easy to figure out which squares have mines and which don\u2019t. It\u2019s also difficult to accurately guess the mine locations because there are too few mines.Let\u2019s look at this situation. This image is from this source, and it\u2019s exactly a 50/50 probability. There\u2019s"
  }
]