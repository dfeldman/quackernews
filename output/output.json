[
  {
    "title": "Sj.h: A tiny little JSON parsing library in ~150 lines of C99 (github.com/rxi)",
    "points": 297,
    "submitter": "simonpure",
    "submit_time": "2025-09-21T16:43:45 1758473025",
    "num_comments": 152,
    "comments_url": "https://news.ycombinator.com/item?id=45324349",
    "comments": [
      "What I love about this author's work is that they're usually single-file libraries in ANSI C or Lua with focused scope, easy-to-use interface, and good documentation. And free software license. Aside from the posted project, some I like are:- log.c - A simple logging library implemented in C99- microui - A tiny immediate-mode UI library- fe - A tiny, embeddable language implemented in ANSI C- microtar - A lightweight tar library written in ANSI C- cembed - A small utility for embedding files in a C header- ini - A tiny ANSI C library for loading .ini config files- json.lua - A lightweight JSON library for Lua- lite - A lightweight text editor written in Lua- cmixer - Portable ANSI C audio mixer for games- uuid4 - A tiny C library for generating uuid4 stringsreply",
      "I vendor in log.c all the time for C projects! I had no idea the author was relatively prolific. Would really recommend checking out log.c, it's really easy to hack in what you need to.reply",
      "Oh yeah, I used their Lume library back when I did games in LOVE2D. I actually ran into them a couple times in the IRC chat (and told them one of their ideas was bad, sorry about that rxi, I checked and it's actually a good idea lol)https://github.com/rxi/lumereply",
      "It's open source, not free software.reply",
      "\u2018Free software\u2019 and \u2018open source software\u2019 (as respectively defined by the FSF [1] and the OSI [2], which is how they\u2019re usually used in practice) have overlapping definitions. The project in question is released into the public domain via the Unlicense, which qualifies as a free software \u2018licence\u2019. Many of the other projects use the MIT/Expat licence, which also qualifies as a free software licence.[1] https://www.gnu.org/philosophy/free-sw.html\n[2] https://opensource.org/osdreply",
      "If anyone is curious on FSF's comments about various licenses: https://www.gnu.org/licenses/license-list.en.htmlreply",
      "And how exactly does it not qualify as an open source license? Seems to meet the definition as far as I can see.reply",
      "No claim was made that it is not open source. The contention was over if it was a free license or not:> not free softwarewhich it is. As F3nd0 said, it's both.reply",
      "I also use Unlicense. It's literally the most permissive license you can have lolreply",
      "The license says otherwise; hard to get freer than public domain.reply"
    ],
    "link": "https://github.com/rxi/sj.h",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A tiny little JSON parsing library\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.A tiny little JSON parsing libraryA small program to load a rectangle from a JSON string into a Rect struct:See the demo folder for further usage examples.This is free and unencumbered software released into the public domain. See\nLICENSE for details.\n        A tiny little JSON parsing library\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page."
  },
  {
    "title": "Be Careful with Go Struct Embedding (mattjhall.co.uk)",
    "points": 45,
    "submitter": "mattjhall",
    "submit_time": "2025-09-21T23:16:08 1758496568",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=45327531",
    "comments": [
      "Over the course of ~10 years of writing Go, my ratio of \"embedding a struct\" to \"regretting embedding a struct\" is nearly 1:1.I do not embed structs anymore. It is almost always a mistake. I would confidently place it in the \"you should be required to import 'unsafe' to use this feature\" bin.reply",
      "If you need to grab a particular struct's version of the data, you can via `opts.BarService.URL` or `opts.FooService.URL`: https://go.dev/play/p/MUSYJhmoC2DStill worth being careful, but it can be useful when you have a set of common fields that everything of a certain group will have (such as a response object with basic status, debug info, etc. and then additional data based on the particular struct). I don't know why they let you embed multiple layers and multiple objects though. I've never gotten value out of anything but a \"here's a single set of common fields struct embedding\".reply",
      "So I got curious and I looked at the compiler source code, and it does a depth-first search.The fascinating bit to me is that there is a consolidateMultiples function in go/src/go/types/lookup.go (lines 286-304) that detects when multiple embedded types at the same depth provide the same field name. I wonder why they don\u2019t do this for all levels. How deep could this even be in practice for it to matter? You could just have a hashmap with them all.reply",
      "> I wonder why they don\u2019t do this for all levels. How deep could this even be in practice for it to matter? You could just have a hashmap with them all.While it may seem questionable for fields; it applies to methods too and is potentially more useful as a way to override them when doing struct embedding but wanting to preserve an interface.reply",
      "I'm surprised this wasn't in the recent post submitted here: https://blog.habets.se/2025/07/Go-is-still-not-good.htmlIt's a one of a few rough edges in Go.reply",
      "Huh my IDE linter spits out warnings about this. Not sure which extension does it.reply",
      "That\u2019s actually crazy.\nWhy is this even a feature?reply",
      "Normally you wouldn\u2019t contrive to use embedded struct fields in this way. And you can\u2019t have the same kind of composition with methods - it\u2019s a compiler error:https://go.dev/play/p/r04tPta1xZoSo the whole article is basically about using the language in a way you normally would ever do.reply",
      "See how it's used in the standard library io types, it makes for quite nice composition: https://go.googlesource.com/go/+/refs/heads/master/src/io/io...reply",
      "I\u2019m sympathetic to parts of the Go design philosophy, but the only thing that comes to mind looking at this is \u201cdamn, that\u2019s some awkward (nominal-looking) syntax for (structural) intersection types\u201d.(It also feels to me that this sort of anonymous embedding is materially different for interfaces vs structs, though I admit that from a type-theoretic perspective it\u2019s not.)reply"
    ],
    "link": "https://mattjhall.co.uk/posts/be-careful-with-go-struct-embedding.html",
    "first_paragraph": "2025-08-05Go has a feature called struct embedding that allows you to compose types. It looks something like this:But what do you think this code does?I would expect this to fail to compile as URL is ambiguous. It actually prints abc.com, presumably as it is the least nested version of that field. This happened at the day job, although it was caught in a test. Be careful when embedding structs!"
  },
  {
    "title": "Lightweight, highly accurate line and paragraph detection (arxiv.org)",
    "points": 46,
    "submitter": "colonCapitalDee",
    "submit_time": "2025-09-21T21:18:14 1758489494",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=45326740",
    "comments": [
      "Only two weeks ago, I was trying to save an online-only book of 24 chapters. The text is filled with images to help illustrate and contextualize the content. I individually saved each chapter as PDFs and ran a few different command line tools to try to extract the contents to plain text. They all came out badly disjointed. Even tools that were meant to do what this paper describes failed miserably at reconstructing naturally flowing text.While this isn't something I need on a regular basis, it's timely news to hear about someone making progress on what seems like it ought to be a straightforward problem to solve. As the results of my efforts show, it must not be nearly as simple as one might expect.reply",
      "Interesting. Two engineers at Apple worked on something similar that would slurp character bounding boxes from a PDF page and reconstruct paragraphs, columns, tables, etc.It was surfaced in iOS a decade ago as \"tap to zoom\" feature for PDFs. It's funny \u2014 as with a lot of things there was a lot of sophisticated engineering under the hood and then marketing simply wants it to detect a tap in a paragraph and zoom to its bounds.I can't think of the last time I read a PDF on my phone or I would test it to see if it still works as I remember.reply",
      "Wow, I had no idea. That\u2019s pretty cool. I don\u2019t read a ton of pdfs on my phone, but I always find it super frustrating when that functionality is missing somewhere else.reply",
      "An interesting problem, particularly with handwritten documents.  And not limited to what they worked on, from their conclusion: \"...the number of clustering levels is not limited to two, since document layout tasks are extremely diverse in nature. Paragraphs can further be clustered into text columns or sections, which may belong to even higher level blocks. Figure 16 shows a physical paragraph, or part of a semantic paragraph which spans across multiple text columns...\"  Not to mention text wrapping around figures.The general field is called \"document structure analysis\" or \"document layout analysis.\"  There's been lots of work--at a cursory glance at this article, I'm not sure they've discussed that literature.I worked on a similar problem a decade or so, although our work was done mostly by hand.  We were trying to not only read in (bilingual) dictionaries using OCR, but turn them into dictionary entries, and then parse each entry into its parts (headword, part of speech, definitions or glosses, example sentences, subentries...).  I won't go into details, but to our surprise one of the most difficult parts for the machine to get right was recognizing bold or italicized text.reply",
      "2022, and we need this in browser reader modes.reply"
    ],
    "link": "https://arxiv.org/abs/2203.09638",
    "first_paragraph": "Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "Show HN: I wrote an OS in 1000 lines of Zig (github.com/botirk38)",
    "points": 96,
    "submitter": "botirk",
    "submit_time": "2025-09-18T15:05:12 1758207912",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=45290590",
    "comments": [
      "I wanted to understand what the bare minimum of an operating system looks like.So I built one in Zig, keeping the whole thing under 1000 lines of code.It can:\n\u2192 Boot from GRUB\n\u2192 Manage memory\n\u2192 Schedule simple tasks\n\u2192 Output text to VGAThe point was not to make it feature-rich, but to show how much is possible with just a few hundred lines if you strip everything down to the essentials.reply",
      "Nice work! Looks like most of the basics are covered, and meanwhile in my current kernel the RISC-V entrypoint is >700 lines (of C) just to get to the arch-independent entrypoint!I was just looking around for your input/output code, I don\u2019t know zig but I expected to find putChar in kernel.zig based on the import in common.zig, but I don\u2019t see it, should I be looking somewhere else? I didn\u2019t see any simple command line processing either as mentioned in the README?Mostly just looking around since your README mentioned VGA (and you seem to have a BIOS boot) which struck me as interesting on a RISC-V project, I was curious if you were actually using the SBI routines or had actually mapped in a VGA text mode buffer?reply",
      "There is a todo in the putchar stub. Looks like it\u2019s not implemented yet.I have it implemented here in my own roughly 1k line zig kernel: https://github.com/Fingel/aeros-v/blob/ddc6842291e9cf4876729...reply",
      "Hi botirk, really interesting project!If I build the project what is the output format and how could configure things to boot it?I know how to this with IMG and ISO files of course but not sure what to do with the build output if it's an executable?Also any insights into whether this would also boot on an ARM machine? Thanks!reply",
      "Check the build.zig file. It defines the arguments for QEMU to run the OS.You should be able to run zig build run.reply",
      "Curious: is it 1k lines of zig total with no libraries or 1k lines of zig with libraries?reply",
      "I don't know zig but the only import I see here is std so my guess is there are no libraries here?reply",
      "Nice project! I'm more accustomed to building and running these using QEMU/VirtualBox (which I understand you can do with here). But what's going on when I build and execute it under the host OS? Is it also running in userspace?reply",
      "Cool projects!A few suggestions:- You're committing .zig-cache to git, but that's build output, so it shouldn't be under version control. You should add it to .gitignore (you already have zig-cache without leading dot).- Your README.md refers to a CONTRIBUTING.md that doesn't exist- It's helpful to say exactly which Zig compiler you need. It currently says \"0.10.0 or later\" but 0.10.0 is almost three years old now.[0] Most 0.10.0 code does not compile in 0.15.1.[0] https://ziglang.org/download/#release-0.10.0reply",
      "Very cool! Mad props friendreply"
    ],
    "link": "https://github.com/botirk38/OS-1000-lines-zig",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.The OS-1000-lines-zig repository is a Zig-based operating system project. The primary purpose of this project is to create a simple, lightweight operating system with a focus on performance and scalability. The key features of this project include:To get started with the OS-1000-lines-zig project, you will need to have the following prerequisites installed on your system:To install the project, follow these steps:To use the OS-1000-lines-zig project, follow these steps:Some basic examples of usage include:The OS-1000-lines-zig project uses a monolithic kernel architecture, which means that the kernel and user space are combined into a single executable. The kernel is responsible for managing processes, memory, and other syste"
  },
  {
    "title": "My new Git utility `what-changed-twice` needs a new name (plover.com)",
    "points": 25,
    "submitter": "jamesbowman",
    "submit_time": "2025-09-21T21:59:12 1758491952",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=45327059",
    "comments": [
      "> There's bonus information too. If a commit is not mentioned in the report, then it only changed files that didn't change in any other commit. That means that in a rebase, I can move that commit literally anywhere else in the sequence without creating a conflict. Only the commits in the report can cause conflicts if they are reordered.This is only true in the textual level.Semantically, re-shuffling commits like this can still cause conflicts.  Ie it can break your tests.  Not at the end, but for the intermediate commits.reply",
      "Jujutsu has a command which is helpful for this sort of workflow called absorb which pushes all changes from the current commit into the most recent commit which modified that file. (Each file may be merged into a different commit).reply",
      "Yes, totally useful compared to default git base commands.And also - melding the \"changed twice\" (or thrice...) mutations into a single commit is a brilliant isolation of a subtle common pattern.reply",
      "I am familiar with an algorithm that stably brings a disjoint selection of items together around a specified point. Sounds similar to this case, where the disjoint selection are changes that happened to a given file.The name of the algorithm is \u201cgather\u201d, by Sean Parent and Marshall Clow.reply",
      "\"muster\" comes to mind and is different than \"gather\".reply",
      "You know, I find myself partially agreeing that a number of utilities for git could be done quite nicely in perl.reply",
      "Git's repository includes quite a bit of Perl, but they want to get rid of it.reply"
    ],
    "link": "https://blog.plover.com/2025/09/21/#what-changed-twice",
    "first_paragraph": "\n\n   Mark Dominus (\u9676\u654f\u4fee)\nmjd@pobox.com \n\n\n\nAbout me\n\nRSS\nAtom 12 recent entries\n\nMy new git utility `what-changed-twice` needs a new name\nMystery of the quincunx's missing quincunx\nThe fivefold symmetry of the quince\nA descriptive theory of seasons in the Mid-Atlantic\nClaude and I write a utility program\nA puzzle about balancing test tubes in a centrifuge\nProof by insufficient information\nWillie Singletary will you please go now?\nHow our toy octopuses got revenge on a Philadelphia traffic court judge\nDoes someone really have to do the dirty jobs?\nThe mathematical past is a foreign country\nBaseball on the Moon\n\nArchive:\n2025:\n    JFMAMJ\n\u00a0JAS\n2024:\n    JFMAMJ\n\u00a0JASOND\n2023:\n    JFMAMJ\n\u00a0JASOND\n2022:\n    JFMAMJ\n\u00a0JASOND\n2021:\n    JFMAMJ\n\u00a0JASOND\n2020:\n    JFMAMJ\n\u00a0JASOND\n2019:\nJFMAMJ\n\u00a0JASOND\n2018:\nJFMAMJ\n\u00a0JASOND\n2017:\nJFMAMJ\n\u00a0JASOND\n2016:\nJFMAMJ\n\u00a0JASOND\n2015:\nJFMAMJ\u00a0JASOND\n2014:\nJFMAMJ\u00a0JASOND\n2013:\nJFMAMJ\u00a0JASOND\n2012:\nJFMAMJ\n\u00a0JASOND\n2011:\nJFMAMJ\n\u00a0JASOND\n2010:\nJFMAMJ\n\u00a0JASOND\n2009:\nJFMAMJ\n\u00a0JASOND"
  },
  {
    "title": "40k-Year-Old Symbols in Caves Worldwide May Be the Earliest Written Language (openculture.com)",
    "points": 96,
    "submitter": "mdp2021",
    "submit_time": "2025-09-18T07:27:22 1758180442",
    "num_comments": 53,
    "comments_url": "https://news.ycombinator.com/item?id=45286622",
    "comments": [
      "It's not impossible that there's something here, but I think this sort of presentation isn't likely to convince linguists.I in particular am not a huge fan of the infographic[0] that uses the same image asset to refer to a spiral, box, sun, dots, etc... for entire continents, for all recorded history.I would prefer to see pictures of these symbols, and their in-situ neighbors, and a corresponding symbol across a wide distance that's within at most 2-300 years.We want to feel that language has commonalities, that people traveled long distances and times and kept some common bond. It might even make intuitive sense, if the people share cultural similarities. But it often results in linguists making motivated decisions without enough evidence, like happened with the \"Altaic\"[1] language family.[0] https://images.newscientist.com/wp-content/uploads/2016/11/m...\n[1] https://en.wikipedia.org/wiki/Altaic_languages#Weakness_of_l...reply",
      "\"I think this sort of presentation isn't likely to convince linguists.\"  Speaking as a linguist... you're right, it doesn't convince me.  Nearly all languages have more sounds (phonemes) than the symbols shown in most of those infographics--more consonants, even (many early writing systems only represented consonants).  All languages have more distinct syllables than any of those symbol systems (many early writing systems were syllabic).  And obviously all languages have far more words (or morphemes) than any of those systems.What would be more convincing?  A sequence of a few dozen symbols in some particular location, and likely to have been written at the same time (rather than centuries or millennia apart), by the same person (so if there were handprints, the handprints would be the same person's hand(s)), where the number of recognizable symbols is twenty or more.  I don't say that would be all that would be needed to convince linguists, but it would be a start.reply",
      "I think these cave drawings are a global written language, not a universal spoken language.- Smushed oval is water, because it looks like a water drop from the side.- Hand is a person or family or tribe.- Hand surrounded by circle is what is around us, water around us, swim.- Jagged line is danger. Having to dart back-and-forth to get away from a predator or rough sharp rocks.- Small filled circles are rocks.- Large circle is large body of water.- Group of open circles is area that gets rain or is wet.- Vertical lines are a penetrable forest.- Crosshatch is an impenetrable area.- Three lines up to point are a place to gather/sleep/have a fire.- Four lines coming up is fire/dry brush to make fire.- Horizontal line is a plain/flat area.- U-shape is a significant valley or dip.- Tree-branch looking thing means a place to get wood for fire.- Snake symbol is snake/going around obstacles/not a direct path.- Lines covered by line at top is a hut/shelter, because it's made with trees.- The spiral is home/where to go/journey.- The X is a rest spot or a place where things are put. People had to be on top of each other for warmth, and spears/tools may go in a pile.- The rectangle with bent top is ocean, deep water, or pit with water.reply",
      "This is retrofitting. It's not what these references mean.These are entoptics. We've tested their neural sources for 40 years.https://www.jstor.org/stable/2743395Google entoptics and look at the graphic array.reply",
      "\u201c I think these cave drawings are a global written language\u201dAny particular evidence to back up that claim?Your explanations sound arbitrary and about as likely as anything else.reply",
      "Perhaps quite a bit more not impossible?We only know of the symbol use (if they were symbols) that happened on media that lasted tens of millennia. If they even painted symbols on deeply underground cave walls, they likely had them on many less durable surfaces as well. There could have been a huge oral tradition augmented by drawn memorization aids on durable but not that durable media. That augmented oral tradition would then occasionally, every few dozen generations or so, due to some exceptional circumstances, spill over to the near-eternal medium of a cave wall.reply",
      "I\u2019d also need to see statistics - without any selection bias introduced by what the researcher finds interesting.There may be 30 or so \u201ccommon\u201d patterns that appear globally - that would be very interesting if the total pool of symbols was say 50 but much less so if there are thousands of different symbols.reply",
      "> I in particular am not a huge fan of the infographic[0] that uses the same image asset to refer to a spiral, box, sun, dots, etc... for entire continents, for all recorded history.That infographic has bigger problems.>> The similarities suggest the marks are more than just random scribblesExcept here are some of \"the marks\":    x # |||| * \u4e00 (hand)\n\nOK, a hand is a complex shape. It does suggest there's more going on than random scribbles. It suggests.........that the people who drew a hand had hands.Every single one of the other marks -- and the hand mark, too -- are things you could expect to find if you gave a small child some paper and crayons.reply",
      "I loved the infographic, although it's clearly overly simplistic it does suggest a sense of where there is no claimed extent of a symbol-type, which might in some cases support broad patterns of domains of exchange. It generates interest.The real linguistic question is not whether the art had representational value and thus was a form of communication: this is known and clear, simply through the frequent nature of pictographic forms of recognizable elements of the environment.Rather, it is more to what extent there was a systematization of the pictographs through phonetic or phonosyllabic use, and to what extent any such symbol repetition indicates a depth of shared culture across spatiotemporal divides. At what point does it count as 'writing'?In general, there was clearly shared culture (technology meant that options were somewhat limited, and we have traced major changes such as the ingress of dingoes from Asia to Australia). What we are learning recently is the hitherto dismissed extent to which disparate branches of hominids survived and persisted in pockets across time, how we mixed with them and adopted their features. IMHO grand colonial theories of migration (often patriarchic/single-event/unidirectional) are falling away as novel evidence such as mtDNA shows far longer admixture and pluralistic bidirectional flows of culture, genes and technology.Personally, having seen some ancient cave paintings near the northern Burmese and Vietnamese borders as well as in Australia and most recently in a book on Baja California, the similarities are striking, but this does not mean people teleported across the globe. It seems early peoples globally worked a broadly similar techno-social palette to leave marks across time, persisting their identity and expression in ways which probably marked social presence, status, ritual and interpretation. Stories became written and illustrated, but only in summary. Usually we cannot recover the actual content because all that is left are cues, other times modern anthropology preserved traditional interpretation. We often see presumed or literal figures, animals (spirits? gods? prey? food?), weapons, abstract markings, celestial bodies. Things that would be notable in such a society. 20th century anthropology has shelves of studies on this stuff. Here in Sydney, a city of 4+ million people, there are many aboriginal sites with engravings of people, emu, fish, dolphins, turtles, whales, kangaroos, reptiles, etc. Further north, even far inland, there exists rock art of early European ships sighted on the coast, suggesting use for record, story-telling, teaching.reply",
      "For anybody into prehistoric abstract symbols who hasn't encountered this, \"The Signs of All Times 1988\" [1] is a super interesting study. Also very readable for the majority of us who are not in the field. Pairs nicely with Herzog's Cave of Forgotten Dreams [2] and any mid-tier Cabernet.[1] https://www.jstor.org/stable/2743395[2] https://en.m.wikipedia.org/wiki/Cave_of_Forgotten_DreamsAnd just my two cents as an under-qualified former art history teacher...It's fascinating and totally valid to try to analyze these symbols as proto-linguistic, but it can be even more interesting to imagine the cognitive roll these kinda of abstract symbols might have played outside the scope of language as we understand it.Trying to imaging the structure of the mind and experiencing reality with a complete absence of language can be immensely mind-expanding, even just as a thought experiment. At least it was for me.reply"
    ],
    "link": "https://www.openculture.com/2025/09/40000-year-old-symbols-found-in-caves-worldwide-may-be-the-earliest-written-language.html",
    "first_paragraph": "in History, Language Lessons |   \tSeptember 17th, 2025  44 Comments \nWe may take it for grant\u00aded that the ear\u00adli\u00adest writ\u00ading sys\u00adtems devel\u00adoped with the Sume\u00adri\u00adans around 3400 B.C.E. The archae\u00ado\u00adlog\u00adi\u00adcal evi\u00addence so far sup\u00adports the the\u00ado\u00adry. But it may also be pos\u00adsi\u00adble that the ear\u00adli\u00adest writ\u00ading sys\u00adtems pre\u00addate 5000-year-old cuneiform tablets by sev\u00ader\u00adal thou\u00adsand years. And what\u2019s more, it may be pos\u00adsi\u00adble, sug\u00adgests pale\u00adoan\u00adthro\u00adpol\u00ado\u00adgist Genevieve von Pet\u00adzinger, that those pre\u00adhis\u00adtoric forms of writ\u00ading, which include the ear\u00adli\u00adest known hash\u00adtag marks, con\u00adsist\u00aded of sym\u00adbols near\u00adly as uni\u00adver\u00adsal as emo\u00adji.The study of sym\u00adbols carved into cave walls all over the world\u2014including pen\u00adni\u00adforms (feath\u00ader shapes), clav\u00adi\u00adforms (key shapes), and hand stencils\u2014could even\u00adtu\u00adal\u00adly push us to \u201caban\u00addon the pow\u00ader\u00adful nar\u00adra\u00adtive,\u201d writes Frank Jacobs at Big Think, \u201cof his\u00adto\u00adry as total dark\u00adness until the Sume\u00adri\u00adans flip the switch.\u201d Though the sym\u00adbols may nev\u00ader "
  },
  {
    "title": "Calculator Forensics (2002) (rskey.org)",
    "points": 62,
    "submitter": "ColinWright",
    "submit_time": "2025-09-18T18:43:34 1758221014",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=45293438",
    "comments": [
      "Couldn't resist checking what math.h does for floats and doubles on godbolt, it returns slightly above 9, but curiously not exactly equal to any answer in that list [1]. Maybe not that surprising, these transcendental functions are always iffy in the last digits.[1]: https://godbolt.org/z/dK85Eq8r6reply",
      "CORE-MATH provides correctly rounded transcendental functions.  (Though that doesn't mean that this calculation will return exactly 9.  And I haven't tried it.)https://core-math.gitlabpages.inria.fr/reply",
      "Forensics? Have these calculators committed a crime (against numerical analysis)?reply",
      "I think it's forensic in the sense that, should you perform this operation on an unknown calculator, this chart could be used to identify it.reply",
      "If they have, this site has their fingerprints.reply",
      "Failure to identify an identity! Straight to calculator jail!reply",
      "Nice. Checked on a Commodore SR-37, produces the same result as the SR-36 per the site. (9.08210803  Commodore SR-36)reply",
      "I always wonder... if there was an AGI and it's chipset gave the wrong answer, how would it ever know?reply",
      "The neural networks we use today have really terrible accuracy, and we tend to make them worse, not better, as having more neurons is better than having more precision. Human brains are also a mess, but somehow, they work, and we are usually able to correct our own mistakes.Since by AGI, we usually mean human-like, that system should be able to self correct the same way we do.reply",
      "How do humans know? usually someone corrects someone else. we have repeatability in physics, or we wait 30 years and quash convictions etc. etc.reply"
    ],
    "link": "https://www.rskey.org/~mwsebastian/miscprj/results.htm",
    "first_paragraph": "\r\nThis compilation Copyright (C) 2000-2007 Mike Sebastian.\r\nResults from the evaluation of this equation in degrees mode:\r\narcsin (arccos (arctan (tan (cos (sin (9) ) ) ) ) )\r\n\na The generic 56 function scientific calculator is sold under \r\nnumerous brand names in several distinct case styles. For example,\r\nthis calculator is sold as the Radio Shack EC-4038, DATEXX DS-700, \r\nDigiTech ATC-517 and ATC-828, Tozai ATC-828, Victor 930, Sentry CA565, \r\nLeWorld 250, and Canon F-502 (billed as having 136 functions).\nb Polynomial approximations used to compute trigonometric functions.\nc I believe this is an APF Mark 8501 manufactured for Radio Shack.\nd A model of the HP Spice series.\ne A model of the HP Voyager series.\nf A model of the HP Pioneer series.\ng The last digit is indeed different from that of more common (later?) versions of the Casio fx-7000G.\nh The Omron SR-10 produces a different result depending on whether or not the\r\ndisplay format switch is in the EXP (1.2199423E01) or FLT (14."
  },
  {
    "title": "DXGI debugging: Microsoft put me on a list (slugcat.systems)",
    "points": 207,
    "submitter": "todsacerdoti",
    "submit_time": "2025-09-21T14:45:50 1758465950",
    "num_comments": 66,
    "comments_url": "https://news.ycombinator.com/item?id=45323207",
    "comments": [
      "This is due to an overall odd strategy by the DirectX graphics team, which is to implement many of the optimization and enhancement features by Detour-ing API calls in the OS. Essentially, the Windows OS is patching itself to implement features.Unfortunately, this is being done without core OS assistance like the AppCompat system, so it comes with similar problems to unassisted regular user-space patching. In this case, the Detours code used by DXGI is unable to support the current PAC-enabled function prologues in the current version of Windows 11 ARM64. It isn't limited to just the OP's scenario; attempting to enable Auto Super Resolution (AutoSR) on any native ARM64 program using DirectX will also currently crash in a similar manner in EnumDisplaySettings().The full screen optimization that is mentioned also has some history. It's well intentioned to remove an entire full-screen copy per frame and increase performance/efficiency, but had some problems. When it was originally implemented in Windows 10, it broke full screen mode for some DirectX 9 apps because it made some incorrect assumptions about the window handle supplied by the application for focus tracking. But it was frustrating to deal with, because the mechanism was nearly undocumented and had no opt-out besides a manual user compatibility checkbox. It took me a couple of days of tearing apart the core windowing guts of my program to figure out what Microsoft had done and how to work around it, and it took several months for the Windows team to fix it on their end.reply",
      "That strategy is described here, and comes from game developers wanting DirectX to be untied from OS versions as it used to be.https://devblogs.microsoft.com/directx/gettingstarted-dx12ag...reply",
      "The Agility SDK is unrelated to what is being discussed here. It is a delivery mechanism for the Direct3D 12 runtime instead of DXGI, it is opt-in from the application side, and is done through a more stable loader stage in the core OS instead of hot-patching.It does, however, give insight into the situation that the DirectX team is in. The in-box version of D3D12Core in the latest version of Windows 11 is SDK version 612. This can be compared against the released Agility SDK versions:https://devblogs.microsoft.com/directx/gettingstarted-dx12ag...SDK version 612 is just before the 613 Agility SDK release on 3/11/2024. This means that the version of DirectX 12 they are able to ship in the main OS is a year and a half behind the latest released version.reply",
      "I thought that it also included updated DXGI components.reply",
      "No, the Agility SDK only includes updated D3D12 core and debug layer components.https://microsoft.github.io/DirectX-Specs/d3d/D3D12Redistrib...reply",
      ">In this case, the Detours code used by DXGI is unable to support the current PAC-enabled function prologues in the current version of Windows 11 ARM64Surely microsoft could avoid patching this on arm in the first place though right? As in whatever gating they use should make sure it\u2019s not on arm.reply",
      "The features in question are platform agnostic. They could temporarily disable the detouring for native ARM64 apps since the mechanism is broken on that architecture, but it's not ideal since the Snapdragon X platform is one of the main platforms for the Auto Super Resolution feature. Upgrading sequential/blit mode swap chains to flip model theoretically should be legacy, but as OP shows, it's not really as new graphics code is still being shipped without flip model support.Note that the detouring problem is only an issue for native ARM64 programs. x64 programs running in emulation on Windows ARM64 work fine.reply",
      "It seems incredible to me that Microsoft would alter the execution of programs based on the filename of the executable. For all we know, there was another game with the same filename and this game has been caught in the crossfire. This is crazy stuff.reply",
      "Doing things based on exe filename is quite standard in Windows land. There's literally a registry key called \"Image File Execution Options\" where you can add a subkey with the name of the exe and then add values to control things like what interpreter to launch it under by default. Similar to Linux's binfmt registration, but based on filename rather than magic bytes. Very useful for attaching debuggers to specific subprocesses that you can't launch manually, as long as the process is named sufficiently uniquely.https://techcommunity.microsoft.com/blog/askperf/two-minute-...reply",
      "Renaming anything (without a manifest) setup.exe will cause Windows to ask for UAC elevation. The user cannot opt-out. There are a few other hard coded strings like \"install\" that cause this AFAIR. You can also use its_a_setup_mr_bond.exe for example.reply"
    ],
    "link": "https://slugcat.systems/post/25-09-21-dxgi-debugging-microsoft-put-me-on-a-list/",
    "first_paragraph": "Why does Space Station 14 crash with ANGLE on ARM64? 6 hours later\u2026So. I\u2019ve been continuing work on getting ARM64 builds out for Space Station 14. The thing I was working on yesterday were launcher builds, specifically a single download that supports both ARM64 and x64. I\u2019d already gotten the game client itself running natively on ARM64, and it worked perfectly fine in my dev environment. I wrote all the new launcher code, am pretty sure I got it right. Zip it up, test it on ARM64, aaand\u2026The game client crashes on Windows ARM64. Both in my VM and on Julian\u2019s real Snapdragon X laptop.The client logs are empty. They suspiciously cut out right after SDL is initialized.Of course it isn\u2019t that easy.Given that there\u2019s no logs, this has to be a native crash. That means it\u2019s WinDbg time.\n\n\n\n\nSo at first I decided to start Space Station 14 Launcher.exe directly through WinDbg. This is annoying because I have to go into child processes (with .childdbg 1) twice, and for some reason there\u2019s a lot "
  },
  {
    "title": "Procedural Island Generation (VI) (brashandplucky.com)",
    "points": 28,
    "submitter": "ibobev",
    "submit_time": "2025-09-21T21:11:57 1758489117",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=45326690",
    "comments": [
      "Part III was discussed a few days ago: https://news.ycombinator.com/item?id=45275049reply",
      "Great work! I'm using almost the same algorithms to build a worldmap generator like azgaar's using rust and egui, hope i can release it somedayreply"
    ],
    "link": "https://brashandplucky.com/2025/09/28/procedural-island-generation-vi.html",
    "first_paragraph": "\nSep 28, 2025\n      \u2022 Chema GuerraThis is the final installment of our procedural island generation series. After building the mesh foundation (Part I), painting elevation hints (Part II), adding mountain detail (Part III), simulating hydrology (Part IV), and colouring the terrain with our biome ramp (Part V), it is time to package the result. CartoKit finishes by baking the terrain into a compact mesh, visualising it through an egui viewer, and exporting artefacts for other tools.The journey from mathematical representation to visual output ends with three components:Let\u2019s look at each piece.Terrain::from_terrain (src/terrain.rs:368) distils the incremental TerrainBuilder state into a reusable asset. The bake step:The baked mesh is still a TopoMesh, meaning we retain the halfedge connectivity that made the earlier stages convenient. When you call Terrain::from_terrain(&builder), you get a self-contained structure that is ready for export or further processing without touching the heav"
  },
  {
    "title": "Timesketch: Collaborative forensic timeline analysis (github.com/google)",
    "points": 100,
    "submitter": "apachepig",
    "submit_time": "2025-09-21T16:43:19 1758472999",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=45324343",
    "comments": [
      "Interesting that it's code owned by Google but a product. Is it because it was developed by someone during work (and hence owned by Google) but nobody from Google endorses it?reply",
      "This is just how it looks when you publish an open source project at Google.Google controls the repo hence it's under the Google GitHub org. But then you just slap the \"not a Google product\" thing at the end to clarify that it's \"just\" some engineers publishing code rather than the release of the code of a Google product (nor a major strategic open source initiative like Go).reply",
      "Their process is documented at https://opensource.google/documentation/reference/releasingSo it could even be a pure hobby project - not something done for work - where the initial author (over a decade ago) chose to release it under Google's copyright rather than use the exception process.reply",
      "Any Googler can write code and open source it on the Google GitHub (within reason, the process is quite straightforward). So no, Google as an entity does not official endorse it, all it means is at least one employee is working on that particular effort.reply",
      "Do I get it right that translated from marketingspeak it means \"log viewer with backend\"?reply",
      "I'm more understanding it as a tool so that multiple people collaborating on investigating a hack/data-breach/etc can audit/tag events in the interesting logs (ssh logins, weird executables starting,network probes, etc) from various sources and get a _combined timeline_ to easier determine adversary movement, cause-and-effect and so on to easier find what needs patching,etc.reply",
      "Only had a glance on my phone but maybe this would also be useful for incident postmortem timelines.reply",
      "There's no timeline view in this timeline analysis tool?reply",
      "Website: https://timesketch.org/reply",
      "Python 3 backend, Vue js front end, docker, Apache 2 licensed.reply"
    ],
    "link": "https://github.com/google/timesketch",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Collaborative forensic timeline analysis\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n\n\n\n\nTimesketch is an open-source tool for collaborative forensic timeline analysis. Using sketches you and your collaborators can easily organize your timelines and analyze them all at the same time.  Add meaning to your raw data with rich annotations, comments, tags and stars.<This is not an official Google product (experimental or otherwise), it is just code that happens to be owned by Google.\n        Collaborative forensic timeline analysis\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page. There was an error while loading. Please reload this page.\nThere was an error while loading. Please reloa"
  },
  {
    "title": "I forced myself to spend a week in Instagram instead of Xcode (pixelpusher.club)",
    "points": 188,
    "submitter": "wallflower",
    "submit_time": "2025-09-21T14:00:16 1758463216",
    "num_comments": 71,
    "comments_url": "https://news.ycombinator.com/item?id=45322819",
    "comments": [
      "As a solo/indie dev who's currently early in building a product, I've been keeping a journal of \"ideas\" for content in a txt file in the codebase as I hate context switching and want to build this up before I get to it.Here's what I've done:- At the top of the file I've listed my audience, 3 personas- My content has to be useful to one of those- If I see an interesting post/take on social media I hold the link and write an idea for my own spin/take (takes 30 seconds) - log it- If I have a problem/issue that I resolve that would be useful to my audience - log it- If I have a key product/design/UX choice that took some time to think through - log it- If something takes me much longer than I thought because there's more to it (iceberge effect) - log itI've been doing this for about 6 weeks now and I've got 100 ideas for pieces of content.One of the best pieces of advice I read is that when you're solo, many times people/community rally around you. You are the product too so you have to share what you're doing, it's interesting to many, not just your customers. They care about the advice you give, the input you have, the way you build things. You are a subject matter expert in this domain, so you should structure your content with this in mind.\"You escape competition through authenticity.\" - @navalreply",
      "I have a paper notebook next to my keyboard entitled 'sleep deprivation induced fever-dreams'. It is an excellent collection and useful tool so I dont let my ideas runaway with my attention.Often when I return to what I write, about 60% I look back at with the novelty gone, and reassess from a more suitable eye and cross them off the list.reply",
      "I get the same whenever I get my daily walk in. Pure unbounded epiphany of ideas and experiments, surging with creativity. I'll revisit them a few days later and for 90% of them my immediate internal response is \"that sounds like a really sh*t idea\".reply",
      "Yea 90% is a more realistic fail rate of my 2am ideas which seem great at 2am, but then terrible a few days later with good sleep.  If GP is batting almost .400 for insomnia fever ideas, that sounds pretty stellar to me.reply",
      "That is a perfect name for a notebook like that. I have one in my head and it never lets me sleep. Maybe I should keep one like yours to dump mine into it. btw 60% is incredible.reply",
      "And, if you're like me, you notice sometimes that you've been rediscovering the same interesting thought over and over again, and should really give it some structure and start building on it, rather than rewriting it again and and again, years apart. That's on the list of things I think that LLMs could help with.Of course that's also an opportunity to combine the best of all of those iterations together, and still toss out a bunch of paper (or archive a bunch of bits.)reply",
      "Same! My only challenge has been getting the product to be decent enough to the point where I start sharing these. Perhaps I shouldn't wait though...reply",
      "I personally enjoy reading about the journey most solopreneurs take, and that includes the mistakes they made, their thought process etc. So definitely start sharing instead of waiting.reply",
      "Sounds like great advice. Thanks for sharing. I'd hoped to see a blog link in your HN profile; do you have one?reply",
      "They create a fake story about a new feature to promote the app. And then they work out how to create fake text messages.  I don't like the approach they used. Get real users to provide a real testimonials instead.reply"
    ],
    "link": "https://www.pixelpusher.club/p/i-forced-myself-to-spend-a-week-in",
    "first_paragraph": ""
  },
  {
    "title": "Why your outdoorsy friend suddenly has a gummy bear power bank (theverge.com)",
    "points": 159,
    "submitter": "arnon",
    "submit_time": "2025-09-21T12:31:57 1758457917",
    "num_comments": 185,
    "comments_url": "https://news.ycombinator.com/item?id=45322135",
    "comments": [
      "This is a very poorly researched article. A few things worth considering:- 20,000 mAh is the rated capacity. Anyone who has tested 18650 batteries (which are the cells typically used in these battery packs) knows the rated capacity != tested capacity.- Watthours is more important than amp hours- Tested watt hours as typical loads is more important than amp hours- It's very normal to see tested capacity to be roughly 70~80% of rated capacity.- This commenter said they got \"At 18W average, I pulled out 55.4Wh\" on the Haribo [0]- The generally considered \"gold standard\" for ultra light batteries in this range is the Nitecore NB20000 Gen 3, which regularly tests around 56 Wh.So yes the conclusion is correct - you get roughly the same amount of capacity for a typical load (18W phone) for a cheaper price and slightly less weight. Very curious what battery cells the Haribo uses.[0] - https://old.reddit.com/r/Ultralight/comments/1li5rxw/20000ma...reply",
      "you're never going to construct a lightweight pack with cylindrical (18650/21700, whatever) cells.a real light weight battery construction isn't going to have redundant casings and fuses; it'll be the bare minimum pouch/plate style construction, the bare minimum fuses at main junctions, and as light a protective shell as can be produced to house it all in. It probably won't have a BMS of any kind on board, with the functions handled up-stream from the battery.here's something close, although with plenty of weight compromise for reliability and safeties' sake. : https://global.honda/en/tech/motorsports/Formula-1/Powertrai...reply",
      "> Watthours is more important than amp hoursI'd go a step further and say that amp hours is meaning less since voltage is not specified. The only valid battery capacity unit of measure is watt hours.\nWhile most battery packs use a single 3.7 lithium ion battery, Apple's first gen MagSafe battery pack used two internal batteries in series, throwing off everyone's amp hours only comparison.reply",
      "> The only valid battery capacity unit of measure is watt hours.I would also accept Joules. But yes, the unit should be a unit of energy.reply",
      "We could also talk about lb\u2022AU (pound Astronomical Units), but generally it's best to stick to what's standard so readers don't need to do conversions. Watt hours is great.reply",
      ">18650 batteries (which are the cells typically used in these battery packs)Absolutely not. Pouch cells are what most powerbanks have.reply",
      "you don't have to go that far. probably that demographic won't even carry a power bank to begin with.reply",
      "> Ultralight culture seems a little nuts to the uninitiated.I prefer \"Durable, but as light as possible\", not the other way around. Most ultralight gear breaks after a few uses or when it is mishandled in anything-less-than-perfect conditions, which, happens a lot outside.reply",
      "My ultralight gear has been sufficiently durable for my backpacking and hiking, even off trail. I'm not hunting or repairing trails but stuff lasts a while. The only exception I've found is inflatable pads which get punctured but no more often than bicycle tire inner tubes and they can similarly be patched with some effort.reply",
      "What do you use those pads for I wonder?reply"
    ],
    "link": "https://www.theverge.com/tech/781387/backpacking-ultralight-haribo-power-bank",
    "first_paragraph": ""
  },
  {
    "title": "INapGPU: Text-mode graphics card, using only TTL gates (github.com/leoneq)",
    "points": 34,
    "submitter": "userbinator",
    "submit_time": "2025-09-18T04:53:03 1758171183",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=45285562",
    "comments": [
      "Congrats on getting something that functions, despite the glitches, which are probably due to crosstalk and other noise over the rat's nest wiring.reply",
      "Not my project; but I am curious about the vertical ghosting, as the only time I've seen that happen was with an LCD that had a failing column driver.reply",
      "How do you handle them latching the wrong way and letting out the magic smoke? Built into the chips?reply",
      "Nice to see support for Standard Galactic Alphabet.reply"
    ],
    "link": "https://github.com/Leoneq/iNapGPU",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Text-mode graphics card, using only TTL gates.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Text-mode graphics card, using only TTL gates.\nInspired by Ben Eater's \"World's worst video card\", I built myself something more.. worse? His video card was rather a digital frame, than a working video card. I fixed this - and I optimized the timer circuitry.(anyway, i have to tell you that my english is not best, but i try)I haven't built a computer yet, so the card is tested with Arduino Mega, as it have many pins and it's quite cheap. So, as long as you have 21 free pins on your microcontroller (or you have hooked some shift registers), you can connect the GPU card to almost anything - Arduino, ESP, STM etc. The test code for Mega is attached in this repository."
  },
  {
    "title": "Zig got a new ELF linker and it's fast (github.com/ziglang)",
    "points": 58,
    "submitter": "Retro_Dev",
    "submit_time": "2025-09-21T22:40:28 1758494428",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=45327318",
    "comments": [
      "The more I hear about Zig, the more I appreciate it. Its vertically integrated stack (with the custom linker and code-generation backends) stands out to me as a really compelling feature that enables interesting optimizations. The compiler is also much easier to interact with in a consistent way compared to C. I've been using it as an experimental backend for my language project with great results.reply",
      "I've been writing Zig since the beginning of the year. Just playing around with some small stuff really. I want to love the language. It does so much right, but there's something about it just feels off to me. And then the recent Io change really bugged me.reply",
      "Between mold and this, the linker space appears to be going through a renaissance.Does anyone know if it\u2019s reasonably easy to use elf2 as a standalone linker in a c/c++ toolchain? Or is it specially built just for Zig?reply",
      "Looking in the source tree, it doesn't look like it has it's own entry point. Zig is heading in the direction of a very verticall integrated compilation stack (I believe this is where most of the speed up comes from), so I'm not really sure of the utility with using it outside of the Zig world.https://github.com/jacobly0/zig/tree/4508c2543508e04253471e1...\nhttps://github.com/jacobly0/zig/blob/4508c2543508e04253471e1...reply",
      "If I recall correctly, this is one of the final pieces that allows zig to be used as a fully self-contained cross-compiling C toolchain (once its linker is enabled for more platforms / formats)reply",
      "I might be misunderstanding, but I don\u2019t think that's quite accurate. As I understand it, Zig ships a Clang frontend and wraps it with precompiled sysroots. Unless they're developing an LLVM backend, I'm not sure how it could serve as a completely self-contained toolchain.reply",
      "zig has a cross-compiler frontend (zig cc) which can be used as a drop-in replacement for a custom sysroot + binutils + gcc for several platforms. I've used it to build OCaml cross-compilers that only depend on zig itself (https://www.chrisarmstrong.dev/posts/ocaml-cross-compilation...).There are other projects that have used it in a similar way too.[1] https://actually.fyi/posts/zig-makes-rust-cross-compilation-...\n[2] https://jcbhmr.com/2024/07/19/zig-cc-cmake/reply",
      "Interesting. OCaml cross compilation scared me the one time I considered it, so it's nice to know this is an option. I will be pedantic and say it isn't a replacement for a custom sysroot/binutils/whatnot, since it really just papers over those user-facing details by shipping a prebuilt collection of sysroots and using LLD. They sorta get this for free since they need it for cross-compiling Zig code anyways.reply",
      "Zig does have its own native x86_64 backend for debug compilation.ref: https://ziglang.org/devlog/2025/#2025-06-08reply",
      "They're also getting an aarch64 backend soon (or has it already landed)? Really looking forward to this one for development on my Mac!My point was that Zig uses their backends (which includes their homegrown ones), but since `zig cc` is a wrapper around Clang, it always goes through the `LLVM` path and sidesteps the Zig backend(s).reply"
    ],
    "link": "https://github.com/ziglang/zig/pull/25299",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page. There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\nHave a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.\n  By clicking \u201cSign up for GitHub\u201d, you agree to our terms of service and\n  privacy statement. We\u2019ll occasionally send you account related emails.\n    Already on GitHub?\n    Sign in\n    to your account\n  This iteration already has significantly better incremental support. In fact, this PR also enables every incremental test for x86_64-linux-selfhosted and already passes all of them with this linker.Closes #24110\n\n\n\n\n\n\n\n\n\n    Sorry, something went wrong.\n   There was an error wh"
  },
  {
    "title": "Node 20 will be deprecated on GitHub Actions runners (github.blog)",
    "points": 71,
    "submitter": "redbell",
    "submit_time": "2025-09-20T11:19:37 1758367177",
    "num_comments": 20,
    "comments_url": "https://news.ycombinator.com/item?id=45312323",
    "comments": [
      "I find the repeated deprecations on GitHub Actions frustrating to work with. One of the key goals of a build system is to be able to come back to a project after several years and just having the build work out of the box.Yet with GHA I need to update actions/checkout@v2 to actions/checkout@vwhatever (or, what I'm doing now, actions/checkout@main because the actual API haven't actually changed) because... some Node version is \"out of maintenance\"?!GHA is literally code execution as a service. Why would I care whether the Node runner has a security vulnerability?reply",
      "That's why we should have all the dependencies for the project in our own repo!Then don't use Docker. You never know the image you are using will be outdated.reply",
      "> GHA is literally code execution as a service. Why would I care whether the Node runner has a security vulnerability?\"Why do I care if there is a potentially insecure code interpreter in my arbitrary code execution service?\"As someone where appsec is a component of my work in financial services, please believe you should care.reply",
      "I mean he's been running version 20 for years already, what's changed to make it now suddenly insecure?reply",
      "I look at it as \u201cThe risk of running  unmaintained code on an old interpreter version is difficult to quantify and therefore it is low cost to require it run on a maintained, recent version.\u201d Developers will argue their time is too valuable to require such code be updated to run on recent interpreter versions, and I\u2019ll argue it\u2019s cheaper than chasing successful exploits and any footholds established. Dev Vs Ops, a tale as old as time.Perhaps having had to run down potential exposure across a large enterprise from the recent npm supply chain attack has made me a bit more paranoid lately around supply chain and cicd security. But, I get paid to be paranoid, so it is what it is. Run your own runners I suppose?reply",
      "Surely 101 of \"come back to a project and it still works unchanged\" is \"dont use proprietary hosted services\"?reply",
      "As well as \"don't use anything JS related\"reply",
      "> Why would I care whether the Node runner has a security vulnerability?I\u2019m guessing they know you don\u2019t care, but the big company customers cant have a CVE anywhere and won\u2019t accept a EOL node version so they can check a box on something.(I guess there\u2019s also people with self hosted runners, who might be running them inside networks that aren\u2019t segmented.)reply",
      "Those are also the sorts of people who could pay for commercial support past the EOL date, no? (endoflife.date/nodejs indicates this exists.)reply",
      "... then your infrastructure deployment keys leak as a result.reply"
    ],
    "link": "https://github.blog/changelog/2025-09-19-deprecation-of-node-20-on-github-actions-runners/",
    "first_paragraph": "Node20 will reach end-of-life (EOL) in April of 2026. As a result we have started the deprecation process of Node20 for GitHub Actions. We plan to migrate all actions to run on Node24 in the fall of 2025.The newest GitHub runner (v2.328.0) now supports both Node20 and Node24 and uses Node20 as the default version. If you\u2019d like to test Node24 ahead of time, set FORCE_JAVASCRIPT_ACTIONS_TO_NODE24=true as an env in your workflow or as an environment variable on your runner machine to force the use of Node24.Beginning on March 4th, 2026, runners will begin using Node24 by default. To opt out of this and continue using Node20 after this date, set ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION=true as an env in your workflow or as an environment variable on your runner machine. This will only work until we upgrade the runner and remove Node20 later in the summer of 2026.Node24 is incompatible with macOS 13.4 and lower versions.Node 24 does not have official support for ARM32, so self-hosted runner"
  },
  {
    "title": "Unified Line and Paragraph Detection by Graph Convolutional Networks (2022) (arxiv.org)",
    "points": 85,
    "submitter": "Qision",
    "submit_time": "2025-09-21T14:26:10 1758464770",
    "num_comments": 11,
    "comments_url": "https://news.ycombinator.com/item?id=45323027",
    "comments": [
      "Is the title broken?I see \u201cUnified Line and Paragraph Detection by Graph Convolutional Networks (2022)\u201dreply",
      "I see the same, and there is a posting of that title (and linking to the correct paper) also on HN frontpage. wondering what's going on.reply",
      "I was under the impression that, for any FHE scheme with \"good\" security, (a) there was a finite and not very large limit to the number of operations you could do on encrypted data before the result became undecryptable, and (b) each operation on the encrypted side was a lot more expensive than the corresponding operation on plaintext numbers or whatever.Am I wrong? I freely admit I don't know how it's supposed to work inside, because I've never taken the time to learn, because I believed those limitations made it unusable for most purposes.Yet the abstract suggests that FHE is useful for running machine learning models, and I assume that means models of significant size.reply",
      "The difference between homomorphic schemes and fully homomorphic schemes is that FHE can be bootstrapped; there's a circuit that can be homomorphically evaluated that removes the noise from an encrypted value, allowing any homomorphic calculation's result to have its noise removed for further computation.reply",
      "Both of these are correct-ish. You can do a renornalization that resets the operation counter without decrypting on FHE schemes, so in that sense there is no strict limit on operation count. However, FHE operations are still about 6 orders of magnitude more expensive than normal, so you are not going to be running an LLM, for instance, any time soon. A small classifier maybe.reply",
      "Funny thing isSince neural networks are differentiable, they can be homomorphically encrypted!That\u2019s right, your LLM can be made to secretly produce stuff hehereply",
      "What is the computational burden of FHE over doing the same operation in plaintext?  I realize that many cloud proponants think that FHE may allow them to work with data without security worries (if it is all encrypted, and we dont have the keys, it aint our problem) but if FHE requires a 100x or 1000x increase in processor capacity then i am not sure it will be practical at scale.reply",
      "It\u2019s at least a million times slower than non-encrypted computation. 1000x or 100x would be a huge progress.reply",
      "Oh.  It really is that bad still.  So if the question is between wrapping the plaintext in layers of security, or building out a million new server instances to do it via FHE, i know which one everyone will choose.reply",
      "It's so bad that the only way FHE can get more efficient is to use a non-conventional compute technology. Some want to do it in optical donain.reply"
    ],
    "link": "https://arxiv.org/abs/2503.05136",
    "first_paragraph": "Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "How can I influence others without manipulating them? (andiroberts.com)",
    "points": 19,
    "submitter": "kiyanwang",
    "submit_time": "2025-09-21T22:20:16 1758493216",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=45327199",
    "comments": [
      "I really don\u2019t like this article. I think this article reflects more our desire to categorize things into neatly numbered lists, and reflects less any thorough understanding of influence. Big lists of aphorisms. Less in the way of concrete detail. Words are used the wrong way. Concepts are broken up into incoherent lists.\u201cRatianolising\u201d is the word used in the most wrong way. The word normally describes inventing post-hoc reasons for some decision or behavior.\u201cNegotiating\u201d is a big list of aphorisms which pull in different directions. Some of the advice sounds like amateurish art-of-the-deal tips which encourage you to extract as many concessions as you can from the other side. Some of the advice pulls in the opposite direction. And then, to mix everything up, the advice to compromise and meet half-way rears its ugly head.:-(reply",
      "Persuasion that happens in good faith is a two-way street. You explain your position, but also truly listen to theirs. If you are prepared to change your own position based on what they say, then you can hope that they might change theirs based on what you say.If it is truly two way in this sense, including your best efforts to extract from the other party their strongest, potentially unexpected, arguments for their position and give them your due consideration, it shouldn't feel like manipulation.reply",
      "I've always found that it's about defining win/win situations. Also, you should make real human connection in the process. If you don't like the person, that's a real issue. It may not be that the person is unlikeable, it may be that you aren't finding a perspective that aligns right.But yeah, aligning incentives and making friends. Even if they don't go the way you want, you both still had a positive experience and can potentially find a way to work together in the future.reply",
      "I'll respond to the title instead of the article.As an attorney, I've found that the best persuasion is the removal of impediments and friction standing between the person you hope to influence and what they want to do in the first place.Most other tactics amount to force or deceit (\"manipulation\").reply",
      "Advice a sales coach gave me was \u201csales is sorting, not convincing.\u201dI always found that put me in the right headspace to focus on listening first, then being clear. Whether they sort themselves into a yes or no is on them.reply",
      "If I successfully influence someone, I feel I've manipulated them nonetheless.reply",
      "I see this sentiment from time to time in the HN crowd, and I\u2019m really interested in understanding more about it.My first reaction to this? I think that you\u2019re using \u201cmanipulate\u201d to describe a process where somebody doesn\u2019t want to do something, and make them do it anyway, but without using force. It feels like this has to be rooted in some kind of denial of other people\u2019s free will\u2014that they are somehow incapable of choosing to help you or agree with you, and can only be tricked. It seems like you would need to believe that other people don\u2019t genuinely like you or value you.reply",
      "So, let's say you inspire someone just by existing, these things happen.reply",
      "Maybe just try to set an example without any attempt to be persuasive at all.reply"
    ],
    "link": "https://andiroberts.com/leadership-questions/how-to-influence-others-without-manipulating",
    "first_paragraph": ""
  },
  {
    "title": "How Isaac Newton discovered the binomial power series (2022) (quantamagazine.org)",
    "points": 48,
    "submitter": "FromTheArchives",
    "submit_time": "2025-09-18T16:59:50 1758214790",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=45292084",
    "comments": [
      "I think the significance of the Epistola Posterior only really emerged decades after it was written, when the bitter Newton\u2013Leibniz priority controversy erupted.  It served as Newton\u2019s key evidence, by revealing that he had the main ideas well before Leibniz\u2019s first publications (1684).  The letter bolstered the Royal Society\u2019s eventual judgment favoring Newton\u2019s independent discovery.reply",
      "lots of \"math processing error\". perhaps just render the formulas?reply",
      "I dont have such errors in neither firefox or safari, all latex is rendered fine; but some of the equation blocks are images vs processed latex, and this is annoying with trying to render a dark theme with dark reader.reply",
      "I'm not getting any processing errors. Seems to render fine on both Chromium and Firefox.reply",
      "yep, on Google chrome it all appears as unrendered math latex variables. This article is unreadable because of this.reply",
      "Works for me in Firefox; fails in Safari.reply",
      "I get those \"math processing errors\" in Firefox, after some time. Some of the error messages, which appear right before those:  GET https://www.quantamagazine.org/wp-content/themes/quanta2024/frontend/js/mathjax/fonts/HTML-CSS/TeX/png/imagedata.js?V=2.7.0 NS_ERROR_CORRUPTED_CONTENT\n  The resource from \u201chttps://www.quantamagazine.org/wp-content/themes/quanta2024/frontend/js/mathjax/fonts/HTML-CSS/TeX/png/imagedata.js?V=2.7.0\u201d was blocked due to MIME type (\u201ctext/html\u201d) mismatch (X-Content-Type-Options: nosniff).\n  Loading failed for the <script> with source \u201chttps://www.quantamagazine.org/wp-content/themes/quanta2024/frontend/js/mathjax/fonts/HTML-CSS/TeX/png/imagedata.js?V=2.7.0\u201d. how-isaac-newton-discovered-the-binomial-power-series-20220831:1:1\n  Uncaught TypeError: c.FONTDATA.FONTS.MathJax_Main[8212][5] is undefined\n\nThe URL leads to error 404.reply",
      "Works fine for me in Safari.reply"
    ],
    "link": "https://www.quantamagazine.org/how-isaac-newton-discovered-the-binomial-power-series-20220831/",
    "first_paragraph": "\nAn editorially independent publication supported by the Simons Foundation.\n\nGet the latest news delivered to your inbox.\nCreate a reading list by clicking the Read Later icon next to the articles you wish to save.Type search term(s) and press enterPopular\n                                    SearchesAugust 31, 2022Maggie Chiang for Quanta MagazinePodcast HostAugust 31, 2022Isaac Newton was not known for his generosity of spirit, and his disdain for his rivals was legendary. But in one letter to his competitor Gottfried Leibniz, now known as the Epistola Posterior, Newton comes off as nostalgic and almost friendly. In it, he tells a story from his student days, when he was just beginning to learn mathematics. He recounts how he made a major discovery equating areas under curves with infinite sums by a process of guessing and checking. His reasoning in the letter is so charming and accessible, it reminds me of the pattern-guessing games little kids like to play.It all began when young Ne"
  },
  {
    "title": "Apple Silicon GPU Support in Mojo (modular.com)",
    "points": 97,
    "submitter": "mpweiher",
    "submit_time": "2025-09-21T20:35:14 1758486914",
    "num_comments": 33,
    "comments_url": "https://news.ycombinator.com/item?id=45326388",
    "comments": [
      "How many people here actually write custom cuda/triton kernels? An extremely small hand full of people write them (and they're all on one discord server).. which then gets integrated into Pytorch, Megatron-LM, vLLM, SGLang, etc. The rest of us in the ML/AI ecosystem have absolutely no incentive to migrate off of python due to network effects even though I think it's a terrible language for maintainable production systems.If Mojo focuses on systems software ( and gets rid of exceptions - Chris, please <3 ) it will be a serious competitor to Rust and Go. It has all the performance and safety of Rust with a significantly easier learning curve.reply",
      "Mojo doesn't have C++-like exceptions, but does support throwing.  The codegen approach is basically like go's (where you return a bool + error conceptually) but with the python style syntax to make it way more ergonomic than Go.We have a public roadmap and are hard charging about improving the language, check out https://docs.modular.com/mojo/roadmap/ to learn more.-Chrisreply",
      "Plenty of people do, many more than are in that server -- I asked some of my former coworkers and none knew about it, but we all spent a whole lot of hours tuning CUDA kernels together :). You have one perspective on this sector, but it's not the only one!Some example motivations:- Strange synchronization/coherency requirements- Working with new hardware / new strategies that Nvidia&co haven't fine-tuned yet- Just wanting to squeeze out some extra performancereply",
      "Which Discord server? I want in!reply",
      "Not OP, but my guess is GPU MODE. https://discord.gg/gpumodereply",
      "The Mojo discord and forums are all listed here: https://www.modular.com/communityreply",
      "signing up to try a programming language (Mojo) is as bad as logging in to your terminal before using it (Warp).reply",
      "I'm interested to see how this shakes out now that they are well past the proof of concept stage and have something that can replace CUDA on Nvidia hardware without nerfing performance in addition to other significant upsides.Just the notion of replacing the parts of LLVM that force it to remain single threaded would be a major sea change for developer productivity.reply",
      "I like Chris Lattner but the ship sailed for a deep learning DSL in like 2012. Mojo is never going to be anything but a vanity project.reply",
      "Nah. There's huge alpha here, as one might say. I feel like this comment could age even more poorly than the infamous dropbox comment.Even with Jax, PyTorch, HF Transformers, whatever you want to throw at it--the dx for cross-platform gpu programming that are compatible with large language models requirements specifically is extremely bad.I think this may end up be the most important thing that Lattner has worked on in his life (And yes, I am aware of his other projects!)reply"
    ],
    "link": "https://forum.modular.com/t/apple-silicon-gpu-support-in-mojo/2295",
    "first_paragraph": "The latest nightly releases of Mojo (and our next stable release) include initial support for a new accelerator architecture: Apple Silicon GPUs!We know that one of the biggest barriers to programming GPUs is access to hardware. It\u2019s our hope that by making it possible to use Mojo to develop for a GPU present in every modern Mac, we can further democratize developing GPU-accelerated algorithms and AI models. This should also enable new paths of local-to-cloud development for AI models and more.To get started, you need to have an Apple Silicon Mac (we support all M1 - M4 series chips) running macOS 15 or newer, with Xcode 16 or newer installed. The version of the Metal Shading Language we use (3.2, AIR bitcode version 2.7.0) needs the macOS 15 SDK, and you\u2019ll get an error about incompatible bitcode versions if you run on an older macOS or use an older version of Xcode that doesn\u2019t have the macOS 15 SDK.You can clone our modular repository and try out one of our GPU function examples in "
  },
  {
    "title": "Model Flop Utilization Beyond 6ND (jott.live)",
    "points": 5,
    "submitter": "brrrrrm",
    "submit_time": "2025-09-18T14:05:17 1758204317",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://jott.live/markdown/mfu",
    "first_paragraph": ""
  }
]