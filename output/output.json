[
  {
    "title": "The Columbian Orator taught nineteenth-century Americans how to speak (neh.gov)",
    "points": 15,
    "submitter": "samclemens",
    "submit_time": "2025-04-10T00:00:34 1744243234",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=43639280",
    "comments": [
      "Various scans of the original book at Internet Archive: https://archive.org/search?query=title%3A%28Columbian%20Orat...\n \nreply",
      "Every time I read Douglass I feel so humbled.\n \nreply"
    ],
    "link": "https://www.neh.gov/article/columbian-orator-taught-nineteenth-century-americans-how-speak",
    "first_paragraph": "Among its many fans were Frederick Douglass and Abraham Lincoln\u00a0Frederick Douglass (with the title page of The Columbian Orator) as in the frontispiece of an 1855 edition of his autobiography.\u00a0\u00a0\u2014Wikimedia\u00a0\u00a0\u00a0One day in 1830, Frederick Douglass bought a book that changed his life. Douglass, then known as Frederick Bailey, was a twelve-year-old child enslaved in Baltimore. After hearing a group of white boys recite from The Columbian Orator, a grade-school textbook for teaching rhetoric, Douglass decided to get a copy for himself. Against stiff odds for slaves of the time, he learned to read, and words were his prevailing passion.\u00a0Douglass used 50 cents he\u2019d earned working odd jobs and bought The Columbian Orator at a local bookshop. He fell in love with the volume and was seldom without it, carrying the book with him when he eventually escaped to freedom. With the textbook as his guide, Douglass became, in the words of biographer David W. Blight, \u201cthe greatest African American leader and"
  },
  {
    "title": "GPD Pocket 4 Speaker DSP: Configuring PipeWire so laptop speakers sound better (kittenlabs.de)",
    "points": 168,
    "submitter": "zdw",
    "submit_time": "2025-04-09T18:07:14 1744222034",
    "num_comments": 43,
    "comments_url": "https://news.ycombinator.com/item?id=43635295",
    "comments": [
      "Huh, I didn't realize pipewire had builtin support for this! I've been using a different piece of software called Easy Effects[1] on my framework laptop.To equalize my laptop, I ended up buying a umik-1, and using REW to calculate all the filter coefficients (you can import REW's filter export right into Easy Effects). It's a subtle difference at first, but it's much cleaner (I also usually have a compressor and loudness effect enabled, as the framework speakers are pretty quiet).[1] https://github.com/wwmm/easyeffects\n \nreply",
      "Work on PipeWire started AFAIU as a simpler plugin API for GStreamer, so of course many things are pluggable and interposable and routable etc.\n \nreply",
      "Would you share the profiles you used for your framework ? I have one too and it could use a better sound\n \nreply",
      "Here's the one I created, but be sure to try the others like @blutack mentioned: https://gist.github.com/smj-edison/280c7b293f727b40c29ffef3d...EDIT: and full easy effects profile: https://gist.github.com/smj-edison/915c3a72bf485bd8910125b68...\n \nreply",
      "If it's a 13, there's a couple linked from here: https://wiki.archlinux.org/title/Framework_Laptop_13_(AMD_Ry...I use the \"cab404\" one and very impressed with it.\n \nreply",
      "Do you have the version 1 (original) or the version 2 (80 dB) of the Framework speakers?\n \nreply",
      "Version 1 (I got a framework 12 and so far have only swapped the screen). Now that I think of it, which one is the official EQ for?\n \nreply",
      "Ho wow, the sample video shows incredible results, I'd love to read more about how to configure it with my own laptop and microphone. Settings ought to be different for each laptop model, right ?\n \nreply",
      "Watching the video when they switch profiles??? sounds like when you're watching a movie and they make the music sound like coming from something in the scene and then switch to just music for the movie like showing someone with headphones/earbuds.Pretty impressive demo.\n \nreply",
      "Original sounds like one of the speakers wired in reverse inverting phase.\n \nreply"
    ],
    "link": "https://kittenlabs.de/blog/2025/04/06/gpd-pocket-4-speaker-dsp/",
    "first_paragraph": "Modern speakers require a lot of DSP magic to sound as good as they do.Speakers traditionally needed to be built very carefully to achieve a very flat frequency response and as few artifacts as possible.These days, many mobile devices like phones, laptops, etc. do a lot of digital signal processing in software in order to make tiny speakers output a lot of sound.Many different tricks are used, such as psycho-acoustic bass enhancement, limiters (allowing for higher power peaks) and volume-dependent equalization (frequency response of human hearing is very volume-dependent).The Asahi Linux project (Linux on Apple Silicon MacBooks) has done a lot of work to make MacBooks sound as good as possible on Linux:AsahiLinux/asahi-audio: Userspace audio for Asahi LinuxUsing Room EQ Wizard the frequency/impulse response of the built-in speakers was measured.Even with very suboptimal measurement equipment (cheap microphone, questionable audio interface), we can clearly see the sloped bass response ("
  },
  {
    "title": "Nix Derivations, Without Guessing (bernsteinbear.com)",
    "points": 61,
    "submitter": "surprisetalk",
    "submit_time": "2025-04-07T03:25:13 1743996313",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=43607325",
    "comments": [
      "For context, this particular article is a cool deep dive into how Nix works, but it doesn't represent what using Nix + Nixpkgs is like in practice. I've been using Nix personally and professionally for almost 10 years now (yikes has time passed quickly!) and I have never needed to operate at the level of derivations like this.\n \nreply",
      "I walk away from every article on or attempt to use Nix more mystified\n \nreply",
      "Yeah Nix seems like an insanely useful concept (declarative, reproducable, diffable, source controllable definitions of linux environments). But actually using it is a nightmare.I think there's some point on the spectrum between \"commit your dotfiles to git\" and Nix that would be useful, I don't know what it is though. Containerization is kinda like this, but they're procedural rather than declarative and I wouldn't really want to use a docker container as my main system environment.\n \nreply",
      "What a bizarre and arcane incantation\n \nreply",
      "Now we are really interested in why they do this\u2014probably for backward compatibility with a 20\u2011year\u2011old implementation. It\u2019s not messy, just particular.\n \nreply"
    ],
    "link": "https://bernsteinbear.com/blog/nix-by-hand/",
    "first_paragraph": "I went on a little low-level Nix adventure yesterday and early this morning\nbecause of this excellent blog post. In it, Farid builds up the\nsimplest possible Nix derivation\u2014making a file that has the contents \u201chello\nworld\u201d. Here\u2019s what I like about it:One thing that I did not understand after reading, though, was where the hashes\ncome from. Farid\u2019s post does the same thing that I occasionally do with the C++\nor Rust compiler, where we intionally cause an error to get information that\nthe compiler already knows. That\u2019s not very satisfying for someone (me) who is\nstarting basically from zero. So I went down a bit of a rabbit hole trying to\nfigure out how to manually generate these hashes.But first, let\u2019s get some terms out of the way. Please forgive (but help me\ncorrect) mistakes along the way, because this is my first time messing around\nwith Nix.As far as I can tell, it\u2019s a very precise recipe for building a file. It\u2019s kind\nof like a Make recipe or a shell script except all of its inpu"
  },
  {
    "title": "Ironwood: The first Google TPU for the age of inference (blog.google)",
    "points": 354,
    "submitter": "meetpateltech",
    "submit_time": "2025-04-09T12:24:19 1744201459",
    "num_comments": 136,
    "comments_url": "https://news.ycombinator.com/item?id=43631274",
    "comments": [
      "The first specifically designed for inference? Wasn\u2019t the original TPU inference only?\n \nreply",
      "The phrasing is very precise here, it\u2019s the first TPU for _the age of inference_, which is a novel marketing term they have defined to refer to CoT and Deep Research.\n \nreply",
      "Yup.\n(Source: was at brain at the time.)Also holy cow that was 10 years ago already? Dang.Amusing bit: The first TPU design was based on fully connected networks; the advent of CNNs forced some design rethinking, and then the advent of RNNs (and then transformers) did it yet again.So maybe it's reasonable to say that this is the first TPU designed for inference in the world where you have both a matrix multiply unit and an embedding processor.(Also, the first gen was purely a co-processor, whereas the later generations included their own network fabric, a trait shared by this most recent one. So it's not totally crazy to think of the first one as a very different beast.)\n \nreply",
      "Wow, you guys needed a custom ASIC for inference before CNNs were even invented?What were the use cases like back then?\n \nreply",
      "According to a Google blog post from 2016 [1], use-cases were RankBrain to improve the relevancy of search results and Street View. Also they used it for AlphaGo. And from what I remember from my MSc thesis, they also probably were starting to use it for Translate. I can't find any TPU reference in the Attention is All You Need or BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding, but I have been fine-tuning BERT in a TPU at the time in okt 2018 [2]. If I remember correctly, the BERT example repository showed how to fit a model with a TPU inside a Colab. So I would guess that the natural language research was mostly not on TPU's around 2016-2018, but then moved over to TPU in production. I could be wrong though and dgacmu probably knows more.[1]: https://cloud.google.com/blog/products/ai-machine-learning/g...[2]: https://github.com/rikhuijzer/improv/blob/master/runs/2018-1...\n \nreply",
      "Yes, IIRC (please correct me if I'm wrong), translate did utilize Seastar (TPU v1) which was integer only, so not easily useful for training.\n \nreply",
      "As an aside, Google used CPU-based machine learning (using enormous numbers of CPUs) for a long time before custom ASICS or tensorflow even existed.The big ones were SmartASS (ads serving) and Sibyl (everything else serving).\nThere was an internal debate over the value of GPUs with a prominent engineer writing an influential doc that caused Google continue with fat CPU nodes when it was clear that accelerators were a good alternative.  This was around the time ImageNet blew up, and some eng were stuffing multiple GPUs in their dev boxes to demonstrate training speeds on tasks like voice recognition.Sibyl was a heavy user of embeddings before there was any real custom ASIC support for that and there was an add-on for TPUs called barnacore to give limited embedding support (embeddings are very useful for maximizing profit through ranking).\n \nreply",
      "What I've heard is that the extrapolation of compute needed so many additional CPU servers to keep running the existing workload types that it obviously justified dedicated hardware. Same for video encoding accelerators[1].[1]: https://research.google/pubs/warehouse-scale-video-accelerat...\n \nreply",
      "https://research.google/blog/the-google-brain-team-looking-b... is a good overviewI wasn't on Brain, but got obsessed with Kerminology of ML internally at Google because I wanted to know why leadership was so gung ho on it.The general sense in the early days was these things can learn anything, and they'll replace fundamental units of computing. This thought process is best exhibited externally by ex. https://research.google/pubs/the-case-for-learned-index-stru...It was also a different Google, the \"3 different teams working on 3 different chips\" bit reminds me of lore re: how many teams were working on Android wearables until upper management settled it.FWIW it's a very, very, different company now. Back then it was more entrepreneurial. A better version of Wave-era, where things launch themselves. An MBA would find this top-down company in 2025 even better, I find it less - it's perfectly tuned to do what Apple or OpenAI did 6-12 months ago, but not to lead - almost certainly a better investment, but a worse version of an average workplace, because it hasn't developed antibodies against BSing. (disclaimer: worked on Android)\n \nreply",
      "> the advent of CNNs forced some design rethinking, and then the advent of RNNs (and then transformers) did it yet again.Certainly, RNNs are much older than TPUs?!\n \nreply"
    ],
    "link": "https://blog.google/products/google-cloud/ironwood-tpu-age-of-inference/",
    "first_paragraph": "Apr 09, 2025[[read-time]] min read\n          Ironwood is our most powerful, capable and energy efficient TPU yet, designed to power thinking, inferential AI models at scale.\n        \nGoogle has released Ironwood, its seventh-generation Tensor Processing Unit (TPU), specifically designed for inference. This powerful AI accelerator is built to handle the massive computational demands of \"thinking models,\" like large language models and mixture of experts. Ironwood scales up to 9,216 chips, offering 42.5 Exaflops of compute power, making it more powerful than the world's largest supercomputer.\nGoogle has released Ironwood, its seventh-generation Tensor Processing Unit (TPU), specifically designed for inference. This powerful AI accelerator is built to handle the massive computational demands of \"thinking models,\" like large language models and mixture of experts. Ironwood scales up to 9,216 chips, offering 42.5 Exaflops of compute power, making it more powerful than the world's largest su"
  },
  {
    "title": "How University Students Use Claude (anthropic.com)",
    "points": 208,
    "submitter": "pseudolus",
    "submit_time": "2025-04-09T15:41:38 1744213298",
    "num_comments": 242,
    "comments_url": "https://news.ycombinator.com/item?id=43633383",
    "comments": [
      "> A common question is: \u201chow much are students using AI to cheat?\u201d That\u2019s hard to answer, especially as we don\u2019t know the specific educational context where each of Claude\u2019s responses is being used.I built a popular product that helps teachers with this problem.Yes, it's \"hard to answer\", but let's be honest... it's a very very widespread problem. I've talked to hundreds of teachers about this and it's a ubiquitous issue. For many students, it's literally \"let me paste the assignment into ChatGPT and see what it spits out, change a few words and submit that\".I think the issue is that it's so tempting to lean on AI. I remember long nights struggling to implement complex data structures in CS classes. I'd work on something for an hour before I'd have an epiphany and figure out what was wrong. But that struggling was ultimately necessary to really learn the concepts. With AI, I can simply copy/paste my code and say \"hey, what's wrong with this code?\" and it'll often spot it (nevermind the fact that I can just ask ChatGPT \"create a b-tree in C\" and it'll do it). That's amazing in a sense, but also hurts the learning process.\n \nreply",
      "When modern search became more available, a lot of people said there's no point of rote memorization as you can just do a Google search. That's more or less accepted today.Whenever we have a new technology there's a response \"why do I need to learn X if I can always do Y\", and more or less, it has proven true, although not immediately.For instance, I'm not too concerned about my child's ability to write very legibly (most writing is done on computers), spell very well (spell check keeps us professional), reading a map to get around (GPS), etcNot that these aren't noble things or worth doing, but they won't impact your life too much if you're not interest in penmanship, spelling, or cartography.I believe LLMs are different (I am still stuck in the moral panic phase), but I think my children will have a different perspective (similar to how I feel about memorizing poetry and languages without garbage collection). So how do I answer my child when he asks \"Why should I learn to do X if I can just ask an LLM and it will do it better than me\"\n \nreply",
      "The irreducible answer to \"why should I\" is that it makes you ever-more-increasingly reliant on a teetering tower of fragile and interdependent supply chains furnished by for-profit companies who are all too eager to rake you over the coals to fulfill basic cognitive functions.Like, Socrates may have been against writing because he thought it made your memory weak, but at least I, an individual, am perfectly capable of manufacturing my own writing implements with a modest amount of manual labor and abundantly-available resources (carving into wood, burning wood into charcoal to write on stone, etc.). But I ain't perfectly capable of doing the same to manufacture an integrated circuit, let alone a digital calculator, let alone a GPU, let alone an LLM. Anyone who delegates their thought to a corporation is permanently hitching their fundamental ability to think to this wagon.\n \nreply",
      "> The irreducible answer to \"why should I\" is that it makes you ever-more-increasingly reliant on a teetering tower of fragile and interdependent supply chains furnished by for-profit companies who are all too eager to rake you over the coals to fulfill basic cognitive functions.Yes, but that horse has long ago left the barn.I don't know how to grow crops, build a house, tend livestock, make clothes, weld metal, build a car, build a toaster, design a transistor, make an ASIC, or write an OS. I do know how to write a web site. But if I cede that skill to an automated process, then that is the feather that will break the camel's back?The history of civilization is the history of specialization. No one can re-build all the tools they rely on from scratch. We either let other people specialize, or we let machines specialize. LLMs are one more step in the latter.The Luddites were right: the machinery in cotton mills was a direct threat to their livelihood, just as LLMs are now to us. But society marches on, textile work has been largely outsourced to machines, and the descendants of the Luddites are doctors and lawyers (and coders). 50 years from new the career of a \"coder\" will evoke the same historical quaintness as does \"switchboard operator\" or \"wainwright.\"\n \nreply",
      "This reply brings to mind the well-known Heinlein quote:    A human being should be able to change a diaper, plan an invasion, butcher a hog, conn a ship, design a building, write a sonnet, balance accounts, build a wall, set a bone, comfort the dying, take orders, give orders, cooperate, act alone, solve equations, analyze a new problem, pitch manure, program a computer, cook a tasty meal, fight efficiently, die gallantly. Specialization is for insects.\n \nreply",
      "It\u2019s a quote from a character in Heinlein\u2019s fiction. A human character with a lifespan of over a thousand years.I too liked that quote and found it inspiring. Until I read the book, that is.\n \nreply",
      "That's a quote that sounds great until, say, that self-built building by somebody who's neither engineer nor architect at best turns out to have some intractible design flaw and at worst collapses and kills people.It's also a quote from a character who's literally immortal and so has all the time in the world to learn things, which really undermines the premise.\n \nreply",
      "I sort of view that list as table stakes for a well rounded capable person.. Well barring the invasion bit. Then again, being familiar with guns and or other forms of self defense is valuable.I think most farmers would be somewhat capable on most of that list. Equations for farm production. Programming tractor equipment. Setting bones. Giving and taking orders. Building houses and barns.Building a single story building isn\u2019t that difficult, but time consuming. Especially nowadays with YouTube videos and pre-planned plans.\n \nreply",
      "> pre-planned plansIsn't that cheating?  Shouldn't a properly self-reliant human be able to come up with the plans too?",
      "The sheer amount of activities that he left out because he couldn't even remember they existed would turn this paragraph into a book.\n \nreply"
    ],
    "link": "https://www.anthropic.com/news/anthropic-education-report-how-university-students-use-claude",
    "first_paragraph": ""
  },
  {
    "title": "How much do you think it costs to make a pair of Nike shoes in Asia? (twitter.com/dieworkwear)",
    "points": 414,
    "submitter": "taubek",
    "submit_time": "2025-04-09T12:58:39 1744203519",
    "num_comments": 584,
    "comments_url": "https://news.ycombinator.com/item?id=43631543",
    "comments": [
      "https://threadreaderapp.com/thread/1909741170953273353.html",
      "Americans need to get over their view of \u201cAsia\u201d as being about making shoes. When I was working in engineering in the early aughts, we mocked the Chinese as being able only to copy American technology. Today, China is competitive with or ahead of America in key technology areas, including nuclear power, AI, EVs, and batteries.We need to anticipate a future where China is equal to America on a per capita basis, but four times bigger. Is that a world where \u201cDesigned by Apple in California, Made in China\u201d still makes sense? What will be America\u2019s competitive edge in that scenario?What seems most likely to me in the future is that the US will find itself in the same position the UK is in now. Dominating finance and services won\u2019t mean anything when both the IP and the physical products are being produced somewhere else.\n \nreply",
      "> US will find itself in the same position the UK is in nowThe thing is .. there's a point here, but it's not at all tied in with physical products. People are obsessed with one side of the ledger while refusing to see the other. Most of the stuff the UK is struggling with (transport, healthcare, energy) are \"state capacity\" issues. Things where the state is unavoidably involved and having better, more decisive leadership and not getting bogged down in consultations, would make a big difference.The UK stepped on its own rake because it was obsessed with tiny, already vanished industries like fishing. Fishing is less profitable for the whole UK than Warhammer. It's not actually where we want to be. While real UK manufacture successes (cars, aircraft, satellites, generators, all sorts of high-tech stuff) get completely ignored. Or bogged down in extra export red tape thanks to Brexit.To improve reality, we have to start from reality, not whatever vision of the past propaganda \"news\" channels are blathering about.\n \nreply",
      "> Fishing is less profitable for the whole UK than Warhammer.This sounded completely insane to me. I tried to look up numbers and found that Games Workshop brings in > 0.5 billion in revenue (!!), compared to all of UKs fisheries at 1 billion-ish (profit margins are, as you'd expect, pretty favorable for the plastic figurines that they don' even paint for you).Thanks for this interesting fact.\n \nreply",
      "It's also worth considering that certain industries (fisheries and agriculture for instance) are subsidised. It's in our national interest to maintain production capacity, so profits are the least of our concerns. Both the UK and the EU's agricultural sectors are heavily subsidised mainly for this reason. It's cheaper to import than to produce locally, especially with our environmental standards and targets, but we need to keep producing. More so in the current geopolitical climate.And whilst nobody wants to risk being starved to submission, it's also equally important to promote more profitable sectors, and tax accordingly, so that we can support our more strategic sectors. I wouldn't say we're doing a good job at that for what its worth.\n \nreply",
      "+1, exactly. Focusing too much in the money makes you forget about the power. At a national leadership level, there isn't much power in having a local Warhammer industry, fishing is much more strategic.In broad terms, this is related to the error the USA made. Manufacturing in China was a very profitable deal for the USA. A lot of companies view labour first and foremost as expense, wealth as as the goal, and power in wealth\u2014 so it's not surprising as a whole the industry opted to \"contract out\" labour across the globe.A lot of power lays in labour though. Money doesn't produce, invent, move, feed, etc\u2014 money is only good if someone will take it at the amounts you have it to do that specific labour you need for you.\n \nreply",
      "This is a bit harsh: the USA didn't devalue labor in general, just manufacturing. They hired software engineers from all over the world, along with a lot of higher value engineering and product development jobs. The error the USA made was in pushing the workforce up the value chain faster than everyone could handle, and a lot of Americans got left behind.China is moving up the value chain also, they are being forced to by their demographics, and they are investing heavily in the change ATM (just like they started investing heavily in green energy 10 years ago) so I don't think they will make the same mistake as the Americans are making right now.\n \nreply",
      "While not disagreeing with you, I don't think we've done a great job of maintaining fisheries.\n \nreply",
      "Also, continuing overfishing is a terrible long-term strategy. Sure, we will have the boats, fishermen and infrastructure around fishing, but that's of no help if the fish are gone.\n \nreply",
      "Politics isn't about good long-term planning - it's about accountability sinks.This decade: \"We're not the ones trying to steal your fishing jobs!\"Next decade: \"It's not our fault there aren't fish!\"\n \nreply"
    ],
    "link": "https://twitter.com/dieworkwear/status/1909741170953273353",
    "first_paragraph": ""
  },
  {
    "title": "Photographs of 19th Century Japan (cosmographia.substack.com)",
    "points": 141,
    "submitter": "merothwell",
    "submit_time": "2025-04-09T12:20:06 1744201206",
    "num_comments": 28,
    "comments_url": "https://news.ycombinator.com/item?id=43631251",
    "comments": [
      "Quite a few of those still exist!* Wysteria Vine.\n  It is not written, but I am pretty sure it's Kameido Shrine.\n  You need to come at the right time to see flowers like that though.* Nikko\n  All pictures that show shrine and pagoda* Osaka Castle* Daibutsu, at Kamakura* Jinrikishia\n  Now it's for tourists, but you can ride in Asakusa.* View Ojigoku on Great Boiling Springs, Hakone.* Wrestlers.\n  Sumo still exists and looks like that.* Gion Machi Street, at Kyoto.\n  Looks a bit different, but there are still many old houses like this.* View of Nara.* Tennojo Buddhist Temple* Hakone Lake of FujiyamaWhat does not exist anymore is any picture showing a town or village.\nI feel sad about this. There are a very few places that kept this (E.g. Shirakawago).\nNow all houses look boring. Only recently people thought to build pretty houses again.\n \nreply",
      "And this stuff is why I love either super creative science fiction or travelogues (and the formers are hard to find).You can try to imagine a brand new world or simply try to re-live our real and past world. To me that is even more amazing, as it often can be the door to understanding some things of today's cultures and/or discover lost little worlds.Currently I'm going through this book of a guy who cycled across Central Asia and in Japan. The guy is sometimes quite direct in his writing (unlike other writers) but it's so interesting to experience the world of just 100-200 years ago through the lens of one living there. I truly recommend it.\n \nreply",
      "Is it \"Around the world on a bicycle\"? I, too, would like to know the name of this book. Sounds interesting!\n \nreply",
      "Can you share the name & author of the book?I'll plug Wilfred Thesiger's Arabian Sands as an extraordinary deep dive into a world that's entirely disappeared in our lifetimes:https://www.goodreads.com/book/show/825419.Arabian_Sands\n \nreply",
      "Having visited last year, the scenery around Toshogu Shrine in Nikko isn't all that different, if you manage to visit like we did first thing in the morning as soon as they open and before the tour buses rock up. (The shrine is surrounded by acres of sacred forest where construction is prohibited.)The cities like Kobe and Nagasaki, on the other hand, are completely unrecognizable.\n \nreply",
      "It's amazing to see pictures of feudal japan and think that some of the people who grew up there would be alive in the 1950s.  Talk about witnessing progress.\n \nreply",
      "That\u2019s how I feel about present day humanity with regards to computer tech. I was born around the time of the 8086; my parents never really became fluent with computers. I was a nerd and got into computers as a teen, soon enough I had internet and then WiFi and now frickin smartphones hooked into LLMs. We\u2019re the Information Age equivalent of those folks who spanned all the from the feudal era to riding Honda motorbikes.\n \nreply",
      "Keiko Fukuda, a judo trainer (10th degree black belt) in SF who died in 2013 aged 99 (she taught in her dojo in Noe Valley even into the last year of her life) was the student of the judo founder Kano Jigoro who opened his first judo school in 1882.\n \nreply",
      "Cool photos! My workplace is an old machiya [1] in Kyoto that's more than a hundred years old, so I kinda live like the people in these photos (not really of course - no konbini back then).https://en.wikipedia.org/wiki/Machiya\n \nreply",
      "A friend of mine also recently redid a machiya in Kyoto. It even had the godness mask near the ceiling, amazing.Side note: I quickly checked the dedede project and I'm so enthralled with it! I will use it to improve my Japanese, thank you!\n \nreply"
    ],
    "link": "https://cosmographia.substack.com/p/photographs-of-old-japan",
    "first_paragraph": ""
  },
  {
    "title": "Baking the Y Combinator from Scratch (the-nerve-blog.ghost.io)",
    "points": 71,
    "submitter": "mprast",
    "submit_time": "2025-04-09T19:04:12 1744225452",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=43636230",
    "comments": [
      "If anyone wants this in a humorous 1 hour format, watch the legendary Jim Weirich (rip) explain it here: https://www.youtube.com/watch?v=FITJMJjASUsDon't be discouraged that it is in Ruby as the concepts are completely general. Great watch even though I never coded a line of Ruby.\n \nreply",
      "At first I thought they were going to implement it in MIT Scratch.\n \nreply",
      "From scratch it's also easy dress up a quoted Y combinator as in L\u00f6b's theorem. Start with the usual Y combinator  Y = \\f. (\\x.f(x x)) (\\x.f(x x))\n    : (p -> p) -> p\n\nwhich can produce a thing of type p from a function f : p -> p.Now L\u00f6b's theorem states that []([]p -> p) -> []p, which can be read, \"if you have the source code to transform (the source code of a thing of type p) to a thing of type p, then you can produce the source code for a thing of type p\". Let's embellish Y using {} to denote the quoting comonad.  Y' = \\{f}. (\\{x}.{f{x{x}}}) {\\{x}.{f{x{x}}}}\n     : []([]p -> p) -> []p\n\nTo get there, just add quotes as needed: f must be quoted, f's result must be quoted, and f takes a quoted input.\n \nreply",
      "Is there a technique to remember this? I will understand it today and forget after a few weeks.\n \nreply",
      "Yes.Lambda calculus is about template substitution. It is the abstract mathematics of substituting templates into other templates. Alonzo Church got interested in this when he realized that it had numbers,    type NumF = <X>(f: (x: X) => X) => (x: X) => X\n    const zero: NumF = f => x => x\n    const one: NumF = f => x => f(x)\n    const two: NumF = f => x => f(f(x))\n\nAddition is not too hard to define, multiplication is actually just function composition, and decrement is an unexpected motherf$@&er. To understand this last point, it may help to understand that this encoding of numbers is basically zero as [], one as [null], two as [null, null], etc and you are trying to use Array.prototype.reduce to compute the array with one fewer element. So you can do it with a (last, curr) pair or a null initial value, you have to know what those look like in the lambda calculus to translate,    // predecessor and successor\n    const succ = n => f => x => n(f(x))\n    // Maybe fns: in \u03bb-calc you'd uncurry\n    type MaybeF<x> = <z>(ifNil: z, ifJust: (x: x) => z) => z\n    const nil: MaybeF<any> = (ifNil, _ifJust) => ifNil\n    function just<x>(x: x): MaybeF<x> {\n      return (_ifNil, ifJust) => ifJust(x);\n    }\n\n    const pred = n =>\n        n(maybe_n => maybe_n(just(zero), k => just(succ(k))))(nil)\n      \nNow you asked for a technique to remember the Y combinator. The basic thing to remember is the infinite template substitution discovered by Haskell Curry,    (f => f(f))(f => f(f))\n\nForgetting everything you know about programming languages, and just thinking about template substitution, this is a template on the left, being substituted with a value on the right, and the reason it's an infinite loop is that after the substitution you get the exact same expression that you had before the substitution. [On the right we could have also written g => g(g) if that helps, the two variables are defined in separate scopes and only happen to have the same name f to make it clearer that this will loop infinitely if you try to eagerly evaluate it.]Terms like this, were why Curry wanted a type theory. He immediately understood that this was kind of a weird expression because if you tried to express the idea of f(f) it was secretly holding on to a sort of paradox of self-reference or an infinity or whatever you want to call it. It is a function type which takes only the same function type as an argument, and returns God-knows-what. If you just forbid self-reference in the typing judgments, you don't get this sort of weird f(f) pathology.So if you are remembering f(f) being somehow the key to the Y combinator, then you immediately see that you can kind of step it by not immediately evaluating it,    const Q = (f => () => f(f))(f => () => f(f))\n\nso as a matter of algebra Q() = Q although a programming language struggles to prove equality between functions so as a matter of programming that might not be equal. So this is a function you can call Q()()()() and it's just infinitely callable without producing any other values.But why () =>, why not x => ? Well, you can introduce that but Q will just ignore it, it doesn't know what to do with that. So you need to write f(f)(x) to plumb it through to do something.Note briefly that there IS a difference between f(f) and x => f(f)(x). The latter delays execution of f(f) until needed and so is still stepped, the former is an infinite loop.And the last thing is that you need to hand this internal function to someone else, some decider, to decide when to call the recursion. This leads to the full form,    const Y = decider => (f => decider(x => f(f)(x))(f => decider(x => f(f)(x)))\n\nUsage with an example decider:    const factorial = Y(recurse => n => n <= 1 ? 1 : n * recurse(n - 1));\n \nreply",
      "There's a way to remember smaller and smaller bits of it until you terminate at a piece small enough to remember permanently.\n \nreply",
      "personally I don't have as much trouble wrapping my brain around the Omega combinator as I do around the Y combinator, so I just try to remember that the Y combinator is an omega combinator with an extra f injected at the site of replication, if that makes sense\n \nreply",
      "It's easier to remember if you use a more common notation:    (Y(f))(x) = f(f(f(...(x)...)))\n\nOr express it in python, which is still a bit weird but probably still more readable than pure LC to pretty much everybody:    def Y(f):\n        return lambda x: f(Y(f)(x))\n \nreply",
      ">     (Y(f))(x) = f(f(f(...(x)...)))I think that should be (Y(f))(x) = f(f(f(...)))(x)\n \nreply",
      "I'm a constructivist, but I still believe in proof by contradiction. In fact, I don't think you can believe in proof by contradiction without constructivism. How do you know you can take an arbitrary proof P, and show it leads to a contradiction, if you don't even know you can touch P to begin with?Anyway, how I would construct a proof by contradiction is:1. Suppose you want to know if there exists a proof P of length less than N.2. Do the usual \"proof by contradiction\" with a placeholder P.3. You can write a very short algorithm that then plugs in all 2^N possible proofs into your proof by contradiction algorithm.4. And voila! You have a constructive proof.\n \nreply"
    ],
    "link": "https://the-nerve-blog.ghost.io/baking-the-y-combinator-from-scratch-part-1/",
    "first_paragraph": "It's a pedagogical pet peeve of mine when technical concepts are simply listed in their fully developed state, with little in the way of motivation, derivation, or historical context. This, I think, is like publishing a cookbook filled with beautiful pictures of cakes, but no recipes.My aim with the \"Baking <x> from scratch\" series is to describe not only what, but how and why, with the hope that this will lead to a richer and more durable understanding.This post is about the Y combinator. Not Y Combinator the accelerator, but the mathematical construct that it's named after - the Y combinator.The Y combinator looks like this:$$ Y = \\lambda f. \\enspace (\\lambda x. \\enspace f(x \\enspace x)) \\enspace (\\lambda x. \\enspace f(x \\enspace x)) $$Confronted with this definition, you might ask yourself:The one-line answer to all of these is: \"the Y combinator implements recursion in functional languages that don't allow for explicit self-reference\", but it's worth going a little deeper than that"
  },
  {
    "title": "Parser Combinators Beat Regexes (entropicthoughts.com)",
    "points": 31,
    "submitter": "mooreds",
    "submit_time": "2025-04-09T21:53:05 1744235585",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43638422",
    "comments": [
      "Parser combinators are one of those ideas that is really powerful in practice, but will never be mainstream because it had the bad fortune of coming from the functional programming world. It's a shame too, because parser combinators are what made parsers click for me.Take the hard problem of parsing a language, break it down into the much simpler problem of reading tokens, then write simple \"combinators\" (and, or, one_or_many, etc etc) to combine these simple parsers into larger more complex parsers.You could almost build an entire parser combinator library from scratch from memory, because none of the individual components are complicated.\n \nreply",
      "\u201cIn other languages, it would be considered overkill to write a full parser when a simple regex can do the same thing. In Haskell, writing a parser is no big deal. We just do it and move on with our lives.\u201dI see a long code file filled with comments and long paragraph-level explanations. I think I\u2019d rather just learn and use regex.\n \nreply",
      "I mean that's the nature of article code no? You are writing for a generic audience and want to be very explicit as to what your code is doing to teach the audience.For your average haskell programmer you could drop all of those comments since the code isn't really doing anything that couldn't be determined by just reading it.\n \nreply",
      "There are numerous posts, comments, articles and so forth about when to use regex versus using a parser. The general rule is this:If you need to do a search from a string, such as needle(s) from a hat stack, regex is probably more ideal than a parser. If you need anything more intelligent than a list of search results you probably want a full formal parser.Most languages allow a form of nested regex that allow for increased search precision. This occurs when a method that makes use of a regex returns to a function whose argument is a matching string result, which is why regex is probably enough when the business is primitive. There is a tremendously higher cost to using a full parser, considering the lexer and tokenizer plus rules, but it\u2019s so much more intelligent that it\u2019s not even comparable.\n \nreply",
      "The key thing for me in making this decision is of course predicting the future.Parsers are more work up front but in my experience much easier to debug, maintain and extend. So if I predict something will be around for a while I'll want to do a parser and if it's just a one-off I usually go with regex.Of course this predictably leads to me having a collection of parsers that I've never needed to touch again and a handful of monstrously complex regex grammars that I'll rewrite into a parser \"the next time\" I need to modify them.I still think it's the right thing to base the decision on I just need to keep improving my prophesying.\n \nreply",
      "Note that most implementations of both parser combinators and regexes can fail very badly (exponential time). Never use either on untrusted input, unless you can prove your implementation lets you stay linear.\n \nreply",
      "PEGs don't have this problem right? Linear time over length of input? Though I guess most peg libraries probably aren't \"pure\" pegs to get around its limitations and may reintroduce this issue?\n \nreply",
      "No, PEG is prone to exactly this in its default form. Parser combinator usually means something PEG-ish anyway.If you memoize (packrat), it improves to polynomial time (not sure what, but it's not linear; that's false advertising and a fraudulent claim), but you're still stuck with the vulnerability to bugs in the grammar.A better idea is to create a parser-combinator-style API on top of an LL or LR backend, for guaranteed linear time and only enough stack space for the deepest part of the AST.\n \nreply",
      "PEGs don't have this problem only because they place restrictions on the grammar.In practice, this isn't a problem, but it does require you write grammar rules in a specific way (e.g. no left-recursion)\n \nreply",
      "You can also use simple string search functions for this Advent of Code problem.I used this approach for implementing orthography rules in a stenography application (implementing rules like `artistic + ly = artistically`) and in the benchmarks I did, a few lines of searching for character indexes was an order of magnitude faster than regexes. Each of my functions is about 3-10 ish lines of simple code compared to a 1-line regex.You do have to handle cases like the character not being found, but I've had zero issues with the code and, in terms of what actually executes, it is vastly simpler. This is why the saying goes that if you make something twice as fast, you may have done something clever, but if you make it 10x faster, you stopped doing something dumb.\n \nreply"
    ],
    "link": "https://entropicthoughts.com/parser-combinators-beat-regexes",
    "first_paragraph": "\nSomeone online was solving Advent of Code problems, and had a question about\nlast years\u2019 day 3. They had a working solution using regular expressions\n(regexes) on String values, but they wanted to use ByteString values instead\nfor performance reasons. They were surprised, however, that there seems to be a\nlack of community cohesion around regex libraries in Haskell.\n\nThere\u2019s a reason for that. We generally don\u2019t use regexes in Haskell. We use\nparser combinators instead, because they are almost always better. In other\nlanguages, it would be considered overkill to write a full parser when a simple\nregex can do the same thing. In Haskell, writing a parser is no big deal. We\njust do it and move on with our lives.\n\nThe first part of the Advent of Code problem is well suited for a regex-based\nsolution. Here\u2019s what such a solution might look like in Haskell. It uses the\npcre-heavy Haskell library which in turn calls out to the system-wide pcre\nC library for actually compiling and running the"
  },
  {
    "title": "The Agent2Agent Protocol (A2A) (googleblog.com)",
    "points": 377,
    "submitter": "meetpateltech",
    "submit_time": "2025-04-09T12:38:20 1744202300",
    "num_comments": 214,
    "comments_url": "https://news.ycombinator.com/item?id=43631381",
    "comments": [
      "It\u2019s frustratingly difficult to see what these (A2A and MCP) protocols actually look like. All I want is a simple example conversation that includes the actual LLM outputs used to trigger a call and the JSON that goes over the wire\u2026 maybe I\u2019ll take some time and make a cheat-sheet.I have to say, the endorsements at the end somehow made this seem worse\u2026\n \nreply",
      "You weren't kidding with the endorsements. It's endorsed by KPMG, Accenture and BCG. McKinsey and PwC are not in the partner list but are mentioned as contributors. Honorable mention to SAP as another company whose endorsements are a warning sign\n \nreply",
      "I was in the same boat in regards to trying to find the actual JSON that was going over the wire. \nI ended up using Charles to capture all the network requests. I haven't finished the post yet, but if you want to see the actual JSON I have all of the request and responses here https://www.catiemcp.com/blog/mcp-transport-layer/\n \nreply",
      "I had never heard of charles ... (https://www.charlesproxy.com/) I basically wrote a simple version of it 20 years ago (https://github.com/kristopolous/proxy) that I use because back then, this didn't exist ... I need to remember to toss my old tools aside\n \nreply",
      "Well, Charles launched almost 20 years ago, so I'd say there's a good chance that it did exist.\n \nreply",
      "Yeah, at its core it's just a proxy, so there are a lot of other tools out there that would do the job. It does have a nice UI and I try to support projects like it when I can.I'll check out your proxy as well, I enjoy looking at anything built around networking.\n \nreply",
      "even the approach that charles takes for intercepting TLS traffic is a bit old school (proxies, fake root certs etc.) - cool kids use eBPF  https://mitmproxy.org/posts/local-capture/linux/\n \nreply",
      "I can see how you don't need a proxy any more, but I don't see how you can bypass TLS without fake root certs, even with eBPF.\n \nreply",
      "new to this program as well but looks really nice.i think it is still a proxy though unless I\u2019m missing something (beyond the name lol).[here's a section on macos dealing with certs](https://mitmproxy.org/posts/local-capture/macos/)\n \nreply",
      "itd be nice if you prettified your json in the blogpostfwiw i thought the message structure was pretty clear on the docs https://modelcontextprotocol.io/docs/concepts/architecture#m...\n \nreply"
    ],
    "link": "https://developers.googleblog.com/en/a2a-a-new-era-of-agent-interoperability/",
    "first_paragraph": "AI agents offer a unique opportunity to help people be more productive by autonomously handling many daily recurring or complex tasks. Today, enterprises are increasingly building and deploying autonomous agents to help scale, automate and enhance processes throughout the workplace\u2013from ordering new laptops, to aiding customer service representatives, to assisting in supply chain planning.To maximize the benefits from agentic AI, it is critical for these agents to be able to collaborate in a dynamic, multi-agent ecosystem across siloed data systems and applications. Enabling agents to interoperate with each other, even if they were built by different vendors or in a different framework, will increase autonomy and multiply productivity gains, while lowering long-term costs.Today, we\u2019re launching a new, open protocol called Agent2Agent (A2A), with support and contributions from more than 50 technology partners like Atlassian, Box, Cohere, Intuit, Langchain, MongoDB, PayPal, Salesforce, S"
  },
  {
    "title": "Do Charity Bookshops Drive Out Other Second-Hand Bookshops? (wormwoodiana.blogspot.com)",
    "points": 55,
    "submitter": "fogus",
    "submit_time": "2025-04-09T20:51:35 1744231895",
    "num_comments": 47,
    "comments_url": "https://news.ycombinator.com/item?id=43637819",
    "comments": [
      "Anecdotal but I haven't seen a 2nd-hand bookshop in years however those little \"tiny libraries\" where people just donate their books are in abundance.  What I've seen other used-item shops are doing these days is checking online what things are worth and selling them for very slightly less and it seems like this has to be a death-knell for secondhand stores in general.And I know they have to do this, everything donated has to be checked to ensure safety and cleanliness, it costs them money to keep the shop open and staffed.  But if you can't actually save money by buying secondhand goods there then why would anyone shop there?!  It's a 10 - 20 percent discount on goods that may be years old when Amazon rotates these discounts through new goods 24/7.\n \nreply",
      "My experience has been that the second-hand bookshops have had thin times but nonetheless survive because of the internet. They tend to have a better selection compared to charity shops, i.e. not just cast-offs of holiday novels and celeb bios. Shout out to https://www.tillsbookshop.co.uk/ and https://www.armchairbooks.co.uk/There has also been a growth in first-hand bookshops, especially specialists/curators (e.g. only selling sci-fi, only selling books by women, etc.) to distinguish themselves from the Waterstones and Blackwells of this world.\n \nreply",
      "> only selling sci-fi\n\nAh, memories of the late \u201cA Change of Hobbit\u201d in LA. A dedicated sci-fi/fantasy bookshop.I distinctly recall getting a towel signed by Douglas Adams during one of his signings, I may have met Ellison there once.Been a long time.\n \nreply",
      "I will give you literally all my money for that towel!!You lucky, lucky man, you hoopy frood.Please tell me you aren\u2019t gonna say you don\u2019t know  where you towel is?\n \nreply",
      "I've noticed a few book stores which intermingle new and used stock and they're great.  (it's obvious when something isn't new stock but it's all pretty good condition regardless)\n \nreply",
      "> But bricks-and-mortar booksellers can sell via the internet too, and booksellers can migrate to lower rent areas. Indeed, there is some evidence of this: there are fewer city centre bookshops and more in smaller, less expensive towns.There was a hip university neighborhood used bookstore here, and even 20+ years ago they were also selling online.Their online inventory included a large amount of stock in a warehouse nearby that wasn't accessible to brick&mortar shoppers.Software automated the online listings and price adjusting.> [...] contemporary book trade and book-collecting directories [...] there were 523 second-hand bookshops in the UK in 1955 [...] and 1,140 in 2014. There are 1,282 now, in April 2025.Anyone know whether these all have a walk-in retail presence, appointment-only (like for rare books), or are a lot of those online-only sellers?\n \nreply",
      "My experience is that if one collects books they want as many stores as possible as close together as possible.NYC in the 1990\u2019s used to have a few neighborhoods full of bookstores. My favorite was just around 16th street in between 6th and  Broadway.\n \nreply",
      "In my area, charity shops have terrible selections tons of fad diet books from the 80s and 90s and religious related texts.\n \nreply",
      "You forget all the horrible fad investment books; Rich Dad\u2019s Guide to Whole Life and Timeshares\n \nreply",
      "There's a subtext to this post that may not be obvious to non British people: UK High Streets (Main Streets) have in the last 20 years experienced an incredible explosion of charity shops (thrift stores) including many locations specific to books.Quite why this has occurred is a subject of occasional argument, but I've never heard a definitive theory on it, and it partly overlaps with the general decline motivated by ecommerce. They do compete on some level with existing businesses, as debated here, but the more curious impact is they completely alter the character of an area.Ten years ago they used to be fantastic for obscure finds because it seemed people had not caught on, but these days they tend to be subpar, which is probably a major edge the non charitable enterprises have exploited.\n \nreply"
    ],
    "link": "http://wormwoodiana.blogspot.com/2025/04/do-charity-bookshops-drive-out-other.html",
    "first_paragraph": "This blog is devoted to fantasy, supernatural and decadent literature. It was begun by Douglas A. Anderson and Mark Valentine, and joined by friends, to present relevant news and information.Some years ago I started investigating the common belief\namong book-collectors that there are fewer second-hand bookshops in the UK than\nthere used to be. As a matter of stark statistical fact, this is simply not the\ncase. Of course, many people will have the subjective impression\nthat it is true, based on their own, partial, experience. They will know of\nbookshops that have closed, and towns or cities that had several but now have\nnone. No-one is doubting such personal impressions.But they are not the whole picture. The broad profile I have\nestablished, using contemporary book trade and book-collecting directories, is\nthat there were 523 second-hand bookshops in the UK in 1955, about 600 in 1966,\nabout 750 in 1973, about 900 in 1984 and in 1995, about 950 in 1999, and 1,140\nin 2014. There are 1,28"
  },
  {
    "title": "Show HN: Aqua Voice 2 \u2013 Fast Voice Input for Mac and Windows (withaqua.com)",
    "points": 79,
    "submitter": "the_king",
    "submit_time": "2025-04-09T16:31:06 1744216266",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=43634005",
    "comments": [
      "This looks like it'll slurp up all your data and upload it into a cloud. Thanks, no. I want privacy, offline mode and source code for something as crucial to system security as an input method.\"we also collect and process your voice inputs [..] We leverage this data for improvements and development [..] Sharing of your information [..] service providers [..] OpenAI\" \nhttps://withaqua.com/privacy\n \nreply",
      "Local inference only is an absolute requirement. It's not even really all that accessible if it's online only. I can say this as someone that's used over 20000 hours worth of voice dictation and computer control.\n \nreply",
      "First thing I looked for and read: the FAQ.No mention of privacy (or on prem) - so assumed it's 100% cloud.Non-starter for me.  Accuracy is important, but privacy is more so.Hopefully a service with these capabilities will be available where the first step has the user complete a brief training session, sends that to the cloud to tailor the recognition parameters for their voice and mannerisms... then loads that locally.\n \nreply",
      "And man it's another monthly subscription. I'm not mad at them for finding a gap in the market and putting a business around it. I'm mad at Apple for leaving that gap... hopefully built in voice dictation improves quickly.\n \nreply",
      "Is there a gap in the market? It's being rapidly filled with the likes of MacWhisper, etc., which offer local-only, one-off pricing.\n \nreply",
      "I totally agree, I created BetterDictation (.com) exactly because of that. Offline was a super important requirement for me.\n \nreply",
      "This should be on the FAQ. I was trying to find out if it was 100% processed locally.\n \nreply",
      "Agreed.This is where I bounce (out of this discussion).\n \nreply",
      "Real-time text output \u00e0 la Apple Dictation with the accuracy of Whisper is something I've been looking for recently - I'll definitely give Aqua a spin.MacWhisper [0] (the app I settled on) is conspicuously missing from your benchmarks [1]. How does it compare?[0]: https://goodsnooze.gumroad.com/l/macwhisper[1]: https://withaqua.com/blog/benchmark-nov-2024\n \nreply",
      "We're more accurate and much faster than Mac Whisper, even their strongest model (Whisper Cpp Large V3).For that benchmarking table, you can use Whisper Large V3 as a stand-in for Mac Whisper and Super Whisper accuracy.\n \nreply"
    ],
    "link": "https://withaqua.com",
    "first_paragraph": "advanced speech-to-text for everyday tasksExperience faster response times with significantly lower latency than competitors, ensuring a fluid and responsive experience.AquaWispr FlowTesting was performed on clips under 30 seconds on a MacBook Pro in Northern California.Starts up in under 200ms. Pastes complete text in as little as 450ms.Responds in ~850ms with continuous output as you speak. Maintains deep contextual understanding throughout your conversation for complex tasks.ScreenContextEnhancedUnderstandingBetterResponsesImproves accuracy for coding, messaging, and document editing by understanding what's on your screen. Your data is processed securely and never stored.Aqua makes ~17x fewer mistakes than Siri and Google Voice typing.AI-Native Dictation for Mac and PC."
  },
  {
    "title": "The chroot Technique \u2013 a Swiss army multitool for Linux systems (livesys.se)",
    "points": 204,
    "submitter": "mariuz",
    "submit_time": "2025-04-09T14:12:47 1744207967",
    "num_comments": 86,
    "comments_url": "https://news.ycombinator.com/item?id=43632379",
    "comments": [
      "This brings back memories - I owned a large web hosting company and we had thousands of machines. When hardware issues came up, or machines wouldn't boot, using this method was our first line of defense - we'd boot the machine from a burned copy of \"Recovery Is Possible\" which was an all-in-one Linux distro for recovery, then mount the partitions and chroot in to figure out what is going on - or use rsync to migrate data off as needed.Just looked and it looks like \"Recovery Is Possible\" hasn't been updated in a dozen years which dates my story, but I fondly remember overnight phone calls from panicked new sysadmins and telling them to be calm and \"RIP it and get chrooted in\" and then waking up to help them troubleshoot.\n \nreply",
      "System Rescue is what i use these days, but to be honest i can\u2019t recall using it in the last couple of year. Virtualization and containers have taken over.https://www.system-rescue.org/\n \nreply",
      "I use my Gentoo installation usb when this comes up\n \nreply",
      "System Rescue used to be Gentoo based and then switched to Arch.  You can install both Arch and Gentoo with SR and obviously you can install Arch with a Gentoo install CD and vice versa.SR also has some rather handy SAM database editing facilities.  Mount Windows at /mnt and then enable and reset the Administrator password.  Jolly handy for getting super duper user access on a Windows box.Its been a while since I installed Gentoo but you can probably quite easily add more stuff to your Gentoo install CD.  I don't know if Gentoo have added a script to do all the bind mounts but \"arch-chroot /bin/bash\" is very convenient.  I used to forget about /sys.\n \nreply",
      "Hetzner also chroots you into a recovery linux and mounts your drive for access. Same thing different scale.\n \nreply",
      "With qemu-user and binfmt you can even chroot into foreign CPU architectures, which is a handy thing to have when you mount your phone's eMMC to fix a hacking session gone wrong.Though these days you may want to look into things like systemd-nspawn instead of plain chroot.\n \nreply",
      "> you can even chroot into foreign CPU architectures, which is a handy thing to have when you mount your phone's eMMCThis sounds very interesting! What's the scenario where you'd do this? Would you be, for example, emulating an ARM processor with qemu on an x86 computer and chrooting into Android on an eMMC?\n \nreply",
      "Here is an example of preparing a debian ARM image on x86 with debootstrap, qemu and chroot:  ~# sudo apt install qemu-user-static debootstrap\n  ~# mkdir /tmp/arm\n  ~# debootstrap --foreign --arch=armhf buster /tmp/arm http://deb.debian.org/debian\n  ~# cp /usr/bin/qemu-arm-static /tmp/arm/usr/bin/\n  ~# chroot /tmp/arm   # from that point, you're running ARM!\n  ~# /debootstrap/debootstrap --second-stage\n \nreply",
      "These days (with recent kernels) you don't even have to copy the qemu binary into the rootfs nor use a static binary - these used to be workarounds for things that kernel now handles on its own.\n \nreply",
      "I've done this to build custom RPi images. Way faster than trying to build on a low power ARM platform, and way less fragile than cross compilers.\n \nreply"
    ],
    "link": "https://livesys.se/posts/the-chroot-technique/",
    "first_paragraph": "\n\n\n\n\nEver ran into a Linux box that just won\u2019t boot, even after making sure that\nBIOS settings are OK and that no major hardware errors are at hand?Then you need to know about the chroot technique, which can be a real life\nsaver.For example, I managed to repair a Nanopore GridION device\n\nthis way the other week, after the official method of re-installing it via an .iso file\n\nfailed, which reminded me to make the effort of documenting these steps.I came across the technique only after having used Linux as my daily driver for\nmore than a decade (thanks Matt\n!), which means I\nthink it is worthy of much more attention, given its usefulness. Thus I\u2019m\nhoping to spread the word a bit through this post.In short, the idea is that if you can access the hard drive of a broken or\nnon-bootable Linux machine (this could be done e.g. by booting from a Live\nUSB-stick, or plugging in the hard-drive as an extra drive in another Linux\nmachine), you will mount this hard drive in a way that you trick your "
  },
  {
    "title": "BS 1363 British Plugs and Sockets (plugsocketmuseum.nl)",
    "points": 4,
    "submitter": "susam",
    "submit_time": "2025-04-10T00:26:31 1744244791",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=43639421",
    "comments": [
      "I lived for 16 years in a house with all three: the older round pin in two sizes for different current draw, and the newer square pin.A lot of the round pin wiring was rubber/fabric insulated. The fuzeboard was scary. Tar insulated mains cables.\n \nreply",
      "Just don't let go of a BS1363 lead; they hurt.\n \nreply",
      "Treading on the upturned plug also isn't the nicest\n \nreply",
      "The \"old\" british standard is even cooler:  https://www.plugsocketmuseum.nl/OldBritish1.html\n \nreply",
      "You can still get similar to those today. 5A sockets, for plug in lighting.\n \nreply"
    ],
    "link": "https://www.plugsocketmuseum.nl/British1.html",
    "first_paragraph": ""
  },
  {
    "title": "Show HN: Obelisk \u2013 a WASM-based deterministic workflow engine (obeli.sk)",
    "points": 61,
    "submitter": "tomasol",
    "submit_time": "2025-04-09T19:24:40 1744226680",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=43636568",
    "comments": [
      "I believe https://flawless.dev/ is another implementation with a very similar technology stack. I'd love to know how you compare and what the key differences are!\n \nreply",
      "Indeed. I cannot compare the implementations as flawless is not open source. However on a high level they both share the same philosophy.I believe the biggest difference is that Obelisk relies on the WASM Component Model:Obelisk aims to avoid vendor lock-in. It is possible to write activities, workflows and webhooks with no obelisk SDK. Activities and webhooks are WASI 0.2 components that can be run on any compatible runtime like wasmtime e.g. for testing. This should also help with the adoption as any runtime will need a ton of integrations.\n \nreply",
      "One issue I had many time with workflow engines was updates. I have a workflow and it has already running instances. 2 scenarios:Can I update the workflow while it has running instances without interfering the running instances?Can I update a running instance with a new version of the workflow to patch some flaw? If no, can I replay an updated version of a workflow with the log of an old workflow version?\n \nreply",
      "Great questions. If you are fixing a bug in a workflow, which has running executions, there are two scenarios:Either the fix does not break the determinism, meaning the the execution did not hit the fix yet. In this case the execution can be replayed and continue on the patched WASM component.Otherwise, the execution replay causes \"Non determinism detected\" error. In this case you need to handle the situation manually. Since the execution log is in a sqlite file, you can select all execution affected by the bug and perform a custom cleanup. Also you can create a \"forked\" execution just by copying the execution log + child responses into a new execution, however there is no API for it yet.> Can I update the workflow while it has running instances without interfering the running instances?If you mean keep the in-progress executions on the old version of the code, you can do that by introducing a new version in the WIT file and/or change the new function name.\n \nreply",
      "We are using a workflow engine called Unmeshed - which has what you are asking about. Workflow definitions can be updated without running interfering with running instances and if you choose to you can patch updates on to running workflows. And you can also rerun workflows with the same input from an older execution.\n \nreply",
      "Really nice project. What\u2019s the reasoning behind the AGPL licensing. My understanding is that it will hurt adoption unless you\u2019re planning to offer paid licensing options? Either way it\u2019s a really nice project and I\u2019m keen to try it out. I\u2019ve found it tricky to get a WASM/WASI setup where I can at least my http requests (probably my own skill issue).\n \nreply",
      "Thanks for the kind words. In an ideal world I would like to offer a cloud version that would be monetized.\nThere are a few examples on how to do HTTP requests, I have a demo repository [1] with GraphQL and regular JSON-over-HTTP activities.\nI do agree that the ecosystem is not mature yet, but I was able to generate HTTP activities using LLM on a single shot.1: https://github.com/obeli-sk/demo-stargazers\n \nreply",
      "This is a pretty cool idea but I'm trying to think of the advantage of WASM vs other execution engines.It seems to me one of the main use-cases for WASM is to execute lambdas, which are often short-lived (like 500ms timeout limits). Maybe this could have a place in embedded systems?\n \nreply",
      "The biggest motivator for me is that WASM sandbox provides true deterministic execution. Contrary to engines like temporal, using hashmaps is 100% deterministic here. Attempting to spawn a thread is a compile error.\nIt also performs well - the bottleneck is in the write throughput of sqlite.\nLast but not least - all the interfaces between workflows and activities are type safe, described in a WIT schema.\n \nreply",
      "Somewhat similar to Golem - https://github.com/golemcloud/golem - correct?So, I like this idea, I really do. At the same time, in the short-term, WASM is relatively messy and, in my opinion, immature (as an ecosystem) for prime time. But with that out of the way (it will eventually come), you'll have to tell people that they can't use any code that relies on threads, so they better know if any of the libraries they use does it. How do you foresee navigating this? Runtime errors suck, especially in this context, as fixing them requires either live patching code or migrating execution logs to new code versions.\n \nreply"
    ],
    "link": "https://obeli.sk/",
    "first_paragraph": ""
  },
  {
    "title": "Quality-of-Life in Tetris Games (jcarlosroldan.com)",
    "points": 132,
    "submitter": "juancroldan",
    "submit_time": "2025-04-09T13:10:44 1744204244",
    "num_comments": 44,
    "comments_url": "https://news.ycombinator.com/item?id=43631656",
    "comments": [
      "I have a somewhat contrarian opinion. I think if you're making a clone of Tetris you should actually take design cues from the somewhat more obscure Tetris the Grand Master series instead of the \"guideline\" or NES Tetris rules. TGM's rotation and kick rules are a lot more elegant and avoid a lot of unneeded complexity. Guideline Tetris kicks let you do absurd and weird things (look up the series of kicks that make up a T-Spin Triple and see if that makes sense to you) and rewards doing canned setups really fast, whereas TGM's game design is all about doing good stacking very fast.The TGM randomization algorithm is also pretty elegant. 7 bag is a bit extreme, it gives you such a perfect set of pieces at all times that it's genuinely less challenging and fun. TGM's random piece algorithm is a lot simpler: the randomizer has a 4-piece history window and it tries multiple times (IIRC, 6) to find a unique piece that hasn't appeared in that window. It is initialized to SSZZ to lower the odds of starting with an S or Z early on. (~~They also use the Mersenne Twister as their PRNG, which was a pretty good PRNG in an era where many games still used LCGs.~~ edit: Apparently, they do not. Don't ask me where I got this, I have no idea.)Now of course I'm not sure if it matters at all for this particular game since it isn't really a Tetris clone at all, but while TGM is a well-known cult classic for people deep into Tetris it's relatively obscure outside of that circle (and presumably outside of Japan.) The Tetris Company is very strange about licensing and has apparently, as the legend has it, blocked and forced changes on TGM releases for a very long time due to the fact that it doesn't fit with the Tetris guideline rules they enforce in an oddly totalitarian fashion, probably suppressing the game even further in an era where speed games and competitive gaming is a lot more popular.\n \nreply",
      "The rules make it so every new tetris release is just a boring clone. TGM has to fight for innovation, really sad. When I made my four player variant, https://duo.itch.io/reaktor I made sure to follow NONE of the guideline rules, and it ended up being a breath of fresh air for a lot of people. https://www.reddit.com/r/gamedev/comments/1fdzcsc/how_i_publ...\n \nreply",
      "I think it depends on what you want to make a clone for.TGM rules are more elegant and much more challenging for single-player tetris, but on the other hand multiplayer and especially 1v1 has far greater variety and dynamism with a looser rotation system. The stricter the rules, the more it becomes spamming tetrises against each other until someone misdrops. You have to construct a ruleset where a player who is 0.1pps faster doesn't just autowin.\n \nreply",
      "I doubt this is going to be a popular opinion, but I honestly think Tetris 1v1 just isn't that interesting of a game. The interaction between players is pretty damn boring. In guideline 1v1 a lot of very high level games are decided by garbage RNG which I think is even less interesting than determining who is 0.1pps faster. I don't think either ruleset is particularly better for either players or people watching. Don't get me wrong, there's definitely a lot of tension in high level game play and so it's not completely boring, but to me it starts to get old once you realize what's happening, and I haven't really watched any high level Tetris stuff in a long time. I have a lot more fun watching Classic Tetris World Championship, because as janky as NES Tetris is, it's fun to watch people absolutely decimate it.Now if you want a good multiplayer puzzle game with super rich interactions, I think you just simply need a different game entirely, because there's no obvious way to weave some sort of responsive strategy into a Tetris game. Therefore, my pick for the ideal competitive falling blocks puzzle game is Puyo Puyo Tsu.\n \nreply",
      "TGM actually has a pretty interesting 1v1 system. I wish it was more popular.Most other Tetris games (all that I've played, at least) throw randomized garbage at the opponent. It scales with the number of lines you clear, but it always has a one column gap in a random position, no control over that.But TGM's garbage is deterministic. Basically, imagine taking the lines you just cleared, but remove the piece that completed them. That missing piece will be the gap. Flip what's left upside down and add it to the bottom of your opponent's stack.Now you have full control over the position and shape of the garbage you send!This adds a nice layer of strategy and makes the game feel more interactive since you need to constantly watch your opponent's stack and act accordingly. You want to add garbage where your opponent will struggle to clear it while also being on the lookout for what kind of garbage they'll be sending you and try to play around it.And there are powerup items to spice things up, which admittedly vary widely in power level and can be very swingy. Although that's not necessarily bad as it allows players of different skill levels to play together (although the stronger player will still win most games), as well as just add some exciting or funny turnarounds. There's also a timing element to triggering the items, which adds even more strategy.https://tetris.wiki/TGM_Versus_Mode_Guide\n \nreply",
      "I absolutely do think TGM versus mode is interesting. I'm not sure how to feel about it, but the lack of random garbage is a very big plus.> And there are powerup items to spice things up, which admittedly vary widely in power level and can be very swingy. Although that's not necessarily bad as it allows players of different skill levels to play together (although the stronger player will still win most games),This seems to be a tricky thing to balance in competitive games. It's boring if the more skilled player wins every single match even in fairly close matchups, but it's also frustrating if any specific win/loss is dictated specifically by random chance or \"unfair\" game mechanics. This seems to essentially force game design to go a little off the path and overcomplicate things a little to try to make the game more interesting.I strongly recommend taking a look at Puyo Puyo (particularly Tsu) if you are a competitive puzzle game enjoyer. It is a seriously good multiplayer puzzle game. Where Tetris is an excellent single player game and a good multiplayer game, Puyo Puyo is an excellent multi player game. You can see the game design issues play out especially over the early iterations of it; they pretty much nail the formula in Tsu, so most of the changes from thereon just kind of add additional complications that can make the game a bit more interesting and add some ways that someone can feasibly win a match against a better opponent.Among the many puzzle games people play somewhat competitively (Tetris, Panel de Pon, Dr. Mario even,) I think Puyo Puyo is the one that deserves much more attention. Not that I think the game design behind Tetris multiplayer shouldn't be iterated on, but after seeing and studying high level Puyo Puyo play, it just makes it feel like Tetris multiplayer will never be able to have the same amount of depth. Of course, it's still plenty enjoyable, especially if you are playing Tetris multiplayer somewhat more casually. I definitely used to play a lot of online Tetris with friends. (Also, although it wasn't something I played a whole ton, I did spend a few hours on Tetris 99. I wasn't really the greatest at it because I'm just not that good at spamming setups but I was able to net a few wins.)\n \nreply",
      "Yeah, 1v1 TGM didn't leave a good first impression on me because the items seemed wild and gimmicky, something designed for casual play, not competitive. But I eventually came around, mostly after finding out how the garbage system works. I've played quite of bit of TGM2 on Fightcade, and while some individual games come down to item craziness, usually people play FT3 or FT5 matches, where the luck of a single game usually doesn't decide the match (and if it did, it was a close match otherwise). I like the tension and surprises that items can add, even if it comes at the cost of balance sometimes.I played a decent amount of Puyo Puyo back in the day (mostly Tsu), but lost interest for two reasons:1.) I had nobody to play against, and the AI in the old games wasn't very good. Neither of these are issues now though, with online play and much better AI.2.) I could never get past the beginner phase. Making 4-5 chains really fast was usually good enough to beat the AI in the old versions, so I stagnated there. But that doesn't work against modern AI, and certainly not against humans. But I had no idea how to make the jump from beginner to intermediate; strategy just felt fundamentally different, and hard for me to figure out. Maybe I just never found good resources for learning that (this was 20+ years ago, probably much more out there now).But yeah, it's a shame it never really took off in the west. Highly underrated game.\n \nreply",
      "Honestly that is probably the one big fault of Puyo Puyo: Puyo Puyo Tsu (and onward) has an obscenely challenging learning curve which will undoubtedly have one plateauing a lot. If you want to be able to make larger chains you need to learn how to build transitions. But if you want to build large chains in actual matches with an opponent who is good enough to watch your board, you also need to be able to build transitions safely and efficiently, which is why a lot of people do GTR as soon as possible. It took me a few years to get to a point where I felt basically just mediocre, and then I plateaued hard. To get better I'd undoubtedly need to hone my muscle memory for how to more efficiently use pieces and build more parts of the chain at once without breaking it or leaving myself vulnerable. I don't think I'll ever be all that great, but it was a lot of fun.\n \nreply",
      "Watching two people who know how to play Puyo Puyo Tsuu and when to reflect or cancel out the garbage blocks is incredibly dynamic.It\u2019s a bit of a shame Sega/Nintendo chose to localize the first game in the series rather than the sequel with the updated rules.\n \nreply",
      "One example of the kind of mind games that can happen between top level Puyo Puyo players: https://www.youtube.com/watch?v=sjeNJcCfHpo\n \nreply"
    ],
    "link": "https://jcarlosroldan.com/post/355",
    "first_paragraph": "Who are you? We'll save this info in your browser for the next time."
  },
  {
    "title": "Firebase Studio (firebase.studio)",
    "points": 54,
    "submitter": "sumitkumar",
    "submit_time": "2025-04-09T18:39:03 1744223943",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=43635783",
    "comments": [
      "It's a rebranding of https://idx.google.com/\n \nreply",
      "this isn't new.. (edit, well actually they've added the \"prompt from scratch\" thingy like v0.dev/replit/lovable that idx.dev didn't have before) wasn't really gaining the traction they wanted so decided to rebrand.  not a bad idea.  I use idx.dev (now firebase.studio) and like it.  They may not have a \"template\" for the exact stack/app type you are working with, but it's pretty easy to just setup a blank workspace and modify the nix.dev file as needed..\n \nreply",
      "How was your experience? Would it compare to Cursor, Windsurf, Cline/Roo?\n \nreply",
      "Friend is working on a SaaS startup solo as a non-technical founder.  Been building using Replit and Cursor with Claude 3.5 and 3.7 and launched with live customers.I preface because he's been using AI basically every day to build his SaaS.His comments today:    > also gemini 2.5 is beating claude\n \nreply",
      "I've been enjoying just trying to one-shot little pages that I think are useful with v0.dev.  It does a pretty good job and I like that I can just one-button deploy to my Vercel account (which \"just works\").  Here's one I did today:https://v0-github-repo-stream.vercel.app/\n \nreply",
      "Mind revealing the product/site or are they going to do an upcoming hn launch..?\n \nreply",
      "He has asked to not reveal it and not likely to reveal it.  I asked him about it because I think the press would be insane, but it's a niche B2B SaaS and he doesn't want the \"made with AI\" branding to hurt the image of the product from a customer perspective. Second concern is people trying to hack it in case the LLM took shortcuts on security.But I can say that as a 20yr+ eng. and having worked with him on a prior startup, I'm super, super impressed how far he got by himself in under 4 months.  Basically a full-blown industry specific CRM with Stripe integration, OCR from mobile web app, desktop web app, marketplace.  He himself is concerned that it's the end of SaaS as he thinks anyone can build these things now, but I think there's still a bit of a chasm when it comes to some ancillary pieces like databases.\n \nreply",
      "What stack is he using for all of it? I\u2019m curious which tools or languages AI tends to be the most effective with?\n \nreply",
      "> he doesn't want the \"made with AI\" branding to hurt the image of the product from a customer perspectiveThat's kinda telling.\n \nreply",
      "At the same time, he's really helping small business customers by offering a competitive product at a fraction of the price of the dominant vendors in the space (a duopoly) because he has no overhead.  Customers love the product.  No ads or marketing and he's got 30ish customers via word of mouth.\n \nreply"
    ],
    "link": "https://firebase.studio",
    "first_paragraph": "The full stack AI workspaceFirebase Studio accelerates your entire development lifecycle with AI agents. Build backends, front ends, and mobile apps, all in one place.Go from opening your browser to building in minutes, not hours. Import your existing repositories from GitHub, GitLab, Bitbucket, or your local machine, with support for most tech stacks. Or use the App Prototyping agent to quickly create a new application using natural language, mockups, drawing tools, and screenshots, or select from a large catalog of popular framework or language templates. You can also customize your environment with Nix.Firebase Studio is currently available with 3 workspaces at no cost during preview. Members of the Google Developer Programget up to 30 workspaces.Work quickly and efficiently with Gemini in Firebase. Complete a variety of tasks like coding, debugging, testing, refactoring, explaining, and documenting code with AI assistance that interacts with your codebase and takes actions on your "
  },
  {
    "title": "Show HN: I turned my kid's worksheet into a math game in 10 minutes with Claude (mattsayar.com)",
    "points": 43,
    "submitter": "MattSayar",
    "submit_time": "2025-04-06T17:43:02 1743961382",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43603275",
    "comments": [
      "Nice job, but it's definitely lacking a reward mechanism to get this to qualify even loosely as \"edutainment\". Maybe add a particle emitter glitter gun or some kind of flashy CSS animation. You'd be surprised at how even the smallest things can help keep a child engaged.About a decade ago my little brother was struggling with the multiplication table so I built an education game based off the magic carpet escape sequence in the Sega Genesis game for Aladdin.https://specularrealms.com/aladAfter a few weeks, he had those tables down cold!\n \nreply",
      "My kids love Duolingo so I just started turning their spelling lists into this:\nhttps://thomaspark.co/projects/cleolingo/Without Claude so it took much longer than 10 minutes.\n \nreply",
      "Wow it's amazing.How hard is it to change it for a different language? Looks fun for practicing words\n \nreply",
      "Done similar to help kids with learning beginner math.Should now be possible to make an app that specializes in making new apps on demand based on simple requirements like these :)As Khan Academy is experimenting with 1:1 tutoring using LLMs... this may be an adjacent space for them to explore: let users generate apps/games on a math or science topic of choice, beyond the regular quizzes.\n \nreply",
      "I've had similar success vibe coding small, self-contained projects.Where it lacks is wisdom + taste. Not a problem for small greenfield projects. A very real problem for large codebases where it quickly implements silly technical approaches. For example, building an authentication system from scratch for a feature, rather than extending the existing authentication system.\n \nreply",
      "That's nice, I create birthday invites in 5 mins now for my kids. An ordeal that used to take hours.The last time I asked Chad Gepeto to make sudoku puzzles though, it went horribly wrong. At least it got my kids to prove that this and that puzzle by AI were broken, which is a net win. Early skepticism against the machine!\n \nreply",
      "I built this for kids in my family https://bhupal.net/alphabeesIt is 95% written by Claude with Cursor free tier. The good part, 5 yrs old want more features like more levels, nice graphics, they basically want all their book in this style but I don't have resources to take this further.\n \nreply",
      "The noise when you hit a letter is so loud and grating :(\n \nreply",
      "This is so awesome. Personalized software really is coming.\n \nreply",
      "You\u2019re gonna teach your kid hockey?\n \nreply"
    ],
    "link": "https://mattsayar.com/how-i-vibe-coded-a-math-game-in-ten-minutes/",
    "first_paragraph": ""
  },
  {
    "title": "Whistleblower tells senators that Meta undermined U.S. security, interests (thehill.com)",
    "points": 156,
    "submitter": "c420",
    "submit_time": "2025-04-09T20:34:49 1744230889",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=43637622",
    "comments": [
      "> They have threatened her with $50,000 in punitive damages every time she mentions Facebook in public \u2026 even if the statements she is making are true,\u201d he said.Unless Congress asks for the testimony, which is probably why Meta tried to stop the hearing.\n \nreply",
      ">In remarks to a hearing convened by Sen. Josh Hawley (R-Mo.), Wynn-Williams alleged that Meta executives worked vigorously to \u201cwin favor\u201d with leaders in Beijing to build an $18 billion business in China.Has Hawley demonstrated similar interest about Elon's business dealings in China? Elon owes much of his net worth to the CCP's Shanghai factory.\n \nreply",
      "What does that have to do with the topic at hand? Nearly every CEO at a company making physical products from 1990 onward owes much of their net worth to Chinese factories.\n \nreply",
      "Kinda wild this is a buried story. This should be top news\n \nreply",
      "It's interesting to think about the way in which the Chinese government operates compared to the government of other countries like the US. The US government was conceived as merely a public utility to fund public works; there was no single ideological basis beyond that. Freedom isn't a \"single\" ideology because it encapsulates all possible ideologies. The ideology rested with the people themselves to implement on an individual basis. The CCP, on the other hand, was conceived as an ideological movement with specific goals.Now that the Chinese economy has become so important in the world, the ideological aspects are seeping into the economies of all countries, though it doesn't translate well into western politics. I think this is because the western political system was a limited-trust system, it only worked well when the state was anemic; if the state becomes big (cash-rich), companies will find that they can start to earn significant sums of money from the state, they will redirect their attention to catering to the needs of the state and away from the private sector. Unfortunately the western state has no intrinsic ideology, no intrinsic needs or goals, so it will lead to corruption or faux-adoption of external ideologies (as a means to serve private financial interests).Western governments cannot form genuine ideological movements (besides the ideology of economic pragmatism) IMO because their foundations aren't designed to support anything besides that. They are founded on the principles of individualism and limited state power.\n \nreply",
      "> The US government was conceived as merely a public utility to fund public works; there was no single ideological basis beyond thatThis might be the dumbest thing I have ever read on HN.  Congratulations.\n \nreply",
      "Precisely why China needs to be a whole lot less important to the world.\nFreedom and personal liberty actually are ideologies. They don\u2019t encompass every ideology that doesn\u2019t make sense at all.I\u2019d say CCP and many other governments like Russia and Ukraine are FAR more corrupt than the US. Your argument really doesn\u2019t make sense.\n \nreply",
      "Dude the US is insanely corrupt, it's just that a lot of the corruption is called \"lobbying\" and \"consulting.\"  Sometimes also certain forms of \"legal counsel.\"  It's whitewashed and normalized.\n \nreply",
      "Many \u201cwestern\u201d governments have formed genuine ideological movements. I understand this may be difficult, but what are you actually talking about?\n \nreply",
      "> Meta says it regularly discloses the fact that it generates advertising revenue from advertisers based in China but says that doesn\u2019t mean that it operates services in China. It says its services are banned in China.This is phrasing is very weaselly. All foreign companies in China either partner with or are operated by a domestic company like Alibaba or Tencent. Saying \"we don't operate our services in China\" is like saying water is wet to people who know what that really means. It doesn't in anyway invalidate the claims made against them.\n \nreply"
    ],
    "link": "https://thehill.com/homenews/senate/5241043-meta-executives-undermine-national-security/",
    "first_paragraph": ""
  },
  {
    "title": "Antiviral chewing gum to reduce influenza and herpes simplex virus transmission (upenn.edu)",
    "points": 99,
    "submitter": "gnabgib",
    "submit_time": "2025-04-09T19:09:27 1744225767",
    "num_comments": 56,
    "comments_url": "https://news.ycombinator.com/item?id=43636302",
    "comments": [
      "PSA, everyone should be getting the HPV vaccine, regardless of age and gender.https://en.wikipedia.org/wiki/HPV_vaccinehttps://www.mdanderson.org/publications/focused-on-health/wh...https://www.cdc.gov/cancer/hpv/oropharyngeal-cancer.html\n \nreply",
      "While this advice is good, the article is discussing HSV (herpes simplex virus), not HPV (human papilloma virus), which have quite different symptoms and epidemiology. There are, as yet, no approved HSV vaccines.\n \nreply",
      "Second part of the PSA, one should keep prophylactic antiviral medication on hand incase you get exposed to someone with HSV. With 60% of the population positive for HSV, everyone should have an antiviral on hand. acyclovir, famciclovir and valaciclovirhttps://www.ncbi.nlm.nih.gov/books/NBK525787/\n \nreply",
      "And where/how does one acquire them from?\n \nreply",
      "They\u2019re available OTC basically everywhere.\n \nreply",
      "They're not OTC medicines. They are prescription-only medicines.\n \nreply",
      ">  PSA, everyone should be getting the HPV vaccine, regardless of age and gender.This is false, please don't take medical advice from an HN post.  CDC guidelines do include quite a bit of discussion of patient age.  [1]1.  https://www.cdc.gov/vaccines/vpd/hpv/hcp/recommendations.htm...\n \nreply",
      "Thats nonsense.  Their \"recommendation\" is based on supply and epidemiological trends, not actual need of the drug.  If supply gets constrained, its up to the CDC and drug makers to make more, not to tell the population to limit uptake.This is why I don't trust CDC guidelines, nor doctors who blindly parrot them without explanation or context.Sure, check with \"your doctor\" about the vaccine.  If they give you no good reason not to take it, then take it.\n \nreply",
      "Either the vaccine has notable safety issues or it should be at least fine to get the vaccine at an older age.The reason many people don't trust the CDC's advice is they don't really tell you why or why not.If you're over 26 you're pretty likely to already be exposed to HPV but not necessarily every strain which would be protected by the vaccine (as it says in the article).So this pushes the question: why shouldn't I get it even if there's only a small chance it will be beneficial at my age?  Is there really a risk they're not telling me about or are they giving bullshit answers? There isn't a third direction.\n \nreply",
      "Vaccine recommendations are based on more than just safety. Efficacy,  cost, availability, and prioritization are also considerations.> Compared with the benefit of the existing HPV vaccination program for adolescents and young adults through age 26 years, the additional benefit of vaccinating people age 27 through 45 years would be minimal.> Given abundant evidence for safety of HPV vaccines, undesirable anticipated effects are minimal. Also, anticipated population-level benefits are minimal for vaccinating adults over age 26 years. In this scenario, other considerations including cost-effectiveness play an important role in guiding policy-making.https://www.cdc.gov/acip/evidence-to-recommendations/HPV-adu...Elsewhere:> There\u2019s not a safety issue past age 45. We just aren\u2019t sure how much the vaccine will help men and women who are past that age, because so many of us have acquired HPV by that point, and because it takes many years for cancer to develop after acquiring the virus. However, as the average life expectancy increases, it may benefit the population to increase the age limit for HPV vaccination as well.https://www.mskcc.org/news/think-you-re-too-old-get-hpv-vacc...\n \nreply"
    ],
    "link": "https://penntoday.upenn.edu/news/penn-dental-antiviral-chewing-gum-reduce-influenza-and-herpes-simplex-virus-transmission",
    "first_paragraph": "\n          2 min. read\n      In today\u2019s interconnected world, infectious diseases pose an escalating threat, as demonstrated by the coronavirus pandemic and outbreaks of H1N1, SARS, Ebola, Zika, and H5N1 (bird flu) viruses\u2014all of which have had significant global health and economic impacts.But more common viral diseases also contribute to global health challenges and economic costs. For example, seasonal influenza epidemics occur annually, causing a substantial global disease burden and economic losses exceeding $11.2 billion each year in the United States alone. Meanwhile, herpes simplex virus-1 (HSV-1), spread primarily through oral contact, infects over two-thirds of the global population and is the leading cause of infectious blindness in Western countries.Low vaccination rates for influenza viruses and the lack of an HSV vaccine underscore the need for a new approach\u2014one that targets reducing viral loads at the sites where transmission occurs. And for viruses like these, which ar"
  }
]