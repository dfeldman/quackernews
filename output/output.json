[
  {
    "title": "LibreCUDA \u2013 Launch CUDA code on Nvidia GPUs without the proprietary runtime (github.com/mikex86)",
    "points": 320,
    "submitter": "rrampage",
    "submit_time": "2024-08-08T17:24:40",
    "num_comments": 72,
    "comments_url": "https://news.ycombinator.com/item?id=41194024",
    "comments": [
      "I think the point of open cuda is to run it on non NVIDIA gpus.  Once you have to buy NVIDIA gpus what\u2019s the point.  If we had true you competition I think it would be far easier to buy devices with more vram and thus we might be able to run llama 405b someday locally.Once you already bought the NVIDIA cards what\u2019s the point\n \nreply",
      "Some people believe being able to build on fully-open software stacks has value in and of itself.  (I happen to be one of those people.)Another benefit could be support for platforms that nvidia doesn't care to release CUDA SDKs for.\n \nreply",
      "Some of us are running llama 405B locally already.   All my GPUs are ancient Nvidai GPUs.  IMO, the point of an open cuda is to force Nvidia to stop squeezing us.  You get more performance for the buck for AMD.   If I could run cuda on AMD, I would have bought new AMD gpus instead.    Have enough people do that and Nvidia might take note and stop squeezing us for cash.\n \nreply",
      "The NVidia software stack has the \"no use in datacenters\" clause.   Is this a workaround for that?\n \nreply",
      "Specifically the clause is that you cannot use their consumer cards (e.g. RTX 4090) in datacenters.\n \nreply",
      "That's why we run all of our ML workloads in a distributed GPU cluster located in every employee's house\n \nreply",
      "The bonus is free heating for every employees household!\n \nreply",
      "CUDA is ubiquitous in science and an open source alternative to the CUDA runtime is useful, even if the use is limited to verifying expected behavior.\n \nreply",
      "> Once you already bought the NVIDIA cards what\u2019s the pointGood luck getting a multi-user GPU setup going, for example.It super sucks when the hardware is capable, but licensing doesn't \"allow\" it.\n \nreply",
      "Yeah like running Linux on a MacBook\u2026\n \nreply"
    ],
    "link": "https://github.com/mikex86/LibreCuda",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          LibreCUDA is a project aimed at replacing the CUDA driver API to enable launching CUDA code on Nvidia GPUs without relying on the proprietary CUDA runtime. It achieves this by communicating directly with the hardware via ioctls, (specifically what Nvidia's open-gpu-kernel-modules refer to as the rmapi), as well as QMD, Nvidia's MMIO command queue structure. LibreCUDA is capable of uploading CUDA ELF binaries onto the GPU and launching them via the command queue.Below is an example demonstrating the usage of LibreCUDA:The project is in its early stages and currently implements only rudimentary CUDA functions. It is not yet ready for production use.Contributions are welcome! Please submit issues and pull requests to help improve LibreCUDA.This project is licensed under the MIT License."
  },
  {
    "title": "Public Work: a search engine for public domain images (public.work)",
    "points": 56,
    "submitter": "throw0101d",
    "submit_time": "2024-08-05T15:22:35",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=41162216",
    "comments": [
      "It looks neat. I love the blurry background on the interface elements. Does it include images from Wikimedia Commons?I searched for a known Wikipedia photo I had upl myself (\u201curinal\u201d) but it didn\u2019t show up on your search engine.\n \nreply",
      "Related: CanWeImage[1].1: https://canweimage.com/\n \nreply",
      "NASA images was the first thing I thought of when I thought of public domain images. Looks like public.work doesn't include NASA images but this website does.\n \nreply"
    ],
    "link": "https://public.work",
    "first_paragraph": ""
  },
  {
    "title": "Do quests, not goals (raptitude.com)",
    "points": 233,
    "submitter": "zdw",
    "submit_time": "2024-08-08T18:02:12",
    "num_comments": 64,
    "comments_url": "https://news.ycombinator.com/item?id=41194431",
    "comments": [
      "I think what\u2019s going on behind the verbal sleight of hand here, is focusing on the process (quest) instead of the outcome (goal). It\u2019s the difference between doing a thing and having done a thing. I might enjoy having written a book, but I don\u2019t think I would enjoy writing a book. And I don\u2019t think calling it a quest instead of a goal would make much difference\n \nreply",
      "I think about this a lot. I think my dad was more goal oriented and I\u2019m more process oriented. I see every day spent working toward a goal as a valuable step toward it, while I think he tried to always shorten the path to reach his goals, and ended up not ever achieving them because of it.As an example, I do car restoration as a hobby. It\u2019s a big, big task to basically dismantle a car, fix body issues, rebuild the engine and transmission, clean up all the parts, and put it back together. Looking at the entire task outside of it, seems almost impossible to do, but I almost never think about the end of the work. I just think about the next thing I need to do.I think marathon runners do something similar, or so I\u2019ve heard anecdotally.\n \nreply",
      "As a counter point, I've also seen plenty people too focused on doing every little step up to some imagined standards that they never get to complete anything \u2014 basically, life intervenes and they got to leave with nothing really done at all.I am personally goal motivated: I like achieving and building things (I enjoy the process in as much as I got the better of it :)). When things are complex, I come up with smaller goals that are on the path to getting the big thing done, all the while thinking how these things fit together.This has made me great at coming up with iterative steps where each step brings value: even if I stop at any one point, I have done something useful.In your example, I would probably dismantle the car enough to get the engine out and rebuilt and back in, and then go back to it sometime in the future to work on other stuff, all the while keeping a functioning car as I am rebuilding it.\n \nreply",
      "> This has made me great at coming up with iterative steps where each step brings value: even if I stop at any one point, I have done something useful.This is really just getting caught up on semantics, and what you've described is essentially the same as a 'quest mindset'.  The goal vs quest mindsets are basically waterfall vs (lowercase a) agile mindsets.  In the former you risk building something you don't want or under-allocate resources to achieving it, in the latter, you've realized that you've misestimated what the final outcome will be or should be, and know that there will be a discovery process alongside development.> basically, life intervenes and they got to leave with nothing really done at all.And perhaps there is no sense in that journey being 'complete' as there's always some way to improve things.  But I think the caution here on the 'quest' mindset, is to still have something functional early on \u2013 \"Release early, and release often\" as it were.  But this caution also holds for the 'goal' mindset, perhaps moreso, as there's a higher risk of misunderstanding what 'complete' looks like, or all the side-'goals' you never anticipated, and becoming dismayed when you've found yourself settling in on a loong quest anyway.\n \nreply",
      "Marathon runner here. Spot on. A marathon is near impossible if you don\u2019t like running. Inevitable if you like running.Marathon training is actually the framework around which I do all \u201cquests\u201d now. If you enjoy the process, anything is possible. The key is finding a way to enjoy the process.I\u2019ve extended it to several areas I didn\u2019t find very fun prior. Language learning and job hunting in particular.I actually wrote my first blog post on this very subject[1].\nWarning, it\u2019s quite verbose and not the best. There\u2019s a TL;DR.[1] https://emmettmcdow.github.io/posts/how-to-learn-a-foreign-l...\n \nreply",
      "Love this line from your post \"The marathon is simply an exhibition of the labor it took to achieve it, it is not the goal in and of itself.\"\n \nreply",
      "This is the joy of my martial arts path as well.In my experience, (This is a Mechanical Elves take on it (I studied Bujinkan Budo Taijutsu, Danzan Ryu, Small Circle, and my Professor Larry Cary said to me one session:\"The movements I am teaching you awaken dormant brain circuitry. When you do these movements, all the old Masters are with you\"That was the moment it really clicked for me.Later, Soke Hatsumi was quoted in the infamous \"Understand? Good. Play!\" book -- my favorite quote:\"I am teaching you to wield a sword, even if you have no arms!\"--The reason is that these two statements allowed me to see what the true nature of my Joy of Movement truely was: I was able to see the Principles of Movement flow through me - (we call this The Mode) - and it was that feeling that was being fully present is what I sought and I feel thats the nature of Mastery of any craft.---@sebg:You'd really love this Scientest's interview:\"Things like 'YOU' - that took the Universe Billions of years to generate 'YOU' - you have a lot of Time embedded in you...\"https://youtu.be/6o8OFTrSTpk?t=7832Fn prphetic. This Scientists entire podcast and more is worth Time.---I wrote this Haiku a long while back:Movement and MeasureAll is One, flowing through Time.Another yourself.\n \nreply",
      "Have any of you here considered that you simply need help? More people working alongside you? Being able to form a structure (such as a company or decentralized DAO) with responsibilities?In my experience, when you are procrastinating, that's your subconscious telling you that you need help. Maybe you don't have the skills, or the time, to undertake the thing. Your developer brain says it'll take 1 hour and it takes 2 days.https://qbix.com/blog/2016/11/17/properly-valuing-contributi...\n \nreply",
      "I think I slip into this mode automatically. As soon as I think of a \"goal,\" I immediately ask myself what kinds of habits a person who accomplished that goal would likely have. Then I find the lowest possible resistance way to have that habit from this day forward.Like, say I want to hike/climb some specific set of mountains. Great. What kinds of habits does a person who hikes all those mountains have? Well, they're probably someone who exercises every day. I can, as of today, become \"someone who exercises every day, no matter what,\" if I set my requirement as \"only one minute per day.\"Habits grow on their own. I don't think it's really necessary to stage them. Once you see yourself as a certain kind of person, you just become that kind of person. And before you know it, since you're just like a person who hikes all those mountains, you end up being someone who has hiked all the mountains.It's also the only effective way I've found to deal with my fear of success when it comes to big goals. I don't set them. I just decide to become the kind of person who would accomplish them, and by then, it doesn't feel like some impressive accomplishment. It just feels like a normal thing someone like me would do.\n \nreply",
      "It is a fail/succeed mindset rather than a play mindset I imagine. I definitely feel a difference between a chore and a game. That said not all chores are easily turned into games. But seeking games over chores probably leads to a happier time.\n \nreply"
    ],
    "link": "https://www.raptitude.com/2024/08/do-quests-not-goals/",
    "first_paragraph": ""
  },
  {
    "title": "Launch HN: Stack Auth (YC S24) \u2013 An Open-Source Auth0/Clerk Alternative (github.com/stack-auth)",
    "points": 138,
    "submitter": "n2d4",
    "submit_time": "2024-08-08T18:23:57",
    "num_comments": 78,
    "comments_url": "https://news.ycombinator.com/item?id=41194673",
    "comments": [
      "Congrats on the launch. I have a golang backend, postgres db and a react app. I have added auth using email, password salting and saving in pg. It was about 1 day of work to implement all of this.I do not have OAuth or SAML however. Is that the differentiating factor, if I have to use your solution ? Is a basic auth setup such a complex thing to handroll ourselves ? I do not intend to be snide but genuinely curios about it. Incorporating your project, its lifecycle management, etc. seems more work than implementing a 3-4 APIs (/signup /signin /verify-email /forgot-password /reset-password) and a periodic job (trigger emails and stuff). Is it so complex that we should bring in a new dependency with its own deployment, backup, monitoring etc. lifecycle management ?\n \nreply",
      "First, incorporating Stack into your project is really easy if you use Next.js \u2014 literally just a single command:    npx @stackframe/init-stack@latest\n\nIf you use our managed hosting, we'll deal with deployment, backup, ... for you..Anyways, here are a few things that you'd have to build for yourself but come for free with Stack Auth:- Session management, because you probably don't want to store passwords in cookies, and JWTs should not be long-living- Impersonation to debug users or do customer support early on- A user dashboard for basic analytics & editing, saves you from having to build this yourself in Retool- Email shenanigans \u2014 for example, some mail clients click verification links automatically to check them for spam and then even interact with the page- User profiles and account settings pages- OAuth access token management, if you ever want to access APIs on the user's behalf- App-based 2FA with HOTP/TOTP \u2014 we don't actually have this yet, but should be released this week still- Redirects, so users land back on the same page after they successfully logged in- Teams, so you can segment your B2B clients- Access permissions for your users- and more stuff, every time I make this list it's slightly different\n \nreply",
      "This looks very refreshing! Congrats for officially launching,I think StackAuth was mentioned here before.What are your plans for supporting \"old school\" frameworks, like django, rails, bootstrap, et al?I know that it makes sense to target greenfield projects first, and I presume most new projects are started with some new cool tech (if looking at npm downloads or some other vanity metric or online questionnaire), but I think there's a long tail of users of other tech that  would potentially provide high quality feedback based on real world experience at various settings.I'm only saying this as it looks like you want to own the whole auth stack, all the layers and all the workflows, from dba to sales so to speak.\n \nreply",
      "Indeed, we launched an MVP in Show HN a few months ago \u2014 dang messaged us and said we should apply to YC, which we did, and now we're launching here again, officially. :DWe will definitely support those frameworks too, eventually. Though, we think that each integration must be done very carefully \u2014 we'd rather have excellent support for one framework and capture its entire audience before going horizontally, than ten mediocre integrations that give our users a headache on setup. We went for Next.js first because a) it's the most popular JS framework for new projects right now, and b) existing Next.js auth is pretty shit.\n \nreply",
      "What is your 2FA story like? This is one of the things Auth0 locks behind expensive plans but is a day zero day need for me.\n \nreply",
      "This is actually exactly what I've been working on right now \u2014 currently doing E2E tests. Should be done by this weekend! (And available on any plan.)\n \nreply",
      "This is really awesome. On almost every project I\u2019ve worked on, I\u2019ve never been able to trust and truly rely on proprietary services and companies to handle my authentication and authorization. I\u2019ve been forced (i.e., it was already decided) to use Auth0 before and I hated every minute of it.Congratulations on launching Stack Auth and providing a better alternative!!!\n \nreply",
      "This exact set of problems is precisely what we're trying to solve. Reading this feels like great validation :)\n \nreply",
      "Absolutely wild how many of these there are now! I feel like I'm reading an announcement like this every few weeks.\n \nreply",
      "I think its a sign of a bubble\n \nreply"
    ],
    "link": "https://github.com/stack-auth/stack",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Open-source Clerk/Auth0 alternative\n      Stack Auth is a managed user authentication solution. It is developer-friendly and fully open-source (licensed under MIT and AGPL).Stack gets you started in just five minutes, after which you'll be ready to use all of its features as you grow your project. Our managed service is completely optional and you can export your user data and self-host, for free, at any time.We support Next.js frontends, along with any backend that can use our REST API. Check out our setup guide to get started.Ask yourself about X:If you answered \"no\" to any of these questions, then that's how Stack Auth is different from X.Refer to our documentation on how to set up Stack Auth in your Next.js project.Have your own? Happy to feature it if you create a PR or message us on Discord.This is for you if you want to contr"
  },
  {
    "title": "I got almost all of my wishes granted with RP2350 (dmitry.gr)",
    "points": 433,
    "submitter": "elipsitz",
    "submit_time": "2024-08-08T13:03:22",
    "num_comments": 196,
    "comments_url": "https://news.ycombinator.com/item?id=41191069",
    "comments": [
      "This is very exciting! For the last several years I have been developing a brushless motor driver based on the RP2040 [1]. The driver module can handle up to 53 volts at 30A continuous, 50A peak. I broke the driver out to a separate module recently which is helpful for our farm robot and is also important for driver testing as we improve the design. However this rev seems pretty solid, so I might build a single board low cost integrated single motor driver with the RP2350 soon! With the RP2040 the loop rate was 8khz which is totally fine for big farm robot drive motors, but some high performance drivers with floating point do 50khz loop rate.My board runs SimpleFOC, and people on the forum have been talking about building a flagship design, but they need support for sensorless control as well as floating point, so if I use the new larger pinout variant of the RP2350 with 8 ADC pins, we can measure three current signals and three bridge voltages to make a nice sensorless driver! It will be a few months before I can have a design ready, but follow the git repo or my twitter profile [2] if you would like to stay up to date![1] https://github.com/tlalexander/rp2040-motor-controller[2] https://twitter.com/TLAlexander\n \nreply",
      "> for our farm robotThat peaked my interest, here's the video for those who want to save a few clicks: https://www.youtube.com/watch?v=fFhTPHlPAAkI absolutely love that they use bike parts for the feet and wheels.\n \nreply",
      "I have given some thought to a two-wheeled electric tractor for dealing with mud -- horse paddocks turn into basically a 1-foot deep slurry after heavy rain and it can be easier to deal with something small that sinks through the mud, down to solid ground than something using large floatation tires. Additional problem with large tires is that they tend to throw mud around, making everyone nearby even more dirty.I haven't actually built anything (been paying attention to Taylor's work, though), but I came to the same conclusion that bike wheels & tires would probably be a good choice. It also doesn't hurt that we have many discarded kids' bikes all over the place.\n \nreply",
      "* piqued\n \nreply",
      "yes, piqued.  English, so weird!  ;-)(Although, interest peaking is possible!)\n \nreply",
      "Ah, it's good to see you continuing your work with types of robots that start with f.\n \nreply",
      "Hah thats right. I did get some parts to try to update the other one you are referring to, but given all my projects it has not made it near the top of the queue yet.\n \nreply",
      "I can't imagine someone using an RP2040 in a real product, but the RP2350 fixes enough of my complaints that I'd be really excited to give it a shot.There's a lot going for the 2040, don't get me wrong. TBMAN is a really cool concept. It overclocks like crazy. PIO is truly innovative, and it's super valuable for boatloads of companies looking to replace their 8051s/whatever with a daughterboard-adapted ARM core.But, for every cool thing about the RP2040, there was a bad thing. DSP-level clock speeds but no FPU, and no hardware integer division. A USB DFU function embedded in boot ROM is flatly undesirable in an MCU with no memory protection. PIO support is extremely limited in third-party SDKs like Zephyr, which puts a low ceiling on its usefulness in large-scale projects.The RP2350 fixes nearly all of my complaints, and that's really exciting.PIO is a really cool concept, but relying on it to implement garden-variety peripherals like CAN or SDMMC immediately puts RP2350 at a disadvantage. The flexibility is very cool, but if I need to get a product up and running, the last thing I want to do is fiddle around with a special-purpose assembly language. My hope is that they'll eventually provide a library of ready-made \"soft peripherals\" for common things like SD/MMC, MII, Bluetooth HCI, etc. That would make integration into Zephyr (and friends) easier, and it would massively expand the potential use cases for the chip.\n \nreply",
      "> My hope is that they'll eventually provide a library of ready-made \"soft peripherals\"Perhaps they could be more ready-made, but there are loads of official PIO examples that are easy to get started with.https://github.com/raspberrypi/pico-examples/tree/master/pio\n \nreply",
      "> A USB DFU function embedded in boot ROM is flatly undesirable in an MCU with no memory protection.Are you saying DFU is not useful without an MMU/MPU? Why would that be?\n \nreply"
    ],
    "link": "https://dmitry.gr/?r=06.%20Thoughts&proj=11.%20RP2350",
    "first_paragraph": "RaspberryPi\u2019s RP2040 was a pretty cool microcontroller, and I\u2019ve used it in a large number of my projects, but while it had a number of very cool features, it also had a number of significant shortfalls for many use cases. These shortfalls sometimes forced me to (with much chagrin) reach for an STM32H7-series chip. This was hard to force myself to do since STM32H7 is a buggy-as-all-hell series of chips and STMicros\u2019s continuing denial of errata demonstrated to their face does not help inspire confidence in their chips. I have been anti-recommending STM\u2019s chips to everyone for a few years now due to STM\u2019s behaviour with regards to the clearly-demonstrated-to-them hardware issues. \nIt is hard to pick the coolest thing about RP2040. It is probably a three-way-tie between the PIO, the well-designed DMA system, and the extreme overclockability of the chip. PIO + DMA is a very powerful combo that i\u2019ve used to create all sorts of things from fancy display drivers to boards pretending to be a "
  },
  {
    "title": "Recent Performance Improvements in Function Calls in CPython (codingconfessions.com)",
    "points": 79,
    "submitter": "rbanffy",
    "submit_time": "2024-08-08T19:23:36",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=41195225",
    "comments": [
      "One of the performance improvements mentioned is \"Remove the usage of the C stack in Python to Python calls\" [0]. Since Python 3.11, a Python-level function call can be evaluated within the bytecode interpreter loop, no longer requiring a C-level function call.Interestingly, Lua 5.4 did the opposite. Its implementation introduced C-level function calls for performance reasons [1] (although this change was reverted in 5.4.2 [2]).[0] https://bugs.python.org/issue45256[1] https://github.com/lua/lua/commit/196c87c9cecfacf978f37de4ec...[1] https://github.com/lua/lua/commit/5d8ce05b3f6fad79e37ed21c10...\n \nreply",
      "I'm always shocked at how much performance we leave on the table in these places. I did a super quick benchmark in python[0] and go [1] (based on necovek's[2] comment) and ran them both locally. The go implementation runs the entire benchmark quicker than the fastest of the python ones.The deviation in go's performance is still large, but far less so than Python's. Making the \"wrong\" choice for a single function call (bearing in mind that this is 10k iterations so we're still in the realm of scales even a moderate app can hit) in python is catastrophic, making the wrong choice for go is a significant slowdown but still 5x faster than doing it in Python. That sort of mental overhead is going to be everywhere, and it certainly doesn't encourage me to want to use python for a project.[0] https://www.online-python.com/9gcpKLe458 \n[1] https://go.dev/play/p/zYKE0oZMFF4?v=goprev  \n[2] https://news.ycombinator.com/item?id=41196915\n \nreply",
      "Cpython deliberately chooses to prioritize simplicity, stability and easy C extensions over raw speed. If you run the benchmark in PyPy (the performance optimized implementation) it\u2019d be 10X faster. You could argue anything that\u2019s performance bottlenecked shouldn\u2019t be implemented in Python in the first place and therefore C compatibility is critical.\n \nreply",
      "Prototype in Python so you can get your ideas on the page then rewrite in something else has been my method for a while now.\n \nreply",
      "I wonder how would simply doing a `return min(heights)` compare to any of the options given?(It sure doesn't demonstrate the improvements between interpreter versions, but that's the classic, Python way of optimizing: let builtins do all the looping)\n \nreply",
      "I was curious myself, so I've ran a quick benchmark:  import random\n  import timeit\n\n  heights = [random.randint(0, 10000)/100 for i in range(10000)]\n\n  def benchmark1(heights):\n      smallest = heights[0]\n      count = len(heights) - 1\n      while count > 0:\n          if heights[count] < smallest:\n              smallest = heights[count]\n          count -= 1\n      return smallest\n\n\n  def benchmark1b(heights):\n      a = 1\n      b = len(heights) - 1\n      min_height = heights[0]\n      while a < b:\n          if heights[a] < min_height:\n              min_height = heights[a]\n          a += 1\n\n      return min_height\n\n\n  def benchmark2(heights):\n      smallest = heights[0]\n      count = len(heights) - 1\n      while count > 0:\n          smallest = min(heights[count], smallest)\n          count -= 1\n      return smallest\n\n  print(timeit.timeit('min(heights)', number=1000, globals={'heights': heights}))\n  print(timeit.timeit('benchmark1(heights)', number=1000, globals={'heights': heights, 'benchmark1': benchmark1}))\n  print(timeit.timeit('benchmark1b(heights)', number=1000, globals={'heights': heights, 'benchmark1b': benchmark1b}))\n  print(timeit.timeit('benchmark2(heights)', number=1000, globals={'heights': heights, 'benchmark2': benchmark2}))\n\nHere are the results in Python 3.11:  0.04471710091456771\n  0.21777329698670655\n  0.22779683792032301\n  0.6679719020612538\n\nSo, using min over a list is ~5x faster, using a single variable and a constant 0 is ~5% faster than using two for boundaries, and using min inside the loop instead of the if check is another 3 times slower: so, the old approach of looking for opportunities to use a builtin instead of looping still likely \"wins\" in the newer interpreters too, but if someone's got 3.14 alpha up, I'd love to see the results.I might install 3.13 to check it out there too.\n \nreply",
      "Now try with a for loop.\n \nreply",
      "So there's only three super-instructions? I wonder if there are plans for more.\n \nreply",
      "They removed most of superinstructions because those prevented other more effective optimizations:https://github.com/python/cpython/issues/105229\n \nreply",
      "I don't trust anyone who uses camelCase to write Python. Or, unnecessary while loops.But, sometimes you can improve built in functions. I found that using a custom (but simple) string-to-int function in golang is a bit quicker than strconv.formatInt() for decimal numbers.So, there's that.Python isn't really supposed to be geared towards performance. I like the language, but only see articles like this as resume fodder.\n \nreply"
    ],
    "link": "https://blog.codingconfessions.com/p/are-function-calls-still-slow-in-python",
    "first_paragraph": ""
  },
  {
    "title": "The ancient art of roasting agave (atlasobscura.com)",
    "points": 48,
    "submitter": "NoRagrets",
    "submit_time": "2024-08-06T06:35:10",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.atlasobscura.com/articles/the-ancient-art-of-roasting-agave",
    "first_paragraph": "\nOur small-group adventures are inspired by our Atlas of the world's most fascinating places, the stories behind them, and the people who bring them to life.\nJust as the Earth is waking up from winter, mature agave send flower stalks toward the sky. It signals the moment when the plant is at its most calorically dense. While many might associate agave with distilling, it is also a seasonal food, one of the earliest fresh foods that was available to the Indigenous people of the Mojave Desert. The Cahuilla of Southern California have been gathering and roasting agave hearts for at least 3,000 years, if not since time immemorial. The hearts are the base of a stalk just above the root ball, a little under a foot long and about four inches wide. Harvesting and cooking agave\u2014\u00e1mul in Cahuilla, or Agave deserti\u2014was both a necessary food tradition and a ritual celebration of the start of spring. Some tribal nations still celebrate this important turning of the seasons, including the Morongo Ban"
  },
  {
    "title": "The UK government has blocked IPs (police.uk)",
    "points": 16,
    "submitter": "hi",
    "submit_time": "2024-08-09T00:09:25",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=41197681",
    "comments": [
      "I blindly clicked this expecting an article about the matter. Was kinda surprised to be given a live demonstration. I can reach nhs.uk fine.Edit: searching Google, there are recent reports that make me feel like this is their response to being too incompetent to process cyber crime reports. I\u2019m genuinely curious if someone unilaterally decided that people not physically in the uk don\u2019t matter.\n \nreply",
      "Doesn't work from Australia either, so apparently the Commonwealth can get fucked. I imagine some middle-ranking civil servants at the FCO will, in a not-too-distant-future, be expressing a measure of dismay to their Home Office counterparts.\n \nreply",
      "It's a surprise, I'm a UK citizen living in a UK dependency and will shortly be returning to Great Britain, and I can't access it.Huh!\n \nreply",
      "I get a HTTP/2 403 from a US IP address. The html payload has Cloudflare Ray all over it.\n \nreply",
      "For those unaware, the UK police are currently promising to go after people posting misinformation and retweeting content (including video of riots) that might incite hate.In response to this the UK police are being trolled on their live chats (largely by Americans I believe). I did originally post a link to these (you can find them on X), but given the content I don't want to risk it.Just today a 55 year old women was arrested for posting inaccurate information to social media,\nhttps://www.cheshire.police.uk/news/cheshire/news/articles/2...I'll note that this is despite her later acknowledging that what she posted wasn't accurate.I'm currently waiting for a knock at my door along with 65 million of Brits who have posted inaccurate information online from time to time.Legal note: if anything I have said here is inaccurate I was unaware of it at the time of posting.\n \nreply",
      "It doesn't seem fair to characterize the response of people to the UK police as \"trolling,\" given they are in fact arresting people \"for posting inaccurate information to social media.\" Please correct this hate-phrasing posthaste.(This comment recognizes the right of entities who identify as trolls to exist and for people who slowly move through waterways to catch fish.)\n \nreply"
    ],
    "link": "https://www.police.uk/",
    "first_paragraph": ""
  },
  {
    "title": "GPUDrive: Data-driven, multi-agent driving simulation at 1M FPS (arxiv.org)",
    "points": 38,
    "submitter": "jonbaer",
    "submit_time": "2024-08-08T20:40:21",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=41195988",
    "comments": [
      "Unless I'm missing something big, this looks like a significant deal for independent developers of self-driving AI software: GPUDrive enables them to run driving simulations with hundreds of AI agents on consumer-grade GPUs at 1M FPS, and it comes with Python bindings, wrappers for Pytorch and Jax, and a friendly standard MIT license. Thank you for sharing this on HN!\n \nreply",
      "Is this just the location data being trained on, or is there image and sensor input data too? It looks like it's just location, which seems like it limits the applicability, but I'm not surEdit: reading a bit more it's somewhere in between. Afaict no raw sensor data etc.,. but different \"parsed\" sensor inputs are supported. I'm not sure whether this is synthetic or not? E.g., is the LIDAR view real LIDAR data from some system or a processed result of what the system thinks LIDAR would be able to see? I can't tell.\n \nreply",
      "https://github.com/Emerge-Lab/gpudrive - the repo\n \nreply"
    ],
    "link": "https://arxiv.org/abs/2408.01584",
    "first_paragraph": "Want to support truly open science and create access to research, regardless of disability? Sign up for the arXiv Accessibility Forum in September and Learn more.Grab your spot at the free arXiv Accessibility ForumHelp | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "How we migrated onto K8s in less than 12 months (figma.com)",
    "points": 126,
    "submitter": "ianvonseggern",
    "submit_time": "2024-08-08T16:07:54",
    "num_comments": 149,
    "comments_url": "https://news.ycombinator.com/item?id=41193045",
    "comments": [
      "Of course there\u2019s no mention of performance loss or gain after migration.I remember when microservices architecture was the latest hot trend that came off the presses. Small and big firms were racing to redesign/reimplement apps. But most forgot they weren\u2019t Google/Netflix/Facebook.I remember end user experience ended up being _worse_ after the implementation. There was a saturation point where a single micro service called by all of the other micro services would cause complete system meltdown. There was also the case of an \u201caccidental\u201d dependency loop (S1 -> S2 -> S3 -> S1). Company didn\u2019t have an easy way to trace logs across different services (way before distributed tracing was a thing). Turns out only a specific condition would trigger the dependency loop (maybe, 1 in 100 requests?).Good times. Also, job safety.\n \nreply",
      "Extremely slow times - from development to production, backend to frontend. Depending on how bad things are, you might catch the microservice guys complaining over microseconds from a team downstream, in front of a FE dev who\u2019s spent his week optimizing the monotonically-increasing JS bundles with code splitting heuristics.Of course, it was because the client app recently went over the 100MB JS budget. Which they decided to make because the last time that happened, customers abroad reported seeing \u201cwhite screens\u201d. International conversion dropped sharply not long after that.It\u2019s pretty silly. So ya, good times indeed. Time to learn k8s.\n \nreply",
      "The best part is when it\u2019s all architected to depend on something that becomes essentially a single point of failure, like Kafka.\n \nreply",
      "Not saying you're wrong, but what is your grand plan ? I've never seen anything perfect.\n \nreply",
      "> There was a saturation point where a single micro service called by all of the other micro services would cause complete system meltdown.Yep - saw that at a company recently - something in AWS was running a little slower than usual which cascaded to cause massive failures. Dozens of people were trying to get to the bottom of it, it mysteriously fixed itself and no one could offer any good explanation.\n \nreply",
      "> There was also the case of an \u201caccidental\u201d dependency loop (S1 -> S2 -> S3 -> S1).The classic dependency loop example that you thought will never encounter again for the rest of your life after OS class\n \nreply",
      "Even if the microservices platform is running at 1% capacity, it's guaranteed to have worse performance than almost any monolith architecture.It's very rare to meet a developer who has even the vaguest notion of what an RPC call costs in terms of microseconds.Fewer still that know about issues such as head-of-line blocking, the effects of load balancer modes such as hash versus round-robin, or the CPU overheads of protocol ser/des.If you have an architecture that involves about 5 hops combined with sidecars, envoys, reverse proxies, and multiple zones you're almost certainly spending 99% to 99.9% of the wall clock time just waiting. The useful compute time can rapidly start to approach zero.This is how you end up with apps like Jira taking a solid minute to show an empty form.\n \nreply",
      "Are you talking about cloud Jira? I use it daily and it's very quick, even search results appear immediately...\n \nreply",
      "Maybe you're being honest, but you're using a throwaway account and I use Cloud Jira every day. It's slow and bloated and drives me crazy.\n \nreply",
      "Have you ever used an old ticketing system like remedy? Ugly as sin, but screens appear instantly.I think Web apps have been around so long now people have forgotten how unresponsive things are vs old 2 tier stuff.\n \nreply"
    ],
    "link": "https://www.figma.com/blog/migrating-onto-kubernetes/",
    "first_paragraph": ""
  },
  {
    "title": "Harmonic Function Theory (axler.net)",
    "points": 28,
    "submitter": "ibobev",
    "submit_time": "2024-08-03T16:15:36",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=41147452",
    "comments": [
      "I don't know about this book, but I highly recommend \"Linear Algebra Done Right\" by the same author. It is a very clear presentation of Linear Algebra. Although I would recommend it for someone who already took a first course on it.\n \nreply",
      "My High School teaches it as the introductory Linear Algebra course and - while it is a bit difficult - it does an excellent job priming students to think about Lin Alg as a higher order discipline.After doing it both ways, I really appreciate introducing vector spaces and linear transformations before even touching matrices.\n \nreply",
      "If any of you LLM optimists want a project to try to justify those silicon fires I'd suggest starting with an automated service that converts all of the troves of academic material written in proprietary mathematical source code (mathematica) into open alternatives (sage, python).See also: https://oeis.org/\n \nreply",
      "Any book that gives a full pdf  preview, I\u2019m at least considering purchasing. I don\u2019t want to take money out of the author\u2019s pocket, but this,> Printing has been disabled from within this pdf file, so although you can view the entire book, you will not be able to print it.Yeah, I don\u2019t believe that. The goal of the author is admirable. I feel like they got fooled somehow, but maybe they do understand and are just hinting that if you\u2019re going to read it, kick them some cash.\n \nreply",
      "I think it's like a wink wink\n \nreply"
    ],
    "link": "https://www.axler.net/HFT.html",
    "first_paragraph": "\nThe second edition of this book about harmonic functions in Euclidean space was published in 2001 by Springer in its Graduate Texts in Mathematics series.  Readers with a background in real and complex analysis at the beginning graduate level will feel comfortable with the material presented here. The authors took unusual care to motivate concepts and simplify proofs.\n\n\n\nThe electronic version of his book is available without charge by clicking on the link below:\n\n\nHarmonic Function Theory (second edition) pdf file\n\n\nPrinting has been disabled from within this pdf file, so although you can view the entire book, you will not be able to print it.\n\n\n\nThe ISBN for the print version of this book is\n978-0-387-95218-5. \n Order the book from Springer.\n\n\nHarmonic Function Theory and Mathematica\nFor readers who wish to explore harmonic function theory on a computer, the Mathematica package available at the link below allows users to manipulate many of the expressions that arise in harmonic func"
  },
  {
    "title": "Charge Robotics (YC S21) is hiring MechEs to build robots that build solar farms (ycombinator.com)",
    "points": 0,
    "submitter": "",
    "submit_time": "2024-08-08T22:13:46",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.ycombinator.com/companies/charge-robotics/jobs/ml4f9l4-senior-mechanical-engineer",
    "first_paragraph": "Robots that build solar farmsCharge Robotics is a Series A startup building robots that build solar farms.Demand for new solar projects is booming (1/5th of all the solar that exists in the US was installed last year!), but today\u2019s construction companies can\u2019t keep up due to limited labor resources.We thought this was insane, so we started working on robots to directly address this bottleneck and speed up the world\u2019s transition to renewables.Charge is a fast-moving company which means constant opportunities for learning and growth. You\u2019ll have a large impact on the direction of our company and our product, which will be reflected in significant equity compensation. And you get to work with \ud83e\udd16 giant robots \ud83e\udd16.If you are excited to work on interesting technical problems with direct climate impact, you\u2019re going to fit right in at Charge Robotics.Read more about Charge in recent press:Charge\u2019s funding:We\u2019re MIT-founded and backed by some of Silicon Valley\u2019s top investors, including Lux, YC ("
  },
  {
    "title": "Ask HN: Should we bring software dev in-house?",
    "points": 243,
    "submitter": "45HCPW",
    "submit_time": "2024-08-05T13:43:40",
    "num_comments": 222,
    "comments_url": "https://news.ycombinator.com/item?id=41161315",
    "comments": [
      "I\u2019m part of a 20-person company that was in a similar situation. We have since built our software in-house, replacing the software we previously struggled with, and it\u2019s worked out even better than I originally hoped because it felt so audacious at the time.One thing I think is key is making sure that whoever is leading this project (the lead developer, not just the person they\u2019re reporting to) needs to know the business cold. They should spend serious time learning the roles of the people who will be using the software so they can design it well to solve the problems those roles face. I lead the development for us, and I attribute most of the software\u2019s success to simply having spent so much time in so many roles in the company. It\u2019s that cross-section of knowledge that makes all the difference.\n \nreply",
      "IME what works best getting new projects kick started is hiring a very small team of senior freelancers, making one of them lead, and letting them loose. I worked on such a team once and it was really excellent. The advantage of this strategy is if the experiment doesn't work out, terminating freelancers is much easier than permanent (I noted you're based in Europe).Contrary to what other people said, I wouldn't try find a CTO straightaway. It's a hard role to hire for, especially at the start. I think you're better off unleashing a small, excellent team of builders then hire management later to help build out the team if the initial effort succeeds.Happy to chat more about my experiences with this strategy, davedx@gmail.com (I'm in Europe too)\n \nreply",
      "This is excellent advice but I would back up a few steps and do a few things before bringing in a freelancer team.Identify a part of this system that can work somewhat in isolation and is non-critical if at all possible.  Then document the requirements for this part thoroughly.  This allows you to:- Have something smaller for your new team to cut their teeth on.- Ensure you have collected all the diffuse domain knowledge for this part in one place in the form of structured requirements.- Forces you to think in terms of what you need and what is acceptable delivery,If need be you can bring in a Senior/Staff level engineer to help you through this discovery and definition phase.In my experience the most common difference between success and failure for a project often comes down to clear requirements and expectations.  Your employees are the domain experts.  You need to collect that expertise and document it in a way that this team can reasonably consume.  This is difficult and time consuming so start now.They will still have questions and get things wrong but this gives you a roadmap.  They are going to be learning your industry while you are learning how to build software.Best of luckEDIT: formatting\n \nreply",
      "> This is difficult and time consuming so start now.A specific difficulty you are likely to face:Your expert employees are busy doing their jobs. Writing requirements means taking attention away from that work - a difficult proposition, especially if they have managers who will ask why their KPIs are slipping.\n \nreply",
      "Strongly agree here. It's hard to find a CTO if you don't have access to any engineering talent that you trust and have vetted. A small, focused project with a team of very senior freelancers both gives you a chance to dip your toes into the idea of running your own in-house software development, and an opportunity to vet individuals who can help you make good hiring decisions down the road.If you're interested in following this strategy, don't hesitate to reach out to poetic.artifice@gmail.com -- I'd be happy to help on both fronts.As for your concern about logistics being not sexy enough - I've found that the best programmers (and the ones you'd want) are more interested in the technical aspects of the problem and business and customer impact, rather than the sexiness of the business domain.\n \nreply",
      "> I've found that the best programmers (and the ones you'd want) are more interested in the technical aspects of the problem and business and customer impact, rather than the sexiness of the business domain.Just want to heartily agree with this point here.  Certainly many of us do get excited about particular business domains from time to time, but in my own experience, I get more excited about technical challenges, and -- critically -- solving real problems for real customers that I can see first- or nearly-first-hand.  The customers for this \"product\" would be internal to OP's org, so the people who end up building this would have front-row seats to how it's being used, what's good, what's bad, etc.\n \nreply",
      "For me red flag is that for OP as a developer I will end up being a cost.Even with all the good words he wrote how company can improve by doing own dev - reality is that company makes money in logistics and as a software dev I would be second class citizen and cost center.That is why I much rather work in company that makes money on software, because here I am money making.\n \nreply",
      "It's possible to treat software close to a first-class citizen even technically as a cost center. Probably the key is to have a lean team that is effective and management trusts, in a business whose profit margin or stability can be greatly enhanced by good software. If you're relatively lean then nobody sane would be looking to cut fat in your team. On top of that, the attitude of management and the culture is really important, and this CEO's attitude is at least a good start.I hear Meta Ads has one of the more toxic environments for SWEs, even though Ads make money.\n \nreply",
      "> It's a hard role to hire for, especially at the start.The approach of \"I'm going to hire someone to build me a team\" only works if you know someone excellent.  It is a very low percentage strategy if hire #1 is from the market.That doesn't mean you can't find excellent people through the market, but you'll have to see them work first, and it might take a few tries.  You won't be able to spin up your own interview funnel and get good results.  Hiring freelancers and seeing who gets it is probably the only way your organization can reliably detect talent (whereas a software company would have an interview funnel as a core competency).  Once you have a freelancer who gets it, you can ask them if they want to join, or if they want to get paid to interview for you.  Talent likes to work with talent, and the freelancer will be better at interviewing than you.  Repeat this process until you have a team.Eventually you may want management, but by the time you need management, you should have a pool of engineers large enough that one of them would be willing and able to manage the rest.  They will be more competent than any manager you try to hire from the market by a mile.\n \nreply",
      "I\u2019ve been on one of these teams and we accomplished pretty amazing stuff in a short time span. Keeping the team lean and senior, ensuring we each had a specialization yet broad enough skills to interact and collaborate well, and providing us with agency to make decisions was a magic recipe.I\u2019d love to do that again. It was by far the most fun I\u2019ve had working on software. These days I do pretty boring work that\u2019s significantly below my capabilities, but it pays the bills and there\u2019s not much else to pick from at the moment.As for if someone hypothetically did choose to build a new solution in this scenario, it would almost certainly make sense to build it in tandem with your existing process. Going totally greenfield and trying to port your business over in 6 months would be misery. I\u2019d look at ways to incrementally build a new system which you adopt gradually, probably starting with replacing the no/low code pieces you\u2019ve already built.Any kind of monolithic approach to replacing an existing system gives me deep, deep tingly creeps due to past disasters.\n \nreply"
    ],
    "link": "item?id=41161315",
    "first_paragraph": ""
  },
  {
    "title": "Mysteries of the Griffin iMate and the Apple Extended Keyboard II (projectgus.com)",
    "points": 65,
    "submitter": "fanf2",
    "submit_time": "2024-08-05T11:42:03",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=41160292",
    "comments": [
      "> \u201dMy local $2 shop didn't have a CR1225 cell, but they did have a CR1220 cell which is the same thickness and voltage.\u201dA CR1220 cell is by definition not the same thickness as a 1225.  CR = Lithium cell, round\n  12 = 12mm diameter\n  25 = 2.5mm height/thickness\n\nWith only 0.5mm difference, a 1220 and 1225 will be interchangeable in many applications. But not always!\n \nreply",
      "Excellent article. Very well presented with just the right level of detail and drama.I had no intention of learning about ADB or crazy Apple USB power-on hacks but here I am having had a great time while doing just that.10/10 would recommend and now this blog is on my reading list.\n \nreply",
      "Fun read. One detail towards the end:> Worse, I'm already kind of dissatisfied with the iMate - it doesn't distinguish left and right for Alt/Shift/etc.IIRC, the keys were indistinguishable at the ADB hardware level. The iMate is probably not at fault.Again IIRC, there was also a hard limit of either one or two regular keys held down at one time, plus any combination of modifier keys. Maybe the limit was one key for pre-ADB and two keys for ADB?\n \nreply",
      "You can distinguish left and right for alt, shift and control, but not for meta.I actually built a (rather hacky) ADB-USB for this exact keyboard, you can see the look up table I used for translating scan codes [0].You only get at most two key events at a time, but you can have more keys held - you\u2019ll just receive the events sequentially. I found that the limit depended on which specific keys were being held, but it was certainly more than two.[0] - https://github.com/benpye/rtos/blob/7971ab6a2f26269223f97b8f...\n \nreply",
      "More than two even after excluding the modifier keys (shift/control/option/command)?\n \nreply",
      "Just checked, in some cases I guess it is two. For example you can only have two of I, O and P - but you can also have say W, A, S, D and F held. I assume it\u2019s a consequence of the key matrix.\n \nreply",
      "Roger, thanks for checking. I remember that limit as what Apple advertised for development, but I never actually tested it myself. Maybe Apple reduced it to two at the driver level for consistency too, who knows.\n \nreply",
      "(2023) Previously: https://news.ycombinator.com/item?id=35772131\n \nreply",
      "If you like those keyboards for the keys - and those Alps are the reason that those keyboards are still desirable today - then you might want to check out Matias. They have a terrific Alps clone. It feels amazing, and honestly the split Matias Pro has the best layout I've ever used.That said, the quality is junk. Each $250 keyboard lasted me one year, no longer. That said, even with the high price and low service life, the Matias Pro is so much more comfortable than any other keyboard that I still consider it a good value for the money.\n \nreply",
      "love my matias ergo pro, but did have to replace two switches (soldered them myself) within the first few months (and it's been fine for years since)the medium term reliability issues are such a shame, the design is so comfy\n \nreply"
    ],
    "link": "https://www.projectgus.com/2023/04/griffin-imate/",
    "first_paragraph": "A vintage keyboard, a mysterious battery, and some questionable 1990s engineering choices...For five years this classic keyboard has sat in my cupboard:This is an Apple Extended Keyboard II, released 1990. This model is praised by keyboard nerds for its \"clicky\" mechanical ALPS switches and sturdy design.This particular keyboard has a hand-written asset sticker from the Federal Department of Administrative Affairs (1987-1993):I think either my Dad or I bought this at an ex-government auction in the late 1990s, together with a Macintosh IIsi that was briefly our dial-up modem router at home. Later, the Macintosh and its keyboard spent around twenty years in my Dad's shed.When my parents downsized five years ago, the Mac and its magnificent Portrait Display were sold. I kept the keyboard.Recently I saw it sitting in the cupboard, once again forgotten. Time to actually use this thing!The keyboard was a bit sad and unsanitary, with a thick layer of 1990s grime. So I gave it a birthday!1Spe"
  },
  {
    "title": "The Miniature Engineering Craftsmanship Museum (craftsmanshipmuseum.com)",
    "points": 20,
    "submitter": "mhb",
    "submit_time": "2024-08-08T21:48:48",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=41196689",
    "comments": [
      "Joe Martin also wrote \"Tabletop Machining\", which while promoting his own line of machine tools (Sherline), is a great introduction to machining in general.https://www.sherline.com/product/5301-tabletop-machining/\n \nreply",
      "Archive.org link - http://web.archive.org/web/20240416173659/https://craftsmans...\n \nreply",
      "This museum is a must-see if you\u2019re visiting SD or south LA.I suggested we visit it, and was very surprised that my family and I spent >2 hours (kids younger than 10). For the kids, they have scavenger hunts which require some attention to complete.It is great.\n \nreply"
    ],
    "link": "https://craftsmanshipmuseum.com/exhibit/",
    "first_paragraph": "Craftsman: John SwartzwelderKnapp Collection #: 207Catalog #: 2008.16.48Contributor: Paul KnappJohn Swartzwelder fabricated several small multi-cylinder aircraft engines from commercially available Cox .049, .020, and .010 cc model airplane engines. Craftsman: John SwartzwelderKnapp Collection #: 206Catalog #: 2008.16.49Contributor: Paul KnappJohn Swartzwelder fabricated several small multi-cylinder aircraft engines from commercially available Cox .049, .020, and .010 cc model airplane engines. Craftsman: John SwartzwelderKnapp Collection #: 205Catalog #: 2008.16.47Contributor: Paul KnappJohn Swartzwelder fabricated several small multi-cylinder aircraft engines from commercially available Cox .049, .020, and .010 cc model airplane engines. Craftsman: John SwartzwelderKnapp Collection #: 204Catalog #: 2008.16.46Contributor: Paul KnappJohn Swartzwelder fabricated several small multi-cylinder aircraft engines from commercially available Cox .049, .020, and .010 cc model airplane engines. "
  },
  {
    "title": "How we found and fixed an eBPF Linux kernel vulnerability (bughunters.google.com)",
    "points": 225,
    "submitter": "xxmarkuski",
    "submit_time": "2024-08-08T10:39:06",
    "num_comments": 42,
    "comments_url": "https://news.ycombinator.com/item?id=41189971",
    "comments": [
      "A reminder that on the platforms eBPF is most commonly used, verifier bugs don't matter much, because unprivileged code isn't allowed to load eBPF programs to begin with. Bugs like this are thus root -> ring0 vulnerabilities. That's not nothing, but for serverside work it's usually worth the tradeoff, especially because eBPF's track record for kernel LPEs is actually pretty strong compared to the kernel as a whole.In the setting eBPF is used today, most of the value of the verifier is that it's hard to accidentally crash your kernel with a bad eBPF program. That is comically untrue about an ordinary LKM.\n \nreply",
      "The PoC uses eBPF maps as their out-of-bounds pointer, but it sounds like it would also be exploitable via non-extended BPF programs loadable via seccomp since it's just improper scalar value range tracking, which doesn't require any privileges on most platforms.And, of course, root -> ring0 is less of a problem with unprivileged user namespaces where you can make yourself \"root\", as we've seen in every eBPF bug PoC since distros started turning that on (and have since turned it off again, mostly)\n \nreply",
      "Verifier bugs matter because resolving them is a prerequisite for secure unprivileged use of eBPF.\n \nreply",
      "Put it this way: verifier bugs matter, but people probably don't do unscheduled fleetwide updates to fix them.\n \nreply",
      "Let's not forget also that we can give CAP_BPF to containers. With things like Cilium on the rise, the attack vector of landing in container environment that has cap_bpf is more and more realistic\n \nreply",
      "I don't believe shared-kernel container systems are real security boundaries to begin with, so, to me, a container running with CAP_BPF isn't much different than any other program a machine owner might opt to run; the point is that you trust the workload, and so the verifier is more of a safety net than a vault door.\n \nreply",
      "> \u201cUno no es ninguno\u201d (One is none)Literally \"One not is none\", aka \"One is not none\".\n \nreply",
      "In Spanish, it's common for double negatives to not actually be double negatives. For example, if you wanted to say \"there's nothing here\", you'd say \"no hay nada aqu\u00ed\", which word-for-word means \"there's not nothing here\".Checking out the Royal Spanish Academy, here's what they say about it:https://www.rae.es/espanol-al-dia/doble-negacion-no-vino-nad...> The so-called \"double negation\" is due to the obligatory negative agreement that must be established in Spanish, and other Romance languages, in certain circumstances (see New Grammar, \u00a7 48.3d), which results in the joint presence in the statement of the adverb no and other elements that also have a negative meaning.> The concurrence of these two \"negations\" does not annul the negative meaning of the statement.\n \nreply",
      "I like to think of it as additive negatives, as opposed to multiplicative negatives.\n \nreply",
      "The one time I tried to use eBPF it wasn't expressive enough for what I needed.Does the limited flexibility it provides really justify the added kernel space complexity? I can understand it for packet filtering but some of the other stuff it's used for like sandboxing just isn't convincing.\n \nreply"
    ],
    "link": "https://bughunters.google.com/blog/6303226026131456/a-deep-dive-into-cve-2023-2163-how-we-found-and-fixed-an-ebpf-linux-kernel-vulnerability",
    "first_paragraph": ""
  },
  {
    "title": "The First Medieval Electronic Instrument Plays Sounds of Lutes and More (openculture.com)",
    "points": 19,
    "submitter": "miles",
    "submit_time": "2024-08-08T20:21:45",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.openculture.com/2024/08/the-worlds-first-medieval-electronic-instrument.html",
    "first_paragraph": "in History, Music, Technology |   \tAugust 8th, 2024  Leave a Comment \nAt this time of the year, the Swedish island of Got\u00adland puts on Medeltidsveck\u00adan, or \u201cMedieval Week,\u201d the coun\u00adtry\u2019s largest his\u00adtor\u00adi\u00adcal fes\u00adti\u00adval. Accord\u00ading to its offi\u00adcial About page, it offers its vis\u00adi\u00adtors the chance to \u201cwatch knights on horse\u00adback, drink some\u00adthing cold, take a craft\u00ading course, prac\u00adtice archery, lis\u00adten to a con\u00adcert or pic\u00adnic along the beach, while wait\u00ading for some ruin show or per\u00adfor\u00admance in some moat!\u201d If next year\u2019s Medeltidsveck\u00adan incor\u00adpo\u00adrates elec\u00adtron\u00adic-music ses\u00adsions as well, it will sure\u00adly be thanks to inspi\u00adra\u00adtion from the EP-1320 sam\u00adpler, or instru\u00admen\u00adtal\u00adis elec\u00adtron\u00adicum, just released by Swedish elec\u00adtron\u00adics com\u00adpa\u00adny Teenage Engi\u00adneer\u00ading.Billed as \u201cthe world\u2019s first medieval elec\u00adtron\u00adic instru\u00adment,\u201d the EP-1320 is mod\u00adeled on Teenage Engi\u00adneer\u00ading\u2019s suc\u00adcess\u00adful EP-133 drum sampler/composer, but pre-loaded with a selec\u00adtion of playable musi\u00adcal instru\u00admen"
  },
  {
    "title": "A Better Light Source for Scanning Color Negative Film (jackw01.github.io)",
    "points": 199,
    "submitter": "eloisius",
    "submit_time": "2024-08-06T04:58:59",
    "num_comments": 67,
    "comments_url": "https://news.ycombinator.com/item?id=41167899",
    "comments": [
      "Amazing write up and research - We need more of this!My feeling is most people who are going to be interested in the slight increase in color accuracy are already drum scanning or using a virtual drum scanner like a Imacon flextight, and the team at Imacon has some crazy color scientists working on that as evidenced by the images it outputs.The quest for the most true colors from C-41 feels like a pointless exercise in ways. When i print RA-4 in the darkroom i am working with a set of color correction filters and spinning dials to mix color on my enlarger head. The resulting print is my interpretation of the negative.Back in the 1-Hour-Photo Minilab days, the tech was doing more or the less the same thing as well, or just hitting 'auto' and the Noritsu or Frontier was making adjustments to each frame before printing it.If i am scanning the negatives with a camera and light source and after inverting, a greenish mask is still present, as like in the first conversion example they give, a few tweaks of a few sliders in photo editing software is enough to correct it.The bigger factor at play here in my mind, is the availability of robust and consistent color developing services. Most indie labs these days are using C41 kits and at best a Jobo machine. There are very few labs even offering Dip and Dunk with a proper replenishment cycle with chemistry from the big players like Fujihunt or Kodak Flexicolor.A a half a degree off temp, or a developer that near its rated capacity is enough to megafuck the resulting negatives.There is an even worse trend of indie chemistry manufactures  offering C41 kits with seemingly innocent replacements, that have huge consequences. For example one indie manufacturer in Canada is shipping there kits without a proper Color Developer (CD4) and instead using p-Phenylenediamine, which guarantees the incorrect formation of dyesSorry if i sound negative and got on a rant, i really do love this sort of research.\n \nreply",
      "I worked in a minilab one summer. The Noritsu printer had, IIRC, a +/- 1,2,3 override for R,G, and B.  So if you saw a head over a big blob of green (someone wearing a red shirt), you'd hit +2 Red to override the printer's attempt to \"balance out\" the colors.We never got any 'interesting' stuff. I suspect people would prefer a bit more anonymity than you would get from a 2-3 person shop where the person who printed your stuff might also be the one ringing you up for it.\n \nreply",
      "My father owned a photoshop that was a one-hour lab for the last decade of its life. I worked for him throughout my teens and have printed many thousands of photos. I've seen interesting stuff. Most of it is pretty boring.\n \nreply",
      "Not only did we get interesting stuff, but we would routinely print a few extra prints for a photo album we kept in the back.\n \nreply",
      "Drum scanning is crazy time consuming and expensive.  I shoot hundreds (sometimes thousands) of film photos per year and 99.999% of my scanning is done with a camera and a backlight.\n \nreply",
      "Cross polarised light (to eliminate specular reflection) and a home made vacuum bed is 99% of the way to a seriously pro scanning tool.A setup like that helped me get through 15k prints in no time with excellent results.  The biggest barrier to success was after churning through the 7x5 and 6x4 shots, things got a lot harder with variable sizes of print.  It really slowed the process down \u2014 and conversely, uniform print sizes made the first 90% of the job almost enjoyable.  I averaged one \u201cscan\u201d every 2s.\n \nreply",
      "I\u2019m not sure the indie, non megalab chemistry kits ought to be so easily dismissed.  I have had fantastic results working with Tetenal Colortec in the past with really not that much more than a shift in the cyan direction.  And this was using a kitchen sink for thermal stability.C41 is such a toilet process anyway \u2014 everything is shades of brown?! \u2014 that I can\u2019t imagine anyway would look for precise color work from it the same way I can\u2019t imagine anyone would look for resolution for 135 stock.\n \nreply",
      "> If i am scanning the negatives with a camera and light source and after inverting, a greenish mask is still present, as like in the first conversion example they give, a few tweaks of a few sliders in photo editing software is enough to correct it.I think this is a major point. I applaud the effort of the post and would (as a Mamiya 7 shooter!) love a whole unit better than the Epson V600, but correcting a color cast in the film scan is trivially easy in an photo editing tools these days. I scan and get tifs and can tweak to whatever. More important are the iris/optics of the scanner itself and how flat the film is inside the bed.\n \nreply",
      "> Back in the 1-Hour-Photo Minilab days, the tech was doing more or the less the same thing as well, or just hitting 'auto' and the Noritsu or Frontier was making adjustments to each frame before printing it.This takes me back. I worked in a one-hour photo place way back in the day, operating a Noritsu. We had a film school in town and students would often come in with their C-41 or their Tri-X and complain about the colors or saturation of their prints. Which was totally fair, because tapping the right CMYK buttons on the machine was more art than science. Ah, memories.\n \nreply",
      "Tri-X is traditional gelatin silver black and white.\n \nreply"
    ],
    "link": "https://jackw01.github.io/scanlight/",
    "first_paragraph": "Narrowband trichromatic (RGB) light sources are superior to broadband (white) light for scanning color negative film; there are very good reasons why all commercial film scanners use RGB. Scanning film with an RGB light source produces high quality results with minimal post-processing, and without any specialized software.From left to right, top to bottom:White light scan captured using 95+ CRI 5000K light source. RGB scan captured using custom 450nm+525nm+665nm light source.Color negative (C-41) film stores an image using cyan, magenta, and yellow dyes. Dyes appear a certain color because they absorb some wavelengths of light; for example, yellow dye mostly absorbs light in the 400-550nm range (which we perceive as violet through green), while allowing other wavelengths (yellow through red) to pass through the film. These dyes are not intended to produce a human-viewable image, but rather to attenuate certain wavelengths of light for making prints on photosensitive paper.White light s"
  },
  {
    "title": "Eyechat (neal.fun)",
    "points": 139,
    "submitter": "seatac76",
    "submit_time": "2024-08-05T23:23:17",
    "num_comments": 63,
    "comments_url": "https://news.ycombinator.com/item?id=41166512",
    "comments": [
      "Careful doing this as there's a risk of falling in love, as per this article:  https://www.nytimes.com/2015/01/11/style/modern-love-to-fall...\n \nreply",
      "https://archive.ph/20240808081029/https://www.nytimes.com/20...\n \nreply",
      "Another hit from Neal. I wonder (and envy, in a good way) where does he gets the time to work and all this wonderful little games.\n \nreply",
      "there was a highly similar project to this on HN a few months ago.his previous project (infinite craft) was one of the first things i ever heard people talk about wrt LLMs.His skill is in execution. I think he finds inspiration from the people around him.\n \nreply",
      "Was this the one you were thinking of? https://eieio.games/nonsense/game-12-stranger-video/\n \nreply",
      "Same. Not just the time, where does he gets the ideas for these games.Plus, his implementation in a few of them is really exhaustive and polished. Are there any \"interns\" helping him?\n \nreply",
      "Doesn't he do this full time?\n \nreply",
      "But there's no attempt to monetize anything...... which is part of why everything seems so polished, they each express an idea without compromise, and when he's done he can just be done.Someone could make a pretty good museum exhibit from his site.\n \nreply",
      "> But there's no attempt to monetize anything...Maybe for the pages you tried, but I see ads on these pages:https://neal.fun/infinite-craft/ (bottom)https://neal.fun/perfect-circle/ (right)https://neal.fun/days-since-incident/ (bottom, near the end, above the \"you may also like\" section)The last one occasionally fails to show ads due to some javascript error (visible in the console).  The same error was also observed on a few other pages with the \"you may also like\" footer, so my guess is that some ads were supposed to be visible on many pages, but were accidentally hidden due to some configuration issue.\n \nreply",
      "Nice try, aint' getting my biometrics this time!\n \nreply"
    ],
    "link": "https://neal.fun/eyechat/",
    "first_paragraph": ""
  },
  {
    "title": "Thoughts on Canonical S-Expressions (2019) (emacsen.net)",
    "points": 31,
    "submitter": "shoggouth",
    "submit_time": "2024-08-07T21:47:52",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=41185937",
    "comments": [
      "> One thought that I keep having while I'm using csexp is to use the type hints to store information such as the data type.This is exactly what edn does. Seems like the author would like edn but doesn\u2019t mention ithttps://github.com/edn-format/edn\n \nreply",
      "I would suggest the author also look at Amazon Ion:* It can be used as schema-less* allows attaching metadata tags to values (which can serve as type hints[1]), and* encodes blobs efficientlyI have not used it, but in the space of flexible formats it appears to have other interesting properties. For instance it can encode a symbol table making symbols really compact in the rest of the message. Symbol tables can be shared out of band.[1] https://amazon-ion.github.io/ion-docs/docs/spec.html#annot\n \nreply",
      "Canonical S-expressions seem remarkably similar to bencoding as used in BitTorrent files. They both use length prefixes written in ASCII digits followed by a colon.    Canonical S-Expression: (9:groceries(4:milk5:bread))\n    Bencoding:              l9:groceriesl4:milk5:breadee\n\nBencoding also manages to specify dictionaries, and yet still have a canonical encoding, by requiring dictionaries be sorted by key (and keys be unique).It doesn't have the option for arbitrary type names, it just has actual types: integer, bytestring, list and dictionary.FTA:> Bencoding offers many of the same benefits of CSEXP, but because it also supports types, is a bit easier to work with.Hmm, well there you go.\n \nreply",
      "We changed the url from https://en.wikipedia.org/wiki/Canonical_S-expressions to a non-Wikipedia article. (Wikipedia submissions are fine but if there's a good third-party source, those are usually preferred because they're less generic.)Readers may want to look at both of course!\n \nreply",
      "Thanks for the plug on this very old article/topic.\n \nreply",
      "Imagine if we had this instead of shitty ass C or asm lol\n \nreply",
      "Canonical S-Expressions aren't meant to replace something like C or assembly, they're for data serialization. It's meant to be compared against things like JSON, XML, ASN.1, or any other serialization format.\n \nreply"
    ],
    "link": "https://write.emacsen.net/thoughts-on-canonical-s-expressions",
    "first_paragraph": "Datashards currently uses Canonical S-Expressions as a data format and  after using it for a few months, I have some thoughts.First things first: If you aren't familiar with the format, let me give  you a quick rundown. Canonical S-Expressions are a bit like regular S-Expressions, with a twist. If you already know Lisp, none of this will  be new, but for the rest of you, there are two items in an S-Expression-  a list and an atom. A list is what it sounds like- a sequence of things.  And an atom is a thing. An S-Expressions looks like:(item1 item2 item3 item4)If you're familiar with Python or Javascript, you can think of that as  the same as:[item1, item2, item3, item4]In Canonical S-Expressions (csexp), every atom is actually a byte  object, and we say the size of the byte object by prepending it with the  number of bytes, followed by a colon:(5:hello5:world)That's a list of two items, 'hello' and 'world'. I'm putting these in  quotes but the values aren't strings, they're bytes. That"
  }
]