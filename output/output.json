[
  {
    "title": "Ask HN: What are you working on (August 2024)?",
    "points": 120,
    "submitter": "david927",
    "submit_time": "2024-08-24T22:00:34",
    "num_comments": 252,
    "comments_url": "https://news.ycombinator.com/item?id=41342017",
    "comments": [
      "A VR game. Still in the concept phase though. It'll be free as it's only a hobby project.For work I'm working on AI implementation. Because the vendor does all the technical goodness I'm kinda bored.I set up a local LLM server too just to feel like I'm actually doing something.\n \nreply",
      "I\u2019m working on a collaborative ebook reading app. The idea is that you can create a reading group, invite people and then share comments and highlights and see each other\u2019s reading progress.It\u2019s something I\u2019ve been wanting for a while, for example to read a book with a group of friends or with a work team, but there\u2019s lots of other possibilities including author reading parties, proofing and education. Got the basics of it working now, need to polish the UI and add the commenting and highlighting features.I\u2019m using Next.js and Supabase, neither of which I\u2019ve used before so it\u2019s been a fun but often frustrating process. Claude has been an amazing assistance, fixing my mistakes and countless type errors.\n \nreply",
      "Ooooo.... Idea! One thing I've always wanted is an \"asynchronous\" book group. Basically, some way to tie the questions and conversation to a page or chapter, and then you can follow along at your own speed. Just passing the idea along since I'll never do anything with it.\n \nreply",
      "Hey man, it is an amazing idea. I have been thinking to build something similar.I am building reading clubs for my custom library - on top of crypto tech, and in the process, I have experimented with several book reader tech. pdf.js, muPDF and some other tools, which one did you settle on?My lib: https://datapond.earth\n \nreply",
      "Cool! Lemme know if you want help with testing.\n \nreply",
      "Making fingerboards. Little skateboards you can do tricks with. I'm always fingerboarding at work when I take a break from programming.It's a ton of fun, especially writing Fusion 360 scripts to do all the parametric modeling of decks and molds. Then 3D printing molds with different parameters, pressing decks with veneer, making art for the decks, packaging, etc. It's an incredibly niche hobby but I've always found fingerboarding and making fingerboards to be infinitely creative.\n \nreply",
      "https://bauble.studio/ is a lisp-based procedural 3D art playground that I hacked together a while ago. It's fun to play with, but it's a very limiting tool: you can do a lot to compose signed distance functions, but there's no way to control the rendering or do anything \"custom\" that the tool doesn't explicitly allow.So lately I've been working on a \"v2\" that exposes a full superset of GLSL, so you can write arbitrary shaders -- even foregoing SDFs altogether -- in a high-level lisp language. The core \"default\" raymarcher is still there, but you can choose to ignore it and implement, say, volumetric rendering, while still using the provided SDF combinators if you want.The new implementation is much more general and flexible, and it now supports things like 2D extrusions, mesh export for 3D printing, user-defined procedural noise functions... anything you can do in Shadertoy, you can now do in Bauble. One upcoming feature that I'm very excited about is custom uniforms and embedding in other webpages -- so you can write a blog post with interactive 3D visualizations, for example.(Also as a fun coincidence: my first cast bronze Bauble arrived today! https://x.com/ianthehenry/status/1827461714524434883)\n \nreply",
      "I\u2019m a tech nerd rare coin & currency dealer!  I took my two hobbies and combined them into a real business and I\u2019m having the time of my life. Just launched a proper retail site here:https://www.rarity7.com/About 50% of my days are spend doing the coin dealer stuff - hunting for inventory, buying collections/doing appraisals, going to coin shows and buying and selling in person, etc.The other 50% I\u2019m writing code and building out the tech stack for this business. I\u2019ve written the whole backend for the retail site myself, which includes my own inventory management system, sync with eBay and other marketplaces, etc.I\u2019ve also built out a research tool which includes an ML price prediction engine engine (which sounds fancy but is really just a tabular regression model).Backend is written in Crystal because I love the language and there\u2019s nobody stopping me from using it :) Frontend is all Svelte and they\u2019re glued together using a mini framework I wrote:https://github.com/noahlh/celestiteI probably have 5 years worth of ideas I still want to build and I wish I could spend even more time building it all, but it\u2019s super fun actually using it in the real live marketplace so I\u2019d never give that up.Happy to chat about this stuff with anyone who\u2019s interested or vaguely interested in numismatics.\n \nreply",
      "Very cool and super clean website! Talk about your infra please!\n \nreply",
      "So let's say I have a few hundred silver dollars. Is this a tool to help me sort them, or does such a tool exist? Like take a picture and it identifies it, looks for common errors, and provides a base price estimate?\n \nreply"
    ],
    "link": "item?id=41342017",
    "first_paragraph": ""
  },
  {
    "title": "Papersway \u2013 a scrollable window management for Sway/i3wm (spwhitton.name)",
    "points": 76,
    "submitter": "smartmic",
    "submit_time": "2024-08-24T21:39:39",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=41341797",
    "comments": [
      "I settled on a very simple approach to window management: workspaces.My sway setup has 20 workspaces on the main monitor and 10 for each other monitor.Most workspaces are dedicated to just a single window, some have more as is their purpose.\n \nreply",
      "Window management has been stagnant so long. I have mixed feelings about the Paper paradigm, but it's heartening to see some work in the space experimenting with the bedrock UX for operating systems, and hope we can eventually move past the floating windows approach on desktop and clumsy swipe-between-apps approach on mobile.\n \nreply",
      "Agreed. All I want is to manage OS windows the same way I manage Vim windows where the content and the container are decoupled. Surprised nobody has made this yet.\n \nreply",
      "Not that you likely want to hear this as a Vim user, but I believe this is how EXWM works. Windows are displayed inside Emacs buffers, which are pretty decoupled from the windows they happen to be in.(But heck, with evil-mode maybe it'd feel pretty familiar?)\n \nreply",
      "No worries - I drove Doom for ~6 months and got fed up with the lag, and with Lisp. I have a wrapper for Yabai that places new windows into a predetermined number of containers and allows me to move them quickly. It works ok.I think Hyperland or i3/Sway could also be scripted to behave this way.\n \nreply",
      "Ratpoison does this if I'm understanding correctly.\n \nreply",
      "Related projects (from niri\u2019s README):PaperWM (Gnome) https://github.com/paperwm/PaperWMkarousel (KDE) https://github.com/peterfajdiga/karouselniri (wayland) https://github.com/YaLTeR/nirihyprscroller (hyprland plugin) https://github.com/dawsers/hyprscrollerhyprslidr (hyprland plugin) https://gitlab.com/magus/hyprslidrPaperWM.spoon (MacOS) https://github.com/mogenson/PaperWM.spoon\n \nreply",
      "Cool project!Feedback: I highly suggest a project rename to something that does not have \"sway\" in the name. Reading the source it seems like it actully has no dependency, API compatibility, or direct interaction with either Sway, i3, or PaperWM?Sway and i3 just happen to be the most well-known tiling WMs of the hour. There are a bunch of other tiling WM which seem like they will work just fine with Papersway. The docs make it seem like it should only be expected to work with Sway and i3. The possibility is high that most users will not look beyond the \"NAME\" section before bouncing if they are not already using either of those two and also already familiar with PaperWM.Less urgently in the docs, it would be nice to be able to get an rough idea about what the project does and the \"pitch\" without having the reader research PaperWM first.Why define it strictly in terms of other projects? Why not be usable with other tiling WMs?\n \nreply",
      "> This is an implementation of PaperWM-like scrollable window management for Sway/i3wm. If you like Sway/i3wm\u2019s commitments to stability, avoiding scope creep etc. but dislike the window management model, papersway might be of interest.Seems relevant.\n \nreply",
      "I do something similar with i3's built in horizontal tabs. A few terminals and a browser look like this:https://i.imgur.com/8vVNYno.pngYou can add or remove columns by moving a window past an edge:https://i.imgur.com/MlPR05b.png\n \nreply"
    ],
    "link": "https://spwhitton.name/tech/code/papersway/",
    "first_paragraph": "This is an implementation of PaperWM-like scrollable window management\nfor Sway/i3wm.\nIf you like Sway/i3wm\u2019s commitments to stability, avoiding scope creep etc.\nbut dislike the window management model, papersway might be of interest.On each workspace, windows are arranged in a row.  By default, two of the\nwindows in the row are visible at a time, and you can move left and right in\nthe row to display other windows.  Opening a new window pushes one of the\nvisible windows off the screen to make room, and closing a window pulls in a\nwindow to fill the space.  You can reorder the windows.There is a display of the row of workspaces in the bar,\ne.g. \u00a0\u2021\u00a0\u2021\u00a0\u2021\u00a0\u2021\u00a0.  Here, the focused workspace has four windows,\nand the middle two are the ones currently visible.  If the third window has\nfocus and we open another window, then the second window will be pushed off to\nmake room, and we will get \u00a0\u2021\u00a0\u2021\u00a0\u2021\u00a0\u2021\u00a0\u2021\u00a0.  The third window\nremains visible, but moves to the left side of the display.There are commands"
  },
  {
    "title": "Defenders think in lists, attackers think in graphs (2015) (github.com/johnlatwc)",
    "points": 46,
    "submitter": "akyuu",
    "submit_time": "2024-08-24T23:12:18",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=41342637",
    "comments": [
      "Whoa.I briefly worked for a \"cyber security\" company and couldn't quite put my dinner on why I ultimately hated the product and felt that the approach that they took -- and a large part of the industry -- was ultimately a sham.I couldn't quite put it into words, but now I get it: we were building the tools to support the most useless of cybersecurity practices -- org-level checklists.\n \nreply",
      "That\u2019s basically the entire cybersecurity industry. Companies buy these tools as a kind of blast door for when things go wrong, to point a finger at. \u201cWe followed all the checklists and our security software didn\u2019t catch it, it\u2019s not our fault.\u201dIf companies cared about security they would hire red teams instead of paying for useless scanners with a <1% signal to noise ratio.\n \nreply",
      "That\u2019s not just cyber security, that\u2019s part of the reason many service/support contracts tend to exist, the whole CYA finger pointing by externalizing the responsibility.Ultimately you end up having to clean up the mess after either way but at least there\u2019s a paper trail of responsibility passing to CYA.\n \nreply",
      "If you can't do checklists though, you can't do anything else.All activities have lists and recurring calendar entries at their heart.You have to regularly show up and do the things.I agree that deeper / better approaches are required during the \"do the things\" steps.\n \nreply",
      "I feel like this goes too deep. Or maybe it hits on the right reason, but the wrong cause. The defender\u2019s job isn\u2019t defense. Cyber security isn\u2019t a sportsball game where there are clear even goals and objectives with alternating positions. It\u2019s a side show, and a distraction from the main business of whatever else the defenders are trying to do. By contrast, an attacker\u2019s entire job is to attack the system. There is no other purpose they are serving, no secondary masters or considerations that need to be used to weaken their attacks.Attackers win for the same reason that Microsoft is better at publishing operating systems than Cisco, because ciscos operating systems are a means to an end. Microsoft\u2019s are the end\n \nreply",
      "Cybersecurity being a sideshow to the main event is a brilliant way to frame the problem.It also explains why companies rarely get punished by the markets for data breaches.\n \nreply",
      "This is just a fancy way of saying defenders have to defend every entrypoint vs attackers who only have to find a single point of weakness.\n \nreply",
      "Sounds like there need to be one or more honeypots in each network for catching intruders in the system. Fake crypto credentials, fake password storage etc.\n \nreply",
      "Discussed (a bit) at the time:Defenders think in lists. Attackers think in graphs - https://news.ycombinator.com/item?id=9442565 - April 2015 (7 comments)\n \nreply",
      "> Philosophy has an affinity with despotism, due to its predilection for Platonic-fascist top-down solutions that always screw up viciously. Schizoanalysis works differently. It avoids Ideas, and sticks to diagrams: networking software for accessing bodies without organs. BWOs, machinic singularities, or tractor fields emerge through the combination of parts with (rather than into) their whole; arranging composite individuations in a virtual/ actual circuit. They are additive rather than substitutive, and immanent rather than transcendent: executed by functional complexes of currents, switches, and loops, caught in scaling reverberations, and fleeing through intercommunications, from the level of the integrated planetary system to that of atomic assemblages. Multiplicities captured by singularities interconnect as desiring-machines; dissipating entropy by dissociating flows, and recycling their machinism as self-assembling chronogenic circuitry.\n \nreply"
    ],
    "link": "https://github.com/JohnLaTwC/Shared/blob/master/Defenders%20think%20in%20lists.%20Attackers%20think%20in%20graphs.%20As%20long%20as%20this%20is%20true%2C%20attackers%20win.md",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          Date: April 26, 2015Author: @JohnLaTwCA lot of network defense goes wrong before any contact with an adversary, starting with how defenders conceive of the battlefield. Most defenders focus on protecting their assets, prioritizing them, and sorting them by workload and business function. Defenders are awash in lists of assets\u2014in system management services, in asset inventory databases, in BCDR spreadsheets. There's one problem with all of this. Defenders don't have a list of assets\u2014they have a graph. Assets are connected to each other by security relationships. Attackers breach a network by landing somewhere in the graph using a technique such as spearphishing and they hack, finding vulnerable systems by navigating the graph. Who creates this graph? You do.The graph in your network is the set of security dependencies that create equivalence "
  },
  {
    "title": "AMD's Radeon 890M: Strix Point's Bigger iGPU (chipsandcheese.com)",
    "points": 34,
    "submitter": "luyu_wu",
    "submit_time": "2024-08-24T21:39:07",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://chipsandcheese.com/2024/08/24/amds-radeon-890m-strix-points-bigger-igpu/",
    "first_paragraph": ""
  },
  {
    "title": "Consistently Making Wrong Decisions Whilst Writing Recreational C (amodernist.com)",
    "points": 68,
    "submitter": "luu",
    "submit_time": "2024-08-24T09:14:34",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=41336762",
    "comments": [
      "It seems like it would be a lot easier to just have students call, e.g., `ta_fork()` rather than `fork()`, and then provide an implementing file to be linked with their program.  Then `ta_fork()` allows the TA to trigger errors, either probabilistically or deterministically (say, by setting environment variables).This approach would also give students insight into testing strategies like mocking, plus it would work on more operating systems.\n \nreply",
      "Perl, at build time, get errno numbers of the system in a similar way[0]: preprocess errno.h with `$CC -E` and recursively scan all files in # markers for macro defines.The configure script even checks the existence of several system headers this way, so if your C compiler don't support # markers in -E output, you get missing includes everywhere.[0] https://github.com/Perl/perl5/blob/blead/ext/Errno/Errno_pm....\n \nreply",
      "Very cool! I've started a similar project around `LD_PRELOAD` a few months ago to profile the time different programs spend on LibC calls. Provoking failures was the next step :)Logging nicely was also an issue. I decided to avoid linking to any other symbols and implemented it with inline Assembly for x86/64 and aarch64: https://github.com/ashvardanian/LibSee/blob/fdae92e71c449c91...\n \nreply",
      "Great article. Although I\u2019ve been a Linux user since the time when stack of Slackware floppies was the prevailing installation media, I just recently learned that libc.so is also an executable.\n \nreply",
      "In what sense do you mean \u201cexecutable?\u201d Does it include a main() and can you launch it? Or do you mean because its code is invoked before your own executable\u2019s code?\n \nreply",
      "It's in the article, it includes a main():    icterid$ /usr/lib/x86_64-linux-gnu/libc.so.6\n    GNU C Library (Debian GLIBC 2.36-9+deb12u7) stable release version 2.36.\n    Copyright (C) 2022 Free Software Foundation, Inc.\n    This is free software; see the source for copying conditions.\n    There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A\n    PARTICULAR PURPOSE.\n    Compiled by GNU CC version 12.2.0.\n    libc ABIs: UNIQUE IFUNC ABSOLUTE\n    Minimum supported kernel: 3.2.0\n    For bug reporting instructions, please see:\n    <http://www.debian.org/Bugs/>.\n \nreply"
    ],
    "link": "https://amodernist.com/texts/fun-c.html",
    "first_paragraph": "Monday, 17 June 2024For the past few days I have had a lot of fun polishing a small\nprogram written in C. I call it \u201cTrip\u201d and the idea is to\nautomatically intercept specific Libc functions and simulate their\nfailure.The background for writing a tool like this, is that I am a TA for a\nsystems-programming course at my university. All assignments are to be\nwritten in C, and we place emphasis on robustness and portability. My\nintention is to make it easier to provoke specific errors that would\nusually only occur when the operating system refuses or is incapable of\nproviding the (finite) resources it virtualises (like memory, time and\naccess to peripheral devices).One example, that is interesting when discussion the example of how a\nUnix/CLI shell is implemented, is what happens when the\nfork(2) system call fails \u2014 and what the appropriate way to\nhandle this error is. Out of habit, a lot of people would just writeBut running into this case is tricky, as fork usually\nonly fails when the num"
  },
  {
    "title": "Generating Mazes (healeycodes.com)",
    "points": 9,
    "submitter": "itsjloh",
    "submit_time": "2024-08-23T11:05:10",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://healeycodes.com/generating-mazes",
    "first_paragraph": "Aug 2024I've been reading about mazes and how to generate them. The type of mazes I'll be talking about are 2D grids of connected cells. They're perfect mazes (i.e. there is exactly one unique path between any two cells aka a uniform spanning tree). I'll refer to the connections between cells as edges. An edge can be created between a cell and any of its neighbors (up, right, left, down). When two cells don't share an edge, there is a wall between them. While generating a maze, if a cell isn't reachable, I'll render it dark.A maze begins as a grid of unconnected cells. All dark. When we start connecting the cells, we create the maze.The above visual was created with the following code.With our new maze, we can start carving edges between the four cells.Finally, we can pick the two points furthest from each other for the start and end positions. In this case, we pick A and D. Later, I'll explain how to find the two furthest points in any maze.To automate our maze creation process, we ca"
  },
  {
    "title": "Le fondateur et PDG de la messagerie Telegram interpell\u00e9 en France (tf1info.fr)",
    "points": 4,
    "submitter": "dotcoma",
    "submit_time": "2024-08-25T00:46:32",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.tf1info.fr/justice-faits-divers/info-tf1-lci-le-fondateur-et-pdg-de-la-messagerie-cryptee-telegram-interpelle-en-france-2316072.html",
    "first_paragraph": "D\u00e9couvrez toutl\u2019univers TF1 INFOSource : JT 20h WEPavel Durov, le fondateur et PDG de la messagerie chiffr\u00e9e Telegram, a \u00e9t\u00e9 interpell\u00e9 vers 20h ce samedi soir \u00e0 sa descente de son jet priv\u00e9 sur le tarmac de l'a\u00e9roport du Bourget. \u00c2g\u00e9 de 39 ans, ce franco-russe \u00e9tait accompagn\u00e9 de son garde du corps et d'une femme.\u00a0L'interpellation a \u00e9t\u00e9 r\u00e9alis\u00e9e par les gendarmes de la GTA (Gendarmerie des transports a\u00e9riens). Fich\u00e9 au FPR (fichier des personnes recherch\u00e9es), Pavel Durov arrivait tout droit d'Azerba\u00efdjan. Il avait au-dessus de la t\u00eate un mandat de recherche fran\u00e7ais \u00e9mis par l'OFMIN de la direction nationale de la police judiciaire fran\u00e7aise, \u00e9mis sur la base d'une enqu\u00eate pr\u00e9liminaire.La Justice consid\u00e8re que l\u2019absence de mod\u00e9ration, de coop\u00e9ration avec les forces de l\u2019ordre et les outils propos\u00e9s par Telegram (num\u00e9ro jetable, cryptomonnaies\u2026) le rend complice de trafic de stup\u00e9fiants, d\u2019infractions p\u00e9docriminels et d\u2019escroquerie.\u00a0Ce mandat de recherche courait si, et seulement si, P"
  },
  {
    "title": "Looming Liability Machines (LLMs) (muratbuffalo.blogspot.com)",
    "points": 14,
    "submitter": "zdw",
    "submit_time": "2024-08-25T00:05:44",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=41343024",
    "comments": [
      "Why should I think that LLMs would be good at the task of analyzing a cloud incident and determining root cause?LLMs are good at predicting the next word in written language. They are generative; they make new text given a prompt.  LLMs do not have base sets of facts about how complex systems work, and do not attempt to reason over a corpus of evidence and facts.  as a result, I would expect that an LLM might concoct an interesting story about why such a failure occurred, and it might even be a convincing story if it happened to weave bits of context, accurately into the storyline. It might even, purely randomly, generate a story that actually correctly diagnosed the root cause of the failure, but that would be coincidental based on the similarity of the prompt to text of similar postmortem discussions that were part of its training set.If you had an extremely detailed postmortem document, then I would expect LLM\u2018s to do a very good job of summarizing such document.But I don\u2019t see why an LLM is an appropriate tool for analyzing failures in complex systems; just as I don\u2019t see a hammer being a very effective tool for tightening bolts.Right now, I am concerned that the relative ease that modern frameworks provide to author LLM based applications, is leading many people to optimistically include LLM technology in attempts to solve problems that it doesn\u2019t seem particularly well suited to solve.\n \nreply",
      "Forget RCA, we should think bigger! Putting LLMs in charge of nuclear weapons could completely eliminate the root causes of accidents worldwide!\n \nreply"
    ],
    "link": "http://muratbuffalo.blogspot.com/2024/08/looming-liability-machines.html",
    "first_paragraph": "\nOn distributed systems broadly defined and other curiosities. The opinions on this site are my own.\nAs part of our zoom reading group (wow, 4.5 years old now), we discussed a paper that uses LLMs for automatic root cause analysis (RCA) for cloud incidents.This was a pretty straightforward application of LLMs. The proposed system employs an LLM to match incoming incidents to incident handlers based on their alert types, predicts the incident's root cause category, and provides an explanatory narrative. The only customization is through prompt-engineering. Since this is a custom domain, I think a more principled and custom-designed \u00a0machine learning system would be more appropriate rather than adopting LLMs.Anyways, the use of LLMs for RCAs spooked me vicerally. I couldn't find the exact words during the paper discussion, but I can articulate this better now. Let me explain.Root cause analysis (RCA) is the process of identifying the underlying causes of a problem/incident, rather than j"
  },
  {
    "title": "Show HN: Visualize database schemas with a single query (github.com/chartdb)",
    "points": 123,
    "submitter": "Jonathanfishner",
    "submit_time": "2024-08-24T16:23:46",
    "num_comments": 32,
    "comments_url": "https://news.ycombinator.com/item?id=41339308",
    "comments": [
      "I rather think using AI to generate scripts for other DBs is a disadvantage. Scripting is a deterministic process, surely? Can you create a common internal representation and write exporters for each supported DBMS from that? Maybe the JSON format you use is a path toward this.I dislike the multiple references to 'Magic' on the site, but I realise that's probably a subjective thing. Maybe I'm fatigued by the AI-in-everything trend.I don't use all the DBMSes you support, but I'm not sure having a single query to run is really much of a selling point. For SQL Server, I'd rather execute a stored procedure with permission checks, and progress feedback, than a big chunk o' SQL. (Again, that may just be a me thing.) If it's an efficiency thing for very large DBs then I think you should emphasise that, and also detail how much faster it is to gather all the info in one fell swoop than if you split up the queries.The Examples link is currently broken on your site, btw. That sounds like a really useful way that people can evaluate your application without having to run a query on their own DB, which they may be reticent to do for testing out a new app.\n \nreply",
      "Thanks for the feedback! We aimed to make database migration easier and found that AI could really enhance this process by handling the complexities of different DB dialects. We'll also explore more deterministic approaches, as you suggested, using a common internal representation. The \"Examples\" link is being fixed\u2014thanks for catching that!\n \nreply",
      "\"PostgresSQL\"? \"SQL Lite\"? Not even getting the names of the supported databases right doesn\u2019t create trust\u2026\n \nreply",
      "On the other hand, the chatbots let enthusiasts like these guys write code. There are millions of them. And each of them, even if they are 1/2 as good as you rustman123, for starters they will learn the right names for things, that\u2019s not challenging, and secondly, they have more time than you have for this problem, which you have zero.The chatbots are the Zero to One for programming.So listen I agree with you. I\u2019m not going to use this. But hundreds of thousands of smart people with time, like these guys, can now author stuff that will get better over time faster than you personally will solve any one particular problem for anyone. So something something, log in your own eye before the thorn in the other.\n \nreply",
      "Is there a tool with similar presentation, but for database records and not schema? So I could \"select * from product where id=5\" and it would show me Product card for \"hammer\" and related card for Brand \"ACME\", and other related records which might be many/one to one/many relationship etc. In other words - data exploration tool with diagramming like in here?I just asked chatGPT for this, but human perspective would be great :)\n \nreply",
      "How is this different from Schema Spy (https://schemaspy.org)?\n \nreply",
      "It supports fewer databases. ;)\n \nreply",
      "A big one for me is that it generates a nice interactive UI with the ability to zoom and reorganise tables rather than a static image. I find with sufficiently complex projects it becomes a real pain to navigate a exported image.\n \nreply",
      "Schema Spy generates graphviz files. You could render those in the browser.\n \nreply",
      "Or use a tool that already does the rendering, with zoom and pan: https://visualdb.com\n \nreply"
    ],
    "link": "https://github.com/chartdb/chartdb",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Free and Open-source database diagrams editor, visualize and design your DB with a single query.\n      \nOpen-source database diagrams editor \nNo installations \u2022 No Database password required. \n\n\nChartDB is a powerful, web-based database diagramming editor.\nInstantly visualize your database schema with a single \"Smart Query.\" Customize diagrams, export SQL scripts, and access all features\u2014no account required. Experience seamless database design here.What it does:Instant Schema Import\nRun a single query to instantly retrieve your database schema as JSON. This makes it incredibly fast to visualize your database schema, whether for documentation, team discussions, or simply understanding your data better.AI-Powered Export for Easy Migration\nOur AI-driven export feature allows you to generate the DDL script in the dialect of your choice."
  },
  {
    "title": "Small Strings in Rust: smolstr vs. smartstring (fasterthanli.me)",
    "points": 131,
    "submitter": "airstrike",
    "submit_time": "2024-08-24T14:58:33",
    "num_comments": 50,
    "comments_url": "https://news.ycombinator.com/item?id=41338776",
    "comments": [
      "On the note of small strings, Compact String[1] was i believed released after this article and has a nifty trick. Where Smol and Smart can fit 22 and 23 bytes, CompactStr can fit 24! Which is kinda nutty imo, that's the full size of the normal String on the stack.. but packed with actual string data.There's a nice explanation on their readme[2]. Love tricks like this.[1]: https://github.com/ParkMyCar/compact_str[2]: https://github.com/ParkMyCar/compact_str?tab=readme-ov-file#...\n \nreply",
      "Hey I'm the author of compact_str, thanks for the kind words!Fun fact, it was this fasterthanlime post that originally inspired me to play around with small strings and led to the creation of compact_str.\n \nreply",
      "I've been wondering something for ages. Where did you get the 24 byte number, and how does it compare in Unicode terms? That is, did you analyze a large corpus and determine that 24 bytes was right for the largest number of strings? And does it come out to, say, 10 Unicode characters? Whenever I think about designing a new language, this very issue pops up.\n \nreply",
      "This style of small string optimization tries to take up the same amount of space on the stack as a \"normal\" heap-allocated string. On 64-bit platforms that is 24 bytes: 8 bytes for the pointer to the heap allocation, 8 bytes for the number of characters/bytes in the string, and 8 bytes for the allocation capacity.It's quite possible to make the small string buffer larger, but that comes at the cost of the large string representation taking up more space than necessary on the stack. IIRC libstdc++ does this, which makes its std::string take up 32 bytes on the stack.\n \nreply",
      "compact_str is a fantastic crate, used by many projects. Do you know the byteyarn crate [0]? This could be nice to add this to the `Similar Crates` section if it makes sense.[0] https://docs.rs/byteyarn/latest/byteyarn/\n \nreply",
      "I do, mcyoung wrote a great blogpost[1] about it! Good idea, I\u2019m AFK at the moment but will add it to the \u2018Similar Crates\u2019 section once I\u2019m back[1] https://mcyoung.xyz/2023/08/09/yarns/\n \nreply",
      "Note for C++ developers: Their trick is only possible because the strings are UTF-8 and not null-terminated. It wouldn't work as a drop-in for standard strings in C++.\n \nreply",
      "std::string isn't null terminated (or at least it isn't guaranteed to be, I don't think it's forbidden for an implementation to do that).That's why the c_str method exists, so you can get a pointer to a null terminated character array\n \nreply",
      "> std::string isn't null terminatedIt is as of C++11. The constness of c_str() threw a wrench into that as soon as C++ got a threading model.\n \nreply",
      "std::string is guaranteed to be null terminated since c++11.std::string::c_str returns the same address as &string[0]\n \nreply"
    ],
    "link": "https://fasterthanli.me/articles/small-strings-in-rust",
    "first_paragraph": "Hey everyone!This article is brought to you by a shameless nerd\nsnipe, courtesy of\nPascal.In case you've blocked Twitter for your own good, this reads:There should be a post explaining and comparing\nsmolstr and smartstring (and\nmaybe others, like smallstr)Well, I took the bait.But, since this is me writing, I get to set the rules:Let's get started - there is much to do.Our little crate is going to go places, so I want to set up a few things\nahead of time - I'm going to use argh to parse arguments.And I'm going to set up subcommands - for now, we'll only have one,\nnamed sample. It's going to go into its own module.Let's try it out:Wonderful. That's all we need for now.Our task for today is going to be: parsing a list of the 1000 largest US\ncities\nfrom a JSON file.If you're following along, download that gist to a file named cities.json\ndirectly into the small/ folder.serde and serde_json\nare going to make this task very easy.The dataset contains a lot of information, including populatio"
  },
  {
    "title": "Birds aren't real \u2013 how to create your own \"bird\" (lampysecurity.com)",
    "points": 16,
    "submitter": "lampysecurity",
    "submit_time": "2024-08-24T21:41:21",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=41341817",
    "comments": [
      "https://en.wikipedia.org/wiki/Birds_Aren%27t_Real\n \nreply",
      "https://pr0gramm.com/top/birds%20aren't%20real%20/6025041\n \nreply",
      "The problem with this is when the idea gets taken over by people who aren't in on the joke. . . Remember how flat earth used to be a gag?\n \nreply",
      "The earth is flat. If you travel fast enough, that is.\n \nreply",
      "I don't think these are a problem in the sense that they'd be something necessary or possible to solve.\n \nreply",
      "mad people don't need reasons to be mad; but rather excuses. If not flat earthism then something else like aliens or smth.\n \nreply",
      "Wait! You're saying the earth isn't flat?! /s ;)\n \nreply",
      "I smile when I see this meme because it makes me think of its possible origin in The Incredibles; specifically, a scene where a parrot turns out to be a surveillance drone on Syndrome's island: https://m.youtube.com/watch?v=g4zKWXdDt2Q\n \nreply"
    ],
    "link": "https://www.lampysecurity.com/post/birds-aren-t-real-how-to-create-your-own-bird",
    "first_paragraph": "HomeAboutBlogSecurity ServicesReporting ServicesMoreDid you know that birds aren't real? They are actually mobile devices that have cameras and microphones to maintain surveillance by the government. You may be asking yourself why they do not just use the cell phones in everyone's pocket; hey, I don't know; I don't make the rules.Now that I have completely destroyed my credibility on LinkedIn, let's get into the real article. When I was at GrrCon, B-Sides Orlando and Defcon, I brought along a friend, a 3D-printed surveillance bird. This guide will show you how to create this Not-NSA bird.3D design files: https://www.printables.com/model/975439-birds-are-not-real-surveillance-birdGithub: https://github.com/Sheepwiz/BirdsArentRealHere is the list of parts that are needed:ESP32  (https://www.amazon.com/HiLetgo-ESP-WROOM-32-Development-Microcontroller-Integrated/dp/B0718T232Z)Microservo (https://www.amazon.com/Micro-Servos-Helicopter-Airplane-Controls/dp/B07MLR1498)Powercell (Buy any, but "
  },
  {
    "title": "You are not dumb, you just lack the prerequisites (lelouch.dev)",
    "points": 202,
    "submitter": "JustinSkycak",
    "submit_time": "2024-08-24T13:57:56",
    "num_comments": 158,
    "comments_url": "https://news.ycombinator.com/item?id=41338354",
    "comments": [
      "Lovely article, though honestly getting those prerequisites also takes a lot of time, effort and either motivation or discipline in ample amounts.As someone who was the \u201csmart kid\u201d growing up, going to the university without good work ethic was pretty eye opening, no longer being able to coast on intuitively getting subjects, but rather either having to put in a bunch of effort while feeling both humbled and dumb at times, or just having to sink academically.Even after getting through that more or less successfully and having an okay career so far, I still definitely struggle with both physical health and mental health, both of which make the process of learning new things harder and slower than just drinking a caffeinated beverage of choice and grokking a subject over a long weekend. Sometimes it feels like trying to push a rock up a muddy slope.And if I\u2019m struggling, as someone who\u2019s not burdened by having children to take care of or even not having the most demanding job or hours to make ends meet, I have no idea how others manage to have a curious mind and succeed the way they do.Admittedly, some people just feel like they\u2019re built different. Even if I didn\u2019t have those things slowing me down as much (working on it), I\u2019d still be nowhere near as cool as people who dive headfirst into low level programming, electrical engineering, write their own simulations, rendering or even whole game engines and such. Maybe I\u2019m just exposed to what some brilliant people can do thanks to the Internet, but some just manage to do amazing things.\n \nreply",
      "> As someone who was the \u201csmart kid\u201d growing up, going to the university without good work ethic was pretty eye opening, no longer being able to coast on intuitively getting subjects, but rather either having to put in a bunch of effort while feeling both humbled and dumb at times, or just having to sink academically.Modern gifted education is very aware of this and is working on fixing that. How effectively, I dunno, probably not very, but at least it\u2019s a hot topic in the field this century.Damn near every person I\u2019ve know who was \u201cgifted\u201d has a similar story, myself included. There\u2019s a lot of lost potential because we badly mis-handle those kids for years and years on end.\n \nreply",
      "As a gifted kid, when you get to university, you are supposed to learn work ethics practically overnight. Until then, between your 6 and 18 years, the school kept telling you that you should slow down and wait until the average kids also get it.That's like failing at a sprinting competition, when your entire training consisted of walking really really slowly.\n \nreply",
      "It's funny, I was good at basketball as a kid. I played 'representative' and went to country championships.Doing that made it clear to you that you might be good in your city but there were still kids who were way, way better than you were likely to be.In contrast, smart kids often don't hit a 'bigger pool' until they get to university.In some ways many places are better at handling kids who are good at a sport than they are kids who are good at school.\n \nreply",
      "> In some ways many places are better at handling kids who are good at a sport than they are kids who are good at school.An abrupt cynical thought: Could it be related to how sports are closer to being a revenue-source?\n \nreply",
      "I thought that I was gifted, but in retrospect, maybe I wasn't. I couldn't play any games well; not the physical ones, not computer games, not card or board games. The other kids would get them fast, while I was always dumbfounded and it took me a long time to grasp the rules. Once, it became popular to play Warcraft in my circle of friends and, try hard as I may, I was the rag they mopped the floor with :-) . But math, physics and computer sciences were another story, because growing up I didn't have anything more interesting to do than reading and solving exercises from old soviet textbooks. So, I think I wasn't gifted, or just gifted by serendipity.\n \nreply",
      "You might have certain targeted deficiencies that make processing those things well difficult.  Like I have a hard time finding things in visual space, so I'm not good at jigsaw puzzles.  I have slower reaction times & processing speeds also which makes me not as good at video games as I should be combined with the visual space deficiencies.  When a shit ton of stuff is happening on screen I lose my place, while others might be able to manage it.But I also show an ability to think and learn deeply and score very well on symbolic and verbal intelligence, I also connect the dots very well and show a lot of skip thinking behavior.  I call my brain a high torque, low RPM engine.Also you might not like anything that is 'competitive', so your brain shuts down in avoidance / disinterest.  Or you might think deeply about everything, so it always takes you a while at first, but once you grasp it you grasp it at a deep level unlike others.\n \nreply",
      "Hmm, this rings some bells for some people I know. Did you learn about those deficiencies and proficiencies in a systematic way or through experience? Any resources you'd suggest for thinking more deeply about these things?\n \nreply",
      "A neuropsychological assesment figured it out for me, helped me connect some dots also.\n \nreply",
      "Symbolic manipulation and intuitive understanding doesn't seem to be very correlated to me. I've met people who are very good at manipulating symbols, but they aren't very good at understanding less formal things like strategy games well, they tend to invent way too rigid rules for themselves and lose since they are bad at adapting.So maybe you are very smart with symbols, but less so with intuitive understanding? There is nothing wrong with that, makes it easier to decide what to work on, focus on your strengths and let others cover for your weaknesses.\n \nreply"
    ],
    "link": "https://lelouch.dev/blog/you-are-probably-not-dumb/",
    "first_paragraph": ""
  },
  {
    "title": "\"YOLO\" is not a valid hash construction (trailofbits.com)",
    "points": 88,
    "submitter": "ssklash",
    "submit_time": "2024-08-21T13:53:09",
    "num_comments": 47,
    "comments_url": "https://news.ycombinator.com/item?id=41310319",
    "comments": [
      "> The issue we run into here is ambiguous encoding.What I have done in the past for this is to encode the messages as UTF-8 and separate them by 0xFF, since that byte value never occurs in UTF-8 encoding [0]. If the messages to be hashed are character strings, you have to decide on some encoding anyway in order to hash them.[0] UTF-8 bytes always contain at least one zero bit: https://en.wikipedia.org/wiki/UTF-8#Encoding. Incidentally, if one wanted to create the UTF-8 equivalent of zero-terminated strings without reserving a character value (like NUL) as the sentinel value, one could use 0xFF for that.\n \nreply",
      "I usually recommend an 8-byte length suffix for each piece instead of a separator.* That way you don't need to make any assumptions about what bytes are legal. Putting the length in suffix position means you can still stream input into your hash state without knowing how long it's going to be in advance, and 2^64 bytes is enough for any practical application. (The maximum input size of SHA-256 is less than this.)I'm less sanguine than the authors about using Protobuf or CBOR for \"canonical\" serialization like this. I think it tends to \"work until it doesn't\". It's not what these formats were designed for, and you have to ask awkward questions like \"is the order of struct fields guaranteed?\" and \"do integers always use the smallest possible representation?\". This is more obvious for JSON, as the post points out, but every common serialization format I'm aware of has problems like this. I think we need a dedicated standard to do a good job of this, but I'm not aware of anything widespread. It's a surprisingly hard problem.* Technically you only need the suffix for each variable-length piece, and you can omit the first one. But it's more complicated if the number of pieces is variable. (If you have two adjacent fixed-length pieces, and then you combine them, does the hash change?) This sort of penny-pinching is interesting to think about in a design that's going to come with a giant set of test vectors, but it's asking for trouble in an application doing something custom. This is another reason I'd like to have a standard here.\n \nreply",
      "It depends on the use case. If, for example, you want to hash a username\u2013password pair, I find    write(toUtf8(username));\n    write((byte) 0xFF);  // never occurs in UTF-8, hence unambiguous separator\n    write(toUtf8(password));\n\nto be most straightforward and parsimonious, and the assumption is maximally local.\n \nreply",
      "I agree that this approach works in the use case you're describing, but there are a couple reasons I wouldn't want to teach it broadly. Mainly, a caveat like \"remember to only use this with UTF-8 strings and not with arbitrary bytes\" is exactly the sort of thing applications routinely get wrong in the wild. Also, focusing on wacky edge cases, do we really know that our UTF-8 strings are valid UTF-8? Maybe we're comfortable staking our security on that in a language like Rust, where invalid strings are literally undefined behavior anyway. But what about in Go for example, where this snippet writes 0xff to stdout with no warnings whatsoever?    func main() {\n        s := string([]byte{0xff})\n        fmt.Println(s)\n    }\n \nreply",
      "> do we really know that our UTF-8 strings are valid UTF-8?I\u2019m explicitly talking about cases where you UTF-8-encode right where you\u2019re hashing.With the length approach, you also have to take care you\u2019re using the correct byte length, for example, and not forget the final length (i.e. it\u2019s a suffix and not just a separator). And for user input like passwords, you\u2019d probably want to NFC-canonicalize before hashing. There\u2019s always things you have to pay attention to.You can encapsulate it in a function that hashes a list of character strings passed as its (typed) argument. Then you have a safe and reusable function.\n \nreply",
      "> I\u2019m explicitly talking about cases where you UTF-8-encode right where you\u2019re hashing.Totally, I get that. I think what you're pointing out is that in a language like Python for example, the scenario I'm trying to describe is meaningless. You can't make an \"invalid string\" in Python (as far as I know, without resorting to FFI), because it checks things like that during string decoding, and it'll just crash.But languages like C/C++/Rust/Go work differently. As these languages are commonly used, the string -> UTF-8 step is actually a no-op, because the assumption is that strings are already UTF-8 in memory. (In C or C++ this is usually in the programmer's head rather than in the types, but it's a common choice.) In these languages it's possible for the result of that no-op \"encoding\" to be invalid, if the input string was invalid somehow. This is a pretty weird edge case and almost certainly a bug that the application needs to fix fix anyway, but if we're noodling about cryptography best practices, it might be nice to limit the \"blast radius\" of a bug like that.\n \nreply",
      "Does that mean the random suffix is effectively a secret? Otherwise an attacker could construct inputs with the separator, achieving the same thing as a simple separator, right?\n \nreply",
      "It's not a random suffix, but a length suffix. So for example putting \"hello\" and \"world!\" together looks like \"hello\" | 5 | \"world!\" | 6. Concretely, you probably represent 5 and 6 as eight little-endian bytes, i.e. `n.to_bytes(8, 'little')` in Python. If you want to stop attackers from guessing/constructing hashes, you need to get a secret key involved, which is what the \"YoloMAC\" section of the post is about.\n \nreply",
      "That actually makes more sense than the usual opposite approach of using over-long encoding for NULs in the data.\n \nreply",
      "This is a good post, but there's a little too much ritual in here about password-based KDFs for my taste. Put all the mainstream KDFs on a dartboard, yes including PBKDF2, and throw a dart. I think you'll be fine. Bcrypt, the most popular password hash, has held up surprisingly well, and scrypt might still be one of the best options.\n \nreply"
    ],
    "link": "https://blog.trailofbits.com/2024/08/21/yolo-is-not-a-valid-hash-construction/",
    "first_paragraph": "By Opal WrightAmong the cryptographic missteps we see at Trail of Bits, \u201clet\u2019s build our own tool out of a hash function\u201d is one of the most common. Clients have a problem along the lines of \u201cwe need to hash a bunch of different values together\u201d or \u201cwe need a MAC\u201d or \u201cwe need a key derivation function for passwords,\u201d and the closest tool at hand is a hash function.These needs are often met with what could be called \u201cYOLO\u201d constructions: ad-hoc functions that \u201csolve\u201d the instant problem in a way that\u2019s obvious, straightforward, and usually wrong.The fact is, these problems are harder than they seem. For us, it can be frustrating to see home-rolled solutions over and over in the products clients bring us because the problems have already been solved. So let\u2019s discuss a few of the YOLO constructions we frequently see, what\u2019s wrong with them, and what to do instead.This is the most common YOLO construction we see at Trail of Bits. Clients often use this when they have complex data structur"
  },
  {
    "title": "Shell.how: Explain Shell Commands (shell.how)",
    "points": 12,
    "submitter": "thunderbong",
    "submit_time": "2024-08-24T08:09:17",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=41336497",
    "comments": [
      "Doesn't sound very useful to me.\nI tried entering something like this:     sed 's/y/i/g' <<<'xxyyzz'\n\nI was not satisfied with the explanation.\n \nreply",
      "Pretty cool, though seems very similar to explainshell.com.Also noticed that it breaks with single quotes, for example, this works:    curl -H \"Some-Header: value\" http://example.com\n\nBut this causes it to error:    curl -H 'Some-Header: value' http://example.com\n \nreply",
      "How\u2019s this different from explainshell?\n \nreply",
      "Wow, fig looks so cool. Shame it's shutting down. I don't see a clear explanation for how Amazon Q replaces it.\n \nreply",
      "fig is dead: https://fig.io/\n \nreply"
    ],
    "link": "https://www.shell.how",
    "first_paragraph": ""
  },
  {
    "title": "Hot Page \u2013 a graphical site builder (hot.page)",
    "points": 308,
    "submitter": "microflash",
    "submit_time": "2024-08-24T11:30:24",
    "num_comments": 81,
    "comments_url": "https://news.ycombinator.com/item?id=41337356",
    "comments": [
      "Hey, I'm Tim and I created Hot Page. This is a long-time side project that I'm now bootstrapping with the help of a couple of friends. The idea is to take the convenience of a drag-and-drop editor (Squarespace, Wix, etc), but never lose the connection to the basic building blocks of web pages: HTML elements, CSS rules, etc. The advent of Web Components makes this a really powerful model.Although I'm of course pleasantly surprised to see this on the front page of HN, I was planning on waiting a few months to post it myself because we are working on some ways to make the editor much more powerful. We have a long roadmap of new features like:* more ways to edit CSS properties visually (without losing the 1:1 connection to the CSS generated)* inline CSS (style attribute) editor for elements that let's you use :hover and media queries* a library of code \"snippets\" that lives in the left panel along side the basic elements* tighter integration with web components* integrating VS code language servers for accurate auto completion everywhere* and a whole lot more.I'm a long time lurker on HN and have long loved the community here. All of your thoughts and feedback are greatly appreciated, especially on our marketing because that is proving to be a real challenge. AMAedit: roadmap\n \nreply",
      "Well since microflash has jumped ahead, let me also jump in.https://fx.hot.page/ has some of the web components on it. While the slinky one is silly fun, the gallery one is very cool. Looks like it's light weight and easy to use.  I was impressed by the annotated source code page where you explain in detail what is going on. While jumping, swirling, multicolored text is your mission, your forte is the documentation you've written.  Nice job.\n \nreply",
      "Wow, this comment just made the last 7 months of long hours totally worth it. You have understood and distilled the essence of this project so accurately. This is my first time launching something like this, so it's just a great feeling to know there are people on the other side of the screen who are getting it.\n \nreply",
      "The combination of web components + a visual app builder is a really compelling space. I'm working on something myself, and I love see more approaches our there!Your style is just obviously incredible. I hope some of that bleeds into your customers sites so there's more fun silly, but also real, things out there on the web.One thing I'm working on in parallel to a visual builder is a web components catalog and custom elements manifest validator. I hope this will help boost the set of quality web components available to tools like this, and that the catalog will be embeddable in them.Good luck!\n \nreply",
      "Sorry for spoiling your planned launch on HN. I stumbled across it by accident (such are serendipities on web), thought it was cool and fat fingered it here. Looking forward to things coming in future.\n \nreply",
      "Thanks for posting it! Obviously it's better to launch early and often but I'm much more of a programmer than a marketer and I was afraid it wouldn't get much traction. I've never been so happy to be wrong heh\n \nreply",
      "Are you able to self host what you generate or export it to other web hosting sites? Or is everything created hosted on your end?\n \nreply",
      "We are working on a feature to let paid users download their sites as a zip file or export them to cloud storage buckets (s3/aws, google cloud, etc). So far though it's meant to be used with our hosting. Free accounts have an advertisement for Hot Page itself but they let you connect your own domain for free.\n \nreply",
      "I'm really digging the Hypercard-nod styling, how did you do this?E.g. Start from zero, or was there a pre-existing CSS kit used as the base?<3\n \nreply",
      "The editor side of the site has no CSS frameworks, just plain React with Typescript. I used a lot of Hypercard as a kid so that might explain something. Also our designer really loves pixel art and totally ran with the web 1.0 mandate that I gave him. Some of the design choices have been a little controversial, but I'm glad you dig it! Hopefully users don't find it distracting so we can stick with it\n \nreply"
    ],
    "link": "https://hot.page/",
    "first_paragraph": "Build your web site on Hot Page and unlock the power of professional\n          tools by using\u00a0real\u00a0HTML, CSS and\n          JavaScript\u2014without the hassle.Hot Page is a drag-and-drop code editor with visual tools that\n              help you build a unique design from scratch.We got tired of \u201cno code\u201d platforms that limit what you can do,\n              so we made a \u201cyes code\u201d platform for everyday people to unlock the\n              power of free-form web development.We can spot a canned web site from 5 miles away \u2014 and it\u2019s not a\n              good look.On Hot Page, there are no templates because everything is a\n                template. View source code for any page, copy and remix it\n              anywhere with total creative freedom. We believe that having a web site\u2014 or eight of them\u2014 should be\n          affordable. Build a simple site and use your own domain for free. Only\n          upgrade when you need more options.And LeaveAt Any Time!Hot Page is as open as the web itself. If you "
  },
  {
    "title": "NASA announces Boeing Starliner crew will return on SpaceX Crew-9 (twitter.com/nasa)",
    "points": 330,
    "submitter": "ripjaygn",
    "submit_time": "2024-08-24T17:14:09",
    "num_comments": 470,
    "comments_url": "https://news.ycombinator.com/item?id=41339667",
    "comments": [
      "Boeing was awarded more money for their vehicle, had years of extra time and two previous demonstration flights. This flight should have been close to flawless given the additional time Boeing had for remediation and testing. Boeing engineers should have understood their systems well enough to convincingly demonstrate the vehicle met NASA's safety requirements. Even after much additional testing during the flight they couldn't make their case. Starliner will probably complete its third uncrewed return intact and people might question if NASA was being overly cautious but perhaps Boeing should have supplied a crewed vehicle with reliable thrusters and avoided this embarrassment.\n \nreply",
      "I wonder if there are books or articles that analyze how and why Boeing declined so fast and so spectacularly. Boeing used to be able to build 747 under budget and ahead of schedule, just like Lockheed could dazzle the world by creating U2 ahead of schedule and under budget with fewer than 200 people (or < 100?) in 15 months with the cost of a few millions. It can't be just the change of geopolitics post Cold War, right? It can't be just that the fixed-margin structure imposed by the government, right? It can't be just the mismanagement or the greed of the leadership, right? It can't just be that Boeing is in the phase of accelerated decline as any old-enough company, right?I'm curious about such questions because on a larger scheme of the things, I really hope that Boeing is not a miniature reflection of the US - an empire in its twilight that got entangled in irreconcilable interests, doomed to watch its own inevitable decline.\n \nreply",
      "Last paragraph is a bit melodramatic. Here's what's publicly known:- Boeing is a 'too big to fail' corporation with a significant source of revenue coming from the government. 40% in 2024\u00b9, billions of dollars of public funds! Just a bit more and it would be mostly state-funded.- They're the 4th biggest American defense contractor, so they're likely seen as vital for securing state power by many in the government.- The government is not a good allocator of funds, free market competition works a lot better for creating the best product.Using Ockham's razor, here's my guess what happened: To get in this position in the first place, there will have been a fair bit of lobbying and \"elbow-greasing\" involved. Boeing eventually found themselves in a position where they got government contracts, no matter what. Leadership got complacent, they didn't really compete anymore because they didn't have to. This was when Musk came in and disrupted the space industry. But at that point, company culture was likely already too far down the drain for quick fixes. The situation would already be much worse for their space division, if not for the fact that they have such good relations with NASA and the government. NASA basically covered for them and played down the seriousness of the issues for weeks. And even now, they're not having SpaceX rescue the astronauts immediately, which would be even more embarrassing for Boeing. Instead they're bringing them back together with the already planned SpaceX Crew-9 flight next year. Boeing keeps getting away with black eyes, there aren't enough consequences despite all the serious issues.\u00b9 https://www.seattletimes.com/business/boeing-aerospace/why-u...\n \nreply",
      "https://www.theatlantic.com/ideas/archive/2024/01/boeing-737... - Gift Link: https://www.theatlantic.com/ideas/archive/2024/01/boeing-737... (good for 14 days from today)https://qz.com/1776080/how-the-mcdonnell-douglas-boeing-merg... - 2020 article on the topicI'm trying to find an article from circa 2007 on the changes at Boeing but I can't find it right now. Read those two and follow their various links and you'll get more information.The long story short version is that post McDonnell Douglas merger, Boeing's management culture was replaced with MD's management culture and things have only declined since.\n \nreply",
      "Thanks! A follow-up question would be why MD's management won, even though it wreaked havoc. Or it was really just the hindsight...\n \nreply",
      "In almost all mergers the management of the worse comapny ends up winning, provided there was no loopsided difference in size. The thing is, since those executive were not good at creating product, they are more likely to be good at politics and hence they end up overtaking management of the new combined company, even if their company was the smaller one.\n \nreply",
      "I\u2019m curious to know of similar examples happening or references that back this up if you or anyone has them.\n \nreply",
      "A good series of examples is in the book \"Barbarians at the Gate\", chronicling the career of F Ross Johnson. His company would get acquired and then he and his folks would outmanoeuvre the acquiring company management.\n \nreply",
      "They should have fired the failing company's management after the merger. It failed due to the fact that they were incompetent.\n \nreply",
      "Finance people prefer finance people. MD's bean counter management were seen as being more responsible and \"hard nosed\" than the Boeing management who were focused on things that \"didn't drive the bottom line\" like the product, culture, etc.\n \nreply"
    ],
    "link": "https://twitter.com/NASA/status/1827393397939634503",
    "first_paragraph": ""
  },
  {
    "title": "Telegram founder Pavel Durov arrested at French airport (theguardian.com)",
    "points": 551,
    "submitter": "NoxiousPluK",
    "submit_time": "2024-08-24T20:46:00",
    "num_comments": 491,
    "comments_url": "https://news.ycombinator.com/item?id=41341353",
    "comments": [
      "Not clear right now if France thinks he was actively complicit with the four horsemen listed, or if just the act of running Telegram makes him complicit in their eyes, or something in the middle, e.g. they asked for help and Telegram turned them down.This will be an interesting case to watch -- I don't believe there are any western nations that want non-locally-backdoored messaging of any sort -- but generally my understanding is that harassment on border entry has been the order of the day, rather than arrests.\n \nreply",
      ">  I don't believe there are any western nations that want non-locally-backdoored messaging of any sortBut that's what exactly they want no? EU is literally implementing a regulation that will allow to  \"circumvent end-to-end encryption to address child sexual abuse material\". I believe it failed to pass recently, but they will try again - and nothing stops countries to implement it independently. I think France is the one who was pushing for that in the first place.\n \nreply",
      "You might be surprised to learn who's doing the pushing:https://www.wired.com/story/europes-moral-crusader-lays-down...https://www.statewatch.org/news/2024/july/police-should-have...\n \nreply",
      "I'm not. The Swedish government is a lot like California's: it's a lot less progressive than it pretends to be.\n \nreply",
      "It's not progressive.  It's protectionist.  The people they're protecting carry a lot of guilt,  and so really like the \"progressive\" label,  it's puts a really nice spin on their particular version of graft and corruption.\n \nreply",
      "https://en.wikipedia.org/wiki/Think_of_the_children\n \nreply",
      "I think you read my clumsy sentence backwards. They absolutely want to get in the middle of messaging, all of them. This is behind many of the calls for E2E interop as well -- all the proposals I'm aware of call for termination somewhere in the middle; you can imagine who'd like to be at that termination middle point. This is why Apple will not \"move over\" to RCS, ever, as a first class transport -- it's fundamentally no more secure than OTA plaintext to existing persistent threat actors.\n \nreply",
      "So just give me an apple messaging client on my non-apple devices. It is insanely, practically criminally, anti-social to lock your messaging system into your devices alone. It's like the Joker is running the business decisions over there. Who cares, let's just watch the world burn.\n \nreply",
      "Asking cause I don\u2019t know - can you provide iOS level iMessage encryption safely on Android when you don\u2019t control the hardware?\n \nreply",
      "In principle you can do the same thing of having keys in a secure enclave that can only be accessed if the bootloader and OS were signed with an appropriate key and not revoked. In practice there would certainly be a larger attack surface because you've now got n different hardware secure enclaves, n different bootloaders, and n different OS implementations, and a flaw in any one of them is potentially all that an attacker needs. Would you allow apple to apply a high standard and e.g. blacklist manufacturers who repeatedly had holes in their implementation? Would you trust Huawei's implementation to not have a hidden backdoor accessible only to the Chinese state and not discoverable otherwise? (Do you trust Apple's implementation to not have the same for the US/Israel?)\n \nreply"
    ],
    "link": "https://www.theguardian.com/media/article/2024/aug/24/telegram-app-founder-pavel-durov-arrested-at-french-airport",
    "first_paragraph": "Billionaire CEO, who was travelling aboard his private jet, was subject of arrest warrant, according to TV reportsPavel Durov, billionaire co-founder and chief executive of the Telegram messaging app, was arrested at the Bourget airport outside Paris on Saturday evening, TF1 TV said, citing an unnamed source.Durov was travelling aboard his private jet, TF1 said on its website, adding he had been targeted by an arrest warrant in France.The 39-year-old is understood to have been travelling from Azerbaijan and was arrested at about 8pm local time (6pm GMT).The Russia-born entrepreneur lives in Dubai, where Telegram is based, and holds dual citizenship of France and the United Arab Emirates.Durov, who is estimated by Forbes to have a fortune of $15.5bn (\u00a312bn), left Russia in 2014 after he refused to comply with demands to shut down opposition communities on his VK social media platform, which he sold.Telegram did not immediately respond to a Reuters request for comment.Russia\u2019s embassy in"
  },
  {
    "title": "Techniques for safe garbage collection in Rust (kyju.org)",
    "points": 50,
    "submitter": "PaulHoule",
    "submit_time": "2024-08-21T15:50:18",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=41311416",
    "comments": [
      "I strongly encourage people interested in this topic to look at the piccolo VM that has been referenced in the post.  It is a fascinating exploration of how a stackless VM can work in Rust.  It uses \"sequences\" (think a bit like a future or promise) to express control flow that yields or calls into other VM methods.  Particularly for a little while now it has the concept of an async_sequence [1] which allows one to abuse (?) async/await where it will create a shadow stack to make this code more readable.I find all of this quite exciting because there are not that many stackless VMs out there that are readable and not a massive usability hazard if you do something wrong.[1]: https://github.com/kyren/piccolo/blob/master/tests/async_seq...\n \nreply",
      "Companion blog post: https://kyju.org/blog/piccolo-a-stackless-lua-interpreter/\n \nreply",
      "Why wouldn't I forget about stackless VMs, \"sequences\" and yielding calls to VM methods and just make a normal native program with a lock free queue?\n \nreply",
      "Quite frankly I don't understand the question.  The assume here is that you have the goal is to have/write a dynamic language you will have to write a VM.  If you write a VM a stackless model is the preferred one for a variety of reasons.  However not having a stack causes pains for native calls that can detour via native objects back into the VM.  That you often have when embedding these languages (which is the goal).So if you have that sort of setup, you will need to find solutions.What piccolo does is quite pretty and definitely beats some other options out there.  A lot of stackless VMs just crash horribly if you do something naughty with re-entrant calls.\n \nreply",
      "If you fit a gc on top of rust, the result is going to be less efficient than when using a modern gc'd language to begin with. So I'm curious what drove them to this.\n \nreply",
      "This is a garbage collector written in Rust, not \"on top of\" Rust.This isn't equivalent to adding garbage collection to the entire language. It's a garbage collected pointer type that can be employed for specific use cases.The article and the repo explain why they developed it: Implementing VMs for garbage collected languages in Rust.\n \nreply",
      "> It's a garbage collected pointer type that can be employed for specific use cases.You mean use cases where performance does not matter?\n \nreply",
      "Out of curiosity, what language do you think the Java, JavaScript, and Python VMs and garbage collectors are written in? If you can understand why the VM is typically written in a systems programming language that doesn't itself have a VM or garbage collector, then you can start to think about why this is useful regardless of whether performance matters or not (& Java and C# are generally considered fairly high performance languages and VM implementations with efficient garbage collectors - the downsides may not matter to your problem domain).\n \nreply",
      "To expand on GPs point, I believe it implies that implementing a GC type for the Rust itself within its constraints (and even LLVM is not perfect, if we skip to LLVM-IR) is bound to be worse than in a language with bespoke precise+tracing+moving garbage collector which always requires deep compiler integration for \"VM\" to have exact information of where gcrefs are located at every safepoint (including registers!), be able to collect objects as soon as they are no longer referenced and not when they go out of scope later, determine whether write (or, worse, read) barriers are required or can be omitted and have the ability to suspend the execution to update the object references upon moving them to a different generation/heap/etc.All GC implementations in Rust that I've seen so far relied on much more heavy handed techniques like having GC<T> to be a double indirection, pushing references to threadlocal queue, have GC pointers to be fat to pass around metadata inline, etc. They have been closer to modified RC with corresponding cost.\n \nreply",
      "Do you think Lua (for example, or any other GC'd language) has valid use cases? If so, it needs an implementation. This blog post shows (part of) one way to do that.\n \nreply"
    ],
    "link": "https://kyju.org/blog/rust-safe-garbage-collection/",
    "first_paragraph": "2024-01-13This will be the first in a series of posts describing different design\ndecisions made writing two Rust crates:The goal of this series of posts is not really to sell anyone on these crates,\nor even the ideas that went into them, but to document why I[1]in the\ncase of gc-arena, we\n made the design decisions I did, and to touch\non a web of issues and potential solutions that might[2]might\n be applicable to the larger Rust ecosystem.This is going to be a pretty long post, and also very technical and pretty\ndry. I'm not even going to cover every technique developed for gc-arena, I'm\njust aiming to cover the ideas that you are guaranteed to encounter when trying\nto use it at all. I may come back and cover things like the details around\nCollect impls and GC \"finalization\" in a future post.This post also doesn't really ask any big questions or present any big, unsolved\nproblems, it is meant mostly as an answer to a set of very common questions,\nasking why exactly gc-arena is the way"
  },
  {
    "title": "Show HN: High school robotics code/CAD/design binder release (chiefdelphi.com)",
    "points": 34,
    "submitter": "Hacktrick",
    "submit_time": "2024-08-24T19:40:18",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=41340874",
    "comments": [
      "If you have an interest in FRC, consider becoming a mentor at a local program in  your area. I've mentored Team 812 in La Jolla California for about 14 years. It's incredibly rewarding.https://www.firstinspires.org/resource-library/volunteer/men...\n \nreply",
      "There\u2019s also the Microsoft Teals program that is focused on CS (I\u2019m a volunteer). Just putting it out there. Not all schools have robotics programs.Btw, congrats to the OP and team. Proud of yalls work!\n \nreply",
      "An additional comment, you can check our blue alliance page (https://www.thebluealliance.com/team/341) to see our in season results.\n \nreply",
      "I'm not even that old but the phrase \"high school robotics\" would've been pure daydreaming back then.Incredibly exciting that you can do this!\n \nreply",
      "I\u2019m in my mid 20s and FRC was probably my favorite high school memory. From the community, to the challenges, to the robots you get to participate in building. It\u2019s such a cool program.Hopefully it gains higher adoption among other public schools, FRC was foundational to my SWE journey\n \nreply",
      "I\u2019m a SWE now, but being on the build team of FIRST taught me an incredible amount and now that I\u2019m a homeowner I\u2019m realizing how applicable it is. I remember cutting 2x4s to build demo field parts and now I\u2019m building walls of my home out of the same material with the same tools I used as a teenager.\n \nreply",
      "I haven\u2019t read through the binder yet but I appreciate you cross posting this to HN because the work many FRC teams do is excellent for a bunch of high schoolers and deserves more visibility.Good luck, next season is just around the corner.\n \nreply",
      "Thanks! I am excited to see what the new game is.\n \nreply",
      "I sincerely hope the next game is rocket league\n \nreply",
      "That would be really cool! There was something kind of like that in 2010, you had to score soccer balls in goals. But there were these obstacles on the field and poles you could climb at the end for extra points. It was called breakaway.\n \nreply"
    ],
    "link": "https://www.chiefdelphi.com/t/team-341-miss-daisy-2024-cad-code-and-design-binder-release/467546",
    "first_paragraph": ""
  },
  {
    "title": "Julius: Open-source reimplementation of Caesar III (github.com/bvschaik)",
    "points": 88,
    "submitter": "klaussilveira",
    "submit_time": "2024-08-24T14:40:21",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=41338661",
    "comments": [
      "Caesar III is an intriguing medium between simulating every citizen (like Tropico) vs large scale statistics (Like SimCity).It does mean that Caesar is very sharp. A slight imperfection inf your design will cause the market-lady to be slightly off timing, leading to cascading failures as houses at the end of her run runs out of furniture or the 2nd food source of somethingOr a a priest takes a wrong turn and collapses the entire economy of a neighborhood.Cleopatra (the sequel of Caesar III) added roadblocks to make this more consistent. But the overall sharpness is there and part of the gameplay.It's not a bad thing for sharp situations to occur in games btw. It does add to the stress of management, but you need some stress to make a management game.\n \nreply",
      "Augustus, referenced in another top level comment, adds roadblocks to Caesar III (among other gameplay changes).\n \nreply",
      "If anyone wishes to see some high level Caesar III play on Julius (notably not Augustus) I can recommend watching DDRJake, he plays custom maps that are still being made to this day!https://www.youtube.com/playlist?list=PLm0MDLKuRDrlbT3Boixpg...I find it incredible how he's able to take some incredibly difficult maps and beat them without any prior knowledge; the skill in planning a city before planting even the first building takes an imagination far beyond mine, and adapting live to sieges and other dangers is even more impressive.\n \nreply",
      "I always had to play these games with a spread sheet open to plan optimal road layouts.\n \nreply",
      "Recommend to check this also (a fork of Julius): https://github.com/Keriew/augustus\n \nreply",
      "> While Julius does not implement any gameplay changes, a fork of Julius named AugustusBut of course\n \nreply",
      "The soundtrack from Caesar 3 has stayed with me for years! Amazing!\n \nreply",
      "Plebs are needed.\n \nreply"
    ],
    "link": "https://github.com/bvschaik/julius",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        An open source re-implementation of Caesar III\n      Download:\n\nAndroid version on Google Play: install release or sign up for test buildsChat: Discord (kindly hosted by GamerZakh)Julius is a fully working open-source version of Caesar 3, with the same logic\nas the original, but with some UI enhancements, that can be played on multiple platforms.Julius will not run without the original Caesar 3 files. You can buy a digital copy from GOG or\nSteam, or you can use an original CD-ROM version.The goal of the project is to have exactly the same game logic as Caesar 3, with the same look\nand feel. This means that the saved games are 100% compatible with Caesar 3, and any gameplay bugs\npresent in the original Caesar 3 game will also be present in Julius.Enhancements for Julius include:Supported platforms:While Julius does not implement any "
  }
]