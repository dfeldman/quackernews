[
  {
    "title": "Show HN: My LLM CLI tool can run tools now, from Python code or plugins (simonwillison.net)",
    "points": 194,
    "submitter": "simonw",
    "submit_time": "2025-05-27T20:53:03 1748379183",
    "num_comments": 75,
    "comments_url": "https://news.ycombinator.com/item?id=44110584",
    "comments": [
      "It's worth noting the streaming markdown renderer I wrote just for this tool: https://github.com/day50-dev/StreamdownMore background:\nhttps://github.com/simonw/llm/issues/12(Also check out https://github.com/day50-dev/llmehelp which features a tmux tool I built on top of Simon's llm. I use it every day. Really. It's become indispensable)\n \nreply",
      "Wow, that library is looking really great!I think I want a plugin hook that lets plugins take over the display of content by the tool.Just filed an issue: https://github.com/simonw/llm/issues/1112Would love to get your feedback on it, I included a few design options but none of them feel 100% right to me yet.\n \nreply",
      "The real solution is semantic routing. You want to be able to define routing rules based on something like mdast (https://github.com/syntax-tree/mdast) . I've built a few hacked versions. This would not only allow for things like terminal rendering but is also a great complement to tool calling. Being able to siphon and multiplex inputs for the future where cerebras like speeds become more common, dynamic configurable stream routing will unlock quite a bit more use cases.We have cost, latency, context window and model routing but I haven't seen anything semantic yet. Someone's going to do it, might as well be me.\n \nreply",
      "Interesting, I will be sure to check into this. I have been using llm and bat with syntax highlighting.\n \nreply",
      "Do you just do| bat --language=markdown --force-colorization ?\n \nreply",
      "A simple bash script provides quick command line access to the tool. Output is paged syntax highlighted markdown.  echo \"$@\" | llm \"Provide a brief response to the question, if the question is related to command provide the command and short description\" | bat --plain -l md\n\nLauch as:  llmquick \"why is the sky blue?\"\n \nreply",
      "I've got a nice tool as wellhttps://github.com/day50-dev/llmehelp/blob/main/Snoopers/wtfI've thought about redoing it because my needs are things like   $ ls | wtf which endpoints do these things talk to, give me a map and line numbers. \n\nWhat this will eventually be is \"ai-grep\" built transparently on https://ast-grep.github.io/Conceptual grep is what I've wanted my while life",
      "| bat -p -l mdsimple and works well.\n \nreply",
      "Ohh I've wanted this so much! Thank you!\n \nreply",
      "Neat! I've written streaming Markdown renderers in a couple of languages for quickly displaying streaming LLM output. Nice to see I'm not the only one! :)\n \nreply"
    ],
    "link": "https://simonwillison.net/2025/May/27/llm-tools/",
    "first_paragraph": "27th May 2025LLM 0.26 is out with the biggest new feature since I started the project: support for tools. You can now use the LLM CLI tool\u2014and Python library\u2014to grant LLMs from OpenAI, Anthropic, Gemini and local models from Ollama with access to any tool that you can represent as a Python function.LLM also now has tool plugins, so you can install a plugin that adds new capabilities to whatever model you are currently using.There\u2019s a lot to cover here, but here are the highlights:Here\u2019s what\u2019s covered in this post:First, install the latest LLM. It may not be on Homebrew yet so I suggest using pip or pipx or uv:If you have it already, upgrade it.Tools work with other vendors, but let\u2019s stick with OpenAI for the moment. Give LLM an OpenAI API keyNow let\u2019s run our first tool:Here\u2019s what I get:llm_version is a very simple demo tool that ships with LLM. Running --tool llm_version exposes that tool to the model\u2014you can specify that multiple times to enable multiple tools, and it has a shorte"
  },
  {
    "title": "A UEFI app that sends LLDP-MED pkt at boot to negotiate PoE+ power before the OS (roderickkhan.com)",
    "points": 34,
    "submitter": "pietrushnic",
    "submit_time": "2025-05-27T23:45:02 1748389502",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://roderickkhan.com/posts/2025-05-16-poe-uefi-solution",
    "first_paragraph": ""
  },
  {
    "title": "Look Ma, No Bubbles Designing a Low-Latency Megakernel for Llama-1B (stanford.edu)",
    "points": 33,
    "submitter": "ljosifov",
    "submit_time": "2025-05-28T00:01:20 1748390480",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44111673",
    "comments": [
      "This is (and was) the dream of Cerebras and I am very glad to see it embraced if even in small part on a GPU. Wild to see how much performance is left on the table for these things, it's crazy to think how much can be done by a few bold individuals when it comes to pushing the SOTA of these kinds of things (not just in kernels either -- in other areas as well!)My experience has been that getting over the daunting factor of feeling afraid of a big wide world with a lot of noise and marketing and simply committing to a problem, learning it, and slowly bootstrapping it over time, tends to yield phenomenal results in the long run for most applications. And, if not, then there's often an applicable one/side field that can be pivoted to for still making immense/incredible progress.The big players may have the advantage of scale, but there is so, so much that can be done still if you look around and keep a good feel for it. <3 :)\n \nreply",
      "On a similar note:I wonder if we'll see OS level services/daemons to try and lower the time to first token as these things get used more. And the interface for application developers will be a simple system prompt.In some ways the idea sounds nice, but there would be a lot of downsides:- Memory eaten up by potentially unused models- Less compute available to software running specialized models for specific tasks\n \nreply",
      "Meta note but this paper is wonderfully written and incredibly approachable \u2014 excellent work by the authors.\n \nreply"
    ],
    "link": "https://hazyresearch.stanford.edu/blog/2025-05-27-no-bubbles",
    "first_paragraph": "May 27, 2025 \u00b7 13 min readBenjamin Spector*, Jordan Juravsky*, Stuart Sul, Owen Dugan, Dylan Lim, Dan Fu, Simran Arora, Chris R\u00e9There are some applications that benefit from running LLMs really, really fast. This low-latency regime encompasses applications like chatbots and human-in-the-loop workflows, where users care a lot about seeing responses come back immediately.Given the importance of these low-latency workloads, we wanted to explore just how fast we can run open-source models on modern GPUs. To really stress-test existing systems, we consider an aggressive low-latency scenario where we generate a single sequence with Llama-3.2-1B. This workload is strongly memory bound \u2013 our performance is dominated by how fast we can load model weights from GPU global memory.It turns out that popular LLM inference engines \u2013 vLLM and SGLang \u2013 are only able to use at most 50% of available GPU bandwidth when running this workload on an H100. The root of the problem, which we'll describe more bel"
  },
  {
    "title": "Square Theory (aaronson.org)",
    "points": 441,
    "submitter": "aaaronson",
    "submit_time": "2025-05-27T15:33:55 1748360035",
    "num_comments": 90,
    "comments_url": "https://news.ycombinator.com/item?id=44107942",
    "comments": [
      "I'm a big fan of killing time on long drives with friendly word games. One of my favorites is a mix between rhyming and square theory. Here's how it works: one player picks two words that rhyme perfectly. Then, for each of those words, they choose a clue word, usually a synonym, but any kind of related word is fair game. They say those two clue words out loud, and the other players have to guess the original rhyming pair.What makes it fun is trying to reverse-engineer the original rhyme from the clues. It's like solving a little logic puzzle. It's easy to come up with new puzzles, but cracking them can be surprisingly tricky. Still, the structure gives just enough to keep it solvable most of the time.1. Somewhat described here https://bestlifeonline.com/jeopardy-rhyme-time-opera-version... It's actually quite difficult to find a description of the category many of us are already familiar with.\n \nreply",
      "Our family plays \"Match Three\" during long drives where one person comes up with three words and whoever correctly answers with a word that can complete or precede any of them becomes \"it\" and chooses the next set.Homophones and proper nouns are considered acceptable.So for example: (Fox, Lone, Crossed)The answer would be: Star  Star Fox - a well known rail shooter originally on the SNES\n\n  Lone Starr - the only man who would dare give a raspberry to Dark Helmet\n\n  Star Crossed - a Shakespearean reference to two people whose relationship is doomed\n \nreply",
      "Love it! Does the person who comes up with three words have the connecting word in mind from the beginning, or no?\n \nreply",
      "Reminds me of https://en.wikipedia.org/wiki/Rhyming_slang: \u201cThe construction of rhyming slang involves replacing a common word with a phrase of two or more words, the last of which rhymes with the original word; then, in almost all cases, omitting, from the end of the phrase, the secondary rhyming word (which is thereafter implied)\u201d\n \nreply",
      "Yep, \u2018that\u2019s pony\u2019 means \u2018that\u2019s crap\u2019. From pony and trap. You omit the actual  word that rhymes.Nice whistle mate! (I like your suit, from whistle and flute).It\u2019s fun to figure them out.\n \nreply",
      "My family calls that game \"pink mink\"!\n \nreply",
      "As far as I know the most common name is \"hink pink\", if anyone wants to look this up (or sometimes \"hinky pinky\"). Here's a 1981 book, https://archive.org/details/hinkpinkbookorwh00burn/ and here's a short description from the 50s, https://archive.org/details/realbookofgames0000unse/page/134... Searching further, apparently Hink Pink was the name of an 18th century pirate ship; I'm not sure if there's a relation to the game.According to this 1941 Life Magazine issue, teenage girls in Atlanta were making up rhyming pairs like this at the time under the name \"stinky pinky\". https://archive.org/details/Life-1941-01-27-Vol-10-No-4/mode... Webster's Dictionary from the 60s has the game listed under that name, https://archive.org/details/webstersthirdnew0000phil_l0b1/mo... and that name also seems to continue to today, e.g. by the radio show Loveline.\n \nreply",
      "I made a daily game version of this\nhttps://rystaf.github.io/hinklepinkle/\n \nreply",
      "Thank you! What a fantastic find. This is exactly the kind of book I would have checked out at the library as a child.It's possible I found this decades ago and the origin of how I learned this game was lost to time :)\n \nreply",
      "We call it Awful Waffle, based on a Board Game called Brain Strain. They had \"Awful Waffle\" as an example.https://boardgamegeek.com/boardgame/8785/brain-strainI made a proof-of-concept daily game: https://awfulwaffle.jonabrams.com/\n \nreply"
    ],
    "link": "https://aaronson.org/blog/square-theory",
    "first_paragraph": "\n\u2190 Back to Blog\nThe story starts in Crosscord, the crossword Discord server. Over 5,000 users strong, the server has emerged as a central hub for the online crossword community, a buzzing, sometimes overwhelming, sometimes delightful town square where total noobs, veteran constructors, and champion solvers alike come together to talk about words that cross each other.We direct our attention toward the #etuiposting channel, Crosscord\u2019s designated space for shitposting (so named because ETUI, a sewing case, is a prototypically shitty piece of crosswordese). There, one afternoon in January 2022, crossword constructor and Crossword Nexus warden Alex Boisvert posted what seemed at the time to be an innocuous, mildly interesting observation:Suffice to say, the Crosscord hivemind had other examples of this. Will Nediger replied a few minutes later with the clever MULTITOOL and MULTIPLIERS (words with completely unrelated meanings, despite the fact that PLIERS are a TOOL). Several messages lat"
  },
  {
    "title": "OpenTPU: Open-Source Reimplementation of Google Tensor Processing Unit (TPU) (github.com/ucsbarchlab)",
    "points": 27,
    "submitter": "walterbell",
    "submit_time": "2025-05-27T23:10:44 1748387444",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=44111452",
    "comments": [
      "Google TPU engineers used open-source Chisel for ASIC design (2018), https://youtube.com/watch?v=x85342Cny8c\"Google Edge TPU devices\", 100 comments (2019), https://news.ycombinator.com/item?id=19130896 & https://news.ycombinator.com/item?id=19313813\"Coral Edge TPU review\", 100 comments (2020), https://news.ycombinator.com/item?id=24808755\"TPU transformation: 10 years of our AI-specialized chips\", 60 comments (2024), https://news.ycombinator.com/item?id=41148532\n \nreply",
      "The site confuses the inference engine in the Edge TPU with the datacenter TPU.  They are two unrelated projects.  Based on the paper they're borrowing from, I think they are trying to go for a much older datacenter inference-only TPU, or only implementing the inference capabilities of the datacenter TPU.\n \nreply",
      "Are there recent papers on datacenter TPU?\n \nreply",
      "Yeowzers that FAQ is filled with watch-outsThe /forks contained https://github.com/csirlin/OpenTGPTPU which had a commit 3 hours ago but it seems they have not yet updated the FAQ for their version. Anyway, the fact it has commits greater than 8 years ago makes it seem like a more reasonable submission\n \nreply"
    ],
    "link": "https://github.com/UCSBarchlab/OpenTPU",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A open source reimplementation of Google's Tensor Processing Unit (TPU).\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.OpenTPU is an open-source re-implementation of Google's Tensor Processing Unit (TPU) by the UC Santa Barbara ArchLab.The TPU is Google's custom ASIC for accelerating the inference phase of neural network computations.Our design is based on details from Google's paper titled \"In-Datacentre Performance Analysis of a Tensor Processing Unit\" (https://arxiv.org/abs/1704.04760), which is to appear at ISCA2017. However, no formal spec, interface, or ISA has yet been published for the TPU.Both PyRTL and numpy can be installed with pip; e.g., pip install pyrtl.To run the simple matrix multiply test in both the hardware and functional simulators:Mak"
  },
  {
    "title": "The Level Design Book (leveldesignbook.com)",
    "points": 40,
    "submitter": "keiferski",
    "submit_time": "2025-05-25T11:03:26 1748171006",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=44086973",
    "comments": [
      "Unfortunately level design has evolved into a complex indistrial process. The earlier days from DOOM to Half-Life was a lot more fun.\n \nreply",
      "No worries, one promising use of LLMs is that we could describe a level someday with all its key features and just have it created fully formed, instantly!Imagine a game mode where you as a player can just describe what you want while the LLM builds something fun and challenging! I think in simpler games such as Doom this should be possible already.\n \nreply"
    ],
    "link": "https://book.leveldesignbook.com",
    "first_paragraph": ""
  },
  {
    "title": "Mustard Watches (1990) (cnrs.fr)",
    "points": 33,
    "submitter": "fscaramuzza",
    "submit_time": "2025-05-27T21:48:54 1748382534",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=44110931",
    "comments": [
      "I\u2019m not sure what the author had in mind when he wrote the paper, but its light-hearted content reveals well how to structure a math paper: (1) state the problem and why the reader should care about it, (2) state how the paper builds on prior work, (3) summarize the main results, and then (4) develop them in theorem-proof style.An economics paper in the same spirit (though of course economics addresses more practical problems than mathematics) shows quite well how to present and develop an economic model [0].0. https://jaypilchoi.com/wp-content/uploads/2021/06/Economic-I... [PDF]\n \nreply",
      "In the classic 2002 feature film \"Undercover Brother\" the titular character had a hot sauce watch which enabled him to eat white people food. James Bond was surely jealous.https://www.imdb.com/title/tt0279493/\n \nreply",
      "French version, as a proper PDF: https://girard.perso.math.cnrs.fr/moutarde.pdf\n \nreply",
      "I'm always surprised how many other mathematicians don't know what I'm talking about when I reference this paper. It should be in the canon of math essays.\n \nreply",
      "What precisely is the complaint the actual author is making wrt temporal logic? Surely it is more than the assertion that there is no such canonical one?I can\u2019t decode French elitism.\n \nreply",
      "I think it\u2019s the lack of mustard. From the first paragraph: \u201cwhat is the point of knowing time if you cannot get mustard?\u201d\n \nreply",
      "Actually a LOL line. A long with his very skilled and meaningful schematic.\n \nreply",
      "highly entertaining read for a mustard fan, but what is this demonic presentation of a pdf\n \nreply",
      "Theorems 1 and 2 are a little weak. For theorem 1, once a mustard watch reaches a sufficiently enormous size, material weaknesses become relevant problems to overcome, and it is not clearly shown that adding a few more grains will in fact allow the watch to still operate. And theorem 2 doesn't discuss how much time is needed to measure the current time. I'm not entirely sure this has been peer reviewed. No notes on theorem 4, though.\n \nreply",
      "material weaknesses would be more of a problem for ketchup watches. dijon mustard is strong enough so you don't require that much for it to become an issue\n \nreply"
    ],
    "link": "https://girard.perso.math.cnrs.fr/mustard/article.html",
    "first_paragraph": "\u00a0MUSTARD WATCHES\n\n  Y.-J. Ringard \n  \n  Reconstituted by Pierre Barth\u00e9l\u00e9my and \u00c9ric Lozingot\n\u00a0"
  },
  {
    "title": "Pyrefly vs. Ty: Comparing Python's two new Rust-based type checkers (edward-li.com)",
    "points": 251,
    "submitter": "edwardjxli",
    "submit_time": "2025-05-27T15:01:55 1748358115",
    "num_comments": 103,
    "comments_url": "https://news.ycombinator.com/item?id=44107655",
    "comments": [
      "[ty developer here]We are happy with the attention that ty is starting to receive, but it's important to call out that both ty and pyrefly are still incomplete! (OP mentions this, but it's worth emphasizing again here.)There are definitely examples cropping up that hit features that are not yet implemented. So when you encounter something where you think what we're doing is daft, please recognize that we might have just not gotten around to that yet. Python is a big language!\n \nreply",
      "Really loving those markdown style tests. I think it's a really fantastic idea that allows the tests to easily act as documentation too.Can you explain how you came up with this solution? Rust docs code-examples inspired?\n \nreply",
      "That concept has been formalized as part of the Python standard library.https://docs.python.org/3/library/doctest.html\n \nreply",
      "Ah very nice! Did not realize this was a part of the standard library!\n \nreply",
      "Elixir has this.https://hexdocs.pm/elixir/main/docs-tests-and-with.html\n \nreply",
      "surfacing revealed types as `@TODO` made me laugh, but thinking about it it's actually a pretty neat touch!\n \nreply",
      "It really helps in our mdtests, because then we can assert that not-implemented things are currently wrong but for the right reasons!\n \nreply",
      "I am very interested in both of these. Coming from the TypeScript world I'm really interested in the different directions (type inference or not, intersections and type narrowing...). As a Python developer I'm wearily resigned to there being 4+ python type checkers out there, all of which behave differently. How very python...Following these projects with great interest though. At the end of the day, a good type checker should let us write code faster and more reliably, which I feel isn't yet the case with the current state of the art of type checking for python.Good luck with the project!\n \nreply",
      "Totally orthogonal question, but since you're deep in that side of Rust dev -The subject of a \"scripting language for Rust\" has come up a few times [1]. A language that fits nicely with the syntax of Rust, can compile right alongside rust, can natively import Rust types, but can compile/run/hot reload quickly.Do you know of anyone in your network working on that?And modulus the syntax piece, do you think Python could ever fill that gap?[1] https://news.ycombinator.com/item?id=44050222\n \nreply",
      "I don't know that I'd want the scripting language to be compiled, for reasons that are outside the scope of this reply. So removing that constraint, the coolest thing I've seen in this space recently is kyren's Piccolo:https://kyju.org/blog/piccolo-a-stackless-lua-interpreter/\n \nreply"
    ],
    "link": "https://blog.edward-li.com/tech/comparing-pyrefly-vs-ty/",
    "first_paragraph": "Note: I like using em-dashes while writing! Don\u2019t worry, this is not written by AI. (context)Earlier this month, two new Rust-based Python type checkers hit the spotlight: pyrefly and ty. Although neither is officially released, they are a welcome change to the Python type checking world, historically dominated by mypy and pylance.While both are open-source and publicly downloadable for quite some time, there have not been any official announcements by Meta nor Astral on their brand new next-generation Python type checkers \u2014 until last week.At PyCon 2025, nestled away in a quiet Room 319 at the Typing Summit, we had our first official sneak peek into both of these tools \u2014 the team behind them, their goals, visions, and ambitions \u2014 and their unique approaches to tackling Python\u2019s typing problems.This blog is a collection of rough notes scribbled during the event, personal conversations with the team, and not-too-thorough experiments that I\u2019ve run myself. As such, some details might be a"
  },
  {
    "title": "How a hawk learned to use traffic signals to hunt more successfully (frontiersin.org)",
    "points": 330,
    "submitter": "layer8",
    "submit_time": "2025-05-27T11:46:30 1748346390",
    "num_comments": 104,
    "comments_url": "https://news.ycombinator.com/item?id=44105965",
    "comments": [
      "I have a similar story. I was taxiing a Cessna 152 at LHBS. It is a big grassy field. On that day there were a large flock of black birds sitting on the grass. I made the usual radio call to announce that I'm leaving the runway and taxiing to the tie-downs when the birds flitted away just between my airplane's nose and my destination. The birds outside of that \"road\" by roughly a  wingspan distance remained on the ground and kept doing whatever they were doing. And the ones who took to the air settled back a short distance away from my future path.Now just to clarify I don't think the birds were listening on my radio call. The way I explained it to myself is that they were observing airplanes coming and going long enough that they learned that if an airplane hesitates at that point the next thing they will do is to turn towards the tie-down area. Or maybe it was just randomness. Or maybe as I was making the radio call I already started turning and they just got scarred away by my engine noise.\n \nreply",
      "I see pigeons and sparrows dodge cars by inches, too. For that matter I do the same myself! Sparrows hawk insects out of the air, and I believe starlings also. Predicting motion would need to be second nature, I think. Like skillfully catching a ball, but much more so and between your teeth...\n \nreply",
      "At the main bus port of my city, you can see heaps and heaps of pigeons casually strolling right in front and even below the buses while they are still driving. There definitely has to be learned behavior for the pigeons to be so completely devoid of fear in that situation.\n \nreply",
      "Well, there is survivor bias there, of course; you don't see the ones that didn't learn to dodge...\n \nreply",
      "You do, you can usually find those on your passenger seat\n \nreply",
      "We call that evolution\n \nreply",
      "Nit pick, but it\u2019s natural selectionThe cars aren\u2019t evolving the birds, but they are selecting the fittest.\n \nreply",
      "Correct. They would be visibly laminated to the pavement or smashed in the gutter. It does happen, but less often than ospreys drop fish in late summer.\n \nreply",
      "But it makes you wonder why they cut it that close. What benefit they get from it. I can think of several plausible reasons but none that is self-evidently true.\n \nreply",
      "Why waste energy giving someone else a free shot at whatever you're finding it worth your time to stand in the street over? It isn't that someone else wants that dropped french fry or whatever. It's that everyone else does.\n \nreply"
    ],
    "link": "https://www.frontiersin.org/news/2025/05/23/street-smarts-hawk-use-traffic-signals-hunting",
    "first_paragraph": "Dr Vladimir Dinets, a research assistant professor at the University of Tennessee, is a zoologist who studies animal behavior, ecology, and conservation. As of 2025, he also teaches mathematics at Rudgers University. He is the author of a recently published Frontiers in Ethology article that documents the impressive adaptation of an avian newcomer to the city. A Cooper\u2019s hawk, a medium-sized raptor native to North America, appears to have learned how to adapt its hunting strategy and strike at a flock of birds precisely when cars at an intersection lined up after traffic lights switched to red, having been alerted by a sound signal that the red phase would last longer than usual. In the following guest editorial, he describes his observations. by Dr Vladimir DinetsMany years ago, I got to spend some time in Ngorongoro Crater, a unique place in Africa where immense herds of animals are being watched by equally immense crowds of 4x4-riding tourists, and traffic jams of all kinds are freq"
  },
  {
    "title": "A privilege escalation from Chrome extensions (2023) (0x44.xyz)",
    "points": 4,
    "submitter": "deryilz",
    "submit_time": "2025-05-28T00:48:45 1748393325",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://0x44.xyz/blog/cve-2023-4369/",
    "first_paragraph": "\n          What's the worst thing a Chrome extension could do to you? Well, it\n          could\n          steal\n            your passwords and cookies, or it could continuously close your tabs. Obviously, these are\n          bad and annoying, but there are limitations to the power of\n          extensions.\n        \n          Can they run exe files? Not really. They can download files at any time, but\n          opening those\n            downloads\n          requires a special permission and a user gesture.\n        \n          Can they change your settings? Generally, no. The general design\n          idea for Chrome extensions is that they shouldn't be able to make\n          permanent changes that persist after they're uninstalled.\n        \n          Alright then, what about editing or reading local files? The rules\n          are a little convoluted when it comes to this:\n        \n          Of course, these limitations have their occasional bypasses. For\n          example, Google awarded $10"
  },
  {
    "title": "Running GPT-2 in WebGL: Rediscovering the Lost Art of GPU Shader Programming (nathan.rs)",
    "points": 95,
    "submitter": "nathan-barry",
    "submit_time": "2025-05-27T18:02:51 1748368971",
    "num_comments": 23,
    "comments_url": "https://news.ycombinator.com/item?id=44109257",
    "comments": [
      "The lost art? Shader programming is very much relevant to this day. Many of the statements in this post are also either incorrect or inaccurate, no need for the sensationalism. And like somebody else has mentioned below, WebGL 2 adds compute shaders. I think the post would be better if it just focused on the limitations of pre-compute APIs and how to run a network there, without the other statements.\n \nreply",
      "> gl.drawArrays(gl.TRIANGLES, 0, 6);Using 2 tris for this isn\u2019t ideal because you will get duplicate  fragment invocations along the horizontal seam where the triangles meet. It is slightly more efficient to use one larger triangle extending outside the viewport, the offscreen parts will be clipped and not generate any additional fragments.[1]: https://wallisc.github.io/rendering/2021/04/18/Fullscreen-Pa...\n \nreply",
      "CUDA is better for sure, but the pure functional nature of the traditional shader is conceptually much simpler and I kind of relish the simplicity. There is no crazy tiling or anything. Just per-pixel parallelism [1]. It won't be as fast as those real, highly-tuned kernels, but it's still nice to see something simple that does something non-trivial. It reminded me of the early \"GPGPU\" days (early 2000s?)[1] https://github.com/nathan-barry/gpt2-webgl/blob/main/src/gpt...\n \nreply",
      "Fun fact: Long before the dawn of the GPU deep learning hype (and even before CUDA was a thing), a bunch of CS nerds from Korea managed to train a neural network on an ATI (now AMD) Radeon 9700 Pro using nothing but shaders [1]. They saw an even bigger performance improvement than Hinton and his group did for AlexNet 8 years later using CUDA.[1] https://ui.adsabs.harvard.edu/abs/2004PatRe..37.1311O/abstra...\n \nreply",
      "Cool, I had not heard about this. Adding this paper to my machine learning teaching bibliography.Even though the start of the deep learning renaissance is typically dated to 2012 with Alexnet, things were in motion week before that. As you point out, GPU training was validated at least 8 years previously. Concurrently, some very prescient researchers like Li were working hard to generate large scale datasets like ImageNet (CVPR 2009, https://www.image-net.org/static_files/papers/imagenet_cvpr0...). And in 2012 it all came together.\n \nreply",
      "Since shaders were designed for, well, shading, this early experiment was more of an academic playground exercise than useful research. But AlexNet still wasn't the first deep neural network trained using CUDA. It had already been done three years earlier: https://dl.acm.org/doi/10.1145/1553374.1553486The ImageNet competition had also been around since 2010. So the ingredients were actually all there before.\n \nreply",
      "> GPGPUI haven't heard this one in a long while\n \nreply",
      "A few weeks back, I implemented GPT-2 using WebGL and shaders. Here's a write-up over how I made it, covering how I used textures and frame buffer objects to store and move around weights and outputs from calculations while using WebGL.\n \nreply",
      "Request -- big bold link to a working web page right at the top? I read the page, I read your github, and I saw instructions to clone and run a node site, and was like \"..nah\" I think github pages will serve this up for free if you like.p.s. Cool!\n \nreply",
      "Yeah, that would have been a good thing to set up. Main thing to add would be loading the weights into the browser\n \nreply"
    ],
    "link": "https://nathan.rs/posts/gpu-shader-programming/",
    "first_paragraph": "May, 24 2025 \u2022\n16 min read \u2022\n2461 wordsPreface: A few weeks back, I implemented GPT-2 using WebGL and shaders (Github Repo) which made the front page of Hacker News (discussion). By popular demand, here is a short write-up over the main ideas behind GPU shader programming (for general-purpose computing).In the early 2000s, NVIDIA introduced programmable shaders with the GeForce 3 (2001) and GeForce FX (2003). Instead of being limited to predetermined transformations and effects of earlier GPUs, developers were now given unprecedented control over the rendering pipeline, enabling much more sophisticated visual effects. These programmable shaders laid the foundation for modern GPU computing.Researchers soon discovered that certain computations (like linear algebra involving matrices and vectors) could be accelerated by casting them as graphics operations on the GPU.\nHowever, using shader languages like OpenGL\u2019s GLSL for no-graphics tasks was cumbersome. By the mid-2000s, the need for a m"
  },
  {
    "title": "Space Selfie (crunchlabs.com)",
    "points": 79,
    "submitter": "rossdavidh",
    "submit_time": "2025-05-25T01:36:28 1748136988",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=44084892",
    "comments": [
      "My kids have loved watching Mark Robers videos, have the subscriptions (one of both the backpack and crunchpack), and we uploaded our video for SatGus.If you have young kids (6-15) these are perfect educational tools. Highly recommend. Only downside is some of them are a bit \u201cmischievous\u201d. For example a \u201cBobbie trap\u201d that launches balls at whomever tripped the wire. Good times\u2026\n \nreply",
      "We just started watching Mark Rober videos. I started with some random old videos and they were great. Nice educational content in the middle of an entertaining video.Then the algorithm handed us some more recent videos and they felt like a pivot to Nickelodeon style content: We watched Mark Rober run through a green slime obstacle course with a lot of loud noises and action, but basically zero educational value.So as someone new to this: Any tips? Should I be sticking to old videos only if I want some educational value? My kids only watch with me as an activity we do together, so I\u2019m always looking for good videos that can keep us away from the content farm stuff.\n \nreply",
      "He's gone all in on the Crunch Labs brand, which is kind of built around the younger audience. This isn't a bad thing, but it does mean that older edutainment enjoyers kind of age out of his stuff. Not to say there's no value in them, but there will be more of an entertainment focus than prior edutainment focused videos.I recommend checking out Stuff Made Here; great build videos of engineering principles in an entertaining fashion to show building cool complicated stuff.Xyla Foxlin, a wonderful maker, also posts educational videos between her projects, like an in-depth look at how plane wings work.\n \nreply",
      "The first squirrel video might be the best youtube video ever. Surprising, entertaining, informative, accessible. I'd start there!\n \nreply",
      "Same! Mark Rober is what changed my mind about YouTube for kids. He's a wildly popular creator that's even shilling a product and yet... I'm ok with all of it? He seems to very legitimately care about sharing getting kids excited about STEM, and if he gets rich doing it: great! The product is less offensive than the sugary cereal I watched commercials for while watching Saturday morning cartoons as a kid. Definitely one of the few YouTube channels I let my kids watch unattended.\n \nreply",
      "There's shilling a product because someone handed you a bag, and then there's building a product you believe in. You feel okay with it because it's clearly the latter versus another NordVPN commercial. Even if the product ends up failing (and I am under no predilection to believe this will) he has presented nothing but honest enthusiasm towards his goal that you can't help but root for it.\n \nreply",
      "Website has a link to a YT video that explains it, but basically free service to upload your pic, get a selfie taken on satellite in space, sent back to you.  Free.\n \nreply",
      "SatGus launch party (great watch) \nhttps://space.crunchlabs.com/livestream\nhttps://www.youtube.com/live/6Zqe3SJVjUM?si=CB7_3YCQTx6GqZ1x (direct)*SatGus is named after Phat Gus from Mark Robert's squirrel obstacle course.\n \nreply",
      "Shoot it\u2019s getting a 504 Gateway timeout. Must be trending!\n \nreply",
      "Is there a limit to what you can upload? I figure they're not just going to let people upload a million pictures, but can I do one per kid?\n \nreply"
    ],
    "link": "https://space.crunchlabs.com/",
    "first_paragraph": "Did you see SAT GUS's launch?Here's the Deal: We're Going to Space. And Now it's Free for Everyone! #SPACESELFIESince his early days at NASA, Mark Rober has been blasting stuff into space, and now he wants to do it with one of your photos!  So, he got a satellite called SAT GUS* and it\u2019s being launched into orbit to take the most epic selfies in the universe.To prove to you that we didn\u2019t fake the landing of your Space Selfie, we'll take a picture of the phone displaying your image with Earth in the background. Boom - you get a selfie with the Earth. A Space Selfie!*Why SAT GUS? Well SAT is short for satellite and you may have noticed it rhymes with Phat. Which just happens to be the name of the world\u2019s greatest bushy-tailed athlete and four-legged physicist, Crunchlab\u2019s squirrel mascot: Phat Gus.  And that\u2019s why they say you can\u2019t spell \u201cingenious\u201d without \u201cGUS.\u201d So yeah, our satellite is a she and her name is GUS. And she\u2019s very happy about it.Join our community of builders, hackers,"
  },
  {
    "title": "There Is No Diffie-Hellman but Elliptic Curve Diffie-Hellman (keymaterial.net)",
    "points": 32,
    "submitter": "todsacerdoti",
    "submit_time": "2025-05-24T20:53:11 1748119991",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=44083753",
    "comments": [
      "Not a cryptographer, but my expectation of the admitted-to-be-clickbait title would be to see a proof or some claim of that sort that characterizes traditional finite-field integer DH as a special case of ECDH. However, --and please correct me if I am wrong as I am not a cryptographer or a math wiz anymore-- my understanding is you could characterize both as instantiations of an abstract protocol on a cyclic group with some properties, so in that sense, they are siblings derived from a more general idea, not derivable from each other.\n \nreply",
      "I think the article's point is that \"groups\" per se is too vague, and you need \"group with prescribed computer representation (data structure)\". And the Algebraic Groups come with a prescribed computer representation (data structure): The data structure is tuples over finite fields, and the the group operations are polynomials, which are clearly also algorithms. Done.\n \nreply",
      "So, addition under a particular elliptic curve is isomorphic to multiplication under integer modulo groups...But for some reason the author keeps referring to the underlying group as \"Diffie-Hellman\" instead of the process operating on some group.The result is interesting, the journey to get there was very confusing.\n \nreply",
      "The logical click bait on this one. I could not resist thinking it\u2019s like saying there is no circle other than a round circle, but I had no idea if it\u2019s equivalent and fair comment given my limited cryptography knowledge (as in non existent). So I had to read it, and while I got little, by osmosis, I feel falling for the bait was worth it.\n \nreply",
      "lol same - but i needed this comment to take the bait\n \nreply",
      "It's a nice article, just the title needs a small tweak to add the word practical, as in \"There is no practical DH...\"\n \nreply",
      "What insanity led someone to use 0 for the terminal object?\n \nreply",
      "It makes some sense in the category of rings, but basically only there.\n \nreply"
    ],
    "link": "https://keymaterial.net/2025/05/23/there-is-no-diffie-hellman-but-elliptic-curve-diffie-hellman/",
    "first_paragraph": "When I first learned about Diffie-Hellman and especially elliptic curve Diffie-Hellman, I had one rather obvious question: Why elliptic curves? Why use this strange group that seems rather arbitrary, with its third intersection of a line and then reflected? Why not use, say, the Monster Group? Surely a monster is better equipped to guard your secrets than some curve thing named after, but legally distinct from, a completely different curve thing!I wouldn\u2019t have a satisfying answer to this question until way into my graduate studies, and the answer makes a perfect blog post for the \u201cCryptography (Incomprehensible)\u201d category of this blog, so here we go.First, as a recap, what do we mean by Diffie-Hellman? Well, we need a group , and element of this group  with some order , so  is the smallest positive integer with   where  is the neutral element of the group. The we take our private key  and compute our public key as . We can now compute a shared secret with some other public key  as .Th"
  },
  {
    "title": "BGP handling bug causes widespread internet routing instability (benjojo.co.uk)",
    "points": 252,
    "submitter": "robin_reala",
    "submit_time": "2025-05-27T11:15:15 1748344515",
    "num_comments": 117,
    "comments_url": "https://news.ycombinator.com/item?id=44105796",
    "comments": [
      "The standard approach is be liberal in what you accept and be specific in what you emit.You could1) Filter the broken message2) Drop the broken message3) Ignore the broken attributes but pass them on4) Break with the broken attributesTo me, only 4 (Arista) is the really unacceptable behaviour. 3 (Juniper) isn't desirable but it's not a devastating behaviour.EDIT: Actually rereading it, Arista did 2 rather than 4. I think it just closed the connection as being invalid rather than completely crash. That's arguably acceptable, but not great for the users.\n \nreply",
      "There is already RFC 7606 (Revised Error Handling for BGP UPDATE Messages), which specifies in detail how broken BGP messages should be handled.The most common approach is 'treat-as-withdraw', i.e. handle the update (announcement of a route) as if it was a withdraw (removal of previously announced route). You should not just drop the broken message as that whould lead to keeping old, no longer valid state.\n \nreply",
      "> The standard approach is be liberal in what you accept and be specific in what you emit.What you're paraphrasing here is the so-called \"robustness principle\", also known as \"Poestel's law\". It is an idea from the ancient history of the 1980s and 09s Internet. Today, it's widely understood that it is a misguided idea that has led to protocol ossification and countless security issues.\n \nreply",
      "Postel's Law certainly has led to a lot of problems, but is it really responsible for protocol ossification? Isn't the problem the opposite, e.g. that middleboxes are too strict in what they accept (say only the HTTP application protocol or only the TCP and UDP transport protocols)?\n \nreply",
      "Overly strict and overly liberal both lead to ossification. That's merely the observation that buggy behavior in either direction can potentially come to be relied on (or to be unpredictably forced on you, in the case of middleboxes filtering your traffic).I'd only expect security issues to result from being overly liberal but 1. I wouldn't expect it to be very common and 2. I'm not at all convinced that's a compelling argument to reduce the robustness of an implementation.\n \nreply",
      "what does ossification mean?open source something?\n \nreply",
      "It's when existing implementations' inflexibility prevent protocol evolution.https://en.wikipedia.org/wiki/Protocol_ossification\n \nreply",
      "see https://datatracker.ietf.org/doc/html/rfc9413#section-4.2\n \nreply",
      "The trouble is it fails to specify what you're supposed to be liberal with.Suppose you get a message that violates the standard. It has a length field for a subsection that would extend beyond the length of the entire message. Should you accept this message? No, burn it with fire. It explicitly violates the standard and is presumably malicious or a result of data corruption.Now suppose you get a you don't fully understand. It's a DNS request for a SRV record but your DNS cache was written before SRV records existed. Should you accept this message? Yes. The protocol specifies how to handle arbitrary record types. The length field is standard regardless of the record type and you treat the record contents as opaque binary data. You can forward it upstream and even cache the result that comes back without any knowledge of the record format. If you reject this request because the record type is unknown, you're the baddies.\n \nreply",
      "I would say the proper way to apply Postel's law is to reasonable interpretations of standards. Internet standards are just text documents written by humans and often they are underspecified or have multiple plausible interpretations. There is no IETF court, which would gives canonical interpretation (well, appropriate working group could make a revision of the standard but that is usually multi-year effort). So unless we want to break up to multiple non-interoperable implementations, each strictly adhering to their own interpretation, we should be liberal about accepting plausible interpretations.\n \nreply"
    ],
    "link": "https://blog.benjojo.co.uk/post/bgp-attr-40-junos-arista-session-reset-incident",
    "first_paragraph": ""
  },
  {
    "title": "Launch HN: Relace (YC W23) \u2013 Models for fast and reliable codegen",
    "points": 72,
    "submitter": "eborgnia",
    "submit_time": "2025-05-27T15:59:20 1748361560",
    "num_comments": 32,
    "comments_url": "https://news.ycombinator.com/item?id=44108206",
    "comments": [
      "We looked into many different diff/merge strategies[0] before finding Relace.Their apply model was a simple drop-in that reduced the latency of our UX substantially, while keeping error rates low.Great work Preston and Eitan![0] https://aider.chat/docs/more/edit-formats.html\n \nreply",
      "Thanks for the support!\n \nreply",
      "Looks interesting and useful if the accuracy numbers are as told. Kind of sad it's only available via a remote API though, makes the product more like a traditional SaaS-API. The marketing keeps talking about \"models\" yet the actual thing you use is only the API, would have been nice to be able to run locally. Although I do understand that it's harder to make money in that case.I got curious about what datasets you used for training the models? Figured the easiest would be to scrape git repositories for commits from there, but seems there are also quality issues with an approach like that.\n \nreply",
      "Open source git repos are a really good place to get data -- it requires a lot of munging to get it into a useful format, but that's the name of the game with model training.It's on the roadmap to make public evals people can use to compare their options. A lot of the current benchmarks aren't really specialized for these prompt-to-app use cases\n \nreply",
      "Nice!  I am currently writing a new version of my no-code platform, WeBase [1], to use AI to generate and edit applications.Currently just using foundation models from OpenAI and Gemini but will be very interested to try this out.My current approach is to just completely overwrite files with new updated version but I am guessing using something like Relace will make the whole process more efficient... is that correct?I'll watch your video later but I would love to learn more about common use cases.  It could even be fun to write a blog post for your blog comparing my \"brut force\" approach to something more intelligent using Relace.[1] https://www.webase.com (still points to the old \"manual\" version)\n \nreply",
      "> My current approach is to just completely overwrite files with new updated versionOverwriting full files work great <100 lines or so, but once you want to be able to edit files above that, it kind of gets very slow (and costly if using paid APIs), so using some sort of \"patch format\" makes a lot of sense.\n \nreply",
      "Happy to collaborate, shoot us an email at info@relace.ai :)\n \nreply",
      "Very interested to see what the next steps are to evolve the \"retrieval\" model - I strongly believe that this is where we'll see the next stepwise improvement in coding models.Just thinking about how a human engineer approaches a problem. You don't just ingest entire relevant source files into your head's \"context\" -- well, maybe if your code is broken into very granular files, but often files contain a lot of irrelevant context.Between architecture diagrams, class relationship diagrams, ASTs, and tracing codepaths through a codebase, there should intuitively be some model of \"all relevant context needed to make a code change\" - exciting that you all are searching for it.\n \nreply",
      "I have a different pov on retrieval. It's a hard problem to solve in a generalizable format with embeddings. I believe this can be solved at a model level where its used to fix an issue. With the model providers (oai, anthropic) going full stack, there is a possibility they solve it at reinforcement learning level. Eg: when you teach a model to solve issues in a codebase, the first step is literally getting the right files. Here basic search (with grep) would work very well as with enough training, you want the model to have an instinct about what to search given a problem. similar to how an experienced dev has that instinct about a given issue. (This might be what the tools like cursor are also looking at). (nothing against anyone, just sharing a pov, i might be wrong)However, the fast apply model is a thing of beauty. Aider uses it and it's just super accurate and very fast.\n \nreply",
      "Definitely agree with you that it's a problem that will be hard to generalize a solution for, and that the eventual solution is likely not embeddings (at least not alone).\n \nreply"
    ],
    "link": "item?id=44108206",
    "first_paragraph": ""
  },
  {
    "title": "LumoSQL (lumosql.org)",
    "points": 210,
    "submitter": "smartmic",
    "submit_time": "2025-05-27T10:39:30 1748342370",
    "num_comments": 78,
    "comments_url": "https://news.ycombinator.com/item?id=44105619",
    "comments": [
      "I'd say the most interesting thing on that site is the Not-Forking idea[1].1. https://lumosql.org/src/not-forking/doc/trunk/README.md\n \nreply",
      "I got to the end of that without really understanding what this is solving, what it does, or how.How do you handle changing upstream files locally without forking? Do you just, keep changes in a separate configuration format that is applied lazily at built time?I've never had issues with maintaining a fork anyways.\n \nreply",
      "Article doesn't tell me why it's better than git's subtree merge.\n \nreply",
      "I'm confused, is this just patch and apply patch?\n \nreply",
      "Yes. It's a small DSL to fork a repository and apply a series of textfile transformations (replace file, replace partial file).But if you give this a cool name, it's a New Idea.\n \nreply",
      "So it's a fork but with somewhat semantic diff specifications?\n \nreply",
      "Yes, specifications which could almost certainly be applied with a custom merge drivers or strategy rather than trying to come up with a clever name and hand baking a custom toolchain to do what you can already do with Git\n \nreply",
      "Not all projects use git.\n \nreply",
      "Weird.\n \nreply",
      "The TeX source works like this, too.  There is the original tex.web and some change files which get applied when converting it to either a TeX document or pascal source. (These days the pascal is further translated to C.)\n \nreply"
    ],
    "link": "https://lumosql.org/src/lumosql/doc/trunk/README.md",
    "first_paragraph": "LumoSQL is a modification (not a fork) of the\nSQLite embedded data storage library, which is among the most-deployed software. We are currently in Phase II of the project.If you are reading this on GitHub you are looking at a read-only mirror.\nThe master is always available at lumosql.org.\nLumoSQL adds security, privacy, performance and measurement features to SQLite.SQLite can test and compare results consistently across many kinds of system and configurations using the Not-forking tool. Example:LumoSQL can swap back end key-value store engines in and out of SQLite. LMDB is\nthe most famous (but not the only) example of an alternative key-value store,\nand LumoSQL can combine dozes of versions of LMDB and SQLite source code like\nthis:In LumoSQL 0.4 there are three LumoSQL backends:We are looking at some interesting new development in key-value storage to add and benchmark.LumoSQL adds modern encryption to SQLite, including Attribute-Based Encryption\n(ABE). This can be\ndone on a per-row "
  },
  {
    "title": "Semicolons bring the drama; that's why I love them (ft.com)",
    "points": 41,
    "submitter": "bishopsmother",
    "submit_time": "2025-05-24T14:32:11 1748097131",
    "num_comments": 33,
    "comments_url": "https://news.ycombinator.com/item?id=44081383",
    "comments": [
      "As a rule of thumb, when the pause between two adjacent sentences implied by the \nperiod seems a bit too halting, try a semicolon.I find it easier to think about the utility of semicolons from the perspective of individual sentences to be combined. And therefore, if a properly used semicolon were to be replaced with a period, the two resulting sentences should still make sense in isolation, they'd just feel ever so slightly too far apart.\"Semicolons bring the drama. That's why I love them.\" Does it work? Yes. Is there a clear through-line from one sentence to the next? Yes. Does the pause between the sentences feel a bit too abrupt, though? Maybe!(\"Establish clear through-line\" can be another nice reason to combine sentences with a semicolon.)\n \nreply",
      "I will sometimes do this when, for whatever reason, I don't want to capitalize that next letter. It's the 'T' in 'That'; too loud!\n \nreply",
      "This reads like \u201cvibes\u201d grammar and I hate it. You can\u2019t just randomly throw punctuation around and hope it sticks.The formal use of a semi-colon is to omit a word like \u201cbecause\u201d or \u201cand\u201d that joins two sentences. It\u2019s not that hard.\n \nreply",
      "Also, when the pause between two adjacent sentence is awkwardly inadequate, try writing a dot above the comma.;)\n \nreply",
      "> Also, when the pause between two adjacent sentence is awkwardly inadequate, try writing a dot above the comma.Ah, you missed the chance to refer euphoniously instead to the pause between clauses!\n \nreply",
      "As an aside, I\u2019ve noticed that ChatGPT uses em dashes (\u201c\u2014\u201d) quite frequently \u2014 much more often than I\u2019m used to seeing on the web. It\u2019s a bit surprising, considering it's largely trained on web-based data.\n \nreply",
      "It also uses them correctly\u2014with no spaces. I have never seen anyone do that on the web.\n \nreply",
      "Related: Marked decline in semicolons in English books, study suggests (10 points, 6 days ago) https://news.ycombinator.com/item?id=44056344Unrelated: The origin and virtues of semicolons in programming languages (46 points, 2024, 19 comments) https://news.ycombinator.com/item?id=40038712\n \nreply",
      "https://archive.ph/0QYGhBecause anti-semicolon ideology is anti-poetic.\n \nreply",
      "Delightfully meta at times, a fun read! I recently binged all of Jane Austen\u2019s novels, and her dense prose is so chock full of clauses and sub clauses, that I like feel she uses semicolons and emdashes the same way programmers might nest with braces.\n \nreply"
    ],
    "link": "https://www.ft.com/content/80c39c74-8753-44bf-aeb0-cf6701a64f02",
    "first_paragraph": "Access to eight surprising articles a day, hand-picked by FT editors. For seamless reading, access content via the FT Edit page on FT.com and receive the FT Edit newsletter.Essential digital access to quality FT journalism on any device. Pay a year upfront and save 20%.Complete digital access to quality FT journalism with expert analysis from industry leaders. Pay a year upfront and save 20%.Terms & Conditions applyDiscover all the plans currently available in your countryDigital access for organisations. Includes exclusive features and content.See why over a million readers pay to read the Financial Times."
  },
  {
    "title": "Direct Preference Optimization vs. RLHF (together.ai)",
    "points": 8,
    "submitter": "summarity",
    "submit_time": "2025-05-25T16:50:36 1748191836",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.together.ai/blog/direct-preference-optimization",
    "first_paragraph": "April 17, 2025\u30fbBy\u00a0Ivan Provilkov, Zain Hasan, Max RyabininWe're excited to announce that the Together Fine-Tuning Platform now supports Direct Preference Optimization (DPO)! This technique allows developers to align language models with human preferences creating more helpful, accurate, and tailored AI assistants. In this deep-dive blogpost, we provide details of what DPO is, how it works, when to use it and code examples.\u00a0If you'd like to jump straight into code have a look at our code notebook.Modern language model development typically follows a three-stage process:This final stage, preference learning, is where DPO comes in as an alternative to Reinforcement Learning from Human Feedback (RLHF). It ensures that models not only perform tasks correctly but do so in ways that users prefer. It also allows users to teach the model nuances of a particular use case by showing examples of what is expected and what the model should avoid. Business use cases where you might employ DPO are to "
  },
  {
    "title": "In Vietnam, an unlikely outpost for Chicano culture (latimes.com)",
    "points": 54,
    "submitter": "donnachangstein",
    "submit_time": "2025-05-27T20:09:58 1748376598",
    "num_comments": 39,
    "comments_url": "https://news.ycombinator.com/item?id=44110270",
    "comments": [
      "A text search for \u201ccholo\u201d yields no results. I found that kind of surprising. That is the type of aesthetic that seems to have spread the most but I would hope that all these people learn beyond more than gang-life stories. I\u2019m thinking the stories of Rudolfo Anaya, \u201cCorky\u201d Gonzales, Sandra Cisneros, etc.\n \nreply",
      "When a buddy and I used to go out to bars, he would dress and act Mexican too. I think he enjoyed the style but, on some level, also the attention when girls would mistake him for being Mexican rather than his Chinese heritage.\n \nreply",
      "The coolest low rider I ever saw was in Tokyo.\n \nreply",
      "It happens to food too.  The \"traditional\" foods are never from just one place and it's always evolving and somewhere along the way someone adds their local cultural twist to something from the outside and it's suddenly so much better.I cooked a recipe recently that was based on a dish that was made for American GI's in Japan after WWII ended.   Okinawan Taco RiceNow that's the only way I want to eat taco meat ....\n \nreply",
      "A lot of food we like was invented fairly recently. Modern pizza was invented in Italy in 1889 for example.\n \nreply",
      "Here is a 2000 year old fresco showing what looks like a pizza!https://www.theguardian.com/world/2023/jun/27/pompeii-fresco...\n \nreply",
      "Culture is so portable now.   And people seem happy to adopt new things.I like it.\n \nreply",
      "https://archive.is/XyxeB\n \nreply",
      "I grew up in SoCal (Westminster in particular), which is highly vietnamese, and in the context of SoCal, which is VERY Mexican. So, honestly, this aesthetic is very familiar to me. Most of my school friends(mexican and vietnamese) growing up were very into it. My Catholic parish was basically run by the Mexicans and Vietnamese communities. This combination is very common in LA / Southern California.\n \nreply",
      "If you're back down there, the Cheech Marin Center for Chicano Art in Riverside is awesome - Cheech collected Chicano art all throughout his career and worked with the City of Riverside to open a museum to house it. It's a really beautiful collection - truly unique art, and provides a great view into the iconography and history of Chicano culture.(Bonus points for hitting Tio's Tacos afterwards.)\n \nreply"
    ],
    "link": "https://www.latimes.com/world-nation/story/2025-05-27/chicano-culture-vietnam",
    "first_paragraph": "HO CHI MINH CITY\u00a0\u2014\u00a0When Nguyen Phuoc Loc first started dabbling in Chicano culture eight years ago, it was simply because he liked the way that the loose clothing offset his large head.Today, he considers himself Chicano through and through. The 30-year-old Vietnamese barber has never been to the United States. Yet he has filled his life and work with tributes to Mexican American identity and culture. The back of the barbershop he manages features a mural of the Virgen de Guadalupe, a cactus plant and a Mexican flag. Sneakers hang by their laces from barbed wire, dangling above two motorbikes.Even his shaved head is covered in the Gothic black letters long popular in Chicano culture that spell out: Family, Loyalty, L.A. The ink on his crown \u2014 a large number 6 \u2014 signifies his status as the sixth member of a small but increasingly visible community: a local band of barbers and tattoo artists who call themselves Viet Chicanos.\u201cIn the beginning, I was just copying the older guys, their sty"
  },
  {
    "title": "I salvaged $6k of luxury items discarded by Duke students (indyweek.com)",
    "points": 212,
    "submitter": "drvladb",
    "submit_time": "2025-05-27T15:59:23 1748361563",
    "num_comments": 256,
    "comments_url": "https://news.ycombinator.com/item?id=44108207",
    "comments": [
      "A few \u201eanthropological\u201c impressions from this text.First, why do people throw away tennis shoes, unopened food etc? Why not take with them on to their next destination?Second, why not just put on the street so that other people can come and collect items? This is very common for example here in Switzerland - you put unwanted things ranging from old kid toys to books to furniture on the sidewalk with a sign saying \u201egratis - zum mitnehmen\u201c (free to take with you) and people who want/need come and collect them. Only if anything is really unwanted, you take back and throw away.Third, I was surprised the author felt bad. A sign that there is unfortunately some stigma in re-using things. She is actually doing very nice work by collecting them and trying to give them a new lease of life for herself or others (she mention she donated some of the items)\n \nreply",
      "I live in Portland. Walk around certain neighborhoods, and you\u2019ll see items out on the street - mostly garbage. Broken couches, broken tables, broken appliances, that sort of thing. Typically, items with remaining utility are exchanged via Goodwill or an online tool like Buy Nothing.My guess is that the college does not want to allow students to dump their mostly-garbage on the neighbors.At the same time, wealthy students who will throw out items of value may feel they have better things to do than separate out items to donate. That\u2019s especially true if they wait until the last minute.Overall, separating items to donate from one\u2019s trash is a way to avoid paying to dispose of trash at the dump and a way to perhaps be charitable or environmentally conscious. I\u2019m not convinced it\u2019s all that effective as an altruistic move. If the college sets up a place to dump for free, I\u2019m not at all surprised many people take advantage of it without another thought.\n \nreply",
      "I do not even live in Portland - I live on the edge of a suburban area where people skew pretty conservative.  I see the same thing - people who want to get rid of perfectly good stuff, and do not want it to go to waste.  Even I do this occasionally if I cannot be bothered to repair a thing - it goes out a bit before garbage day and is usually soon gone.**Unless it is an old non-wide LCD monitor.  Nobody wants those...\n \nreply",
      "I live near Ladds Addition and the free piles are the worst. 90% of it is pure crap that just sits out for weeks.People put it out to feel good about themselves.Once I saw a bunch of random wires with a label, \u201cFREE - great for art projects.\u201d It\u2019s like thanks for letting me know I was going to knock on doors until I found the right person to make an offer to.\n \nreply",
      "> First, why do people throw away tennis shoes, unopened food etc? Why not take with them on to their next destination?At my wife's alma mater, the way move out in the dorms worked was that you had 24hrs after your last final and then had to be gone.  That didn't really leave a lot of time for a lot of people that had maybe two checked bags and a carry on to work with, and had spent the previous time focused on studying for their finals.\n \nreply",
      "So the solution could be top down:- give 2-3 extra days for students to move out.- maybe partner with a few moving/freight companies? you\u2019d bring them a lot of customers and they could provide a good rate.\n \nreply",
      "But it\u2019s a \u201csolution\u201d to a nonexistent problem. The vast majority of stuff people own sits unused for decades but gets moved around to whatever home you\u2019re living in out of irrational loss aversion.This is human, and fine. But I\u2019m 100% certain this author is grossly overestimating the value of the junk they believe they are \u201csaving\u201d and how much of it they will actually use. This is the rationalizing of a budding hoarder.The time pressure does these kids a huge service by forcing them to clear out stuff that doesn\u2019t actually matter so they don\u2019t feel the need to buy a 4,000 sq ft McMansion to store their college bean bag chair and every other piece of junk they\u2019ve ever owned.Ultimately, the authors children will run  across these \u201csalvaged goods\u201d in a decades-untouched pile in her basement upon her death in about 66 years.\n \nreply",
      "The problem here is that a good amount of perfectly serviceable items went into the trash instead of being donated.  That is just straight up wasteful.\n \nreply",
      "They dont want a bunch of students hanging around with no school and extra time on their hands. Agree its way to short, as someone that had to deal with it, but also understand the trade off they were making at the time.\n \nreply",
      "Better yet, offer to store a reasonable amount of students' belongings over the summer. My college offered this my first couple years but stopped by the time I graduated in 2010.\n \nreply"
    ],
    "link": "https://indyweek.com/culture/duke-students-dumpster-diving/",
    "first_paragraph": "It's INDY's Spring Member Drive! Help us reach our goal of 150 new members by the end of May.Join 24,000 of your neighbors who read the INDY Daily newsletter.There's an INDY newsletter for you. Find it here.We're INDY, the Triangle's alternative newspaper for the last 40+ years. Get the good stuff straight to your inbox.INDY WeekI live in an apartment building in downtown Durham that houses more Duke University undergrads than any other category of person\u2014a friend once characterized it as an \u201cadult dorm\u201d\u2014so it wasn\u2019t all that surprising when, last week, I found a cute little table in the trash room on my floor. At the end of the school year, a lot gets thrown away.The table was in great condition, amid stacks of linens and unopened boxes of date-nut energy bites. Made from clear acrylic, its edges were tinged a neon lemon-lime color that changed with the light\u2014sometimes appearing to be part of the acrylic itself, other times a reflection dancing along its curves.\u00a0I took it home. When I"
  }
]