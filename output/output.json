[
  {
    "title": "mitchivin.com (mitchivin.com)",
    "points": 65,
    "submitter": "indigodaddy",
    "submit_time": "2025-09-07T00:29:16 1757204956",
    "num_comments": 14,
    "comments_url": "https://news.ycombinator.com/item?id=45154176",
    "comments": [
      "hey haha I tried to post this a few weeks ago but my post didn't go through - i'm glad you guys are enjoying it!reply",
      "Beautiful work.reply",
      "Love this! The nostalgia hit hard, I immediately felt the urge to play Raft Wars on Miniclipreply",
      "Very cool. There's an impressive number of little details. My favourite is that the Paint app actually works.reply",
      "Vyvanse is a hell of a drugreply",
      "You got this far have DIR print something!reply",
      "Mind Your Manners brought back some seriously nostalgic memories. Thank you!reply",
      "This is cool! I like how you can toggle the pixel effect. A lot of great attention to detail.reply",
      "personally, I prefer it on but I'd had some complaints and it does have some impact on performance so better to give the choice, right?reply",
      "Great portfolio site.Now try windows93 [0]enjoy.[0] https://www.windows93.netreply"
    ],
    "link": "https://mitchivin.com/",
    "first_paragraph": "Welcome to my portfolio. JavaScript is required for the full Windows XP experience. You can reach me on LinkedIn, view my work on GitHub, or see my latest on Instagram."
  },
  {
    "title": "A Navajo weaving of an integrated circuit: the 555 timer (righto.com)",
    "points": 113,
    "submitter": "defrost",
    "submit_time": "2025-09-06T20:57:27 1757192247",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=45152779",
    "comments": [
      "Fascinating related article about a weaving of a Pentium (linked near the bottom): https://www.righto.com/2024/08/pentium-navajo-fairchild-ship..., discussion a year ago: https://news.ycombinator.com/item?id=41418301 (84 comments)reply",
      "The 555 timer is iconic. Just iconic. I wonder how many billions of them have been shipped over the years?reply",
      "Saw an exhibit with some of her work, I think in Albuquerque. Was surprised/delighted to see weavings of circuits.reply",
      "Author here if anyone has questions...reply",
      "This is how we pass our chip designs to our descendents so they may rebuild civlization.reply",
      "A very inaccurately timed civilization.reply",
      "Thats on you for not consulting the tolerance band on your resistors.reply",
      "Imagining an ancient theological order with ranks based on color coding...reply",
      "Yes, my question is: did the weaver have any questions?reply",
      "Marilou Schultz asked me to suggest some chips that would make good weavings, and I suggested the 555, among other chips. She also had questions about the different colors and textures in the chip. She notices a lot more about the colors than I do; I look at a chip in terms of functionality and connectivity and don't pay attention to the colors.reply"
    ],
    "link": "https://www.righto.com/2025/09/marilou-schultz-navajo-555-weaving.html",
    "first_paragraph": "Computer history, restoring vintage computers, IC reverse engineering, and whateverThe noted Din\u00e9 (Navajo) weaver Marilou Schultz recently completed an intricate weaving\ncomposed of\nthick white lines on a black background, punctuated with reddish-orange diamonds.\nAlthough this striking rug may appear abstract, it shows the internal circuitry of a tiny silicon chip known\nas the 555 timer.\nThis chip has hundreds of applications in\neverything from a sound generator to a windshield wiper controller.\nAt one point, the 555 was the world's best-selling integrated circuit with billions sold.\nBut how did the chip get turned into a rug?\"Popular Chip\" by Marilou Schultz.\n Photo courtesy of First American Art Magazine.The 555 chip is constructed from a tiny flake of silicon with a layer of metallic wiring on top.\nIn the rug, this wiring is visible as the thick white lines, while the silicon forms the black background.\nOne conspicuous feature of the rug is the reddish-orange diamonds around the per"
  },
  {
    "title": "How the \"Kim\" dump exposed North Korea's credential theft playbook (domaintools.com)",
    "points": 178,
    "submitter": "notmine1337",
    "submit_time": "2025-09-06T19:14:26 1757186066",
    "num_comments": 34,
    "comments_url": "https://news.ycombinator.com/item?id=45152066",
    "comments": [
      "This is interesting due to the tying of DPRK and PRC.  It seems hard to say how much coordination there is between the two, but whatever it is, it appears to be greater than zero.  While not necessarily surprising, I wonder if this public attribution will make it harder for the PRC to deny involvement with both the DPRK's efforts and their own.reply",
      "I don\u2019t see any smoking gun here that would prevent the PRC from denying its involvement in these hacking efforts.reply",
      "Regardless of how unhappy Beijing may be with things Pyongyang does, North Korea is of such obvious strategic importance to China that they are unlikely to ever waver in their support of the regime or even try to hide it.reply",
      "What's surprising about this? It's not dissimilar to how the US behaves towards their less than savory strategic allies (or, historically, towards dictatorships as long as they were US-aligned).reply",
      "I don't think Chinese support for NK has ever been a secret anymore than the the US support for South Korea has. And it's in China's backyardd so they've got way more of an excuse.And if you think that doesn't matter, look at the Monroe Doctrine [1].Taken further, the so-called Cuban Missile Crisis should really be called the Turkey Missile Crisis. The US (through NATO) placed Jupiter nuclear MRBMs in Turkey, only hunddreds of miles from Moscow. The USSR responded by doing the exact same thing, by placing nuclear weapons in Cuba. And the US almost started World War 3 over it.It was the USSR who stepped back from the brink and, as a result of a secret agreement, the Jupiter MRBMs were quietly removed from Turkey [2].[1]: https://en.wikipedia.org/wiki/Monroe_Doctrine[2]: https://www.wilsoncenter.org/blog-post/jupiter-missiles-and-...reply",
      "Why is this comment downvoted? You have the right to see China, USSR and NK as immoral regimes but there's nothing non-factual here.reply",
      "The topic is cybercrime and espionage, not nuclear brinksmanship or colonialism. Whatever parallels can be drawn don't seem to be very relevant, so the comment comes off as an attempt to deflect criticism.reply",
      "> The topic is cybercrime and espionage, not nuclear brinksmanship or colonialism.Those are all closely related topics in geopolitics.",
      "Maybe it wasn\u2019t clear, but I think the comment is explaining the importance for superpowers of keeping their immediate surroundings politically aligned - china wants NK on their side for the same reason neither the US or the URSS wanted nukes on their doorstep.reply",
      "It was still a fascinating aside, and it's not like HN stays on topic in a thread. I learned something today.reply"
    ],
    "link": "https://dti.domaintools.com/inside-the-kimsuky-leak-how-the-kim-dump-exposed-north-koreas-credential-theft-playbook/",
    "first_paragraph": ""
  },
  {
    "title": "Over 80% of Sunscreen Performed Below Their Labelled Efficacy (2020) (consumer.org.hk)",
    "points": 124,
    "submitter": "mgh2",
    "submit_time": "2025-09-06T19:57:59 1757188679",
    "num_comments": 97,
    "comments_url": "https://news.ycombinator.com/item?id=45152374",
    "comments": [
      "Independent lab testing of consumer packaged goods is so important, expensive, unprofitable, and downright risky from a libel standpoint that I dare say it should be the role of government to do it.reply",
      "Yes, because government inspectors are flawless and would never take bribes to let things pass or force them to fail. Nope, they'd never do that.reply",
      "This is a topic where the details matter a lot. A sunscreen which is labeled SPF 50 but performs at SPF 45 is such a minimal difference that it would be impossible to notice in the real world. The variance of your application technique and applied thickness would actually matter more. There is also a lot of testing variability, so if a sunscreen rated to block 98% of certain rays only gets 97% in the test that would be acceptable in the real world, but it would get counted for this clickbait headline.If a sunscreen comes with a high SPF rating and performs close enough in random testing (which is hard to replicate) then I wouldn\u2019t have any concerns in the real world.The body of the article has some more details about how the number of majorly deficient brands was much smaller, but that makes for less clickbaity headlines:> The measured sunscreen efficacy of 4 models were below SPF15, of which 2 were sunscreen products with very high protection i.e. labelled with SPF50+Knowing which 2 brands were labeled SPF 50 but performed below 15 would have been helpful, but the article is not helpful.reply",
      "This is related to an article from yesterday, https://news.ycombinator.com/item?id=45145624, about the Choice Australia investigation that found that some sunscreens (named in that article) provided around SPF 4 when it was labeled as SPF 50+. It is a big deal because many people (like the 34 year old woman in the article who had skin cancer removed from her face) use a specific brand for years, believing it to be as effective as the label proclaims.reply",
      "As someone who burns extremely easily, I'm confused how this happens. I can feel the difference immediately; as little as ten minutes in direct sunlight makes me tinged red; and if I don't cover every inch I can tell which parts I missed the next day. If it doesn't work why would you use it?!I do have sympathy for those with dark(er, which is basically everyone) skin who may not be able to directly tell the efficacy.My concern is that mineral sunscreens are difficult to apply and leave a film on the skin (which is the entire point, I guess?); i hate that feeling, so I use chemical sunscreens. I'd bet that some of them have very nasty long-term side effects. So in the end i almost always go with trying to cover my skin with clothes/shade/whatever if at all possible.reply",
      "Have you tried living in Australia? I would like SPF 100 sunscreen pronto, please and thank youreply",
      "SPF is a Sun Protection Factor, meaning it multiplies the time it takes for your skin to burn. For example, if very light skin normally burns in about 10 minutes, SPF 20 stretches that to ~200 minutes, which is already over 3 hours. Since dermatologists recommend reapplying every 2 hours regardless, going beyond SPF 30\u201350 (which blocks ~97\u201398% of UVB) doesn\u2019t add much practical benefit. Even for very fair skin, correct application and reapplication are far more important than chasing SPF 100.reply",
      "Where I live in summer I regularly get days with UV index above 15.If you burn in 15 minutes under UV index 6 on the worst days that I've seen you'd burn in 5 minutes. So a SPF of 60 is as useful here like an SPF of 20 is wherever you live.reply",
      "No, it should be like car speedometers where even a slight misreading on the wrong side is regulated harshly. [1]I don't care for \"close enough\" brinksmanship.The same is true for speed limits but y'all aren't ready for that[1] Might be rumor but I heard that car speedometers often read high because there's a big penalty if they read low by even 1 MPHreply",
      "Trying to figure out whether this action was triggered by the investigation by the Australian magazine Choice, which found most Australian sunscreens were much worse than claimed.There's just this weird statement at the bottom of the page:> The Consumer Council reserves all its right (including copyright) in respect of CHOICE magazine and Online CHOICEreply"
    ],
    "link": "https://www.consumer.org.hk/en/press-release/528-sunscreen-test",
    "first_paragraph": "The use of effective sunscreen can reduce the harm caused to the skin by ultraviolet rays (UV) and slow down skin aging. The Consumer Council tested 30 models of sunscreen for daily use and over 80% of them were found to perform below their respective labelled efficacy. The measured sunscreen efficacy of 4 models were below SPF15, of which 2 were sunscreen products with very high protection i.e. labelled with SPF50+. Among the 23 models using the \u201cPA System\u201d which is commonly adopted by Asian countries to denote the UVA protection efficacy, only 7 were measured with an UVA Protection Factor (UVAPF) value met with their labelled PA levels. In addition, only 19 models stated the major ingredients on their packaging and consumers may not be able to identify possible allergens as a result. The Council urges manufacturers to critically review their production technology and processes, and to accurately label its product efficacy as well as to provide clear product information and usage guid"
  },
  {
    "title": "C++26: Erroneous Behaviour (sandordargo.com)",
    "points": 24,
    "submitter": "todsacerdoti",
    "submit_time": "2025-09-06T22:51:42 1757199102",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=45153636",
    "comments": [
      "As a long time user of C++, I want to propose a question: do we think C++ will ever reach a point where it is significantly ergonomic and safe enough to use (in comparison to e.g. Python or Rust) via adding new features?I've used C++ for so long and I'm a good way into thinking that the language is just over. It missed its mark because of backwards compatibility with fundamental language flaws. I think we can continue to add features - which are usually decent ideas given the context, kudos to the authors for the effort - but the language will decline faster than it can be fixed. Furthermore, the language seems to be continually becoming harder to implement, support, and write due to the constant feature addition and increase in semantic interconnectivity. To me it's almost mostly a theoretical exercise to add features at this point: practically we end up with oddly specced features which mostly work but are fundamentally crippled because they need to dodge an encyclopedia of edge cases. The committee are really letting the vision of a good C++ down by refusing to break backwards compatibility to fix core problems. I'm talking fundamental types, implicit conversions, initialisation, preprocessor, undefined / ill-formed NDR behaviour. The C++ I'm passionate about is dead without some big changes I don't think the community can/will handle.reply",
      "That doesn't matter - \nit cost a billion dollars to write the current project I work on. There is no way I can ask for that much to rewrite it all in whatever. Thus we are stuck on c++ which was the best choice 15 years ago. Anything that makes new code easier to write is great help.sure we are looking at options - but rust and c++ don't interoperate well (c api is too limiting). D was looking interesting for a while but I'm not sure how it fits (d supports c++ abi)reply",
      "60 million dollars a year in development for 15 years?  What are you working on?reply",
      "Many large financial operations - HFT such as Hudson River Trading or Optiver or IMC or Citadel, or the big C++ systems in the banks - 200-400 developers working on an ecosystem of components can easily clear that.reply",
      "There are many large projects with ~1000 engineers will end up costing more than that.reply",
      "Chrome doesn\u2019t fit those figures exactly but is close.reply",
      "> do we think C++ will ever reach a point where it is significantly ergonomic and safe enough to use (in comparison to e.g. Python or Rust) via adding new features?This is an interesting perspective to me, because my view as someone who's been using Rust since close to 1.0 and hasn't done much more than dabbled in C++ over the years is basically the opposite. My (admittedly limited) understanding is that this has never really been a goal of the committee, because if someone is willing to sacrifice backwards compatibility, they could presumably just switch to using one of those other languages at that point. Arguably the main selling point of C++ today is the fact that there's a massive set of existing codebases out there (both libraries that someone might want to use and applications that might still be worked on), and for the majority of them, being rewritten would be at best a huge effort and more realistically not something going to be seriously considered.If the safety and ergonomics of C++ are a concern, I guess I'm not sure why someone would pick it over another language for a newly-started codebase. In terms of safety, Rust is an option that exists today without needing C++ to change. Ergonomics are a bit less clear-cut, but I'd argue that most of the significant divergences in ergonomics between languages are pretty subjective, and it's not obvious to me that there's a significant enough gap in between Rust's and C++'s respective choices that warrant a new language that's not compatible with C++ but is far enough from Rust for someone to refuse to use it on the basis ergonomics alone. It seems to me like \"close enough to C++ to attract the people who don't want to use Rust but far enough from Rust to justify breaking C++'s backwards compatibility\" is just too narrow a niche for it to be worth it for C++ to go after.reply",
      "It's true that without backwards compatibility concerns, Rust looks like a great alternative.However I think C++ still has some things going for it which may make it a useful option, assuming the core issues were fixed. C++ gives ultimate control over memory and low level things (think pointers, manual stack vs heap, inline assembly). It has good compatibility with C ABIs. It's very general purpose and permissive. And there are many programmers with C++ (or C) knowledge out there already.Further, I think C++ started on its current feature path before Rust really got a big foothold. Consider C++ has been around a really long time, plenty long enough to fix core features.Finally I reckon the whole backwards compatibility thing is a bit weird because if the code is so ancient and unchangable, why does it need the latest features? Like you desprately need implicit long-to-int conversion but also coroutines?? And for regular non-ancient code, we already try to avoid the problematic parts of C++, so fixing/removing/changing them wouldn't be so bad. IMO it's a far overdone obsession with backwards compatibility.Of course without a significant overhaul to the language you'd probably say \"screw it\" and start from scratch with something nicer like Rust.reply",
      "I think I might be getting confused about the point you're making here. To me, pre-existing knowledge and the decades-long legacy of C++ feel like much stronger arguments against changing anything in a breaking way compared to making breaking changes to improve the language. I do agree with you around a lot of the new features being introduced not feeling super necessary, but I'm guessing that the stance of people in favor of them is that adding them doesn't feel like it's a huge problem either given that they can do them without breaking anything. My perception is that C++ has already been a fairly large language for a while, and that most codebases already develop a bit of a dialect of which features to use or not use (which you allude to as well), so I could imagine that they expect people who don't like the new features to just ignore them.I think I'm most confused about the last part that you're saying. A significant overhaul to the language in a breaking way feels pretty much the same as saying \"screw it\" and starting from scratch, just with specific ergonomic choices being closer to C++ than to Rust. Several of the parts that you cite as the strengths of the language, like inline assembly and pointers are still available in Rust, just not outside of explicitly unsafe contexts, and I'd imagine that an overhaul of C++ to enhance memory safety would end up needing to make a fairly similar compromise for them. It just seems like the language you're wishing for would end up with a fairly narrow design space, even if it is objectively superior to the C++ we have today, because it would have to give up the largest advantage that C++ does have without enough unoccupied room to grow into. The focus on backwards compatibility doesn't seem to be that it would necessarily be the best choice in a vacuum, but a reflection of the state of the ecosystem as it is today, and a perception that sacrificing it would be giving up its position as the dominant language in a well-defined niche to try to compete in a new one. This is obviously a subjective viewpoint, but it doesn't seem implausible to me, and given the fact that we can't really know how it would work out unless they do try, sticking with compatibility feels like the safer option.reply",
      "The biggest question I have around the viability of breaking changes in C++ is whether you can compile some code with a newer breaking standard, some with an older standard, and link them.Headers would be a problem given their text inclusion in multiple translation units, but it's not insurmountable; you're currently limited to the oldest standard a header is included into, and under a new standard that breaks compatibility you'd be limited to a valid subset of the old & new standard.EDIT: ironically modules (as a concept) would (could?) solve the header problem, but they've not exactly been a success story so far.reply"
    ],
    "link": "https://www.sandordargo.com/blog/2025/02/05/cpp26-erroneous-behaviour",
    "first_paragraph": "If you pick a random talk at a C++ conference these days, there is a fair chance that the speaker will mention safety at least a couple of times. It\u2019s probably fine like that. The committee and the community must think about improving both the safety situation and the reputation of C++.If you follow what\u2019s going on in this space, you are probably aware that people have different perspectives on safety. I think almost everybody finds it important, but they would solve the problem in their own way.A big source of issues is certain manifestations of undefined behaviour. It affects both the safety and the stability of software. I remember that a few years ago when I was working on some services which had to support a 10x growth, one of the important points was to eliminate undefined behaviour as much as possible. One main point for us was to remove uninitialized variables which often lead to crashing services.Thanks to P2795R5 by Thomas K\u00f6ppe, uninitialized reads won\u2019t be undefined behavio"
  },
  {
    "title": "Shipping textures as PNGs is suboptimal (gamesbymason.com)",
    "points": 59,
    "submitter": "ibobev",
    "submit_time": "2025-09-06T20:37:16 1757191036",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=45152648",
    "comments": [
      "Who is this for? Texture compression is already handled automatically by all the major game engines under the hood. If you\u2019re building your own engine you probably already know what texture compression is.reply",
      ">  If you\u2019re building your own engine you probably already know what texture compression isYes, because they learnt it somewhere, for example, this article.I don't get the negativity. Unless you work on bleeding edge R&D, every technique you know has been documented somewhere by someone else. So only the bleeding edge R&D people should write tech blogs?Anecdotally, even I had known what texture compression is, this article still taught me something: the existence of Tacant View. It looks like quite a neat app.reply",
      "Thank you for mentioning this. You often see comments like the OC that are dismissive of articles and seem to think people doing one thing know everything about that thing. I guess when people get to a certain level themselves, they forget that others have to learn things too and don't implicitly know all of the things that you know. I really do appreciate seeing your comment gently reminding people that learning is a thing that has to happen and should be encouraged.reply",
      "People do ship games on frameworks, rather than on engines. That could be considered building your own engine although I'm not sure if that's what you meant by the phrase.reply",
      "Ktx2 can also be used on the web, and a lot of web developers who make games are using libraries like Three.js instead of engines like Unity (which can technically build to WebGL but does an awful job of it).reply",
      "Someone on this forum might be one of the lucky 10,000.  They also made their own texture conversion tool, which might save someone some time and effort.Of course, they might have written the blog post with the intention of drawing attention to themselves and being noticed.  These days, I can't bring myself to be upset about that sort of thing - if the content is good, better self-promotion than AI slop or hyping up the next hot investment vehicle.reply",
      "I keep saying this whenever I see books about quantum electrodynamics. Everyone in the room who does QCD already knows QCD and doesn't need to discover it from scratch, so why do we need to write about it? Such wasted energy, we could all be writing comments on HN instead!reply",
      "Any modern engine does this automatically on PNG import, or as part of material/shader setup. You want different formats for different things, e.g AO, normals, bcs different formats have different compression artifacts.reply",
      "How much extra time does it add for startup? For a single texture it\u2019s probably negotiable but for a modern game, we\u2019re talking about thousands of textures, so maybe it adds up?reply",
      "i did some casual testing before of a png vs a compressed texture and its like 20x faster, so yes a big difference. most of the speedup is from not needing to calculate mipmaps since they are already precalculated.reply"
    ],
    "link": "https://gamesbymason.com/blog/2025/stop-shipping-pngs/",
    "first_paragraph": "Are you shipping textures to players as PNGs? The goal of this post is to convince you that this is suboptimal, and walk you through a better approach.I\u2019ll also share my implementation of the suggested approach, but if you\u2019d rather do it yourself I\u2019ll also provide you with the information you need to get started.If you\u2019re using a game engine, it is almost certainly doing what this post suggests automatically, but it doesn\u2019t hurt to double check! sourcePNGs are great for interchange. They\u2019re lossless, they compresses well, and support is ubiquitous. PNG is my image interchange format of choice.This post isn\u2019t a criticism of PNGs\u2013it\u2019s just that the PNG format is designed for image data, not texture data.Here are some examples of features you would expect out of a texture format that you\u2019re not going to find in an image format:Can you work around all these issues? Sure.You can premultiply and generate your mipmaps at load time. You can ship separate images for each cuebmap face. But now y"
  },
  {
    "title": "I'm Making a Beautiful, Aesthetic and Open-Source Platform for Learning Japanese (kanadojo.com)",
    "points": 69,
    "submitter": "tentoumushi",
    "submit_time": "2025-09-06T21:19:30 1757193570",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=45152940",
    "comments": [
      "Some constructive criticism:1. For picking the kana answers, using the keyboard key is better than numbers. When you actually type an \u3048, you type 'e', so it's a useful mapping to learn in terms of how IME works.2. For vocabulary, there should be an option to turn off romaji in favor of kana only. No explanation needed I think3. The vocab quiz, between kanji and just an english word, is an anti-pattern in my opinion. Recognizing the meaning if vocab in a full japanese sentence is a much better basic quiz, especially since not all words have 1-1 mappings. It also doesn't quiz on the reading, which seems weird. Also, an easy example of something confusing there is that \u8fba is 'area', but if I see 'area' my first thought is \u9762\u7a4d (like the area of a triangle), while \u8fba would be edge in that context... and my second thought is \u5730\u57df, like \"the area of the country I grew up in\". I think \u8fba is maybe 4th or 5th for 'area', and that's just because 'area' is a broad english word. My point is, quizzing vocab -> english word, without reading, without an example sentence, is a recipe to confuse learner's brains.4. Same complaints as vocab for the kanji quiz, but moreso since kanji's meaning is more abstract.The beautiful aesthetic and open-source way to learn Japanese is to make Anki flash cards, and customize the cards using html (which it already supports).This entire site could have been anki decks, and then it would have had spaced repetition for free, and users could even more easily edit things to suit themselves ad add to it.reply",
      "Apps/platforms don't work for learning Japanese. You just need to memorize the hell out of the vocabulary, spend some time learning the grammar, and most importantly IMMERSE. Watch, read and listen to content in Japanese.https://learnjapanese.moehttps://alljapanesealltheti.me/ (this used to be THE guide for learning)reply",
      "The \u201cculture\u201d around learning Japanese is so different from other languages. There\u2019s a large amount of software engineers studying the language, so there\u2019s tons of apps/websites that center around it (for better or worse).The communities are also\u2026 particular. People tend to espouse certain deep beliefs or attitudes that you just don\u2019t see for other languages (and I don\u2019t think complexity is the reason; you don\u2019t see that for Chinese or Russian or Finnish, to name some other notoriously hard languages).reply",
      "My argument in support of the general immersion concept but against AJATT is that most people can't actually effectively use that method without hitting a wall. The amount differs for everyone but after some ratio (say around 50% of your waking hours) your brain will stop working as well and you need space to process what you learned. Finishing a long study session (say listening to a few YouTube videos then having a session on iTalki with a tutor, etc.) and having my phone in Japanese just sounds like hell to me.reply",
      "Anki definitely works for memorizing the hell out of vocabulary and I also don't regret completing WaniKani, although I would probably choose an Anki only approach if I had to start over. At some intermediate level I stopped looking at the mnemonics completely and just did as many reviews as possible until it stuck.reply",
      "I also got a lot of value out of wanikani even without completing it.I tried and failed several times to get started with Anki before having success with Wanikani. The key diffentiator for me was the learning step. Anki is great for remembering things you were taught or learned outside of it, but using Anki to learn new things is very much a learned skill that Wanikani holds your hand through.I have N2 and am working on N1 now, and feel I still have a very long way to go before getting to CEFR C1. Now I only use Anki with the yomitan and takoboto integrations to quickly add any words I look up, which seems to be working well.reply",
      "I agree with you, but Anki is a generalized flashcard SRS memorization tool, not specifically made for learning Japanese, so it's not within my area of critique; I'm thinking of apps similar to Duolingo. It works extremely well because it helps you memorize very efficiently. One of the few applications that will indeed boost your learning by a lot. Anything requiring manual input rather than a simple Again or Good button choice tends to be worse. Any Anki deck requiring manual input as an answer should not be used.reply",
      "Ajatt is absolutely ridiculous and I never understood how it rose to prominence online.His result to efforts ratio listed back in the days was terrible and reading through is blog - back when it was a blog - was impossible. Everything read like an informercial and never got to the point.Last time I checked it was a book club. Didn\u2019t bother to check this time.reply",
      "And maybe talk to people in Japanese? And do some writing? Not just passive consumption.reply",
      "Apps are really good at the first two though.reply"
    ],
    "link": "https://kanadojo.com",
    "first_paragraph": ""
  },
  {
    "title": "Troubleshooting ZFS \u2013 Common Issues and How to Fix Them (klarasystems.com)",
    "points": 30,
    "submitter": "zdw",
    "submit_time": "2025-09-03T22:07:12 1756937232",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=45120905",
    "comments": [
      "I think ZFS send -w should be default.  You enter a flag if you want to send plaintext.Nice website btw. Does anyone know what tools are used to build this website?reply",
      "Remote send/recv can be frustrating due to the need for root.It can be helpful to remember that while less efficient, for scenarios where ssh as root is a no-go you can ship snapshot syncs (including incremental ones) as files:    zfs send [...] tank > tank.zfssnap\n    cat tank.zfssnap | zfs recv [...] bankreply",
      "What about .. you mounted your system disk and an external drive on another system and now you put it back in your laptop it won\u2019t boot because some pool thing got changed.reply",
      "You might have changed the hostid, and it refuses to mount it as a safety precaution. IIRC it's a quick fix.https://wiki.lustre.org/Protecting_File_System_Volumes_from_...reply",
      "damn i thought it was klarna, the fabled burrito borrowing service. \"wow they're self-hosting zfs? fascinating...\"reply",
      "Does ZFS suffer the equivalent of the dreaded btrfs ENOSPC?reply",
      "ZFS can hit \u201cNo space left on device\u201d (ENOSPC) errors if the pool fills up. But unlike btrfs\u2019s infamous ENOSPC woes, ZFS was designed to handle these situations much more gracefully. ZFS actually keeps a bit of \u201cslop space\u201d reserved. So, as you approach full, it stops writes early and gives you a chance to clean things up, instead of running into unpredictable issues or impossible snapshot removals like btrfs sometimes does. You can even tweak how much safety space ZFS reserves, though most users don\u2019t need to touch it.[https://news.ycombinator.com/item?id=11696657]When you run out of space in ZFS, you get a clear error for write attempts, but the system doesn\u2019t end up fragmented beyond repair or force you into tricky multi-step recovery processes. Freeing up space (by deleting files or snapshots, or expanding the pool) typically makes things happy again.[https://bobcares.com/blog/zfs-no-space-left-on-device-how-to...]reply",
      "I thought Btrfs includes a fix by reserving about half a gig up front for that purpose/prevention?reply"
    ],
    "link": "https://klarasystems.com/articles/troubleshooting-zfs-common-issues-how-to-fix-them/",
    "first_paragraph": ""
  },
  {
    "title": "Blogs Used to Be Different (jetgirl.art)",
    "points": 4,
    "submitter": "mkdirpepper",
    "submit_time": "2025-09-07T00:45:22 1757205922",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://jetgirl.art/blogs-used-to-be-very-different/",
    "first_paragraph": "Home Blog Contact\n\n\n                    06 Sep, 2025\n                \n\nI saw someone earlier post about how intrusive it felt to read a personal blog post. They made a point that folks like them who have grown up on short form microblogging like Twitter and Tumblr have a big leap to make when reading longer form blogposts. Not sure how many folks have that same issue but from the blogs I've read in the last decade, there has been a huge shift in content.Ten years ago if you were blogging on Tumblr or Wordpress you were writing to an audience in an attempt to promote something. Your blog would have a theme, a niche, and a sales funnel. Blog every single day about food, cars, videogames, whatever and at the end remind the reader to buy your book or t-shirts. They worked just like Substack would today. \"Make money being a blogger!\" \"Here are the top ten ways to blog!\" \"Blogging is dead! Long Live Blogging!\" \"My free ebook teaches you how to blog!\"Today people still do this with youtube ch"
  },
  {
    "title": "A history of metaphorical brain talk in psychiatry (nature.com)",
    "points": 14,
    "submitter": "fremden",
    "submit_time": "2025-09-06T22:21:55 1757197315",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=45153428",
    "comments": [
      "> we have had little insight into exactly how disturbances in the brain cause psychiatric disordersI recently heard a well-regarded neuropsychiatrist disavow any pretense of connecting his evaluation to the actual organic function of the brain or body. This was surprising for a\u2014as far as I know\u2014 organic-focused subspecialty of a branch of medicine that routinely prescribes pharmaceuticals to achieve organic changes in the brain and body.reply",
      "I mean I sort of get it. When you aren't taking objective data (I don't know what that would even be, brain scans or testing for levels of neurotransmitters, if those levels even mean anything..?) then what can you do besides acknowledge that it's a black box? Guessing what is going on in someone's skull would be disingenuous, no?reply",
      "I heard an interesting talk recently by a Stanford neuroscientist.He was studying standing waves of brain activity among circularly linked groups of neurons.  Neurons can provide both excitatory inputs and inhibitory inputs to other neurons.For a computer programmer, it is easy to imagine excitatory and inhibitory localized phenomena giving rise to all sorts of interesting and complex self-sustaining standing waves.Think of the study of cellular automata by Stephen Wolfram and others, in which various simple localized rules give rise to all sorts of interesting computational phenomena, up to and including Turing Completeness.In animal models such as pigs, these standing waves can be observed to persist for months if not longer.His particular area of interest is to subject the brain to gentle sub-lethal doses of radiation treatment in order to change selected standing waves.My thought is that there may be a qualitative difference between the underlying \"neural hardware\" and the thought processes that \"execute\" on this hardware.It is the bread and butter of computer scientists to reason in a world in which the complexity of software greatly exceeds the simple computational artifacts on which it runs.One might say that chess has information content that is qualitatively dissimilar to the wood-working needed to make a pretty chess board.The information content in DNA is composed of chemically interchangeable A, G, T, and C molecules.  So, one might say that the underlying physics is \"walled off\" from the information content of the DNA.  Evolution has, as it were, a free hand to encode advantageous alleles, with no bias introduced by the underlying physics or chemistry.All this is to say \"Hear hear!\" to this excellent article.The \"metaphorical brain talk\" the author describes may indeed be a conceptual limitation if applied too broadly to the mind.reply"
    ],
    "link": "https://www.nature.com/articles/s41380-025-03053-6",
    "first_paragraph": "Thank you for visiting nature.com. You are using a browser version with limited support for CSS. To obtain\n            the best experience, we recommend you use a more up to date browser (or turn off compatibility mode in\n            Internet Explorer). In the meantime, to ensure continued support, we are displaying the site without styles\n            and JavaScript.Advertisement\nMolecular Psychiatry\nvolume\u00a030,\u00a0pages 3774\u20133780 (2025)Cite this article\n4836 Accesses49 AltmetricMetrics detailsFrom the very beginnings of our field in the late 18th century, psychiatrists have engaged, often extensively, in \u201cmetaphorical brain talk\u201d \u2013 rephrasing descriptions of mental processes in unconfirmed brain metaphors (e.g., \u201cdiseased working of the brain convolutions\u201d). In the late 19th century, Kraepelin criticized the later developments of such approaches, termed \u201cbrain mythology\u201d by the philosopher/psychiatrist Jaspers in 1913. In this essay, I review the history, meaning, and significance of this"
  },
  {
    "title": "Qwen3 30B A3B Hits 13 token/s on 4xRaspberry Pi 5 (github.com/b4rtaz)",
    "points": 280,
    "submitter": "b4rtazz",
    "submit_time": "2025-09-06T10:59:12 1757156352",
    "num_comments": 119,
    "comments_url": "https://news.ycombinator.com/item?id=45148237",
    "comments": [
      "Very impressive numbers.. wonder how this would scale on 4 relatively modern desktop PCs, like say something akin to a i5 8th Gen Lenovo ThinkCentre, these can be had for very cheap. But like @geerlingguy indicates - we need model compatibility to go up up up! As an example it would amazing to see something like fastsdcpu run distributed to democratize accessibility-to/practicality-of image gen models for people with limited budgets but large PC fleets ;)reply",
      "I think it is all well and good, but the most affordable option is probably still to buy a used MacBook with 16/32 or 64 GB (depending on the budget) unified memory and install Asahi Linux for tinkering.Graphics cards with decent amount of memory are still massively overpriced (even used), big, noisy and draw a lot of energy.reply",
      "> and install Asahi Linux for tinkering.I would recommend sticking to macOS if compatibility and performance are the goal.Asahi is an amazing accomplishment, but running native optimized macOS software including MLX acceleration is the way to go unless you\u2019re dead-set on using Linux and willing to deal with the tradeoffs.reply",
      "Get an Apple Silicon MacBook with a broken screen and it\u2019s an even better deal.reply",
      "It just came to my attention that the 2021 M1 Max 64gb is less than $1500 used. That\u2019s 64gb of unified memory at regular laptop prices, so I think people will be well equipped with AI laptops rather soon.Apple really is #2 and probably could be #1 in AI consumer hardware.reply",
      "Apple is leagues ahead of Microsoft with the whole AI PC thing and so far it has yet to mean anything. I don't think consumers care at all about running AI, let alone running AI locally.I'd try the whole AI thing on my work Macbook but Apple's built-in AI stuff isn't available in my language, so perhaps that's also why I haven't heard anybody mention it.reply",
      "People don\u2019t know what they want yet, you have to show it to them. Getting the hardware out is part of it, but you are right, we\u2019re missing the killer apps at the moment. The very need for privacy with AI will make personal hardware important no matter what.reply",
      "> People don\u2019t know what they want yet, you have to show it to them\n\nHenry Ford famously quipped that had he asked his customers what they wanted, they would have wanted a faster horse.reply",
      "Two main factors are holding back the \"killer app\" for AI. Fix hallucinations and make agents more deterministic. Once these are in place, people will love AI when it can make them money somehow.reply",
      "How does one \u201cfix hallucinations\u201d on an LLM? Isn\u2019t hallucinating pretty much all it does?reply"
    ],
    "link": "https://github.com/b4rtaz/distributed-llama/discussions/255",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page. There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page. There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n -\n           \n Device: 4 x Raspberry Pi 5 8GB\nDistributed Llama version: 0.16.0\nModel: qwen3_30b_a3b_q40\nBeta\nWas this translation helpful?\nGive feedback.\n"
  },
  {
    "title": "The maths you need to start understanding LLMs (gilesthomas.com)",
    "points": 468,
    "submitter": "gpjt",
    "submit_time": "2025-09-02T23:10:47 1756854647",
    "num_comments": 100,
    "comments_url": "https://news.ycombinator.com/item?id=45110311",
    "comments": [
      "Way back when, I did a masters in physics. I learned a lot of math: vectors, a ton of linear algebra, thermodynamics (aka entropy), multi-variable and then tensor calculus.This all turned out to be mostly irrelevant in my subsequent programming career.Then LLMs came along and I wanted to learn how they work. Suddenly the physics training is directly useful again! Backprop is one big tensor calculus calculation, minimizing\u2026 entropy! Everything is matrix multiplications. Things are actually differentiable, unlike most of the rest of computer science.It\u2019s fun using this stuff again. All but the tensor calculus on curved spacetime, I haven\u2019t had to reach for that yet.reply",
      "That past work will pay off even more when you start looking into diffusion and flow-based models for generating images, videos, and sometimes text.reply",
      "Breakthrough in image generation speed literally came from applying better differential equations for diffusion taken from statistical mechanics physics papers:https://youtu.be/iv-5mZ_9CPYreply",
      "For me, it's the very basics of general relativity which made the distinction between the cotangent and tangents space click. Optimisation on Riemannian manifolds might give an opportunity to apply more interesting tensor calculus with  a non-trivial metric.reply",
      "I have the same experience but with a masters in control theory. Suddenly all the linear algebra and differential equations are super useful in understanding this.reply",
      "Well, calculus on curved space, please let me introduce you to: https://arxiv.org/abs/2505.18230\n(This is self advertising) If you know how to incorporate time into that, I am interested.reply",
      "Any reason you didn't pick up computer graphics before? Everything is linear algebra and there's even actual physics involved.reply",
      "Is that you Will Huntingreply",
      "For me, working through Karpathy's video series (instead of just \"watching\" them) helped me tremendously to understand how LLMs work and gave me the confidence to read through more advanced material, if I feel like it. \nBut to be honest, the knowledge I gained through his videos are already enough for me. It's kind of like learning how a CPU works in general and ignoring all the fancy optimization steps that I'm not interested in.Thanks Andrej for the time and effort you put into your videos.reply",
      "+1. His cs231n class he taught at Stanford gave me a great foundation.reply"
    ],
    "link": "https://www.gilesthomas.com/2025/09/maths-for-llms",
    "first_paragraph": "This article is the second of three \"state of play\" posts that explain how Large Language\n  Models work, aimed at readers with the level of understanding I had in mid-2022: techies\n  with no deep AI knowledge. It grows out\n  of part 19 in my series\n  working through Sebastian Raschka's book\n  \"Build a Large Language Model (from Scratch)\".\n  You can read the first post in the series here.Actually coming up with ideas like GPT-based LLMs and doing serious AI research requires\nserious maths.  But the good news is that if you just want to understand how they\nwork, while it does require some maths, if you studied it at high-school at any time since the 1960s, you did all of the groundwork\nthen: vectors, matrices, and so on.One thing to note -- what I'm covering here is what you need to know to understand inference -- that\nis, using an existing AI, rather than the training process used to create them.  That's also not\nmuch beyond high-school maths, but I'll be writing about that later on.So,"
  },
  {
    "title": "Stop writing CLI validation. Parse it right the first time (hackers.pub)",
    "points": 77,
    "submitter": "dahlia",
    "submit_time": "2025-09-06T18:20:26 1757182826",
    "num_comments": 27,
    "comments_url": "https://news.ycombinator.com/item?id=45151622",
    "comments": [
      "This is a recurring idea: \"Parse, don't validate\". Previously:https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-va... (2019, using Haskell)https://www.lelanthran.com/chap13/content.html (April 2025, using C)reply",
      "The author credits Alexis King at the beginning and links to that post.reply",
      "> Think about it. When you get JSON from an API, you don't just parse it as any and then write a bunch of if-statements. You use something like Zod to parse it directly into the shape you want. Invalid data? The parser rejects it. Done.Isn\u2019t writing code and using zod the same thing? The difference being who wrote the code.Of course, you hope zod is robust, tested, supported, extensible, and has docs so you can understand how to express your domain in terms it can help you with. And you hope you don\u2019t have to spend too much time migrating as zod\u2019s api changes.reply",
      ">> // This is a parser>> const port = option(\"--port\", integer());I don't understand. Why is this a parser? Isn't it just way of enforcing a type in a language that doesn't have types?I was expecting something like a state machine that takes the command line text and parses it to validate the syntax and values.reply",
      "I like just writing functions for each valid combination of flags and parameters. Anything that isn\u2019t handled is default rejected. Languages like Erlang with pattern matching and guards make this a breeze.reply",
      "That's basically what my MainArgs Scala library does: take either a method definition or class structure and use it's structure to parse your command line arguments. You get the final fields you want immediately without needing to imperatively walk to args array (and probably getting it wrong!)https://github.com/com-lihaoyi/mainargsreply",
      "I don't see anything in the post or the linked tutorial that gives a flavor of the user experience when you supply an invalid option. I tried running the example, but I've forgotten too much about Node and TypeScript to make it work. (It can't resolve the @optique references.) What happens when you pass --foo, --target bar, or --port 3.14?reply",
      "I had a similar question: to me, the output format \u201cor\u201d statement looks like it might deterministically pick one winner instead of alerting the user that they erred. A good parser is terrific, but it needs to give useful feedback.reply",
      "And that is why there are plenty of parser generators\nso you dont have to write the parser yourself\nevery time.reply",
      "I, for one, do think the world needs more CLI argument parsers :)This project looks neat, I've never thought to use parser combinators for something other than left-to-right string/token stream parsing.And I like how it uses Typescript's metaprogramming to generate types from the parser code. I think that would be much harder (or impossible) in other languages, making the idiomatic design of a similar similar library very different.reply"
    ],
    "link": "https://hackers.pub/@hongminhee/2025/stop-writing-cli-validation-parse-it-right-the-first-time",
    "first_paragraph": "\u6d2a \u6c11\u6199 (Hong Minhee) @hongminhee@hackers.pubTable of ContentsI have this bad habit. When something annoys me enough times,\nI end up building a library for it. This time, it was CLI validation code.See, I spend a lot of time reading other people's code. Open source projects,\nwork stuff, random GitHub repos I stumble upon at 2 AM. And I kept noticing this\nthing: every CLI tool has the same ugly validation code tucked away somewhere.\nYou know the kind:It's not even that this code is hard to write. It's that it's everywhere.\nEvery project. Every CLI tool. The same patterns, slightly different flavors.\nOptions that depend on other options. Flags that can't be used together.\nArguments that only make sense in certain modes.And here's what really got me: we solved this problem years ago for other types\nof data. Just\u2026 not for CLIs.There's this blog post that completely changed how I think about parsing.\nIt's called Parse, don't validate by Alexis King. The gist? Don't parse data\ninto a loose type"
  },
  {
    "title": "We hacked Burger King: How auth bypass led to drive-thru audio surveillance (bobdahacker.com)",
    "points": 281,
    "submitter": "BobDaHacker",
    "submit_time": "2025-09-06T13:04:51 1757163891",
    "num_comments": 157,
    "comments_url": "https://news.ycombinator.com/item?id=45148944",
    "comments": [
      "Blog seems to be down.https://web.archive.org/web/20250906150322/https://bobdahack...",
      "Reading between the lines, it looks like the story behind the story here is that this security researcher followed responsible disclosure policies and confirmed that the vulnerabilities were fixed before making this post, but never heard back anything from the company (and thus didn\u2019t get paid, although that\u2019s only a fair expectation if they\u2019ve formally set expectations for paying out on stuff like this ahead of time).I\u2019m curious about the legal/reputational implications of this.I personally found some embarrassing security vulnerabilities in a very high profile tech startup and followed responsible disclosure to their security team, but once I got invited to their HackerOne I saw they had only done a handful of payouts ever and they were all like $2k. I was able to do some pretty serious stuff with what I found and figured it was probably more like a $10k-$50k vuln, and I was pretty busy at the time so I just never did all the formal write up stuff they presumably wanted me to do (I had already sent them several highly detailed emails) because it wouldn\u2019t be worth a measly $2k. Does that mean I can make a post like this?reply",
      "They heard back from the company alright, they DMCA'd the post: https://infosec.exchange/@bobdahacker/115158347003096276The screenshot of the email lacks detail so I don't know what part of the DMCA the author breached here, but this feels a lot like your standard DMCA abuse.This AI generated takedown was funded in part by a Y-Combinator: https://cyble.com/press/cyble-recognized-among-ai-startups-f...reply",
      "> standard DMCA abuseFirst thing first. This is NOT DMCA abuse. The DMCA is the only way to communicate with web companies and take down content. As such, it has become the legitimate way to take down any content that needs to be taken down, in the absence of alternatives.Second, the author is posting zero-days with very detailed explanations to get access to internal systems of global corporations, affecting hundreds of thousands of employees and hundreds of millions of customers. There is legitimate purpose to take down the content.There are some nuances to appreciate. Even if a vulnerability has been \"closed\" the day before posting, it's quite possible that the company barely had time to change \"admin\" to \"admin2025\". It's not gonna take a genius to try and pivot and steal all customers/employees data and ransomware the whole company, all thanks to the author detailed posting! Then the author will be found partly responsible and get 10 years in prison. (This circles back to why the DMCA had legitimate purpose in the first place, quite ironically to save both the author and the company!)The author had multiple posts like that just in the last month. If I were the author. I'd start by observing a very strict 90 days window before any disclosure, starting from the time the company has been notified. Repeat every week at the start and then monthly, through different communication channels, to ensure they had more than enough time to receive and act. This could very well become the difference between a life and a life in prison.This Burger King seems to do their job well, which is a nice change from the previous posts. They cut access within a day and DMCAed the article within hours.As the author is quickly escalating their journey (can't be long before it's military, finance, oil), they're soon gonna find that the other party is more than willing to fight back, including DMCA, legal action, or sending hitman to your doors (yes this is a thing when you play in the big leagues!). Now is good time to figure out what they want to do next. Fighting the DMCA request is probably not it. :)reply",
      "I still don\u2019t get it. What does copyright have to do with the post?reply",
      "Why do you think copyright has anything to do with the post?The only way to take down content is to fill a \"DMCA\" form to the provider, so Burger King filled a DMCA form to take down the content. If they had to fill a \"foobar\" form, they'd have filled a \"foobar\" form instead. It's just following the procedure that is available.reply",
      "Someone should see if YC will fund an ai-first company to help individuals and companies fight back against DMCA abuse and seek compensationreply",
      "Interested to hear the financial model for this one.reply",
      "Flat fee, plus percentage of the winnings from damage claims?reply",
      "As a nitpick, you\u2019re describing coordinated disclosure.Branding it as \u201cresponsible\u201d puts the thumb on the scale that somehow not coordinating with the vendor is irresponsible.reply"
    ],
    "link": "https://bobdahacker.com/blog/rbi-hacked-drive-thrus/",
    "first_paragraph": ""
  },
  {
    "title": "What to Do with an Old iPad (odb.ar)",
    "points": 59,
    "submitter": "owenmakes",
    "submit_time": "2025-09-05T17:14:16 1757092456",
    "num_comments": 37,
    "comments_url": "https://news.ycombinator.com/item?id=45140973",
    "comments": [
      "So, if you\u2019re reading this post right now, it means my server is working, and that this site is being served by an iPad 2 from 2012, running iOS 6.1.3 and Insomnia to keep it connected to Wi-Fi.When I pinged your domain it came back as CloudFlare. Did you meanSo, if you\u2019re reading this post right now, it means this site is being served CloudFlare.I jest. I imagine you did this to keep your IP address private? Just curious why it wasn't mentioned in the blog post? My original question was going to be if your ISP may have a problem with your set up (giving it's on the front page of HN and will be experiencing some traffic).reply",
      "> your ISP may have a problem with your set up (giving it's on the front page of HN and will be experiencing some traffic)Does your ISP have a problem when your computer/phone/etc does a cloud backup? Or when you torrent? Because both of those will max out your upload bandwidth much more than hosting a static website.I think the concerns about ISPs complaining are extremely overblown on HN, but happy to be proven wrong.reply",
      "> your ISP may have a problem with your set up (giving it's on the front page of HN and will be experiencing some traffic).The page is like 30KB + that 3 MB image. The avg ~two hits per second that you get from a HN top position iirc (this is fairly old data though) is 6MB/s for a few hours, say 6 hours, that's 130GB. Unless it's hosted via a wireless uplink (4g/satellite/..), I don't think there's an ISP in the world that cares about using 130GB extra during a random month. Even in Belgium I think the caps were around twice that ten years agoreply",
      "wait, top billings on HN brings in 2 hits/sec of traffic? That is an unbelievably low number considering how many sites fall over under that pressurereply",
      "Exactly. I think this shows two things quite nicely:- Very few sites need to cope with more than a handful of hits per second. A regular DSL connection and desktop PC can host the vast majority of them; you don't need clouds if you don't want them. (Even under variable load: if you need 80% of the systems more than 40% of the time, scaling down is probably not worth the cloud premium)- If a site can't handle HN, that's a software limitation. Compare Wordpress' insanely slow page generation to simple blog software that generates pages in 2 milliseconds, or even to hosting the blog as static HTML files. I'd not be surprised if you can serve Wikipedia's page text from like one Raspberry Pi 5 per country. Not that you'd want to do that for reliability and redundancy reasons, plus you have the constant stream of edits to process and templates to (re-)render. Media and blob hosting is also a separate beast. Thankfully, most sites are not in the top ten world's most popular websites and people get away with running Wordpress until they meet HN and need to turn it into a static site generator by installing a plugin that turns each pageload into a cache lookupreply",
      "Closer to 10 at peaks, but a lot of sites are just fragile.reply",
      "cloudflare is caching the image:    ```\n    accept-ranges: bytes\n    age: 5397\n    alt-svc: h3=\":443\"; ma=86400\n    cache-control: max-age=14400\n    cf-cache-status: HIT\n    content-length: 3013598\n    content-type: application/octet-stream\n    date: Sat, 06 Sep 2025 23:14:32 GMT\n    last-modified: Sat, 06 Sep 2025 21:44:35 GMT\n    server: cloudflare\n    vary: accept-encoding\n\n    ```reply",
      "Only slightly related, but I recently wanted to show some instrumentation on an old android phone. Now there are many good ways to do this. But I chose none of them, Instead I had just installed termux on the phone and noticed they had some sort of X11 package and went \"This, I want this\"And honestly, it sort of rocked, despite using X11 for many years I have never actually sat down and just played with a raw, bare X server, only the encrusted, encapsulated ones tied down for desktop use. best I can describe it is having a a shared network attached monitor. I was using it sort like you would have a large central status display in an operations center, but small, on a phone.If curious, I wanted to monitor system temps while playing a full screen game using the excellent but unsearchable \"trend\" program.http://www.thregr.org/~wavexx/software/trend/reply",
      "Networked X11 was a killer app back in the workstation days. \"The network is the computer,\" was totally true in practice. With the rise of Wayland, I feel like we're due for a new networked interaction protocol, maybe rising from the ashes of X and also NeWS.reply",
      "Check out waypipe[1] if you haven't.[1] https://gitlab.freedesktop.org/mstoeckl/waypipe/reply"
    ],
    "link": "http://odb.ar/blog/2025/09/05/hosting-my-blog-on-an-iPad-2.html",
    "first_paragraph": "\nSep 5, 2025\n      I recently inherited my parents\u2019 old iPad 2. It had iOS 9 on it and was barely usable, in part due to how slow it was but mostly because of old SSL certificates and apps stopping support. But I wanted to give it some life because I hate to see a working machine go to waste. So I asked around and got a great answer:The iPad 2 can be downgraded to iOS 6.1.3 or 8.4.1. Both offer better performance than iOS 9 and have untethered jailbreaks. Once downgraded and jailbroken you can sideload hours and hours worth of games. A lot from that era are IAP-free.So that\u2019s where my journey began.Jailbreaking the iPad 2 is fairly easy thanks to iOS CFW Guide(I didn\u2019t even realize I was following the guide for iPad 3, but it worked perfectly nonetheless). Once that is done, you can downgrade using Legacy-iOS-kit which is also pretty straightforward. And that\u2019s it: you have your iPad jailbroken and on the software it was meant to run. iOS 6.1.3 is not as useful as some of the newer ver"
  },
  {
    "title": "Oldest recorded transaction (avi.im)",
    "points": 136,
    "submitter": "avinassh",
    "submit_time": "2025-09-06T14:34:55 1757169295",
    "num_comments": 61,
    "comments_url": "https://news.ycombinator.com/item?id=45149626",
    "comments": [
      "Quote:    I wonder how people store dates older than this. \n    \n    Maybe if I\u2019m a British Museum manager, and I want to keep theft inventory details. \n    \n    How do I do it? As an epoch? Store it as text?\n\nThe answer: Text.Many items in museums have no specific date but Circa X.\nI have spent a lot of time in the early 2000s to enable \"Sort by date\" in museum registrars software I was maintaining despite having it textualreply",
      "> Sort by date\" in museum registrars softwareThis sounds like the perfect invitation for some old school over engineering.I'm already having so much fun running through every possible input in my head, and I would inevitably write a serious mountain of steaming code to support it.reply",
      "I simply built a side table in the DB, whereas any expression was associated with a range of a 2 YEARS (numbers).any time they enter and expression (auto complete), it they introduce a new one, they needed to add the range.this did the job.the time I spent the most was to sort the existing data and restore it in the new dictionary.reply",
      "That's got to be a study in exceptions. Let's start with which calendar we're referencing. C14 anybody?reply",
      "I assume an integer field is sufficient since mostly it's only the year that they know not the exact date.reply",
      "Text is better together with specific formats like Circa, ranges, exact years or dates, and unknown.reply",
      "No, you need a lot more complexity if you really wanted to represent it semantically. The assumption that people in the past used calendars with sequentially numbered years you just need to offset, is simply wrong.You have things like \"in the Xth year of the reign of King Y\", where we can easily relate multiple entries with different values for X, but don't actually know which CE years they correspond to. Even weirder is the Roman habit of recording \"the year of the consulship of X and Y\", which doesn't even allow you to relate any two different years at all without a reference table (which we don't have completely). And no, \"years from the foundong of the city\" wasn't a thing.reply",
      "Turing complete DSL, here we come!reply",
      "Tiny language model.reply",
      "> The answer: Text.That was my immediate thought too and led to me wondering: How do you represent BCE dates in ISO 8601?Apparently ISO 8601 always supports YYYY from 0000 (1 BCE) to 9999 (9999 CE). ISO 8601 can also extend beyond those limits if agreed upon by sender and receiver: e.g. -0001 (2 BCE), -0002 (3 BCE), etc.reply"
    ],
    "link": "https://avi.im/blag/2025/oldest-txn/",
    "first_paragraph": "The other day I posted a tweet with this image which I thought was funny:This is the oldest transaction database from 3100 BC - recording accounts of malt and barley groats. Considering this thing survived 5000 years (holy shit!) with zero downtime and has stronger durability guarantees than most databases today.I call it rock solid durability.This got me thinking, can I insert this date in today\u2019s database? What is the oldest timestamp a database can support?So I checked the top three databases: MySQL, Postgres, and SQLite:Too bad you cannot use MySQL for this. Postgres and SQLite support the Julian calendar and the lowest date is Jan 01, 4713 BC:I wonder how people store dates older than this. Maybe if I\u2019m a British Museum manager, and I want to keep theft inventory details. How do I do it? As an epoch? Store it as text? Use some custom system? How do I get it to support all the custom operations that a typical TIMESTAMP supports?Thanks to aku, happy_shady, Mr. Bhat, and General Bruh"
  },
  {
    "title": "Cape Station, future home of an enhanced geothermal power plant, in Utah (gatesnotes.com)",
    "points": 149,
    "submitter": "mooreds",
    "submit_time": "2025-09-06T20:26:13 1757190373",
    "num_comments": 90,
    "comments_url": "https://news.ycombinator.com/item?id=45152569",
    "comments": [
      "Super glad to be a part of this. Our MicroPulse Measurement While Drilling Systems have been used to drill numerous wells for Fervo. We also developed a first of its kind navigation system for the first full scale Eavor loop in Germany.Heres a presentation we did on the system last year alongside Schlumberger. https://m.youtube.com/watch?v=kfOGKfEoPb0?t=7852s Potatoe quality but my part starts at 2:10:52.It\u2019s absolutely awesome deploying our super rugged, super high temp drilling technologies for GeoThermal.If you\u2019re interested in working on this kind of tech we\u2019re hiring.reply",
      "> If you\u2019re interested in working on this kind of tech we\u2019re hiring.All jobs onsite in Houston: https://www.erdosmiller.com/jobsInteresting that the tech sales job is bilingual (haven't seen that too often).reply",
      "Thank you!reply",
      "I have been following this company and several others (Quaise, Fervo, Sage) in the EGS Space for a little bit now, and I think we are on the cusp of a huge breakthrough in baseload renewable energy. This site in Utah is one of the largest test cases that expands the use of EGS to a much broader area than just a few geothermal hot spots. Prices are dropping dramatically, and these things are moving quickly beyond the R&D phase. There is a world where every major data center across the Western US has its own base load power supply that has essentially no pollution, no footprint, no hazardous waste, and no need for complicated permitting. EGS truly could be a game changer in the world's push to decarbonize. I'm super excited.reply",
      "At least in Tuscany - where there is a cluster of geothermal power plants creating 1/3 of the region electricity (it should reach 40% in a few years) - they had to invent special filters to lower the emission of mercury and hydrogen sulfide https://www.enelgreenpower.com/stories/articles/2024/10/geot...I don't know if it's \"no footprint\" at all. For what I know, which is not much, but just what a person living here might know, there's a footprint that can be somehow managed. But I'm not an engineerreply",
      "The plants mentioned in the article are closed systems. They aren\u2019t releasing steam into the atmosphere like the plants you\u2019re referencing.reply",
      "> no pollution, no footprint, no hazardous wasteAs a layman, I assume waste heat would still be an issue? Even so I would also assume it's still way less damaging to the environment than everything else.reply",
      "I'm not quite sure about that. The earths core should generate the same amount of heat (through gravitational friction and radioactive decay) regardless if we tap it or not. If the heat didn't escape somehow already it would slowly get hotter.Whaste heat from nuclear or fusion does contribute to earth heating, though insignificant compared to any source pf c02.But my intuition tells me geothermal wouldn't...Mm. Actually, water vapor is a potent greenhouse gas; and that's how to covert heat to energy. So mabie it would indeed be significant.reply",
      "TFA states the Cape Station plant (created and operated by a company called Fervo) are closed systems - they capture the emissions so no water is wasted or spewed into the environment as steam.They deserve big props for this innovation and effort, as historically Utah has frequently been been treated as an industrial dumping grounds.  The long-term ecological damage and visual eyesores due to strip mining, chemical dumping and other pollution is significant.reply",
      "Well, that's just neat!reply"
    ],
    "link": "https://www.gatesnotes.com/utahs-hottest-new-power-source-is-below-the-ground",
    "first_paragraph": ""
  },
  {
    "title": "Anonymous recursive functions in Racket (github.com/shriram)",
    "points": 52,
    "submitter": "azhenley",
    "submit_time": "2025-09-04T00:39:33 1756946373",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=45122069",
    "comments": [
      "The Racket Discourse thread on this: https://racket.discourse.group/t/illustrate-anonymous-recurs...(Just me suggesting other alternatives right now)reply",
      "All the languages I like have niche ecosystems which have a lot of drawbacksreply",
      "Tangential, but I've been wanting to dive back into FP for quite sometime; for context I used Haskell at a payments corp ~10 years back, working mostly with Typescript, Zig and Nim for the past couple of years, realizing I am basically trying to do FP in most of these languages.Is Racket a good language to pick up and re-learn my concepts + implement some tools? Or are there some other languages that would be better to both brush up and learn the syntax of, I do not want to fight the syntax but rather express functions as seamlessly as I can.reply",
      "Racket is a rich and powerful language, but it is also designed with certain specific ideas in mind. You can learn more about the \"zen\" of Racket here:https://cs.brown.edu/~sk/Publications/Papers/Published/fffkb...That might help you decide whether Racket will help you with what you're trying to brush up on.reply",
      "Thank you for the response professor, really appreciate it from one of the creators of the language itself;I did give your document a read and my (naive) understanding is you basically create DSLs for each sub-part of the problem you're trying to solve?>A LOP-based software system consists of multiple, cooperating components, each written in domain-specific languages.and>cooperating\nmulti-lingual components must respect the invariants that each\nparticipating language establishes.So basically you're enforcing rules/checks at the language level rather than compile time?How would you recommend a complete novice attain this sort of state of mind/thought process while working in this language? Because my thoughts go simply to creating types and enforcing type-checking coupled with pure functions to avoid successful-fail at runtime programs.Also how would one navigate the complexity of multiple abstractions while debugging?The paper also mentions a web-server language (footnote 27), if I use racket will I be productive \"out of the box\" or is the recommended path to take is writing a web server language first.Thank you again for taking the time to respond, and please do forgive me for these naive questions.reply",
      "These are great questions!Yes, what you're describing is the \"extreme\" version of LOP. Of course you don't have to do it that aggressively to get working code.Two references I like to point to:https://www.hashcollision.org/brainfudge/https://beautifulracket.com/They will give you a sense of how one uses LOP productively.You do not need to write a \"web server language\"! To the contrary, the Web server provides several languages to give you a trade-off between ease and power in writing server-side Web applications. So you can just write regular Racket code and serve it through the server. The server also comes with some really neat, powerful primitives (orthogonal to LOP) \u2014 like `send/suspend` \u2014 that make it much easier to write server-based code.reply",
      "Understood. Will dive deeper into Racket to get a proper understanding since it's created an itch because I still don't understand it :)Even if I don't go fully into it as a production language, hopefully it'll open some avenues of thought that I do not yet possess.Thank you for taking the time to respond, have a great day!reply",
      "This isn't specific to racket, any implementation of R6RS scheme should fully support this, although the define-syntax form is slightly different.I checked this with my R6RS implementation and it works just as you would expect (https://github.com/maplant/scheme-rs)reply",
      "How close are you to getting a \"full\" implementation of R6RS?\nI've been thinking of picking either your project or Steel[0] for a Rust Scheme thing[0] https://github.com/mattwparas/steelreply",
      "I\u2019m hoping by the end of the year. All of the \u201cdifficult\u201d things are finished (control flow, syntax transformers, call/cc, dynamic wind, exceptions, libraries, etc) and it\u2019s just a matter of filling missing base library functions. If there\u2019s something in particular that you need you\u2019re welcome to file and issue or post a message on the discord and I\u2019ll prioritize it.That being said, Steel is excellent and I highly recommend it if you just need R5RS with syntax transformersreply"
    ],
    "link": "https://github.com/shriram/anonymous-recursive-function",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Anonymous recursive functions in Racket\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Some languages, like PowerShell, have \u201canonymous recursive\nfunctions\u201d. That is, normally, a function needs to use a name to refer\nto itself to recur. But \u201canonymous recursion\u201d means the language has\nsome special mechanism by which the function can refer to itself\nwithout having to explicitly introduce a name. In some contexts, this\nis called an anaphoric reference.Here we show how we can easily implement this feature in Racket. The\nfile anon-rec.rkt implements a macro called\nlam/anon\u267b\ufe0f, short for \"lambda with anonymous recursion\".\nThis specifically binds the name $MyInvocation, to mimic the syntax\nof PowerShell, though the $ here does not mean anything special.The file cl"
  },
  {
    "title": "Show HN: Send kind and aspirational words to a stranger who needs it (kindnesssender.com)",
    "points": 8,
    "submitter": "mketab",
    "submit_time": "2025-09-06T23:32:22 1757201542",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=45153863",
    "comments": [
      "Nothing says kind message like having AI write it for you. Might as well put \u201cdictated but not read\u201d at the bottom of each message.reply",
      "Thanks for the feedback. The objective is to spread kindness, regardless of the tool. Also, the final AI-generated message is provided to the user to read and then send, so \"dictated but not read\" is not applicable.reply",
      "I\u2019d rather have pre-defined templates than some AI magic button. That way you can set a mood and intent for messages without relying on an llm ( which can open up messages to be rather unkind).reply"
    ],
    "link": "https://kindnesssender.com/",
    "first_paragraph": "\n                Send kind and aspirational words to a stranger who needs it\n            \n                                    Write your own heartwarming message, or let AI craft beautiful, culturally-aware messages in 14+ languages for someone going through tough times.\n                                \n                                    Our AI ensures your message is positive and safe, protecting both senders and receivers from harmful content.\n                                \n                                    A random person who signed up to receive kind words gets your message delivered to their inbox.\n                                \n                                    Your email will be stored and used as future random receiver, don't worry we don't spam your inbox. Max 1 email per day and you can unsubscribe.\n                                \n                                    Reply anonymously to messages you receive and rate them to help improve our community. Both features "
  },
  {
    "title": "Rust tool for generating random fractals (github.com/benjaminrall)",
    "points": 10,
    "submitter": "gidellav",
    "submit_time": "2025-09-06T21:56:05 1757195765",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://github.com/benjaminrall/chaos-game",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A Rust implementation of the 'Chaos Game' algorithm for generating fractal images from randomness.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.A simple command-line application written in Rust for generating fractals using the 'Chaos Game' algorithm.This application generates fractals using the following simple, iterative algorithm:By adjusting the number of vertices, the distance ratio, and optionally adding additional\nrestrictions to the choice of vertices, a huge variety of intricate fractal patterns can be generated. More details on the algorithm can be found here.Below are some example fractals generated with this application.To use the application, you can simply install it using Cargo:You can then run it from the command line, providing arguments "
  }
]