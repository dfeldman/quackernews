[
  {
    "title": "Bollards: Why and What (josh.works)",
    "points": 255,
    "submitter": "mooreds",
    "submit_time": "2024-05-05T19:54:46",
    "num_comments": 142,
    "comments_url": "https://news.ycombinator.com/item?id=40267675",
    "comments": [
      "This article is a bit difficult to read, as it seems to be written with a heavy dose of sarcasm/irony.I genuinely can't tell what the author is arguing for, as it's extremely difficult to tell if he's quoting things because he agrees or disagrees with them.My biggest question is: is the author arguing that there should be spaced bollards along literally every sidewalk in the country/world, and around all edges of every parking lot?If so, it's an interesting idea, but I also can't help but think that would not just be expensive, but also possibly extremely ugly.I'm curious if there are estimates of both installation cost as well as lives saved and other damage to buildings avoided.",
      "i'm not entirely sure what the author intended, but what i took from the article is that there should be a general consensus that some sort of physical separation between cars and pedestrians is necessary to protect pedestrians from cars, and failing to build that protection means you're failing to protect pedestrians.it's up to each individual jurisdiction to decide how much they want to protect pedestrians, but when a pedestrian is killed by a car it should be acknowledged that a bollard probably could have prevented that, and not doing the thing that would have protected a pedestrian was a decision that was made for reasons such as \"it's expensive\" or \"it's ugly\".  The people or organizations making decisions to not protect pedestrians should be held liable for choosing to endanger pedestrians.too often, the response to a car running into a person or building is to either claim nothing can be done about it, or to blame the driver.  no protections from cars is seen as a road designer following best practices, and they've done their job acceptably well.  and that should be corrected.",
      "> The people or organizations making decisions to not protect pedestrians should be held liable for choosing to endanger pedestrians.Seems a bit extreme. If the incidence of pedestrian accidents is relatively low, it's perfectly reasonable to prioritize aesthetics and cost considerations.",
      "I\u2019m pretty sure that at the end of the day, it comes down to cost.The author writes as if people who work in this space are not smart. I\u2019m pretty sure everyone realizes bollards saves lives, but are cities going to pay for it? Will constituents support it? Will people be okay either ballooning budgets for transportation works? Especially at the same time when people are asking for money for teachers or some other important issue. Paying for miles of bollards is an easy cut.",
      ">I\u2019m pretty sure everyone realizes bollards saves lives... Will constituents support it?and this is, i think, the whole point.  we're not stupid.  we all know that bollards save pedestrian lives.  for a relatively low cost.  and we as a society have just decided nah, we're not gonna do that.  it is, as you say \"an easy cut\".  and some of us feel it should not be that way.",
      "The other part of this decision not to protect human-powered mobility (pedestrian, bicycle, wheelchair, etc.) is that we allow or encourage automotive traffic as a constant, and _then_ we choose not to protect people. It\u2019s a two step process where we make an active choice to create danger and then a second choice not to mitigate the danger.",
      "Can\u2019t speak for the author, but IMO\u2026Everywhere a pedestrian might be? Probably not.  But, we can do a MUCH better job building sidewalks and roads to increase safety.  Lower speeds (not just posted limits, but road design).  Raised sidewalks that are continuous, not the disjointed mess we have in much of the US.At bus stops, schools, and any shopping area where cars are parked directly adjacent to eh store front? Yeah, bollards should be installed.",
      "The trouble is that we\u2019re rarely \u201cbuilding sidewalks and roads\u201d in a large empty space. Either there is already a road there, or there\u2019s other immovable constraints like buildings and landmarks. If you\u2019ve got some large empty space, then sure you can build a safe road and sidewalk. But the reality is that\u2019s rarely possible, especially in urban areas that were originally planned in the horse and buggy era. The roads in the UK are narrow, and there\u2019s limited parking space, so people park half on the sidewalk and make the road even narrower.",
      "I\u2019m not really sure why a large empty space is needed to build a safer road/sidewalk?Just looking out my front door (suburban DC)\u2026 the road is posted 35mm but you can \u201csafely\u201d go 50+ because the lanes are wide and relatively straight.  But, there are uncontrolled/no-signal entrances to neighborhoods every 1/4 mile or so, so speeds really should be <30mph (IMO). There are very few signaled pedestrians crossings, so if you need to cross, it\u2019s a game of frogged, or walk a mile out of your way to the nearest full intersection. The bike lanes on the road are just painted on, no protection for cars. And on and on.  None of this requires more space - just DOT employees who can think beyond getting around in a car.We could easily slow the road by narrowing the lane.  We could easily add signalled ped crossings.  We could easily make the sidewalks continuous (same grade through intersections instead of road level - the benefit is cars enter \u201cpedestrian space\u201d when crossing instead of the other way around).  We could add floppy bollards (not sure what they\u2019re called) to give more separation between cars and bicycles (won\u2019t stop a really bad driver, but will at least stop cars from using the bike lane as yet another car lane).",
      "While vehicles partially on the sidewalk are a nuisance, they do provide a barrier between pedestrians and vehicles, and do have a traffic calming effect by narrowing the travel lane."
    ],
    "link": "https://josh.works/bollards",
    "first_paragraph": "The what and the why in a single image:"
  },
  {
    "title": "Social engineering takeovers of open source projects (openssf.org)",
    "points": 201,
    "submitter": "mooreds",
    "submit_time": "2024-05-05T19:53:48",
    "num_comments": 77,
    "comments_url": "https://news.ycombinator.com/item?id=40267666",
    "comments": [
      "I'm a maintainer (one of many) of an open source project, and this topic has been on my mind a lot lately as I review PRs.I am more suspicious of PRs from new contributors by default now. Of course I keep these suspicions to myself, but besides simply reviewing code for all the regular things, I now ask myself \"what sort of sneaky thing could they be doing that appears benign on the surface?\"",
      "That's great that you are considering this more now.But the xy story taught us, that every contributor is dangerous, the most dangerous ones are probably the most helpful and most skilled contributors. If someone barely get's a PR accepted, they probably lack the skills to add a sophisticated backdoor.Another thing that was not talked about a lot: There are many ways to compromise existing maintainers. Compromising people is the core competency of intelligence, happens all the time, and most cases probably never come to public knowledge.",
      "> Compromising people is the core competency of intelligence, happens all the time, and most cases probably never come to public knowledge.Yea. It would almost be strange if security service didnt consider the route of getting \"kompromat\" on a developer to make them \"help\" them.",
      "They would be really bad at their job, if they didn't try.",
      "The most secure systems are those that are also resistant to rubber hose cryptography.",
      "I'm sorry, but this is just fear-mongering with no basis in reality. So we've had what, two incidents (xz and eventstream) in how many years? And now maybe possibly perhaps a third attempt? Well whoop-die-doo. It's not evidence of anything other than the process not being watertight, but no one reasonable ever through that in the first place.Every human being you meet on the street can stab you in the eye. Literally nothing stopping anyone from doing that. You need to separate what can happen from what actually happens.",
      "Americans being armed to the teeth stops that. Try that in Texas and find that if you target the wrong ex-marine boomer with blood lust, you find yourself with a bullet in your throat before the stab needle comes within throwing distance of their eyeball.",
      "I don't think the \"armed to the teeth\" theory is correct.  If you were right, people wouldn't honk at each other or otherwise involve themselves in any sort of road rage.  But people rage at each other all the time, and only very rarely does someone get shot.The reason people aren't walking around stabbing you in the eye with a needle is because there is no reason for them to do that.  They gain nothing.  They don't desire that it be done.",
      "Flipside of that being a highest number of school shootings in the world.",
      "Try that in Texas is such a stupid comment.Those kids dying in Uvalde while armed police officers in bullet proof vests cowered is enough proof that every Texan isnt brave.Not everyone is a coward who hides behind their guns to make them feel tough. Additionally, what\u2019s stopping the person from popping a balloon and yelling get down to cause your boomer marine from shitting himself and running in fear before they stab them?Stop embarrassing America with these idiotic posts. This isn\u2019t FB. No need to LPAR.And, to be clear, I\u2019m a gun toting Florida man who owns guns because of the Kyle rittenhouses in this world not black and brown people."
    ],
    "link": "https://openssf.org/blog/2024/04/15/open-source-security-openssf-and-openjs-foundations-issue-alert-for-social-engineering-takeovers-of-open-source-projects/",
    "first_paragraph": "By Robin Bender Ginn, Executive Director, OpenJS Foundation; and Omkhar Arasaratnam, General Manager, Open Source Security Foundation"
  },
  {
    "title": "Deep Reinforcement Learning: Zero to Hero (github.com/alessiodm)",
    "points": 45,
    "submitter": "alessiodm",
    "submit_time": "2024-05-05T23:12:28",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=40269489",
    "comments": [
      "While trying to learn the latest in Deep Reinforcement Learning, I was able to take advantage of many excellent resources (see credits [1]), but I couldn't find one that provided the right balance between theory and practice for my personal experience. So I decided to create something myself, and open-source it for the community, in case it might be useful to someone else.None of that would have been possible without all the resources listed in [1], but I rewrote all algorithms in this series of Python notebooks from scratch, with a with a \"pedagogical approach\" in mind. It is a hands-on step-by-step tutorial about Deep Reinforcement Learning techniques (up ~2018/2019 SoTA) guiding through theory and coding exercises on the most utilized algorithms (QLearning, DQN, SAC, PPO, etc.)I shamelessly stole the title from a hero of mine, Andrej Karpathy, and his \"Neural Network: Zero To Hero\" [2] work. I also meant to work on a series of YouTube videos, but didn't have the time yet. If this posts gets any type of interest, I might go back to it. Thank you.P.S.: A friend of mine suggested me to post here, so I followed their advice: this is my first post, I hope it properly abides with the rules of the community.[1] https://github.com/alessiodm/drl-zh/blob/main/00_Intro.ipynb\n[2] https://karpathy.ai/zero-to-hero.html",
      "very cool, thanks for putting this togetherIt would be great to see a page dedicated to SoTA techniques & results",
      "Thank you so much! And very good advice: I have an extremely brief and not-descriptive list in the \"Next\" notebook, initially intended for that. But it definitely falls short.I may actually expand it in a second \"more advanced\" series of notebooks, to explore model-based RL, curiosity, and other recent topics: even if not comprehensive, some hands on basic coding exercise on those topics might be of interest nonetheless.",
      "In case you want to expand to more chapters one day: there's lots of tutorials of doing the simple things that has been verified to work, but if I'm struggling it's normally with something people barely ever mention - what to do when things go wrong. For example your actions just consistently get stuck at maximum. Or the exploration doesn't kick in, regardless how noisy you make the off-policy training. Or ...I wish there were more practical resources for when you've got the basics usually working, but suddenly get issues nobody really talks about. (beyond \"just tweak some stuff until it works\" anyway)",
      "Thanks a lot, and another great suggestion for improvement. I also found that the common advice is \"tweak hyperparameters until you find the right combination\". That can definitely help. But usually issues hide in different \"corners\", both of the problem space and its formulation, the algorithm itself (e.g., just different random seeds have big variance in performance), and more.As you mentioned, in real applications of DRL things tend to go wrong more often than right: \"it doesn't work just yet\" [1]. And my short tutorial definitely lacks in the area of troubleshooting, tuning, and \"productionisation\". If I carve time for expansion, this will likely make top of list. Thanks again.[1] https://www.alexirpan.com/2018/02/14/rl-hard.html"
    ],
    "link": "https://github.com/alessiodm/drl-zh",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously."
  },
  {
    "title": "Monitoring energy usage with smart plugs, Prometheus and Grafana (ounapuu.ee)",
    "points": 157,
    "submitter": "hddherman",
    "submit_time": "2024-05-05T18:05:31",
    "num_comments": 98,
    "comments_url": "https://news.ycombinator.com/item?id=40266845",
    "comments": [
      "I got a Zigbee power breaker and hooked it up so all my flat's power goes through it, and then made an e-ink display to show my power consumption:https://www.stavros.io/posts/making-the-timeframe/",
      "That was a great write up! I wish I had the time to follow-up this guide. Thanks for sharing it!",
      "Thank you! It's not very hard to use, you basically just flash my firmware and use my script to display images on the Timeframe. That's about it.",
      "Related to your comment so much, I got hurt",
      "I'm curious, which power breaker do you have?",
      "This one: https://www.aliexpress.com/item/1005005657383634.html?spm=a2...",
      "You're running all your flat's power through that $14 Chinese rubbish and never assumed that shortcuts were taken or quality would be an issue? How do you know it will continue to function as a circuit breaker and isn't just a piece of wire inside?For the uninitiated, CE marking is meaningless (it allows for self-certification).I'd like to see Big Clive do a teardown of one of those.",
      "> How do you know it will continue to function as a circuit breaker and isn't just a piece of wire inside?I don't care. I connected my previous breaker after it.",
      "Why not just use a current transformer? (Clamp over wire type) It's much safer.",
      "Do you know of a Zigbee one? That's also a good option."
    ],
    "link": "https://ounapuu.ee/posts/2024/05/02/smartplugs/",
    "first_paragraph": "This post isn\u2019t a detailed line-by-line tutorial on how to set up each individual piece of the setup as those types of\nguides tend to get out of date really easily, but if you know your way around Linux and the command line, then you can\ndefinitely replicate this setup on your own."
  },
  {
    "title": "Flying planes in Microsoft Flight Simulator with a JavaScript autopilot (2023) (pomax.github.io)",
    "points": 103,
    "submitter": "TheRealPomax",
    "submit_time": "2024-05-05T18:45:04",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=40267164",
    "comments": [
      "Nice! X-plane also has a great API to do these things with. It was created by NASA for research: https://github.com/nasa/XPlaneConnect",
      "There's even a pretty great autopilot for x-plane post that makes it to HN every now and then!https://austinsnerdythings.com/2021/10/15/creating-an-autopi...",
      "Also cool, GTA V autopilot using OpenCV, Xbox input, etc. \nhttps://github.com/davuxcom/GTA-Pilot",
      "Awesome. It would be a nice challenge to make a helicopter autopilot, because MSFS doesn't include one like it does for fixed wing.",
      "A bit clickbaity of a title, but the material was far more interesting and in-depth than I expected, although there was no mention of \"hunting\" which can often occur in control systems like this.",
      "What's clickbaity about it? The title is literally what we're doing: we're flying planes in MSFS using an autopilot that we're (progressively) writing ourselves, using JS.",
      "The title was changed --- it just said \"Flying Planes with JavaScript\" or similar when I first saw it.",
      "That's still the title of the actual post. I like it though.",
      "Also note that this isn't a \"let's learn to implement this thing that I already know works\", where I already worked out all the problems and am just giving you a write-up that lets you skip to the final result...We're going to get things wrong, planes are going to crash in myriad ways, and we'll discover how and why things go wrong, to hopefully figure out how we can navigate those problems. And we're going learn from our mistakes.Including learning to throw away all the work we did because that's the right thing to do =)",
      "> To allay any concerns: this is not about running JavaScript software to control an actual aircraft. That would kill people.SpaceX: Hold my beer (https://os-system.com/blog/javascript-in-space-spacex-devs-h...)"
    ],
    "link": "https://pomax.github.io/are-we-flying/",
    "first_paragraph": ""
  },
  {
    "title": "X.org on NetBSD \u2013 The State of Things (netbsd.org)",
    "points": 10,
    "submitter": "dagenix",
    "submit_time": "2024-05-05T23:46:21",
    "num_comments": 0,
    "comments_url": "",
    "comments": [],
    "link": "https://blog.netbsd.org/tnf/entry/x_org_on_netbsd_the",
    "first_paragraph": "A few years ago, I wrote a \"state of things\" blog post about\r\nWayland on NetBSD.\r\nIt's only natural that I should do one about X11, which\r\nis used by far more people to get a graphical environment on NetBSD."
  },
  {
    "title": "Designing furniture using the CSS grid (2023) (alnvdl.github.io)",
    "points": 79,
    "submitter": "alnvdl",
    "submit_time": "2024-05-05T18:47:46",
    "num_comments": 17,
    "comments_url": "https://news.ycombinator.com/item?id=40267182",
    "comments": [
      "Oh man, this is up there with the story I heard of the guy who used Excel to draw a floor plan. He just split and merged cells as needed and used different border lines to delineate the different wall types. Once again proving that Excel can be used for nearly anything whether you should or not.Solid work on this, and I love that it takes advantage of the browser to rejigger things without having to redraw everything manually every time.",
      "When i was a kid i used to use Lotus 123 to make maps for DnD",
      "All it took was vision and a tool.",
      "I used to hide porn deep in the lotus folder cache. We are kindred spirits!",
      "I was surprised when this layout worked:  cabinet 200cm x 92cm top 3cm bottom 15cm scale 5\n       50cm     \\*        \\*        20cm\n  \\*   drawer   door     door     drawer\n  \\*   drawer   ^        ^        drawer\n  \\*   ^        ^        <        drawer\n  \\*   >        drawer   drawer   <\n\n\nSo I inspected the odd shaped element and noticed it would overflow. Probably fine for your purposes.Super cool!",
      "Yep, when I was developing this I played with some of these non-intended use cases, even though they wouldn't make sense in reality. Technically, what you did was overlay one module on top of another, with the illusion of there being an L-shaped door.And it would look very weird, but I suspect it may be possible to assemble the cabinets with these odd shaped doors or drawers...",
      "For anyone wondering how a \"professional\" would do this, you might use a 3D CAD program like SolidWorks, Inventor, or FreeCAD. You'd make a single 2D sketch, draw some lines in box shapes, and put some constraints on those boxes. Free/unbound dimensions would read out the distances that you needed to know. The whole thing would take less than five minutes for someone with beginner-level skills (i.e., me), and maybe an hour or two to learn from scratch. It's not as cool as doing this with CSS's constraint solver, but it might add a new tool to your toolbox, and the value of that is difficult to overestimate.",
      "Mid-way through development, once I still had to solve the problems of sharing and printing, I almost gave up on continuing the work because I thought: \"it surely must be easier to just learn a CAD application\".But as another commenter highlighted: that meant a learning curve not only for me, but for my wife as well. And then there was the challenge of sharing it with everyone else via email, IM, etc. Having it open in the browser means it's easy to share, and fast and easy to load and show to people anywhere (which is handy during construction).",
      "Having used AutoCAD, Draftsight, and PTC ProEngineer in the past, and FreeCAD (for actual CAD, generally 2D, as input to a Shopbot) and Sketchup (for design renderings for clients) regularly currently, I would suggest that the learning curve on constraint-based drafting is fairy steep for most folks.I'd also submit that it's of limited value if you aren't using the same package as your shop. The browser-based method is at least all but guaranteed to be available to the people building the cabinets.Since they'll have to do shop drawings anyways, you aren't gaining much even if you can interchange drawings with their CAD software.",
      "I mean, we're talking about making the napkin sketch that you hand to the real draftsman. The format really doesn't matter; they want a PDF (or whatever). They are not going to open your HTML/CSS/JS tool even if it would be trivial to them. They have better things to do with their lives. So what tool you choose is up to you and should be whatever is best for you. It doesn't matter what the shop is using.Proper constraint-based drafting is indeed quite hard! But I think the whole \"lay out this 2D grid-like structure with a few rectangles\" problem is probably one of the first things anyone would learn to do with it, and I'd submit that it is indeed probably about a couple of hours' work, for someone already reasonably technical. The moment there's more than a single sketch involved, or complex geometry in that single sketch, I agree with you that it's asking too much.The real benefit is that you are starting to learn something new. CSS is not going to help you (insane contortions aside? I really don't want to find out) when things like circles appear. And yet, if you know how to do 2D sketches, you can find yourself using them to solve other problems, just because you already know how to do it. And that's pretty cool! (For example, I've had living rooms that were just awful to lay out. It was a real nightmare to figure out how to get a TV into that place. So I sketched it up and messed around until I got something viable. My original plan was just to print out some pieces of paper to scale, then mess around with those, but it was soon clear I could do it all onscreen, so I did.)"
    ],
    "link": "https://alnvdl.github.io/2023/01/07/designing-furniture-using-the-css-grid.html",
    "first_paragraph": "My high- and low-tech ramblings"
  },
  {
    "title": "Infini-Gram: Scaling unbounded n-gram language models to a trillion tokens (arxiv.org)",
    "points": 73,
    "submitter": "nsagent",
    "submit_time": "2024-05-05T17:58:13",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=40266791",
    "comments": [
      "My current mental model of LLMs is that attention refines information from the input (e.g. \"red balloon\" becomes some vector that means red + balloon), and that the feed-forward layers are lossy compressed indexes into the training set.From the paper, having a better n-gram index is giving as much perplexity improvement as a 10x increase in parameters. I wonder if it would make sense to train new foundation models with more attention heads and use infinigram in lieu of the feed-forward layer.",
      "Attention just allows the model to attend to elements across the input sequence. The feed forward is what gives it (and basically all other architectures) its universal function abilities. The only reason why we don't use dense layers directly across the input sequence and instead go for things like convolution, recursion or transformers, is because that is prohibitively expensive computationally. But replacing the dense layer with n-grams would make LLMs exactly what so many people falsely believe them to be right now: Pure stochastic parrots instead of functions that can actually learn to generalize from examples.",
      "Aren't human stochastic parrots in the end? I mean, when we \"learn\", don't we model our internal stochastic functions? Whether it is walking, learning a language, or anything else.",
      "No, because we are able to extrapolate from our experience. The ability to synthesize something coherent that doesn\u2019t map directly into our training set is a major difference between human intelligence and what we call AI today.",
      "Isn\u2019t there an argument we\u2019re simply better at brain statistics and modeling than current AI? Forget architectural limitations. What is the nature of the extrapolation? How do individuals balance their experiences and determine likely outcomes?",
      "A paper [1] we wrote in 2015 (cited by the authors) uses some more sophisticated data structures (compressed suffix trees) and Kneser\u2013Ney smoothing to get the same \"unlimited\" context. I imagine with better smoothing and the same larger corpus sizes as the authors use this could improve on some of the results the authors provide.Back then neural LMs were just beginning to emerge and we briefly experimented with using one of these unlimited N-gram models for pre-training but never got any results.[1] https://aclanthology.org/D15-1288.pdf",
      "The formulation of a succinct full text index as an \"infinite n-gram model\" is both genius in connecting with the ML literature, but also blind-eye, in that it ignores all the work on using exactly this data structure (well, the FM-index) over DNA. bwa mem is the OG \u221e-gram aligner.",
      "A web interface for the Infini-gram engine can be found here: https://huggingface.co/spaces/liujch1998/infini-gram",
      "What this shows, IMO, is that quite a lot of the expected output is almost literally present in the training data.",
      "Phrases and ideas repeat, because the universe has patterns and structure."
    ],
    "link": "https://arxiv.org/abs/2401.17377",
    "first_paragraph": "Help | Advanced Search"
  },
  {
    "title": "TheDesk desktop environment (github.com/thecheeseboard)",
    "points": 39,
    "submitter": "smartmic",
    "submit_time": "2024-05-05T19:40:41",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=40267559",
    "comments": [
      "What differentiates this from other desktop environments?",
      "From what I saw in their video, there\u2019s a top bar that on mouse-over expands and becomes a virtual desktop switcher with an arbitrary number of virtual desktops. Otherwise it appears to be a somewhat standard floating window setup. I didn\u2019t see a menu, but my guess is that there is one or there\u2019s some sort of rofi/dmenu work-alike or that it makes use of one of those.",
      "Kinda made me dizzy - animating the whole panel with all that stuff (clock, etc) can't be any good for accessibility, but no easy task to do a whole DE regardless.",
      "Oh man, you\u2019re not kidding, watching those gifs made me reflexively long for the \u201creduce motion\u201d settings toggle.",
      "Don\u2019t Linux people realize there are a limited number of people to work on these things in their spare time for free?",
      "In a perfect world, perhaps, everybody would align behind a single effort, and they would all agree on a vision and be able to all coordinate and work together effectively and make use of all of the time that everyone has available in the most efficient way possible. And they would all have exactly the right skills to fill all of the gaps, and there would be no overlap.But we do not live in that world. The idea that each person\u2018s efforts are interchangeable and can just be dropped into a project is mistaken.",
      "Perhaps the folks working on the project in what is presumably their spare time for free do know this?",
      "The idea is that it's irresponsible to diffuse the limited amount of effort by launching your own desktop environment project rather than contributing your talents to one of KDE or GNOME.I don't ever see myself using this DE, but the fact that it seems to be one guy's labor of love kind of makes me happy.",
      "But presumably they aren\u2019t interested in working on a part of a larger project that they have less creative and admin control over. This is a huge deal and precisely the answer to your question."
    ],
    "link": "https://github.com/theCheeseboard/thedesk",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously."
  },
  {
    "title": "ESP32-S3 has a few SIMD instructions (bitbanksoftware.blogspot.com)",
    "points": 116,
    "submitter": "_Microft",
    "submit_time": "2024-05-05T16:21:33",
    "num_comments": 27,
    "comments_url": "https://news.ycombinator.com/item?id=40266015",
    "comments": [
      "ESP_Sprite, former opensource-projects-guy, now Espressif employee, is the best source of knowledge on this stuff.Looks like back in 2021 they had an intention to document these, but never quite got round to it:https://esp32.com/viewtopic.php?p=88114&sid=f7f25776d9cfc6b6...They do publish a bunch of opensource code that uses the SIMD stuff, and an assembler, so it isn't secret, just very badly documented.",
      "Upon further inspection, it now seems like it is much better documented...Page 37-301 of the reference manual seems to have all you'd need, including binary instruction encodings, details on instruction timings, etc.https://www.espressif.com/sites/default/files/documentation/...",
      "Where is a good overview of the various ESP32 chips available and their features?",
      "Espressif has a pretty decent overview on their website: https://www.espressif.com/en/products/socsThey also make a set of modules per chip, so you can get a particular chip in an easier to use package with e.g a built-in PCB antenna or antenna mounting ports or no antenna, various onboard flash sizes, that sort of stuff: https://www.espressif.com/en/products/modules",
      "There's also a follow-up blog post \"ESP32-S3 SIMD Minimal Example\" [0].0: https://bitbanksoftware.blogspot.com/2024/01/esp32-s3-simd-m...",
      "I had plans to use this SIMD support for some DSP algorithms on camera video feeds....   But looking at how badly documented it is, I may reconsider...Without scatter/gather I don't think I'm gonna be able to meet my timing requirements (I need to distort images through warping, which is tricky to do without scatter/gather)",
      "The Xtensa processor comes from Cadence and for some reason they like to keep everything under NDA, even information which would help people use their processors. I find it hard to understand why the instruction set should be kept secret; a CPU vendor should make it as easy as possible for engineers to use their CPUs.The P4 can't come soon enough to get off Xtensa.",
      "Xtensa is an unusual beast because its USP (at least, back when it was owned by tensilica) was that you could easily add extensions. Not just off the shelf ones - ones you defined yourself. They had some automation that would generate a toolchain for you to use with your shiny new instructions. Most CPU architectures exist to allow programs written on once implementation to work on another, with Xtensa it's kind of the opposite - it exists to allow each chip to have its own special sauce.Honestly I was a bit surprised that espressif used it without defining their own extension of some kind, if you're not doing that then you might as well use something better known.Edit: ajross* points out that this SIMD extension is such a one, not an off the shelf one. So I guess that explains it.* https://news.ycombinator.com/item?id=40267977",
      "The P4 doesn't have a built-in radio though, so if you want those beefy RISC-V cores you will need to integrate a second ESP32 just to handle WiFi/BT :(It will have USB-OTG and an LCD driver at least, which so far have been missing from all of their RISC-V parts.",
      "I think that\u2019s totally fine. Might actually be the future direction. But yea would\u2019ve been nice to have wifi/bt integrated.Eg if you want 5ghz then use c5, or if you want some wifi-6 so c6, etc.Also here\u2019s a talk by them on how to use esp as a wifi coprocessor https://youtu.be/g14aEjnjRLw?si=TgkEyJJ2_L_ShuomThere\u2019s also adafruit airlift https://www.adafruit.com/product/4201"
    ],
    "link": "https://bitbanksoftware.blogspot.com/2024/01/surprise-esp32-s3-has-few-simd.html",
    "first_paragraph": "I optimize software for a living. This blog is to share some personal projects which others may find interesting."
  },
  {
    "title": "\"Meta spent almost as much as the Manhattan Project on GPUs in today's dollars\" (twitter.com/emollick)",
    "points": 101,
    "submitter": "paulpauper",
    "submit_time": "2024-05-05T20:48:37",
    "num_comments": 68,
    "comments_url": "https://news.ycombinator.com/item?id=40268204",
    "comments": [],
    "link": "https://twitter.com/emollick/status/1786213463456448900",
    "first_paragraph": ""
  },
  {
    "title": "Machine Unlearning in 2024 (stanford.edu)",
    "points": 184,
    "submitter": "ignoramous",
    "submit_time": "2024-05-05T12:30:44",
    "num_comments": 65,
    "comments_url": "https://news.ycombinator.com/item?id=40264352",
    "comments": [],
    "link": "https://ai.stanford.edu/~kzliu/blog/unlearning",
    "first_paragraph": "41 minute read"
  },
  {
    "title": "Microsoft CTO: Thoughts on OpenAI (2019) (twitter.com/techemails)",
    "points": 197,
    "submitter": "mfiguiere",
    "submit_time": "2024-05-05T17:50:12",
    "num_comments": 88,
    "comments_url": "https://news.ycombinator.com/item?id=40266728",
    "comments": [
      "To add more context, about a month later after Kevin Scott's email...July 12, 2019 OpenAI announces Microsoft's $1 billion investment- https://openai.com/index/microsoft-invests-in-and-partners-w...- https://news.microsoft.com/2019/07/22/openai-forms-exclusive...It was interesting how K Scott was objective and candid about Microsoft's internal ai efforts falling behind but also phrasing the email diplomatically to not criticize anyone.  It's interesting to see some of the behind-the-scenes thinking.",
      "It\u2019s fair to say that the CTO\u2019s job is to make sure Microsoft never misses a trend. Their number one existential threat is a new tech trend that makes their existing model fail. Whether that thing is the rise of smart phones or generative AI, Kevin Scott\u2019s job is to give early warning.",
      "I don\u2019t think they want a repeat of missing out on web and then mobile again.",
      "Microsoft didn\u2019t miss out on the web. They won it so thoroughly that they assumed it was theirs to keep and stopped competing.",
      "They did fall behind initially, before \"The Internet Tidal Wave\" memo was written and Microsoft fully mobilized to fight Netscape. Bill Gates was convinced that proprietary networks like the original MSN were the future, but he changed his mind fairly quickly.",
      "Parent is referring to the decade before that.",
      "Seems we collectively forgot about IE era.",
      "Nightmares are best forgotten.",
      "Was gonna say, the email reads similarly to this famous thread about Java (with the old CTO of MS!): https://www.techemails.com/p/bill-gates-im-literally-losing-...Really makes you think about the structure of mega corps and how powerful the \u201cdefender\u2019s advantage\u201d is. These giants knowingly sleep on disruption and wait to time their entry, and are generally rewarded. I dont know if its good or bad, it probably depends, but I think the capitalism game devs need some balance tweaks.",
      "The defender's advantage only counts if the corporation is run by people smart enough to do something about it.History is littered with out-innovated companies that are gone or clinging to relevance. Xerox, IBM, cable companies, telephone companies, every train company ever. All had a huge opportunity to disrupt their own business model and make even more money, almost none of them managed it."
    ],
    "link": "https://twitter.com/techemails/status/1787176471146156193",
    "first_paragraph": ""
  },
  {
    "title": "Interview with Marian Rejewski, the first person to crack Enigma (1974) [video] (flyingpenguin.com)",
    "points": 84,
    "submitter": "chmaynard",
    "submit_time": "2024-05-03T11:23:58",
    "num_comments": 31,
    "comments_url": "https://news.ycombinator.com/item?id=40246400",
    "comments": [
      "So the Polish intelligence selected 3 smartest mathematicians in 1929 and assigned them to the task of understanding the German encryptions. The team (Rejewski) had a breakthrough in 1932 and managed to break the Enigma codes. By 1939 they've broken many subsequent versions of the constantly upgraded ciphers.In 1939 they gave the British: a working Enigma machine, the broken encryption, a full description of how the encryption works, how to use a machine to speed up the process (the \"bomba\" appliance), and what automation is needed for the following versions.The British (Turing et al) then contributed a machine-based automation which allowed to break the following upgrades to the Enigma ciphers, which would be impractical to manual calculations.As a side note, the Polish codebreaking bureau started with a breakthrough around 1917, when some smart soldiers managed to break Bolshevik radio communication ciphers, which allowed Poland to stop the Russian revolution's expansion by 1920 (the decisive Battle of Warsaw).",
      "There is a small memorial (to the Poles) at Bletchley Park. I went there on purpose once to see it, and unfortunately I didn't have time to go find it again when I was there earlier this year, but it's a memorial so they won't have removed it.The (recreation of the) machine for breaking wartime Enigma is now in the Computer History museum, rather than the main Bletchley Park museum (they're on the same site but open on different days - check before travelling!), which is slightly incongruous as it's just not a computer. The museum also has several machines which are each arguably the first computer or an early computer (it depends on what in your opinion distinguishes a computer and how hard you're willing to squint at your definition) including (again a reconstruction of) Colossus, which was built for Bletchley to attack the actual interesting cryptography of the war, Lorenz - not Engima and W.I.T.C.H (the Harwell computer) but the choice to put the reconstructed Bombe in that museum is a bit weird.",
      "Polish memorial was in Bletchley Park when I visited in 2019 under some trees:https://maps.app.goo.gl/1Mot8nCCvS3e6r9SA?g_st=ic",
      "I think it can still be considered a computer, just not a general purpose programmable computer right?  I'd expect adding machines and stuff to be in a computer history museum.",
      "It's even more primitive than, say, a mechanical calculator of that era, which yes, the NMC does have in a cabinet near the start. The Bombe isn't doing even simple arithmetic. It's essentially an electric motor, plus a lot of very complicated electrical wiring, to verify whether some particular setup (say, rotors I, V and IV in that order, set to JOM initially) could or could not ever cause the crib (a guess at some text an operator intended to send e.g. \"Heil Hitler\") to be converted into the ciphertext being attacked.Each such setup is tried, very briefly, and if it couldn't be correct, the motor winds to the next, and the next and so on, until one setup which could be \"Heil Hitler\" is found. This is a \"stop\" - the machine literally stops until set going again. Women running the machine note down the exact setup which stopped it, and elsewhere very smart people try assuming this stop is correct - it might be, or, maybe the machine will stop again later, or, maybe the crib was wrong, maybe this message has a typo, \"Heil Hiter\"...It's fantastically complicated but only in the same way that for example the movement of swallows is complicated. There's a relatively simple rule, it's just followed to an extreme degree and so that's impressive. It's not really very clever, and it's nothing like a computer.Colossus isn't a programmable computer. It's for attacking Lorenz, so the people who built it didn't care that to attack a slightly different cipher the machine must be taken to pieces and re-assembled accordingly, they were here to attack Lorenz. In the rest of the early gallery there are several machines which are, or aren't, depending on how you squint truly programmable, truly electronics, truly storing the program and so on. But the Bombe is to these machines as the Super Bowl is to tennis. It's not that it's a very primitive and strange game of tennis, it's not tennis at all.",
      "It's unfortunate that in pop culture, Turing gets all the credit. Even the fairly recent movie doesn't do the justice.",
      "Turing wasn't a publicly known figure for many years until a campaign to give him some prominence and highlight the injustices done to him started to get some ground. There was a strong gay rights thread to this, which obviously didn't apply to others.While I agree others should no doubt get credit (Turing's coworkers also), the Computer History Museum and Bletchley Park do a good job (last time I visited) at describing everything relatively impartially. Media (screen and print) could often do a better job though.",
      "I\u2019m quite interested in the subject, but literally never heard of Rejewski until now and it feels pretty terrible. A lot gets said about other biases, but Poles seem to not get a lot of credit pretty consistently and often get appropriated by the host countries they had to work for. Hope that\u2019s all in the past now\u2026",
      "The Imitation Game doesn't do justice to Turing himself, either. Pretty dreadful all around.",
      "It is disgraceful that they used Turing's name in that film, was was almost completely fiction. Everyone involved in it should feel ashamed."
    ],
    "link": "https://www.flyingpenguin.com/?p=56989",
    "first_paragraph": "I just noticed a series of nine rare interviews were posted in June 2023 by the Polish Embassy in London."
  },
  {
    "title": "Turning AirPods into a fitness tracker (richarddas.com)",
    "points": 145,
    "submitter": "cleverbit",
    "submit_time": "2024-05-03T17:16:22",
    "num_comments": 24,
    "comments_url": "https://news.ycombinator.com/item?id=40249968",
    "comments": [
      "Thanks for this, I\u2019ve wondered if AirPods data could help me track if I\u2019m grinding my teeth, I\u2019ll dig in now!",
      "I\u2019d love to see whether you could tease out heart rate and respiration from this data. If you already wear an Apple Watch or Fitbit, that data is continually collected. Shoving everything into a time series model with enough samples might do the trick.",
      "Heart rate will probably be tough without a dedicated sensor. Sennheiser now sells earbuds with an optical HR sensor but accuracy is bad.https://www.dcrainmaker.com/2024/05/sennheiser-momentum-temp...Respiration rate is harder. It requires precise heart rate variability data to detect the start of a breath.",
      "I\u2019ll see what I can do, thanks for the feedback!",
      "Is this data that could be fed into the Health app (type of training, time of training, repetitions, duration of training)? The Health app is relatively picky about what sports are supported though\u2026",
      "That\u2019s a great idea. HealthKit doesn\u2019t track anything at the granularity of the number of reps, and while it doesn\u2019t have a workout type specifically for pushups, this could probably be classified as Strength Training. I\u2019ll add it!",
      "Maybe there are other exercises with similar motion (squats?) that you would like to support as well?\nGreat idea to use these sensors and I also like the idea of providing audio feedback btw.",
      "A cool complex one would be burpees.",
      "Love it! Yeah great idea!",
      "I've considered using CoreMotion data from AirPods to recognize at least yes/no head-shaking, but mainly targeting a vigorous shake in order to mute without hands or voice.  An open-source example would be a great starting-point!"
    ],
    "link": "https://richarddas.com/blog/turning-airpods-into-fitness-trackers-to-fight-cancer/",
    "first_paragraph": ""
  },
  {
    "title": "A mostly complete guide to React rendering behavior (2020) (isquaredsoftware.com)",
    "points": 16,
    "submitter": "robertvc",
    "submit_time": "2024-05-05T00:03:48",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=40261319",
    "comments": [],
    "link": "https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/",
    "first_paragraph": "This is a post in the Blogged Answers series."
  },
  {
    "title": "Map Machine: Python renderer for OpenStreetMap with custom icons (github.com/enzet)",
    "points": 64,
    "submitter": "altilunium",
    "submit_time": "2024-05-03T06:24:23",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=40244729",
    "comments": [
      "This is absolutely perfect! For a couple years now I've been looking for (and badly trying myself) to have a good way without paying quite a lot of money to create SVGs out of OpenStreetMap data!",
      "I really like these R\u00f6ntgen icons.",
      "Right on time. Very useful for a project I am working on.",
      "Huh, reminds me of Kothic from about ten years ago :)"
    ],
    "link": "https://github.com/enzet/map-machine",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously."
  },
  {
    "title": "Identifiers are better off without meaning (varoa.net)",
    "points": 17,
    "submitter": "srvaroa",
    "submit_time": "2024-05-03T13:20:57",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=40247373",
    "comments": [],
    "link": "https://varoa.net/2024/05/01/identifiers-are-better-off-without-meaning.html",
    "first_paragraph": "Once at Last.fm we had an integer overflow in an\nidentify field. I can\u2019t recall where exactly. But I do remember that\nthe inconvenience of having a bunch of Hadoop jobs disrupted while we\nrushed to update the relevant type couldn\u2019t spoil the collective pride\nfor having more than 2 billion of whatever needed so many ids."
  },
  {
    "title": "MIT abandons requirement of DEI statements for hiring and promotions (whyevolutionistrue.com)",
    "points": 518,
    "submitter": "nsoonhui",
    "submit_time": "2024-05-05T07:14:26",
    "num_comments": 355,
    "comments_url": "https://news.ycombinator.com/item?id=40262921",
    "comments": [
      "All: Please don't use HN for ideological battle. There are too many low-quality/predictable comments here. We want curious conversation, not sharp recitals.I know it's hard when the topic is itself an ideological battle, but that's a good time to review the site guidelines,  including this one: \"Comments should get more thoughtful and substantive, not less, as a topic gets more divisive.\"https://news.ycombinator.com/newsguidelines.html",
      "In the spirit of trying to learn something from the community: while I can certainly understand the rationale and goals behind DEI programs (many of which I agree with, others not), I honestly can't understand these \"DEI statements\" at all. They always seemed very \"1984\" to me, and almost designed to engender resentment in a way that would ultimately backfire. So perhaps I'm in a like-minded echo chamber, but is there anyone that actually defends these DEI statements with a coherent argument, or can you point me to one online? If so, I'd honestly love to hear it, and I mean this quite genuinely. I did some googling beforehand and found loads of \"how to write a good DEI statement\" articles, but literally every single one of them just took it at face value that these were a good thing to begin with (or, perhaps in their defense, that \"academic jobs require it\", so you better learn how to write one in any case).",
      ">but is there anyone that actually defends these DEI statements with a coherent argument, or can you point me to one onlineThere was a recent debate on this[1] and even the debater for the pro DEI statement side (that they could find) admitted that DEI statements that were just ideological pledges were wrong, and he was only in favor of statements about concrete things you did to advance the DEI agenda (eg. \"I did a, b, and c in my previous position to enhance DEI in my department\"). He argued that was justified because DEI (at least the principles, not necessarily the specific policies like affirmative action or whatever) were ostensibly things that the university cares about, and therefore they were fair game to ask for.[1] https://opentodebate.org/debate/are-dei-mandates-for-univers... (it's a podcast but there's a transcript tab on the page)",
      "I\u2019ve heard this same argument for DEI statements every time the topic has been debated: They sidestep arguments about DEI statements and instead retreat to safer arguments about how advancing DEI is a good thing.On one hand, I get it. Arguing for DEI in an abstract sense is much easier than arguing for specific interventions.On the other hand, this is the textbook example of a Motte-and-bailey fallacy, where the debater conflates two topics and then retreats to the safer position while hoping that the audience will accept it as an argument for the more difficult position.DEI statements have been quite unpopular as specific interventions, as noted in the article by the way that the majority of staff disagreed with them when polled privately. However, speaking out against them publicly was viewed as a very risky move and serious career mistake, so they slowly slipped into mainstream acceptance.It\u2019s interesting to see how they\u2019re now quietly being removed from processes with as little attention as possible. Nobody wants to be known as the person who campaigned against them publicly, but I suspect there are a lot of people feeling relief in this case as they\u2019re being quietly removed from the process.",
      "Feels a little bit like making people take anti-theft pledges.  I don't think anyone could reasonably expect that theft would be prevented by someone pledging not to engage in it yet it might be tricky to publicly remove because \"what are you, pro-theft!?!\"Similar to DEI training in general which doesn't appear to do too much.  It should be argued that \"we shouldn't do these trainings\" yet you also don't want to be the one saying that.What does appear to work is a company actually hiring and promoting skilled diverse individuals and not just their buds.",
      "Imo it's very different bc the ideology pledge itself is mostly distracting from the real purpose of dei (again imo), which is to provide a way to select employees based on race, etc, without it being the explicit reason.A better comparison would be if instead of an anti-theft pledge, there were a ten-commandments plus beatitudes test/ statement, without referencing the source religion. Maybe call it a morality pledge.It's essentially a religious test hiding behind another name and terms, and even if it doesn't explicitly discriminate based on religion, it's obviously designed so that people of certain religions do better.And filters people not from those religions by boosting those who essentially share the same values, or can fake it.In the same way, dei doesn't explicity select for diversity applicants, but for people who are explicitly pro-diversity-applicant.Which doesn't sound quite as pure of you replace \"diversity\" with any of the approved / included groups...'I'm not picking applicant based on them being black, but based on them having an ideology that is pro-black-applicant.'Although sadly we've normalized it to crossing that line as well, with the last SCOTUS nominee.",
      "> \u201cfeels a little bit like people making anti-theft pledges\u201dSlate Star Codex covered this so well on https://slatestarcodex.com/2017/06/21/against-murderism/",
      ">On the other hand, this is the textbook example of a Motte-and-bailey fallacy, where the debater conflates two topics and then retreats to the safer position while hoping that the audience will accept it as an argument for the more difficult position.Motte and bailey accusations only work if the statemnts in question are being made by the same person. For the debater in the post above at least, is there any evidence he personally is engaging in this? Or anyone else? Otherwise it's a bit fallacious to lump everyone who's pro DEI as one entity.",
      "> Motte and bailey accusations only work if the statemnts in question are being made by the same person.I think it's perfectly justified in cases where debater self-identifies as part of the \"bailey\" community -- that is, if in other contexts the debater wouldn't oppose people arguing for the bailey position.",
      "Thanks very much! I haven't watched this yet, but this was exactly the kind of honest discussion I was looking for that I didn't previously find, so much appreciated."
    ],
    "link": "https://whyevolutionistrue.com/2024/05/04/mit-abandons-use-of-dei-statements/",
    "first_paragraph": "Why Evolution Is True"
  },
  {
    "title": "A History of C Compilers \u2013 Part 1: Performance, Portability and Freedom (thechipletter.substack.com)",
    "points": 131,
    "submitter": "gulced",
    "submit_time": "2024-05-05T12:28:30",
    "num_comments": 56,
    "comments_url": "https://news.ycombinator.com/item?id=40264337",
    "comments": [
      "The article neglects to mention Datalight C, the first C compiler using data flow analysis optimizations. It did such a good job that the magazine reviewers decided it was cheating by deleting the meat of their benchmark codes. What actually was going on was the benchmark code was proven by DFA to do nothing, so was removed.Within a year other compilers started doing DFA.The article also neglects Zortech C++, the first native code generating C++ compiler. ZTC++ was the catalyst that made C++ a major language, as the PC was where 90% of the programming was. Before ZTC++, C++ and Objective-C were neck and neck, judging from the volume on comp.lang.c++ and comp.lang.objectivec. With ZTC++, the volume of the former exploded, and Objective-C disappeared into oblivion (later resurrected by Apple for a while).",
      "P.S. The DFA I wrote for Datalight C still persists in the DMD D compiler:https://github.com/dlang/dmd/blob/master/compiler/src/dmd/ba...",
      "these are indeed significant omissions, and you wrote both datalight c and zortech c++",
      "Some compilers I've written are Northwest C, Datalight C, Zortech C, Zortech C++, Symantec C++, Digital Mars C++, and the Digital Mars D compiler. The last one, DMD, still has code in it from those previous compilers :-/I've also written a Java compiler (not from scratch) and a Javascript compiler/interpreter, and designed the ABEL (Advanced Boolean Expression Language) PLD compiler.",
      "i don't know if you should admit to that last one, you might have to hide from people who program cplds",
      "ABEL is a far easier tool for programming PLDs than CUPL or any of the other such languages.",
      "This totally neglects to mention that the commercial c compilers kicked gcc's ass when it came to performance. Sun's cc and and IBM's xlc were substantially better across the board, and I know the latter supported profile-based optimization.There were also a bunch of commercial c compilers, all of which I've forgotten.gcc was the lowest common denominator compiler, with the benefits and drawbacks of being in that position.In any case gcc won the *nix compiler wars because it was free and easily accessible. Getting a license for the commercial compilers took work and/or funds, and the latter was something most unix users didn't have.",
      "And they weren\u2019t cheap either. The Sun compiler was over $1000 IIRC.",
      "That was the reason why GCC adoption took off in first place.During the UNIX freebie days no one cared about Stalmman's freedoms.After Sun being the first UNIX vendor to split UNIX into multiple SKUs, for developers and users, then GCC suddenly became relevant after all.For languages like Ada, this was even worse, because SunOS/Solaris SDK only contained traditional UNIX compilers. For something like Sun Ada compiler, it was extra.",
      "You all forgot something: on stability and speeds, Unix compilers rot over time.From 1996-1999, the stable choice on both speed and reliability was the GNU one.https://pages.cs.wisc.edu/~blbowers/fuzz-2001.pdfFVWM ran circles around MWM or CDE itself about speed. Rxvt was much lighter than an xterm, not everyone needed to plot Tek graphs. Even some late Irix users preferred JWM against the propietary options.Nowadays, GNU's the slight bloated one, being Guix the 'essential' GNU distro, making lots of 32 bit machines without SSD's a crawling nightmare to install."
    ],
    "link": "https://thechipletter.substack.com/p/a-history-of-c-compilers-part-1-performance",
    "first_paragraph": ""
  }
]