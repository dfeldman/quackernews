[
  {
    "title": "Baldur's Gate 3 Steam Deck \u2013 Native Version (larian.com)",
    "points": 43,
    "submitter": "_JamesA_",
    "submit_time": "2025-09-24T00:26:59 1758673619",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=45354644",
    "comments": [
      "That's amazing, it would be interesting to see benchmarks comparing the two versionsreply",
      "I really appreciate this. But color me skeptical that the late game will work on SD. It chugs on PCs. Hopefully they conjured a miracle!reply",
      "They are partway through creating two new games.It\u2019s possible that some of the engine improvements could be easily back-ported to BG3. Or even just compiler improvements could be a little more oomph.Edit:> Our Proton version runs on the Steam Deck via the Proton compatibility layer, which requires extra CPU processing power. Running the game natively on the Steam Deck requires less CPU usage and memory consumption overall!Workaround for a performance regression helps some but I suspect more has gone on.reply",
      "They've supported the Steam Deck for a couple years now.Here's a review of Steam Deck performance from early 2024:\nhttps://steamdeckhq.com/game-reviews/baldurs-gate-3/I'm assuming this is just an effort to slightly improve things.reply",
      "Yea, I could also blame steam's SD verification system, which just rates compatibility without giving much thought to performance. Cause I'm aware BG3 \"works\" on SD but walk into an area crowded with NPCs and it becomes an impressionist painting at 10fpsreply",
      "When was the last time you played? They've been making continuous performance improvements and act 3 hasn't chugged on my PC for a long time. Even steam deck seems to get a steady 30fps.reply",
      "It runs fine on a SD card on a steam deck for me. It is a good travel game.reply",
      "To be clear, did you test the game in Act 3? Because Act 3 generally has significantly worse performance than other parts of the gamereply",
      "Yeah, I have played through the game like three or four times on a steam deck.There are some hiccups at times, but it is acceptable, IMO.reply",
      "Slick! Worth noting that Baldurs Gate 3 runs fine through Proton already - I played it on Linux at release with zero issues.reply"
    ],
    "link": "https://larian.com/support/faqs/steam-deck-native-version_121",
    "first_paragraph": "Upon release of Hotfix #34 on your Steam Deck, your device will install the Native version.If you are unsure whether the build has been installed correctly, you can do the following:\n\u00a0What\u2019s the difference between the Steam Deck Native and Proton version?Our Proton version runs on the Steam Deck via the Proton compatibility layer, which requires extra CPU processing power. Running the game natively on the Steam Deck requires less CPU usage and memory consumption overall!Can I still switch back to the Proton version?Yes. If you\u2019re having issues with the Steam Deck Native build, you can revert to the Proton version. Take the following steps to do so:Go to the game\u2019s Steam page. Click on the Settings button and select Properties.\n\nNow that there is a Steam Deck Native build, is Baldur\u2019s Gate 3 supported on Linux?Larian does not provide support for the Linux platform. The Steam Deck Native build is only supported on Steam Deck.\u00a0Where are my saves located currently (before using the Steam D"
  },
  {
    "title": "Find SF parking cops (walzr.com)",
    "points": 549,
    "submitter": "alazsengul",
    "submit_time": "2025-09-23T18:06:07 1758650767",
    "num_comments": 326,
    "comments_url": "https://news.ycombinator.com/item?id=45350690",
    "comments": [
      "site now offline:> In rare lightning speed, the SF government changed their site within hours of this site going live. I can't get data from it anymore.",
      "\"each possible ticket number follows a pattern: add 11, except add 4 if the last digit is 6\u2026Only God knows why\"That pattern feels suspiciously like how a tacked-on modulo check-digit would act.It seems the real citation number, x, excludes the last digit, and you only needed to +1 increment to it.Then they tack on a last digit, a check-digit, of (x+1) mod 7. That would be the same pattern.The contract for the system does have the clause \"validate the data transcribed from \nhandwritten Citations\u2026a check-digit algorithm to control errors in the \nCitation number field\" https://www.sfmta.com/sites/default/files/reports-and-docume...reply",
      "It's just x % 7.They started their example pattern with an citation number 984,946,606 they earlier said wasn't valid rather than 984,946,605 given initially (and shown in the image).reply",
      "But why?reply",
      "Just a mistake, I imagine. Probably just typed the pattern out starting with the last number they wrote, which unfortunately was invalid.> I was looking at ticket 984,946,605. When I type in 1 higher, 984,946,606, no ticket is found. ... So the ticket after 984,946,606 is actually 984,946,610reply",
      "In college we discovered everyone's ID number was evenly divisible by 13. Presumably it's because that's the smallest number you'd need so that you could detect any one digit being incorrect, or two adjacent digits being swapped (I think?). Or that it's just very easy to implement the increment when assigning new numbers.reply",
      "Nice observation!reply",
      "I gotta say, it's incredibly inconsiderate and thoughtless to publish the real time location of a bunch of public safety officers in an individually identifiable way.I understand the sentiment, and I appreciate the hackery... but you put these people at risk today. You need to think much more carefully about how you approach things like this in the future.reply",
      "Thank you for thinking about the safety of our neighbors.May I ask whether you've considered the unique vehicles the parking enforcement agents use?SFMTA is hard to miss in their 3-wheelers--believe it's the Westward Industries \"GO-4\" Interceptor. I may have a blind spot here (like someone with access to an armed drone fleet could have made use of the map?), but essentially all private citizens will see these unmistakable three-wheelers simply by opening their front doors or heading downtown. Or into most any neighborhood.For others reading this besides you, what additional safety burden could be presented by this map which is absent simply with any of the 800,000 pairs of human eyeballs in SF? (Here to learn, no snark!)reply",
      "I disagree. There should be no expectation of privacy for any public officer. Things like this website, body cameras,  and FOIA requests are all for the public good. Expose corruption and keep everyone safer with a little accountability.reply"
    ],
    "link": "https://walzr.com/sf-parking/",
    "first_paragraph": ""
  },
  {
    "title": "MLB approves robot umpires for 2026 as part of challenge system (espn.com)",
    "points": 29,
    "submitter": "pseudolus",
    "submit_time": "2025-09-23T23:41:54 1758670914",
    "num_comments": 11,
    "comments_url": "https://news.ycombinator.com/item?id=45354304",
    "comments": [
      "Remarkably, the television wasn\u2019t the technology that forced the MLB\u2019s hand on this. You would think it would\u2026football and tennis went for challenges a long time ago, and viewers can easily see when an ump misses a call. But baseball has managed to stay human on balls and strikes for a long time.Then along comes sports betting and they basically have no choice but to use robots.It\u2019s sad to me how much sports betting changes sports. When I watch, I wonder if the referee has accepted a bribe every time a call is a little funky. Considering the millions of dollars riding on every play, some of them must have taken some money at some point.reply",
      "It is almost impossible to fully remove that voice in the back of your head that will question if you were cheated. Because the fact is at the end of the day sports are played by humans and humans make mistakes, humans are susceptible to bribes, humans are susceptible to threats and there are many other factors that could influence or force cheating by players or bad calls by the officials.There are literally countless incidents of people cheating. So my suggestion is to hope it doesn't happen but also just avoid making bets if you are not comfortable with the fact that you may lose.reply",
      "Nothing makes me feel more like a grumpy old man than the new strike zone box. My favorite part of watching a baseball game with friends was the heated arguments about what was or wasn't a strike.I realize that it's an objectively ridiculous thing to have strong feelings about, but boy do I hate it :Dreply",
      "I wonder how long it'll be until we get a hacker based scandal with these. The incentive would be high enough that I imagine teams will at leat look into it.reply",
      "As a baseball fan, I for one welcome this change. I have seen how the system dramatically improved tennis matches. Players have built an implicit trust in the calls, and the game is more about the athleticism on display than ever before.reply",
      "I'm a huge fan of the automatic balls and strikes challenge system baseball is going to adopt.Awful calls need to be struck from the game and this should do that. Tonight my Blue Jays had a double taken away on a foul call and a ball 2 inches off the plate called a strike in the same at bat with the bases loaded. Between this and the horrible reviews last week it feels like the fix is by MLB to keep us from winning the division.Unlike tennis where in and out have always been strictly defined and we just didn't have the technology to enforce it, baseball has always involved the human element to the strike zone and some umpire judgement on whether the pitcher hit the spot or just got lucky and what a given batter's zone is. I want some of that to stay, with catchers holding game-long discussions about the zone with umpires, and batters having their own sense of the zone.I don't want full automatic balls and strikes, so I like the challenge. There is some new strategy on when to deploy it and who can be trusted to recognize a missed call. It leaves some room for a pitcher and catcher to work a corner over a few innings to expand little by little.reply",
      "Bit deceptive. Not robots, just a glorified camera tracking system.reply",
      "'robot' meaning 'automated/non-human', a common English idiom especially in non-technical contextsreply",
      "Optimize everything so you can take the soul out of it.reply",
      "If the viewers didn't know it was a blown call, there wouldn't be a problem. That's how baseball worked for 100 years.But now when the viewers can see the pitch in 1000fps 8K slow motion, they expect better from the umpires. The entire premise of sports relies on the assumption that the rules are adjudicated correctly.reply"
    ],
    "link": "https://www.espn.com/mlb/story/_/id/46357017/mlb-approves-robot-umpires-2026-part-challenge-system",
    "first_paragraph": "Major League Baseball will implement a challenge system for balls and strikes in the 2026 season after the league's competition committee voted Tuesday to usher in the era of robot umpiring.Following years of testing in the minor leagues, as well as during spring training and at this year's All-Star Game, MLB forged ahead with a system that will give teams two challenges per game.Hitters, pitchers and catchers will be the only ones allowed to trigger the system by tapping their head, and if a challenge is successful -- the pitch will be shown on in-stadium videoboards -- teams will retain it.While the vote in favor of the automated ball-strike challenge system was not unanimous -- some of the four players on the 11-man committee voted no, according to sources -- the vote was a fait accompli, with MLB owners all in favor and in possession of a six-seat majority on the committee.\"I commend the Joint Competition Committee for striking the right balance of preserving the integral role of t"
  },
  {
    "title": "Qwen3-VL (qwen.ai)",
    "points": 145,
    "submitter": "natrys",
    "submit_time": "2025-09-23T20:59:17 1758661157",
    "num_comments": 39,
    "comments_url": "https://news.ycombinator.com/item?id=45352672",
    "comments": [
      "As I mentioned yesterday - I recently needed to process hundreds of low quality images of invoices (for a construction project). I had a script that had used pil/opencv, pytesseract, and open ai as a fallback. It still has a staggering number of failures.Today I tried a handful of the really poor quality invoices and Qwen spat out all the information I needed without an issue. What's crazier is it gave me the bounding boxes to improve tesseract.reply",
      "I\u2019ve tried that too, trying to detect the scan layout to get better OCR, but it didn\u2019t really beat a fine-tuned Qwen 2.5 VLM 7B. I\u2019d say fine-tuning is the way to goreply",
      "Interesting. I have in the past tried to get bounding boxes of property boundaries on satellite maps estimated by VLLM models but had no success. Do you have any tips on how to improve the results?reply",
      "With Qwen I went as stupid as I could: please provide the bounding box metadata for pytesseract for the above image.And it spat it out.reply",
      "It\u2019s funny that many of us say please. I don\u2019t think it impacts the output, but it also feels wrong without it sometimes.reply",
      "Gemini has purpose post training for bounding boxes if you haven't tried it.The latest update on Gemini live does real time bounding boxes on objects it's talking about, it's pretty neat.reply",
      "Do you have some example images and the prompt you tried?reply",
      "The Chinese are doing what they have been doing to the manufacturing industry as well. Take the core technology and just optimize, optimize, optimize for 10x the cost/efficiency. As simple as that. Super impressive. These models might be bechmaxxed but as another comment said, i see so many that it might as well be the most impressive benchmaxxing today, if not just a genuinely SOTA open source model. They even released a closed source 1 trillion parameter model today as well that is sitting on no3(!) on lm arena. EVen their 80gb model is 17th, gpt-oss 120b is 52nd\nhttps://qwen.ai/blog?id=241398b9cd6353de490b0f82806c7848c5d2...reply",
      "They still suck at explaining which model they serve is which, though.They also released today Qwen3-VL Plus [1] today alongside Qwen3-VL 235B [2] and they don't tell us which one is better. Note that Qwen3-VL-Plus is a very different model compared to Qwen-VL-Plus.Also, qwen-plus-2025-09-11 [3] vs qwen3-235b-a22b-instruct-2507 [4]. What's the difference? Which one is better? Who knows.You know it's bad when OpenAI has a more clear naming scheme.[1] https://modelstudio.console.alibabacloud.com/?tab=doc#/doc/?...[2] https://modelstudio.console.alibabacloud.com/?tab=doc#/doc/?...[3] https://modelstudio.console.alibabacloud.com/?tab=doc#/doc/?...[4] https://modelstudio.console.alibabacloud.com/?tab=doc#/doc/?...reply",
      "Eh i mean often innovation is made just by letting a lot of fragmented, small teams of cracked nerds trying out stuff. It's way too early in the game. I mean, qwens release statements have anime etc. IBM, Bell, Google, Dell, many did it similarly, letting small focused teams having many attempts at cracking the same problem. All modern quant firms are doing basically the same as well.  Anthropic is actually an exception, more like Apple.reply"
    ],
    "link": "https://qwen.ai/blog?id=99f0335c4ad9ff6153e517418d48535ab6d8afef&from=research.latest-advancements-list",
    "first_paragraph": ""
  },
  {
    "title": "From Rust to reality: The hidden journey of fetch_max (questdb.com)",
    "points": 104,
    "submitter": "bluestreak",
    "submit_time": "2025-09-23T21:24:45 1758662685",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=45352944",
    "comments": [
      "This blog sent me into a memory models rabbit hole again. Each time I end up feeling like I'm finally starting to get it, only for a 6 line litmus test with 4 loads and 2 stores to send me crashing back down.It makes me feel a little better reading about the history of memory models in CPUs. If this stuff wasn't intuitive to Intel either, I'm at least in good company in being confused (https://research.swtch.com/hwmm#path_to_x86-tso)I actually knew about fetch_max from \"implementing\" the corresponding instruction (risc-v amomax), but I haven't done any of the fun parts yet since my soft-CPU still only has a single core.reply",
      "Hi, author here. My superpower is spending unreasonable amounts of time researching things with no practical purpose. Occasionally I blog about it - as a warning to others.reply",
      "I liked the article. I saw your PS that we added it to the working draft for c++26, we also made it part of OpenMP as of 5.0 I think. It\u2019s sometimes a hardware atomic like on arm, but what made the case was that it\u2019s common to implement it sub-optimally even on x86 or LL-SC architectures. Often the generic cas loop gets used, like in your lambda example, but it lacks an early cutout since you can ignore any input value that\u2019s on the wrong side of the op by doing a cheap atomic read or just cutting out of the loop after the first failed CAS if the read back shows it can\u2019t matter. Also can benefit from using slightly different memory orders than the default on architectures like ppc64. It\u2019s a surprisingly useful op to support that way.If this kind of thing floats your boat, you might be interested in the non-reading variants of these as well. Mostly for things like add, max, etc but some recent architectures actually offer alternate operations to skip the read-back. The paper calls them \u201catomic reduction operations\u201d https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2025/p31...reply",
      "It's these kinds of posts that I appreciate reading the most, so thank you for sharing!reply",
      "\u201c\u2026no practical purpose\u201d Nonsense, I learned something about compilation today. Thank you for sharing.reply",
      "Only slightly related, but GPUs also have such instructions (exposed as InterlockedMax in HLSL and atomicMax in GLSL and CUDA).reply",
      "Aarch64 does indeed have a proper atomic max, but even on x86-64 you can get a wait-free atomic max as long as you only need to support integers up to 64. In that case you can simply do a `lock or` with 1 << i as your maximum. You can even support larger sizes by using multiple registers, e.g. four 64-bit registers for a u8 maximum.In most cases it's even better to just store a maximum per thread separately and loop over all threads once to compute the current maximum if you really need it.reply",
      "That\u2019s a neat trick, albeit with limited applicability given the very narrow range. Thanks for sharing!reply",
      "That's a cool find. I wonder if LLVM also does the other way around operation, where it pattern matches handwritten CAS loops and transform them into native ARM64 instructions.reply",
      "That's a very good question. A proper compiler engineer would know, but I will do my best to find something and report back.Edit: I could not find any pass with a pattern matching to replace CAS loops. The closest thing I could find is this pass: https://github.com/llvm/llvm-project/blob/06fb26c3a4ede66755... I reckon one could write a similar pass to recognize CAS idioms, but its usefulness would be probably rather limited and not worth the effort/risks.reply"
    ],
    "link": "https://questdb.com/blog/rust-fetch-max-compiler-journey/",
    "first_paragraph": "Interested in QuestDB for Capital Markets?QuestDB for Capital Markets?I occasionally interview candidates for engineering roles. We need people who understand\nconcurrent programming. One of our favorite questions involves keeping track of a\nmaximum value across multiple producer threads - a classic pattern that appears in many\nreal-world systems.Candidates can use any language they want.\nIn Java (the language I know best), you might write a CAS loop,\nor if you're feeling functional, use updateAndGet() with a lambda:But that lambda is doing work - it's still looping under the hood, retrying if\nanother thread interferes. You can see the loop right in AtomicLong's source code.Then one candidate chose Rust.I was following along as he started typing, expecting to see either an explicit\nCAS loop or some functional wrapper around one. But instead, he just wrote:\"Rust has fetch_max built in,\" he explained casually, moving on to the next\npart of the problem.Hold on. This wasn't a wrapper around"
  },
  {
    "title": "Libghostty is coming (mitchellh.com)",
    "points": 526,
    "submitter": "kingori",
    "submit_time": "2025-09-23T13:56:28 1758635788",
    "num_comments": 157,
    "comments_url": "https://news.ycombinator.com/item?id=45347117",
    "comments": [
      "I love how this guy founds + takes public + sells a multibillion company and then just goes right back to hacking. Legend.reply",
      "Hashimoto is an absolute wizard, but what I find most compelling about him is his absolutely uncanny ability to segment and abstract systems and interfaces in a way for maximum composability and minimal entanglement. He's like the walking embodiment of Rich Hickey's Simple Made Easy philosophy. It's like he designs software systems in such a way that they have no choice but to operate correctly and predictably.Also I just tried Ghostty for the first time. With iTerm2 and the Zsh/Powerlevel10k theme, there's an extremely brief but perceptible lag from running a command and the render. In ghostty it feels actually instant.reply",
      "I only wish after 1.3 he could hand over Ghostty to others for maintenance and move to improve other things.The software world really needs people like him to drive things forward.reply",
      "I love ghostty. The only thing that is missing is a find feature which is such an odd omissions for an incredible piece of software.reply",
      "To add...  The missing scrollbars feel painful to me.  I don't even want them for scrolling, really. I want the visual reference for:\"How much content is in this window\"and\"Where am I in that content\"I still use it daily but it means I have to switch tools for certain things, and reading log files or log output is one of the more common reasons I switch.I should probably look into trying to get the scrollback info into my statusline, No idea how easy or hard that is - so if someone has done it, feel free to shoot me pointers.reply",
      "Same here, scroll bars are literally the one missing feature keeping me from making Ghostty my daily driver. But the release notes roadmap mentions they will add them for 1.3. Waiting with anticipation.reply",
      "Maybe I'm misunderstanding your request but do you not pipe outputs into a pager? (Less, more, batcat, etc) I feel like I'm probably not understanding the context though.reply",
      "Suggestion to use Klogg (https://github.com/variar/klogg) for reading log files.I always was on the camp of \"tail -f file.log\" but since discovering this app, I saw the light.reply",
      "There's a few things like this but I'll give a pass because how new it is. Were this a mature project I'd be upset at incompetence, but given how young it is I think it's too early to be harsh.Plus, they're very open about what they're doing and prioritizing. As another commenter said, it's coming soon. For the rest, open feature requests, you might have needs that others didn't think of or even realize they neededreply",
      "They'll be working on it soon: https://x.com/mitchellh/status/1964826929326153898reply"
    ],
    "link": "https://mitchellh.com/writing/libghostty-is-coming",
    "first_paragraph": "Over two years ago, in one of my first public talks about Ghostty,\nI shared my vision for libghostty: an embeddable library for any application\nto embed their own fully functional, modern, and fast terminal emulator.\nLibghostty is finally starting to take shape, and I'm excited to share\nmore details about my plans for it.The first libghostty library will be libghostty-vt: a zero-dependency\nlibrary that provides an API for parsing terminal sequences and\nmaintaining terminal state, extracted directly from Ghostty's real-world proven\ncore. It doesn't even require libc!Disclaimer: This post is predominantly a roadmap update for libghostty and announcing what\nwill be the first shippable component of it. The Zig API is available for testing now, but the C\nAPI is not ready and will be coming very shortly. In both cases, it is early testing quality and\nnot ready for general usage.Let's start with some background on why I believe libghostty must exist.There are hundreds of programs that impleme"
  },
  {
    "title": "Markov chains are the original language models (elijahpotter.dev)",
    "points": 248,
    "submitter": "chilipepperhott",
    "submit_time": "2025-09-19T18:42:21 1758307341",
    "num_comments": 105,
    "comments_url": "https://news.ycombinator.com/item?id=45304980",
    "comments": [
      "If you would like to visually play with a Markov chain model my non-profit research org built a Markov plugin for, CODAP, our data analysis tool:https://codap.concord.org/app/static/dg/en/cert/index.html?d...If you select drawing mode from the first screen shown and then click the \"T\" icon you can type some text and it will generate a state diagram for you that you can then \"play\" and examine the output sequences.  If you have states that have multiple exit routes you can click on that state and adjust the probabilities of each option.reply",
      "The problem is the linear nature of markov chains. Sure they can branch but after an observation you are absolutely at a new state. A goes to B goes to C etc. A classic problem to understand why this is an issue is feeding in a 2D bitmap where the patterns are vertical but you\u2019re passing in data left to right which Markov chains can\u2019t handle since they are navigating exclusively on the current left to right inout. They miss the patterns completely. Similar things happen with language. Language is not linear and context from a few sentences ago should change probabilities in the current sequence of characters. The attention mechanism is the best we have for this and Markov chains struggle beyond stringing together a few syllables.I have played with Markov chains a lot. I tried having skip states and such but ultimately you\u2019re always pushed towards doing something similar to the attention mechanism to handle context.reply",
      "You can model multiple-hop dependencies as a Markov chain by just blowing up the state space as a Cartesian product. Not that that would necessarily make sense in practice, but in theory Markov chains have enormous expressive power.reply",
      "> Not that that would necessarily make sense in practice, but in theory Markov chains have enormous expressive power.Right - but this feels like being half-way between transformers and lookup tables; the latter have enormous expressive power too, as long as you're willing to handle even more state. I'm curious what else could be put on that spectrum, and where. Maybe there's something weaker than transformers, but good enough for practical applications, while being more resource-efficient?Related thought: understanding and compression seem to be fundamentally the same thing.reply",
      "> Maybe there's something weaker than transformers, but good enough for practical applications, while being more resource-efficient?I wish!  Gboard is terrible at predicting the correct form of a word.It generally knows the best word, but it doesn't get from context that (e.g.) a gerund form of the verb is the most appropriate nextreply",
      "> You can model multiple-hop dependencies as a Markov chain by just blowing up the state space as a Cartesian product.Where the state space would be proportional to the token length squared, just like the attention mechanisms we use today?reply",
      "It blows up at 2^n for Markov chains actually.Eg imagine input of red followed by 32bits or randomness followed by blue forever. Markov chains would learn red leads to blue 32bits later. They\u2019d just need to learn 2^32 states.reply",
      "> but in theory Markov chains have enormous expressive power.as long as you don't care about the quality of what they're expressing.  there's a reason they never did anything better than the postmodernism generator.putting paint in a cannon has enormous expressive power too, but if you aren't rothko, nobody's going to carereply",
      "> after an observation you are absolutely at a new stateThe essential property of a Markov chain is maintaining the Markov property:P(X_n+1 = x_n+1 | X_n = x_n, ..., x_1) = P(X_n+1 = x_n+1 | X_n = x_n)That is the future, given the present state, is conditionally independent of the past states.It's worth recognizing that decoder only LLMs (which are most the major LLMs used by people) maintain the Markov  property and can be properly understood as Markov chains.> The attention mechanism is the best we have for this and Markov chains struggle beyond stringing together a few syllables.Attention has nothing to do with the maintaining the Markov property but allows for a fantastically more complex representation of state which is where decoder only LLMs derive the majority of their power.tl;dr most of the LLMs people use are effectively Markov Chains.reply",
      "What is the conceptual difference between a \"past state\" and a \"present state\"? In a typical conversation with an LLM, you have past messages that remain in the KV cache when generating the next token (so as not to recalculate everything). Yet here, everything that came before is reinterpreted as part of the present state. In other words, it seems as if you can take any past state and fold it into one large concatenated present state - and, by that logic, call basically anything a Markov chain? I can't wrap my head around it. Can you give an example of a non-Markov system?reply"
    ],
    "link": "https://elijahpotter.dev/articles/markov_chains_are_the_original_language_models",
    "first_paragraph": "Heads Up: This article is a republished (with some tweaks on spelling, grammar and layout) version of\nan article I wrote in my senior year of high school for my Linear Algebra class.\nAs such, the publish date is not quite correct.I've come to the conclusion that there are four stages to the current AI hype cycle in an individual person's brain, at least as it pertains to large language models.\nAt the very least, these are the stages I went through.\"Wow! This is so cool! I can converse with a computer just like a real person!\"This is where all the science fiction fantasies come to fruition.\nThe possibilities seem endless.\nWe can all kick back and relax now, right?\"Hmm... This isn't as effective as I originally thought.\"It seems like the brand-new technology is really only applicable to the kinds of work no one wants to do anyway.\nWhat it is able to do doesn't provide too much value to you.\nIt gets information and logic wrong often enough that it cannot be trusted for just about anything"
  },
  {
    "title": "The Top Programming Languages 2025 (ieee.org)",
    "points": 24,
    "submitter": "jnord",
    "submit_time": "2025-09-23T23:42:50 1758670970",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=45354314",
    "comments": [
      "I totally expected JavaScript to get the 2nd spot but looks like TypeScript pulled the votes away. I personally consider JavaScript and TypeScript to be close enough for their numbers to be added up.reply",
      "I agree, I think it makes most sense to add them up to be the true #2.reply",
      "And #1 on the jobs chartreply",
      "I was pondering similar thoughts. Will LLM assistants ossify our current programming languages? My limited testing seems to show LLM assistants do well the more popular the language is (more data in its training), so is the hurdle for adoption of something new going to get even higher?In an alternate universe, if LLM only had object oriented code to train on, would anyone push programming forward in other styles?reply",
      "Of course it\u2019s always been easier to find talent when working in more popular languages. That\u2019s the big risk you take when you choose the road less traveled.reply",
      "Well I'm happy that Haskell registers at all! At a level similar to ... LabView (oof). The article proper is rather uninteresting, I'm afraid.reply",
      "huh. This seems to suggest there are more Rust jobs than Ruby. Wild considering how insanely popular Ruby was 10 years ago.reply",
      "LLMs could also ease adoption of new languages by making hiring less of a barrier to using something more niche. It becomes easier for someone to hit the ground running and be productive even if they still need to put the time in to become an expert.Instead I find myself more concerned with which virtual machine or compiler tool chain the language operates against.  Does it need to ship with a VM or does it compile to a binary? Do I want garbage collection for this project?Maybe in that way the decision moves up an abstaction layer the same way we largely moved away from assembly languages and caring about specific processor features.reply",
      "It\u2019s amazing where java is.reply"
    ],
    "link": "https://spectrum.ieee.org/top-programming-languages-2025",
    "first_paragraph": "Does AI mean the end for the Top Programming Languages?Stephen Cass is the special projects editor at IEEE Spectrum.Since 2013, we\u2019ve been metaphorically peering over the shoulders of programmers to create our annual interactive rankings of the most popular programming languages. But fundamental shifts in how people are coding may not just make it harder to measure popularity, but could even make the concept itself irrelevant. And then things might get really weird. To see why, let\u2019s start with this year\u2019s rankings and a quick refresher of how we put this thing together.In the \u201cSpectrum\u201d default ranking, which is weighted with the interests of IEEE members in mind, we see that once again Python has the top spot, with the biggest change in the top five being JavaScript\u2019s drop from third place last year to sixth place this year. As JavaScript is often used to create web pages, and vibe coding is often used to create websites, this drop in the apparent popularity may be due to the effects"
  },
  {
    "title": "NYC Telecom Raid: What's Up with Those Weird SIM Banks? (tedium.co)",
    "points": 68,
    "submitter": "coloneltcb",
    "submit_time": "2025-09-23T23:36:16 1758670576",
    "num_comments": 26,
    "comments_url": "https://news.ycombinator.com/item?id=45354262",
    "comments": [
      "This guy claims that it's not that suspicious and not a state-backed operation.https://x.com/ErrataRob/status/1970586083374112784reply",
      "Can\u2019t read it since I don\u2019t have a login there but i\u2019m guessing they buy sims from all over the country and sms on matching prefixes since people will assume a local number is less likely to be spam.This explains using such a bank. You want to cover as many prefixes as possible and you can\u2019t match area codes with traditional sms services.reply",
      "You can also see his takes on bsky [1] or h blog he posted there [2][1] https://bsky.app/profile/erratarob.bsky.social\n[2] https://cybersect.substack.com/p/that-secret-service-sim-far...reply",
      "The second link there is much more meaningful.I actually did see the tweet in full it turns out. It's just that there's not much content so i figured \"oh it's one of those twitter thread chains i can't read\".reply",
      "These days the way to go is social media proxies. A popular one is xcancel. Just replace the x in the domain with xcancel and you'll land on a proxy site (somebody's Nitter instance to be specific): https://xcancel.com/ErrataRob/status/1970586083374112784Still not gonna help if you have cookies disabled because of the rate limiting, but hey.reply",
      "You don't need a login to read a single tweet.reply",
      "Twitter is inconsistent for me. From the mobile (FF, not authenticated) it's blocked but from desktop (FF, not authenticated) is visible.reply",
      "Thanks! I was assuming it was a chain with more details than i saw there.reply",
      "I am very familiar with the hardware being used in that operation and Rob is 100% correct.Someone used an online SMS service to send threatening messages to someone in the fuhrer's cabinet, and the secret service traced the SIM card back to one of these rented apartments. The reason it was linked to a \"Chinese state sponsored blah blah blah\" is because most Chinese criminal operations in the US have some indirect benefit to the Chinese government, which is why they are allowed to operate.You could use this hardware to launch some sort of a flooding attack, but given the density all you are going to knock out is the one cell site all your devices are talking to. If China wanted to knock out cell service around the UN they would use the hundreds of thousands of backdoored Android phones in New York to launch a more distributed attack.reply",
      "I thought it was someone running a mobile ip proxyreply"
    ],
    "link": "https://tedium.co/2025/09/23/secret-service-raid-sim-bank-telecom-hardware/",
    "first_paragraph": "When I learned that the Secret Service had taken down a giant \u201cSIM farm\u201d in the NYC area, I immediately had two thoughts: One, \u201cWow, that sounds like the reason we all get so many scam calls.\u201d And two, \u201cHoly crap, what is that weird-ass piece of hardware?!?!??!?!??!?!??!?!?\u201dYou must understand, dear reader, the bizarre gear they were using. I\u2019ve never seen anything like it before.Much will be written about the threat to the telecom system, which is the angle the Secret Service is taking, as it was uncovered right around the time of a United Nations General Assembly meeting. I want to know the deal with the hardware itself.You know the old board game Guess Who? You know, with the cards that stick up, and the other player has to guess what faces you have? Imagine that times 100, but with the cards a 20th of the size of the Guess Who cards, and add a whole freaking ton of antennas into the mix, and you have this crazy-ass device, the niche-iest of niche electronic devices. Each device hol"
  },
  {
    "title": "Getting AI to work in complex codebases (github.com/humanlayer)",
    "points": 221,
    "submitter": "dhorthy",
    "submit_time": "2025-09-23T14:27:36 1758637656",
    "num_comments": 222,
    "comments_url": "https://news.ycombinator.com/item?id=45347532",
    "comments": [
      "OpenAI Codex has an `update_plan` function[0]. I'm wondering if switching the implementation to this would improve the coding agent's capabilities or is the default for simplicity better.[0]: https://blog.toolkami.com/openai-codex-tools/reply",
      "I built a package which I use for large codebase work[0].It starts with /feature, and takes a description. Then it analyzes the codebase and asks questions.Once I\u2019ve answered questions, it writes a plan in markdown. There will be 8-10 markdowns files with descriptions of what it wants to do and full code samples.Then it does a \u201ccode critic\u201d step where it looks for errors. Importantly, this code critic is wrong about 60% of the time. I review its critique and erase a bunch of dumb issues it\u2019s invented.By that point, I have a concise folder of changes along with my original description, and it\u2019s been checked over. Then all I do is say \u201cgo\u201d to Claude Code and it\u2019s off to the races doing each specific task.This helps it keep from going off the rails, and I\u2019m usually confident that the changes it made were the changes I wanted.I use this workflow a few times per day for all the bigger tasks and then use regular Claude code when I can be pretty specific about what I want done. It\u2019s proven to be a pretty efficient workflow.[0] GitHub.com/iambateman/speedrunreply",
      "This looks very cool.I see it has a pseudo code step, was it helpful at all to try to define a workflow, process or procedure beforehand?I've also heard that keeping each file down to 100 lines is critical before connecting them.  Noticed the same but haven't tried it in depth.reply",
      "I've used this pattern on two separate codebases. One was ~500k LOC apache airflow monolith repo (I am a data engineer). The other was a greenfield flutter side project (I don't know dart, flutter, or really much of anything regarding mobile development).All I know is that it works. On the greenfield project the code is simple enough to mostly just run `/create_plan` and skip research altogether. You still get the benefit of the agents and everything.The key is really truly reviewing the documents that the AI spits out. Ask yourself if it covered the edge cases that you're worried about or if it truly picked the right tech for the job. For instance, did it break out of your sqlite pattern and suggest using postgres or something like that. These are very simple checks that you can spot in an instant. Usually chatting with the agent after the plan is created is enough to REPL-edit the plan directly with claude code while it's got it all in context.At my day job I've got to use github copilot, so I had to tweak the prompts a bit, but the intentional compaction between steps still happens, just not quite as efficiently because copilot doesn't support sub-agents in the same way as claude code. However, I am still able to keep productivity up.-------A personal aside.Immediately before AI assisted coding really took off, I started to feel really depressed that my job was turning into a really boring thing for me. Everything just felt like such a chore. The death by a million paper cuts is real in a large codebase with the interplay and idiosyncrasies of multiple repos, teams, personalities, etc. The main benefit of AI assisted coding for me personally seems to be smoothing over those paper cuts.I derive pleasure from building things that work. Every little thing that held up that ultimate goal was sucking the pleasure out of the activity that I spent most of my day trying to do. I am much happier now having impressed myself with what I can build if I stick to it.reply",
      "It seems we're still collectively trying to figure out the boundaries of \"delegation\" versus \"abstraction\" which I personally don't think are the same thing, though they are certainly related and if you squint a bit you can easily argue for one or the other in many situations.> We've gotten claude code to handle 300k LOC Rust codebases, ship a week's worth of work in a day, and maintain code quality that passes expert review.This seems more like delegation just like if one delegated a coding task to another engineer and reviewed it.> That in two years, you'll be opening python files in your IDE with about the same frequency that, today, you might open up a hex editor to read assembly (which, for most of us, is never).This seems more like abstraction just like if one considers Python a sort of higher level layer above C and C a higher level layer above Assembly, except now the language is English.Can it really be both?reply",
      "I would say its much more about abstraction and the leverage abstractions give you.You'll also note that while I talk about \"spec driven development\", most of the tactical stuff we've proven out is downstream of having a good spec.But in the end a good spec is probably \"the right abstraction\" and most of these techniques fall out as implementation details. But to paraphrase sandy metz - better to stay in the details than to accidentally build against the wrong abstraction (https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction)I don't think delegation is right - when me and vaibhav shipped a week's worth of work in a day, we were DEEPLY engaged with the work, we didn't step away from the desk, we were constantly resteering and probably sent 50+ user messages that day, in addition to some point-edits to markdown files along the way.reply",
      "It\u2019s definitely not abstraction. You don\u2019t watch a compiler output machine code and constantly \u201cresteer\u201d it.reply",
      "This article is like a bookmark in time of where I exactly gave up (in July) managing context in Claude code.I made specs for every part of the code in a separate folder and that had in it logs on every feature I worked on. It was an API server in python with many services like accounts, notifications, subscriptions etc.It got to the point where managing context became extremely challenging. Claude would not be able to determine business logic properly and it can get complex. e.g. if you want to do a simple RBAC system with an account and profile with a junction table for roles joining an account with profile. In the end what kind of worked was I had to give it UML diagrams of the relationship with examples to make it understand and behave better.reply",
      "i think that was one of the key reasons we built research_codebase.md first - the number one concern is\"what happens if we end up owning this codebase but don't know how it works / don't know how to steer a model on how to make progress\"There are two common problems w/ primarily-AI-written code1. Unfamiliar codebase -> research lets you get up to speed quickly on flows and functionality2. Giant PR Reviews Suck -> plans give you ordered context on what's changing and whyMitchell has praised ampcode for the thread sharing, another good solution to #2 - https://x.com/mitchellh/status/1963277478795026484reply",
      "Thanks to write such detailed article... lot of very well supported information.I've been working on something what I call Micromanaged Driven Development https://mmdd.dev and wrote about it at https://builder.aws.com/content/2y6nQgj1FVuaJIn9rFLThIslwaJ/...I'm in a similar search and I'm stoked to see that many people riding the wave of coding with AI is moving in this direction.Lots of learning ahead.reply"
    ],
    "link": "https://github.com/humanlayer/advanced-context-engineering-for-coding-agents/blob/main/ace-fca.md",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page."
  },
  {
    "title": "Kitty \u2013 GPU based terminal emulator (kovidgoyal.net)",
    "points": 53,
    "submitter": "andsoitis",
    "submit_time": "2025-09-20T13:51:05 1758376265",
    "num_comments": 31,
    "comments_url": "https://news.ycombinator.com/item?id=45313417",
    "comments": [
      "My progression has been st -> kitty -> ghostty. I wanted to love st, but found too many unpolished corners. Kitty was great, but it felt like the exact opposite of st. Very large and opinionated. ghostty, at least originally, was new and something between st and kitty. With claude code I wonder where the landscape of personalized software will land. st and others may be on to something in this era.reply",
      "[foot](https://codeberg.org/dnkl/foot) is an excellent st alternative on wayland.reply",
      "I'm finding moderate* success with Terminal Click, but it's still early days and even after it matures, some people will understandably never be fans of an indie dev keeping everything closed source.However, I hope to add to the landscape of healthy competition.* I'm the author and I haven't done any social media promotion yet. Even so, we have 500+ subscribers[0] https://terminal.clickreply",
      "Whoever designed the default bindings for kitty clearly has a similar brain to mine.  I think I adapted to those keybindings in about an hour, and can't use any other terminal without remapping the keys to match kitty.reply",
      "Is this different from the KiTTY variant of PuTTY?https://www.9bis.net/kitty/index.htmlI'm just confused now, haha.  What's in a name, anyways...reply",
      "See https://news.ycombinator.com/item?id=24645050 .reply",
      "Kitty terminal can essentially replace a big part of a linux desktop environment, if you want it to. It's infinitely customizable AND has own opinions at the same time.Also my interactive scrollbar change was recently merged in, so if that was stopping you, you can now replace iTerm on your mac with it :)reply",
      "> infinitely customizableExcept for loading your own shaders, which they decided they weren't interested in and wouldn't support.reply",
      "?\nwhat do you think we're doing with our desktop environments?reply",
      "My only guess is that this refers to graphical rendering support. https://sw.kovidgoyal.net/kitty/graphics-protocol/I both see enormous value mixing text and console, and also worry that TUI will overcomplicate and add even more unnecessary embellishment than it already is trending towards? Semi grump opinion. But it feels weird introducing a new canvas.I do like the idea of graphics being online in a terminal session. Not a captive app experience in a text/graphic UI, but just cli commands that can have some more visual output too.reply"
    ],
    "link": "https://sw.kovidgoyal.net/kitty/",
    "first_paragraph": "The fast, feature-rich, GPU based terminal emulatorUses GPU and SIMD vector CPU instructions for best in classUses threaded rendering for absolutely minimal latencyPerformance tradeoffs can be tunedGraphics, with images and animationsLigatures, emoji with per glyph font substitution and variable fonts and font featuresHyperlinks, with configurable actionsControl from scripts or the shellExtend with kittens using the Python languageUse startup sessions to specify working environmentsProgrammable tabs, splits and multiple layouts to manage windowsBrowse the entire history or the output from the last command\ncomfortably in pagers and editorsEdit or download remote files in an existing SSH sessionLinuxmacOSVarious BSDsPioneered various extensions to move the entire terminal ecosystem forwardTerminal graphics protocolComprehensive keyboard handling in terminalsLots more in Terminal protocol extensionsTo get started see Quickstart.Watch kitty in action!Timestamps for the above video:IntroPag"
  },
  {
    "title": "Go has added Valgrind support (googlesource.com)",
    "points": 469,
    "submitter": "cirelli94",
    "submit_time": "2025-09-23T09:26:57 1758619617",
    "num_comments": 121,
    "comments_url": "https://news.ycombinator.com/item?id=45344708",
    "comments": [
      "Author of the linked CL here: we added this mostly so that we could abuse the memory initialization tracking to test the constant-time-ness of crypto code (similar to what BoringSSL does, proposed by agl around fifteen years ago: https://www.imperialviolet.org/2010/04/01/ctgrind.html), which is an annoyingly hard property to test.We're hoping that there are also a bunch of other interesting side-effects of enabling the usage of Valgrind for Go, in particular seeing how we can use it to track how the runtime handles memory (hopefully correctly!)edit: also strong disclaimer that this support is still somewhat experimental. I am not 100% confident we are properly instrumenting everything, and it's likely there are still some errant warnings that don't fully make sense.reply",
      "w.r.t. your edit:  Is there anything the community at large can do to aid your efforts?reply",
      "This is super cool. Hopefully it will flush\nout other issues in Go too.But I wonder why its not trivial to throw a bunch\nof different inputs at your cyphering functions and measure \nthat the execution times are all within an\nepsilon tolerance?I mean, you want to show constant time \nof your crypto functions, why\nnot just directly measure the time under\nlots of inputs? (and maybe background Garbage\nCollection and OS noise) and see how constant\nthey are directly?Also some CPUs have a counter for conditional \nbranches (that the rr debuger leverages), and you\ncould sample that before and after and make\nsure the number of conditional branches does\nnot change between decrypts -- as that AGL post\nmentions branching being the same is \nimportant for constant time.Finally, it would also seem trivial to track\nthe first 10 decrypts, take their maximum\ntime add a small extra few nanoseconds tolerance,\nand pad every following decrypt with\na few nanoseconds (executing noops) \nto force constant time when it is varying.And you could add an assert that anything over that\nestablished upper bound crashes the program since it\nis violating the constant time property. I \nsuppose the real difficulty is if the OS deschedules\nyour execution and throws off your timing check...reply",
      "Because \"constant time\" here means algorithms that are O(1), rather than O(n).  This isn't about wall-clock execution time, it's about avoiding the number of operations performed being based on attributes of the input.reply",
      "> But I wonder why its not trivial to throw a bunch of different inputs at your cyphering functions and measure that the execution times are all within an epsilon tolerance?My guess is because the GC introduces pauses and therefor nondetermism in measuring the time anything takes.reply",
      "I believe that Go can have GC disabled so that issue could be moot.reply",
      "> Instead of adding the Valgrind headers to the tree, and using cgo to\ncall the various Valgrind client request macros, we just add an assembly\nfunction which emits the necessary instructions to trigger client\nrequests.Love that they have taken this route, this is the way bootstraped toolchains should be, minimal building blocks and everything else on the language itself.reply",
      "I am still curious, had they not gone this route, and avoided the other two routes mentioned, what could they have done to make this process as simple as the rest of Go tends to be, and nearly as performant? I guess this is an ongoing question to be solved at a future date.reply",
      "It would be another scenario to use as ammunition for \"see you can't implement a language toolchain without using C\", usually voiced by folks without background in compiler design, and understanding that most of the time that is a decision that spurs out of convenience and nothing else.Assembly isn't that hard, those of us that grown around 8 bit home computers were writing Z80 and 6502 Assembly aged 10 - 12 years old, while having fun cracking games and setting the roots of Demoscene.reply",
      "Oh. There was a comment to your comment saying that kids learning assembly was easy and \u2014 I guess? \u2014 implying that adults-learning-assembly is hard. I teach adults assembly on an irregular basis. Adults-learning-assembly is hard because adults are rational animals who (correctly) assume I'm an idiot for insisting on assembly. Once I explain the long-term benefits for our exceedingly specific use case, they pick up assembly in a few hours. Assembly isn't hard. Assembly is annoying because it takes absolutely gobsmacking amounts of assembly to do anything.reply"
    ],
    "link": "https://go-review.googlesource.com/c/go/+/674077",
    "first_paragraph": ""
  },
  {
    "title": "A vibrator helped me debug a motorcycle brake light system (bikesafe.me)",
    "points": 12,
    "submitter": "mygnu",
    "submit_time": "2025-09-20T11:33:47 1758368027",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=45312403",
    "comments": [
      "I too have repurposed a similar machine to try to help me solve a nagging problem.One of my vehicles uses a hydraulic clutch. By design, air bubbles can be trapped in the master cylinder due to factory bends in the lines and the orientation of the master cylinder when it is properly installed. If this happens it will be impossible to shift the gears (manual transmission) until the air is bled from the lines.I tried multiple air burping procedures without success. Part of the procedure involves tapping on the hydraulic lines to help dislodge air bubbles so they can flow up and out of the lines into the fluid reservoir. The area is tight and in order to do this efficiently you must remove the master cylinder from the vehicle.I decided to avoid that removal step and employ a Sharper Image back massager as a tool to dislodge air bubbles with the system in place in the vehicle. Since that massager is huge it would not fit into tight places under the hood so I used a length of PVC pipe held tight to the lines to transfer the vibration to the lines. This allowed me to get large air bubbles out of the lines. In the end I was not able to remove enough air using this hack because an O-ring near the bottom of the system is missing or bad and that allows air to enter and flow up so i could vibrate that thing all day and never get anywhere. It was a shot in the dark anyway. If that O-ring were not missing or bad I know it would work.reply",
      "I'm given to understand there are multiple companies manufacturing those back massagers in different shapes and colors these days, if you need one that can reach into those  tight places under the hood without relying on the PVC pipe to help it along.reply",
      "Mildly related:\"Evan and Katelyn\" is the name of a youtube channel where (amongst other less mature things) they make a bunch of small things with concrete and epoxy, like a concrete keyboard. Both materials (especially concrete) need some assistance in flowing into small spaces and getting bubbles out. For the size of project they often work on... a personal vibrator seems to work damn well.Concrete keyboard video as an example: https://www.youtube.com/watch?v=HUSG5ohV0nYreply",
      "Sheesh, talk about \"taking a break\"...I for sure approve this creative way to test thingsreply",
      "This is a blog post, so it should be a regular submission even if you\u2019re the one you wrote it.https://news.ycombinator.com/showhn.html> Show HN is for something you've made that other people can play with. HN users can try it out, give you feedback, and ask questions in the thread.reply",
      "We updated the title, thanks.reply",
      "fair enough, thanksreply"
    ],
    "link": "https://bikesafe.me/blogs/news/how-a-vibrator-helped-me-debug-a-motorcycle-brake-light-system",
    "first_paragraph": "\nFRESH BATCH SHIPPING NOW\n\nMULTI BUY SAVINGS\nI wrote about how BrakeBright came to be in my previous blog post, \"My Quest to Make Motorcycle Riding Safer...\". Give it a read if you're curious about the backstory. Since launch, riders from dozens of countries have picked up the device, and the feedback has been overwhelmingly positive.This support drives me to keep improving it. That\u2019s exactly why BrakeBright has a built-in USB port, to deliver firmware updates, new features, and performance improvements to every rider, for free.Along with feedback from users, I\u2019ve been out testing the device myself. A few weeks back, I took a ride from Glasgow to Birmingham, mostly hammering down motorways. That trip helped resurface a specific edge case I\u2019d seen before: at constant high speeds, the brake light would occasionally flicker briefly, even without any real slowing down. I had already tuned things to reduce this after shorter rides, but this long haul proved it wasn\u2019t fully sorted. It was a "
  },
  {
    "title": "How to draw construction equipment for kids (alyssarosenberg.substack.com)",
    "points": 82,
    "submitter": "holotrope",
    "submit_time": "2025-09-23T19:09:50 1758654590",
    "num_comments": 38,
    "comments_url": "https://news.ycombinator.com/item?id=45351410",
    "comments": [
      "Great blog post, totally agree with it... except, \"Cars and Trucks and Things That Go\" condescending? If you think Richard Scarry is trying to keep kids engaged with \"the false novelty of a carrot car\" (!!!) you do NOT understand the appeal of that book to kids, despite the claim to the contrary.reply",
      "If I had more time I'd make myself a bananamobile.  Sure it would only be useful for driving in the city parade, but I WANT one.  (anyone want to fund my mid-life crisis?  You get to see a bananamobile out of the deal)reply",
      "You would not be the first:https://bigbananacar.com/reply",
      "I guarantee you if you build that bananamobile you will find plenty of uses for it! Don't hold back!reply",
      "I have 3000 years worth of projecs in the queue. I'm not holding back.reply",
      "Maybe you can buy a used wiener mobile and unlock the banana skin for it.reply",
      "A yellow vinyl wrap plus fabricating a couple of cones for the ends of the wiener to morph it into a banana sounds a heck of a lot cheaper than fabricating a fiberglass banana shell from scratch, I think you\u2019re onto something here! I\u2019ll start the GoFundMe and work on procuring a lightly used wiener mobile, GP will be cruising in a banana mobile by next summer :)reply",
      "Kids, shit. I'm 42 and any time I run across a copy, I re-read it just for the sheer pleasure of seeing what all's happening on every page!reply",
      "Testament to children's interest in construction equipment is the commercial success of the British theme park chain Diggerland[0]. I'm not affiliated with it, and I've never been, I just think it's an hilarious concept.[0] https://www.diggerland.com/reply",
      "If you've never actually used an excavator, front-end loader, or any other large equipment, you'll really never know how satisfying it can be. They are powerful equipment that can move a lot of dirt in a short amount of time, but only if you're good at it. It takes skillz to do things fast and smooth in a way that's not going to tear up the equipment or injure someone. Crane operators are impressive too. Watching crews keep tonnes of load under control flying through the air and placing it down softly (while sometimes not in line of sight of the operator) is impressive to watch. Why more people are not fascinated/impressed with it is beyond me. I think people assume it's all automated and a cushy job and do not realize how much manual control is required. Kind of like those \"I could build it in a weekend\" comments discrediting the amount of work someone else did.reply"
    ],
    "link": "https://alyssarosenberg.substack.com/p/how-to-draw-construction-equipment",
    "first_paragraph": ""
  },
  {
    "title": "Launch HN: Strata (YC X25) \u2013 One MCP server for AI to handle thousands of tools",
    "points": 115,
    "submitter": "wirehack",
    "submit_time": "2025-09-23T14:52:07 1758639127",
    "num_comments": 60,
    "comments_url": "https://news.ycombinator.com/item?id=45347914",
    "comments": [
      "1. Interesting approach, but the pricing seems 1-2 orders of magnitude too expensive.  For your example for slack, It contains 4 calls for an action. Pricing shows 100 dollars per 10k cals, so 1 cent per call. This means, for an agent that lets say does 4 actions, so and your examples show at least 3-4 api calls per action , it's already 12 cents?  Similar tools like composio.dev have 200k calls for 29 dollars, so around 70x cheaper (both for the cheapest tier). Even with needing only 1 call for subsequent calls, 1 cent per single api call sounds wrong, at least for our use case it does not economic sense to pay 5-10 cents on top of llm costs on every user query.\nApologies if I'm missing something!2. Could this not be replicated by others by just handmaking a fuzzy search tool on the tools? I think this is the approach that will win, even with rag for lets say 10k plus tools maybe in the future, but not sure how much differentiation this is in the long term, i've made this search tool myself a couple of times alreadyreply",
      "1. Hi! We noticed this for Strata as well so we are ONLY counting the execute_action in Strata. This means the fee is the same as using the traditional, flat approaches. In other words, the 3 previous calls does not cost you anything!2. I think the main drawback of search method is like giving a human lots of tools/APIs but you can ONLY access them via a search interface. This feels weird and should be improved. For our approaches, the step by step methods allow you to see what categories/actions are available. We also provide a documentation search so that you get the best out of both worlds.reply",
      "1. Oh okay great, maybe clarify it in the pricing page? That mcp server call means just execute. But its' still 10x more expensive right?2. From what i understand it's just nested search right? It is not anything different, if you do flat or embedding search or fuzzy/agentic nested is a choice for sure, but Im just saying not sure how defensible this is, if all other mcp competitors or even users themselves put in a nested search toolreply",
      "1. Sure, we will clarify that in the pricing page, thank you! As you can see from our evaluation, we are much better than official MCP servers. I think people care more about getting things done correctly. Otherwise, you waste all the model tokens for nothing. We do have enterprise deals where we can work out a customized pricing plan for your specific use case. Come talk to us if you are interested.2. One VERY important distinction is that the model is doing the \"search\" here, not some RAG algorithm or vector database. Therefore, as the model becomes smarter, this approach will be more accurate as well.reply",
      "1. I was not talking about official MCP servers, those are often even free. Im talking about pricing of other devtools for aggregating tools/mcp's. I think this is an obvious space to build i agree, i just worry about differentiation. Its a search space not as big as web search, or complex (order doesnt matter).2. Yes, i see, this is what i meant by agentic search. Essentially is a tiny subagent, taking list of tools in and out the relevant ones. Still implementable in 5 mins. But i guess if the experience is very smooth enterprise might pay?reply",
      "1. Yes I agree. To be honest we are a young company (as you can tell we are from YC X25), so we are still figuring out the pricing. But thank you for the feedback and sharing your thoughts.2. Yes the idea is not complex once you understand it. But there are some nuances we found along the way and supporting more integrations are always important but requires engineering efforts. Thank you!reply",
      "How do you folks think about the Manus finding on dynamic tool selection? https://manus.im/blog/Context-Engineering-for-AI-Agents-Less...> A natural reaction is to design a dynamic action space\u2014perhaps loading tools on demand using something RAG-like. We tried that in Manus too. But our experiments suggest a clear rule: unless absolutely necessary, avoid dynamically adding or removing tools mid-iteration. There are two main reasons for this:> 1. In most LLMs, tool definitions live near the front of the context after serialization, typically before or after the system prompt. So any change will invalidate the KV-cache for all subsequent actions and observations.> 2. When previous actions and observations still refer to tools that are no longer defined in the current context, the model gets confused. Without constrained decoding, this often leads to schema violations or hallucinated actions.> To solve this while still improving action selection, Manus uses a context-aware state machine to manage tool availability. Rather than removing tools, it masks the token logits during decoding to prevent (or enforce) the selection of certain actions based on the current context.reply",
      "Their findings on KV-cache invalidation are spot on for a single-context approach.Strata's architecture is philosophically different. Instead of loading a large toolset and masking it, we guide the LLM through a multi-step dialogue. Each step (e.g., choosing an app, then a category) is a separate, very small, and cheap LLM call.So, we trade one massive prompt for a few tiny ones. This avoids the KV-cache issue because the context for each decision is minimal, and it prevents model confusion because the agent only ever sees the tools relevant to its current step. It's a different path to the same goal: making the agent smarter by not overwhelming it. Thanks for the great link!reply",
      "That article looks great and didn't get attention on HN even though it was posted 9 times - yikes!I've sent a repost invite for the first submission (https://news.ycombinator.com/item?id=44608593) - hopefully it will get some discussion here.reply",
      "Thanks for reaching out. Just reposted.reply"
    ],
    "link": "item?id=45347914",
    "first_paragraph": ""
  },
  {
    "title": "Periodic Table of Cognition (kk.org)",
    "points": 4,
    "submitter": "garspin",
    "submit_time": "2025-09-24T00:33:24 1758674004",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://kk.org/thetechnium/the-periodic-table-of-cognition/",
    "first_paragraph": "The Periodic Table of CognitionThe Trust Quotient (TQ)Emotional AgentsEverything I Know about Self-PublishingNo Limit for BetterArtificial Intelligences, So FarAn Audience of OneEpizone AI: Outside the Code StackBest Thing Since Sliced Bread?Public IntelligenceThe UnpredictedThe Self-Domesticated ApeThe Handoff to Bots50 Years of Travel Tips101 Additional AdvicesType 2 GrowthRights / ResponsibilitiesThe Scarcity of the Long-TermHill-Making vs Hill-ClimbingFuture EmbarrassmentsThe Trust FlipThings We Didn\u2019t Know About OurselvesThe Boredom DeviceLevels of WealthThe Tradeoffs in AIGod, the SuperpositionThe Best Since Sliced BreadJobs of the FutureThe Slow Frontier of Genetic ChoiceHow to Walk-and-TalkPaying people to have childrenThe Missing Monuments of Silicon ValleyThe Sphere, a new platformDreams are the Default for IntelligenceCringeworthy in the FutureChina\u2019s Immigrant Energy, Underappreciated12 Assumptions for Extraterrestrial LifeOvercoming Bias Against BignessThe Need For a BodyW"
  },
  {
    "title": "Is Fortran better than Python for teaching basics of numerical linear algebra? (loiseaujc.github.io)",
    "points": 45,
    "submitter": "Bostonian",
    "submit_time": "2025-09-23T19:29:26 1758655766",
    "num_comments": 39,
    "comments_url": "https://news.ycombinator.com/item?id=45351624",
    "comments": [
      "The post dismisses Julia quite quickly, especially since it is a language essentially purpose built to teach numerical linear algebra. Numerical methods is taught in Julia in at least a dozen universities I'm aware of, including MIT.Unicode support and a few other syntax niceties make translation from the blackboard to the editor nice and clean. Fortran is great but legibility and easy tooling like (reproducible) package managers are paramount in teachingreply",
      "Saying fortran is not legible is not an argument that holds water against fortran 90. I don't want to be uncharitable but I don't know how anyone can have this opinion unless they just don't have much familiarity with it.reply",
      "I didn\u2019t say it was illegible. I said legibility is paramount, and I don\u2019t think it makes the right trade offs in that regard to be a great teaching languageIt\u2019s far more legible for numerics than a lot of languages, maybe except Julia and Chapel. Julia was just driven in large part by teaching mathematics at mit and I think that showsreply",
      "A large share of the illegibility of Fortran code is actually just the aversion of numerics code to having meaningful variable names.reply",
      "So, the OP is an actual educator whereas I've only really advised grad students or undergrads. I'm surprised being exposed to any new language doesn't come with it's \"whys\" for students. Like why should we care about type safety anyway? Or why not loop over all indices, why use (:) for some of them? May be I'm not really convinced that the whys from students in a python class are worse than the whys in fortran. Honestly, if there is some compiler option for turning on implicit none by default, I'd just do that too just to get people in the door as that too feels like more confusion than it's worth keeping, although they do need to learn what it means before they leave.Also, the downside is fortran does not have nice plotting capabilities without an external tool. At least I know of no nice libraries like matplotlib, which again is a point in just teaching them a more general purpose language from the get go to get used to it so they can plot and code in the same language...or perhaps, matlab/octave et al as others suggested. I feel like the niceness of fortran (namely, well defined type safe function/subroutine interfaces and easy path to writing performant code) that isn't offered by python is only useful after the first threshold of learning to put algorithm to paper. The literally second (and arguably for some fields, even more important) task of actually plotting results doesn't have the same convenience as the intrinsic procedures in fortran, whereas if they had learned julia or python, these tools would be at the very least be at the same convenience level of the array facilities, essentially behind a rather easy[^] to use library. In fact, in julia, you're already mostly there although it's not my cup of tea. Perhaps the answer is julia after all.Does OP's courses just use an external program (like gnuplot) or a black box to plot?[^] easy to use once you know how to program a little, of course.reply",
      "Fortran has a few nice plotting libraries. [0] Including matplotlib.Personally, I've only used ogpf, which is a single-file library, making it easier to run for beginners.[0] https://fortran-lang.org/packages/graphics/reply",
      "I did a cursory scan and some of these seem not my cup of tea, but honestly ogpf looks rather pleasant for quick plots. Thanks! I might use this.That said, the point of these being external libraries and thus making them a bit less convenient still sort of stands, as being external libraries means you need to link them which exposes more CS tier stuff (installing libraries, make files, etc) that distracts from just learning codes, which again just motivates using a tool that abstracts some of that behind a managed package and library system.I'm assuming you could use things like lfortran in jupyter which I imagine might allow these things to be bundled, although I haven't followed that effort as of late.reply",
      "What language does have built-in plotting capabilities that don't depend on external libraries?reply",
      "Language vs system with a language?Mathematica, matlab, maple, octave, etc.reply",
      "My scientific computing journey was- Matlab in the first few science lab courses + first CS course.- C++ in second CS course- Fortran for the scientific computing courseI found Fortran worse than matlab. The error messages were difficult to parse, and it was much more difficult to do step through debugging like in matlab.But later I learned Python, and now use it professionally to do scientific computing, and I would give anything to go back to Fortran. Or use Rust or Julia. Or if Wolfram/Mathematica if that was possible. Anything but Python.The fundamental problem with Python is that all the math is hacked into it, unlike Julia/Matlab/Mathematica where the math takes first priority and other values are secondary.reply"
    ],
    "link": "https://loiseaujc.github.io/posts/blog-title/fortran_vs_python.html",
    "first_paragraph": "Jean-Christophe Loiseau September 9, 2025Disclaimer \u2013 This is not a post about which language is the most elegant or which implementation is the fastest (we all know it\u2019s Fortran). It\u2019s about teaching the basics of scientific computing to engineering students with a limited programming experience. Yes, the Numpy/Scipy/matplotlib stack is awesome. Yes, you can use numba or jax to speed up your code, or Cython, or even Mojo the latest kid in the block. Or you know what? Use Julia or Rust instead. But that\u2019s not the basics and it\u2019s beyond the point.I\u2019ve been teaching an Intro to Scientific Computing class for nearly 10+ years. This class is intended for second year engineering students and, as such, places a large emphasis on numerical linear algebra. Like the rest of Academia, I\u2019m using a combination of Python and numpy arrays for this. Yet, after all these years, I start to believe it ain\u2019t necessarily the right choice for a first encounter with numerical linear algebra. Obvisouly every"
  },
  {
    "title": "Apple A19 SoC die shot (chipwise.tech)",
    "points": 75,
    "submitter": "giuliomagnifico",
    "submit_time": "2025-09-23T19:12:08 1758654728",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=45351437",
    "comments": [
      "Missing Anandtech.com right about nowreply",
      "/me pours one outreply",
      "Chips & Cheese is a good current alternative.https://chipsandcheese.com/reply",
      "It\u2019s still my strongly held belief that things like this are one of humanity\u2019s grandest achievements.reply",
      "It's definitely an \"on the shoulders of giants standing on the shoulders of giants\" thing. Insane breakthrough technologies on top of other insane breakthroughs. Firing lasers at microscopic molten drops of metal in a controlled enough manner to get massively consistent results like what??reply",
      "It\u2019s a mind blowing achievement, nothing below sorcery if you think about it.ASML machines are hitting tin droplets with 25kW laser 50,000 times a second to turn them into plasma to create the necessary extreme ultraviolet light, and despite generating 500W of EUV, only a small fraction can reach the wafer, due to loses along the way. I believe it was like 10%.Here\u2019s an incredible, very detailed video about it: https://youtu.be/B2482h_TNwgreply",
      "That is a very high quality video.One thing I am curious about - how many generations of process shrink is one of these machines good for? They talk about regular EUV and then High-NA EUV for finer processes, but presumably each machine works for multiple generations of process shrink? If so, what needs to be adjusted to move to a finer generation of lithography and how is it done? Does ASML come in and upgrade the machine for the next process generation, or does it come out of the box already able to deliver to a resolution a few steps beyond the current state of the art?reply",
      "If you\u2019re interested in this stuff Asianometry has lots of great videos. They\u2019re not all on semiconductors, but he\u2019s done a lot on this history, developments, and what\u2019s going on in that world.https://www.youtube.com/c/Asianometry/videosreply",
      "That is a really cool video, thank you!Maybe the high water usage is at some other stage? Or intermediate preceding stages?  I'd love to understand more end-to-end, as surely it isn't as easy as popping a wafer in a semi-truck trailer sized lithography machine.reply",
      "Nah, NVIDIA GPU has way more raw computational power & smarts.reply"
    ],
    "link": "https://chipwise.tech/our-portfolio/apple-a19-dieshot/",
    "first_paragraph": "These images represent the first high-resolution microscopy of Apple\u2019s A19 chip, extracted from the iPhone 17, revealing its full complexity under the hood. Built on TSMC\u2019s third-generation 3 nm process node\u2014dubbed N3P\u2014the A19 marks a refinement over the earlier N3E technology used in the A18 series, offering higher transistor density, better energy efficiency, and modest performance gains. On the CPU side, the chip retains a hybrid core design (performance plus efficiency cores), while upgrades to the GPU include more cores on the Pro models. Key supporting blocks\u2014image signal processor, display engine, Neural Engine\u2014also see enhancements, enabling better on-device AI, imaging, and power management. Taken together, the die shots not only visualize the physical layout\u2014logic blocks, cache banks, interconnects\u2014but also reflect Apple\u2019s continuous push in process technology and architectural refinement.+31537113618info@chipwise.tech+31537113618info@chipwise.techChipwise is a NanoPhysics B."
  },
  {
    "title": "Always Invite Anna (sharif.io)",
    "points": 617,
    "submitter": "walterbell",
    "submit_time": "2025-09-23T15:33:23 1758641603",
    "num_comments": 64,
    "comments_url": "https://news.ycombinator.com/item?id=45348495",
    "comments": [
      "By the time you get to my age, your list of potential Anna's will be in the high dozens. You simply cannot keep this up with all the Anna's.A lot of people genuinely don't want to hang out with you. Likely that number exceeds the \"real\" Anna's by an order of magnitude.If there's someone I particularly like, I'll keep inviting him. But if the person is otherwise normal (e.g. clearly has a social life), I invite 3-5 times, and then stop. If the guy wants to hang out with me, the ball's in his court.You'll find no shortage of people who'll say \"Hey man! What happened? I never hear from you any more!\"To which I'd love to respond with s/any more/ever/If you're the guy who always invite people regardless of their response (or non-response), you'll find that people will have an expectation that you always invite them. I would recommend not getting to that point.reply",
      "First year in collage is probably a rare case. Everyone is in a new environment and everyone's social group is quite limited. They probably know that they're Anna's only social connnection at the campus so the effort can be worthwhile.reply",
      "I overheard two very outgoing co-workers once, where one asked the other if he was having his holiday party.\"It was last weekend\", he said.\"Oh, I didn't get an invite\"\"That's because you never come\"She looked shocked, I think she genuinely didn't know what to say. After an awkward silence she said, \"but I liked to be invited\"\"I'll happily invite you next year if you promise to come\"She smiled politely and walked away.It was memorable to me because it was such a foreign interaction on both sides from my perspective.reply",
      "It's probably just ego on the one side. That person likes to be invited to feel like they are the more valuable person in the relationship. If I were the other person I would make sure that invitation is never extended.reply",
      "Oh wow that is foreign to me, but I\u2019m sure you\u2019re right - Collecting invites you never intend to answer just sounds like\u2026 I don\u2019t know, some sort of weird social hoarding.If somebody I don\u2019t want to hang out with keeps inviting me that doesn\u2019t make me feel good about myself, that makes me feel anxious, like I haven\u2019t properly clarified our relationship with them.> That person likes to be invited to feel like they are the more valuable person in the relationship.For me, I would expect the opposite - if you get invited all the time but never come, it\u2019s because you\u2019re not actually involved in their life, you\u2019re not actually all that valuable. In order to be valuable you\u2019d have to be making the effort to be present, or at the very least, communicating your availability so the other person would better understand when it\u2019s appropriate to expect you.reply",
      "I'm so glad I don't understand and thus can't play these games with people. It sounds tiring.reply",
      "I had the same opinion and I am surprised by the amount of feelgood responses in this thread.Anna needs to realize that the amount of people who have the time and willingness to invite someone out for _years_ while receicing no is very low. These friends need to be treasured and appreciated, and Anna needs to make an effort by saying yes sometimes, or at least expressing what she's going through. The friends are making an effort by keeping her in the group, she needs to do the same.reply",
      "100% agree.\nYou'd start to think \"Anna doesn't like us\" and just move on. Despite what they're going through, some level of responsibility falls on them to express a sense of \"it's not you it's me\", if they legitimately do want to remain part of the friend group. Not engaging with the friend group is effectively the same as not being a part of it. If the \"pleasant feeling of being included in the group\" is the entirety of your involvement, it's actually a somewhat selfish and shallow position after a while. That's not to say that the group has to ban her, but at a certain point there is no valid reason to engage with someone (in a group context) who doesn't engage back.If you have friends you think are depressed or have something else going on, by all means reach out, but thats not the same thing.reply",
      "My comment was not meant as a judgment on Anna, and if she's depressed, I would not put this kind of onus on her.I was merely pointing out that most people who don't respond or always say \"no\" are not like the Anna in this submission. If I know someone who is in similar shoes as Anna, then I have no problem continuing to invite.reply",
      "> By the time you get to my age, your list of potential Anna's will be in the high dozens. You simply cannot keep this up with all the Anna's.By the time facebook has been used to plan events, your list of potential Anna's will be in the high dozens, because Anna doesn't use fb and it's too difficult to send sms's. You simply cannot keep this up with all the Anna's.reply"
    ],
    "link": "https://sharif.io/anna-alexei",
    "first_paragraph": "Always invite AnnaSometimes the people who need invitations most are the ones who always decline them.September 22, 2025 \u2022 2 min readI was lucky enough to make a few friends my first semester of college. We ended up hanging out quite a bit during those early months.We\u2019d all get excited for the weekends because Friday nights meant going out to party. Everyone except for Anna, that is.Anna was quiet, shy, and a definitely a goody-two-shoes. She was from Alabama and spoke with a pronounced southern drawl I\u2019d rarely heard in Maryland. She was reserved but friendly once you got to know her. Anna cared about school a lot. She was almost always studying whenever I saw her.Every Friday night we\u2019d make plans to go out together and party. But Anna would always refuse to come. She\u2019d say something along the lines of \u201cI have to study\u201d or \u201cI just don\u2019t feel like it tonight.\u201dEventually, we stopped inviting Anna out. Everyone except Alexei.I liked Alexei the most in our friend group. He was valedictor"
  },
  {
    "title": "Context Engineering for AI Agents: Lessons (manus.im)",
    "points": 36,
    "submitter": "helloericsf",
    "submit_time": "2025-09-23T21:20:15 1758662415",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=45352901",
    "comments": [
      "On fixed price plans, the provider has the incentive to set up caching since it improves their margins. On metered plans, the burden is on the user to pay attention to caching availability, and people are just beginning to appreciate its importance.reply",
      "+1 for using the file system as memory. You don't need a memory backend for that, or MCP, RAG, nothing. Just the basic read/write fs tools any agent has at its disposal.Use an .agent/ directory. Tell it to keep a task list, a plan, findings, wishlists, future prompt ideas in there. I use it so much I have \".agent/\" in my .gitignore template already. Tell it to use meaningful file names and to set the status of the memory using uppercase suffixes (and category as prefixes or subdirs), and you end up with...    .agent/task-cleanup-code.DONE\n    .agent/memory-function-style.md\n    .agent/prompt-remove-dead-code.md\n    .agent/symbols-map.toml\n    ...\n\nThe agent will scan that directory every once in a while and look for information before making a decision. Granted, this is not a vectorial or graph search, it's a ripgrep regex probably, but the model can extrapolate and search many times for related words if needed.reply"
    ],
    "link": "https://manus.im/blog/Context-Engineering-for-AI-Agents-Lessons-from-Building-Manus",
    "first_paragraph": ""
  }
]