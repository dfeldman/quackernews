[
  {
    "title": "Are we decentralized yet? (arewedecentralizedyet.online)",
    "points": 299,
    "submitter": "Bogdanp",
    "submit_time": "2025-08-30T19:26:29 1756581989",
    "num_comments": 147,
    "comments_url": "https://news.ycombinator.com/item?id=45077291",
    "comments": [
      "TIL about the Herfindahl\u2013Hirschman Index and I wanted to test it with a weird corner-case that I remember.At one point in the late 1980's Microsoft had a GREATER than 100% market share of the Macintosh spreadsheet market.How is this possible?Market share (for a given period) is the participant's sales in the market divided by total sales. It just so happened that Lotus had more returns than sales of their failed spreadsheet, Lotus Jazz. So Lotus, had a negative market share and Microsoft had more sales of Excel than total sales in the market, resulting in a greater than 100% market share.I don't remember the exact numbers and I believe there was at least one other competitor in the study. But let's just say the numbers were:Microsoft: 102%\nLotus:      -2%In that case the Herfindahl\u2013Hirschman Index would be 102^2 + (-2)^2 = 10404 + 4 = 10408.So, in this pathological case it is possible for the HHI to exceed 10,000.Edited: Added (for a given period) above, for clarity.reply",
      "I have diligently searched for this article online and have been unable to find it. (It might be on microfiche somewhere...)I did however, find this humorous anecdote:> A Lotus executive later joked, \"The first month we shipped 62,000 copies, and the following month we got 64,000 copies back. It was such a failure they sent us the bootlegged copies back.\"https://www.forbes.com/2003/12/16/cx_el_macslide.htmlreply",
      "HHI is a super useful metric -- glad you like it!The squared sum of normalized shares proves to be very useful in a lot of contexts -- not just market share. Voting is one great example.reply",
      "Sounds depressing (i.e. ~5000 in a typical US election)reply",
      "It gets really interesting when you look at the precinct and county level in the US, and similar types of views in European countries where they do real representative government.reply",
      "[flagged]",
      "> The only way that makes any sense is if you subtract returns for sales made in a different period to the sales period you are consideringExactly. That's the way accounting works. They did not know in the previous quarter that the product would be returned in the following quarter, so they end up having negative sales in the current quarter.Yes it produces \"garbage output\", which I find amusing.reply",
      "But that isn\u2019t how you calculate market share, so what you\u2019re saying is nonsense.reply",
      "There are multiple ways of calculating market share (e.g. units vs dollars or for different time periods) but assuming it is measured in dollars for a quarterly time period, how would you calculate the market share based upon my sample data above?reply",
      "(company sales in period - company returns for sales made in said period) / (industry sales in period)reply"
    ],
    "link": "https://arewedecentralizedyet.online/",
    "first_paragraph": "\n        This page measures the concentration of user data on the Fediverse and the Atmosphere according to the\n        Herfindahl\u2013Hirschman\n          Index (HHI),\n        an indicator from economics used to measure competition between firms in\n        an industry.\n        Mathematically, HHI is the sum of the squares of market shares of all servers.\n      \n        Values close to zero indicate perfectly competitive markets (eg. many servers, with users\n        spread evenly), while values close to 10000 indicate highly concentrated monopolies (eg.\n        most users on a single server). In economics, values below 100 are considered\n        \"Highly Competitive\", below 1500 is \"Unconcentrated\", and above 2500 is\n        considered \"Highly Concentrated\".\n      \n        This site currently measures the concentration of user data for active users: in the\n        Fediverse, this data is on servers (also known as instances);\n        in the Atmosphere, it is on the\n        PDSes\n        that "
  },
  {
    "title": "Cognitive load is what matters (github.com/zakirullin)",
    "points": 785,
    "submitter": "nromiun",
    "submit_time": "2025-08-30T12:58:48 1756558728",
    "num_comments": 336,
    "comments_url": "https://news.ycombinator.com/item?id=45074248",
    "comments": [
      "This was my main takeaway from A Philosophy Of Software Design by John Ousterhout. It is the best book on this subject and I recommend it to every software developer.Basically, you should aim to minimise complexity in software design, but importantly, complexity is defined as \"how difficult is it to make changes to it\". \"How difficult\" is largely determined by the amount of cognitive load necessary to understand it.reply",
      "The problem is no set of rules can replace taste, judgement, experience and intuition. Every rule can be used to argue anything.You can't win architecture arguments.I like the article but the people who need it won't understand it and the people who don't need it already know this. As we say, it's not a technical problem, it's always a people and culture problem. Architecture just follows people and culture. If you have Rob Pike and Google you'll get Go. You can't read some book and make Go. (whether you like it or not is a different question).reply",
      "> I like the article but the people who need it won't understand itThat's true. One doesn't change his mindset just after reading. Even after some mentorship the results are far from satisfying. Engineers can completely agree with you on the topic, only to go and do just the opposite.It seems like the hardest thing to do is to build a feedback loop - \"what decisions I made in past -> what it led to\". Usually that loop takes a few years to complete, and most people forget that their architecture decisions led to a disaster. Or they just disassociate themselves.reply",
      "I\u2019m accustomed to this principle as a musician, so it\u2019s been interesting to see it withstand my journey into software.reply",
      "Can you expand on this?reply",
      "I found the book helpful as a way to organize and express what I already knewreply",
      "Which is why I consider DRY (Don't Repeat Yourself) to be an anti-rule until an application is fairly well understood and multiple versions exist. DO repeat yourself, and do not create some smart version of what you think the problem is before you're attempting the 3rd version. Version 1 is how you figure out the problem space, version 2 is how you figure out your solution as a maintainable dynamic thing within a changing tech landscape, and version 3 is when DRY is look at for the first time for that application.reply",
      "DRY isn't about not reimplementing things; it's about not literally copying and pasting code. Which I have seen all the time, and which some might find easier now but will definitely make the system harder to change (correctly) at some point later on.reply",
      "Not copy pasting code also makes it harder to change the system correctly at some point later on, because you transformed a local decision (\"does this code do what the caller needs?\") onto a global one (\"does this code do what any possible caller needs, including across code maintained by other teams?\")There's no one rule. It takes experience and taste to make good guesses, and you'll often be wrong even so.reply",
      "This is a trap junior devs fall into DRY isn't free it can be premature optimization since in order to avoid copying code you often add both an abstraction AND couple components together that are logically separate. The issues are at some point they may have slightly different requirements and if done repeatedly you can get to a point that you have all these small layers of abstraction that are cross cutting concerns and making changes have a bigger blast radius than you can intuit easily.reply"
    ],
    "link": "https://github.com/zakirullin/cognitive-load",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        \ud83e\udde0 Cognitive Load is what matters\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Readable version | Chinese translation | Korean translation | Turkish translationIt is a living document, last update: August 2025. Your contributions are welcome!There are so many buzzwords and best practices out there, but most of them have failed. We need something more fundamental, something that can't be wrong.Sometimes we feel confusion going through the code. Confusion costs time and money. Confusion is caused by high cognitive load. It's not some fancy abstract concept, but rather a fundamental human constraint. It's not imagined, it's there and we can feel it.Since we spend far more time reading and understanding code than writing it, we should constantly ask ourselves "
  },
  {
    "title": "The Rise of Hybrid PHP: Blending PHP with Go and Rust (yekdeveloper.com)",
    "points": 102,
    "submitter": "avan1",
    "submit_time": "2025-08-30T19:02:44 1756580564",
    "num_comments": 66,
    "comments_url": "https://news.ycombinator.com/item?id=45077143",
    "comments": [
      "I'm starting to build a bit of antagonism to all-encompassing frameworks (e.g. Spring, Larvel, Phoenix, etc.), because while they are productive to build new things with, I seem to always have the same issue on legacy projects built with them.It always seems to be a challenge to upgrade dependencies for these projects. Its usually because (in building the thing) one can't fully follow the \"prescribed\" way of doing things with the god framework, because each project has to deal with a niche infrastructure environment and/or business context that requires some hack or additional dependency. Then when you need to, say, upgrade a language version, you can't follow the god framework's guide for doing this (if there even is a decent one) because it will break your workaround. So you end up with this hodgepodge which never gets updated until it reaches a critical point where it cannot continue to run on your infrastructure, and it forces a big migration project.Using a selection of libraries to build up the elements of a web service, and creating your own high-level abstractions for utilizing them, does require an additional time investment, but it leaves you in more control to do upgrades piece by piece, and to pivot the way things work when it is needed.I feel like the Go ecosystem follows the latter approach more than most, and it was bit of a mindset shift for me at first, but I've grown to appreciate it.reply",
      "I've found this for web frameworks as well. The time you spend learning the framework's abstractions could just be spent picking a queue library or whatever you need and adding it to your Go server.reply",
      "Web frameworks for me are one of those things that's \"great until it isn't\".If you're making a simple app then web frameworks can feel downright magical (like the original \"Build a blog in 15 minutes with Rails\" demo [1]), but for anything that gets even remotely complicated, I find that they generally just get in the way.I personally have grown to prefer the \"mid-level\" HTTP setups, like Express with Node.js or Vert.x with Java.[1]reply",
      "PSR to the rescue! For the past ~5 years I've been only using PSR-compatible components, with no framework whatsoever. For both enterprise-grade projects and small services. The reason was the same - those all-encompassing frameworks in long run just don't work. Too many constraints, too much hustle maintaining/updating.reply",
      "Yep, In my domain only Go/Rust are useful. The opinionated framework culture never fits the bill. I think Rails/Laravel/Django are great when you have a beaten path for relational DB crud.reply",
      "> In short, the modern PHP ecosystem gives us the best of both worlds: the ability to build quickly and confidently in PHP, while still having powerful options (C, Rust, Go) for performance-critical parts. This hybrid approach lets us stay productive without sacrificing speed where it matters most.I understand this for a large codebase where rewriting is not feasible.But if that wasn't the case, a C# APIs achieves both speed of development and execution in my experience. You'll rarely need to reach for C++ or Rust.PHP is great but the language still doesn't allow things like typed arrays. It will happily accept string in a array of dates, for example.reply",
      "Having been in the C# world for a long time, and the various web/api frameworks.PHP is really nice if you dig into it, it includes so many great \nfunctions and functionality built in for creating web stuff.It also has a number of issues,. but to quikly put something together\nPHP take the win in my limited opnion.reply",
      "Completely agree. I don't work much in PHP anymore, but there's still nothing that's faster or easier to get something up and running. I use it for web services, and command line scripts when I just need something fast.reply",
      "The only reason PHP still exists is because of shared hosting companies and Wordpress.PHP\u2019s initial appeal was you could do scripting on the server side, \u201cturn off PHP with a ?>\u201d spit out normal html, and \u201cturn back on PHP with a <?php\u201d.For a beginner programmer, it was simple, easy to understand, and had an include so your designs were\u2019t nested table hairball messes of garbage. (but your CSS was definitely garbage).Today, it\u2019s so easy to run JavaScript, I can build a basic jsx site in under an hour, just like I can with PHP and includes. With Bun, I can quickly write a data access layer as well and wire up crud APIs w/ JWT auth. A weekend project in both.reply",
      "PHP might have a bad reputation but I honestly don\u2019t think JavaScript is a better language in real world terms.I do get why JS appeals to people, but switching from PHP to JS feels a little winning an internet argument \u2014 you might feel smarter for doing so but in reality all you\u2019ve done is sunk time into something that doesn\u2019t make you any better off.reply"
    ],
    "link": "https://yekdeveloper.com/p/4-the-rise-of-hybrid-php",
    "first_paragraph": "Original - 2025-08-30 -  yeknava  -  2 minute read  We used to develop our application as a single DDD monolith (let\u2019s call it the mother) with several smaller microservices around it (the children) to gain some specific advantages. Most of these microservices were built in Go, while the core monolithic service was developed in PHP 8.3.This stack served us well for a long time. The Go microservices efficiently handled our high-throughput requests, and the carefully designed monolith allowed our relatively small backend team to deliver features quickly and with confidence. It was a good balance: speed where we needed it most, and stability and productivity everywhere else.As many of you may have experienced, 80% of your traffic often targets only 20% of your APIs\u2014the well-known Pareto principle. And unsurprisingly, those hot 20% endpoints are usually the ones where performance matters the most. In the past, our strategies included writing highly optimized code, adding extreme caching la"
  },
  {
    "title": "Why did books start being divided into chapters? A new history (sydneyreviewofbooks.com)",
    "points": 44,
    "submitter": "cacher",
    "submit_time": "2025-08-30T20:26:35 1756585595",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=45077735",
    "comments": [
      "> It was the Victorian novel that made the chapter seem natural. Key to the reality effects of nineteenth-century British fiction is its synchronisation of novel time with the natural rhythms of life. As a result, novelistic chapters lose their theatrics, their posturing and posing, even those unstable amalgamations surveyed in Equiano and Goethe, and instead become regular and \u2018tacit\u2019, receding into the background.That may all be true. But many authors of that era (e.g. Dickens and Dostoevsky) published their work mainly in monthly installments. Chapters are then, exactly like TV show episodes, simply a technical necessity.reply",
      "I read Isaac Asimov\u2019s foundation series a few years ago (side note for anyone who hasn\u2019t read it: it still holds up incredibly well with a small suspension of disbelief and some grace for when it was written).In the preface to the 4th or 5th book (which were written 30+ years after the \u201coriginal\u201d trilogy) he discussed how the originals parts of the trilogy were published as a set of short stories in a SciFi publication over 8 years, and later compiled into the books.I was astonished.Perhaps everyone else already knew this. But such a clear narrative through line to be written in discrete short stories. Very impressive.It sounds like this may have been common prior to this era as well.reply",
      "Didn\u2019t Verne also serialize his stories? This has been going on for a long long time but  for sure Clark and Asimov have books that were serials in periodicals.Edit: looked it up. Dickens and Dumas preceded Jules Verne in serials being turned into novels.reply",
      "But Asimov\u2019s short stories weren\u2019t a serialized novel from the start. They were individual short stories that he later combined with small changes to form novels. It\u2019s different from what Dickens, Dumas, and Verne did.reply",
      "Text size is also contingent on the basic technologies of the time. Ancient texts by the length and cost of parchment, and anything before the printing press by how easy it is to copy.Maybe its only now that we are less constrained by technology that we have to really focus on our mental faculties as the limiting factor for writing.reply",
      "One thing I hate about modern TV shows is that they have been further sliced into ~5-10min sequences between ad breaks, and even if you watch them without ads, you get narratively unnecessary cliff hangers just before a break, complete with dramatic music and a closeup of some dramatic gesture, trivially resolved in the next 5 seconds after the break.You're constantly yanked out of the narrative in service of ads even if you never see them, which has disfigured the medium.reply",
      "I think you've got it backwards.That was the hallmark of old TV, on networks. Since the start of TV in the 50's.There are tons of modern TV shows that don't do anything you're talking about because they're made for streamers or paid TV without ads.It sounds like you watch different shows than I do, but I watch a lot of TV and haven't seen what you're talking about in many, many years. Not with Squid Game or Stranger Things on Netflix, or Andor on Disney+, or White Lotus on HBO, or Severance on Apple TV+, or even something like Alien: Earth currently on FX/Hulu.You might want to find better places for watching TV...reply",
      ">One thing I hate about modern TV shows is that they have been further sliced into ~5-10min sequences between ad breaks,If it is on a broadcast tv network, it's not really worth watching. Sure, there are the one or two exceptional shows, but with so much premium content, why would you want to watch that?reply"
    ],
    "link": "https://sydneyreviewofbooks.com/reviews/just-a-little-longer",
    "first_paragraph": "No items in your listNo items in your listBrowse by ProjectBrowse by TopicBrowse by WriterOur work is made possible through the support of the following organisations:The Chapter: A Segmented History from Antiquity to the Twenty-First CenturyNicholas DamesPrinceton University PressFeb 2025384 ppISBN 9780691271026Joshua Barnes on a melancholic history of the chapterWhy did books start being divided into chapters? Joshua Barnes reviews Nicholas Dames\u2019 history of literary segmentation, a study that slices through and pauses over what chapters have always told us about the times we live in.I often return to an essay by Lydia Davis about an unusual experiment in translation. Better known for her work on French writers like Gustave Flaubert, Marcel Proust, and Maurice Blanchot, Davis had in this case tried to translate a literary text, not from French but rather from English into English. The text in question was Laurence Sterne\u2019s unfinished 1768 novel, A Sentimental Journey through France a"
  },
  {
    "title": "Hurricane category 6 could be introduced under new storm severity scale (livescience.com)",
    "points": 30,
    "submitter": "geox",
    "submit_time": "2025-08-30T23:53:39 1756598019",
    "num_comments": 29,
    "comments_url": "https://news.ycombinator.com/item?id=45079065",
    "comments": [
      "The average person should not even really pay attention to the category of the storm. That is mostly of scientific concern. It measures the maximum wind speed found at the relatively tiny center of circulation which may or may not have anything to do with how destructive the rest of the storm is hundreds of miles away from the center, as the article points out. That can also depend on things that have nothing to do with the storm itself, such as whether it\u2019s impacting an area with lax building codes that is unprepared for storm surge. People should forget about that scale and focus on what local authorities are saying about the potential danger.reply",
      "Feels like something similar to the NFPA 704 safety square [0] \u2014 maybe they could copy that to mimic a relatively accepted \"danger measurement\" format.Also of interest: hypercanes [1], my hurricane-adjacent Interesting Wikipedia Deep Dive, which (according to Wikipedia):- require ocean temperatures of 120 \u00b0F (50 \u00b0C)- have sustained winds of 500 mph (800 km/h)- have barometric pressures in their centers sufficiently low enough to cause altitude sickness- may persist for several weeks due to above low pressure- may be as large as North America or as small as 15 mi (25 km) \u2014 Wikipedia has an unhelpful caption about the size of the \"average hypercane\" (!)- extend into the upper stratosphere, unlike today's hurricanes (lower stratosphere)- due to above height, may sufficiently degrade the ozone layer with water vapor to the point of causing (an additional) hazard to planetary life[0] https://en.wikipedia.org/wiki/NFPA_704[1] https://en.wikipedia.org/wiki/Hypercanereply",
      "Power creep. They should just buff cat 1 and 2.reply",
      "It\u2019s my understanding that \u201ccategory 5\u201d means \u201ctotal destruction\u201d, which is why this hasn\u2019t been done in the past. However if it helps to get the point across about climate change, it would be helpful for marketing purposes.reply",
      "That's not what the proposed change is about. (It's about replacing the scale with a different one that takes into account flooding and other dangers that better reflect the likelihood of fatalities than just wind speed alone. Category 1 hurricanes can sometimes be more dangerous than higher-category hurricanes under the current scale.) I worry that people might not take this seriously because they assume this is a frivolous rebranding to \"market\" climate change.reply",
      "Exhibit Areply",
      "Hurricane categories just mean that winds are above a certain threshold. For cat 5 I think it\u2019s 157mph, and that means if the hurricane has winds of eg 170mph it\u2019s still a category 5.Another problem with this system is that some category 2 or even 1 hurricanes can cause incredible devastation, depending on where they hit. But people see category 1 and they assume it\u2019ll be nothing.reply",
      "I think you\u2019re referencing the tornado EF scale, not the hurricane Saffir-Simpson scale.reply",
      "Sorry but that reason for a change feels very coercive. If cat 5 is intended to be total destruction, meaning that anything above the lower bounds for a cat 5 is indistinguishable, there should be no 6.reply",
      "That's not what this is. (The person you're responding to didn't read the article.) They're not looking to add a \"total-er destruction\" category; they're looking to replace the current scale with one that takes into account more factors than just wind speed, such as storm surge and flooding. Under the current scale, a category 1 hurricane can be deadlier and more destructive than a higher-category hurricane. They want to use a different scale that better indicates the dangers. It goes up to 6 when multiple factors rate 5 on each factor's specific scale under the proposed system.I think the title of this article is misleading and clickbaity. :/reply"
    ],
    "link": "https://www.livescience.com/planet-earth/hurricanes/now-is-the-time-hurricane-category-6-could-be-introduced-under-new-storm-severity-scale",
    "first_paragraph": "The current hurricane classification does not consider storm surge and rainfall risks, which cause almost 80% of hurricane-related deaths. A new scale could help people better prepare for storms.\nWhen you purchase through links on our site, we may earn an affiliate commission. Here\u2019s how it works.\nA new hurricane categorization system could help people better prepare for storms by incorporating risks from storm surges and rainfall into the categories, a study published this month reveals.Storm surges \u2014 elevated seawater levels near coasts \u2014 and rainfall cause almost 80% of hurricane deaths, yet they are not accounted for in the Saffir-Simpson Hurricane Wind Scale (SSHWS), which forecasters currently use to categorize a hurricane's severity and plays a key role in communicating hurricane risk to the public. Some experts have previously argued that the threat of storms is not always properly reflected in the SSHWS's 1 to 5 category ratings, which are based solely on wind speed.\"There hav"
  },
  {
    "title": "A24's Empire of Auteurs (newyorker.com)",
    "points": 27,
    "submitter": "prismatic",
    "submit_time": "2025-08-27T03:04:43 1756263883",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=45035021",
    "comments": [
      "https://archive.ph/ick6vreply",
      "So this is how I find out A24 is getting into the slop economy. Ironic title.reply"
    ],
    "link": "https://www.newyorker.com/magazine/2025/09/01/a24s-empire-of-auteurs",
    "first_paragraph": "In November of 2015, the upstart film studio A24 had a problem. Executives had acquired the writer-director Robert Eggers\u2019s stark, unsettling d\u00e9but, \u201cThe Witch,\u201d at the Sundance Film Festival and wanted to make it their first release to open on thousands of screens. But both Eggers and Anya Taylor-Joy, who starred as a teen-ager tempted by unholy forces, were then unknown. The story, set in the sixteen-thirties and scripted in Early Modern English, was a tough sell. To generate buzz, the company sought an unlikely partner: the Satanic Temple.The Culture Industry: A Centenary IssueSubscribers get full access. Read the issue \u00bbA24\u2019s marketing team had noticed that the organization, which mounts protests in support of religious freedom and reproductive rights, had a knack for headline-grabbing stunts. They reached out to Jex Blackmore, the Temple\u2019s spokesperson at the time, who agreed to a meeting after watching \u201cThe Witch\u201d and finding it \u201cpretty disturbing, in a wonderful way.\u201d The studio"
  },
  {
    "title": "AI models need a virtual machine (sigplan.org)",
    "points": 171,
    "submitter": "azhenley",
    "submit_time": "2025-08-30T13:25:39 1756560339",
    "num_comments": 98,
    "comments_url": "https://news.ycombinator.com/item?id=45074467",
    "comments": [
      "This article is so devoid of specifics, I'm not entirely sure I know what they are proposing. A VM implies an instruction set of some kind with control flow, registers, etc. but they spend the whole article on authorization, which seems orthogonal to the concept. I think what they really mean is a sandbox, jail, or container where a \"syscall\" equivalent let's the model interact with the outside world.reply",
      "> This article is so devoid of specifics, I'm not entirely sure I know what they are proposing.Yes. Are they proposing a virtual machine execution engine? Docker for LLMs? Or what? This looks like some kind of packaging thing.Badly designed packaging systems are a curse. Look at how many Python has gone through.reply",
      "\"Like dude, a JVM for AIs!\" - it reads like that.reply",
      "Yes by their definition the current AI agents are running in VM already. e.g. MCP host could prompt the user for executing something and we can also have rules like in claude code to automatically allow some pattern of command.reply",
      "That is the wrong abstraction to think at. The problem is not _which_ tools you give the LLM, the problem is what action it can do.For example, in the book-a-ticket scenario - I want it to be able to check a few websites to compare prices, and I want it to be able to pay for me.I don't want it to decide to send me to a 37 hour trip with three stops because it is 3$ cheaper.Alternatively, I want to be able to lookup my benefits status, but the LLM should physically not be able to provide me any details about the benefits status of my coworkers.That is the _same_ tool cool, but in a different scope.For that matter, if I'm in HR - I _should_ be able to look at the benefits status of employees that I am responsible for, of course, but that creates an audit log, etc.In other words, it isn't the action that matters, but what is the intent.LLM should be placed in the same box as the user it is acting on-behalf-of.reply",
      "What you're speaking of is basically the capability security model [1], where you must explicitly pass into your software agent the capabilities that they are allowed to access, and there is physically no mechanism for them to do anything not on that list.Unfortunately, no mainstream OS actually implements the capability model, despite some prominent research attempts [2], some half-hearted attempts at commercializing the concept that have largely failed in the marketplace [3], and some attempts to bolt capability-based security on top of other OSes that have also largely failed in the marketplace [4].  So the closest thing to capability-based security that is actually widely available in the computing world is a virtual machine, where you place only the tools that provide the specific capabilities you want to offer in the VM.  This is quite imperfect - many of these tools are a lot more general than true capabilities should be - but again, modern software is not built on the principle of least privilege because software that is tends to fail in the marketplace.[1] https://en.wikipedia.org/wiki/Capability-based_security[2] https://en.wikipedia.org/wiki/EROS_(microkernel)[3] https://fuchsia.dev/[4] https://sandstorm.io/reply",
      "How would that even work when the web is basically one big black box to the OS? Most of the stuff that matters to most consumers is on the web now anyway. I don't see how 'capabilities' would even work within the context of a user-agent LLMreply",
      "You'd have to rewrite most of the software used in modern life.  Most of it is conceptually not built with a capability security model in mind.  Instead of providing the LLM with access to your banking app, you need a new banking app that is built to provide access to your account and only your account, and additionally also offers a bunch of new controls like being able to set a budget for an operation and restrict the set of allowable payees to an allowlist.  Instead of the app being \"Log into Wells Fargo and send a payment with Zelle\", the app becomes \"Pay my babysitter no more than $200\", and then the LLM is allowed to access that as part of its overall task scheduling.This is a major reason why capability security has failed in the marketplace.reply",
      "I'm going to be pedantic and note that iOS and Android both have the capability security model for their apps.And totally agree that instead of reinventing the wheel here, we should just lift from how operating systems work, for two reasons:1. there's a bunch of work and proven systems there already2. it uses tools that exist in training data, instead of net new toolsreply",
      "App permissions in iOS and Android are both too coarse-grained to really be considered capabilities.  Capabilities (at least as they exist in something like Eros or Capsicum) are more \"You have access to this specific file\" or \"You can make connections to this specific server\" rather than \"You have access to files\" and \"You have access to the network\".  The file descriptor is passed in externally from a privileged process where the user explicitly decides what rights to give the process; there is no open() or connect() syscall available to user programs.reply"
    ],
    "link": "https://blog.sigplan.org/2025/08/29/ai-models-need-a-virtual-machine/",
    "first_paragraph": ""
  },
  {
    "title": "Six months into tariffs, businesses have no idea how to price anything (wsj.com)",
    "points": 157,
    "submitter": "JumpCrisscross",
    "submit_time": "2025-08-30T20:56:40 1756587400",
    "num_comments": 181,
    "comments_url": "https://news.ycombinator.com/item?id=45077937",
    "comments": [
      "https://archive.is/Q2lLE",
      "In NYC, for the first 6 months of 2025, 994 new private sector jobs were created [1].  During the same period last year, there were 66,000 new jobs created.Higher cost of doing business from tariffs has frozen hiring.  With a frozen job market, there\u2019s less revenue coming in.NYC is a leading indicator for the rest of the country.[1] https://www.nytimes.com/2025/08/13/nyregion/nyc-jobs.htmlreply",
      "Would note that the data the New York Times cited are seasonally adjusted [1]. The assumptions of those adjustment models may not currently apply.It\u2019s going to be difficult to suss out a signal from employment data until October or November, by when we should have about half a year of post-tariff data [2] to compare with \u201824. (We may not know anything surely for a year.)[1] https://www.nyc.gov/assets/omb/downloads/pdf/sa-methodology-...[2] https://www.piie.com/research/piie-charts/2025/trumps-tariff...reply",
      "Also NYC is under threat of a socialist mayor threatening punishing millionaires taxes on top of the existing city tax. Growth is slow all over but NYC itself is getting punished for far more reasons than tariffs considering it\u2019s a service-based economy, finance / tech / retail and otherwisereply",
      "I\u2019m curious whether it\u2019s more the tariffs, or the uncertainty. No one knows what will happen on a day-to-day basis: the chaotic (and illegal) decision-making leaves everyone wondering what\u2019s next.reply",
      "The hiring slowdown predates tariffs. For various reasons CEOs either believe they can do more with less people, or that they can hire cheaper people in other geographies, or both. Businesses (tech or financials) don't seem to be telegraphing uncertainty, S&P 500 revenue is at all times high and trending up, earnings/profit all time highs and trending up, valuations all times high and trending up.reply",
      "That was the entire point of hiking interest rates, to slow down the economy and stop inflation. Tariffs are universally acknowledged to cause inflation, and we would be in a recovery path if it weren't for the delays that tariffs are causing right now.It is rather interesting to see the difference in standards of accountability for different presidents. Some are responsible for the economy even if its behavior is not sure to their actions. Others are not responsible for poor economic performance even when taking actions universally agreed to harm the economy.reply",
      "There are other options, it\u2019s not that simple. They may foresee an economic slowdown (they certainly say they do at every opportunity), they feel they are currently overstaffed, the ETF and hedge fund managers who own most of their stock are pressuring them to save money because they don\u2019t like what they\u2019re reading in the tea leaves, etc.reply",
      "> The hiring slowdown predates tariffs.That's true, but it didn't predate the election of a man who has made his understanding of tariffs and economics crystal clear in the months and years leading up to January 2025.reply",
      "The tariffs this time are far in excess of anything he did previously or promised to do while running for office again and took nearly everyone by surprise though.reply"
    ],
    "link": "https://www.wsj.com/business/retail/trump-tariff-business-price-impact-37b630c8",
    "first_paragraph": ""
  },
  {
    "title": "Agent Client Protocol (ACP) (agentclientprotocol.com)",
    "points": 216,
    "submitter": "vinhnx",
    "submit_time": "2025-08-30T12:42:30 1756557750",
    "num_comments": 70,
    "comments_url": "https://news.ycombinator.com/item?id=45074147",
    "comments": [
      "Claude, come up with a protocol for communicating between AI agents and IDEs/editors. Create node, python and rust libraries. Create a website with a landing pagereply",
      "Honestly, I'm tempted to see if Gemini can write a Sublime Text plugin that implements this protocol.Feels like a lot of mindshare has shifted towards VSCode, so that's where the tooling investment goes. I don't want to be forced off of subl because new tools stop supporting it - it's a great editor, and it's not sponsored by a massive company.reply",
      "Shouldn\u2019t be too hard. I wrote this emacs plugin to do similar things but without this protocol - https://github.com/kgthegreat/protagentic . Heavily used AI assisted coding for it.reply",
      "Yeah agreed!As you suggest, I've had a moderately successful time trying to get AI to write its own Sublime Text plugins so our favorite editor doesn't get left behind, so might be cool to try with this too?https://github.com/pickledish/llm-completionreply",
      "...and cover your tracks by making Gemini the only supported agent...reply",
      "lol. So hedonistic.reply",
      "Fingers crossed for this - it seems like Zed is kinda \u201cgoing back to the roots\u201d (of working on collaboration) and leaving this in place to disrupt the agentic IDE category (and make themselves not have to spend time on competing in it).Curious to see how adoption among cli agents will go (it\u2019s nice to see Gemini cli already in).The level of competition in the LLM and coding assistant market is always nice to see, and this only helps to make costs of switching between offerings even smaller.reply",
      "I'm basically sold on Zed, it has everything I have wanted from an editor for years, and that's without the amazing other things that they added that I wasn't even envisioning. For years I've prototyped a few different editors because of frustration with the status quo. There's a lot of work that goes into a good editor, and Zed has definitely done the legwork.I welcome them openly collaborating.reply",
      "Zed is awesome, but the absence of side-by-side diffs just drives me crazy, so I'm back to Cursor / VSCode. Turns out I can't work without it.This is the top rated discussion on Github though: https://github.com/zed-industries/zed/discussions/26770reply",
      "I\u2019m sure anyone invested enough could contribute that xDLike, I agree that that\u2019s the thing I want most out of Zed right now, but not enough to do it myself.reply"
    ],
    "link": "https://agentclientprotocol.com/overview/introduction",
    "first_paragraph": "Get started with the Agent Client Protocol (ACP)Was this page helpful?"
  },
  {
    "title": "You Have to Feel It (mitchellh.com)",
    "points": 147,
    "submitter": "tosh",
    "submit_time": "2025-08-30T14:38:33 1756564713",
    "num_comments": 61,
    "comments_url": "https://news.ycombinator.com/item?id=45075048",
    "comments": [
      "I've learnt that just about everything in life boils down to feelings, which is interesting. No matter how rational a person or people claim to be, usually it comes down to feelings... Life choices? Business decisions? Who gets promoted? It's all vibes and feelings. People will deliberate and argue over facts but ultimately there will be some \"weighting\" factor which is feelings and will make or break the outcome. You can have a perfectly argued decision that fails some vibe check and is hence discarded. Or a terrible argument that plays to some emotional point so is accepted. It's all feelings. Rare is the opposite.reply",
      "You can analyze in different ways by choosing different frames of reference, etc., but choosing how to feel isn't the same. For most, \"choosing to how feel\" is difficult to attempt.reply",
      "My theory of life is that Everything is Vibes. I work in the financial industry with individuals who think very highly of their fact driven decision making when it always boils down to vibes. Facts be dammedreply",
      "This distinction is an absurdity first written to provide a rational for why everything being done in the name of Reason felt so bad.reply",
      "There is something to this. I believe that if you cannot feel, you also cannot reason. It\u2019s almost as if intellectual ability is an application of emotionality rather than something separate. For example, when something makes sense to you, what does that really mean? In my experience, when something \u201cclicks\u201d, that is not intellect. The intellect kicks in to retroactively explain the feeling. The \u201cclicking\u201d itself- that\u2019s the feeling.reply",
      "> You have to feel it.The corporate machine does not feel it.It can't be bargained with. It can't be reasoned with. It doesn't feel pity, or remorse, or fear. And it absolutely will not stop... ever, until you are dead.reply",
      "Whatever you think about Apple, I find it hard to believe that the team that developed the original iPhone could have done so without feeling it.Perhaps that was just the magic of Jobs, who definitely felt things. But he didn't make the iPhone single handedly.reply",
      "This is why small companies still stand a chance. They can build something that would fail the corpo test of metrics and surveys.reply",
      "Plenty of people work at large corporations and enjoy their work.reply",
      "\u201cEnjoy their paycheck\u201d, there - fixed it for youreply"
    ],
    "link": "https://mitchellh.com/writing/feel-it",
    "first_paragraph": "You see a series of checkboxes checked. Schedules met.\nRequirements satisfied. Demos delivered.\nIt's a good day. Good job, you, good job! A promotion is in sight.But you didn't feel it. You didn't feel it.We, as people, feel something with every interaction. Frustration, joy, relief,\nconfidence. A feeling. A person interacts with our work. Our work evokes\na feeling. The feeling matters. The feeling is part of the work. The\ndesired feeling is part of the requirements.When you feel it, you know. The feature makes you smile when you use it.\nIt fits right in, like it was always meant to be there. You want to\nuse it again. You want to tell people about it.This is the difference. This is what metrics, specifications, and demos\nmiss. They don't capture the feeling. For the people who will use and live\nin the work, the feeling is part of their daily experience. Which means\nyou can't stop at checking the boxes on paper. You have to sit with it,\nuse it, live with it.You have to feel it."
  },
  {
    "title": "Condor's Cuzco RISC-V Core at Hot Chips 2025 (chipsandcheese.com)",
    "points": 123,
    "submitter": "rbanffy",
    "submit_time": "2025-08-30T14:18:41 1756563521",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=45074895",
    "comments": [
      "It's nice to see a microarchitecture take a risk, and getting perspective on how this design performs with respect to performance, power and area would be interesting.Very unlikely to me that this design would have comparable \"raw\" performance to a design that implements something closer to tomasulo's algorithm. The assumption that the latency of a load will be a l1 hit is a load bearing abstraction; I can imagine scenarios where this acts as a \"double jeopardy\" causing scheduling to lock up because the latency was mispredicted, but one could also speculate that isn't important because the workload is already memory bound.There's an intuition in computer architecture that designs that lean on \"static\" instruction scheduling mechanisms are less performant than more dynamic mechanisms for general purpose compute, but we've had decades of compiler development since itanium \"proved\" this. Efficient computer (or whatever their name is) is doing something cool too, it's exciting to see where this will goreply",
      "> we've had decades of compiler development since itanium \"proved\" thisSure, but until someone doesn't do \"The assumption that the latency of a load will be a l1 hit,\" they're in trouble for most of what we think of as \"general purpose\" computing.I think you get it, but there's this overall trope that the issue with Itanium was purely compiler-related: that we didn't have the algorithms or compute resource to parallelize enough of a single program's control flow to correctly fill the dispatch slots in a bundle. I really disagree with this notion: this might have been _a_ problem, but it wasn't _the_ problem.Even an amazing compiler which can successfully resolve all data dependencies inside of a single program and produce a binary containing ideal instruction bundling has no idea what's in dcache in the case of an interrupt/context switch, and therefore every load and all of its dependencies risks a stall (or in this case, replay) for a statically scheduled architecture, while a modern out-of-order architecture can happily keep going, even speculatively taking both sides of branches.The modern approach to optimize datacenter computing is to aggressively pack in context switches, with many execution contexts (processes, user groups/containers, whatever) per guest domain and many guest domains per hypervisor.Basically: I have yet to see someone successfully use the floor plan they took back from not doing out-of-order to effectively fill in for memory latency in a \"general purpose\" datacenter computing scenario. Most designers just add more cores, which only makes the problem worse (even adding more cache would be better than more cores!).VLIW and this kind of design have a place: I could see a design like this being useful in place of Cortex-A or even Cortex-X in a lot of edge compute use cases, and of course GPUs and DSPs already rely almost exclusively on some variety of \"static\" scheduling already. But as a stated competitor to something like Neoverse/Graviton/Veyron in the datacenter space, the \"load-bearing load\" (I like your description!) seems like it's going to be a huge problem.reply",
      "> we've had decades of compiler development since itanium \"proved\" this.I think an equally large change is the enormous rise of open source and supply chain focus. When Itanium came out, there was tons of code businesses ran which had been compiled years ago, lots of internal reimplementation of what would now be library code, and places commonly didn\u2019t upgrade for years because that was also often a licensing purchase. Between open source and security, it\u2019s a lot more reasonable now to think people will be running optimized binaries from day one and in many cases the common need to support both x86 and ARM will have flushed out a lot of compatibility warts along with encouraging use of libraries rather than writing as many things on their own.reply",
      "Interesting idea. It's like putting a VLIW compilation pass into the scheduler, but without an intermediate microcode cache like NV Denver did. Without handling memory dependencies / cache hazards, I'm not so sure how well it will do in general-purpose use cases. They don't have the same code locality / second-layer icache problem that Denver had, but data loads are still going to be a mess.I guess the notion is that data cache misses will basically lead to what could be called \"instruction amplification,\" where an instruction will miss its scheduled time slot and have to be replayed, possibly repeatedly, until its dependencies are available. The article asserts that this is the rough equivalent of leaving execution ports unoccupied in a \"traditional\" OoO architecture, but I'm not so sure. I'm curious about how well this works in practice; I would worry that cache misses would rapidly multiply into a cascading failure case where the entire pipeline basically stalls and the architecture reverts to in-order level performance - just like most general-purpose VLIW architectures.reply",
      "Andes (Condor is owned by Andes) seems to get relatively little press Vs other RISCV outfits. My sense is they've been quietly building a very solid RISCV CPU business with a great IP portfolio.This latest core looks very interesting, can't wait to see it hit silicon and see what it can really do!reply",
      "Andes has won a lot of sockets already with their lower-power cores. They have almost become the #1 choice for RISC-V cores.reply",
      "The static schedule part seems really interesting. They note that it only works for some instructions, but I wonder if it would be possible to have a compiler report \u201cthis section of the code can be statically scheduled.\u201d In that case, could this have a benefit for real-time operation? Or maybe some specialized partially real-time application\u2014mark a segment of the program as desiring static scheduling, and don\u2019t allow memory loads, etc, inside there.reply",
      "(author here) they try for all instructions, just that it's a prediction w/replay because inevitably some instructions like memory loads are variable latency. It's not like Nvidia where fixed latency instructions are statically scheduled, then memory loads/other variable latency stuff is handled dynamically via scoreboarding.reply",
      "I don't think that would help - the set of instructions that have dynamic latencies is basically fixed. Anything memory-related (loads, stores, cache management, fences, etc.) and complex maths (division, sqrt, transcendental functions, etc.)So you know what code can be statically scheduled just from the instructions already.reply",
      "I\u2019m just spitballing. But, what if we had some system that went:1) load some model and set the system into \u201cready\u201d mode2) wait for an event from a sensor3) when the event occurs, trigger some response4) do other stuff; book keeping, update the model, etc,5) reset the system to \u201cready\u201d mode and goto 2Is it possible we might want some hard time bounds on steps 2 and 3, but be fine with 1, 4, and 5 taking however long? (Assuming the device can be inactive while it is getting ready). Then, we could make sure steps 2 and 3 don\u2019t include any non-static instructions.reply"
    ],
    "link": "https://chipsandcheese.com/p/condors-cuzco-risc-v-core-at-hot",
    "first_paragraph": ""
  },
  {
    "title": "The Default Trap: Why Anthropic's Data Policy Change Matters (natesnewsletter.substack.com)",
    "points": 39,
    "submitter": "laurex",
    "submit_time": "2025-08-30T17:12:06 1756573926",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=45076274",
    "comments": [
      "You have to choose in order to use Claude, it's not the type of default where you're opted in unless you go find the setting. This blog post misrepresents this.I haven't seen what the screen for new users looks like, perhaps it \"nudge\"s you in the direction they want by starting the UI with it checked and you have to check it off. That is what the popup for existing users looks like from Anthropic's linked blog post. That post says they require you to choose when signing up and that existing users have to choose in order to keep using Claude. In Claude Code I had to choose and it was just a straight question in the terminal.I think the nudge-style defaults are worth criticism but you lose me when your article makes false implications.reply",
      "Yeah this blog post is wrong on multiple points.The new user prompt looks the same as far as I can tell, defaults to on, and uses the somewhat oblique phrasing \"You can help improve Claude\"reply",
      "Hmm, so now your options for data retention are 30 days, or 5 years. Not really a great or reasonable choice.reply",
      "I look forward to Claude's improvements after it learns from conversations with users about suicide.reply",
      "TL;DR This is the money shot> So here's my advice: Treat every AI tool like a rental car. Inspect it every time you pick it up.Disappointed in Anthropic - especially the 5 year retention, regardless of how you opt.reply"
    ],
    "link": "https://natesnewsletter.substack.com/p/the-default-trap-why-anthropics-data",
    "first_paragraph": ""
  },
  {
    "title": "Affiliates flock to scam gambling machine (krebsonsecurity.com)",
    "points": 64,
    "submitter": "mikhael",
    "submit_time": "2025-08-30T22:24:58 1756592698",
    "num_comments": 11,
    "comments_url": "https://news.ycombinator.com/item?id=45078530",
    "comments": [
      "There seems to be an analogous concept of the Second Law of Thermodynamics - everything in society will tend towards scams if not actively opposed.reply",
      "This is like a fractal scam, you've got gambling against the house (already a scam) with crypto (so there's no regulators to stop them rigging the games) and then instead of waiting for statistics to take their course they just run away with everyone's money.reply",
      "Don't forget the final dimension of the scam where they also scam the affiliates by doing a rug-pull. Scam-ception.reply",
      "Gambling against the house is not in itself a scam as long as the games aren't rigged and the odds and payouts are as advertised. A game with negative EV is not a scam if it's entered into knowingly by a player.For my money, games where people pay to win worthless digital goods are far more scammy than a fair game of Blackjack in Vegas where you actually might come out up.The other aspects you mentioned are the scam.reply",
      "Without regulation and enforcement many people will give the buyer less and less until they give the buyer nothing and it winds up a scam.reply",
      "Scams definitely seem to be more entropic than honest enterprise.reply",
      "Mandatory reminder that YC itself has funded and is promoting (https://www.ycombinator.com/companies/yotta) a company that not only lost people's \"savings\" (despite fake promises of FDIC insurance - which didn't actually cover their predictable failure mode: https://www.cnbc.com/2024/06/21/synapse-collapse-nearly-109m...) but is now operating an outright gambling scheme that is typically seen in unregulated Eastern-European casinos: https://members.withyotta.com/moonshot/.reply",
      "YC is a scam mill, always has been.  Every now and then one of those scams turns into a real business.  It\u2019s an effective model.reply",
      "Any person or site that asks you to send money in order to \u201cverify\u201d yourself is a scam.reply",
      "Point taken, but USPS asks for $2 for an address change for verification.reply"
    ],
    "link": "https://krebsonsecurity.com/2025/08/affiliates-flock-to-soulless-scam-gambling-machine/",
    "first_paragraph": "Last month, KrebsOnSecurity tracked the sudden emergence of hundreds of polished online gaming and wagering websites that lure people with free credits and eventually abscond with any cryptocurrency funds deposited by players. We\u2019ve since learned that these scam gambling sites have proliferated thanks to a new Russian affiliate program called \u201cGambler Panel\u201d that bills itself as a \u201csoulless project that is made for profit.\u201dA machine-translated version of Gambler Panel\u2019s affiliate website.The scam begins with deceptive ads posted on social media that claim the wagering sites are working in partnership with popular athletes or social media personalities. The ads invariably state that by using a supplied \u201cpromo code,\u201d interested players can claim a $2,500 credit on the advertised gaming website.The gaming sites ask visitors to create a free account to claim their $2,500 credit, which they can use to play any number of extremely polished video games that ask users to bet on each action. Ho"
  },
  {
    "title": "Can cheaper lasers handle short distances? (semiengineering.com)",
    "points": 28,
    "submitter": "PaulHoule",
    "submit_time": "2025-08-27T16:28:55 1756312135",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=45041812",
    "comments": [
      "I am a big VCSEL fan. It makes tons of sense to have a laser that you can manufacture at chip scale. I think that VCSEL and SPAD technology is promising in both telecommunications and lidar. History tells us that the cheaper technology gets better faster than the expensive technology gets cheaper.reply",
      "Sorry, waveguide? For light? I thought that\u2019s what fibre was.reply",
      "It is. But it\u2019s not the only possible waveguide. The article discusses alternatives for a system that can transmit 5-10k signals in 32U. If you\u2019re using fiber optic cables, that\u2019s 5-10k pairs, in 32U. That doesn\u2019t work at all. It\u2019s light (ha, pun) on details for what the alternative waveguide is, though.Just getting VCELs to 25G per lane would be nice, though, if you can match current prices. Upgrading to 100G-SR4 on the same cable plant would be nice.reply",
      ">  If you\u2019re using fiber optic cables, that\u2019s 5-10k pairs, in 32U.not with 4 or 12 core MCF!reply",
      "Fair! Would still be a nightmare to manage, though. I wish they had some details on the proposed alternative waveguide.reply",
      "I think the alternative is shown in figure 2. SiN (silicon nitride) is different from optical fiber. Both versions shown in figure 2 lack detail, especially in the small boxes labeled GC, Mirror, and PD. Depending on the details, one might put micro optical assemblies between or in those boxes in the figure. In any case, SiN waveguides are small, so you can pack many lanes in a small space.reply"
    ],
    "link": "https://semiengineering.com/can-cheaper-lasers-handle-short-distances/",
    "first_paragraph": "VCSELs may serve in more non-photonic applications.Optical technology is well established for long-haul communications, but the distances it serves are shrinking \u2014 especially in the data center.Vertical-cavity surface-emitting lasers (VCSELs) already drive short fiber links. But efforts are underway to further scale them down to provide more connections through waveguides than fiber can provide.\u201cWe have seen the transition from long haul to metro-to-local area networks and then into the data center,\u201d said Suresh Jayaraman, senior director for package development at Amkor Technology. \u201cFiber has moved from the edge of the card to on-board, and more recently onto the package.\u201dMuch research is underway to move optics closer to servers in the data center. Today, the technology typically is employed for rack-to-rack communication, while most intra-rack wires are copper. Replacing the copper with fiber remains a development opportunity.Integrating lasers with silicon\nOf particular interest is"
  },
  {
    "title": "Pig lung transplanted into a human (sciencealert.com)",
    "points": 83,
    "submitter": "signa11",
    "submit_time": "2025-08-27T11:00:45 1756292445",
    "num_comments": 59,
    "comments_url": "https://news.ycombinator.com/item?id=45037940",
    "comments": [
      "I was thinking, big deal, didn't they do a pig heart transplant back in 1999?\nTurns out that was a popular children's novel and TV series in the UK called \"Pig Heart Boy\", not reality. First actually pig heart transplant was in 2022.reply",
      "This reminds me that when I was a kid, I read an Uncle Scrooge story where a cruise ship of his runs aground and he sends Donald to run it as a new kind of hotel.I carried that in my head as fact, that there was once a cruise ship that ran aground and they turned it into a hotel.Only realized it as an adult when one day I brought up the ship-turned-into-hotel thing in a conversation at work.reply",
      "Ha this blew my mind, I was sure that this was realreply",
      "It was tried earlier by Religa in 1987, but the experiment was a failure AFAIK.reply",
      "> First actually pig heart transplant was in 2022.That patient died shortly thereafter. The condition is critical and there's a lot of immunological pressure put on the patient.China is smart to study this in living cadavers first. It's much easier to find patients that aren't already on death's door, and there is no need to keep the patient alive. You can run experiment after experiment.reply",
      "I'm almost afraid to ask, what are living cadavers?reply",
      "Brain death without cardiac death.reply",
      "Presumably people who are on the verge of death and beyond any kind of proven treatments. They're technically alive but have a very short predicted lifespan.You can try a novel treatment on those but at the same time are limited by ethical concerns regarding pain and future survival (if the transplant \"works\", you are now in a tricky situation, as you can't easily do anything that has the potential to make the situation worse... and given it's uncharted territory, anything has the potential to make it worse).Brain-dead people don't have such limitations. You don't have to worry about causing pain nor shortening potential survival, so you can try things that are likely to \"kill\" them (cause the transplant to fail, or other issues) and learn from the outcomes.reply",
      "> Brain-dead people don't have such limitations. You don't have to worry about causing painFortunately determining brain death is a problem with a clear-cut answer with a clear line dividing \u201cbrain death\u201d and \u201cnot brain death\u201d. Right?reply",
      "Porkin' Across America was propheticreply"
    ],
    "link": "https://www.sciencealert.com/pig-lung-transplanted-into-a-human-in-major-scientific-first",
    "first_paragraph": ""
  },
  {
    "title": "Hardening Firefox \u2013 a checklist for improved browser privacy (andrewmarder.net)",
    "points": 129,
    "submitter": "amarder",
    "submit_time": "2025-08-30T11:26:35 1756553195",
    "num_comments": 68,
    "comments_url": "https://news.ycombinator.com/item?id=45073746",
    "comments": [
      "I've been a Firefox die-hard since it was called Phoenix a couple decades ago. That said, over the last two months I've been testing Orion Browser (from Kagi, to which I subscribe), and am smitten with it. It's Apple only at the moment, which is a drawback, but if you live in that ecosphere, it's worth a look.Orion is Webkit-based, can install extensions from Chrome OR Firefox, privacy respecting, and a whole lotta niceties for per-website tweaks and other customizations.[0] https://kagi.com/orion/reply",
      "Orion indeed is a decent option for the privacy conscious as it is one of the few browsers that doesn't make any automated connections on startup (with the right config). But, if I remember right, they are still trying to get Ublock Origin to work perfectly on it (i.e. WebExtension support is still not fully supported on Orion).PaleMoon ( http://www.palemoon.org/ ) is a hard fork of Firefox, with a mix of old tech (XUL) and new tech (from current codebase of Gecko), that is another full-featured zero-telemetry browser that doesn't make any automated connections. But on this too, the full features of uBlock Origin isn't supported as it is based on the abandoned uBlock Origin (legacy) codebase (though the legacy codebase has been updated by some PaleMoon developers, the original developers of uBlock Origin do not wish to support PaleMoon as it doesn't support WebExtension.Then there's the Tor Browser ( https://www.torproject.org/ ) - it is a soft fork of Firefox, that supports the Tor network and has been configured by default to be \"privacy hardened\" - it has none of the crap that Mozilla bundles into Firefox, like Pocket, AI, Ads etc. The Tor software bundled in it can be easily deleted, to use it as privacy hardened Firefox. However, there are two issues with it - it does make unauthorised and unwanted automated connections (to SecureDrop) and you can no longer remove the NoScript browser extension that is bundled in it (you could from previous versions). When a browser maker forcefully bundles something in it, (however useful it may be), and does not allow you to modify it, that's well-founded ground to be suspicious of it. (Note: I did finally figure out that one can stop automated phoning to SecureDrop, after disabling it in about:rulesets ).As the tor browser laid a good foundation to create a privacy hardened Firefox, there are many other browsers that are Forks of the Tor browser - the Mullvad Browser ( https://mullvad.net/en/browser ) is a popular one, and Mullvad bundles its VPN service in it instead of the Tor network. Last I checked, it made some automated connections on startup, so I didn't bother to explore it further).reply",
      "Apple is for suckers who want a parent to tell them what they can and cannot do with their own devices.  (IMO)reply",
      "I just need it to stop using Safari\u2019s slow ass animation for the two-finger trackpad swipe back gesturereply",
      "Set the browser.ml.chat.enabled and browser.ml.enabled to false as they intensively use the processor and drain the battery. All that to just find the best name for your tab groups. I prefer to have my laptop last one more hour instead.reply",
      "I took a brief gander at its code [0] and saw it mainly focusses on k-means clustering algorithms (in JS, no less). To my ken this is likely for suggesting new tabs, something a user is even less likely to use than renaming them.Its constant drain even when not 'in use' seems to imply it's classifying tabs as they change page (though it might be telemetry or uncommented testing). If so, it's an example of premature optimisation gone very wrong.It's a shame, because it overshadows the fact that naming tab groups is a perfect use case for an LLM, alongside keyboard suggestions and reverse dictionaries [1]. I'm ardently distrustful of LLMs for many, many purposes, but for the tiny parameter and token usage needed it's hard to not like. Which is a shame it's (somehow) such a drain.[0] https://github.com/mozilla-firefox/firefox/blob/7b42e629fdef...\n    exports a SmartTabGroupingManager, though how or why that is used without being asked eludes me[1] https://www.onelook.com/thesaurus/\n    Can be helpful in a pinch when a word's on the tip of your tongue, though its synonyms aren't always perfect.reply",
      "Does anyone here struggle so much with naming a group of tabs that you'd reach for an LLM? I mean... really? How often does a group of tabs need a more complex name than \"Work\", \"Gaming\", etc? Maybe a suffix for the work project?reply",
      "Wasn't that a bug that was fixed weeks ago? Like early August? If you are not averse to this feature then it is better to simply make sure you are running the latest version.reply",
      "It was also caught during progressive rollout, i.e. it never affected anyone who had disabled \"studies\" in their preferences.reply",
      "I litterally gained one hour off my charged battery when I switched these two settings off, just a week ago, and I keep my browser up to date. So not for me.reply"
    ],
    "link": "https://andrewmarder.net/firefox/",
    "first_paragraph": ""
  },
  {
    "title": "SQL Design Patterns (vadimtropashko.wordpress.com)",
    "points": 81,
    "submitter": "mci",
    "submit_time": "2025-08-27T04:59:08 1756270748",
    "num_comments": 19,
    "comments_url": "https://news.ycombinator.com/item?id=45035618",
    "comments": [
      "This is rather old and there are better ways of doing most of these things now. For instance the counting example would usually be much more efficient performed using the ROW_NUMBER() window function instead of a Cartesian product. When you can remove a cross product from your process it is almost always beneficial to do so. That will often involve introducing a CTE\u2070\u00b9 which might put off some beginners\u00b2\u00b3, but it shouldn't as this sort of example is pretty simple (you aren't worrying about any recursive case).----[0] Because you want the ordinal of the row in the input table/view, not your output.[1] You could also use a sub-query, in most cases a good query planner will see the equivalence and do the same thing for either. The CTE option is easier to read and maintain IMO.[2] In databases, like sports, CTEs can result in headaches![3] Or veterans of postgres, where until a few years ago CTEs were an optimisation gate, blocking predicate push-down and making some filtered queries a lot more expensive (though often no more so than the naive Cartesian product method).reply",
      "SQL is beautiful in its own way. Definitely not easy to master but  beautiful in how much business logic you can implement in not many lines of code.And with SQL macros becoming a thing it is now easily possible to store patterns as reausable functions with parameters.reply",
      "I always tell people to worry about the data structures that you want the database to maintain for you, and not worry about the SQL.\nYou can always use Google to look up the SQL, or now ChatGPT to generate it for you.\nSQL is a not-that-great language and it intentionally hides what's going on.\nIt is also different enough between databases that you need to pay attention.\nSo learning to design/think in terms of SQL is probably not worth doing.The set of data structures that you use to model and index a dataset is worth understanding, and designing in that space is a skill worth learning.reply",
      "I don't get this - my database is going to be normalised to whatever is optimal (3rd normal form generally, denormalised for higher load/sharded/caching)The indexing is where the main optimisations take place - hashmap indexes, or clustering indexes for priority queues.What am I missing?reply",
      "Frankly, this is terrible advice. If you\u2019re not designing your data model around the language it\u2019s going to be queried in, how do you expect to get decent performance out of the database?Also, in no way does SQL hide anything - it\u2019s a declarative language, and will produce exactly what you tell it to, provided you understand what it is you asked it to do. The query engine is somewhat of a black box, but that is completely orthogonal.reply",
      "SQL is a declarative language so it \u2014- by definition \u2014- hides the execution.Not really sure what you\u2019re trying to argue here.reply",
      "Parent made it sound - to me - that you put an input in and hope for the best. If you understand the operators, you can quite confidently predict an output given an input.reply",
      "> If you understand the operatorsThat\u2019s the point. In an imperative language if you don\u2019t yet understand (or make a typo, or whatever), you can just print/console.log and find out.I\u2019ve seen junior devs, data analysts, and LLMs spin their wheels trying to figure out why adding a join isn\u2019t producing the output they want. I don\u2019t think they would  figure it out using SQL alone if you gave them a month.reply",
      "For posterity, how would you recommend the average working programmer should go about doing that?reply",
      "An intro data structures course is worth watching if you haven't taken one.  There are plenty of them on YouTube.\nTry to follow along with a language that has an explicit pointer type. Go is a good choice. Java and Python are worse choices (for this particular thing) IMO.Assuming you are familiar with trees and hashmaps, you have all the important building blocks.  You can imagine a database as a bunch of trees, hashmaps and occasionally other stuff, protected by a lock.\nFirst you acquire the lock, then you update some of the data structures, and maybe that requires you to update some of the other data structures (like indexes) for consistency.  Then you release the lock.By default, most data will live in a BTree with an integer primary key, and that integer is taken from a counter that you increment for new inserts.\nIndexes will be BTrees where the key is stuff you want to query on, and the value is the primary key in the main table.Using just those data structures you should be able to plan for any query or insert pattern.  It helps to figure this out yourself in a programming language for a few practice cases, so you know you can do it.  Eventually it will be easy to figure out what tables and indexes you need in your head.  In the real world, this stuff is jotted down in design docs, often as SQL or even just bullets.That's really all you need, and that's where I recommend getting out of the rabbit hole.  Query planners are pretty good.  You can usually just write SQL and if you did the work to understand what the tables and indexes should be, the planner will figure out how to use them to make the query fast.reply"
    ],
    "link": "https://vadimtropashko.wordpress.com/%e2%80%9csql-design-patterns%e2%80%9d-book/about/",
    "first_paragraph": "Counting (32 pages)Integer Generators (24 pages)Exotic Operators (40 pages)Constraints (19 pages)Trees (39 pages)Graphs (41 pages)I disagree that Relational Division comes once in a lifetime. I use it all the time for reports that look for \u201cshopping basket\u201d patterns in sales data.\u0412\u0430\u0434\u0438\u043c, \u043e\u0433\u0440\u043e\u043c\u043d\u043e\u0435 \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u043e\u0442\u043b\u0438\u0447\u043d\u0443\u044e \u043a\u043d\u0438\u0433\u0443!!!\u0421 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435\u043c, \u041c\u0438\u0445\u0430\u0438\u043b.\u0432 \u0441\u0441\u044b\u043b\u043a\u0435 \u043d\u0430 \u0432\u0442\u043e\u0440\u0443\u044e \u0433\u043b\u0430\u0432\u0443 \u0435\u0441\u0442\u044c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0430\u044f \u043e\u043f\u0435\u0447\u0430\u0442\u043a\u0430  (pdff \u0432\u043c\u0435\u0441\u0442\u043e pdf)\n\u2026book_sql_chap2_v2.pdff\n\u0435\u0449\u0435 \u0440\u0430\u0437 \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u043a\u043d\u0438\u0433\u0443!!!!!!Hi Vadim, a thread on another forum has mentioned an exotic operator you don\u2019t include:SQL\u2019s UNION CORRESPONDING seems to be the same as the RL\u2019s inner union.\n(Hugh Darwen says that this operator was available in ISBL/BS12, called plain UNION. So not the same as SQL\u2019s plain UNION.)I don\u2019t see any evidence that anybody realised this operation is the inverse of Nat Join.I was not aware of UNION CORRESPONDING, thank you!Hi VadimJust bought your book and reading chapter 1 counting. I have a minor quibble about the scalar subquery c"
  },
  {
    "title": "Running our Docker registry on-prem with Harbor (37signals.com)",
    "points": 4,
    "submitter": "airblade",
    "submit_time": "2025-08-27T12:10:31 1756296631",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://dev.37signals.com/running-our-docker-registry-on-prem-with-harbor/",
    "first_paragraph": ""
  },
  {
    "title": "LandChad, a site dedicated to turning internet peasants into Internet Landlords (landchad.net)",
    "points": 42,
    "submitter": "cft",
    "submit_time": "2025-08-30T15:18:25 1756567105",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=45075384",
    "comments": [
      "Really helpful site from Luke Smith.  I would advise anyone interested in web development to check out this page. There's a lot of cool stuff on there.reply",
      "I kove the vibe of this website and their mission. Nitpick though, \u201cFOSSPAY\u201d seems to make no sense because it\u2019s really just Stripe?reply",
      "A few nitpicks:* landlords aren't a good thing.* \"setup\" is a noun.* It'd be helpful to offer some context. For instance, talking about ufw without even mentioning that we're talking about Linux, or even a specific Linux distro, would make most people confused. Same with apt.These are good guides, but it should be kept in mind that they don't try to teach you anything - they're more guides to simply follow, and if you happen to learn something along the way, great.But it makes sense to have guides that just tell you how to do a thing and don't explain it, because that represents a good chunk of the people out there. It wouldn't be bad to have links to stuff for those who want to understand what they're doing, though.Overall, we need more sites like these.reply"
    ],
    "link": "https://landchad.net",
    "first_paragraph": "This is LandChad.net, a site dedicated to turning internet peasants into Internet Landlords by showing them how to setup websites, email servers, chat servers and everything in between.Starting a website is something that can be done in a lazy afternoon and costs pocket change.Most of the internet\u2019s problems could be solved if more people had their own personal platforms, so the objective of this site is to guide any normal person through the process of installing a website.This is the basic \u201ccourse.\u201d Follow these quick tutorials and you\u2019ll have a fully functioning basic web page on the domain name of your choice.\u23f3 This \u201cbasic course\u201d can take as little as an hour or even less.Host your own services, social media and more.This is the email \u201ccourse\u201d. Follow these modules to learn how to setup an email server headache free.\u23f3 This entire \u201cemail course\u201d may take about an hour. The approval for opening email ports with your VPS should take no less than a day.Tips and articles on mastering y"
  },
  {
    "title": "Show HN: Hacker News em dash user leaderboard pre-ChatGPT (gally.net)",
    "points": 296,
    "submitter": "tkgally",
    "submit_time": "2025-08-30T03:40:23 1756525223",
    "num_comments": 234,
    "comments_url": "https://news.ycombinator.com/item?id=45071722",
    "comments": [
      "v1 (the submitted URL) was https://www.gally.net/miscellaneous/hn-em-dash-user-leaderbo.... We've replaced it now v2, for more complex analytical em dash explorations :) - see https://news.ycombinator.com/item?id=45075379 and https://news.ycombinator.com/item?id=45072635.",
      "This is the kind of top-tier content we need on HN. These are the issues that really matter!reply",
      "Using the HN public dataset in Google BigQuery [0], which I think fits easily in the amount of free queries allowed:  SELECT \n    EXTRACT(YEAR FROM timestamp) AS year, \n    SUM(CASE WHEN text LIKE '%\u2014%' THEN 1 ELSE 0 END) AS withDash, \n    COUNT(*) AS total, \n    SUM(CASE WHEN text LIKE '%\u2014%' THEN 1 ELSE 0 END) / COUNT(*) AS fraction\n  FROM `bigquery-public-data.hacker_news.full` \n    WHERE type = 'comment' \n  GROUP BY year \n  ORDER BY year;\n\n  year with\u2014   total  frac\n  2006     0      12 0.000\n  2007    13   70858 0.000\n  2008   461  247922 0.001\n  2009  1497  491034 0.003\n  2010  3835  842438 0.005\n  2011  4719 1044913 0.005\n  2012  5648 1246782 0.005\n  2013  7881 1665185 0.005\n  2014  8400 1510814 0.006\n  2015  9967 1642912 0.006\n  2016 12081 2093612 0.006\n  2017 14530 2361709 0.006\n  2018 19246 2384086 0.008\n  2019 23662 2755063 0.009\n  2020 27316 3243173 0.008\n  2021 32863 3765921 0.009\n  2022 34657 4062159 0.009\n  2023 36611 4221940 0.009\n  2024 32543 3339861 0.010\n  2025 30608 2231919 0.014\n\nSo there's definitely been an increase.Querying for the users who use \"\u2014\" most as a proportion of all their comments:  SELECT\n    `by`,\n    SUM(CASE WHEN text LIKE '%\u2014%' THEN 1 ELSE 0 END) / COUNT(*) AS fraction,\n    COUNT(*) AS total,\n    MIN(timestamp) AS minTime,\n    MAX(timestamp) AS maxTime\n  FROM `bigquery-public-data.hacker_news.full` \n  WHERE \n    type = 'comment' AND \n    timestamp < '2022-11-30' \n  GROUP BY `by`\n  HAVING COUNT(*) > 100\n  ORDER BY fraction DESC\n  LIMIT 250;\n\nzmgsabst uses them the most [1], westoncb [2] is an older account that uses them fourth-most.[0] https://console.cloud.google.com/marketplace/product/y-combi...[1] https://news.ycombinator.com/threads?id=zmgsabst[2] https://news.ycombinator.com/threads?id=westoncbreply",
      "Older people, say folks in their forties or older, grew up with the em dash.reply",
      "That's backwards.  People in that age bracket grew up with computers where the em dash was not in the character set at all, and typewriters and terminals only had a minus key.The people who grew up with the em dash are the younger HTML generation of 30 years ago where &mdash; was at least a reasonably convenient character entity even if they were using computers with the various 8-bit character sets that did not contain it.reply",
      "True, but when desktop publishing arrived on the Mac, I embraced it.reply",
      "Correct, I am 46, grew up with BBS.  Early internet.  I will be honest, never knew the name of em dash until it became a GPT thing.reply",
      "Older people that grew up with \"desktop publishing\" and \"The Mac is not a Typewriter\" grew up with the em dash.reply",
      "Correct. And my typewriter dad will do two dashes --.reply",
      "Son?reply"
    ],
    "link": "https://www.gally.net/miscellaneous/hn-em-dash-user-leaderboard.html",
    "first_paragraph": ""
  }
]