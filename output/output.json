[
  {
    "title": "A return to hand-written notes by learning to read and write (research.google)",
    "points": 187,
    "submitter": "mfiguiere",
    "submit_time": "2024-10-28T21:08:16 1730149696",
    "num_comments": 35,
    "comments_url": "https://news.ycombinator.com/item?id=41976311",
    "comments": [
      "This is very cool. Here is interesting application of something like this. My handwriting is pretty bad, and worse still when writing fast. When I am teaching, a lot of what I write is worse than I would like it to be.I could teach a system like this my very slow neat handwriting. And then as I write on my whiteboard while teaching, it replaces my quick bad handwriting with the neater handwriting.\n \nreply",
      "Wouldn't it make even more sense to replace your quick bad handwriting with perfect Helvetica?\n \nreply",
      "I got a stylus for my iPad and i felt that way at the beginning but I learned that i visualize in my head what I'm going to create right before I draw, and the difference between what's in my mind vs what gets produced is so great, that it feels like a weird uncanny valley and i hate the output.\n \nreply",
      "There is (subjective) charm in handwritten text that is simply not present in digital fonts. I would rather keep that magic alive.\n \nreply",
      "I think handwriting is a very personal trait. Some people value good handwriting and they write neat even when they write fast. Others don't. Sadly, a vast majority if the world exists in the other camp. This is why they invented typewriters. If everyone conformed to good handwriting and could agree upon a good writing style standard, the world would have been very different.\n \nreply",
      "Hard to make boxes and arrows out of helvetica, and basically impossible to do it quickly\n \nreply",
      "Fine, make it Helvetica plus whatever other shapes you need. I would assume that Helvetica includes most of extended unicode, since it's such a widely used font, but I could be wrong, and it's beside the point.If the computer is the one transforming your writing it should be perfectly quick.To be clear, afaik current handwriting recognition software is not good enough for this. But if we had software that could transform bad handwriting into good handwriting, why not go all the way?\n \nreply",
      "If you draw your equations well enough, they can get converted into LaTex in realtime and then you could run them in a computational notebook.Esp if you fuse the audio of you explaining the equations along with the LaTex it can correct for errors.\n \nreply",
      "What software can do this?\n \nreply",
      "I think Mathpix API [1] can use used to do something like that in realtime/ish[1] https://mathpix.com/\n \nreply"
    ],
    "link": "https://research.google/blog/a-return-to-hand-written-notes-by-learning-to-read-write/",
    "first_paragraph": "We strive to create an environment conducive to many different types of research across many different time scales and levels of risk.Our researchers drive advancements in computer science through both fundamental and applied research.We regularly open-source projects with the broader research community and apply our developments to Google products.Publishing our work allows us to share ideas and work collaboratively to advance the field of computer science.We make products, tools, and datasets available to everyone with the goal of building a more collaborative ecosystem.Supporting the next generation of researchers through a wide range of programming.Participating in the academic research community through meaningful engagement with university faculty.Connecting with the broader research community through events is essential for creating progress in every aspect of our work.October 28, 2024Blagoj Mitrevski, Software Engineer, and Andrii Maksai, Staff Software Engineer, Google Researc"
  },
  {
    "title": "Show HN: Marmite: Zero Config Static Site Generator written in Rust (github.com/rochacbruno)",
    "points": 59,
    "submitter": "rochacbruno",
    "submit_time": "2024-10-28T21:40:38 1730151638",
    "num_comments": 27,
    "comments_url": "https://news.ycombinator.com/item?id=41976673",
    "comments": [
      "I really like it.\nI have been on a quest to find  very simple ssgs such as this.\nI have been trying to out Zola, as mentioned in the readme, but I really want to make sure there aren't things like telemetry or other random features injected in or getting added (as seems to be the case with jekyll with ai-folio or academic pages) so it takes a while to go through everything.Ai-folio or academic pages is basically my use case or target, but I want something with zero javascript, which tends to be a bit hard in todays age.\n \nreply",
      "The fact people still add \"written in Rust\" to HN submissions is almost as funny as how effective it is, which itself is almost as funny as the fact that people like me can't stop commenting on it.\n \nreply",
      "I first posted without mentioning \"marmite\" neither \"Rust\", then a friend reminded me that both things would engage. People are very triggered by those words.\n \nreply",
      "As someone who both loves marmite and is currently learning Rust I was unable to resist clicking.\n \nreply",
      "And it worked. Congrats for reaching Front Page, Bruno!\n \nreply",
      "> Go programmers are very triggered by those words.FTFY\n \nreply",
      "You forgot the \"blazing fast\" part; that drives them bonkers LOL!\n \nreply",
      "Blazing Fast New Project Written in Rust (it's a SSG btw)\n \nreply",
      "I hope it goes full circle into \"btw I use arch\" levels of parody\n \nreply",
      "Well, it was 90% written on Arch :(\n \nreply"
    ],
    "link": "https://github.com/rochacbruno/marmite",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Markdown makes sites - A Static Site Generator for Blogs\n      Marmite [Markdown makes sites] is a very! simple static site generator.\n\nI'm a big user of other SSGs but it is frequently frustrating that it takes so much setup to get started.\nJust having a directory of markdown files and running a single command sounds really useful.\n\u2014 Michael, marmite user.It does \"one\" simple thing only:It also handles generating or copying static/ media/ to the output dir.Install with cargoOr download the pre-built binary from the releases~It's simple, really!CLIRead a tutorial on how to get started https://rochacbruno.github.io/marmite/getting-started.html and create your blog in minutes.Read more on how to customize templates, add comments etc on https://rochacbruno.github.io/marmite/Marmite is very simple.If this simplicity does not suit your n"
  },
  {
    "title": "HTML Form Validation is heavily underused (expressionstatement.com)",
    "points": 66,
    "submitter": "stereoabuse",
    "submit_time": "2024-10-28T21:28:29 1730150909",
    "num_comments": 55,
    "comments_url": "https://news.ycombinator.com/item?id=41976529",
    "comments": [
      "Last time I checked, web-browsers today still do not allow you to style the appearance of built-in HTML validation messages [1]; this wouldn't be so bad if Chrome (and Firefox) still conformed to their OS platform UI guidelines (i.e. so it looks system-generated, like how `title=\"\"` tooltips used to be), instead Chrome uses this ugly yellow/orange icon color with black-text on a white background on a bubble with a fixed corner border radius - it clashes horribly with my current project's aesthetics.[1] https://stackoverflow.com/questions/5328883/how-do-i-style-t...Annoyingly, Chrome used to allow styling of validation-messages using vendor-prefixed pseudoelement selectors, but they removed that functionality and never brought it back; I'll chuck this on the same pile as other arbitrary annoyances like \"can we have a native HTML combo-box please\" and \"why is <select multiple> still a horribly unusable ctrl+click box instead of a checkbox-list?\".\n \nreply",
      "True. But you can hide the default message and replace it with your own. You'll still benefit from the form validation.\n \nreply",
      "The biggest, easiest to implement underutilization is:\"Using specific type attribute values, such as \"email\", \"number\", or \"url\"\"These can significantly improve user experience on mobile by triggering the optimal keyboard.\n \nreply",
      "I avoid the use of `type=number` and use `type=text inputmode=numeric` instead. It doesn't come with these arrow buttons which most users don't need anyway for entering numbers. Also the keyboard is better on iOS.\n \nreply",
      "Thanks for the tip wasn't aware of that.I rarely want those arrow buttons for numbers\n \nreply",
      "It\u2019s amazing how many login forms are labeled \u201cemail\u201d and then don\u2019t have the correct type set.\n \nreply",
      "I had to recently make sure that we do not use any of the more complex input elements, because we need to drive them from on-screen keyboard that for various reasons is also implemented in-page.And that means it's barely doable with normal inputs, the special ones support even less events.\n \nreply",
      "> because we need to drive them from on-screen keyboard that for various reasons is also implemented in-pageThere's your problem right there. Can you expand on the reasons? It seems like very bad practice for a website to provide it's own \"keyboard\" instead of using the system keyboard.\n \nreply",
      "Unfortunately the number input is lacking and inconsistent. We\u2019ve always fallen back to JavaScript validation.\n \nreply",
      "`type=text inputmode=numeric` (from other comment)\n \nreply"
    ],
    "link": "https://expressionstatement.com/html-form-validation-is-heavily-underused",
    "first_paragraph": "It\u2019s easy to disallow empty inputs by adding\na required attribute:Beyond that, there is a bunch of other ways that you can add constraints to your input. Precisely, there are three ways to do it:The last one is the most powerful as it allows to create arbitrary validation logic and handle\ncomplex cases.\nDo you notice how it differs from the first two techniques? The first two are defined with attributes, but setCustomValidity\nis a method.Here\u2019s a great write-up that explains the differences between DOM attributes and properties: https://jakearchibald.com/2024/attributes-vs-properties/The fact that setCustomValidity API is exposed only as a method and doesn\u2019t have an attribute equivalent\nleads to some terrible ergonomics. I\u2019ll show you with an example.But first, a very quick intro to how this API works:This would make input invalid and the browser will show the reason as \u201cAny text message\u201d.Passing an empty string makes the input valid (unless other constraints are applied).That\u2019s pretty"
  },
  {
    "title": "Buy payphones and retire (computer.rip)",
    "points": 320,
    "submitter": "cratermoon",
    "submit_time": "2024-10-28T16:33:11 1730133191",
    "num_comments": 191,
    "comments_url": "https://news.ycombinator.com/item?id=41973065",
    "comments": [
      "The concept of \"passive income\" is almost a scissor concept. Or maybe only if you couple it with the categorical imperitive.On the one hand, it's so obviously true that it would be great to have passive income. Draw the salary you're drawing now, with some growth, and not have to work.On the other hand, if everyone had access to this capability then society and civilization would grind to a halt. People make things; if people don't make things, then we don't eat, we don't drink. If the goal is to have a system where everyone can have passive income, then achieving that goal is the end of the world.The categorical imperative roughly says that something is moral only if its universal adoption would benefit society. So there is a break there. The idea of passive income is isomorphic to rent seeking, which we generally agree is a bad thing.\n \nreply",
      "\"passive income\", in it's original iteration, wasn't the idea that you could make money by doing nothing.  The idea was that you made something or did something that you were uniquely able to make or do, and then the result of your labour would make money for you while you put in minimal continued effort.the version of passive income where you don't do anything productive at all, ever, and just put up some initial capital in exchange for even more money back, is always a scam.  some people might come out ahead sometimes, but more people will lose than win.\n \nreply",
      "> the version of passive income where you don't do anything productive at all, ever, and just put up some initial capital in exchange for even more money back, is always a scamNo, that's just investing.This is how savings accounts work, this is how CDs work, this is how treasury bonds work, this is how passive investing (e.g. via ETFs on index funds) works, and there are many, many more examples.If you're keeping your retirement savings in an IRA / other local equivalent, whether owned privately or by your government, the same processes happen behind the scenes.You put in capital, you lock that capital away for a while, you get back more capital later.The differences here are in terms of possible returns. Bonds have (relatively) low returns but almost 0 risk, index funds have significantly higher returns but are also higher risk, though it's still pretty low if your time horizon is multiple decades, and there are crazy investments (think Bitcoin) with possibly eye-watering returns, but also an enormous amount of risk.Now investments with \"guaranteed\" eye-watering returns (think >10% per year) and apparently 0 risk? Yeah, definitely a scam.\n \nreply",
      "> No, that's just investing.Yes. Investing is passive income. If you have $20M and your lifestyle requires no more than $800K/yr of income taxed a waaaaay lower rates than the working stiffs pay on the same, then a 4% return more than suffices to live off of income that is waaaaay more passive than most passive income frauds even come close to promising.The difference between \"investing\" and \"passive income\" is mostly just the difference between blue blood and the new rich. A tale as old as time.Working men of the world uniting would be an utter disaster, so instead they're persuaded at any cost to choose sides in this absurd dichotomy between two sets of do-nothings.\n \nreply",
      "> Bonds have (relatively) low returns but almost 0 riskEach of the asset classes you listed has risks. Bonds are subject to term (i.e. inflation) and credit (i.e. default) risk.Bonds may be less volatile than equities and commodities, but they can definitely go down (e.g. 2022).The only free lunch in investing is diversification.\n \nreply",
      "If everyone does it, the world grinds to a halt and everyone dies.\n \nreply",
      "What really happens: if everyone tries to acquire a particular income producing asset, the asset gets so expensive that the return is not worth the risk plus the time value of the money it could generate.  Stocks in the 1920's, Tokyo real estate in the 1990s, US housing the mid 2000's...\n \nreply",
      "Well, everyone can\u2019t do it because not everyone has access to capital\n \nreply",
      ">just put up some initial capital in exchange for even more money back, is always a scam. some people might come out ahead sometimes, but more people will lose than win.How so? My all-world index funds are doing pretty well. For more risk averse, almost every buyer of USA governmental bonds gets \"even more money back\" in exchange for the initial capital. I don't think that's a scam either.\n \nreply",
      "> For more risk averse, almost every buyer of USA governmental bonds gets \"even more money back\" in exchange for the initial capital.In nominal terms, sure. In real terms, ask the banks that bought 30 year treasuries in Spring 2020 how that's going for them.\n \nreply"
    ],
    "link": "https://computer.rip/2024-10-26-buy-payphones-and-retire.html",
    "first_paragraph": "PAYPHONES at High VolumeExisting sites! Earn BIG $$. Money Back Guarantee!Dropshipping AliExpress watches, AI-generated SEO spam websites... marginally\nlegal and ethical passive income schemes, that serve to generate that income\nmostly for their promoters, can feel like a modern phenomenon. The promise of\nbig money for little work is one of the fundamental human weaknesses, though,\nand it has been exploited by \"business coaches\" and \"investment promoters\" for\nabout as long as the concept of invesstment has existed. We used to refer mostly\nto the \"get rich quick\" scheme, but fashions change with the time, and at the\nmoment \"passive income\" is the watchword of business YouTubers and Instagram\nadvertising.And what income is more passive than vending machine coin revenue? Automated\nvending has had a bit of a renaissance, with social media influencers buying\nold machines and turning them into a business. The split of their revenue\nbetween vending machine income and social media sponsorship "
  },
  {
    "title": "Improving Xwayland window resizing (vladzahorodnii.com)",
    "points": 50,
    "submitter": "TangerineDream",
    "submit_time": "2024-10-28T20:18:32 1730146712",
    "num_comments": 27,
    "comments_url": "https://news.ycombinator.com/item?id=41975741",
    "comments": [
      "Huge respect to any dev who goes out of their way to fix flickering/glitching/black regions when resizing or moving windows, I honestly can't stand it when I see it because I know it can be solved with effort.\n \nreply",
      "For me, the quickest way to tell that I'm running on Wayland is seeing if multi-lingual keyboard input is broken. I have right-alt-while-pressed set to switch to a Greek layout (because who doesn't math?), and it reliably works on X11 but breaks in all sorts of weird ways under Wayland (sometimes it simply fails to enable/disable, sometimes it shows a notification as if it changed but switches back when input actually happens, ...).On the bright side I'm finally learning how Vim's digraphs work.\n \nreply",
      "Both Xorg and Wayland compositors use libinput, so it's probably more to do with lack of decent configuration support in your DE or WM. You can always configure libinput manually. Sway just lets you add libinput configs inline inside your sway config.[edit]This is probably not relevant (assuming correct wayland libinput config), since this is not where mult-lingual input transformations live. libinput just handles the physical keyboard mapping and behaviour.On more careful reading of the parent this sounds more like a buggy input method editor.. or maybe an issue with switching between X and wayland apps.\n \nreply",
      "Is (simple, so e.g. non-CJK) multilingual input a libinput thing? I thought it was a libxkbcommon thing.\n \nreply",
      "NO! my mistake, I latched onto keyboard input and didn't think about multi-lingual. I'm guessing you mean things like pinyin, I think that's a dbus thing, which is still a thing on wayland but I don't really know anything about this... I'll get my coat.\n \nreply",
      "Multilingual keyboard input is such a mess haha. I need to type a lot of Chinese using pinyin and still haven't found a reasonably polished implementation on Wayland (Sway) that works on both Xwayland and true Wayland applications. So I reverted to i3 with ibus.\n \nreply",
      "Really? My laptop has my national keyboard but I switch to USA for programming because of {} [] and all the other characters that can be typed with minimal use of extra keys. My fingers know the keys and the switch combination, maybe windows + space. I didn't expect Wayland not to have such basic functionality after so many years. But frames must be perfect, no tearing (is that the word?)\n \nreply",
      "It's possible that the \"permanently switch to next layout\" works reliably, but not the \"switch while held\" (which I do because I'm selecting single symbols at a time)?\n \nreply",
      "Excellent writeup, thanks for posting.  I was involved with efforts to achieve similar things in Windows (Direct Composition, etc.).  In practice, it was enlightening to debug various apps and frameworks and discover just how long repainting can take and how many edge cases there are around slow apps, hung apps, and so on.  Who knows, maybe someone there still has some of the malicious test apps I wrote (using the language of this article, apps which acknowledge the sync request and then take multiple seconds to actually paint, etc., etc.).It's definitely a hard problem space that's basically incompatible with how most GUI apps and frameworks worked from 1985-2015.\n \nreply",
      "Nice! It would be cool for Wine Wayland driver to also fix window resizing (regedit currently is blinking all over when being resized).\n \nreply"
    ],
    "link": "https://blog.vladzahorodnii.com/2024/10/28/improving-xwayland-window-resizing/",
    "first_paragraph": "Vlad Zahorodnii's BlogOne of the quickest ways to determine whether particular application runs using Xwayland is to resize one of its windows and see how it behaves, for exampleWhile it can be handy for the debugging purposes, overall, it makes the Plasma Wayland session look less polished. So, one of the goals for 6.3 was to fix this visual glitch.This article will provide some background behind what caused the glitch and how we addressed it. Just in case, here\u2019s the same application, which was shown in a screen cast above, but with the corresponding resizing fixes in:On X11, all window changes typically take place immediately, including resizing. This can lead to some issues. For example, if a window is resized, it can take a while until the application repaints the window with the new size. What if the compositing manager decides to compose the screen in meanwhile? You\u2019re likely going to see some sort of visual glitches, e.g. the window contents getting cropped or seeing parts of t"
  },
  {
    "title": "We're forking Flutter (flutterfoundation.dev)",
    "points": 457,
    "submitter": "alexzeitler",
    "submit_time": "2024-10-28T19:24:19 1730143459",
    "num_comments": 375,
    "comments_url": "https://news.ycombinator.com/item?id=41975047",
    "comments": [
      "> How large is the Flutter team, today? Google doesn't publish this information, but my guess is that the team is about 50 people strong.> That's 50 people serving the needs of 1,000,000. Doing a little bit of division, that means that every single member of the Flutter team is responsible for the needs of 20,000 Flutter developers! That ratio is clearly unworkable for any semblance of customer support.This is a weird exercise. Python, for example, is a #1/#2 language in the world and there's only 50 active core devs, 90% of which don't even work on Python full time. Somehow we make that work.\n \nreply",
      "\u201cFlutter team members don't actually use Flutter.\u201d (as per the website).This could explain a lot.\n \nreply",
      "Seems to me that as projects mature they require less effort too. It's hard to account for that sincePython started in 1989, it's older than Linux and it has a more narrow scope.\n \nreply",
      "Python doesn't have a narrow scope. At least compared to Flutter. It's in so many places, from Linux installers, to medical, aerospace, math,... and finally the web (which is probably what we hear about the most).\n \nreply",
      "Python is an engine, flutter is the whole car.\n \nreply",
      "I doubt that complexity of a language is comparable to that of a widget library. After the text input cell and scrolling window it\u2019s basically dumb geometry/drawing code all along.\n \nreply",
      "> We describe Flock as \"Flutter+\". In other words, we do not want, or intend, to fork the Flutter community. Flock will remain constantly up to date with Flutter.That was the first fear when I saw the title - splitting community and having two incompatible versions. Good to see it addressed in the post.The second was just a fear of how it would complicate the development process, but it seems to be a drop-in replacement (just configuring FVM - Flutter Version Manager):   Configure .fvmrc to use Flock:\n   {\n     \"flutter\": \"master\",\n     \"flutterUrl\": \"https://github.com/Flutter-Foundation/flutter.git\"\n   }\n\n\nFlutter is the best thing that happened to UI development since Qt. Most people don't realize how many apps written in Flutter they use daily, simply because it's impossible to tell. And the frustration described in the post is felt by many CTOs and developers. Especially those who use Flutter for desktop and web. Flutter provides an amazing experience for desktop apps, and precisely because of that, it feels so frustrating when you stumble upon some stupid bug that has been open for a year or two and never gets prioritized. Usually, it's nothing critical, but still requires workarounds and wasting time.I don't know, the idea of Flock sounds good, the main question is engaging the community. Hopefully, the author (who seem to be an ex-Flutter team member himself) have a good grasp on the state of the community.Wishing luck to the project and going to keep an eye on the progress.\n \nreply",
      "> Most people don't realize how many apps written in Flutter they use daily, simply because it's impossible to tellYou can't be serious. Maybe on Android, but on other platforms\u2014especially iOS\u2014they stick out like a sore thumb.A number of them just look like Material Design Android apps awkwardly transplanted over, but I know that's down to the developer so I won't hold that against Flutter. But scrolling through the Flutter showcase[0] and calling those apps up to look at screenshots on the App Store\u2014none of them look like native iOS apps. They don't look bad (mostly), but they don't fit in.Don't get me wrong, I don't expect anyone else to care or even notice. But for those of us that do care, you can absolutely tell.[0] https://flutter.dev/showcase\n \nreply",
      "Flutter showcase is a disgrace, to be honest. Doesn't represent the actual landscape even remotely.\n \nreply",
      "That is good to hear and hopefully gets fixed. It has been some years now, but I did use flutter for some toy projects and liked using it - I am used to using ReactJS I found there was a lot of transitive knowledge coming from that background.Ultimately what dissuaded me from pursuing it for any bigger projects is a lack of examples of great looking production apps with complex requirements. When I was looking, I was seeing a lot of CRUD apps - display a form, click an upload button, ect. This was probably 2018/2019 when I was taking a serious look at it.All of that is to say: Quality app showcases do matter for whether or not devs will trust a solution enough to pull the trigger.\n \nreply"
    ],
    "link": "https://flutterfoundation.dev/blog/posts/we-are-forking-flutter-this-is-why/",
    "first_paragraph": "Over the years, Flutter has attracted millions of developers who built user interfaces across\nevery platform. Flutter began as a UI toolkit for mobile - iOS and Android, only. Then Flutter\nadded support for web. Finally, Flutter expanded to Mac, Windows, and Linux. Across this massive\nexpansion of scope and responsibility, the Flutter team has only marginally increased its size.\nTo help expand Flutter's available labor, and accelerate development, we're creating a fork\nof Flutter, called Flock.Let's do some back-of-the-napkin math to appreciate the Flutter team's labor shortage.How many Flutter developers exist in the world, today? My guess is that it's on the order of\n1,000,000 developers. The real number is probably higher, but one million should be reasonably\nconservative.How large is the Flutter team, today? Google doesn't publish this information, but my guess is\nthat the team is about 50 people strong.That's 50 people serving the needs of 1,000,000. Doing a little bit of division"
  },
  {
    "title": "Study: DNA corroborates \"Well-man\" tale from Norse saga (arstechnica.com)",
    "points": 68,
    "submitter": "LinuxBender",
    "submit_time": "2024-10-25T15:21:28 1729869688",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=41946133",
    "comments": [
      "> King Sverre's claim to the throne was that he was the son of King Sigurd Munn, killed in 1155 CE by his brother. Sverre's men were known as \"Birkenbeiner\" because their legwear and shoes were made of birch bark. Among the rival factions were the \"Bagleres\" from southern Norway.This honestly sounds like such a cool premise for a video game.Are there any video games based on this saga?\n \nreply",
      "If you want to play an epic Norse story, give The Banner Saga trilogy a try.https://en.wikipedia.org/wiki/The_Banner_Saga\n \nreply",
      "It's a cool premise for a cross country ski race. This is the sister race of the similarly named race in Norway:https://en.wikipedia.org/wiki/American_Birkebeiner\n \nreply",
      "Tangential, but anyone interested in literature should read \"The Sagas of the Icelanders\" if they have not already. The early Norse and Icelandic sagas are a treasure trove of great stories. I think about them nearly every day and it's fun to recognize similar plot points in modern novels.\n \nreply",
      "https://www.astralcodexten.com/p/your-book-review-njals-saga might make for a good introduction.\n \nreply",
      "Any good modern English translations of the Sagas that you would recommend? On a related note Neil Gaiman's Norse Mythology is a great introduction to that topic.\n \nreply",
      "On a similar note, we now know of at least two places where Norsemen were massacred by the Anglo-Saxons on St. Brice's Day (1002).https://archaeology.org/issues/november-december-2013/featur...It is always fascinating to see ancient written history corroborated by later physical discovery.It is also a bit chilling to realize how our species resorts to mad brutality over and over again. Killing a bunch of random Danes in 1002 on the order of the king wasn't any better than killing a bunch of random Jews in 1942 on the order of der F\u00fchrer.\n \nreply",
      "Killing a bunch of people whose people killed your people, whose people killed your people, etc. That's a big part of history.The Jews weren't killing any Germans. That's just a lie. In fact, many Jews were Germans, and many Germans were Jews.A slightly better analogy would how the Germans treated the French during WWII, in revenge for how the French treated Germans after WWI, in revenge for how the Germans treated the French after the Franco-Purssian War, in revenge for how the French treated the Germans during the Napoleanic Wars, in revenge for ...\n \nreply",
      "> Killing a bunch of random DanesWe don't really know much but supposedly they were mainly enemy combatants (and their affiliates, possibly including their families in a less generous interpretation. Although considering that the slave trade was a alive and well in Anglo-Saxon Britain killing women and children might not have been practical).\"Random\" Danes have been violently terrorizing Britain for centuries, of course indiscriminate murder is always horrible but I wouldn't say it's necessarily comparable to what Nazi Germany was doing (maybe closer to what the Soviets did to Germans when they got the upper hand).\n \nreply",
      "Human walk a fine line. We're not actually civilized but more like pets... domesticated. We're house broken to a point, but still might bite, shit on the sofa, etc.\n \nreply"
    ],
    "link": "https://arstechnica.com/science/2024/10/ancient-dna-sheds-light-on-well-man-from-norse-saga/",
    "first_paragraph": "\n        The \"Well-man\" likely had blue eyes, blond or light-brown hair, and hailed from southern Norway.\n      A 12th-century Norse saga tells of an invading army from the south razing a castle stronghold and throwing a dead body into the well to render the water undrinkable. Human remains believed to be those of this so-called \"Well-man\" were discovered in the 1930s, providing valuable potential outside confirmation of the tale. Scientists have now sequenced the DNA of those remains, and while they could not prove once and for all that the remains are those of the Well-man, their findings are consistent with that identification, according to a new paper published in the journal iScience.Much of what we know about early Norse and Icelandic history comes from the sagas, many of which were written by scholars centuries after the events described\u2014most likely based on oral traditions or earlier now-lost manuscripts. One notable exception is the Sverris Saga, which covers the reign of King"
  },
  {
    "title": "Why so few Matt Levines? (gwern.net)",
    "points": 127,
    "submitter": "iNic",
    "submit_time": "2024-10-28T20:37:42 1730147862",
    "num_comments": 66,
    "comments_url": "https://news.ycombinator.com/item?id=41975993",
    "comments": [
      "I think Derek Guy (@dieworkwear and \"the Twitter menswear guy\") is a decent \"Matt Levine\" for the menswear space, as much as there can be one for a subjective subject.He focuses on the clothes first and never his personal celebrity, although he uses his Twitter platform to promote the desire for affordable housing and respect for immigrants fairly frequently. I don't think there is a picture of him anywhere on the internet. He violently rejects all paid content opportunities. Instead, he focuses on the aspects of good tailoring, \"shape and drape\", and the history of many menswear items. His bug thing is that \"clothing is a cultural language\" that all speak.* putthison.com (he is among the writers, but the big itself is mostly dead now-a-days)* dieworkwear.com (his personal, infrequent blog)* styleforum.net (a forum where he used to participate a lot)I wish his (substantial) Twitter activity was available elsewhere.\n \nreply",
      "\u201cSo you have a filter with many layers: you need areas which fulfill a stringent set of conditions for such an educational newsletter, and you need a very unusual sort of individual, someone who is expert in the area and has preferably gotten their hands dirty, who is good enough to work professionally in it, but who also is capable of explaining it well, at a beginner level, many times, endlessly without burning out or getting bored, because of their intense interest in the area (but again, not quite intense enough to make them go do it instead of write about it).\u201dI think the first filter is a much bigger factor, but for a reason that\u2019s not mentioned in the post: $$$s to be gained. A large number of people read finance blogs because they think they themselves make money with the knowledge therein.This is hard to replicate with other examples given: for purely abstract topics, eg Greco-Roman philosophy, the prize is purely intellectual. For others, eg fracking and drug discovery, you can make tons of money but pool of interested people is much smaller.The only combination of general appeal and personal gain that could be interesting, I think, would be dating. You have recurrent patterns, clear outcomes, and pretty much everyone is interested and want to learn how to get better at it.\n \nreply",
      "> $$$s to be gained. A large number of people read finance blogs because they think they themselves make money with the knowledge thereinLevine's blogs aren't geared to this audience. The pitch is simpler: people in finance have money and the people with the most money in finance tend to enjoy (or at least spending way too much time) thinking about finance. (I'm in finance and I'm good at it.)If I could pay for Matt Levine separately from Bloomberg, I would. Not because I expect to profit off it. But because it's fun, informative and once in a while helps me explain something to someone else (usually a friend) more concisely.\n \nreply",
      "I think Levine is probably doing fine money-wise.  I assume he's paid a salary (or has some other financial arrangement) with Bloomberg.As for Bloomberg itself, you can subscribe to Money Stuff (via email) without paying for Bloomberg.(Perhaps you just want to throw some cash his way because you get value from his writing, and want to show your appreciation; ignore me in that case.)\n \nreply",
      "> A large number of people read finance blogs because they think they themselves make money with the knowledge therein.Do you actually read his work?I certainly don't expect to make money from reading it. I'd be surprised if a significant number of subscribers had that reason.It's entertaining and informative about the overall world, not something I expect to make money from.\n \nreply",
      "I was always a boring passive investor and reading Money Stuff has made me more boring and more passive. Every day it's stories of people smarter than me getting hosed in ways I wouldn't have thought of\n \nreply",
      "Derek Lowe is the Matt Levine of chemistry and drug development. https://www.science.org/blogs/pipeline\nHis \"Things I Won't Work With\" series is legendary even in HN.Ann Lipton is the Matt Levine of business law. \nhttps://www.businesslawprofessors.com/author/alipton/\n \nreply",
      "See footnote 1.> While I enjoy Derek Lowe, the extent to which his posts are inside-baseball and do not repeat themes, or only repeat many years apart, emphasize the contrast with Levine.\n \nreply",
      "I disagree with both points. I would say he is indeed a Matt Levine of his field. Perhaps I'm misunderstanding the author's argument though.1. His posts are inside-baseball - this is true for some posts, but many are written to be approachable to all audiences, especially during the coronavirus. This is similar for Matt Levine's posts, but as a finance nerd, not a drug discovery one, the author does not see this.2. [His posts] do not repeat themes - he has many examples of repeated themes, including the whole science-over-money aspect of the Aducanumab saga, various times he has touched on \"AI\" drug discovery, and the whole Things I Won't Work With series.\n \nreply",
      "Gotta Love Derek... \"Things I won't work with\" actually got me to read some of his other stuff about how drug development and trials work.\n \nreply"
    ],
    "link": "https://gwern.net/matt-levine",
    "first_paragraph": "economics, writing psychologyWhy are popularizing educational newsletter-frequency writers of important fields like Matt Levine for finance so rare? Because most fields are too slow or ambiguous, and writers of the right combination of expertise, obsession, and persistence are also rare.[Warning: JavaScript Disabled!][For support of key website features (link annotation popups/popovers & transclusions, collapsible sections, backlinks, tablesorting, image zooming, sidenotes etc), you must enable JavaScript.]Matt Levine is the most well-known newslettrist (\u201cMoney Stuff\u201d) in the financial industry, having blogged or written since 201113ya, finding his niche in popularization after stints in Wall Street & law. His commentary is influential, people leak to him, he sometimes interviews major figures (notoriously, Sam Bankman-Fried) or recounts inside information, and a number of phrases like his \u201claws of insider trading\u201d (specifically, how not to) have gained currency to the point where read"
  },
  {
    "title": "The sins of the 90s: Questioning a puzzling claim about mass surveillance (cr.yp.to)",
    "points": 183,
    "submitter": "ibotty",
    "submit_time": "2024-10-28T15:34:54 1730129694",
    "num_comments": 78,
    "comments_url": "https://news.ycombinator.com/item?id=41972172",
    "comments": [
      "I think I agree with Bernstein that the talk is mostly incoherent about this \"privacy\" vs. \"security\" tradeoff.However, I do want to call out his \"Amazon was doing good business before 1999 and the end of the crypto wars\", and \"companies allocate just a small fraction of their security spend to cryptography\":* Prior to the end of export controls, Amazon was still doing SOTA cryptography* Export controls themselves boiled down to clicking a link affirming you were an American, and then getting the strong-cryptography version of whatever it was you wanted; there were no teeth to them (at least not in software products)* Prior to the widespread deployment of cryptography and, especially, of SSH, we had backbone-scale sniffing/harvesting attacks; at one point, someone managed to get solsniff.c running on some pinch point in Sprint and collected tens of thousands of logins. Lack of cryptographic protection was meaningful then in a way it isn't now because everything is encrypted.\n \nreply",
      "I think the social element is one of the roots of the problem.Basically, people don't understand privacy, and don't see what\nis going on, so they don't care about it.  Additionally, most\nprivacy intrusions are carefully combined with some reward or\nconvenience, and that becomes the status quo.This leads to the people who stand up to this being ridiculed\nas tinfoil hat types, or ignored as nonconformist.everything after that is just a matter of time.\n \nreply",
      "Yes. The weirdest example of this ( and most personally applicable ) is the DNA data shared with 23andme and the like. I did not subscribe to this. Neither did my kids ( or kids of the individual who did subscribe I might add ), but due to some shared geography and blood ties, whether I want to or not, I am now identifiable in that database.To your point, there is something in us that does not consider what information could do.\n \nreply",
      "If you have nothing to hide what are you worried about? Or if you are not planning to be a criminal what are you worried about?I am 100% not serious and do not believe either statement above. I sadly am in the same boat as you and had a blacksheep of a brother who did some sort of crime and as a condition had his DNA taken so I by default am in the system as well.I never could understand why people would willingly offer their DNA to companies that even if they are not selling that data sooner or later could have that data leak and the consequences could mean being able to afford life and medical insurance or not.\n \nreply",
      "> I never could understand why people would willingly offer their DNA to companies that even if they are not selling that data sooner or later could have that data leak and the consequences could mean being able to afford life and medical insurance or not.I\u2019m the odd one out on this thread but I just\u2026 don\u2019t see why it\u2019s a big deal? All the consequences of my dna leaking seem so extremely theoretical and unlikely that I\u2019m willing to take the risk in exchange for a few minutes of fun reading a report about where my ancestors came from.This is always framed like people who willingly surrender privacy must not know better or be uneducated about the harms but I think it\u2019s fair for people to just decide they don\u2019t evaluate the harms as very serious.The example you gave about health insurance is implausible because it\u2019s illegal in the US and I assume other developed countries for insurers to charge different amounts for health coverage based on pre-existing conditions. It strikes me as very, very paranoid to worry that someday my DNA might leak, and there\u2019s something bad in it, and the law will change such that insurers can abuse it, and I for some reason won\u2019t have a job that gives me health insurance anyway. That\u2019s a lot of ands making the probability of that outcome very small.\n \nreply",
      "<< The example you gave about health insurance is implausible because it\u2019s illegal in the US and I assume other developed countries for insurers to charge different amounts for health coverage based on pre-existing conditions.As phrased, I am unable to comment as to whether that statement is accurate, but I will go with it for the sake of the argument.I chuckled a little, because that one phrase immediately reminded of just how much political capital was spent to even allow 'pre-existing conditions' to be removed as a factor in denying coverage.What exactly makes you think that law cannot be changed?\n \nreply",
      "Changing the law is extremely difficult in the US because of the gridlocked-by-design political system, so I think it's unlikely. Changing it would also be extremely unpopular.Of course it could happen. But even if it did, all the other unlikely events I listed would all have to happen for me to be harmed. The point of my post was that me being harmed due to having given my DNA to 23&me is unlikely, not impossible. Just like it's theoretically possible a brick could fall on my head while walking outside, but I still don't wear a helmet every time I go outside.Worrying so much about this stuff just feels to me like the tech geek version of preppers who stock their house with guns and canned food in case the apocalypse comes (which never does).\n \nreply",
      "> I never could understand why people would willingly offer their DNA to companies that even if they are not selling that data sooner or later could have that data leak and the consequences could mean being able to afford life and medical insurance or not.Reality: nobody cares about your DNA. It's useless for medical or life insurance companies, they can't discriminate based on the DNA by law. And if it's ever repealed, you can bet that life insurance companies will just start asking for your DNA info anyway.DNA also doesn't provide actionable intelligence for advertisers that is worth more than a week of your purchase history or your Facebook profile.However, DNA provides actionable intelligence for _you_. Mostly by highlighting the disease risks and other clinically-significant data (like drug metabolism speed).\n \nreply",
      "<< I never could understand why people would willingly offer their DNA to companiesI can play devil's advocate and come up with some level of rationalization along the lines of 'it will help humanity cure cancer' in a handwavy kinda way, but even then one is trading future potential against near 100% guarantee that things do change in regards to what you gave -- that is: even if company is promising today it will not do something with data, a day will come when that will no longer be the case.The blacksheep example is definitely interesting though and likely a good idea for a police drama episode ( if it wasn't used already ). Edit: And now that I think about it, if it would be made, it would show the the good certainly have nothing to fear indeed.\n \nreply",
      "Downside of trading privacy for security: anything that makes a network connection creates metadata about you, and the metadata is the real danger for analyzing your social connections: https://kieranhealy.org/blog/archives/2013/06/09/using-metad...The problem isn't about the big corporations themselves but about the fact that the network itself is always listening and the systems the big corporations build tend to incentivize making as many metadata-leaking connections as possible, either in the name of advertising to you or in the name of Keeping You Safe\u2122: https://en.wikipedia.org/wiki/Five_EyesTransparent WWW caching is one example of a pro-privacy setup that used to be possible and is no longer feasible due to pervasive TLS. I used to have this kind of setup in the late 2000s when I had a restrictive Comcast data cap. I had a FreeBSD gateway machine and had PF tied in to Squid so every HTTP request got cached on my edge and didn't hit the WAN at all if I reloaded the page or sent the link to a roommate. It's still technically possible if one can trust their own CA on every machine on their network, but in the age of unlimited data who would bother?Other example: the Mac I'm typing this on phones home every app I open in the name of \u201c\u201c\u201cprotecting\u201d\u201d\u201d me from malware. Everyone found this out the hard way in November 2020 and the only result was to encrypt the OCSP check in later versions. Later versions also exempt Apple-signed binaries from filters like Little Snitch so it's now even harder to block. Sending those requests at all effectively gives interested parties the ability to run a \u201cHey Siri, make a list of every American who has used Tor Browser\u201d type of analysis if they wanted to: https://lapcatsoftware.com/articles/ocsp-privacy.html\n \nreply"
    ],
    "link": "https://blog.cr.yp.to/20241028-surveillance.html",
    "first_paragraph": "Meredith Whittaker,\npresident of the Signal Foundation,\ngave an interesting\ntalk\nat NDSS 2024\ntitled \"AI, Encryption, and the Sins of the 90s\".I won't try to summarize everything the talk is saying:\ngo watch the talk video yourself,\nor at least read through the transcript.\nBut I'll say something here about\nwhat the \"sins\" part of the talk's title is referring to.The talk says that, in the 1990s,\n\"cryptosystems were still classified as munitions and subject to strict export controls\".\nThe talk describes the \"crypto wars\" as\n\"a series of legal battles, campaigns, and policy debates that played out in the US across the 1990s\",\nresulting in \"the liberalization of strong encryption in 1999\",\nallowing people to \"develop and use strong encryption without being subject to controls\".OK, that sounds familiar.\nWhich parts are the \"sins\"?Answer:\nthe talk claims that\n\"the legacy of the crypto wars was to trade privacy for encryption\u2014and to usher in an age of mass corporate surveillance\".Wow.\nThat s"
  },
  {
    "title": "Building a better and scalable system for data migrations (yorickpeterse.com)",
    "points": 8,
    "submitter": "YorickPeterse",
    "submit_time": "2024-10-24T14:16:26 1729779386",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=41935730",
    "comments": [
      "Considered doing the migration via Liquibase? I dont know that it supports parallelism in the migration process but you could do most of the rest in it (pre/post migration scripts, rollbacks, test cases (within precondition changesets), etc... Not a real programming language though; its xml config files or annotated SQL scripts...\n \nreply",
      "I hadn't heard of Liquibase until now. Taking a brief look, it doesn't seem like it would be suitable though. For large scale migrations you really need to be able to express arbitrary logic (\"migrate A to B but only if file X on the file system contains Y\"), which you can't do with something like SQL or XML.\n \nreply"
    ],
    "link": "https://yorickpeterse.com/articles/building-a-better-and-scalable-system-for-data-migrations/",
    "first_paragraph": ""
  },
  {
    "title": "Standardizing Automotive Connectivity (tesla.com)",
    "points": 108,
    "submitter": "hardikgupta",
    "submit_time": "2024-10-28T19:09:22 1730142562",
    "num_comments": 112,
    "comments_url": "https://news.ycombinator.com/item?id=41974882",
    "comments": [
      "Molex and others may as well get behind this. EVs are driving all the content (as you can imagine, electric vehicles are way more profitable than IC not only because they have additional connectors but also because they tend to have more advanced in vehicle entertainment).The other reality is that all of the Chinese OEMs will generally work with the companies like Molex, TE, Amphenol, etc just long enough to let them shoulder the R&D cost and then reverse engineer and vertically integrate the part in their supply chain.If there is a chance to leverage their scale and supply chain to compete where there is known demand, it\u2019s worth it to be early in and then be able to help OEMs customize the reference designs as needed.\n \nreply",
      "How is this better than all the other 48V connectors out there (MX150, MCON, PP, etc.)?Surely it isn't just that they reduced the number of connectors since one could have just standardized on a subset of mass-produced connectors by molex, te, etc. instead.\n \nreply",
      "I'd like to know this too.  Their website claims \"cost\" but doesn't actually list the costs of the new connectors compared to existing ones.At least give us some comparisons!\n \nreply",
      "Those look much like AMP automotive connectors.Using one kind of unkeyed connector in a car may be a bad idea. Things can be plugged in wrong during repairs. There's a lot to be said for making connectors not fit where they shouldn't. Especially in automotive, where many connectors are plugged in blind, by feel. This simplifies manufacturing at the cost of repair.If it can be plugged in wrong, it will be plugged in wrong. AAA put a battery in backwards in my Jeep once, and most of the vehicle electronics had to be replaced.\n \nreply",
      "These looked keyed to me. Aside from the bulge on the top of the connector where the lock attaches to it's mate there is a middle vane that extends 2/3 way down with a little bit of a J hook on it.\n \nreply",
      "I think by keyed it isn't just \"can't be plugged in upside down\" but also \"can't be plugged into the other plug that's basically the same but connects to some other subsystem.\"Ideally a system like this would let you select some per-subsystem physical lockout mechanism.\n \nreply",
      "That level of keying would be done at the harness/electrical engineer level. You shouldn't put two same plug ends at one termination site.You really couldn't control it at plug or part level.\n \nreply",
      "Have they said there isn\u2019t a mechanism for individually keying connectors? There might be something optional, even if it\u2019s just blanking pins.\n \nreply",
      "That's the latch, not a key. Keying prevents putting the wrong plug in a receptacle. Usually that's done with notches on the receptacle and ridges on the plug.\n \nreply",
      "You can use the ridge that the latch attaches to as part of the key structure.There is also a J-shaped structure inside the plug that would function as a key as well, prevents the plug from starting when rotated 180 degrees.    ==\n  ------\n  |  | |\n  |  / |\n  ------\n \nreply"
    ],
    "link": "https://www.tesla.com/en_CA/blog/standardizing-automotive-connectivity",
    "first_paragraph": ""
  },
  {
    "title": "Steve Ballmer was an underrated CEO (danluu.com)",
    "points": 73,
    "submitter": "greggyb",
    "submit_time": "2024-10-28T21:48:27 1730152107",
    "num_comments": 115,
    "comments_url": "https://news.ycombinator.com/item?id=41976754",
    "comments": [
      "Funny story. I used to see Steve almost every weekday for a couple of years.I can't speak to his business skills, but I can attest that he never once offered a tip for his daily black iced tea. We'd even have it ready for him before he showed up so he never had to wait! He would pay with cash, and I'd hand him his change and drink, and that was that.It's funny to me now: the richest man in the world (at the time) and he never once offered a tip.Frugality aside, he was always very polite and warm so I can't be mad. Makes for a good ice breaker story.\n \nreply",
      "Having spent some time at the Microsoft campus, I can tell you this is basically the consensus view from employees today. Ballmer was not a cool, trendy, or fun CEO who people rallied behind - but he more or less \"got the job done\". He was the captain of a massive ship with a turning radius the size of a continent guiding it through icebergs.Azure's success was specifically set in motion under Ballmer. Owed to the fact that it was developed to Microsoft's strengths (enterprise support) that it didn't piss off too many of their partners and sales channels. Same with Office 365 and all of their other successful services. None are glamourous - but all are impressive with how not awful they are given their design constraints.Even things like Surface, while considered a failure, did its intended job of getting hardware partners to get their act together and make better consumer products.\n \nreply",
      "do you think if azure would have even _happened_ if mr. jeffrey snover was not tenacious enough ?\n \nreply",
      "Azure happened because of Nadella (who led the project) despite Ballmer.\n \nreply",
      "A rare miss by Mr. Luu.> Ballmer wins... 2010: Microsoft creates AzureThe Azure project was run by Nadella before he became CEO. And it succeeded despite Ballmer. Azure was seen as the Microsoft cloud, where people ran Windows Servers. But Microsoft had long lost the battle for the server space to Linux.When Ballmer stepped aside, only then could Nadella drop the limiters and push the Microsoft <3 Linux perspective to get the message out that Azure is a home for Linux workloads too.\n \nreply",
      "I'm not informed enough to rebut this, and don't want to be quoted in the follow-up article that suggests HN is still too dumb to get the genius of Ballmer, but here's my take.It's only the footnote of the article that mentions Ballmer's \"stage persona\". I think that's the important point, and I would add that his \"interview persona\" might have been even worse. Back then, he was quoted as saying insanely dumb shit all the time. Like when he literally publicly laughed about the iPhone. Or when he called a Zune feature to share files between devices \"squirting\".Maybe he did make all kinds of brilliant decisions internally. I wouldn't know, but neither would the stock market. If the CEO comes across as not understanding tech, it's likely the market will price that in.\n \nreply",
      "I think a better way of understanding Ballmer is that he really struggled to relate to end consumers, but he understood their business partners very well.\n \nreply",
      "Brief data transmissions being called \"squirts\" is common, and was more common at the time.\n \nreply",
      "I squirt all the time on Twitter.\n \nreply",
      "> Much like Gary Bernhardt's talk, which was panned because he made the problem statement and solution so obvious that people didn't realize they'd learned something non-trivialI really want to see this video, but I cannot find it anywhere. I checked https://www.youtube.com/playlist?list=PLcGKfGEEONaDvuLDFFKRf... but I believe Gary asks that his videos not be shown (which I am fine with). I also checked https://www.destroyallsoftware.com/talks but I do not see it there either.Should I be looking somewhere else?\n \nreply"
    ],
    "link": "https://danluu.com/ballmer/",
    "first_paragraph": ""
  },
  {
    "title": "Glass Health (YC W23) is hiring founding, senior and lead full-stack engineers (lever.co)",
    "points": 0,
    "submitter": "",
    "submit_time": "2024-10-28T21:43:25 1730151805",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://jobs.lever.co/glass-health-inc?team=Product%20%26%20Engineering",
    "first_paragraph": "Glass Health Inc. Home Page"
  },
  {
    "title": "Show HN: Trench \u00e2\u20ac\u201c Open-source analytics infrastructure (github.com/frigadehq)",
    "points": 76,
    "submitter": "pancomplex",
    "submit_time": "2024-10-25T14:07:45 1729865265",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=41945458",
    "comments": [
      "1) Appreciate the single image to get started, but am particularly curious how you handle different events of a new user going to different nodes.2) any admin interface or just the rest API?3) a little bit on the clickhouse table and engine choices?4) stats on Ingesting and querying tbe same time5) node doesn't support the clickhouse TCP interface. This was a major bottleneck even with batching of 50k events (or 30 secs whichever comes first)6) CH indexes?7) how are events partitioned to a Kafka partition? By userId? Any assumptions on minimum fieldsWill try porting our in-house marketing automation backend (posthog frontend compatible) to this and see how it goes (150M+ events per day)Kudos all around. Love all 3 of your technology choices.\n \nreply",
      "Thank you!1) All data is partitioned based on the \"instanceId\" of events (see `instanceId` here: https://docs.trench.dev/api-reference/events-create). Instance IDs are typically a logically meaningful way of separating users (such as by company/team/etc.) that allows for sharding the data across nodes.2) Yes, this the number 1 thing on our roadmap right now (if anyone is interested in helping build this, please reach out!)3) We're using the Kafka engine in ClickHouse for throttling the ingestion of events. It's partitioned by instanceId (see #1) for scaling/fast queries over similar events.4) My benchmarks in production showed a single EC2 instance (16 cores / 32 gb ram) barely working at 1000+ inserts / second with roughly the same amount of queries per second. Load averages 0.91, 0.89 0.9. This was in stark contrast to our AWS Postgres cluster which continued to hit 90%+ CPU and low memory with 80 ACUs, before we finished the migration to Trench.5) We seemed to solve this by running individual Node processes on every core (16 in parallel). Was the limit you saw caused by ClickHouse's inbound HTTP interface?6) Right now the system uses just a default MergeTree ordered by instanceId, useId, timestamp. This works really well for doing queries across the same user or instance, especially when generating timeseries graphs.7) I am still trying to figure out the best Kafka partitioning scheme. userId seems to be the best for avoiding hot partitions. Curious if you have any experience with this?Let us know how the migration goes and feel free to connect with me (christian@trench.dev).\n \nreply",
      "Looks good. In market for something like this and I  just ran it locally. how do I visualize data ? Is Grafana not included by default.Also, minor issue in your docs. There is an extra comma in the sample JSON under the sample event. The fragment below:        \"properties\": {\n            \"totalAccounts\": 4,\n            \"country\": \"Denmark\"\n        },\n    }]\n\nI had to remove that comma at the end.\n \nreply",
      "Thanks for flagging. Just fixed this.\nGrafana is intentionally not included by default -- but it takes a few minutes to set it up. We're still trying to figure out what to bundle by default in terms of UI -- for now it's API only.\n \nreply",
      "What is the advantage of this rather than using a postgres plugin for clickhouse and S3 storage of the data to build a kind of data-warehouse, which wouldn't require the bloat of Kafka?\n \nreply",
      "In my experience, at scale (~2-3k QPS), you'd run into a bottleneck ingesting so many events without Kafka. If you don't have this level of throughput, you could totally do the above and still get the advantages of ClickHouse's columnar datastore.\n \nreply",
      "Looks interesting, we solved this problem with Kinesis Firehose, S3 and Athena. Pricing is cheap, you can run any arbitrary SQL query and there is zero infrastructure to maintain.\n \nreply",
      "How does it scale? Can you spin up multiple containers?\nFor upcoming features auto archiving to cloud storage old data would be great.\n \nreply",
      "Once you've outgrown a single physical server, you can continue to scale the Trench cluster by spinning up more Trench application servers and switching to dedicated Kafka and ClickHouse (either self-hosted or via cloud offerings). You can also shard Trench itself depending on the structure of your data (e.g. 1 Trench instance per customer, use case, etc.)Auto-archiving to cloud for Kafka (Confluent, AWS KMS, etc.) / ClickHouse (ClickHouse Cloud, etc.) is definitely high on the roadmap.\n \nreply",
      "Could this be used to log IoT object events? or is it more for app analytics?\n \nreply"
    ],
    "link": "https://github.com/FrigadeHQ/trench",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Trench \u2014 Open-Source Analytics Infrastructure. A single production-ready Docker image built on ClickHouse, Kafka, and Node.js for tracking events, users, page views, and interactions.\n      \n\nDocumentation \u00b7 \n   Website \u00b7 \n   Join Our Slack\n\n\nTrench is an event tracking system built on top of Apache Kafka and Clickhouse. It can handle large event volumes and provides real-time analytics. Trench is no-cookie, GDPR, and PECR compliant. Users have full control to access, rectify, or delete their data.Our team built Trench to scale up the real-time event tracking pipeline at Frigade.Watch the following demo to see how you can build a basic version of Google Analytics using Trench and Grafana.Trench has two methods of deployment:Follow our self-hosting instructions below and in our quickstart guide to begin using Trench Self-Hosted.If yo"
  },
  {
    "title": "Evaluate Markdown code blocks within Vim (github.com/gpanders)",
    "points": 14,
    "submitter": "pentestercrab",
    "submit_time": "2024-10-26T12:08:29 1729944509",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=41954254",
    "comments": [
      "looks like a nice tool for evaluating code blocks directly in Vim's Markdown buffers, and the ability to redirect outputs into named blocks is a cool way to keep everything contained in the editor. If you're looking for something similar but more versatile across different environments, check out *Cog*. It embeds executable code in any text file and inserts the output back into the document, which is great for automating documentation outside of Vim, especially in CI pipelines.\n \nreply",
      "I like the feature that allows you to put a block's output into another block. I've been toying with the idea of self-modifying/self-introspecting documents for some time, and I think they're a good concept for ad-hoc files in the space between prose, scripts, and databases.\n \nreply",
      "This is definitely helpful! Thank you for building it : )\n \nreply",
      "Glad to see Vim finally catching up to decades-old Emacs org-mode technology lol\n \nreply"
    ],
    "link": "https://github.com/gpanders/vim-medieval",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Evaluate Markdown code blocks within Vim\n      Evaluate Markdown code blocks within Vim.Medieval allows you to evaluate code blocks in Markdown buffers of the\nfollowing form:By placing your cursor anywhere in the code block above and running\n:EvalBlock, Medieval will print the result of evaluating the block (in this\ncase, it will echo \"Hello world!\")You can send the output of evaluation into another code block, allowing\nyou to do a primitive style of literate programming. You can accomplish this\nby adding a \"target\" parameter to your code block and creating a second code\nblock with a \"name\" parameter. The output of the evaluation of your code block\nwill be redirected to the targeted block. For example:If you run :EvalBlock in the first code block, the second block will becomeMedieval can do a lot more. Read :h medieval for the full "
  },
  {
    "title": "Excel Turing Machine (2013) (felienne.com)",
    "points": 6,
    "submitter": "pabs3",
    "submit_time": "2024-10-24T23:50:11 1729813811",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://www.felienne.com/archives/2974",
    "first_paragraph": ""
  },
  {
    "title": "Using Rust in non-Rust servers to improve performance (github.com/pretzelhammer)",
    "points": 344,
    "submitter": "amatheus",
    "submit_time": "2024-10-25T01:19:26 1729819166",
    "num_comments": 192,
    "comments_url": "https://news.ycombinator.com/item?id=41941451",
    "comments": [
      "Haha, I was flabbergasted to see the results of the subprocess approach, incredible. I'm guessing the memory usage being lower for that approach (versus later ones) is because a lot of the heavy lifting is being done in the subprocess which then gets entirely freed once the request is over. Neat.I have a couple of things I'm wondering about though:- Node.js is pretty good at IO-bound workloads, but I wonder if this holds up as well when comparing e.g. Go or PHP. I have run into embarrassing situations where my RiiR adventure ended with less performance against even PHP, which makes some sense: PHP has tons of relatively fast C modules for doing some heavy lifting like image processing, so it's not quite so clear-cut.- The \"caveman\" approach is a nice one just to show off that it still works, but it obviously has a lot of overhead just because of all of the forking and whatnot. You can do a lot better by not spawning a new process each time. Even a rudimentary approach like having requests and responses stream synchronously and spawning N workers would probably work pretty well. For computationally expensive stuff, this might be a worthwhile approach because it is so relatively simple compared to approaches that reach for native code binding.\n \nreply",
      "The native code binding was impressively simple!7 lines of rust, 1 small JS change. It looks like napi-rs supports Buffer so that JS change could be easily eliminated too.\n \nreply",
      "I've used napi-rs a bit ago, it's pretty awesome. That said though, the main issue is that the Rust bindings story is not always that nice. It really depends. Internally, Node modules have quite a lot of complexity, and when you try to do more interesting things you could wind up facing some of the complexity of how it is implemented.\n \nreply",
      "Caveman approach has several nice features - I think I'd be tempted even if it didn't have better performance.\n \nreply",
      "Pretty sure Tier 4 should be faster than that. I wonder if the CPU was fully utilized on this benchmark. I did some performance work with Axum a while back and was bitten by Nagle algorithm. Setting TCP_NODELAY pushed the benchmark from 90,000 req/s to 700,000 req/s in a VM on my laptop.\n \nreply",
      "Encore.ts is doing something similar for TypeScript backend frameworks, by moving most of the request/response lifecycle into Async Rust: https://encore.dev/blog/event-loopsDisclaimer: I'm one of the maintainers\n \nreply",
      "What's your response to this? https://github.com/encoredev/ts-benchmarks/issues/2\n \nreply",
      "I've published proper instructions for benchmarking Encore.ts now: https://github.com/encoredev/ts-benchmarks/blob/main/README..... Thanks!\n \nreply",
      "not gp bot first time seeing this encore ts.i've been a user of uwebsockets.js, uwebsockets is used underneath by bun.i hope encore does benchmark compared to encore, uwsjs, bun, and fastify.express is just so damn slow.https://github.com/uNetworking/uWebSockets.js\n \nreply",
      "We've published benchmarks against most of these already, see https://github.com/encoredev/ts-benchmarks\n \nreply"
    ],
    "link": "https://github.com/pretzelhammer/rust-blog/blob/master/posts/rust-in-non-rust-servers.md",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          22 October 2024 \u00b7 #rust \u00b7 #wasm \u00b7 #ffi \u00b7 #performanceTable of contentsIn this article I'll discuss different strategies for incrementally adding Rust into a server written in another language, such as JavaScript, Python, Java, Go, PHP, Ruby, etc. The main reason why you'd want to do this is because you've profiled your server, identified a hot function which is not meeting your performance requirements because it's bottlenecked by the CPU, and the usual techniques of memoizing the function or improving its algorithm wouldn't be feasible or effective in this situation for whatever reason. You have come to the conclusion that it would be worth investigating swapping out the function implementation for something written in a more CPU-efficient language, like Rust. Great, then this is definitely the article for you.The strategies are ordered in "
  },
  {
    "title": "Care Doesn't Scale (stevenscrawls.com)",
    "points": 305,
    "submitter": "surprisetalk",
    "submit_time": "2024-10-25T15:00:15 1729868415",
    "num_comments": 277,
    "comments_url": "https://news.ycombinator.com/item?id=41945918",
    "comments": [
      "If we're going to talk about how to \"scale care\" and how not to, then Buurtzorg has to be mentioned[0][1]. It's a Dutch home-care company that was started by nurses who basically got frustrated that managers got in the way of them doing their job. It operates by having a flat organization working with small teams of highly trained nurses, and trusting them to make the right decisions. The result is a low-cost provider of high-quality health-care.So when the author says care \"doesn't scale\", they obviously mean \"you need a one-to-one ratio of caretakers\", which I fully agree with. But what they're also accidentally doing in the process is explaining why creating bigger teams with bigger hierarchies and structures does not appear to increase the efficiency of care.Some projects do need big teams with hierarchies - even in healthcare. Effectively responding to a pandemic comes to mind. I suspect it's when the core problem to tackle most naturally breaks down like a tree - a hierarchy then mirrors the way the problem breaks down. For some projects, like general homecare, the efficiency sweet spot is a flat structure of autonomous individual teams, because it doesn't scale beyond those teams anyway.And just like the author concludes, I find that there's something comforting about that.[0] https://en.wikipedia.org/wiki/Buurtzorg_Nederland[1] https://www.youtube.com/watch?v=SSoWtXvqsgg\n \nreply",
      "To be fair, Buurtzorg doesn\u2019t scale either, as they\u2019re perpetually short staffed.\n \nreply",
      "The other companies are also shortstaffed, all healthcare is at the moment, and the bureaucracy layers just keeps humming along ... Buurtzorg is however cheaper, and since you cannot scale the actual care that counts.\n \nreply",
      "Thanks for elaborating further what we mean by \"scaling\".Couldn't it be said that when organization acquire ranks, it is to solve coordination problems that arise with scale but that in this case, there isn't much that is solved by more organization ?\n \nreply",
      "There's also a different kind of coordination problem.The incentives of an organization - or at least of a corporation - are to make money and to continue to exist and to enrich and empower the people who control it. But employees' incentives are usually pretty different. Nurses usually get into nursing because they, at least to some extent, want to help people. Engineers get into engineering because they, at least to some extent, want to build something really good. Teachers get into teaching because they want kids to learn. And so on.If you're the principal of a school, and your goal is for a teacher to teach, you don't have a coordination problem. Most teachers want to do that. But if your goal is for teachers to maximize standardized test scores, or to minimize the number of frustrated parent calls, etc, you do have a coordination problem, because your goals are misaligned with your employees'.If you're the CEO of a tech company, and your goal is for your engineers to build good software, you don't have a coordination problem. Your engineers want to do that. But if your goal is to maximize conversions, or to ship faster, or to raise money, etc., you do have a coordination problem.If you run a hospital, and your goal is for your nurses to care for patients, you don't have a coordination problem. But if your goal is to maximize profits, then you do.It's usually these kinds of coordination problems that managers are, effectively, in charge of enforcing. Their job is not to help individual employees achieve individual employees' collective goals, it's to make employees feel (sometimes truthfully) like their goals are aligned with the organizational goals, or to use the threat of loss of income or work to force them into line.\n \nreply",
      "That sounds about right. If you watched the video then you also will notice that the further up the management chain we go, the more abstract the goals become compared to the most concrete ones that the nurses are dealing with. One could say that if most care work starts and ends with those concrete individualized issues, the cost of handling (or worse, prioritizing) abstract goals is far greater than the benefits that they add.Compare that to the pandemic response example I gave: that is the kind of challenge where there are concrete problems at individual, city-wide, national and international scale to tackle, and they're all interconnected too. So plenty of those coordination problems you mentioned.\n \nreply",
      "Your reply seems focused on size, but this line caught my attention:>trusting them to make the right decisions.I'm wondering if trust isn't the real issue. For example, wouldn't a large high-trust organization be able to provide good care? Or is there something intrinsic to scale (e.g. diffusion of responsibility) that makes \"high-trust\" and \"large organization\" incompatible?\n \nreply",
      "Paperwork. I swear, it's paperwork.My mom is a (retired) preschool teacher. By the end of her career, she was working for a school affiliated with a large chain, and maybe 1/3 of her time was spent on filling out all the paperwork required by management. That was time she absolutely was not spending with the kids.My dad is a (retired) doctor. Similar story there. His hospital ultimately ended up associated with a regional health care network, and the paperwork load ultimately got so bad that they ended up having to hire additional staff dedicated to help the actual health care providers fill out all the paperwork so that they could spend more time actually providing health care.I switched primary care providers over this a few years back. I had a great doctor, but her practice got bought up by one organization, which then got bought up by another, and over time working with her office became a huge bureaucratic quagmire. I switched to a different clinic that's still local (although also chain with multiple locations), and everything's easier again.The same thing happens at my own job, software. The bigger a company I'm at, the more of my job consists of filling out paperwork about the work I'm doing, rather than doing the actual work.tl;dr: It's communication that doesn't scale.\n \nreply",
      ">The same thing happens at my own job, software. The bigger a company I'm at, the more of my job consists of filling out paperwork about the work I'm doing, rather than doing the actual work.There's some irony here considering software has been promising for decades to help businesses scale information sharing.\n \nreply",
      "Oh, it has. The scale at which we share information has never been greater.Concrete example:15, 20 years ago when we tracked user stories, the status of the sprint, etc., with sticky notes on a wall. We didn't have to record a lot of information on them because they only needed to track status at a high level. Details were communicated through conversations. That did mean that a lot of that information was tribal knowledge, but that was actually fine, because it was of ephemeral value, anyway. Once the work was done, we'd throw the sticky notes in the trash can and forget the tribal knowledge. Reporting out happened at a much higher level. We'd report status of projects in broad strokes by saying what big-picture features were done and what ones were in progress. We'd fill operations in on the changes by telling them how the behavior of the system was changing, and then let them ask questions.Nowadays, we put it all in Jira. Jira tickets are extremely detailed. Jira tickets live forever. Jira tickets have workflow rules and templates and policies that must be complied with. Jira rules make you think about how to express what you're doing in this cookie cutter template, even when the template doesn't fit what you're actually doing. Jira boards generate reports and dashboards that tell outside stakeholders what's happening in terms of tickets and force them to ask for help understanding what it means, almost like you're giving them a list of parameters for B\u00e9zier curves when what they really wanted was a picture. Jira tickets have cross-referencing features, which creates a need to do all the manual data entry to cross-reference things. Jira tickets can be referenced from commits and pull requests, which means that understanding what changed now means clicking through all these piles of forever-information and reading all that extra documentation just to understand what \"resolves ISSUE-25374\" means when a simple \"Fix divide-by-zero when shopping cart is empty\" in the commit log would have done nicely. etc.We communicate so much more these days. Because we can, because we have all this communication technology to facilitate all that extra communication. What we forgot is that, while computers can process information at an ever faster pace, the information processing hardware inside our skulls has remained largely unchanged.\n \nreply"
    ],
    "link": "https://stevenscrawls.com/care-doesnt-scale/",
    "first_paragraph": ""
  },
  {
    "title": "New iMac with M4 (apple.com)",
    "points": 399,
    "submitter": "tosh",
    "submit_time": "2024-10-28T15:03:01 1730127781",
    "num_comments": 872,
    "comments_url": "https://news.ycombinator.com/item?id=41971726",
    "comments": [
      "Reading this on 2017 iMac 27\" - is the first 5k iMac that couldn't be used as a monitor after the computer inside is irrelevant. \nI hope EU will push for some law that requires all AIO computers to work in monitor-only mode if internal hardware is no longer good enough or no longer supported by software updates.\nI love the 5k screen on this iMac but the CPU is too old for photo or video editing as software got so much slower over the years. \nI could have used this screen for many more years, but now it will hit landfill... Apple is only \"green\" in their presentations - in reality they care more about inifite sales only.\n \nreply",
      "I solved this with a ~$200 driver board from AliExpress. I love the result because it's thinner than any other monitor that I own and I can swap between my MacBook Pro and my desktop machine (running either Windows or Linux).Obviously this requires a little bit of tinkering and the end result isn't nicely packaged like a factory Apple product would be, but it only took about half an hour to put together and I haven't had any issues with the driver board yet. And it was way cheaper than a \"Retina\" display from Apple or LG.\n \nreply",
      "I solved it by not updating the OS or apps. I stopped updating at Mountain Lion. My older iMac is my scanning and photo editing Mac. A flatbed scanner is permanently attached and Photos from Mountain Lion is still useable. In fact the retouch tool is actually faster (Photos experienced a serious performance regression for the retouch tool soon after Mountain Lion).\n \nreply",
      "Apple should hire a couple hackers to create \u201cend-of-life\u201d firmware for their obsolete devices; give them new life as super-specialized devices. Part green program, part customer delight, even some wacky art projects.Maybe if an iMac doesn\u2019t have a video input\u2014have it boot as an AirPlay-only monitor.I\u2019ve got 2 old EOL appleTV boxes sitting in a drawer\u2014again, one last firmware update to make them dedicated AirPlay receivers.Take my 2011 MacBook Air and make it a dedicated Notes machine/word processor\u2014all it does it run notes and sync with iCloud.Obsolete iPad picture frame is an obvious one.They can work on the \u201cReuse\u201d side of the 3R\u2019s of waste reduction (with reduce and recycle, right?)PS, I\u2019m available, 9 years embedded SW experience ;)\n \nreply",
      "> \"Apple should hire a couple hackers to create \u201cend-of-life\u201d firmware for their obsolete devices; give them new life as super-specialized devices.\"They've actually done this in a few cases! There's a whole generation of obsolete Airport Express Wifi base stations that got a final firmware update which gave them AirPlay 2 functionality. Now they're still quite sought after as a device to make old stereos/speakers wirelessly compatible with the latest Apple devices. Especially if you have stereo eqipment that can take optical (TOSLINK) audio input.\n \nreply",
      "> They\u2019ve actually done this in a few cases!Besides the AirPort Express, were there other devices that were issued EOL updates?\n \nreply",
      "Handy, I hope I have mine still!\n \nreply",
      "That would be amazing.This reminds me of the offline email client HP built on EFI.Cathode Ray Dude - https://youtu.be/ssob-7sGVWs?si=qjyf5lm_9PrzPPeE\n \nreply",
      "Oh god, I have one of those laptops on my shelf. Such a wild feature.\n \nreply",
      "> Apple is only \"green\" in their presentations - in reality they care more about inifite sales only.needs citation.  I say this as someone who worked several years in engineering at Apple, and they were extremely environmentally conscientious years before it was a thing.\n \nreply"
    ],
    "link": "https://www.apple.com/newsroom/2024/10/apple-introduces-new-imac-supercharged-by-m4-and-apple-intelligence/",
    "first_paragraph": "Text of this articleOctober 28, 2024PRESS RELEASEApple unveils the new iMac with M4, supercharged by Apple\u00a0Intelligence and available in fresh colorsThe world\u2019s best all-in-one desktop features even more performance, a nano-texture display option, a 12MP Center Stage camera, and Thunderbolt 4 connectivity \u2014 all in a strikingly thin designCUPERTINO, CALIFORNIA Apple today announced the new iMac, featuring the powerful M4 chip and Apple Intelligence, in its stunning, ultra-thin design. With M4, iMac is up to 1.7x faster for daily productivity, and up to 2.1x faster for demanding workflows like photo editing and gaming, compared to iMac with M1.1 With the Neural Engine in M4, iMac is the world\u2019s best all-in-one for AI and is built for Apple Intelligence, the personal intelligence system that transforms how users work, communicate, and express themselves, while protecting their privacy. The new iMac is available in an array of beautiful new colors, and the 24-inch 4.5K Retina display offer"
  },
  {
    "title": "Don't implement unification by recursion (philipzucker.com)",
    "points": 52,
    "submitter": "mathgenius",
    "submit_time": "2024-10-28T17:53:21 1730138001",
    "num_comments": 32,
    "comments_url": "https://news.ycombinator.com/item?id=41974011",
    "comments": [
      "I find the prevailing use of \u201crecursion\u201d, i.e. \u03b2-reduction all the way to ground terms, to be an impoverished sense of the term.By all means, you should be familiar with the evaluation semantics of your runtime environment. If you don\u2019t know the search depth of your input or can\u2019t otherwise constrain stack height beforehand beware the specter of symbolic recursion, but recursion is so much more.Functional reactive programs do not suffer from stack-overflow on recursion (implementation details notwithstanding). By Church-Turing every sombolic-recursive function can be translated to a looped iteration over some memoization of intermeduate results. The stack is just a special case of such memoization. Popular functional programming patterns provide other bottled up memoization strategies: Fold/Reduce, map/zip/join, either/amb/cond the list goes on (heh). Your iterating loop is still traversing the solution space in a recursive manner, provided you dot your \u2018i\u2019s and carry your remainders correctly.Heck, any feedback circuit is essentially recursive and I have never seen an IIR-filter blow the stack (by itself, mind you).\n \nreply",
      "> By Church-Turing every sombolic-recursive function can be translated to a looped iteration over some memoization of intermeduate results. The stack is just a special case of such memoization.Ah, so functional reactive programs don\u2019t suffer from stack overflow on recursion, they just suffer from memoisation overflow? ;)Electronic circuits with feedback could be thought of as tail end recursion. :)\n \nreply",
      "> It is somewhat surprising that unification is cleaner and easier to implement in an loopy imperative mutational style than in a recursive functional pure style.I came to a similar conclusion, my implementation uses recursion but also leans on shared mutable variables, which is something I usually avoid especially for more \"mathy\" code. https://jasonhpriestley.com/short-simple-unification\n \nreply",
      "I think your choice is more readable and maintainable, but did you consider call-with-current-continuation?It is easy to dismiss, but this may be a situation to learn where it is actually useful.\n \nreply",
      "the author used the phrase \"some wacky continuation thing\" to describe that alternative. I agree, but I also have used recursion here, and struggle to find why given the text the author finds it so problematic. the simple mapping binds the evaluation order at compile time - maybe that's the real problem they are identifying.\n \nreply",
      "> Unification has too much spooky action at a distance, a threaded stateIsn\u2019t this why we have the State monad, or even just fold-like functions? There are multiple ways to tame this problem without resorting to mutable state and side-effects. We know how that deal with the devil usually turns out.(And I have no idea what \"spooky action at a distance\" means in this context. If anything, functional programming eliminates such shenanigans by expressing behavior clearly in the type system.)\n \nreply",
      "Spooky action at a distance I presume would refer to the sudden reification of a type variable that is established as an existential based on its use in a non-obvious part of the code base. For example, a common one is writing a monadic expression using `do` notation with an existential monad (but not an explicitly typed one) and then one of your monadic actions happens to have a particular type.  Suddenly, you'll get a slough of error messages regarding type mismatches, perhaps missing constraints, etc.\n \nreply",
      "When you study the old AI programming you eventually realize that non-determinism rules and recursion drools.  Recursion is great for certain things that would be hard otherwise (drawing fractals) but it shouldn\u2019t be the first tool you reach for.  It\u2019s known to be dangerous in embedded systems because it can blow out the stack.  Turns very simple O(N) problems into O(N^2) but unfortunately a generation of computer science pedagogues taught people that recursion > iteration because BASIC was the teaching language of the 1970s and first half of the 1980s and they couldn\u2019t get over that Lisp, Forth, UCSD Pascal and other contenders didn\u2019t make it to the finish.\n \nreply",
      "Ok, I'll bite.  - Recursion allows you to show correctness both in programming and mathematics. \n  - plenty of compilers will reuse the current stack frame in a tail call.\n \nreply",
      "Tail call recursion doesn't turn the O(N^2) version of Fibonacci into O(N) but at least memoization turns it to O(N log N) or something.  It's true that recursive algorithms can be easy to analyze.  If you really knew your math you could do Fibonacci as O(1).\n \nreply"
    ],
    "link": "https://www.philipzucker.com/unify/",
    "first_paragraph": "\nOct 28, 2024\n      Unification is formal methods speak for solving equations.The most common form of unification discussed is first order syntactic unification. When it succeeds, it solves a pile of equations no matter what the actual functions represent.[exists ?X ?Y] foo(bar(?X)) = foo(?Y) has a solution [forall ?Y ?X] ?Y = bar(?X). Or cos(sin(?X)) = cos(?Y) has a solution ?Y = sin(?X). From the perspective of first order unification, it doesn\u2019t matter what cos and sin mean.Actually implementing unification, similar to most other algorithms that manipulate variables, is kind of the bane of my existence. I avoid it at extreme cost.It is somewhat surprising that unification is cleaner and easier to implement in an loopy imperative mutational style than in a recursive functional pure style. Typically theorem proving / mathematical algorithms are much cleaner in the second style in my subjective opinion. Unification has too much spooky action at a distance, a threaded state, and can use"
  }
]