[
  {
    "title": "Show HN: Llama 3.2 Interpretability with Sparse Autoencoders (github.com/paulpauls)",
    "points": 221,
    "submitter": "PaulPauls",
    "submit_time": "2024-11-21T20:37:56 1732221476",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=42208383",
    "comments": [
      "For anyone who hasn\u2019t seen this before, mechanistic interpretability solves a very common problem with LLMs: when you ask a model to explain itself, you\u2019re playing a game of rhetoric where the model tries to \u201cconvince\u201d you of a reason for what it did by generating a plausible-sounding answer based on patterns in its training data. But unlike most trends of benchmark numbers getting better as models improve, more powerful models often score worse on tests designed to self-detect \u201cuntruthfulness\u201d because they have stronger rhetoric, and are therefore more compelling at justifying lies after the fact. The objective is coherence, not truth.Rhetoric isn\u2019t reasoning. True explainability, like what overfitted Sparse Autoencoders claim they offer, basically results in the causal sequence of \u201cthoughts\u201d the model went through as it produces an answer. It\u2019s the same way you may have a bunch of ephemeral thoughts in different directions while you think about anything.\n \nreply",
      "I want to point out here that people do the same: a lot of the time we don't know why we thought or did something, but we'll confabulate plausible-sounding rhetoric after the fact.\n \nreply",
      "How does the causality part work? Can it spit out a graphical model?\n \nreply",
      "I stopped at: \"causal sequence of \u201cthoughts\u201d \"\n \nreply",
      "Incredible, well-documented work -- this is an amazing effort!Two things that caught my eye were (i) your loss curves and (ii) the assessment of dead latents. Our team also studied SAEs -- trained to reconstruct dense embeddings of paper abstracts rather than individual tokens [1]. We observed a power-law scaling of the lower bound of loss curves, even when we varied the sparsity level and the dimensionality of the SAE latent space. We also were able to totally mitigate dead latents with an auxiliary loss, and we saw smooth sinusoidal patterns throughout training iterations. Not sure if these were due to the specific application we performed (over paper abstracts embeddings) or if they represent more general phenomena.[1] https://arxiv.org/abs/2408.00657\n \nreply",
      "I'm very happy you appreciate it - particularly the documentation. Writing the documentation was much harder for me than writing the code so I'm happy it is appreciated. I furthermore downloaded your paper and will read through it tomorrow morning - thank you for sharing it!\n \nreply",
      "Hey - Thanks for sharing!Will take a closer look later but if you are hanging around now, it might be worth asking this now. I read this blog post recently:https://adamkarvonen.github.io/machine_learning/2024/06/11/s...And the author talks about challenges with evaluating SAEs. I wonder how you tackled that and where to look inside your repo for understanding the your approach around that if possible.Thanks again!\n \nreply",
      "So evaluating SAEs - determining which SAE is better at creating the most unique features while being as sparse as possible at the same time - is a very complex topic that is very much at the heart of the current research into LLM interpretability through SAEs.Assuming you already solved the problem of finding multiple perfect SAE architectures and you trained them to perfection (very much an interesting ML engineering problem that this SAE project attempts to solve) then deciding on which SAE is better comes down to which SAE performs better on the metrics of your automated interpretability methodology. Particularly OpenAI's methodology emphasizes this automated interpretability at scale utilizing a lot of technical metrics upon which the SAEs can be scored _and thereby evaluated_.Since determining the best metrics and methodology is such an open research question that I could've experimented on for a few additional months, have I instead opted for a simple approach in this first release. I am talking about my and OpenAI's methodology and the differences between both in chapter 4. Interpretability Analysis [1] in my Implementation Details & Results section. I can also recommend reading the OpenAI paper directly or visiting Anthropics transformer-circuits.pub website that often publishes smaller blog posts on exactly this topic.[1] https://github.com/PaulPauls/llama3_interpretability_sae#4-i...\n[2] https://transformer-circuits.pub/\n \nreply",
      "This is awesome! I really appreciate the time you took to document everything!\n \nreply",
      "Thank you for saying that! I have a much, much harder time documenting everything and writing out each decision in continuous text than actually writing the code. So it took a look time for me to write all of this down - so I'm happy you appreciate it! =)\n \nreply"
    ],
    "link": "https://github.com/PaulPauls/llama3_interpretability_sae",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A complete end-to-end pipeline for LLM interpretability with sparse autoencoders (SAEs) using Llama 3.2, written in pure PyTorch and fully reproducible.\n      \n\n\n\n\n\n\n\nSource: OpenAI - Extracting Concepts from GPT-4\nModern LLMs encode concepts by superimposing multiple features into the same neurons and then interpeting them by taking into account the linear superposition of all neurons in a layer. This concept of giving each neuron multiple interpretable meanings they activate depending on the context of other neuron activations is called superposition. Sparse Autoencoders (SAEs) are models that are inserted into a trained LLM for the purpose of projecting the activations into a very large but very sparsely activated latent space. By doing so they attempt to untangle these superimposed representations into separate, clearly interpre"
  },
  {
    "title": "Handling cookies is a minefield (grayduck.mn)",
    "points": 276,
    "submitter": "todsacerdoti",
    "submit_time": "2024-11-21T17:28:11 1732210091",
    "num_comments": 127,
    "comments_url": "https://news.ycombinator.com/item?id=42206556",
    "comments": [
      "Cookies are filled with weird gotchas and uncomfortable behavior that works 99.95% of the time. My favorite cookie minefield is cookie shadowing - if you set cookies with the same name but different key properties (domain, path, etc.) you can get multiple near-identical cookies set at once - with no ability for the backend or JS to tell which is which.Try going to https://example.com/somepath and entering the following into the browser console:  document.cookie = \"foo=a\"; \n  document.cookie = \"foo=b; domain=.example.com\";\n  document.cookie = \"foo=c; path=/somepath\";\n  document.cookie\n\nI get  'foo=c; foo=a; foo=b'\n \nreply",
      "At work, whoever designed our setup put the staging and dev environments on the same domain and the entire massive conpany has adopted this pattern.What a colossal mistake.\n \nreply",
      "I wonder if this explains a lot of the unusual behaviour that happens when you use multiple accounts on a website in the same browser.\n \nreply",
      "Using the path field is a code smell\n \nreply",
      "Can you elaborate? I'm having a tough time finding references to that. (Disclaimer: I'm not an avid JS developer)\n \nreply",
      "For modern applications you\u2019ll have better ways to maintain state. As shown they cause trouble in practice. Cookies should be used sparingly.\n \nreply",
      "Yeah, isn\u2019t that how you represent a list of values? (Or maybe better to say a collection, not sure if ordering is preserved)\n \nreply",
      "But if the attributes are exactly the same then the cookies replace each other. So this isn't a general mechanism for representing a list.Not to mention that the way to delete a cookie is sending a replacement cookie that expires in the past. How are you supposed to delete the right cookie here?\n \nreply",
      "And the worst is that you need to exactly match the domain and path semantics in order to delete the cookie! Domain is easy enough because there are only two options - available to subdomain and not available to subdomain. But if you have a cookie with the `/path` set and you don't know what value was used, you literally cannot delete that cookie from JS or the backend. You need to either pop open devtools and look at the path or ask the end user to clear all cookies.\n \nreply",
      "Is there a way for JS to see the attributes for each value?\nBecause presumably setting an expire time in the past and iterating over every used set of attributes would get the job done to delete the cookie.\nIterating over all possible (plausible?) attributes may also work, but knowing the specific attributes set would narrow that list of erasing writes to issue.\n \nreply"
    ],
    "link": "https://grayduck.mn/2024/11/21/handling-cookies-is-a-minefield/",
    "first_paragraph": "HTTP cookies are a small piece of data set by either Javascript or HTTP servers, and which are essential for maintaining state on the otherwise stateless system known as the World Wide Web. Once set, web browsers will continue to forward them along for every properly scoped HTTP request until they expire.I had been more than content to ignore the vagaries of how cookies function until the end of time, except that one day I stumbled across this innocuous piece of Javascript:This code functioned completely fine, as far as browsers were concerned. It took a piece of boring (but tasty) JSON and saved the value into a session cookie. While this was slightly unusual \u2014 most code will serialize JSON to base64 prior to setting them as a cookie, there was nothing here that browsers had any issue with. They happily allowed the cookie to be set and sent along to the backend web server in the HTTP header:Which was all well and good, until it got passed along to some code that used the Go standard l"
  },
  {
    "title": "What's Next for WebGPU (chrome.com)",
    "points": 40,
    "submitter": "mariuz",
    "submit_time": "2024-11-21T22:18:57 1732227537",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=42209272",
    "comments": [
      "Linux support please!\n \nreply",
      "I could use more 2-d line support for CAD applications as well as font drawing.\n \nreply",
      "Same. I do a ton of 2D map stuff and it\u2019s always quite uncomfortable to do in shaders or very slow in a Canvas context.The last time I tried with pixi.js the problem was smoothly zooming polygons with a constant width border thicker than hairline. Doing that was basically just generating new textures on every frame.\n \nreply",
      "Being spun off to a different company.\n \nreply",
      "Whom is WebGPU for, besides Unity?\n \nreply",
      "Responding to your pre-edited comment.> whom is WebGPU for? [\u2026] it\u2019s a huge rigamarole.Where is this comment coming from? WebGPU enables compute shaders, and there are applications in anything that uses a GPU, from ML to physics to audio to \u2026 you name it. What is making you think game engines would be the only users? I bet a lot of companies are looking forward to being able to use compute shaders in JS apps and web pages.> Godot has had zero development for WebGPU support.Why would Godot be an indicator? I love Godot and their efforts, but it\u2019s less than 1% of game engine market share, and a much smaller less well funded team. Of course they\u2019re not on the bleeding edge. Unity is closer to 30% market share and is actively engaging with WebGPU, so it seems like you\u2019re downplaying and contradicting a strong indicator.\n \nreply",
      "Our browser based game engine Construct (https://www.construct.net) supports rendering with both WebGL and WebGPU.\n \nreply",
      "When I visit a Construct 3 Ultra Pixel Survive on Mobile Safari on the latest production iOS with either WebGPU enabled and disabled, I only see black:https://www.construct.net/en/free-online-games/ultra-pixel-s...Which Construct 3 game should I try on Mobile Safari?\n \nreply",
      "Honest question:  Can someone explain to me why people are excited about WebGPU and WASM and similar technologies?To me, one of the greatest things about the web is that the DOM is malleable in that you can right click -> view source -> change things.  This is dead in an era where the server just sends you a compiled WASM dll.It seems to me that the inevitable result of things like WASM and WebGPU will be \"rich media web 4.0 applications\" that are just DRM, crypto miners, and spyware compiled so that they're more difficult to circumvent, and delivered via the browser.  An excuse to write web apps with poor performance because \"well the user just needs a stronger GPU\".  It seems like an express train back to the bad old days of every website being written in flash.I honestly cannot see the upsides of these technologies.  Is it gaming?  Why would I want to play a 3D game in my fucking browser of all places?  That's a strict downgrade in almost every way I can think of. Why would anyone want that?  Is it \"AI\"?  Why would I want to run an LLM in the browser, I could just run it natively for better performance?All I can see and have seen over the last several years is a steady parade of new technologies that will make the internet (and in some cases the lives of every day people) objectively worse while enriching a handful of big tech douchebags.Why are we going down this path?  Who is asking for this stuff?  Why the fuck would I want to expose my GPU to a website?\n \nreply",
      "Why do you think wasm is harder to circumvent? The only way to instantiate a wasm module in the browser is through (drum roll) javascript. Install noscript if you're worried. The days of view source -> edit are basically over these days anyway due to every site's 1MB+ minified JS blobs.> Why would I want to run an LLM in the browser, I could just run it natively for better performance?Why would you try out a new app in a sandboxed browser, when instead you could give it complete access to your entire computer?\n \nreply"
    ],
    "link": "https://developer.chrome.com/blog/next-for-webgpu",
    "first_paragraph": "\n\n\n\n\n \n            Fran\u00e7ois Beaufort\n          \n\n\n\nGitHub\n\n\n\n\n\n\n\n\n \n            Corentin Wallez\n          \n\n\n\nX\n\n\n\n\nGitHub\n\n\n\n\nMastodon\n\n\n\n\n\n\n\n  Published: November 21, 2024\n\n\n  Published: November 21, 2024\nThe WebGPU specification is always evolving, with major companies like Google, Mozilla, Apple, Intel, and Microsoft meeting weekly to discuss its development. The most recent GPU for the Web working group meeting offered a glimpse into the main objectives and features planned for the next iteration of WebGPU. This blog post explores some of the key takeaways from the meeting.A major focus of the meeting was to discuss the progress of Milestone 0 and to finalize the issues that need to be addressed before it can reach candidate recommendation status for the W3C. This is the next step in the standardization process, and it comes with stronger guarantees of stability and intellectual property protection.There was general agreement among the meeting participants that they are no blocker"
  },
  {
    "title": "Broadcastarr: Stream web content through your Jellyfin instance (github.com/billos)",
    "points": 12,
    "submitter": "thunderbong",
    "submit_time": "2024-11-22T00:13:00 1732234380",
    "num_comments": 13,
    "comments_url": "https://news.ycombinator.com/item?id=42210022",
    "comments": [
      "So I\u2019m familiar with what their other apps do. I read the readme many times. I still wonder what \u201cweb content\u201c means. Apparently it\u2019s media. Maybe it\u2019s a headless browser that can capture inputs and stream them?Re reading the readme and trying to figure out what each discrete part does made me realize it feels like if ChatGPT had designed a generic, non descript product, and made a readme. It\u2019s got a file that tells me there are things in it. The code does stuff. This is definitely what a product looks like to a human.Philip K Dick described that to see information is to be consumed by it. This feels exactly that way. Presented with something that has just enough meaning to feel \u201cfigure out able\u201c.\n \nreply",
      "A common issue in this space is that things are either actually illegal, or they break terms of service. Many of these things are at constant risk of being DMCA\u2019d.My guess is this is a deliberate attempt to not get taken down from GitHub after Netflix find out people are streaming content through different systems.\n \nreply",
      "i think the main purpose of this is to pull in illegal streams of copyright content, so the readme probably has to be intentionally obtuse to avoid summoning law enforcement.\n \nreply",
      "I don't understand what this does.  It says it \"broadcasts media content retrieved from web pages\".What does broadcast mean?  Like what if the media is a PDF or a PNG?  Is it a static file proxy server?\n \nreply",
      "I hope your sitting down as this might come as a bit of a shock but lots of live content is streamed via \"web pages\", like sports for example.\n \nreply",
      "I'm aware of that.  This would make a little more sense if it was specifically about video, or maybe audio.  Is... that what it is?\n \nreply",
      "What's the use case?\n \nreply",
      "How long have the *arr family of apps been developed? It amazes me that nobody has tried to pull a Nintendo against them yet given their obvious use cases.\n \nreply",
      "\u201cPulling a nintendo\u201d worked when there was a small, identifiable group of people who ran a patreon. Yuzu forks have not gone away in the slightest.\n \nreply",
      "Ryujinx got taken out too and they were not behaving like yuzu. Nintendo has a plan to wipe out emulation and it looks like it is working. :(\n \nreply"
    ],
    "link": "https://github.com/Billos/Broadcastarr",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Stream web content through your Jellyfin instance\n      Broadcastarr is a service that allows you to broadcast media content retrieved from web pages.The different actions are split into tasks that are handled by the AgendaTS service.\nThe tasks are:Handles interactions and commands via Discord.\nIf no authorization was set, the bot will be available to everyone.\nAvailable commands:A releaser is a service that can read the broadcasts.Implemented releasers:A publisher is a service that can publish the categories, groups and broadcasts to different platforms.Implemented publishers:The service is designed to be scalable and can be deployed on multiple instances.The docker compose includes a Wireguard client that allows the workers to scrape and grab the broadcasts from the web pages through a VPN.\nThe used configuration file is ./wg0.con"
  },
  {
    "title": "The FORTH code for Chipwits is released in the game's 40th anniversary (chipwits.com)",
    "points": 124,
    "submitter": "JoeDaDude",
    "submit_time": "2024-11-21T18:44:11 1732214651",
    "num_comments": 29,
    "comments_url": "https://news.ycombinator.com/item?id=42207304",
    "comments": [
      "Here's a post I wrote about why I used FORTH to code ChipWits in 84:https://chipwits.com/2023/04/08/forth-programming-language-g...\n \nreply",
      "Forth has been something I've wanted to learn for years now. It seems weird to me that for most stuff in old computers, you have the option of \"assembly\" if you want your program to be fast, and \"BASIC\" if you want your program to be slow, but Forth lingers along as the \"medium speed\" language, despite at least looking pretty high-level.\n \nreply",
      "Forth was the standard language for hardware development and drivers (along wiht C) for a very long time (still is used all over). Stack based.https://www.forth.com/starting-forth/\n \nreply",
      "The reason I used FORTH to code ChipWits in 84  was twofold. First, it allowed me to develop natively on the 128k Mac rather than buying an outrageously expensive Lisa. Second, I knew I was going to port it to other micros and FORTH was usually one of the first languages implemented on new computers. I eventually ported it to Apple II and C64 and about 70% of the Mac code was easily portable.\n \nreply",
      "Thanks for opening the source code to another generation\n \nreply",
      "Yeah I knew that, that's why I've found it interesting.It looks a lot more high-level than something like C, but is used in similar spaces, which makes me wonder why it never really became more popular.\n \nreply",
      "It may look more high-level than something like C, but it is actually no more high level than a macro assembler with registers eliminated. As there's no syntax tree, essentially every word that is parsed from the input stream is replaced with a subroutine call. So the resulting FORTH code is nothing but a series of subroutine calls.In my experience quite often writing in assembler is easier than FORTH unless you have a strategy and self discipline, which when acquired makes one a whole lot more productive than using assembler, and arguably more so than a high level language. There're no pointer arithmetics, no rudimentary type checking, not even an array type (you have cells and addresses). There is nothing that throws an error except things like stack over/under-flow checks, and if you are lucky your code will crash. If not debugging can be tricky. Stack imbalances won't be reported/checked for you, there is no bounds checking for anything (not even structs). But there are conventions/strategies to prevent these kinds of bugs from happening that one needs to either discover for themselves, or find out in books (the book Thinking Forth helps, but is not enough I would say).Working with the stack can be more difficult than with registers, although the latter can be easily simulated with variables, which is often frowned upon. But words like CREATE ... DOES> enables meta-programming that helps with generating code with code, and makes it quite powerful, but can make your code complicated to reason about (see the concepts of compilation vs. execution vs. interpretation semantics described in ANS Forth).In the end the appeal of FORTH for me is in its \"simplicity\" (but nowhere any ease of use as it requires mastery of laying out code in memory as you would do in an assembler without any help from the language itself), its overall philosophy (see Chuck Moore's A Problem Oriented Language) on focusing on the nature of the problem rather than thinking in terms of the tools/language given to you (build a \"language\" for the problem), and providing solutions with as minimal \"cruft\" as possible.\n \nreply",
      "Anything that you say is missing can be added. I'm no expert but when I had some confusion about the stack I would create a word that did something in a balanced way, test it quickly, and use that word instead to build on. Forth makes it easy to climb the levels abstraction quickly.The method that it uses to interpret/compile a word varies by implementation. Subroutine call is just one of them.\n \nreply",
      "Very fast (faster than naive assembler) but not at all high-level; having to look after the stack is a bit of a pain. Writing your own FORTH is fun - it doesn't need to be in assembler - I once wrote a FORTH-like scripting language in C++.\n \nreply",
      "but it's also very extendable. It's ability to slap on new control structures and DSL's is on par with Lisp. I'd say it's very low level and much higher level than the most languages simultaneously.\n \nreply"
    ],
    "link": "https://chipwits.com/2024/11/16/chipwits-40th-birthday-original-forth-code-open-sourced/",
    "first_paragraph": "We\u2019re so thrilled that our open source announcement is getting so much attention! If you\u2019re interested purely in the open source release and how we recovered the original FORTH source code, please read on. If you\u2019re curious to try out our reboot of this programming logic / puzzle game as well, please consider wishlisting our project on Steam. It helps support the open source work. Thank you!This month marks the \ud83c\udf88\ud83c\udf88\ud83c\udf88 40th anniversary of ChipWits! \ud83c\udf88\ud83c\udf88\ud83c\udf88 To celebrate, we\u2019re releasing all of the original Mac and Commodore 64 FORTH source code (or as much as we could recover) as open source!You can find the code at https://github.com/chipwits/chipwits-forth. Read on for some history and analysis.Our goal for open sourcing the original version of ChipWits is to ensure its legacy lives on. We also wanted to share an appreciation for what cross-platform software development for 8-bit microcomputers was like in 1984. If you are familiar with these systems, we\u2019d love to hear from you, and you\u2019re in"
  },
  {
    "title": "Bayesian Neural Networks (toronto.edu)",
    "points": 52,
    "submitter": "reqo",
    "submit_time": "2024-11-18T16:47:38 1731948458",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=42174181",
    "comments": [
      "Bayesian Neural Networks just seem like a failed approach, unfortunately.\nFor one, Bayesian inference and UQ fundamentally depends on the choice of the prior, but this is rarely discussed in the Bayesian NN literature and practice, and is further compounded by how fundamentally hard to interpret and choose these priors are (what is the intuition behind a NN's parameters?). Add to that the fact that the Bayesian inference is very much approximate, and you should see the trouble.If you want UQ, 'frequentist nonparametric' approaches like Conformal Prediction and Calibration/Multi-Calibration methods seem to work quite well (especilly when combined with the standard ML machinery of taking a log-likelihood as your loss), and do not suffer from any of the issues above while also giving you formal guarantees of correctness. They are a strict improvement over Bayesian NNs, IMO.\n \nreply",
      "Conformal learning is relatively new to me. Tell me if I'm getting any of this wrong: Conformal learning is a frequentist approach that uses a calibration set to determine how unusual a prediction is.It seems like the main time they aren't a strict improvement over bayesian methods is when it is difficult to define your calibration set? I know this scenario isn't so commonplace, but I'm working in a scenario where I quickly looked at conformal learning and wasn't sure if it is applicable.\n \nreply",
      "I like Bayesian inference for few-parameter models where I have solid grounds for choosing my priors. For neural networks, I like to ask people \"what's your prior for ReLU versus LeakyReLU versus sigmoid?\" and I've never gotten a convincing answer.\n \nreply",
      "Kolmogorov Arnold nets might have an answer for you!\n \nreply",
      "Could you say a bit more about how so?\n \nreply",
      "KANs have learnable activations based on splines parameterized on few variables. You can specify a prior over those variables, effectively establishing a prior over your activation function.\n \nreply",
      "I'm sure there is a way of interpreting a relu as a sparsity prior on the layer.\n \nreply",
      "Every time I see people use the correct verb when talking about plural data (\"the data are\" vs \"the data is\") I immediately think \"uh oh, this guy is in too deep\". Clearest indicator someone has hit the data science blunt one time too many and you should put their work under extra scrutiny when considering it in any sort of real world application.\n \nreply",
      "I like Bayes, but I thought the \"surprising\" result is that double descent is supposed to prevent nns from overfitting?\n \nreply"
    ],
    "link": "https://www.cs.toronto.edu/~duvenaud/distill_bayes_net/public/",
    "first_paragraph": "\n        Bayesian inference allows us to learn a probability distribution over possible neural networks. We can approximately solve inference with a simple modification to standard neural network tools. The resulting algorithm mitigates overfitting, enables learning\n        from small datasets, and tells us how uncertain our predictions are.\n    \n        You may have heard deep neural networks described as powerful function approximators. Their power is due to the extreme flexibility of having many model parameters (the weights and biases) whose values can be learned from data via gradient-based\n        optimization. Because they are good at approximating functions (input-output relationships) when lots of data are available, neural networks are well-suited to artificial intelligence tasks like speech recognition and image classification.\n    \n        But the extreme flexibility of neural networks has a downside: they are particularly vulnerable to overfitting. Overfitting happens when"
  },
  {
    "title": "WhisperNER: Unified Open Named Entity and Speech Recognition (arxiv.org)",
    "points": 40,
    "submitter": "timbilt",
    "submit_time": "2024-11-21T21:41:41 1732225301",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=42208964",
    "comments": [
      "GitHub repo: https://github.com/aiola-lab/whisper-nerHugging Face Demo: https://huggingface.co/spaces/aiola/whisper-ner-v1Pretty good article that focuses on the privacy/security aspect of this \u2014 having a single model that does ASR and NER:https://venturebeat.com/ai/aiola-unveils-open-source-ai-audi...\n \nreply",
      "Looks like only inference available and no fine tuning code available\n \nreply"
    ],
    "link": "https://arxiv.org/abs/2409.08107",
    "first_paragraph": "Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "Interactive Visual Sorting (mszula.github.io)",
    "points": 22,
    "submitter": "jason1610",
    "submit_time": "2024-11-18T09:57:04 1731923824",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=42171096",
    "comments": [
      "Cool project. Suggestion: disable sound by default and consider more musically pleasant tones.\n \nreply",
      "I loved when it had a popup to beg me to star it on GitHub.\n \nreply",
      "Videos from this tool (or one like it) are surprisingly popular on TikTok.\n \nreply"
    ],
    "link": "https://mszula.github.io/visual-sorting/",
    "first_paragraph": "Built with \u2615\ufe0f and \u2764\ufe0f by mszula\n      using Svelte.\n      Version: c8d0237If you find this project helpful or inspiring, consider showing your\n      support by leaving a star on GitHub. Your feedback motivates us to keep\n      improving!"
  },
  {
    "title": "Security researchers identify new malware targeting Linux (welivesecurity.com)",
    "points": 34,
    "submitter": "heresie-dabord",
    "submit_time": "2024-11-21T20:57:30 1732222650",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=42208580",
    "comments": [
      "If I am skimming this correctly, this is a C&C client allowing remote control over the network, and uses \"a rootkit\" for further compromise once it somehow gets installed?I understand the value of in-depth security reports, but the 5th time they told me \"WolfsBane is the Linux counterpart of Gelsevirine, while FireWood is connected to Project Wood.\" I was wondering when I'd get to the meat and potatoes.\n \nreply",
      "\"once it somehow gets installed?\"The report mentions: \"we conclude ... exploited an unknown web application vulnerability ... .\"The chain of events, post initial exploit, is all very well but what was the initial point of entry?  The IoCs etc are welcome - thanks.\n \nreply",
      "For signs of the analyzed version, there's this file:/lib/systemd/system/display-managerd.serviceAnd a process called \"kde\".\n \nreply"
    ],
    "link": "https://www.welivesecurity.com/en/eset-research/unveiling-wolfsbane-gelsemiums-linux-counterpart-to-gelsevirine/",
    "first_paragraph": "\n      Award-winning news, views, and insight from the ESET security community\n    \n        Award-winning news, views, and insight from the ESET security community\n      ESET ResearchESET researchers analyzed previously unknown Linux backdoors that are connected to known Windows malware used by the China-aligned Gelsemium group, and to Project WoodViktor \u0160perka\n21 Nov 2024\n\u00a0\u2022\u00a0\n, \n18 min. read\nESET researchers have identified multiple samples of Linux backdoor, which we have named WolfsBane, that we attribute with high confidence to the Gelsemium advanced persistent threat (APT) group. This China-aligned threat actor has a known history dating back to 2014 and until now, there have been no public reports of Gelsemium using Linux malware. Additionally, we discovered another Linux backdoor, which we named FireWood. However, we cannot definitively link FireWood to other Gelsemium tools, and its presence in the analyzed archives might be coincidental. Thus, we attribute FireWood to Gelsemiu"
  },
  {
    "title": "Listen to the whispers: web timing attacks that work (portswigger.net)",
    "points": 110,
    "submitter": "saikatsg",
    "submit_time": "2024-11-21T18:08:09 1732212489",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=42206955",
    "comments": [
      "Timing attacks are such a pernicious idea.You look at the code and see that there's an auth check in place, you test the code to verify that the auth check has no bugs, you make sure that information is never shared with people who don't have authorization to access it, and yet it turns out it can be accessed as if there was no auth check at all.To make matters worse, everything can be fine for some time, and then some clever optimization in the CPU, the compiler, cache layer or the database engine introduces a completely unexpected side channel.\n \nreply",
      "would adding random delays prevent this?\n \nreply",
      "Random delays specifically do not, as they average out. Delays until a specific point in time do work, so long as the delay is never negative.\n \nreply",
      "It depends on the kinds of attacks you're thinking of. For the stuff Kettle is doing, probably yes. For cryptographic side channels, probably no.\n \nreply",
      "One thing that I\u2019ve done where I previously had a random delay is implement a delay till a constant time from the start of the request. So all of the timing you get out is effectively how well sleep can target a time.\n \nreply",
      "No, it only makes it take longer to get the underlying secret.Timing attacks are already dealing with \"noisy\" data, task scheduling et al, so they all boil down to some level of statistical analysis on the response times. Adding noise to that slows you down, but the underlying bias on the timings is still there.\n \nreply",
      "or you could benchmark the functions that compare secrets to user input and figure out how much time it's supposed to take, add 0.5s to the average and always add time before responding to get to that target so essentially your response time is constant regardless of input\n \nreply",
      "Important to keep in mind here that the timing attacks Kettle is talking about generally do not take the form of \"providing secret input to a function with variable timing\".\n \nreply",
      "A fun thing about this work is that it's following different threads than the remote timing attack research in cryptography follows; high-end remote timing in cryptography involves some signal processing work, which isn't really present here. Which means Kettle's attacks are likely to get more powerful.\n \nreply",
      "I did some research few weeks ago on the topic of database lookup timing side-channels, conclusion is: They don't really exist (for SELECT FROM WHERE commands atleast).\nhttps://altayakkus.substack.com/p/timing-side-channel-on-sql...\n \nreply"
    ],
    "link": "https://portswigger.net/research/listen-to-the-whispers-web-timing-attacks-that-actually-work",
    "first_paragraph": "Burp ScannerBurp Suite's web vulnerability scannerProduct comparisonWhat's the difference between Pro and Enterprise Edition?DownloadsDownload the latest version of Burp Suite.Director of Research\n\n@albinowax\nPublished: 07 August 2024 at 18:10 UTCUpdated: 18 November 2024 at 08:32 UTC\nWebsites are riddled with timing oracles eager to divulge their innermost secrets. It's time we started listening to them.\r\nIn this paper, I'll unleash novel attack concepts to coax out server secrets including masked misconfigurations, blind data-structure injection, hidden routes to forbidden areas, and a vast expanse of invisible attack-surface.\r\nThis is not a theoretical threat; every technique will be illustrated with multiple real-world case studies on diverse targets. Unprecedented advances have made these attacks both accurate and efficient; in the space of ten seconds you can now reliably detect a sub-millisecond differential with no prior configuration or 'lab conditions' required. In other word"
  },
  {
    "title": "Emacs Code Conversion Language (emacsninja.com)",
    "points": 74,
    "submitter": "gudzpoz",
    "submit_time": "2024-11-21T18:41:32 1732214492",
    "num_comments": 11,
    "comments_url": "https://news.ycombinator.com/item?id=42207282",
    "comments": [
      "Judging by the name and by these opcodeshttps://github.com/emacs-mirror/emacs/blob/7cb77385d38b96377...it seems to be intended for character set conversion especially JIS.\n \nreply",
      "More documentation in https://github.com/emacs-mirror/emacs/blob/7cb77385d38b96377...The directory is lisp/international, that already tells something   ;; CCL is used for code conversion at process I/O and file I/O for\n   ;; non-standard coding-systems.  In addition, it is used for\n   ;; calculating code points of X fonts from character codes.\n\nAnd   $ find /usr/share/emacs/26.3/lisp/ \\! -name ccl.el.gz -name \\*.el.gz -exec zgrep ccl- {} +\n   /usr/share/emacs/26.3/lisp/obsolete/pgg-parse.el.gz:(when (fboundp 'define-ccl-program)\n   /usr/share/emacs/26.3/lisp/obsolete/pgg-parse.el.gz:  (define-ccl-program pgg-parse-crc24\n   /usr/share/emacs/26.3/lisp/obsolete/pgg-parse.el.gz:      (ccl-execute-on-string pgg-parse-crc24 h string)\n   /usr/share/emacs/26.3/lisp/international/mule.el.gz:specified by the attributes `:ccl-decoder' and `:ccl-encoder'.\n   /usr/share/emacs/26.3/lisp/international/mule.el.gz:`:ccl-decoder' (required if :coding-type is `ccl')\n   /usr/share/emacs/26.3/lisp/international/mule.el.gz:VALUE is a CCL program name defined by `define-ccl-program'.  The\n   /usr/share/emacs/26.3/lisp/international/mule.el.gz:`:ccl-encoder' (required if :coding-type is `ccl')\n   /usr/share/emacs/26.3/lisp/international/mule.el.gz:VALUE is a CCL program name defined by `define-ccl-program'.  The\n   /usr/share/emacs/26.3/lisp/international/mule.el.gz:        '(:ccl-decoder\n   /usr/share/emacs/26.3/lisp/international/mule.el.gz:          :ccl-encoder\n   /usr/share/emacs/26.3/lisp/international/mule.el.gz:    (plist-put properties :ccl-decoder (car flags))\n   /usr/share/emacs/26.3/lisp/international/mule.el.gz:    (plist-put properties :ccl-encoder (cdr flags))))\n   /usr/share/emacs/26.3/lisp/language/vietnamese.el.gz:;;  '(ccl-decode-vps . ccl-encode-vps)\n   /usr/share/emacs/26.3/lisp/language/ethiopic.el.gz:(define-ccl-program ccl-encode-ethio-font\n   /usr/share/emacs/26.3/lisp/language/ethiopic.el.gz:(setq font-ccl-encoder-alist\n   /usr/share/emacs/26.3/lisp/language/ethiopic.el.gz:      (cons (cons (purecopy \"ethiopic\") ccl-encode-ethio-font) font-ccl-encoder-alist))\n\nMule was non-ASCII support in the 1990s before Unicode was a thing.\n \nreply",
      "The source code mentioned in the article is well documented and an interesting read too; e.g.:https://github.com/emacs-mirror/emacs/blob/master/src/ccl.c\n \nreply",
      "Interesting. I've been using Emacs for 6 years and have never heard of CCL. I would love to read a book on all the strange and fascinating code that Emacs has accumulated over the years.\n \nreply",
      "Yes, it seems ripe for quasi-archaelogical investigations. One tidbit that I couldn't believe was that Julian Assange had written an early version of Windmove, or an addition to an early version, or something along those lines.I've nosed through some of the elisp files for the games - little goldmines everywhere in there.\n \nreply",
      "Looks like the details are in the file itself:> Special thanks to Julian Assange (proff@iq.org), whose change-windows-intuitively.el predates Windmove, and provided the inspiration for it.Source: https://github.com/emacs-mirror/emacs/blob/4823fa1077e4330bd...change-windows-intuitively: http://quimby.gnus.org/s/change-windows-intuitively.el\n \nreply",
      "Ah thank you, yes, that's it. A precursor to windmove, then. Very nice!\n \nreply",
      "I recently played Emacs tetris, and I was confused by how the tetrominos were selected so I dove into the source code to impress my boyfriend. It turns out that the tetrominos' behavior is configurable with a defcustom, but by default it chooses to play without the bag rule, making their tetris hard to take seriously as an implementation for competitive play >:c\n \nreply",
      "A. And was he impressed? My S.O. tends to have mixed reactions if I go on about source code too much. It's a fine line. She's an excellent tetris player though, so maybe this would get a pass.B. I am not a big tetris player (too afraid of the inevitable addiction), but had a game there to see, and am now looking at the source code. ~tetris-allow-repetitions~ just has to be changed to nil, and then it does the correct bag rule behaviour?C. I wonder why Emacs' tetris default is without the bag rule then... maybe you could submit a patch and propose a tournament? I only learned recently that the platform used for official tournaments is the NES version of Tetris, and now I'm learning that they use the bag rule. Tetris is more serious than I ever knew.\n \nreply",
      "Not only archaeological. Some new Android stuff was implemented in CCL only last year.\n \nreply"
    ],
    "link": "https://emacsninja.com/posts/code-conversion-language.html",
    "first_paragraph": "20/07/2019Update: I forgot that I did a brief analysis on this many\nyears ago, using ROT13 as example.Update: Noam Postavsky pointed out on #emacs that CCL is not\nturing-complete after all as a full simulation (as opposed to just\ninterpreting a single line) requires an Emacs Lisp loop.  This loop\ncannot be done in CCL itself as it doesn\u2019t allow feeding its output\nback in as input.  The I/O restrictions most likely put it into the\nweaker category of finite-state transducers.Emacs is most famously, a re-imagination of a Lisp machine, with the\nEmacs Lisp byte-code interpreter being at its core.  A lesser-known\nfact is that there\u2019s two more byte-code interpreters in its C sources,\none for compiled regular expressions and another designed for encoding\nand decoding text, known as Code Conversion Language (CCL).  This blog\npost will focus on the latter as it\u2019s largely gone unnoticed and\nhasn\u2019t seen too much experimentation.The CCL implementation is split into the byte-code interpreter\n(ccl.c)"
  },
  {
    "title": "A Study of Malware Prevention in Linux Distributions (arxiv.org)",
    "points": 26,
    "submitter": "belter",
    "submit_time": "2024-11-21T21:40:20 1732225220",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=42208952",
    "comments": [
      "> Our interviews identified only a single Linux distribution, Wolfi OS, that performs active malware scanning.Seems like several authors are affiliated with Chainguard that created Wolfi.\n \nreply",
      "Good to see Packj[1] as one of the malware scanners used.1. https://github.com/ossillate-inc/packjPackj detects malicious PyPI/NPM/Ruby/PHP/etc. dependencies using behavioral analysis. It uses static+dynamic code analysis to scan for indicators of compromise (e.g., spawning of shell, use of SSH keys, network communication, use of decode+eval, etc). It also checks for several metadata attributes to detect bad actors (e.g., typo squatting).\n \nreply",
      "This study seems flawed. It references the Xz backdoor, but then talks about malware in Linux distribution packages?It would make more sense to study and interview package management systems like PyPy and Nuget instead.\n \nreply",
      "Would a XZ hack have not worked on a Linux machine? (It would have)Are researching PyPy and Pip and Nuget and VSCode Extensions and AI pickle models all exclusive?\n \nreply"
    ],
    "link": "https://arxiv.org/abs/2411.11017",
    "first_paragraph": "Help | Advanced SearcharXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.\narXiv Operational Status \n                    Get status notifications via\n                    email\n                    or slack\n"
  },
  {
    "title": "Glass Health (YC W23) is hiring founding, senior and lead full-stack engineers (lever.co)",
    "points": 0,
    "submitter": "",
    "submit_time": "2024-11-21T21:44:29 1732225469",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://jobs.lever.co/glass-health-inc?team=Product%20%26%20Engineering",
    "first_paragraph": "Glass Health Inc. Home Page"
  },
  {
    "title": "PHP 8.4 (php.net)",
    "points": 352,
    "submitter": "theThree",
    "submit_time": "2024-11-21T09:56:52 1732183012",
    "num_comments": 235,
    "comments_url": "https://news.ycombinator.com/item?id=42202670",
    "comments": [
      "I was curious about why setting `$this->countryCode` inside the setter for `countryCode` didn't result in infinite recursion. Turns out this is spelled out in the RFC, but not in the docs:   When a hook is called, inside that hook $this->[propertyName] will refer to the \u201cunfiltered\u201d value of the property, called the \u201cbacking value.\u201d When accessed from anywhere else, $this->[propertyName] calls will go through the relevant hook. This is true for all hooks on the same property. This includes, for example, writing to a property from the get hook; that will write to the backing value, bypassing the set hook.\n   \n   A normal property has a stored \u201cbacking value\u201d that is part of the object, and part of the memory layout of the class. However, if a property has at least one hook, and none of them make use of $this->[propertyName], then no backing value will be created and there will be no data stored in the object automatically (just as if there were no property, just methods). Such properties are known as \u201cvirtual properties,\u201d as they have no materialized stored value.\n   \n   Be aware, the detection logic works on $this->[propertyName] directly at compile time, not on dynamic forms of it like $prop = 'beep'; $this->$prop. That will not trigger a backing value.\n\nFeels like too much magic to me that a property access can mean different things depending on context, but I'm not a PHP user, so I don't get a vote.\n \nreply",
      "The dynamic form is really not needed very often. Should it ever become a problem triggering a loop you can just set and get from a private property with a different name. But then also 90% of getters and setters are really simple so it will feel as magic as gravity.\n \nreply",
      "C# has the same thing as Properties, but the backing value is set explicitly as a separate variable:https://learn.microsoft.com/en-us/dotnet/csharp/programming-...\n \nreply",
      "There are many times I would love to have an automatic backing field in C#.  C# will do that if you use the default setter but in cases where that's not possible I dislike having to both declare a separate field and having it available to the rest of the class outside of the setter.\n \nreply",
      "C# 13 has this via the field keyword (as preview feature): https://learn.microsoft.com/en-us/dotnet/csharp/language-ref...It's pretty similar to what PHP provides here, except that PHP uses \"$this->propname =\" and C# uses \"field =\".Edit: As someone involved in the RFC, it's somewhat funny, because we considered a special variable like \"$field\" or \"$value\" too magic, and C# does just that with a field keyword.\n \nreply",
      "https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/cs...edit: the properties reference now documents the 'field' keyword too\n \nreply",
      "That might be all the motivation I need to go move to .NET 9.\n \nreply",
      "I'm also not a php developer, but I agree. This seems like a huge footgun.I've never been a fan of this kind of magic, and I wonder how other languages deal with this case.\n \nreply",
      "Well in python I assume it would be equivalent of accessing:  self.__dict__['property_name']\n\nAnd if those PHP rules were in python you could just write:  @property\n  def property_name(self):\n      return self.property_name\n\nIn actual python though, that would infinitely recurse.\n \nreply",
      "I'm just a PHP programmer for work, but I worry about the orientation PHP has chosen. As French people say: better is the enemy of good (Le mieux est l'ennemi du bien). The two new language features bring a higher language complexity for dubious gains. I hope I won't have to work with these.Property hooks mean that some language magic will turn a property access into a call to methods. It implies that `$this->x` has a different meaning if it's inside a hook or outside hooks. I've used this kind of feature (getters/setters) with JS code (and with Moose/Perl decades ago), and I wasn't convinced. Plain methods are more explicit, have less cognitive charge, and are easier to extend.On the bright side, I'm glad that the language is still thriving. In 2021, I was worried when the foundation was created, especially as I read that Nikita Popov had left. He was the creator of PHP's JIT code, and at the time the only developer who could fully understand it. But it seems there was no need to worry. PHP is now longer \"the elephant in the room\" of web programming, but it's still a good language, with many active developers at its core.\n \nreply"
    ],
    "link": "https://www.php.net/releases/8.4/en.php",
    "first_paragraph": "New DOM API that includes standards-compliant support for parsing HTML5 documents, fixes several long-standing compliance bugs in the behavior of the DOM functionality, and adds several functions to make working with documents more convenient.The new DOM API is available within the Dom namespace. Documents using the new DOM API can be created using the Dom\\HTMLDocument and Dom\\XMLDocument classes.New BcMath\\Number object enables object-oriented usage and standard mathematical operators when working with arbitrary precision numbers.These objects are immutable and implement the Stringable interface, so they can be used in string contexts like echo $num.For source downloads of PHP 8.4 please visit the downloads page. Windows binaries can be found on the PHP for Windows site. The list of changes is recorded in the ChangeLog.The migration guide is available in the PHP Manual. Please consult it for a detailed list of new features and backward-incompatible changes."
  },
  {
    "title": "Autopoietic Networks (gbragafibra.github.io)",
    "points": 25,
    "submitter": "Fibra",
    "submit_time": "2024-11-21T21:29:20 1732224560",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=42208850",
    "comments": [
      "Reminds me of:https://distill.pub/2020/growing-ca/\"Differentiable Model of Morphogenesis\"\n \nreply",
      "Autopoiesis.That word alone brings me back to systems engineering, and how everything was \"like a biological cell\" in modern practice.\n \nreply"
    ],
    "link": "https://gbragafibra.github.io/2024/10/08/autopoietic_nets.html",
    "first_paragraph": "A type of cellular automaton with the intent of simulating autopoiesis in an emergent manner, with a simple scaling rule and with each unit having binary state attribution and a corresponding gate associated to it. Such concept of autopoiesis is as introduced by Maturana and Varela in Autopoiesis and Cognition: The Realization of the Living, and also a bit developed in Principles of biological autonomy(1979) by Varela.Autopoiesis can be viewed as the capacity of a system to generate and (re)build itself. Associated to this concept of autopoiesis is that of organizational closure or closure of constraints. These very briefly mean that any process (and respective constraints on it) needs to generate atleast another constraint. Here, processes and relations between them evolve in order to maintain such closure. Through this lens, any new adaptation or behaviour taken by an organism can be seen as a compensation to a pertubation (e.g. self-replication).Alternatively to this emergent approa"
  },
  {
    "title": "The meme-ification of the \"Demon Core\" (doomsdaymachines.net)",
    "points": 253,
    "submitter": "SaberTail",
    "submit_time": "2024-11-21T03:05:56 1732158356",
    "num_comments": 192,
    "comments_url": "https://news.ycombinator.com/item?id=42200699",
    "comments": [
      "Oh they still haven't figured this one out at knowyourmeme?Demon Core meme came from KanColle(2013) communities in Futaba, and permeated to nicovideo.jp as well as to Twitter. That's why it is predominantly image based with few GIFs inbetween, why it is Demon Core and Demon Core only, and why there are few comical non-girl versions created years after inception.I'd guess overlap between outspoken (ex-)Futaba users AND HN readers(hops_max=3) OR knowyourmeme users is exactly 1.0f, and this won't ever go on record anywhere unless someone say it somewhere, so here you go.\n \nreply",
      "> Demon Core meme came from KanColle(2013) communities in FutabaDo you have some source for this being the origin? Could you cite some examples from prior to 2018 which is earliest date of other Japanese demon core memes cited by https://knowyourmeme.com/memes/demon-core ?\n \nreply",
      "Oldest mention to Demon Core as local favorite I could find was timestamped 2016/12/05 23:51, but they don't keep formal logs and they really don't like things \"brought outside\", so I'm not going to link it.Maybe there could be mht files in someone's basement somewhere, but I have no data to present at this instant, mostly just oral history. Sorry for that.edit: oldest post tagged Demon Core on Pixiv dates back to 2016/01/17, so kym is verifiably off by years.edit: there's a KanColle themed image post in Nico nico seiga dated 2017/06/18 featuring a \"borrowed\" Demon Core-chan 3D model, which meams the design existeed for some time.edit: this blog post dated 2014/09/30 links to a deleted Touhou video with Demon Core in title: https://1ni.co/2014/09/30/project20140930_6/\n \nreply",
      ">Oh they still haven't figured this one out at knowyourmeme?Why not contribute your knowledge there, instead of (or in addition to) here, where it will surely be forgotten about?\n \nreply",
      "Can you elaborate? What's the context? I have no idea what those communities are.\n \nreply",
      "Futaba Channel is a Japanese imageboard website originally born as a mirror backup for the textboard website 2ch (now 5ch). You may be aware of 4chan, which was directly based on Futaba and from which it took much of its culture.Nico Nico Douga is a video hosting website that was created soon after YouTube's boom. It's famous for having user comments scrolling across videos and for being one of Japan's biggest meme factory from 2007 to 2012. Forcing users to login to watch videos, the push for premium accounts, and a rough transition from FLASH to HTML5 are considered some of main reasons of its decline.\n \nreply",
      "The Crossroad trio was ~2015 addition to the game so it doesn't quite date back to 2013, but I doubt others enjoy inevitable wall of text for complete context at this time. I suspect it will take few more years until enough with Anglosphere background gains enough Japanese literacy to document this. For now I'd leave just pointers here.\n \nreply",
      "> Because it\u2019s a meme derived from human suffering. It\u2019s meant to be in bad taste \u2014 that\u2019s the source of the humor.I don\u2019t agree. To me, it\u2019s derived from many things, like juxtaposing something incredibly stressful and dangerous, with something else.I\u2019d go further and say the suffering that happened is only important in that it made the demon core popular and well-known, but the memes would still work if it somehow became well-known without the death and suffering because no accident happened.\n \nreply",
      "I also disagree with the author. They don't consider the relationship between the meme makers/viewers and the demon core incident. And while it was horrific to those involved, most people have experienced maybe 0.1% of that terror \u2013 and that is good. They can and should make light of it.Expecting everyone to be deeply affected by all traumatic experiences throughout history is unrealistic. We have defence mechanisms to cope with the overwhelming weight of global suffering, and breaking them down is a bad idea. So shaming those who managed to distance themselves from such events (by saying their dark comedy is in bad taste) is condescending. I say it's good to have healthy coping strategies and not be overly affected by awful events we were not exposed to directly \u2013 that is called healthy mental resilience. Not everyone should suffer because anyone else has.People should and will still joke, even when awful things have happened to billions in every conceivable niche of life. Really, I would even argue one should not absorb more suffering and terror than they would have been exposed to in one life-time, even if the internet and news media makes it easy. One should certainly, without any doubt in my mind not internalize every tragedy in history in an effort to stifle humour.\n \nreply",
      "Most comedy is tragic.[1] And laughing is an inherently selfish act, as Mel Brooks observed when he said, \"comedy is when you fall in an open sewer and die.\"[2][1] https://quoteinvestigator.com/2013/06/25/comedy-plus/[2] https://www.pbs.org/wnet/americanmasters/mel-brooks-film-exc...\n \nreply"
    ],
    "link": "https://doomsdaymachines.net/p/the-meme-ification-of-the-demon-core",
    "first_paragraph": ""
  },
  {
    "title": "Writing Healthy Health-Checks (lorentz.app)",
    "points": 11,
    "submitter": "baalimago",
    "submit_time": "2024-11-17T06:42:33 1731825753",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://lorentz.app/blog-item.html?id=healthy-health-checks",
    "first_paragraph": ""
  },
  {
    "title": "Launch HN: Fresco (YC F24) \u2013 AI Copilot for Construction Superintendents",
    "points": 66,
    "submitter": "arvindveluvali",
    "submit_time": "2024-11-21T15:03:43 1732201423",
    "num_comments": 25,
    "comments_url": "https://news.ycombinator.com/item?id=42204939",
    "comments": [
      "This is a good idea but I hope you've got some secret training data that isn't available on the open web. I've been able to stump ChatGPT with simple \"gotcha\" national electrical code questions that a foreman wouldn't have a problem answering(e.g sizing a breaker for a heater depending on different situations). There are far fewer subreddits and forums dedicated to trade specialists and as a community they're more hostile to DIY-ers and will tell you \"get someone licensed.\" They're also not the types to write detailed reports and case studies on what they did.It's not that trades are super complicated in comparison to other fields like web development, it's that there's no GitHub, no source shared among all pros like \"here's what I did and how I got it to work.\" Without a good stack overflow how does the AI judge the quality of workmanship in photos?You are absolutely right, btw, about google drives and one drives and hundreds of photos and all that. My experience is in dealing with general contractors on smaller jobs, not supers on mega projects, but they have similar issues. Lots of sloppy back and forths and poor tracking of change orders, etc,What Im trying to say, since I sort of rambled there, is that while processing and sorting and making punchlists is a good idea, I have doubts about AI's current ability to accurately spot code(as in building code, which unlike JavaScript varies by zip code) issues. Does the AI know that you dont have enough clearance at X or does that have to go into the recording?\n \nreply",
      "Great point! We're really relying on the superintendent's expertise, transcribing/compiling what they're saying rather than flagging code violations or other notables ourselves. We think analysis should be (for now, at least) the job of the highly trained and experienced superintendent, and our job is to take care of the transcription and admin that isn't really a good use of their time.\n \nreply",
      "Great answer, and good proper use of the benefits of LLM. Let the LLM do the grunt work and let the expert human be the expert. Best of luck to you!\n \nreply",
      "Looks neat!  I don\u2019t work in construction but I know folks in civil engineering. Are there applicabilities with Fresco you could see in that domain?\n \nreply",
      "Absolutely. There are a ton of industries where people conduct physical site inspections and turn those into structured documents; as in construction, those take a long time to make! We've actually had some inbound from civil engineers, and if we can be useful to folks in your network, we'd love to connect with them.\n \nreply",
      "This is super cool and there\u2019s a ton of other industries where this is sorely needed!\n \nreply",
      "FYI - this could be really useful in logistics operations and production too! (Which is my background, although I suspect the price point is unfortunately much too high for that application).\n \nreply",
      "Thanks for the flag! Absolutely, there are many verticals where we think Fresco can be useful. Would love to hear your thoughts on price point.\n \nreply",
      "I'm in the middle of a renovation project (not as a professional developer, just a random dipshit who wanted to make a multifam building a little nicer and bit off way too much)Anyway, I've been running around compiling and recompiling photos and punchlists, and my reaction was \"Coool!\"I'm not your target audience but I have to imagine the people that are would get utility out of this.\n \nreply",
      "really cool application of LLMs to a big problem - nice work.\n \nreply"
    ],
    "link": "item?id=42204939",
    "first_paragraph": ""
  },
  {
    "title": "A Walk with LuaJIT (polarsignals.com)",
    "points": 74,
    "submitter": "damir",
    "submit_time": "2024-11-19T07:38:13 1732001893",
    "num_comments": 13,
    "comments_url": "https://news.ycombinator.com/item?id=42180872",
    "comments": [
      "I wrote the code and the blog, happy to answer any questions/comments. Very eager to have folks try it out and give feedback! Like is my meme game strong or very strong?  J/KThere's some missing bits around FFI and callbacks (i.e. C calling function pointer that is a luajit generated stub back into the interpreter) and curious if anyone actually uses these things in OpenResty workloads. Deploy and enjoy!\n \nreply",
      "Thanks for submitting! We know HN has a sweet spot for LuaJIT, so we figured it would eventually end up here.Quick summary: this post dives into the gory details of how we implemented an eBPF based profiler for LuaJIT.Let us know if you have any questions on this, we\u2019ll keep an eye out on comments!\n \nreply",
      "Very deep dive, thank you for sharing it all. So cool it traverses callbacks too.\n \nreply",
      "Glad you liked it! Yeah, we worked with a customer who really needs this badly and has done some unspeakable things to get by until now.\n \nreply",
      "I\u2019m tremendous excited about LuaJIT 3.0 development.https://github.com/LuaJIT/LuaJIT/issues/1092Q: does anyone know timeline on the release?\n \nreply",
      "Looks like 10 years to me\n \nreply",
      "Why do you think that?\n \nreply",
      "None of the items listed there have been ticked off in the time since the ticket was opened, not even the \u201ccreate v3 branch\u201d one. Mike also has had plans for v3 for at least the last decade too.So, I\u2019m sure it\u2019ll get worked on when he can, and it\u2019ll be great when it\u2019s done, but it doesn\u2019t look like there\u2019s active development on it and it doesn\u2019t look like it will happen any time soon. I hope in wrong, of course, but it just doesn\u2019t seem likely.\n \nreply",
      "Actually there is some progress.For example there is a new higher-performance GC (https://github.com/LuaJIT/LuaJIT/issues/38#issuecomment-1696...) since a year ago (in fact, at least 3 people over the years have taken a stab at writing a new GC!)And a full port to (certain flavours of) RISC-V was finished a couple months ago and awaiting merge (https://github.com/LuaJIT/LuaJIT/pull/1267), and might be merged separately into the OpenResty fork (https://github.com/openresty/luajit2/pull/236).\n \nreply",
      "LuaJIT.org stopped publishing release tarballs [1] which caused leafo's GH actions builds [2] to suddenly stop working.  The workaround was to start testing against OpenResty's distribution of LuaJIT [3] which is incompatible with LuaJIT.org's version.There is no faster way to make a fork the de facto standard version than to break everyone's CI builds.[1] https://luajit.org/download.html[2] https://github.com/leafo/gh-actions-lua/issues/49[3] https://github.com/openresty/luajit2\n \nreply"
    ],
    "link": "https://www.polarsignals.com/blog/posts/2024/11/13/lua-unwinding",
    "first_paragraph": "How we scrape callstack information from the LuaJIT engine for profilingThe following is a chronicle of implementing a general purpose zero-instrumentation BPF based profiler for LuaJIT. Some assumptions are made about what this entails and it may be helpful to read some of our other work in this area. One major change from prior efforts is that instead of working with the original Parca unwinder we are now working with the OpenTelemetry eBPF profiler. If you missed that announcement you can read about it here. The TLDR is that a tiny BPF program scrapes the minimal information needed from the stack and passes it off to a userland program that flushes out all the required scaffolding and metadata extraction.  Lua is a dynamic general purpose scripting language that's been around since the 90s. Lua is very small, by way of comparison a stripped Lua binary is only ~230kb on AMD64, while a recent version of python is over 5mb! Lua is commonly used for game scripting but you'll also find i"
  },
  {
    "title": "The rectangular cows of Art UK (2018) (artuk.org)",
    "points": 138,
    "submitter": "onychomys",
    "submit_time": "2024-11-21T13:12:04 1732194724",
    "num_comments": 56,
    "comments_url": "https://news.ycombinator.com/item?id=42203990",
    "comments": [
      "The shape of the cows is exaggerated, but not by much - many breeds of cow are just incredibly rectangular in profile.https://images.squarespace-cdn.com/content/v1/5475e650e4b0df...\n \nreply",
      "One of the first things you learn about farming cows is that meat cows are rectangular, and dairy cows are triangular.Some of the paintings are quite exaggerated though, probably for the purpose of bragging rights by the patron.\n \nreply",
      "The first thing I did was take 5 seconds for an image search to confirm that the cows in the paintings look like.. actual cows. Then I read the article, and remain perplexed about art and those who write about art.\n \nreply",
      "I had the same reaction; this was a glaring omission; photos of cows should have been at the top of the article as a reference. The article's main (but unstated) point isn't cows in these paintings are rectangular, but cows in these paintings are unrealistic in the same way. To prove this point, he used many of these paintings, but no pictures of actual cows, which would have proven his or her point.Doing the work myself, as you have, I find that many cows are rectangular. The author is unequipped to dispel me of this notion, if it's incorrect, but could have easily if he had addressed it preemptively by clearly stating his actual thesis. (Unrealism, not rectangleness). (And if he is correct)\n \nreply",
      "You\u2019ve missed the point. It\u2019s not that cows are unrealistically sqaure, it is that its strange how many paintings of rectangular cows there are, and the author guesses its because they\u2019re all displaying the profile. Why is this perspective so dominant in the 19th century, and what does it mean for the formal considerations of the artwork? These are the questions that are important, not whether or not cows are actually sqaure.\n \nreply",
      "I concur that what you describe is a central theme. I also think that a lack of addressing the question (with pictures or words) of realism leaves it open for readers to take away themes other than the one you highlight.\n \nreply",
      "There is no \u201crealism,\u201d photography is its own form of art. What\u2019s remarkable is how common this perspective is even today, such that it has been produced as \u201crealistic\u201d for you and how you see the world.\n \nreply",
      "I agree, however there is something to be said for the distance between the subject and the representation. If the 'underlying cow' is already somewhat square, then the representation in painting or photo is going to be close to that nebulous reality.While it might be possible to take a photo of a cow that turns out looking spherical (due to the lighting or angle), it is surely going to be harder?\n \nreply",
      "I guess there\u2019s the platonist/pythagorean angle that circle, sqaure, and triangle are fundemental forms of seeing and artworks can only approximate them. But even then that is only for the forms of our perception and is not fundemental to the thing in itself, which has neither a name nor a definite shape, but is also in some sense shaped by forces of perception (in a material sense). But then I would argue that technology itself opens up not only new ways of seeing but also new formal possibilities and claiming that there is something fundemental to the forms of seeing to form in general limits those possibilities.\n \nreply",
      "I spent my time trying to figure out what artuk was.\n \nreply"
    ],
    "link": "https://artuk.org/discover/stories/the-rectangular-cows-of-art-uk",
    "first_paragraph": "\n\t\t\t\t[Skip to content]\n\t\t\t\t\t\t\t\t\t[Skip to main navigation]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[Skip to quick links]\n\t\t\t\t\t\t\t\t[Go to accessibility information]\n\t\t\tRemember me (uncheck on a public computer)By signing up you agree to terms and conditions\n\t\t\t\t\t\t\t\t\t\tand privacy policy\nEnter your email address below and we\u2019ll send you a link to reset your passwordI agree to the Art UK terms and conditions\n\t\t\t\t\t\t\t\t\tand privacy policy\nSign up to the Art UK newsletter, a weekly edit of insightful art stories\n\n\t\t\t\tStories\t\t\t\n\n\t\tPosted 13 Apr 2018, by \n\t\t\t\t\t\t\t\t\tMolly Tresadern \n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLincoln Red Cow\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1910\n\nWilliam Albert Clark (1880\u20131963)\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCow in a Field\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc.1980\n\nPeter Kinley (1926\u20131988)Spending time among the thousands of paintings on Art UK often throws up questions. What is a sun fish? Why is there a painting of the Queen with Robert Burns? What makes this tie hot?For a while, I\u2019ve been wondering about a mystery I shall call "
  }
]