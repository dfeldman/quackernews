[
  {
    "title": "Tell HN: Help restore the tax deduction for software dev in the US (Section 174)",
    "points": 1498,
    "submitter": "dang",
    "submit_time": "2025-06-09T16:28:51 1749486531",
    "num_comments": 573,
    "comments_url": "https://news.ycombinator.com/item?id=44226145",
    "comments": [
      "A lot of people don't know what this Section 174 is about, so here's a brief explainer.Normally, when you have expenses, you deduct them off your revenue to find your taxable profit. If you have $1 million in sales, and $900k in costs, you have $100k in profit, and the government taxes you on that profit.Section 174 says you can't do this for software engineers. If you pay a software engineer, that's not \"really\" an \"expense\", regardless of the fact that you paid them.What you've actually done, Congress said, is bought a capital good, like a machine. And for calculating tax owed, you have to depreciate that over several years (5 in this case).Depreciating means that if you pay an engineer $200k in a year, in tax-world you only had $40k of real expense that year, even though you paid them $200k.So the effect is that it makes engineers much more expensive, because normally when a company hires an engineer, like they spend on any other expense, they can at least think \"well, they will reduce our profit, which reduces our tax obligation,\" but in this case software engineers are special and aren't deductible in the same way.In the case of the $200k engineer, you deduct the first $40k in the first year, then you can expense another $40k from that first year in the second year, the third $40k in the third year, and so on through the fifth year. So eventually you get to expense the entire first year of the engineer's pay, but only after five years.The effect is that companies wind up using their scarce capital to loan the federal government money for five years, and so engineers become a heavy financial burden. If a company hires too many engineers, they will owe the federal government income tax even in years in which they were unprofitable.These rules, by the way, don't apply to other personnel costs. If you hire an HR person or a corporate executive, you expense them in the year you paid them. It's a special rule for software engineers.It was passed by Congress during the first Trump administration in order to offset the costs of other corporate tax rate cuts, due to budgeting rules.\n \nreply",
      "So it applies to software engineers but under what definition of software engineer?This [1] is the only definition the code actually give.> (3) Software development> For purposes of this section, any amount paid or incurred in connection with the development of any software shall be treated as a research or experimental expenditure.1. https://www.law.cornell.edu/uscode/text/26/174-----Is a test or QA engineer considered a software engineer?Is an FPGA or ASIC engineer still considered a software engineer if they are writing in HDLs?Is a systems engineer, electrical engineer, or mechanical engineer considered a software engineer because they use MATLAB, etc and use programming to do their design work?Is a sysadmin, DB admin, or other IT staff considered a software engineer because they write software as part of their job?What about a quantitative analyst, data scientist, accountant, actuary, or any of the other maths and analysis adjacent job roles that regularly use some level of programming to do their job (and therefore write software)?What about HR, etc who use excel documents? Excel is fundamentally just a graphical array programming language (and the design of spreadsheet tools is heavily inspired directly from APL). Is anyone who uses excel or builds/maintains spreadsheets considered a software engineer?Like software engineering is such a broad field and programming bleeds into every part of modern business at this point.\n \nreply",
      "The IRS released guidance back in 2023: https://www.irs.gov/pub/irs-drop/n-23-63.pdfIt starts on page 23.Plenty of analysis online by tax firms but I'll quote from this one: https://insightplus.bakermckenzie.com/bm/attachment_dw.actio...> Generally, activities treated as software development for section 174 purposes include, but are not limited to, the following.\u2022 planning the development of the computer software\u2022 designing the computer software\u2022 building a model of the computer software\u2022 writing source code and converting it to machine-readable code\u2022 testing the computer software (up to the point that a taxpayer places the computer software into service or determines that the computer software is ready for sale or licensing to others)\u2022 producing product master(s), if the taxpayer develops the computer software for sale or licensing to others.> Activities that are not treated as software development vis-\u00e0-vis software developed by a taxpayer for use in its trade or business are as follows:\u2022 training employees and other stakeholders that will use the computer software\u2022 maintenance activities after the taxpayer places the computer software into service\u2022 data conversion activities, except for activities to develop computer software that facilitate access to existing data or data conversion\u2022 installing the computer software and other activities relating to placing the computer software into service\n \nreply",
      "> maintenance activities after the taxpayer places the computer software into serviceThis is the part that I think makes this whole jig of treating software development like a purely capitalizable expense so nuts.I previously worked at a public company that wanted software developers to treat as much work as possible as CapEx - it makes you look more profitable than you actually are, which is bad for taxes but good for your stock price. Developers hated it. The problem with it is that with modern web based software, CI/CD, A/B testing, etc. that the line between \"new software\" (i.e. CapEx) and \"maint\" (i.e. OpEx) is so blurred as to be pointless. E.g. many times I'd be fixing a bug (technically OpEx) but that would often lead to some new features ideas, or ways to structure the software to make it easier to add new features (technically CapEx). Software is fundamentally different from capital expenditures in other areas, and assuming a 5 year straightline depreciation schedule for software is laughably absurd.What other sort of capital expenditure has you do releases every day, or requires 24/7 monitoring? I would argue that the business of software has changed so drastically over the past 20 or so years that it makes much more sense just to categorize it as OpEx by default (for both tax and GAAP purposes), and only have it be capitalized as CapEx for very small and specific reasons.\n \nreply",
      "What we do is enforce that everyone keeps one ticket in JIRA as in progress and use a timekeeping add on. The tickets role up to epics and initiatives. I review each top level initiative and epic with finance and they deem it capitalizable or not. Then we add a haircut. It\u2019s really not that much work. We have an hour meeting monthly to work it out but I make sure to exclude my mainline engineers. They don\u2019t need that\n \nreply",
      "> What other sort of capital expenditure has you do releases every day, or requires 24/7 monitoring?Quite a lot of them actually. If I spend $$$$ setting up a car factory with a big production line, I'm going to have people monitoring it 24/7. If I build an airport, I'm going to have air traffic controllers working 24/7. And so on.Of course, the air traffic controllers didn't build the runway, and the construction crew don't direct air traffic, so the whole situation is much less ambiguous.\n \nreply",
      "> I'm going to have people monitoring it 24/7. If I build an airport, I'm going to have air traffic controllers working 24/7. And so on.> Of course, the air traffic controllers didn't build the runway, and the construction crew don't direct air traffic, so the whole situation is much less ambiguous.That is precisely why those salaries are NOT capex\n \nreply",
      "How exactly does the construction of an airport (runway, terminals, parking, etc.) satisfy \"releases every day\" during the construction?  I could see if it were adding a runway or a terminal, but until at least some of the infrastructure is there it's not exactly usable to the end user, the public, as say a stand-in definition for \"released.\"\n \nreply",
      "The entire thing is nuts.And no one thinks it was sensible.The only reason it exists is for political games by Trump 1.Now imagine all the nonsense that\u2019s gonna go into the much bigger Trump 2 tax cut bill.\n \nreply",
      "So if you\u2019re just maintaining a software, that\u2019s already used then you\u2019re good.I used to support this change because I thought that it would fairly make the software industry like many other industries who have to pay this kind of amortization for R&D and I believe that there would be carve outs for small organization so that really large ones are the only ones who bear the cost.I also believed it unlikely that this would be enforced or audited before there were such corrections or refinement to the original language.So the way I viewed it was it\u2019s basically a higher tax for giant software companies, but everyone else will be unaffected by it so we shouldn\u2019t worry.However, I also now support repealing or changing it because whether or not it has ever or was ever gonna be enforced or audited, it\u2019s ended up causing a lot of disruption across the entire software industry. So much so that it actually looks more like an unfair penalty against software development than anything else now unfortunately.So I\u2019ll definitely be signing that little petition under my US corporation.\n \nreply"
    ],
    "link": "item?id=44226145",
    "first_paragraph": ""
  },
  {
    "title": "Containerization is a Swift package for running Linux containers on macOS (github.com/apple)",
    "points": 280,
    "submitter": "gok",
    "submit_time": "2025-06-09T20:53:29 1749502409",
    "num_comments": 125,
    "comments_url": "https://news.ycombinator.com/item?id=44229348",
    "comments": [
      "This is the most surprising and interesting part, imo:> Contributions to `container` are welcomed and encouraged. Please see our main contributing guide for more information.This is quite unusual for Apple, isn't it? WebKit was basically a hostile fork of KHTML, Darwin has been basically been something they throw parts of over the wall every now and then, etc.I hope this and other projects Apple has recently put up on GitHub see fruitful collaboration from user-developers.I'm a F/OSS guy at heart who has reluctantly become a daily Mac user due to corporate constraints that preclude Linux. Over the past couple of years, Apple Silicon has convinced me to use an Apple computer as my main laptop at home (nowadays more comparable, Linux-friendly alternatives seem closer now than when I got my personal MacBook, and I'm still excited for them). This kind of thing seems like a positive change that lets me feel less conflicted.Anyway, success here could perhaps be part of a virtuous cycle of increasing community collaboration in the way Apple engages with open-source. I imagine a lot of developers, like me, would both personally benefit from this and respect Apple for it.\n \nreply",
      "It's not that surprising. Much of Swift and its frameworks are contributed by the open source community.\n \nreply",
      "That's true, but I always thought of Swift as exceptional in this because Swift is a programming language, and this has become the norm for programming languages in my lifetime.If my biases are already outdated, I'm happy to learn that. Either way, my hopes are the same. :)\n \nreply",
      "Jai has been one exception I can think of here. It hasn\u2019t been publicly released yet, either (you can email/request pre-release access, though)\n \nreply",
      "> I'm a F/OSS guy at heart who has reluctantly become a daily Mac user due to corporate constraints that preclude LinuxI suspect this move was designed to stop losing people like you to WSL.\n \nreply",
      "As a long-time Linux user, I can confidently say that the experience of using a M1 Pro is significantly superior to WSL on Windows!I can happily use my Mac as my primary machine without much hassle, just like I would often do with WSL.\n \nreply",
      "Since this is touching Linux, and Linux is copy left, they _have_ to do this.\n \nreply",
      "The comment was about them welcoming contributions, not making it open source.\n \nreply",
      "In addition to the other comments about the fact that this wasn't forced to adopt the GPL, even if it were, there's nothing in the license that forces you to work with the community to take contributions from the public. You can have an entirely closed development process, take no feedback, accept no patches, and release no source code until specifically asked to do so.They don't have to do literally any of this.\n \nreply",
      "Right! The exciting thing is the approach, not the license.\n \nreply"
    ],
    "link": "https://github.com/apple/containerization",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Containerization is a Swift package for running Linux containers on macOS.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.The Containerization package allows applications to use Linux containers.\nContainerization is written in Swift and uses Virtualization.framework on Apple silicon.Containerization provides APIs to:Please view the API documentation for information on the Swift packages that Containerization provides.Containerization executes each Linux container inside of its own lightweight virtual machine. Clients can create dedicated IP addresses for every container to remove the need for individual port forwarding. Containers achieve sub-second start times using an optimized Linux kernel configuration and a minimal root filesystem with a lightweight in"
  },
  {
    "title": "Apple announces Foundation Models and Containerization frameworks, etc (apple.com)",
    "points": 500,
    "submitter": "thm",
    "submit_time": "2025-06-09T17:44:16 1749491056",
    "num_comments": 324,
    "comments_url": "https://news.ycombinator.com/item?id=44226978",
    "comments": [
      "I watched the video and it seems they are statically linking atop musl to build their lightweight VM layer. I guess the container app itself might use glibc, but will the musl build for the VM itself cause downstream performance issues? I'm no expert in virtualization to be able to understand if this should be a concern or not.See also:- https://edu.chainguard.dev/chainguard/chainguard-images/abou...- https://andygrove.io/2020/05/why-musl-extremely-slow/\n \nreply",
      "Okay, the AI stuff is cool, but that \"Containerization framework\" mention is kinda huge, right? I mean, native Linux container support on Mac could be a game-changer for my whole workflow, maybe even making Docker less of a headache.\n \nreply",
      "FWIW, here are the repos for the CLI tool [1] and backend [2]. Looks like it is indeed VM-based container support (as opposed to WSLv1-style syscall translation or whatever):  Containerization provides APIs to:\n  [...]\n  - Create an optimized Linux kernel for fast boot times.\n  - Spawn lightweight virtual machines.\n  - Manage the runtime environment of virtual machines.\n\n[1] https://github.com/apple/container\n[2] https://github.com/apple/containerization\n \nreply",
      "WSLv1 never supported a native docker (AFAIK, perhaps I'm wrong?)That said, I'd think apple would actually be much better positioned to try the WSL1 approach.  I'd assume apple OS is a lot closer to linux than windows is.\n \nreply",
      "Yeah, it probably would be feasible to dust off the FreeBSD Linux compatibility layer[1] and turn that into native support for Linux apps on Mac.I think Apple\u2019s main hesitation would be that the Linux userland is all GPL.[1]: https://docs.freebsd.org/en/books/handbook/linuxemu/\n \nreply",
      "This doesn't look like WSL1. They're not running Linux syscalls to the macOS kernel, but running Linux in a VM, more like the WSL2[0] approach.[0] https://devblogs.microsoft.com/commandline/announcing-wsl-2/...\n \nreply",
      "It's impossible to have \"native\" support for Linux containers on macOS, since the technology inherently relies on Linux kernel features. So I'm guessing this is Apple rolling out their own Linux virtualization layer (same as WSL). Probably still an improvement over the current mess, but if they just support LXC and not Docker then most devs will still need to install Docker Desktop like they do today.\n \nreply",
      "Apple has had a native hypervisor for some time now. This is probably a baked in clone of something like https://mac.getutm.app/ which provides the stuff on top of the hypervisor.\n \nreply",
      "In case you're wondering, the Hypervisor.framework C API is really neat and straightforward:1. Creating and configuring a virtual machine:    hv_vm_create(HV_VM_DEFAULT);\n\n2. Allocating guest memory:    void* memory = mmap(...);\n    hv_vm_map(memory, guest_physical_address, size, HV_MEMORY_READ | HV_MEMORY_WRITE | HV_MEMORY_EXEC);\n\n3. Creating virtual CPUs:    hv_vcpu_create(&vcpu, HV_VCPU_DEFAULT);\n\n4. Setting registers:    hv_vcpu_write_register(vcpu, HV_X86_RIP, 0x1000); // Set instruction pointer\n    hv_vcpu_write_register(vcpu, HV_X86_RSP, 0x8000); // Stack pointer\n\n5. Running guest code:    hv_vcpu_run(vcpu);\n\n6. Handling VM exits:    hv_vcpu_exit_reason_t reason;\n    hv_vcpu_read_register(vcpu, HV_X86_EXIT_REASON, &reason);\n \nreply",
      "One of the reasons OrbStack is so great is because they implement their own hypervisor: https://orbstack.dev/Apple\u2019s stack gives you low-level access to ARM virtualization, and from there Apple has high-level convenience frameworks on top. OrbStack implements all of the high-level code themselves.\n \nreply"
    ],
    "link": "https://www.apple.com/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/",
    "first_paragraph": "Text of this articleJune 9, 2025PRESS RELEASEApple supercharges its tools and technologies for developers to foster creativity, innovation, and designAccess to the on-device Apple Intelligence model, large language model integration in Xcode, and an elegant new software design across Apple platforms give developers everything they need to build beautiful modern apps with speed and confidenceCUPERTINO, CALIFORNIA Apple today announced new technologies and enhancements to its developer tools to help developers create more beautiful, intelligent, and engaging app experiences across Apple platforms. A beautiful new software design brings more focus to content, and delivers more expressive and delightful experiences across iOS 26, iPadOS 26, macOS Tahoe 26, watchOS 26, and tvOS 26,1 while keeping them all instantly familiar. The Foundation Models framework joins a suite of tools that allow developers to tap into on-device intelligence, and Xcode 26 leverages large language models like ChatG"
  },
  {
    "title": "Sly Stone has died (go.com)",
    "points": 145,
    "submitter": "brudgers",
    "submit_time": "2025-06-09T21:42:25 1749505345",
    "num_comments": 13,
    "comments_url": "https://news.ycombinator.com/item?id=44229841",
    "comments": [
      "One story I heard of his influence was that Stevie Wonder did a guest spot in a Sly & the Family Stone gig and could feel the energy of the whole place, heaving.Took that feeling and with a new record deal giving him creative control did Superstition, Higher Ground and all those classics.It's hard to be cynical enough about rock history you see on tv, but it's at least plausible that one genius can inspire another, thinking of a Haydn & Mozart kind of thing.\"If You Want Me to Stay\" probably my favourite Sly Stone track.I never got around to listening to his stuff with Funkadelic, maybe today is that day.\n \nreply",
      "Stevie Nicks wrote Dreams hiding in Sly Stone's basement den.He led the first popular racially integrated rock band and is among the 3 biggest stars in funk.\n \nreply",
      "Their performances were certainly lively. By the time this one ends, half the audience is dancing on stage with them: https://youtu.be/4URogrXiKsI\n \nreply",
      "Everyone should go watch Sly Lives! - The Burden of Black Genius\n \nreply",
      "RIP KingPlease listen to \"There's a riot goin on\"\n \nreply",
      "I was young, with all of it yet to unfold, but I have to say, the summer of 1969 was a helluva thing.Stand!\nFor the things you know are right\nIt's the truth that the truth makes them so uptighthttps://www.youtube.com/watch?v=Q49vjFN6Fsw\n \nreply",
      "Great album.Worth mentioning, I think, that the album title is a response to Marvin Gaye's What's Going On which came out earlier that year (1971).\n \nreply",
      "Painfully timely today in the United States.\n \nreply",
      "I became a fan of base ever since \"Dance to the Music\". Thank you, Sly, for the great music!\n \nreply",
      "RIP legend!\n \nreply"
    ],
    "link": "https://abcnews.go.com/US/sly-stone-pioneering-leader-funk-band-sly-family/story?id=122666345",
    "first_paragraph": "Sly and the Family Stone entered the Rock and Roll Hall of Fame in 1993.Sly Stone, the pioneering leader of the funk band bearing his name, Sly and the Family Stone, has died, according to his family. Stone was 82 years old.\"After a prolonged battle with COPD and other underlying health issues, Sly passed away peacefully, surrounded by his three children, his closest friend, and his extended family,\" his family said in a statement. \"While we mourn his absence, we take solace in knowing that his extraordinary musical legacy will continue to resonate and inspire for generations to come.\"Stone, whose real name was Sylvester Stewart, formed a band with his brother Freddie and sisters Loretta and Rose at an early age. The band played gospel music, seemingly a far cry from the funk and psychedelia he would later become known for, but Sly and the Family Stone would become known for its blending of music styles.Sly Stone would answer simply when writing in his 2023 memoir, \"Thank You (Falettin"
  },
  {
    "title": "Why agents are bad pair programmers (searls.co)",
    "points": 23,
    "submitter": "sh_tomer",
    "submit_time": "2025-06-09T23:36:23 1749512183",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=44230838",
    "comments": [
      "Pair programming is also not suitable for all casesMaybe not for many casesI mentioned this elsewhere but I find it absolutely impossible to get into a good programming flow anymore while the LLM constantly interrupts me with suggested autocompletes that I have to stop, read, review, and accept/rejectIt's been miserable trying to incorporate this into my workflow\n \nreply",
      "Second this. My solution is to have a 'non-AI' IDE and then a Cursor/VS Code to switch between. Deep work cannot be achieved by chatting with the coding bots, sorry.\n \nreply",
      "You should try aider! This is my workflow, essentially\n \nreply",
      "> Deep work cannot be achieved by chatting with the coding bots, sorry....by you. Meanwhile, plenty of us have found a way to enhance our productivity during deep work. No need for the patronization.\n \nreply",
      "I don't believe you experience deep work the same way I do thenIn my mind you cannot do deep work while being interrupted constantly, and LLM agents are constant interruptions\n \nreply",
      "Thirded. It was just completely distracting and I had to turn it off. I use AI but not after every keystroke, jeez.\n \nreply",
      "But but but... \"we are an AI-first company\".Yeah, nah. Fourthed!\n \nreply",
      "> AI-first companyDoes anybody introduce itself like that?It's like when your date sends subtle signals, like kicking sleeping tramps in the street and snorting the flour over bread at the restaurant.(The shocking thing is that the expression would even make sense when taken properly - \"we have organized our workflows through AI-intelligent systems\" -, while at this time it easily means the opposite.)\n \nreply",
      "I recently got a new laptop and had to setup my IDE again.After a couple hours of coding something felt \"weird\" - turns out I forgot to login to GitHub Copilot and I was working without it the entire time. I felt a lot more proactive and confident as I wasn't waiting on the autocomplete.Also, Cursor was exceptional at interrupting any kind of \"flow\" - who even wants their next cursor position predicted?I'll probably keep Copilot disabled for now and stick to the agent-style tools like aider for boilerplate or redundant tasks.\n \nreply",
      "> who even wants their next cursor position predictedI'm fascinated by how different workflows are. This single feature has saved me a staggering amount of time.\n \nreply"
    ],
    "link": "https://justin.searls.co/posts/why-agents-are-bad-pair-programmers/",
    "first_paragraph": "LLM agents make bad pairs because they code faster than humans think.I'll admit, I've had a lot of fun using GitHub Copilot's agent mode in VS Code this month. It's invigorating to watch it effortlessly write a working method on the first try. It's a relief when the agent unblocks me by reaching for a framework API I didn't even know existed. It's motivating to pair with someone even more tirelessly committed to my goal than I am.In fact, pairing with top LLMs evokes many memories of pairing with top human programmers.The worst memories.Memories of my pair grabbing the keyboard and\u2014in total and unhelpful silence\u2014hammering out code faster than I could ever hope to read it. Memories of slowly, inevitably becoming disengaged after expending all my mental energy in a futile attempt to keep up. Memories of my pair hitting a roadblock and finally looking to me for help, only to catch me off guard and without a clue as to what had been going on in the preceding minutes, hours, or days. Memori"
  },
  {
    "title": "Show HN: Munal OS: a graphical experimental OS with WASM sandboxing (github.com/askannz)",
    "points": 173,
    "submitter": "Gazoche",
    "submit_time": "2025-06-09T17:34:29 1749490469",
    "num_comments": 66,
    "comments_url": "https://news.ycombinator.com/item?id=44226879",
    "comments": [
      "> Every iteration of the loop polls the network and input drivers, draws the desktop interface, runs one step of each active WASM application, and flushes the GPU framebuffer.This is really interesting and I was wondering how you implemented that using Wasmi. Seems like the code for that is here:https://github.com/Askannz/munal-os/blob/2d3d361f67888cb2fe8...It might interest you that newer versions of Wasmi (v0.45+) extended the resumable function call feature to make it possible to yield upon running out of fuel:\nhttps://docs.rs/wasmi/latest/wasmi/struct.TypedFunc.html#met...Seeing that you are already using Wasmi's fuel metering this might be a more efficient or failure proof approach to execute Wasm apps in steps.An example for how to do this can be found in Wasmi's own Wast runner:\nhttps://github.com/wasmi-labs/wasmi/blob/019806547aae542d148...\n \nreply",
      "Thanks again for making Wasmi :)> It might interest you that newer versions of Wasmi (v0.45+) extended the resumable function call feature to make it possible to yield upon running out of fuel:That is really interesting! I remember looking for something like that in the Wasmi docs at some point but it must have been before that feature was implemented. I would probably have chosen a different design for the WASM apps if I had it.\n \nreply",
      "I am really sorry I have waited so long to extend Wasmi's resumable calls with this very useful feature. :S\nFeel free to message me if you ever plan to adjust your design to make use of it.\n \nreply",
      "Not OP, but I'm confused how this would be helpful. You're saying for example, he can use this function to create a coroutine out of a function, begin it, and if the function fails by e.g. running out of memory, you can give the module more memory and then resume the coroutine? If so, how is that different than what naturally happens? Does wasm not have try/catch? Also, wouldn't the module then need to back up manually and retry the malloc after it failed? I'm so lost.\n \nreply",
      "Great question!Wasmi's fuel metering can be thought of as is there was an adjustable counter and for each instruction that Wasmi executes this counter is decreased by some amount. If it reached 0 the resumable call will yield back to the host (in this case the OS) where it can be decided how to, or if, the call shall be resumed.For efficiency reasons fuel metering in Wasmi is not implemented as described above but I wanted to provide a simple description.With this, one is no longer reliant on clocks or on other measures to provide each call its own time frame by providing an amount of fuel for each Wasm app that can be renewed (or not) when it runs out of fuel. So this is useful for building a Wasm scheduler.\n \nreply",
      "We used fuel metering with wasmtime, but that made everything quite slow, certain things veeery slow.How is the performance when using fuel with wasmi?We are considering to use epoch counter, but for now we just turned fuel off.\n \nreply",
      "Wasmtime's epoch system was designed specifically to have a much, much lower performance impact than fuel metering, at the cost of being nondeterministic. Since different embeddings have different needs there, wasmtime provides both mechanisms. Turning epochs on should be trivial if your system provides any sort of concurrency: https://github.com/bytecodealliance/wasmtime/blob/main/examp...\n \nreply",
      "I don't know how fuel metering in Wasmtime works and what its overhead is but keep in mind that Wasmi is an interpreter based Wasm runtime whereas Wasmtime generates machine code (JIT).In past experiments I remember that fuel metering adds roughly 5-10% overhead to Wasmi executions. The trick is to not bump or decrease a counter for every single executed instruction but instead to group instructions together in so-called basic blocks and bump a counter for the whole group of instructions.This is also the approach that is implemented by certain Wasm tools to add fuel metering to an existing Wasm binary.\n \nreply",
      "I had no idea what fuel is until this discussion.What's the rationale? Just preventing infinite loops from hanging the host?If the inefficiency is the counter, what if you just calculated an instruction offset - start < threshold every once in a while?This probably makes no sense, ignore it, I'm way in over my head.[1] https://github.com/bytecodealliance/wasmtime/issues/4109[2] https://github.com/bytecodealliance/wasmtime/blob/main/examp...\n \nreply",
      "Yes, rational is to provide a pragmatic and efficient solution to infinite loops.There is a variety of ways to implement fuel metering with varying trade-offs, e.g. performance, determinism and precision.In this comment I roughly described how Wasmi implements its fuel metering:\nhttps://news.ycombinator.com/item?id=44229953Wasmi's design focuses on performance and determinism but isn't as precise since instructions are always considered as group.\n \nreply"
    ],
    "link": "https://github.com/Askannz/munal-os",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        An experimental operating system fully written in Rust, with a unikernel design, cooperative scheduling and a security model based on WASM sandboxing.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.An experimental operating system fully written in Rust, with a unikernel design, cooperative scheduling and a security model based on WASM sandboxing.\n\n\nFeatures:Munal OS started as a toy project to practice systems programming, and over the years morphed into a full-blown OS and a playground to explore new ideas. It aims to re-examine principles of OS design, and see how much is really needed today to make a functional OS, and where shortcuts can be taken using modern tools. The design has no pretention to be superior to anything else, rather it is an experiment"
  },
  {
    "title": "Show HN: An open-source rhythm dungeon crawler in 16 x 9 pixels (github.com/jgalecki)",
    "points": 16,
    "submitter": "jgalecki",
    "submit_time": "2025-06-06T10:20:50 1749205250",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=44199408",
    "comments": [
      "I hope you'll submit a presentation for Roguelike Celebration 2025. Call for presenters ends on June 30th. I know you don't claim the work to be rogue-ish, but it is, and would fit the conference perfectly.\n \nreply",
      "> the Tiny Mass Games project, a loose collective of game devs focused on creating polished short-form games in two-month dev cyclesWhat software is most often used by these persons? I assume pico8?\n \nreply",
      "Very creative - the size means you could do all kinds of creative things with it- reminds me of \"snake in favicon\" and making games in a font with harfbuzz etc\n \nreply"
    ],
    "link": "https://github.com/jgalecki/qrawl-tiny-mass-disco",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A rhythm dungeon crawler in 16 x 9 pixels. Made in Godot.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Hello! Welcome to QRawl: Tiny Mass Disco, a 16x9 rhythm dungeon crawler. This game was created as part of the the Tiny Mass Games project, a loose collective of game devs focused on creating polished short-form games in two-month dev cycles. This game came out of our tenth season, and I decided to open-source the code after completing it. The official web version of the game can be found at https://joshuagalecki.itch.io/qrawl-tiny-mass-disco.There are two important things to understand in terms of designing a rhythm dungeon crawler. The first is the rhythm part of it. For the basics of the Conductor class and creating a rhythm game, I'll refer you to fiz"
  },
  {
    "title": "Apple introduces a universal design across platforms (apple.com)",
    "points": 440,
    "submitter": "meetpateltech",
    "submit_time": "2025-06-09T17:09:47 1749488987",
    "num_comments": 712,
    "comments_url": "https://news.ycombinator.com/item?id=44226612",
    "comments": [
      "Oh no. It looks like every button and menu is now a translucent layer, so that any noise from the background shows through and muddles the text. This seems like an accessibility nightmare.Translucent layers generally make software unusable for me. In the video, I saw several instances that would be really really bad for me, where I\u2019d be straining to understand the text. Looks really cool and futuristic though. Just like a movie. Big whoop.I\u2019m autistic, but this won\u2019t only affect autistic people. A lot of people are going to have problems with this. I hope there\u2019s a very prominent way to turn it off.\n \nreply",
      "This is also likely a performance nightmare. Funny that they mention that \"new hardware has enabled us to...\" which means that this will perform poorly on old devices.At a previous company, we were forbidden from using translucency (with a few exceptions) because of the performance cost of blending. There are debugging tools we'd use fairly often to confirm that all layers were opaque.\n \nreply",
      "Unlikely. Frosted glass blur was introduced almost twelve years ago in iOS 7, and was supported all the way down to the iPhone 4. Many apps like control center have used a full screen blur without any performance issues for a long time.Apple at the time created their own 'approximate gaussian blur' algorithm specifically to enable this, and it ran crazy fast on devices where a simple gaussian blur would barely achieve double digit FPS. Even if this 'liquid glass' effect is heavier to compute, on the hardware we have today it will be a negligible performance concern.\n \nreply",
      "> Unlikely. Frosted glass blur was introduced almost twelve years ago in iOS 7, and was supported all the way down to the iPhone 4. Many apps like control center have used a full screen blur without any performance issues for a long time.\"Without any performance issues\"? Entirely false - reviews at the time noted iOS 7 dramatically reduced battery life - all across the board for Apple devices, even for the then latest iPhone 5S and 5c (https://arstechnica.com/gadgets/2013/09/ios-7-thoroughly-rev...).The abuse of transparency/translucency in the UI was the primary reason - you could go to Accessibility settings and disable animations + transparency/translucency and get notable increases in both runtime speed of the OS UI and battery life.\n \nreply",
      "Memory unlocked: the awful slog that was an iPhone 4S with iOS >= 7.\n \nreply",
      "You can\u2019t judge battery life and performance off a .0 release when the priority is on delivering features with the minimum number of showstopper bugs. At least wait until the .1.It has been like this for every Apple release for over 20 years.\n \nreply",
      "Indeed, I remember the switch to iOS 7, for me battery life seemed to get slightly worse but there were conflicting opinions at the time. It's fresh in my memory as it was around the same time I binged on all five seasons of Breaking Bad :)I's also true that iOS 7 made the 4/4S seem much slower, but the frosted glass effect still ran at 60FPS - that was my point. It was really impressive at the time. Though unless you spent hours sliding the control center up and down, it's hard to blame the blur effect for the reduced battery life, as it rarely appeared inside apps. Most likely the result of increased OS bloat and proliferation of background services.\n \nreply",
      "This isn't just a gaussian blur though, there's raytracing and refractions happening. The OS is becoming a low-key high-fidelity video game.\n \nreply",
      "From what I've seen,the refractions happen in predictable contexts so I suspect that they'll be able to create shaders, etc that will limit the performance hit\n \nreply",
      "it looks like old school 2D bumpmapping to me, it's not expensive if you don't overengineer it\n \nreply"
    ],
    "link": "https://www.apple.com/newsroom/2025/06/apple-introduces-a-delightful-and-elegant-new-software-design/",
    "first_paragraph": "Text of this articleJune 9, 2025PRESS RELEASEApple introduces a delightful\u00a0and elegant new software designA universal design across platforms brings more focus to content and a new level of vitality while maintaining the familiarity of Apple\u2019s softwareCUPERTINO, CALIFORNIA Apple today previewed a beautiful new software design that makes apps and system experiences more expressive and delightful while being instantly familiar. It\u2019s crafted with a new material called Liquid Glass. This translucent material reflects and refracts its surroundings, while dynamically transforming to help bring greater focus to content, delivering a new level of vitality across controls, navigation, app icons, widgets, and more. For the very first time, the new design extends across platforms \u2014 iOS 26, iPadOS 26, macOS Tahoe 26, watchOS 26, and tvOS 261 \u2014 to establish even more harmony while maintaining the distinct qualities that make each unique.\u201cAt Apple, we\u2019ve always believed in the deep integration of ha"
  },
  {
    "title": "The Xerox Alto, Smalltalk, and Rewriting a Running GUI (2017) (righto.com)",
    "points": 34,
    "submitter": "rbanffy",
    "submit_time": "2025-06-09T21:25:44 1749504344",
    "num_comments": 11,
    "comments_url": "https://news.ycombinator.com/item?id=44229694",
    "comments": [
      "I'm generally shocked that people aren't profoundly shocked and saddened by what has been lost with these kind of \"modifiable while running\" systems like Xerox Alto and the Lisp Machines.Modern software frameworks are so shockingly bad and uninteractive that we now have to rely another layer of bullshit with LLMs just to get us to be half as productive as these envs. : ((okay okay REPL-based things are getting better, but still nowhere close to what Lisp even w/ Emacs can do.)\n \nreply",
      "That model stops working as soon as you try to distribute software at scale. You need some kind of standardisation and baseline. Otherwise your customisations conflict with someone else's customisations, with consequences that vary from mildly annoying to catastrophic. And the whole idea of shared software collapses.It would work if you had strict access control to each feature in a common code base. But Git hadn't been invented yet.The other issue is performance. Compiled ST isn't particularly slow, but you lose the modifiability. Interpreted ST has a mixed profile - some features are slow, some are fast - but generally it was slow compared to C.Today that doesn't matter so much, but it was a drawback at the time.It's a seductive model and I totally get the appeal. But it's not quite as straightforwardly superior as it might appear to be.\n \nreply",
      "Does Erlang have these same properties? From what I hear, it works great for distributed systems and modifying-while-running.\n \nreply",
      "The \"modifiable image\" model to me poses a huge problem of just not knowing what has changed and what is going on. I believe that things like Pharoh integrate into version control, but just on a fundamental level being able to throw away everything and go back to some notion of a clean state is very helpful when working on a mutable system.Distributed version control and CI makes it way more tractable to work on even a small team IMO.I would be very curious to see someone stream a \"real\" workflow using something like Pharoh or other smalltalk-like envs though. There's a bunch of short clips showing \"beginner\" demos but for such a visual system I would expect there to be more detailed presentations of the actual workflow.\n \nreply",
      "In person, on the real screen, is the font easier to read? I don\u2019t understand why they didn\u2019t go with something more\u2026 \u201cplain\u201d?\n \nreply",
      "This font is called \"Cream\" and was designed and created by Bob Flegal to look identical on both screens and laser printers.cf. https://squeak-dev.squeakfoundation.narkive.com/Rs0CrNOk/fon...\n \nreply",
      "Well, the CRT on our Alto is pretty old, so the text is a lot worse in person. (That's why I used screenshots instead of photos.) But I think that even with a good monitor, the Smalltalk font would be quirky at best.\n \nreply",
      "It was the late 70s/early 80s, so a certain amount of twee whimsy was obligatory.\n \nreply",
      "I don't know, but I've wondered whether they were trying to signal or encourage (in demos or usage), that this was different, than familiar business computers.\n \nreply",
      "I imagine it would look a lot nicer on a CRT vs rendered in high resolution on a LED display.\n \nreply"
    ],
    "link": "https://www.righto.com/2017/10/the-xerox-alto-smalltalk-and-rewriting.html",
    "first_paragraph": "Computer history, restoring vintage computers, IC reverse engineering, and whateverWe succeeded in running the Smalltalk-76 language on our vintage Xerox Alto;\nthis blog post gives a quick overview of the Smalltalk environment.\nOne unusual feature of Smalltalk is you can view and modify the system's code while the system is running. I demonstrate this by modifying the scrollbar code on a running system.Smalltalk is a highly-influential programming language and environment that introduced the term \"object-oriented programming\" and was the ancestor of modern object-oriented languages.1\nThe Alto's Smalltalk environment is also notable for its creation of the graphical user interface with the desktop metaphor, icons, scrollbars, overlapping windows, popup menus and so forth. When Steve Jobs famously visited Xerox PARC, the Smalltalk GUI inspired him on how the Lisa and Macintosh should work.2Our Xerox Alto running Smalltalk-76.The Alto was a revolutionary computer designed at Xerox PARC in"
  },
  {
    "title": "What methylene blue can (and can\u2019t) do for the brain (neurofrontiers.blog)",
    "points": 92,
    "submitter": "wiry",
    "submit_time": "2025-06-06T14:15:28 1749219328",
    "num_comments": 56,
    "comments_url": "https://news.ycombinator.com/item?id=44201143",
    "comments": [
      "Methylene Blue is fascinating because it has been present in alternative medicine, biohacking, and nootropics forums for decades. It seems everyone in those communities discovers it eventually, thinks it must be a miracle substance, and then either feels nothing or has some initial positive effects that are either placebo or diminish quickly with tolerance.From the anecdotes I\u2019ve read over the years, very few people continue taking it. They either feel nothing, get some worrying side effects, or the initial effects they experienced (or placebo) disappear after a couple days or weeks. The most positive posts seem to be correlated with people taking a dozen medications and supplements at the same time, so it\u2019s impossible to know what\u2019s causing their experience.Another ever-popular medication in these communities is Selegiline: Also an MAOI but selective for MAO-B at low doses (warning: it\u2019s easier to reach MAO-A inhibition with repeated dosing, especially sublingual, than many internet sources claim). This one draws in people who are in their \u201cdopamine explains everything\u201d phase of learning neuroscience and think it must be a hack to get \u201cmore dopamine\u201d. Again, few people continue it and many are confused about why they end up fatigued or tired while taking it instead of turning into the guy from Limitless. Neuropharmacology isn\u2019t as simple as taking drugs to push neurotransmitter up.Selegiline was repurposed as an anti-depressant recently, but it\u2019s delivered transdermally and only showed efficacy at levels high enough to be a full MAOI.\n \nreply",
      "Pretty much accurate, this is also my perception.I think the whole \"nootropics\" and \"biohacking\" community would benefit from mandatory introductory reading to understand that disrupting homeostasis in a durable and meaningful way is actually darn hard to do without serious side effects.\n \nreply",
      "> understand that disrupting homeostasis in a durable and meaningful way is actually darn hard to doThis is a huge problem in online ADHD communities, too.The ADHD subreddits are a constant stream of people having \u201cWow I feel amazing\u201d reactions after taking their first stimulant dosage, followed a week later by complaints that it \u201cstopped working\u201d. It\u2019s a constant cycle of informing people that the euphoria they experienced was a side effect, not how they\u2019re going to feel for the rest of their life taking a stimulant.\n \nreply",
      "Yeah there's functionally no good solution besides occasional stimulant use and staying off them the rest of the time. I vaguely recall some literature that claimed many patients had basically no benefit by some period (believe over a year) which matches friends' anecdotal experience. Exceptions exist; they aren't super common.Direct dopamine regulation is just a crappy target for this. TAAR1 agonism may be a better target. I've heard some sketchy reports that things in the class of bromantane might be good options, as it acts to epigenetically upregulate dopamine synthesis rather than altering clearance, but not super well-investigated and noot bros are a little weird here (initial research chose it for a balance between physical work capacity increase vs. cognitive benefits, whereas a cognition-focused analogue might perform better.) HDAC inhibition is vaguely interesting but much too large a target.There are some possibilities to work on, but basically this remains a very unsolved problem, and rhetoric around tolerance often reminds me of the oxycodone \"pseudo-addiction\" language as much as anything. \"Your brain is dopamine-deficient!\" No, homeostasis means this probably isn't the case. There may be deficits in signaling but it's not an issue with the concentration of a neurotransmitter.\n \nreply",
      "Yeah I remember that high lasted for several weeks.\n \nreply",
      "https://www.thecut.com/article/supplements-made-me-lose-my-m...A recent cautionary tale about someone who took St. John's Wort because they didn't want to take antidepressants, then quit the SJW too quickly... which functionally put them into (prolonged, agonizing) SSRI withdrawal.\n \nreply",
      "SJW inhibits serotonin uptake and also has numerous other targets. It\u2019s a fundamental misunderstanding of the alternative medicine world to consider it safer or more gentle than SSRIs.\n \nreply",
      "Yeah, I thought it was ironic (and a little funny) that people promote it as an SSRI alternative even though it's just a less precise, less regulated SSRI. It's like telling someone to skip their quinine pills and chug a bunch of tonic water instead!\n \nreply",
      "Selegiline is also known as Emsam, the patches reportedly Sam Bankman-Fried was on, alongside ADHD meds. I recall reading how this may have been a large driver of his compulsive risk it all decision making that eventually brought it all down.\n \nreply",
      "Excellent summary. As someone who has taken both and spent an inordinate amount of time on Longecity, this is pretty spot on.\n \nreply"
    ],
    "link": "https://neurofrontiers.blog/what-methylene-blue-can-and-cant-do-for-the-brain/",
    "first_paragraph": "Welcome to another edition of \u201cbiohacking overreach or legitimate cure?\u201d \u2013 today in blue. Image credit: Ionut StefanIn recent months, a substance called methylene blue has once again made the rounds as a potential \u201ceverything\u201d booster, a \u201cwonder supplement\u201d claimed to improve your memory, give you more energy, cure mood problems and so on and so forth. Naturally, that tripped our \u201ctoo good to be true\u201d alarm. So we\u2019ve decided to sift through the scientific studies, see whether they live up to the hype, and find out if \u201cthere\u2019s no harm in trying it out\u201d (spoiler alert: not so harmless).And because we really seem to love disclaimers here, there\u2019s the one for today: the topic of methylene blue, like many similar ones dealing with health-related improvements, is nuanced and complex. Perhaps most importantly, the evidence needs to be interpreted in the context in which it was acquired. As you\u2019ll see more concretely later on, that means distinguishing between in vitro = Petri dish vs in vivo "
  },
  {
    "title": "Container: Apple's Linux-Container Runtime (github.com/apple)",
    "points": 57,
    "submitter": "jzelinskie",
    "submit_time": "2025-06-09T20:42:23 1749501743",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=44229239",
    "comments": [
      "Container runs OCI (docker) compatible by creating lightweight VMs.This repository houses the command-line interface which is powered by containerization[0], the Swift framework wrapping Virtualization.framework to implement an OCI runtime.[0]: https://github.com/apple/containerization\n \nreply",
      "I am going to show my ineptitude by admitting this, for the life of me I couldn\u2019t get around to implement the Mac Os native way to run linux VMs and used vm-ware fusion instead. [0]I\u2019m glad this more accessible package is available vs docker desktop on mac os or the aforementioned, likely to be abandoned vmware non enterprise license.[0] [apple virtualization docs](https://developer.apple.com/documentation/virtualization/cre...)\n \nreply",
      "Should probably merge with https://news.ycombinator.com/item?id=44229348\n \nreply",
      "I disagree, they are different, and that (containerization, not container here) is the more novel/interesting one imo. It'd be nice to focus the discussion more (though at present there are many confused comments there that think they're discussing the container tool).\n \nreply",
      "Oh, like OP I didn\u2019t see the difference. I believe the difference is:Container is a CLI toolContainerization is a framework\n \nreply",
      "Yes, container is like `docker` CLI: 'I am a developer and I want to run a container'; containerization is for packaging OCI image container sidecars into Swift .apps - you could distribute your app with postgres 'built in' (but running as a container), user doesn't need to ensure it's installed and running separately or anything.\n \nreply"
    ],
    "link": "https://github.com/apple/container",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A tool for creating and running Linux containers using lightweight virtual machines on a Mac. It's written in Swift, and optimized for Apple silicon. \n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.container is a tool that you can use to create and run Linux containers as lightweight virtual machines on your Mac. It's written in Swift, and optimized for Apple silicon.The tool consumes and produces OCI-compliant container images, so you can pull and run images from any standard container registry. You can push images that you build to those registries as well, and run the images in any other OCI-compliant application.container uses the Containerization Swift package for low level container, image, and process management.You need an Apple silicon Mac to run c"
  },
  {
    "title": "Las Vegas is embracing a simple climate solution: More trees (npr.org)",
    "points": 35,
    "submitter": "geox",
    "submit_time": "2025-06-10T00:21:40 1749514900",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=44231151",
    "comments": [
      "The tree-planting initiative in Las Vegas really resonated with me. For a long time, desert cities have been facing the unavoidable problem of extreme heat, especially in low-income neighborhoods where shade is scarce. I live in a southwestern city myself and have experienced that \u201curban heat island\u201d effect it really does feel like walking in an oven when there\u2019s no greenery around.Reading this piece reminded me of a time when I volunteered at a small community garden to help plant trees. It was a scorching day, but when we finally got those new saplings into the ground and saw the first patches of shade they created, it felt like hope was growing right there with them. Each tree is like a tiny cooling engine, a quiet way to push back against climate change.Las Vegas\u2019 example shows that even simple, nature-based solutions can bring so many layers of benefits: not just cooler temperatures, but also helping people save on living costs, easing the heat burden, and teaching kids real environmental stewardship through direct involvement. Urban greening isn\u2019t just beautification\u2014it\u2019s a matter of social justice too. Are there similar projects in your city? Or have you ever planted a tree yourself? I\u2019d love to hear your story.\n \nreply",
      "In Texas, local governments plant trees all the time. The problem is that they don't water them and they die.\n \nreply",
      "Isn't that what rain and rivers are for? I mean, the trees you cut down were alive somehow, right? Or, are they planting them in places there never were trees?\n \nreply",
      "Trees vary considerably in their water needs.  And even if you're planting species which fairly recently grew in the area - it's easy for a year or few of drought to kill off young trees, if those are not watered correctly and encouraged to establish large, deep root systems.\n \nreply",
      "With that said ... it's completely possible to have trees within a city, even in arid places.I've seen it with my eyes!\n \nreply",
      "Read the article. This isn't a climate solution, it's a solution to mitigate the effects of climate change on people, making them even more likely to go on with their wasteful ways.Don't get me wrong: planting trees is a good thing. But the word \"solution\" implies a reduced rate of increase of CO2 over time, which this will not do. We have to use far less energy and far less fossil fuels to actually do that, and shift away from consumeristic innovation, which no one will do. Instead, they'll just plant trees to keep them cooler.\n \nreply",
      "Should have done that 40 years ago.Sacramento planted 2.2M trees since 1975 and cooler than historical data (still reaches 90s and 100s)\n \nreply",
      "Best A/C I've ever had was a huge tree that put our house in Mountain View in permanent shade!It's always better - if possible - to stop something from happening than to try to counteract it afterwards.\n \nreply",
      "BBC - Climate change: Planting new forests 'can do more harm than good'- https://www.bbc.com/news/science-environment-53138178\n \nreply",
      "That's about as clicbait a title given the content as I can imagine.  I would summarize the article as:- Subsidy schemes can often cause problems where monoculture farmable tree crops can reduce biodiversity can cause problems.  But I think it's worth noting that replacing trees with another is not what I would call, or what most people likely think, when referring to new forests, and even if we ignore that point, the problem is not the new forests in general but the incentives used to cause it to happen.- Carbon sequestration may be overestimated because if the ground is already rich in carbon, some of that may be reduced so the overall additional effect of sequestration is less than one might assume.Neither of those are really in support of \"new forests can do more hard than good\" in my opinion.  They may be worth discussing, but this isn't a good start for a useful conversation on the BBC's part.\n \nreply"
    ],
    "link": "https://www.npr.org/2025/06/09/nx-s1-5340363/las-vegas-climate-change-solution-trees",
    "first_paragraph": "June 9-15:\u00a0How does climate change affect where and how we live?  The energy used to operate buildings results in more than a fourth of global carbon dioxide pollution. And climate change threatens communities with risks like floods and wildfire. So NPR is dedicating a week to stories about climate change solutions for living and building on a hotter planet. FromBy\u00a0\n      Yvette Fernandez\n    \n  \n                Last year, the city of Las Vegas reached a record 120 degrees during the peak of summer. The Clark County Coroner's Office found that heat was a factor in more than 500 deaths. Now, city, county and local advocates are planting thousands of trees to help bring down temperatures in the hottest neighborhoods. Trees can have a significant impact on mitigating heat.\n                \n                    \n                    Ryan Kellman/NPR\n                    \n                \nhide caption\nClimate change shapes where and how we live. That's why NPR is dedicating a week to stories a"
  },
  {
    "title": "Launch HN: Chonkie (YC X25) \u2013 Open-Source Library for Advanced Chunking",
    "points": 98,
    "submitter": "snyy",
    "submit_time": "2025-06-09T16:09:03 1749485343",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=44225930",
    "comments": [
      "We (https://www.definite.app/) have a use case I'd imagine is common for people building agents.When a user works with our agent, they may end up with a large conversation thread (e.g. 200k+ tokens) with many SQL snippets, query results and database metadata (e.g. table and column info).For example, if they ask \"show me any companies that were heavily engaged at one point, but I haven't talked to in the last 90 days\". This will pull in their schema (e.g. Hubspot), run a bunch of SQL, show them results, etc.I want to allow the agent to search previous threads for answers so they don't need to have the conversation again, but chunking up the existing thread is non-trivial (e.g. you don't want to separate the question and answer, you may want to remove errors while retaining the correction, etc.).Do you have any plans to support \"auto chunking\" for AI message[0] threads?0 - e.g. https://platform.openai.com/docs/api-reference/messages/crea...\n \nreply",
      ">  you may want to remove errors while retaining the correctionDouble clicking on this, are these messages you\u2019d want to drop from memory because they\u2019re not part of the actual content (e.g. execution errors or warnings)? That kind of cleanup is something Chonkie can help with as a pre-processing step.If you can share an example structure of your message threads, I can give more specific guidance. We've seen folks use Chonkie to chunk and embed AI chat threads \u2014 treating the resulting vector store as long-term memory. That way, you can RAG over past threads to recover context without redoing the conversation.P.S. If HN isn\u2019t ideal for going back and forth, feel free to send me an email at shreyash@chonkie.ai.\n \nreply",
      "> We've seen folks use Chonkie to chunk and embed AI chat threadsyep, that's what we're looking for. We'll give it a shot!I think it's worth creating a guide for this use case. Seems like something many people would want to do and the input should be very similar across your users.\n \nreply",
      "Do you have a benchmark for comparing different chunking methods?\nYour existing benchmark is to compare different libraries.\n \nreply",
      "We don't yet, but our library comes with a visualization tool that you can use to compare chunkers directly. https://docs.chonkie.ai/python-sdk/utils/visualizer\n \nreply",
      "You guys should steal the ideas I had in mind and partially implemented on https://github.com/zackify/revectSimilar to you I saw a lot of bloated projects out there. Mine is 90mb container.I want to do what your project does but in addition have extensions for every day apps that index into a db.Your private database for all ai interactions.I also have a cloud version using the mcp auth spec, but it\u2019s all for fun and probably not worth releasing.Do you have any plans to do further use cases such as this?\n \nreply",
      "We want to be the platform that connects documents to AI for all applications. Consequently, we want to cover all use cases, including the ones you mentioned :)\n \nreply",
      "I'm curious if chunking is different for embeddings vs. for \"agentic retrieval\" e.g. an AI or a person operates like a Librarian; they look up in an index at what resources to look up, get the relevant bits, then piece them together into a cohesive narrative whole \u2014 would we do any chunking at all for this, or does this purely rely on the way the DB is setup? I think for certain use cases, even a single DB record could be too large for context windows, so maybe chunking might need to be done to the record? (e.g. a db of research papers)\n \nreply",
      "Great questions!Chunking fundamentals remain the same whether you're doing traditional semantic search or agentic retrieval. The key difference lies in the retrieval strategy, not the chunking approach itself.For quality agentic retrieval, you still need to create a knowledge base by chunking documents, generating embeddings, and storing them in a vector database. You can add organizational structure here\u2014like creating separate collections for different document categories (Physics papers, Biology papers, etc.)\u2014though the importance of this organization depends on the size and diversity of your source data.The agent then operates exactly as you described: it queries the vector database, retrieves relevant chunks, and synthesizes them into a coherent response. The chunking strategy should still optimize for semantic coherence and appropriate context window usage.Regarding your concern about large DB records: you're absolutely right. Even individual research papers often exceed context windows, so you'd still need to chunk them into smaller, semantically meaningful pieces (perhaps by section, abstract, methodology, etc.). The agent can then retrieve and combine multiple chunks from the same paper or across papers as needed.The main advantage of agentic retrieval is that the agent can make multiple queries, refine its search strategy, and iteratively build context\u2014but it still relies on well-chunked, embedded content in the underlying vector database.\n \nreply",
      "> - Code Chunking: Chunks code files by creating an AST and finding ideal split points.I'd be interested to use it for SQL, did you try? Does it works well with it? I'm not familiar with the tree-sitter library\n \nreply"
    ],
    "link": "item?id=44225930",
    "first_paragraph": ""
  },
  {
    "title": "Go is a good fit for agents (hatchet.run)",
    "points": 120,
    "submitter": "abelanger",
    "submit_time": "2025-06-04T12:14:39 1749039279",
    "num_comments": 90,
    "comments_url": "https://news.ycombinator.com/item?id=44179889",
    "comments": [
      "Erlang is a way better fit for a distributed agent orchestration layer. You have a ton of dependencies, over network and maybe in userspace, you have a lot of inter-operability and reliability constraints, you want to hotswap code and capabilities at runtime, without degrading the overall system performance. And you get networking/distribution/async message passing for freehttps://github.com/arthurcolle/agents.erlI consider myself an expert in this relatively niche domain and welcome follow up, critiques, and even your most challenging problems. I love this area and I think distributed systems are coming back in a big way in this new era!\n \nreply",
      "If you don't mind me asking why would one use Erlang over Elixir?\n \nreply",
      "It doesn't feel different enough to merit a difference. Elixir is just a set of Erlang macros that turn one syntax into .beam that otherwise wouldn't turn into .beamElixir is way more productive to write/deal with (Phoenix vs. Erlang templating) maybe if you're a web dev, but at the end of the day you're dealing with the same exact same underlying architecture. If you're a prolog programmer, Erlang will feel nicer than if you're a ruby programmer.I have many packages published as Mix packages, and some published as rebar packages.Overall, ergonomics definitely feel nicer with Elixir, but I feel like by having it be portrayed as \"so different\" from Erlang, people don't pull open the Erlang/OTP docs, and don't look at the dozens of behaviors that already exist that usually solve your problem.Like, why is there a gen stage in Elixir but not in Erlang?If you wanna use the BEAM, you can use it. If they were more in sync, and provided OOTB in the same distribution, I'd always lean towards Elixir.Just feels weird that Elixir gets a bunch of street cred for what are fundamentally Erlang/OTP capabilities\n \nreply",
      "Erlang has better syntax than Elixir.But otherwise they are mostly the same: Elixir is just an Erlang reskin.So pretty much wherever you can use one, you can use the other.\n \nreply",
      "I came here to say that too.It already does well coordinating IoT networks. It's probably one of the most underestimated systems.The Elixir community has been working hard to be able to run models directly within BEAM, and recently, have added the capability for running Python directly.\n \nreply",
      "Haha I wrote https://github.com/stochastic-thread/snek.ex 10 yrs agoWhat are they doing with Python on the BEAM these days? I'm OOTL\n \nreply",
      "https://github.com/livebook-dev/pythonx\n \nreply",
      "+1 to the article.Along these lines, I'm building Dive:https://github.com/diveagents/diveWhen building a SaaS with a Go backend, it's nice to be able to have the option of the agents and workflows being in the same process. And being confident in the ability of that to scale well.While it's true that Go lacks good ML libraries, for some this isn't too consequential if your app is primarily using Anthropic or OpenAI and a database that offers semantic or hybrid search for RAG. The ML is done elsewhere. Plus it could be that you can leverage MCP servers and at that point you're language agnostic.Regarding the concurrency model approach with Go and agents, I initially baked a message based approach (a la the Actor model, with one goroutine per agent) into Dive Agents, but eventually found that this would be better implemented as another layer. So currently in Dive it's the user's choice on how to implement concurrency and whether to use messaging. But I anticipate building that back in as an optional layer.\n \nreply",
      "I'm not sure how valid most of these points are. A lot of the latency in an agentic system is going to be the calls to the LLM(s).From the article:\n\"\"\"\nAgents typically have a number of shared characteristics when they start to scale (read: have actual users):    They are long-running \u2014 anywhere from seconds to minutes to hours.\n    Each execution is expensive \u2014 not just the LLM calls, but the nature of the agent is to replace something that would typically require a human operator. Development environments, browser infrastructure, large document processing \u2014 these all cost $$$.\n    They often involve input from a user (or another agent!) at some point in their execution cycle.\n    They spend a lot of time awaiting i/o or a human.\n\"\"\"No. 1 doesn't really point to one language over another, and all the rest show that execution speed and server-side efficiency is not very relevant. People ask agents a question and do something else while the agent works. If the agent takes a couple seconds longer because you've written it in Python, I doubt that anyone would care (in the majority of cases at least).I'd argue Python is a better fit for agents, mostly because of the mountain of AI-related libraries and support that it has.> Contrast this with Python: library developers need to think about asyncio, multithreading, multiprocessing, eventlet, gevent, and some other patterns...Agents aren't that hard to make work, and you can get most of the use (and paying users) without optimizing every last thing. And besides, the mountain of support you have for whatever workflow you're building means that someone has probably already tried building at least part of what you're working on, so you don't have to go in blind.\n \nreply",
      "That's true from a performance perspective but, in building an agent in Go, I was thankful that I had extremely well-worn patterns to manage concurrency, backlogs, and backpressure given that most interactions will involve one or more transactions with a remote service that takes several seconds to respond.(I think you can effectively write an agent in any language and I think Javascript is probably the most popular choice. Now, generating code, regardless of whether it's an agent or a CLI tool or a server --- there, I think Go and LLM have a particularly nice chemistry.)\n \nreply"
    ],
    "link": "https://docs.hatchet.run/blog/go-agents",
    "first_paragraph": "We use cookies to ensure you get the best experience on our website. For more information on how we use cookies, please see our cookie policy.By clicking \"Accept\", you agree to our use of cookies.Learn more.On This PageSince you\u2019re here, you might be interested in checking out Hatchet \u2014 the platform for running background tasks, data pipelines and AI agents at scale.Alexander BelangerPublished on June 3, 2025Like seemingly everyone else on the planet, we\u2019ve been spending the last few months fussing over agents.In particular, we\u2019ve been seeing the adoption of agents drive the growth of our orchestration platform, so we have some insight into what sorts of stacks and frameworks \u2014 or lack thereof \u2014 work well here.One of the more interesting things we\u2019ve seen is a proliferation of hybrid stacks: a typical Next.js or FastAPI backend, coupled with an agent written in Go, even at a very early stage.As a long-time Go developer, this is rather exciting; here\u2019s why I think this will be a more co"
  },
  {
    "title": "Show HN: Somo \u2013 a human friendly alternative to netstat (github.com/theopfr)",
    "points": 84,
    "submitter": "hollow64",
    "submit_time": "2025-06-09T17:59:40 1749491980",
    "num_comments": 21,
    "comments_url": "https://news.ycombinator.com/item?id=44227207",
    "comments": [
      "Is there an option to disable the table mode (or at least horizontal lines, don't care about the others)? It's a lot of wasted space in the terminal if you have lots of connections open.\n \nreply",
      "somo | grep -v \u2500:)\n \nreply",
      "i\u2019ve typed netstat -pna so many times in my life using something else would totally ruin me\n \nreply",
      "I use netstat -nap instead !\n \nreply",
      "-tulpen for me. Easy to remember for Dutch speakers :)\n \nreply",
      "-tulpn here!\n \nreply",
      "Very nice. I constantly struggle to remember the correct parameters to netstat and this seems to return the information that I need in 90% of my use cases.\n \nreply",
      "Please see also `ss`https://linux.die.net/man/8/ss\n \nreply",
      "I find the output of `ss` very hard to read in comparison to netstat.\n \nreply",
      "Think it should be explicitly stated that it is not available on Mac OS as procfs does not support it\n \nreply"
    ],
    "link": "https://github.com/theopfr/somo",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A human-friendly alternative to netstat for socket and port monitoring on Linux.\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n\n\n\nIf you use a Debian OS go to releases and download the latest .deb release.Most of the time you will want to run this in sudo mode to see all processes and ports. By default, this is not possible when installed via cargo. But you can create a symlink so the binary can be run as root:To run somo just type:You can use the following flags to filter based on different attributes:With the --kill, -k flag you can choose to kill a process after inspecting the connections using an interactive selection option.\nYou can of course also apply filters and the kill-flag at the same time:\n        A human-friendly alternative to netstat for so"
  },
  {
    "title": "Doctors could hack the nervous system with ultrasound (ieee.org)",
    "points": 118,
    "submitter": "purpleko",
    "submit_time": "2025-06-09T14:27:30 1749479250",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=44224874",
    "comments": [
      "> But in people with diabetes, this sensing system is dysfunctional, and the liver releases glucose even when blood levels are already high, causing a host of health problems.I am pretty sure, that the dysfunctional glucose sensing and inappropriate liver glucose release are consequences and complications of diabetes, not the primary causes. Diabetes (Type 2) is primarily caused by insulin resistance combined with progressive beta cell dysfunction.Therefore, treating the liver to treat diabetes seems .... weird?\n \nreply",
      "As an analogy, when my driveway is covered in snow and ice, the root cause is precipitation. But my immediate need is to get my car out, so I shovel the drive.Yes, treating symptoms is not the ideal, but if you can fix the immediate need of getting blood sugar down, that is still helpful.\n \nreply",
      "In your story, your driveway was designed to be shoveled like the body is designed to deal with small amounts of sugar.Let's say we had a particularly bad winter that required the use of power tools, which had the effect of damaging the driveway. Your body on diabetes is like a damaged driveway.At some point you'll need to fix the damaged driveway. It will require a change in lifestyle while the driveway is being fixed, and perhaps even a change SOP's to reduce the risk of future damage.Most people never give up on the power tools (supplemental insulin). Most doctors don't know any better.\n \nreply",
      "I understand the treatment to address those secondary consequences and complications, not the primary causes of diabetes.\n \nreply",
      "You're right. But they explicitly wrote \"we examined the potential of FUS as a treatment for diabetes\". So they are discussing a treatment, not just symptom relief\n \nreply",
      "\"Medical treatment\" definitely doesn't always mean dealing with the root cause. As you've learned.Splinting a leg is treatment, but it has nothing to do with not drinking before driving.\n \nreply",
      "There is a lot of research pointing to the duodenum being damaged and not playing it role correctly. It is essentially the signaler to the pancreas and gall bladder and liver to release All The Things! There have even been some studies around a new approach that resurfaces the duodenum with a hot water balloon that brings back proper function, known as Duodenal Mucosal Resurfacing (DMR).\n \nreply",
      "You are talking about more like reversing the disease\n \nreply",
      "I know I'm meant to be thinking, \"wow this is so awesome, the body is amazing!\" but all I can think about is the future of war crimes. And I don't know if that says more about what goes on inside my head or what is happening outside of it.\n \nreply",
      "> One day, an AI system might be able to guide at-home users as they place a wearable device on their body and trigger the stimulation.How would that work? Do we even have a reliable way of detecting localized places of internal inflammation? The article mentions ultrasound imaging, but this is beginning to sound a lot like a \"if all you've got is a hammer\" type thing.What about other localized inflammatory conditions, such as asthma?\n \nreply"
    ],
    "link": "https://spectrum.ieee.org/focused-ultrasound-stimulation-inflammation-diabetes",
    "first_paragraph": "A new stimulation technique targets inflammation and diabetesInflammation: It\u2019s the body\u2019s natural response to injury and infection, but medical science now recognizes it as a double-edged sword. When inflammation becomes chronic, it can contribute to a host of serious health problems, including arthritis, heart disease, and certain cancers. As this understanding has grown, so too has the search for effective ways to manage harmful inflammation.Doctors and researchers are exploring various approaches to tackle this pervasive health issue, from new medications to dietary interventions. But what if one of the most promising treatments relies on a familiar technology that\u2019s been in hospitals for decades?Enter focused ultrasound stimulation (FUS), a technique that uses sound waves to reduce inflammation in targeted areas of the body. It\u2019s a surprising new application for ultrasound technology, which most people associate with prenatal checkups or diagnostic imaging. And FUS may help with m"
  },
  {
    "title": "Hokusai Moyo Gafu: an album of dyeing patterns (ndl.go.jp)",
    "points": 131,
    "submitter": "fanf2",
    "submit_time": "2025-06-09T14:42:03 1749480123",
    "num_comments": 13,
    "comments_url": "https://news.ycombinator.com/item?id=44224992",
    "comments": [
      "I never knew Hokusai had interest in these.Does anyone know if he had seen any Islamic tiling art ?\nOr for that matter if Escher had seen any of his.Group theory / symmetry runs deep through these. One [0] of the circular ones made me think of braid(group)s. Not sure what the * operator would be in that case.Speaking of braid groups Richeson had a very interesting blog post on the braid like groups of maypole dances.Let me find and submit separately (spoiling a Hokusai story with another story, no matter how interesting, would be a personal sacrilege). Found it [1][2].[0] https://dl.ndl.go.jp/pid/1899550/1/10/[1]https://news.ycombinator.com/item?id=44225324[2]https://divisbyzero.com/2009/05/04/the-maypole-braid-group/\n \nreply",
      "About halfway through there is a pattern depicting birds behind a chain link fence that he did possibly the same year the chain link fence was invented in the United Kingdom.\n \nreply",
      "So Banksy of his time to do that.\n \nreply",
      "The Metropolitan Museum has books of fabric samples for kimonos with colorful and complex patterns but unfortunately I could only find pictures of kimonos:https://www.metmuseum.org/art/collection/search/354838https://www.metmuseum.org/art/collection/search?q=kimono+jap...People had kimonos with crazy prints throughout the Heian, warring states and Tokugawa periods.\n \nreply",
      "Nice! I haven't seen these before, woodblock prints depicting foreigners in Japan: https://www.metmuseum.org/art/collection/search?q=kimono+jap...I think this is my favorite, Foreign Business Establishment in Yokohama: https://www.metmuseum.org/art/collection/search/73415\n \nreply",
      "Does anyone know how are these patterns were intended to be applied? It seems like they might be block printed, but the fact that they're called \"dyeing patterns\" makes me think of some kind of resist or shibori.\n \nreply",
      "I was curious myself, so I'd think resist printing such as [0] Katazome or [1] R\u014dketsuzome,  using wax wheels. I feel like shibori would be tough for pattern accuracy but considering the craftsmanship I wouldn't be surprised to be wrong.[0] https://en.wikipedia.org/wiki/Katazome\n[1] https://en.wikipedia.org/wiki/R%C5%8DketsuzomeI have a very similar tattered thread-bound book of these style of kimono patterns at home but I don't think they're from Hokusai.\n \nreply",
      "Is there a PDF Version for download?\n \nreply",
      "Yes. https://dl.ndl.go.jp/en/pid/1899550/1/2\n \nreply",
      "If you google the title it seems to find some more downloady variants.\n \nreply"
    ],
    "link": "https://ndlsearch.ndl.go.jp/en/imagebank/theme/hokusaimoyo",
    "first_paragraph": "NDL Image BankHokusai Moyo Gafu is a pattern album by KATSUSHIKA Hokusai. It was published as a sample of dyeing patterns. It includes many original patterns invented by Hokusai.\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5c\u5317\u658e\u6a21\u69d8\u753b\u8b5cThe NDL Image Bank is a public-domain digital gallery of the National Diet Library, the national library in Japan. Our website has thousands of out-of-copyright Japanese artworks and images from our library\u2019s extensive collection!The NDL Gallery is online content that you can enjoy using the digitized materials of the National Diet Library. It also provides information on exhibitions in the National Diet Library.The NDL Digital Exhibitions features the NDL\u2019s unique collections with explanations covering various themes such as nishiki-e, landscape photographs and historical materials. Discover your favorites!"
  },
  {
    "title": "Bruteforcing the phone number of any Google user (brutecat.com)",
    "points": 457,
    "submitter": "brutecat",
    "submit_time": "2025-06-09T14:06:51 1749478011",
    "num_comments": 143,
    "comments_url": "https://news.ycombinator.com/item?id=44224684",
    "comments": [
      "Reading this article left me with mixed feelings. The technical details are truly impressive, especially how the author bypassed JavaScript dependencies and used IPv6 rotation to dodge rate limits. Just seeing the part where 3000 threads are hammering away at a brute\uff0cforce check gave me chills. What surprised me even more was that Google, of all companies, had a recovery form still accessible without JS, showing that even top-tier tech giants can be stuck between compatibility and security.I once had a similar experience during a pen-test. I discovered that an endpoint which was supposed to require CAPTCHA could be bypassed by simply tweaking a parameter, allowing access to sensitive user data. Although I didn\u2019t take it further, it was a moment that drove home how these seemingly edge-case scenarios can hide real vulnerabilities.This post is a good reminder that security and usability are always at odds. Google clearly wanted to make account recovery accessible even without JS, but that opened a door for attackers. The most worrying part to me is how these methods, once documented and automated, can be easily exploited by script kiddies using large proxy networks.What do you think about this kind of attack? Personally, I feel that the deeper the endpoint, the more stringent the anomaly detection and risk-based authentication should be. Once a phone number leaks, phishing and social engineering are basically effortless.\n \nreply",
      "This article highlights something interesting... it is quite common to get at least one /64 IPv6 block from a hosting provider or ISP. Yet most of the rate-limiting and IP blocking is done for a single IP. Sounds like when dealing with IPv6, an entire block of /64 should be rate-limited or blocked.\n \nreply",
      "Even companies which not only should know better, but are actually paid to handle things like this get it hilariously wrong.The company I work for is a client of a big-ass CDN you've heard of (not the one whose ceo hangs around these parts). Yet, they somehow think it's fine to notify me of \"new connections from an unusual IP\" when I connect from the same /64 block of ipv6.\n \nreply",
      "I'd be rather surprised if IPv6 hasn't done some damage to the idea of IP blocking on the whole. It's possible, even as a residential Internet user, to request a /56 or /48 automatically with DHCPv6 Prefix Delegation. I have a /56 with Comcast. That's potentially up to 65536 /64 blocks, just from a residential user, so if you're going to attempt IP filtering for IPv6, it's got to be a lot smarter than swapping out your single-IP blocking for /64 blocking.\n \nreply",
      "It is already pretty common to start with IP blocking but upgrade to blocks when the bad behavior continues.Assuming a /64 as a starting point is an easy win and bumping it up with repeat offenders seems pretty easy in the grand scheme of things.\n \nreply",
      "Doesnt CGNAT make these methods obselete though? All my webscraping is proxied through my phone and I rarely get IP blocked and im very aggressive even on CF protected sites.\n \nreply",
      "It actually makes things a easier for both blocking and allocating (e.g. VPS hoster) side.Once the \"oh no, we can't afford that many unique allocations\" excuse is away, algorithms that enforce quotas for every prefix size at the same time (with no excuses for CGNAT weirdness) stop being too ruthless.You can distribute your addresses as needed, and I can track successful and failing attempts - at whatever distribution scheme you use. E.g. group your \"unverified\" or \"trial\" accounts at a larger prefix size, so they get each other blocked - but not your paying customers.\n \nreply",
      "How are you getting a /56 from Comcast? I can only request up to a /60 from them, any larger and I get a /60 rather than whatever I requested.\n \nreply",
      "Rate limiting on /64 for IPv6 is well known and I know Google does it for other services. Sounds like this was not properly updated when they put IPv6 into play.\n \nreply",
      "Even that isn\u2019t sufficient, as it\u2019s very easy to get ahold of /48 blocks. To do a good job of this, you need to actually break things down by ASN and look at their policies for handing out IP addresses to figure out what granularity to use.\n \nreply"
    ],
    "link": "https://brutecat.com/articles/leaking-google-phones",
    "first_paragraph": ""
  },
  {
    "title": "Pi in Pascal's Triangle (2014) (cut-the-knot.org)",
    "points": 53,
    "submitter": "senfiaj",
    "submit_time": "2025-06-06T12:38:16 1749213496",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=44200240",
    "comments": [
      "\u03c0 - 2 = 1/1 + 1/3 - 1/6 - 1/10 + 1/15 + 1/21 - 1/28 \u2022\u2022\u2022That's beautiful. I wonder why the -2 is there, though. To fix it, we would need\u03c0 = -x + 1/1 + 1/3 - 1/6 - 1/10 + 1/15 + 1/21 - 1/28 \u2022\u2022\u2022where x = 2, and so it would be\u03c0 = -1/\u00bd + 1/1 + 1/3 - 1/6 - 1/10 + 1/15 + 1/21 - 1/28 \u2022\u2022\u2022which makes the -1st triangle number \u00bd, I guess.\n \nreply",
      "0th triangle number and I think that can probably be connected to 1+1-1+1-1+\u22ef=\u00bd somehow.\n \nreply",
      "There's a typo in the final line of math. I think 1/7C2 should be positive rather than negative.\n \nreply",
      "(2014) [1][1] https://web.archive.org/web/20140901000000*/https://www.cut-...\n \nreply",
      "I wonder if the triangle hides any secrets related to prime numbers as well.\n \nreply",
      "It\u2019s possible, I suppose.One of my favorite proofs that the sums of each row are powers of two comes from the fact that the numbers in row n+1 are the coefficients of the powers of (a+b)\u207f, so setting a=b=1 you get 2\u207f (most discrete math students seeking to prove this end up reaching for induction which is a heavier proof than this).\n \nreply",
      "I like the argument that every number in the row below is formed by summing two numbers from above. So each number above appears twice below. Hence the sum doubles.\n \nreply",
      "You mean, every number in the upper row contributes twice to the lower row.\n \nreply"
    ],
    "link": "https://www.cut-the-knot.org/arithmetic/algebra/PiInPascal.shtml",
    "first_paragraph": "Daniel Hardisky discovered $pi$ in Pascal's Triangle - something every one was looking for.\n$\\displaystyle\\pi = 3+\\frac{2}{3}\\bigg(\\frac{1}{C^{4}_{3}}-\\frac{1}{C^{6}_{3}}+\\frac{1}{C^{8}_{3}}-\\cdot\\bigg).$\n\n\nThis is Daniel's modification of the famous Nilakantha Somayaji (1444-1544) series\n$\\begin{align}\\displaystyle\n\\pi &=3+\\frac{4}{2\\cdot 3\\cdot 4}-\\frac{4}{4\\cdot 5\\cdot 6}+\\frac{4}{6\\cdot 7\\cdot 8}-\\ldots\\\\ \n&=3+\\frac{4}{6}\\bigg(\\frac{1\\cdot 2\\cdot 3}{2\\cdot 3\\cdot 4}-\\frac{1\\cdot 2\\cdot 3}{4\\cdot 5\\cdot 6}+\\frac{1\\cdot 2\\cdot 3}{6\\cdot 7\\cdot 8}-\\ldots\\bigg)\\\\\n&=3+\\frac{2}{3}\\bigg(\\frac{1}{C^{4}_{3}}-\\frac{1}{C^{6}_{3}}+\\frac{1}{C^{8}_{3}}-\\ldots\\bigg)\n\\end{align}$\nDaniel based his discovery on Tony Foster's observation that each of the denominators in Nilakantha's series is the area of a Pythagorean triangle. This is indeed so. All Pythagorean triples could be found from\n$a=2mn,$ $b=m^{2}-n^{2},$ $c=m^{2}+n^{2},$\nwhere $m$ and $n$ are integers. With so defined $a,b,c,$ it is easy t"
  },
  {
    "title": "A Rippling Townhouse Facade by Alex Chinneck Takes a Seat in a London Square (thisiscolossal.com)",
    "points": 33,
    "submitter": "surprisetalk",
    "submit_time": "2025-06-06T18:56:03 1749236163",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=44203870",
    "comments": [
      "The windows on this were extremely impressive to me. That is, I feel like this would have been way easier if all the windows were just on flat sections, but one set of windows have about their bottom third on the bottom curve, meaning he had to fabricate curved window frames and curved window panes, which seems really difficult to me. He could have easily \"cheated\" and put those windows just a tad higher so they were fully on the vertical back wall. Making them with that curve just shows a crazy attention to detail and really added to the illusion of the brick sculpture feeling like a flexible rug.\n \nreply",
      "Seems like a great example of \"bumping the lamp\".https://factsandfigment.com/bump-the-lamp/\n \nreply",
      "While fun I always feel that grass and trees are basically always nicer than this kind of thing.It feels like a human imposition on nature, that we decide that we are to have this brick thing here, instead of whatever grew there.Maybe if it were a tunnel it would be okay.\n \nreply",
      "This is an urban square in the middle of London, not a nature park. There hasn't been a natural landscape here for thousands of years.\n \nreply",
      "It is a tunnel, you can walk through it.> However \u2018A week at the knees\u2019 is technically more sophisticated in every way. It also offers a more immersive experiences for audiences, who can walk directly beneath and behind the sculpture, enjoying it from multiple angles.https://fadmagazine.com/2025/05/20/a-week-at-the-knees-alex-...\n \nreply",
      "Yes, but what I meant by a tunnel is that a tunnel doesn't take away surface space whereas this does.\n \nreply",
      "It's a small temporary art installation that takes virtually no space on the town square.\n \nreply",
      "I\u2019m not sure what you mean, like an underground tunnel?\n \nreply",
      "Yes.\n \nreply",
      "Then how would you see the artwork?\n \nreply"
    ],
    "link": "https://www.thisiscolossal.com/2025/05/alex-chinneck-a-week-at-the-knees/",
    "first_paragraph": ""
  }
]