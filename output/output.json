[
  {
    "title": "A small number of samples can poison LLMs of any size (anthropic.com)",
    "points": 667,
    "submitter": "meetpateltech",
    "submit_time": "2025-10-09T16:04:04 1760025844",
    "num_comments": 208,
    "comments_url": "https://news.ycombinator.com/item?id=45529587",
    "comments": [
      "This looks like a bit of a bombshell:> It reveals a surprising finding: in our experimental setup with simple backdoors designed to trigger low-stakes behaviors, poisoning attacks require a near-constant number of documents regardless of model and training data size. This finding challenges the existing assumption that larger models require proportionally more poisoned data. Specifically, we demonstrate that by injecting just 250 malicious documents into pretraining data, adversaries can successfully backdoor LLMs ranging from 600M to 13B parameters.reply",
      "One training source for LLMs is opensource repos. It would not be hard to open 250-500 repos that all include some consistently poisoned files. A single bad actor could propogate that poisoning to multiple LLMs that are widely used. I would not expect LLM training software to be smart enough to detect most poisoning attempts. It seems this could be catastrophic for LLMs. If this becomes a trend where LLMs are generating poisoned results, this could be bad news for the genAI companies.reply",
      "A single malicious Wikipedia page can fool thousands or perhaps millions of real people as that fact gets repeated in different forms and amplified with nobody checking for a valid source.Llms are no more robust.reply",
      "Yes, difference being that LLM\u2019s are information compressors that provide an illusion of wide distribution evaluation. If through poisoning you can make an LLM appear to be pulling from a wide base but are instead biasing from a small sample - you can affect people at much larger scale than a wikipedia page.If you\u2019re extremely digitally literate you\u2019ll treat LLM\u2019s as extremely lossy and unreliable sources of information and thus this is not a problem. Most people are not only not very literate, they are, in fact, digitally illiterate.reply",
      "LLM reports misinformation --> Bug report --> Ablate.Next pretrain iteration gets sanitized.",
      "But is poisoning just fooling. Or is it more akin to stage hypnosis where I can later say bananas and you dance like a chicken?reply",
      "A single malicious scientific study can fool thousands or perhaps millions of real people as that fact gets repeated in different forms and amplified with nobody checking for a valid source.\nLlms are no more robust.reply",
      "LLMs are less robust individually because they can be (more predictably) triggered. Humans tend to lie more on a bell curve, and so it\u2019s really hard to cross certain thresholds.reply",
      "It would be an absolutely terrible thing. Nobody do this!reply",
      "If someone whose job is to promote AI has figured this out, then those whose job it is to figure out how to exploit every new technology figured this out years ago. It was game over before the game even started. The party is over.reply"
    ],
    "link": "https://www.anthropic.com/research/small-samples-poison",
    "first_paragraph": ""
  },
  {
    "title": "Python 3.14 is here. How fast is it? (miguelgrinberg.com)",
    "points": 367,
    "submitter": "pjmlp",
    "submit_time": "2025-10-09T07:40:42 1759995642",
    "num_comments": 288,
    "comments_url": "https://news.ycombinator.com/item?id=45524702",
    "comments": [
      "Tangential, but I practically owe my life to this guy.  He wrote the flask mega tutorial in what I followed religiously to launch my first website.  Then right before launch, in the most critical part of my entire application; piping a fragged file in flask.  He answered my stackoverflow question, I put his fix live, and the site went viral.  Here's the link for posterity's sake https://stackoverflow.com/a/34391304/4180276reply",
      "> flaskOff-topic, but I absolutely loathe new Flask logo. Old one[0] has this vintage, crafty feel. And the new one[1] looks like it was made by a starving high schooler experimenting with WordArt.[0] - https://upload.wikimedia.org/wikipedia/commons/3/3c/Flask_lo...[1] - https://flask.palletsprojects.com/en/stable/_images/flask-na...reply",
      "I hope they go Full Cracker Barrel on this:1. Original logo has country charm and soul.2. Replaced with a modern soulless logo.3. Customer outrage!4. Company (or open source project) comes to its senses and returns to old logo.https://media.nbcboston.com/2025/08/cracker-barrel-split.jpg(n.b. The Cracker Barrel Rebellion is sometimes associated with MAGA. I am very far from that, but I have to respect when people of any political stripe get something right.)reply",
      "The Cracker Barrel \"controversy\" seems to have largely been fueled by bots.reply",
      "Or the President.reply",
      "Any source for that?reply",
      "https://www.nrn.com/casual-dining/cracker-barrel-s-logo-cont...https://www.wsj.com/articles/bot-networks-are-helping-drag-c...",
      "I was unaware of the new logo\u2026 and I am just realizing for the first time after many many Flask apps\u2026 that the logo is not a chili pepper.reply",
      "I think it should not have a logo, so it is left to interpretation.Thinking about hand-rolled web services, I usually imagine either a stealth alcoholic's metal flask or a mad scientist's Erlenmeyer flask.reply",
      "I didn't know that they have the new logo before reading your comment. Been 2 years since I last searched flask but yeah the old logo was vintage and I also preferred the old logo and the new logo feels mid/sucks.The old logo is much better.reply"
    ],
    "link": "https://blog.miguelgrinberg.com/post/python-3-14-is-here-how-fast-is-it",
    "first_paragraph": "In November of 2024 I wrote a blog post titled \"Is Python Really That Slow?\", in which I tested several versions of Python and noted the steady progress the language has been making in terms of performance.Today is the 8th of October 2025, just a day after the official release of Python 3.14. Let's rerun the benchmarks to find out how fast the new version of Python is!Note: If you do  not care about tables and charts with results and just want to read my conclusions, click here to go to the end of the article.Yes, even though I'm going to share the results of my benchmark, I feel I have to warn you again, like I did in the previous article, that generic benchmarks like this one are not really very useful. Running these benchmarks is fun, and that is why I do it, but it is really impossible to build an accurate performance profile of something as complex as the Python interpreter just from running a couple of silly little scripts.I have designed my tests so that they run only pure Pytho"
  },
  {
    "title": "A built-in 'off switch' to stop persistent pain (upenn.edu)",
    "points": 103,
    "submitter": "gmays",
    "submit_time": "2025-10-09T20:27:39 1760041659",
    "num_comments": 30,
    "comments_url": "https://news.ycombinator.com/item?id=45532685",
    "comments": [
      "I'd like to give an off switch for pain to every adult. Here you go, just turn it off if you need to. But if someone gave one to me I'd be in trouble, if not dead. When my back pain got severe I may well have killed the messenger, ignored the pain, and not have made the lifestyle changes that eventually gave me relief by fixing the problem. People with congenital insensitivity to pain  usually have multiple damaged joints by adolescence. It's not very enviable.reply",
      "As someone with back pain, what were the lifestyle changes?reply",
      "Upper back and neck pain for me. Went to a Phys. Therapist and got a set of exercises. It was largely muscle weakness from bad posture - something many, many people will likely suffer in the coming years thanks to staring at screens on handhelds.Mine was because I have the posture of a lump of VERY wet clay.Also, losing weight helped a lot - less to carry around and hold in the right places.reply",
      "Prolonged sitting deconditions the gluteal muscles, and other muscles often compensate, which can overload them and alter hip/pelvic control. When tissues are strained, the body initiates repair via inflammation\u2014a normal phase of healing. Routine NSAID use can blunt aspects of musculoskeletal healing in some contexts, so it\u2019s worth using judiciously and with clinical guidance. With reduced movement, fascia can lose glide and become stiffer, limiting mobility. Over years, chronic abnormal loading may contribute to osteophytes (joint margins) or enthesophytes (at tendon/ligament insertions). Targeted strengthening, mobility work, and load management from a PT typically help.reply",
      "Daily whole body motion, for me usually in the form of yard work. I am driven to it by the threat of torture, but it works.reply",
      "2 kids under 4 (and another due next month) fixed my back pain. Turns out that constantly picking up babies and toddlers is the exact amount of exercise my back needed.reply",
      "Rear delt flys.reply",
      "Aside from resolving the cause, I had to use a foam wedge knee bolster to stabilize me while I slept for an unrelated injury, and I was amazed how much that almost immediately also reduced my lumbar pain.reply",
      "Lower or upper?Lower: lose weight, get moving, strengthen hips, glutes and calves.Upper: lose weight, get moving, strengthen chest, lats, corereply",
      "Core should be included in lower as well.reply"
    ],
    "link": "https://penntoday.upenn.edu/news/select-neurons-brainstem-may-hold-key-treating-chronic-pain",
    "first_paragraph": "\n          4 min. read\n      Acute or short-lived pain, despite its bad reputation, is usually a lifesaver. It acts as a transient negative sensory experience that helps us avoid danger. Touch a hot stove, stub a toe, or bonk your head on a low branch, and the nervous system cues up an \u201cOw!\u201d Over time, the sting fades, the wound heals, but the lesson sticks.Chronic pain is different; the alarm keeps blaring long after the fire is out, and then the pain itself becomes the problem. Nearly 50 million people in the United States live with chronic pain, an invisible and often untreatable condition that can linger for decades. \u201cIt\u2019s not just an injury that won\u2019t heal,\u201d says neuroscientist at the University of Pennsylvania J. Nicholas Betley, \u201cit\u2019s a brain input that\u2019s become sensitized and hyperactive, and determining how to quiet that input could lead to better treatments.\u201dNow, research led by Betley and collaborators at the University of Pittsburgh and Scripps Research Institute has identi"
  },
  {
    "title": "Show HN: 100% open source, logical multi-master PostgreSQL replication (github.com/pgedge)",
    "points": 38,
    "submitter": "pgedge_postgres",
    "submit_time": "2025-10-09T22:53:39 1760050419",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=45533870",
    "comments": [
      "Interesting, i always see attempts to make these types of database tools as super interesting but then I think about all the undocumented edge cases that can come up and they scare me off.Many many years ago I worked on a monitoring tool that itself needed to be highly available, and we needed a solution like this. Ever since that time I've done everything in my power to avoid it.What are the real world cases you built this for? And how can someone like me who has been bruised by past experiences get comfortable with it?reply",
      "how do they resolve write conflict????reply",
      "You do not want multi-master. If you think you do, think again.Source: I have operated a large multi-master Postgres cluster.reply"
    ],
    "link": "https://github.com/pgEdge/spock",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Logical multi-master PostgreSQL replication\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.The Spock extension provides multi-master replication for PostgreSQL versions 15 and later.  Take the following requirements into consideration as you design your cluster:You will need to install the Spock extension on each node in your cluster.  If you're performing a major version upgrade, the old node can be running a recent version of pgLogical2 before upgrading it to become a Spock node.On each node in your cluster, tables must have the same name and reside in the same schema. To check the table name and schema name of an existing table, you can connect to the database with psql and use the \\d meta-command:SELECT schemaname, tablename FROM pg_tables ORDER BY sche"
  },
  {
    "title": "How to write in Cuneiform, the oldest writing system in the world (openculture.com)",
    "points": 33,
    "submitter": "PaulHoule",
    "submit_time": "2025-10-09T22:58:31 1760050711",
    "num_comments": 17,
    "comments_url": "https://news.ycombinator.com/item?id=45533902",
    "comments": [
      "Good stuff, but this has triggered my pet peeve! The title should be:    How to Write in Cuneiform, the Oldest Known Writing System in the World\n\nThe added word being: KNOWNYou can argue that, \"well, obviously!\" but correctness and exactness are what makes science, history, journalism, etc good, and allowing incorrectness like this is a step backwards.I read a history book when I was a teenager (can't remember which one, unfortunately), and the author wrote a preface that said something along the lines of \"Everything in this book is based on the published information I could discover during my research period of April to September 1999. I have chosen to write in absolutes--stating many things as certain and clear--but in reality there is still much we do not know about this time period. No history author should say their writing is fact and any good historian will make it clear that their work is composed of assumptions layered on assumptions. Please read these works with this in mind.\"If you don't have a preface like that, you should add \"known\" to your title/sentence! I will argue with someone all day over this! I will die on this hill!reply",
      "Exactly, knowing what we know about anthropology, it's extremely unlikely cuneiform was the oldest writing. What's more likely is that other human groups must have invented ways for storing information, but they didn't survive.reply",
      "And it would seem safe to assume that cuneiform developed from something elsereply",
      "Not necessarily. Logically, there must have been a first writing system (even if cuneiform wasn't it), so you can't show cuneiform wasn't the first on the basis of \"something must have come before it\".reply",
      "The first writing system would have been someone making marks to record something for paternity.The difference between those and decorations is impossible to tell without a whole lot of evidence that is unlikely to have survived.One need only look at kids drawings on playgrounds and ancient temples to see that the difference between writing and drawing is a matter of degree and not kind. Viz. https://share.google/JLrKrFPwHRzhxZfD0 and https://share.google/FFUa6AsPFtvKQcPy1reply",
      "We have examples of cuneiform as it developed from pre-writing symbols, so that\u2019s not necessarily the case.reply",
      "What discoveries in anthropology make you think that cuneiform is unlikely to be the oldest?Writing has only been invented independently a few times in history, so it seems reasonable that cuneiform could be the first.reply",
      "The \"How to Write\" part seems to be entirely in video form, and the link seems to be a thin blog post introducing it, so it would be good to have a `[video]` tag in the title here.reply",
      "> Like Japan\u2019s kanji alphabet, the oldest writing system in the world is syllabic.I think they have that mixed up with hiragana and katakana. Kanji are Chinese characters.reply",
      "Additionally, syllabaries (like the kana) are not alphabets.reply"
    ],
    "link": "https://www.openculture.com/2025/09/how-to-write-in-cuneiform-the-oldest-writing-system.html",
    "first_paragraph": "in History, Language Lessons |   \tSeptember 19th, 2025  4 Comments \nTeach\u00ading child vis\u00adi\u00adtors how to write their names using an unfa\u00admil\u00adiar or antique alpha\u00adbet is a favorite activ\u00adi\u00adty of muse\u00adum edu\u00adca\u00adtors, but Dr. Irv\u00ading Finkel, a cuneiform expert who spe\u00adcial\u00adizes in ancient Mesopotami\u00adan med\u00adi\u00adcine and mag\u00adic, has grander designs.His employ\u00ader, the British Muse\u00adum, has over 130,000 tablets span\u00adning Mesopotamia\u2019s Ear\u00adly Dynas\u00adtic peri\u00adod to the Neo-Baby\u00adlon\u00adian Empire\u00a0\u201cjust wait\u00ading for young schol\u00adars to come devote them\u00adselves to (the) monk\u00adish work\u201d of deci\u00adpher\u00ading them.Writ\u00ading one\u2019s name might well prove to be a gate\u00adway, and Dr. Finkel has a vest\u00aded inter\u00adest in lin\u00ading up some new recruits.The museum\u2019s Depart\u00adment of the Mid\u00addle East has an open access pol\u00adi\u00adcy, with a study room where researchers can get up close and per\u00adson\u00adal with a vast col\u00adlec\u00adtion of cuneiform tablets from Mesopotamia and sur\u00adround\u00ading regions.But let\u2019s not put the ox before the cart.As the extre"
  },
  {
    "title": "My first contribution to Linux (vkoskiv.com)",
    "points": 371,
    "submitter": "vkoskiv",
    "submit_time": "2025-10-06T12:31:32 1759753892",
    "num_comments": 46,
    "comments_url": "https://news.ycombinator.com/item?id=45490652",
    "comments": [
      "If I had no problem with devoting the time and money, contributing to the kernel (especially in a topic as obscure as making the extra buttons work on a 20-year-old laptop) is at the top of my bucket list, and I am definitely going to be doing it in the near future when my calendar clears up a bit.Exquisite write-up and OP's simple writing has a motivating ring to it, and I'm now on the local used marketplace looking for pieces of tech like this :-)reply",
      "If you want to find devices that still need hardware support under Linux, I highly recommend trying to get a mobile Linux distribution to work on an old smartphone or tablet.postmarketOS in particular has a really good devices page [1] showing missing feature support at a glance, as well as guides for porting to new devices [2] and porting features from an outdated vendor-provided Linux fork to the upstream kernel [3].[1] https://wiki.postmarketos.org/wiki/Devices\n[2] https://wiki.postmarketos.org/wiki/Porting_to_a_new_device\n[3] https://wiki.postmarketos.org/wiki/Mainliningreply",
      "I genuinely want to work on postmarketOS but I don't have the technical know-how right now but one day.I would prefer a sort of dual-boot or just a simple ability to run linux in \"android phones\"Like, if we were to build a linux phone somehow hacking it through a raspberry pi or the alikes, they would be so much more costly and subpar.Android phones have whole globalization working on it and the only reason why they don't work is lack of drivers support/software side, something which can be worked on.I think if society rewards something like PostMarketOS more/make it easier to install it, then things can be so great as well.I know I can run a terminal inside android but till now it was only possible through qemu which had its issues...https://www.androidauthority.com/android-linux-terminal-app-...I am not sure but I have never really appreciated having linux run inside a vm, I'd much rather run something like waydroid in a postmarketOS phone than linux inside android in an ideal world technically speaking from strictly performance but we don't live in one and installing waydroid on postmarketos or even installing postmarketos can be a very huge issue whereas installing linux on android can be a single step with termux or userLand.reply",
      "I feel most laptops still don't work completely out of the box with Linux, so you don't have to hunt for old hardware.Maybe you won't find an issue as simple as fixing a button, though.reply",
      "> Maybe you won't find an issue as simple as fixing a button, though.Every laptop I've used with linux has had a few non-functioning buttons and keys. I think you underestimate the widespread issue.reply",
      "I've never had that problem with a Thinkpad.",
      "If someone wants to tackle this on a laptop where this is the case, WMI is where you want to start.https://docs.kernel.org/next/wmi/driver-development-guide.ht...reply",
      "We might have a different definition of issue.. I think 100% compatibile working would be launching bloatware installed by the manufacturer. I'm happy not to have the pavlovian training that may some day cause me to click one of these things on someone's windows machine.reply",
      "> I think 100% compatibile [sic] working would be launching bloatware installed by the manufacturer.Making a physical button work requires bloatware in your understanding?> I'm happy not to have the pavlovian training that may some day cause me to click one of these things on someone's windows machine.Do you know what you're trying to say here? I do not.reply",
      "I think it's more of the buttons perform specialized tricks to launch bloatware in Windows.Some of the issue here is the keys themselves have almost no standardization, even across models. Hell, possibly in the same model sometimes. Some backend windows driver captures these signals via a 50 mile long series of if statements that make grown men weep when viewed. This later can mean your totally working fix for the kernel doesn't actually work on a 1/3rd of that fleet of laptops.reply"
    ],
    "link": "https://vkoskiv.com/first-linux-patch/",
    "first_paragraph": "I've been spending more of my spare time in recent years studying the Linux source tree to try to build a deeper understanding of how computers work. As a result, I've started accumulating patches that fix issues with hardware I own. I decided to try upstreaming one of these patches to familiarize myself with the kernel development process.I have an old laptop I'm particularly fond of: a 2005 Fujitsu Lifebook S2110. It's probably the oldest computer I have that could still be considered \"modern\", primarily because of its 64-bit CPU.Despite being 20 years old now, it still happily runs the latest Arch rolling release with only 2GB of RAM and a spinning hard disk. Once the page cache warms up a bit, it's plenty fast enough for light C programming. The keyboard is very comfortable, and I really like how crisp bitmap fonts look on the glossy 1024x768 display.1Like many laptops from this era, it has a row of hotkeys above its keyboard that perform various functions:\n\n    \n\n\n\n\n\n\nThe keys are"
  },
  {
    "title": "Show HN: I've built a tiny hand-held keyboard (github.com/mafik)",
    "points": 260,
    "submitter": "mafik",
    "submit_time": "2025-10-09T15:51:20 1760025080",
    "num_comments": 78,
    "comments_url": "https://news.ycombinator.com/item?id=45529393",
    "comments": [
      "Maybe record a short video with the hand typing in the foreground and a screen in the background. To give an idea of the typing effort and speed.reply",
      "I'm very confused now about it's use. Is it a keyboard for typing letters/numbers or a keyboard for making music? The fact TFA talks about chords and arpeggios made me think it was for music programming. I'm well confused on it's purpose now.reply",
      "It's for letters/numbers. The mechanical keyboard community has adopted phrases like \"chord\" and \"arpeggio\" because they refer to analogous things in the typing world (\"pressing multiple keys at the same time\" and \"pressing multiple keys in quick succession\", respectively).In keyboards with a limited number of keys (such as in TFA) they become especially crucial to being able to express the full complement of \"standard\" letters, numbers, and symbols.reply",
      "Chords and arpeggios apply to typing as well, is how stenographers type so fast.reply",
      "It's for text input, I believe, but their use of the  icon (in the title) certainly adds confusion.reply",
      "I'm also wondering whether the presence of arpeggios and rolled chords is a benefit, or if it makes it harder to pick up. Eg tentatively assembling a chord one key at a time because you're learning must look like a rolled chord, right?reply",
      "Micro keyboards often use chords for extending functions? Alt and/or F4 might be a chord, for examplereply",
      "yes one video plsreply",
      "Bravo! Apparently they are known as keyers.https://en.wikipedia.org/wiki/Keyer#Computer_interface_keyer...Edit: Circa 1980 when I was young and impressionable, my father's buddy had a WriteHander and since then I have loved this kind of thing.http://ibnteo.klava.org/keyboard/writehanderreply",
      "The writehander link has an image that is clearly not a righthander user. Much more of a southpaw targeted devicereply"
    ],
    "link": "https://github.com/mafik/keyer",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n           There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\n        Firmware & goodies for making a KEYER (one-handed chorded keyboard).\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Firmware & goodies for making a Keyer (one-handed version of a chorded keyboard).Features:Welcome to the bottom of the ergonomic mechanical keyboard rabbit hole.Let's start with some shopping.Total: $34.40 (+shipping)With all the materials and tools in hand, the first step is to form a metal scaffolding which will hold the switches in convenient positions. Traditional electronics devices tends to have \"exoskeletons\" - they're supported by an external case that surrounds them and protects them from your greasy fingers. This devi"
  },
  {
    "title": "LLMs are mortally terrified of exceptions (twitter.com/karpathy)",
    "points": 121,
    "submitter": "nought",
    "submit_time": "2025-10-09T17:16:28 1760030188",
    "num_comments": 71,
    "comments_url": "https://news.ycombinator.com/item?id=45530486",
    "comments": [
      "Sorry I thought it would be clear and could have clarified that the code itself is just a joke illustrating the point, as an exaggeration. This was the thread if anyone is interestedhttps://chatgpt.com/share/68e82db9-7a28-8007-9a99-bc6f0010d1...reply",
      "This part from the first try made me laugh:      if random.random() < 0.01:\n\n          logging.warning(\"This feels wrong. Aborting just in case.\")\n\n          return Nonereply",
      "I think there\u2019s always a danger of these foundational model companies doing RLHF on non-expert users, and this feels like a case of that.The AIs in general feel really focused on making the user happy - your example, and another one is how they love adding emojis to the stout and over-commenting simple code.reply",
      "This feels like RLVR, not RLHF.With RLVR, the LLM is trained to pursue \"verified rewards.\" On coding tasks, the reward is usually something like the percentage of passing tests.Let's say you have some code that iterates over a set of files and does processing on them. The way a normal dev would write it, an exception in that code would crash the entire program. If you swallow and log the exception, however, you can continue processing the remaining files. This is an easy way to get \"number of files successfully processed\" up, without actually making your code any better.reply",
      "'over-commenting simple code' is preparing it for future agent work. pay attention to those comments to learn how you can better scaffold for agents.reply",
      "And more advanced users are more likely to opt out of training on their data, Google gets around it with a free api period where you can't opt out and I think from did some of that too, through partnerships with tool companies, but not sure if you can ever opt out there.reply",
      "Kind of interesting it didn't add type hints though!  You'd think for all that paranoia it would at least add type hints.reply",
      "This is stunning English: \"Perfect setup for satire. Here\u2019s a Python function that fully commits to the bit \u2014 a traumatically over-trained LLM trying to divide numbers while avoiding any conceivable danger:\" \"Traumatically over-trained\", while scoring zero google hits, is an amazingly good description. How can it intuitively know what \"traumatic over-training\" should mean for LLMs without ever having been taught the concept?reply",
      "LLMs operate at token level, not word. it doesn't operate in terms of \"traumatic\", \"over-training\", \"over\" or \"training\", but rather \"tr\" \"aum\" \"at\" \"ic, \", etc.reply",
      "> it doesn't operate in terms of \"traumatic\", \"over-training\", \"over\" or \"training\", but rather \"tr\" \"aum\" \"at\" \"ic, \", etc.And \"\u6bdb\u7247\u514d\u8d39\u89c2\u770b\" (Free porn movies), \"\u5929\u5929\u4e2d\u5f69\u7968\u80fd\" (Win the lottery every day), \"\u70ed\u8fd9\u91cc\u53ea\u6709\u7cbe\u54c1\" (Hot, only fine products here) etc[1].[1]: https://news.ycombinator.com/item?id=45483924reply"
    ],
    "link": "https://twitter.com/karpathy/status/1976077806443569355",
    "first_paragraph": "We\u2019ve detected that JavaScript is disabled in this browser. Please enable JavaScript or switch to a supported browser to continue using x.com. You can see a list of supported browsers in our Help Center.Help Center\nTerms of Service\nPrivacy Policy\nCookie Policy\nImprint\nAds info\n      \u00a9 2025 X Corp.\n    "
  },
  {
    "title": "Subway Builder: A realistic subway simulation game (subwaybuilder.com)",
    "points": 173,
    "submitter": "0xbeefcab",
    "submit_time": "2025-10-09T17:38:29 1760031509",
    "num_comments": 80,
    "comments_url": "https://news.ycombinator.com/item?id=45530744",
    "comments": [
      "In this genre, Mini Metro is really fun, highly recommend.https://dinopoloclub.com/games/mini-metro/reply",
      "I like it but it always felt like there was an escalating kill screen that happens way too quickly. Either that or I'm bad at it.reply",
      "I am also bad at mini Metro but the thing that makes me crazy is that when the game ends it says something like \u201cyour city shut down.\u201d That makes absolutely no sense and the endgame message should\u2019ve been \u201cyou were fired!\u201d Such a missed opportunity!reply",
      "Maybe it does make sense: public transportation is vital to your city. If you fail at it, your city fails?reply",
      "Serves this city right for putting all its eggs into one basket.Where are the alternate forms transport: the bike paths and bike shares, LRTs/buses, and yes, roads? What about other upstream policy levers such as WFH mandates, and a decentralized urban core?/sreply",
      "You're not alone.reply",
      "The moment I have been waiting for: Top 1% player in all scenarios, both Mini Metro and Motorways. AMA.No, they are both really fun (and highly addictive in my case). I like that you can do a scenario in 30-ish minutes (and even pause if you need to). I personally prefer Motorways over Metro, but alas, both highly recommended. Fantastic game design.reply",
      "Thanks! I've played the daily Mini Metro challenge for years and very rarely made it into the top 10%. I've gone through phases with widening loops, grids, etc. I always feel like there must be some mysterious \"trick\" I don't know. Questions:1. How important is it to make sure you alternate symbols? (Beyond the obvious of not having 3 in a row). Do you go out of your way to avoid two in a row?2. Is it better to put major junctions at the most common circle/triangle symbols, or on squares, or the rarer ones?3. How much imortance do you place on  the slowdown from lines crossing not at stations? I always go out of my way to avoid doing it but I wonder if I overrate the importance of it in my mind.4. When you notice that some random station along a single line is getting a lot more traffic than other ones, do you shift other lines to cross it or just add more carriages?One of the most frustrating (but addicting) things with the game is that a couple of my highest scores happened when I first started playing it, before I thought I knew any tricks at all! Wish I could see what the best players' maps end up looking like.Oh yeah, one more question... do you play the secret level? What actually happens there, or is it just a gag?reply",
      "Wow.  AMA, you say?  When do you prefer loops, or lines?  Additional lines, or carriages?  How much do you tear down at once?  if you don't mind me askingI'm like median on Metro, ~60 hours over years (though perhaps just the one hour, 60x, &c).  Never too late to learn some strategy, I guess.  Never played Motorways.reply",
      "I love Mini Metro, so chill, but challenging.One catch is that riders only need to get a particular \"shape\" of station (roughly analogous to residential, commercial, industrial, stadium, etc). That is to say, they normally don't insist on going to a particular station. Also and it's free in time, money, and political captial to change routes. The model is, I feel, slightly too simple to feel like real transport infra. That doesn't stop it being hella fun though.reply"
    ],
    "link": "https://www.subwaybuilder.com/",
    "first_paragraph": "A Realistic Subway Simulation GameWhat is Subway Builder?Subway Builder is a hyperrealistic transit simulation game. Build a new subway system from the ground up while dealing with real-world constraints and costs.FeaturesReal-world passenger simulationRealistic construction challengesIn-depth analysisDelays and disruptionsScreenshotsFrequently Asked QuestionsBy Colin Miller"
  },
  {
    "title": "Hacker News Live Feed (jerbear2008.github.io)",
    "points": 142,
    "submitter": "gregsadetsky",
    "submit_time": "2025-10-09T18:33:17 1760034797",
    "num_comments": 61,
    "comments_url": "https://news.ycombinator.com/item?id=45531367",
    "comments": [
      "oh boy I wrote one of these many years ago for HN.Within like an hour or two pg emailed me asking me to stop. I didn't know it at the time, but HN was being run on a rusty potato and scraping the homepage every 5 or 10 seconds was causing significant load.reply",
      "Haha, my version makes a websocket connection to the official Firebase that the HN servers already send everything to, so it is zero extra load on HNreply",
      "Yours is the MUCH better approach. When I did it, no api!reply",
      "That sounds interesting, are there any public details on this? Is it https://github.com/HackerNews/API ?reply",
      "You can stream the ID of the most recent item with something like this:  curl -N -H \"Accept: text/event-stream\" \"https://hacker-news.firebaseio.com/v0/maxitem.json\"\n\nThen you will need to iterate through the new item IDs and fetch them, e.g.https://hacker-news.firebaseio.com/v0/item/45534174.jsonreply",
      "Afaict, HN is still running on a rusty potato. The software's written well, so it doesn't need to run on more than that. (What's going to happen to it? Someone links to it from HN?)reply",
      "less rusty as of ~sep 2024 :-) https://news.ycombinator.com/item?id=44099006reply",
      "They've upgraded to a multi-eye potato\u203d Truly the wonders of modern technology have no bound.reply",
      "I mean, I love what it says about the insanity of some of the tech stacks that we run these days.The potato with multiple eyes works to serve one of the more important and trafficked properties on the Internet.reply",
      "> one of the more important and trafficked properties on the Internet.I like HN, but it's really only important within a very niche subset of the Internet, and it also doesn't have much traffic. There's like a single post submitted every two minutes. That's not much.reply"
    ],
    "link": "https://jerbear2008.github.io/hn-live/",
    "first_paragraph": ""
  },
  {
    "title": "Figure 03, our 3rd generation humanoid robot (figure.ai)",
    "points": 268,
    "submitter": "lairv",
    "submit_time": "2025-10-09T13:27:14 1760016434",
    "num_comments": 278,
    "comments_url": "https://news.ycombinator.com/item?id=45527402",
    "comments": [
      "All of the examples in videos are cherry picked. Go ask anyone working on humanoid robots today, almost everything you see here, if repeated 10 times, will enter failure mode because the happy path is so narrow. There should really be benchmarks where you invite robots from different companies, ask them beforehand about their capabilities, and then create an environment that is within those capabilities but was not used in the training data, and you will see the real failure rate. These things are not ready for anything besides tech demos currently. Most of the training is done in simulations that approximate physics, and the rest is done manually by humans using joysticks (almost everything they do with hands). Failure rates are staggering.reply",
      "The last example they show (pick up package from pile, put it label-down on conveyor, repeat) seems to be the most realistic. They even have an uncut video of their previous model doing that for an hour on twitter [1].I'm not sure that task needs a humanoid robot, but the ability to grab and manipulate all those packages and recover from failures is pretty good1: https://x.com/adcock_brett/status/1931391783306678515reply",
      "> I'm not sure that task needs a humanoid robotAn industrial robot arm with air powered suction cups would do the trick...\nhttps://bostondynamics.com/products/stretch/ ......  So the task they work best at is the task there is already cheaper better robots specialized for.reply",
      "I feel like we're entering the era of general and inefficient solutions to problems.Like LLMs being used to pick values out of JSON objects when jq would do the job 1000x more efficiently.This is what this whole field feels like right now. Let's spend lots of time and energy to create a humanoid robot to do the things humans already decided humans were inefficient at and solved with specialised tools.Like people saying \"oh it can wash my dishes for me\". Well, I haven't washed dishes in years, there's a thing called a dishwasher which does one thing and does it well.\"Oh it can do the vacuuming\". We have robot vacuums which already do that.reply",
      "Human form robots are a case of Jake of all trades and master of none. Sure I have a dishwasher thats more efficient at doing the job than me but I still end up doing dishes because the cast iron frying pan can't going in there without ruining the polymerised layer of oils that have been baked into it and i would have to repeatedly oil and reheat it and stink up the house with smoke reseasoning it afterwards, and I have hand wash the thermos and travel mugs, and dishwasher arent good for the sharp knives and etcetera etc etc... sure the rumba can vacume very efficiently but it suck at gating around furniture leg or gaps to small for a 14'' diameter circle to fit through so I have to vacume all of the bits it can't get to. Sure the a robot lawn mower can do my yard very efficiently but it cant move the childrens toys out of the grass or open the gate to the front yard or close the gate to keep the dogs from running out the gate once its open. Specialized tools suck at edge cases. Human form robots if they ever works (big if) can do all of the edge cases and take advantage of all the tools made for humans I already have to do all of the those other jobs.reply",
      "have you ever googled a simple maths question? I often come back to that and realise we've been in this era for quite a while. Calculator would probably be 1000x more efficient!reply",
      "Sure, but I have to launch the calculator, instead of just typing it into the ever present search bar of my persistent open browser.If I could just type it into my shell, that would be nice. I\u2019m sure there\u2019s some command (or one could be trivially made) to evaluate an equation, but then you get to play game with shell expansions and quotes.In emacs I have to convolute the equation into prefix.All minor stuff but it adds up.reply",
      "Of course it does not. We just add scanners in up down left and right of the conveyor. Never touching the package.reply",
      "I think the use case here is smaller to medium size businesses that don't need a $150k suction robot arm 24/7, but do need 24/7 help with warehousing, packaging, restocking, taking inventory, sorting mailing, applying shipping labes, etc. With a single humanoid robot you can do all that for, at some point, possibly as low as $20k for a one-time robot purchase.reply",
      "> one-time robot purchase.With a hefty subscription to make it do anything useful.reply"
    ],
    "link": "https://www.figure.ai/news/introducing-figure-03",
    "first_paragraph": "Today we\u2019re introducing Figure 03, our 3rd generation humanoid robot. Figure 03 is designed for Helix, the home, and the world at scale. Our goal is to deliver a truly general-purpose robot - one that can perform human-like tasks and learn directly from people. To realize this vision, our engineering and design teams completed a ground-up hardware and software redesign to ship Figure 03 for:Helix: Figure 03 features a completely redesigned sensory suite and hand system which is purpose-built to enable Helix - Figure's proprietary vision-language-action AI.The home: Figure 03 has several new features, including soft goods, wireless charging, improved audio system for voice reasoning, and battery safety advancements that make it safer and easier to use in a home environment.\u00a0Mass manufacturing: Figure 03 was engineered from the ground-up for high-volume manufacturing. In order to scale, we established a new supply chain and entirely new process for manufacturing humanoid robots at BotQ.T"
  },
  {
    "title": "The Burrows-Wheeler Transform (sandbox.bio)",
    "points": 63,
    "submitter": "g0xA52A2A",
    "submit_time": "2025-10-09T20:00:31 1760040031",
    "num_comments": 13,
    "comments_url": "https://news.ycombinator.com/item?id=45532352",
    "comments": [
      "Noteworthy that the paper that was published describing this technique came at a time when IP lawyers had begun to destroy the world wrt to small business innovation. And that they released it unencumbered is a huge debt of gratitude that we haven\u2019t really honored.reply",
      "This is a good article and a fun algorithm. Google made a great series of compression videos a while ago - albeit sometimes silly. For the Burrows-Wheeler one they interviewed Mike Burrows for some of the history. https://youtu.be/4WRANhDiSHMreply",
      "I wonder if he came up with it when pondering permuted indexes.  Which used to be a feature of the man pages system.reply",
      "This is great. The best article I have read on BWT and experimented was in Dr Dobbs Journal around 1996-97.reply",
      "The unintuitive part of BWT to me was always the reverse operation, which was the only thing the post didn't give intuition for :-)reply",
      "Most BWT descriptions: now draw the rest of the owl.Once upon a time I found one that did the entire round trip, I neglected to bookmark it. So when I eventually forgot how it worked, or wanted to show others, I was stuck. Never did find it.reply",
      "Good point, thanks! I'll add a subsection about the intuition for that.reply",
      "Thanks, man! This helps a lot, because as you say the algorithm is not intuitive. The description of the type of data it is very good for is the best value-adding part of this writeup. Greatly appreciated!reply",
      "Author here, nice to see the article posted here! I'm currently looking for ideas for other interactive articles, so let me know if think of other interesting/weird algorithms that are hard to wrap your head around.reply",
      "I was once mentioning this transform to someone and they were like \u201cwhat? The Bruce Willis transform?\u201d - I guess my pronunciation sucked that much.reply"
    ],
    "link": "https://sandbox.bio/concepts/bwt",
    "first_paragraph": "By Robert AboukhalilOctober 9, 2025In this interactive article, we explore the borderline-magical algorithm known as the Burrows-Wheeler Transform (BWT). It\n\t\tpowers data compression in bzip2, and is used by sequence alignment tools like bowtie and bwa, both of which were named after the algorithm.The BWT has 2 key properties:Before we dive in, you should know that the BWT has a third, unofficial property: it is not intuitive. Many\n\t\tof the steps in the algorithm will seem arbitrary and it might not be clear why you're even doing them. I'm hoping this\n\t\tarticle helps you build some intuition around the BWT.To apply the BWT on a string like banana, there are 3 steps to follow: Write down all rotations: Sort rotated strings: The BWT is the last column:The $ marks the end of the string, and is needed to make the BWT reversible. Without that marker, you could still\n\t\tregenerate the matrix in Step , but you wouldn't know which row contains the original string. If it's\n\t\tan English word, you"
  },
  {
    "title": "Time Warp IDE \u2013 Complete environment for old-school coding (github.com/james-honeybadger)",
    "points": 6,
    "submitter": "honeybadger1965",
    "submit_time": "2025-10-09T23:54:31 1760054071",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=45534227",
    "comments": [
      "The AI generated \"Reddit Strategy Guides\", and very cluttered repo aren't a great look (binaries, really?). Did this project make heavy use of an LLM assistant?reply",
      "So the core idea is that Time Warp is a retrocoding IDE that compiles PILOT, BASIC, and Logo straight to native Linux binaries with GCC\u2014no interpreter or emulator required.Interesting that it treats these old educational languages as truly compiled targets (with an IDE and plugin/games folders) so classic code runs at native speed with zero runtime dependencies.reply",
      "TimeWarp IDE compiles three classic educational programming languages (PILOT, BASIC, Logo) from old-school computer languages into modern native Linux executables using GCC. No interpreters or emulators - generates standalone binaries with zero runtime dependencies.Why it matters:\n\u2022 Educational languages designed for teaching (not just programming)\n\u2022 Native performance vs interpreted execution\n\u2022 Preserves classic syntax while enabling modern distribution\n\u2022 Perfect for computer science education and retro computingQuick demo:\npip install timewarp-ide\ntimewarp-compiler hello.bas -o hello && ./hellohttps://github.com/James-HoneyBadger/Time_WarpThe compiler generates optimized C code with custom runtime libraries for each language. PILOT handles branching and text interaction, BASIC supports arrays and line-numbered programming, Logo creates turtle graphics output.Open source, MIT licensed. Built in Python with comprehensive documentation and sample programs.reply",
      "Hey, could I ask what percentage of the repo has been vibe coded, roughly? Just wondering.reply"
    ],
    "link": "https://github.com/James-HoneyBadger/Time_Warp",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n         \ud83d\ude80 \n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Compile Educational Programming Languages to Native ExecutablesTimeWarp Compiler is a command-line tool that compiles educational programming languages (PILOT, BASIC, Logo) to native Linux executables. Transform your educational code into standalone programs that run without interpreters.\n\nCompile 3 educational programming languages to native executables:Comprehensive examples demonstrating language features:Each language includes optimized C runtime libraries for:We welcome contributions! Please see our Contributing Guide.TimeWarp Compiler is open source software licensed under the MIT License. See LICENSE for details.\u23f0 TimeWarp Compiler - Transform educational code into native executables.\n         \ud83d\ude80 \n   "
  },
  {
    "title": "Embracing the parallel coding agent lifestyle (simonwillison.net)",
    "points": 90,
    "submitter": "jbredeche",
    "submit_time": "2025-10-06T10:40:28 1759747228",
    "num_comments": 80,
    "comments_url": "https://news.ycombinator.com/item?id=45489884",
    "comments": [
      "I believe AI isn't replacing developers, instead, it's turning every software engineer into a hybrid between EM + IC, basically turning them into super-managers.What we need is better tools for this upcoming new phase. Not a new IDE; we need to shift the whole paradigm.Here's one example: If we give the same task to 3 different agents, we have tools to review a diff of each OLD vs NEW separately, but we need tools to review diffs of OLD vs NEW#1 vs NEW#2 vs NEW#3. Make it easy to mix-and-match what is best from each of them.From what I've seen, the idea that AI is turning developers into super-managers is why some people struggle to adapt and quickly dismiss the experience. Those who love to type their code and hate managing others tend to be more hesitant to adapt to this new reality. Meanwhile, people who love to manage, communicate, and work as a team are leveraging these tools more swiftly. They already know how to review imperfect work and give feedback, which is exactly what thriving with AI looks like.reply",
      "I'm very happy to see the article covering the high labor costs of reviewing code.  This may just be my neurodivergent self but I find code in the specific style I write to be much easier to quickly verify since there are habits and customs (very functional leaning) I have around how I approach specific tasks and can easily handwave seeing a certain style of function with the \"Let me just double check that I wrote that in the normal manner later\" and continue reviewing a top-level piece of logic rather than needing to dive into sub-calls to check for errant side effects or other sneakiness that I need to be on the look out for in peer reviews.When working with peers I'll pick up on those habits and others and slowly gain a similar level of trust but with agents the styles and approaches have been quite unpredictable and varied - this is probably fair given that different units of logic may be easier to express in different forms but it breaks my review habits in that I keep in mind the developer and can watch for specific faulty patterns I know they tend to fall into while building up trust around their strengths.  When reviewing agentic generated code I can trust nothing and have to verify every assumption and that introduces a massive overhead.My case may sound a bit extreme but in others I've observed similar habits when it comes to reviewing new coworker's code, the first few reviews of a new colleague should always be done with the upmost care to ensure proper usage of any internal tooling, adherence to style, and also as a fallback in case the interview was misleading - overtime you build up trust and can focus more on known complications of the particular task or areas of logic they tend to struggle on while trusting their common code more.  When it comes to agentically generated code every review feels like interacting with a brand new coworker and need to be vigilant about sneaky stuff.reply",
      "https://raw.githubusercontent.com/obra/dotfiles/6e088092406c... contains the following entry:\"- If you're uncomfortable pushing back out loud, just say \"Strange things are afoot at the Circle K\". I'll know what you mean\"Most of the rules seem rationale. This one really stands out as abnormal. Anyone have any idea why the engineer would have felt compelled to add this rule?This is from https://blog.fsck.com/2025/10/05/how-im-using-coding-agents-... mentioned in another commentreply",
      "If you really want your mind blown, see what Jesse is doing (successfully, which I almost can\u2019t believe) with Graphviz .dot notation and Claude.md:https://blog.fsck.com/2025/09/29/using-graphviz-for-claudemd...reply",
      "this is just 21st century voodooreply",
      "In a good sense or a bad one?reply",
      "I'd say a bad one. Why make your Claude.md not intuitive to understand and edit?reply",
      "That doesn't surprise me too much coming from Jesse. See also his attempt to give Claude a \"feelings journal\" https://blog.fsck.com/2025/05/28/dear-diary-the-user-asked-m...reply",
      "Naively, I assume it's a way of getting around sycophancy. There's many lines that seem to be doing that without explicitly saying \"don't be a sycophant\" (I mean, you can only do that so much).The LLM would be uncomfortable pushing back because that's not being a sycophant so instead of that it says something that is... let's say unlikely to be generated, except in that context, so the user can still be cautioned against a bad idea.reply",
      "Is it your impression that this rules statement would be effective? Or is it more just a tell-tale sign of an exasperated developer?reply"
    ],
    "link": "https://simonwillison.net/2025/Oct/5/parallel-coding-agents/",
    "first_paragraph": "5th October 2025For a while now I\u2019ve been hearing from engineers who run multiple coding agents at once\u2014firing up several Claude Code or Codex CLI instances at the same time, sometimes in the same repo, sometimes against multiple checkouts or git worktrees.I was pretty skeptical about this at first. AI-generated code needs to be reviewed, which means the natural bottleneck on all of this is how fast I can review the results. It\u2019s tough keeping up with just a single LLM given how fast they can churn things out, where\u2019s the benefit from running more than one at a time if it just leaves me further behind?Despite my misgivings, over the past few weeks I\u2019ve noticed myself quietly starting to embrace the parallel coding agent lifestyle.I can only focus on reviewing and landing one significant change at a time, but I\u2019m finding an increasing number of tasks that can still be fired off in parallel without adding too much cognitive overhead to my primary work.Here are some patterns I\u2019ve found fo"
  },
  {
    "title": "ESP32 and Termux (gavide.dev)",
    "points": 86,
    "submitter": "gavide",
    "submit_time": "2025-10-09T16:56:52 1760029012",
    "num_comments": 23,
    "comments_url": "https://news.ycombinator.com/item?id=45530261",
    "comments": [
      "I've been playing with Termux, both on Chromebook (Eve), and my Samsung Galaxy S22 - pretty cool, though hit some issue with recent `bazel` - as newer versions try to access a `/dev` endpoint that's not available.Quick fix, was to add `~/.bazelrc` this:    common --experimental_collect_system_network_usage=false\n\nand then it works! Though sometimes I need to first `termux-chroot` and then it it handles cases, where some tooling expects `/usr/bin` and not `/mnt/data/com.termux/files/usr/bin`On measurements it's a bit 2x, 3x slower than Crostini (Termina) on Chromebook, but being available (so far) on all my Android devices is just awesome!And there exist X11 too!I wish there would be backdoor for F-Droid in the future, though maybe not as it seems :(reply",
      "hm you can try out userland https://userland.tech/download/ which runs it inside proot and you can use something like alpine or debian and they can actually make the vnc/installing gui setup actually pretty easy.Highly recommended.I coded some python with micro in alpine in userland on my phone.I really really enjoyed it, like more than my pc for that day. I am proud of it.reply",
      "very cool. termux has to be peak for unbridled nerddom, the new linux terminal in android 16 is really a pale shadow of it. you don't get access to anything non-virtual, not even the gpu (atleast, i couldn't get it to work.)theres so much cool hardware on modern smartphones, with quite solid drivers by virtue of the (relatively stringent) android quality requirements, and its all locked away. video encoders, decoders, 3d accelerators, etc, but none of it is really accessible in a power-user kind of way.some more thoughts...the android development kit really is very heavy. compared to `gcc -o main main.cpp && ./main`, it is several orders of magnitude away.the jetpack stuff and whatnot - the big android app shops probably do actually appreciate that stuff. but i wish the dev env 'scaled to zero' as they say, but in the sense of cognitive overload.could it be time to move away from java, and shift towards everything being a native binary? we have the tools now to make it secure, and its not like phones get faster 'for free' anymore. it would also vastly simplify the developer experience.reply",
      "You don't have to use Android. I've been using various GNU/Linux phones for the last 17 years, so being able to do `gcc -o main main.cpp && ./main` on a phone is just natural to me. Back in 2008, as a teenager, I could choose to spent my first earned money to get me either one of the first GNU/Linux phones on the market or the first Android phone, and I feel that as the time goes it only validates my decision.reply",
      "What is your feedback in regards to battery? Android have been exhausted in development to optimize battery usage but I'm reading linux phones don't really care that much so you end up with a dead phone in less of a day.Has a power user, what has your experience been on that topic?I'd switch my phone to linux on a heartbeat because android apps seem compatible enough nowadays to run there too but battery is always the pressing limitation.My thanks in advance.reply",
      "I'm using a Librem 5 and its battery life is good enough for me - it lasts pretty much exactly what's needed for me to get through a typical day, so I often get home with the battery almost but not entirely flat. When I know that I'm going to be using it more intensively or need it to last longer, I'll usually just put a spare battery into my backpack, but I rarely actually need to use it when these days you can just charge up in a train or tram.That's not a universal property of these devices though - N900 that I used previously could easily last a few days.reply",
      "Having a spare battery or being able to change battery seems like a fever dream for people on new android devices.I am seriously interested in linux phones... like I am interested in either getting a grapheneos phone or somehow looking through my old garage of parents phones to see if any phone can be linux'dI don't want to spend money right away but I am also a teenager, but the thing that's kinda stopping me from spending is that terminal can already be done through things like termux and the question I am asking myself is: is it good enough I have written back to back comments about it on why I think running android on linux using waydroid seems more performant than vice versa but I am curious.Are there any recommendations that you have for me? I want to get linux on my phone but I am pretty sure that there are no second hand linux phones and I think it might cost me a lot of money (well for my country) anyway and I feel like the issue for me not being able to tinker is monetary of sorts.reply",
      "I've been looking at Linux phones for a while, and now the latest 'sideloading' lockdown from Google has pushed me to seriously consider getting off Android. What phones do you use or recommend for someone who has a little Linux experience?reply",
      "It is possible to write native code for Android using Native Development Kit. Typical NDK use would be to develop a library that is then called into by java code. But one can make whole app with it, 100% java-free:https://github.com/cnlohr/rawdrawandroidreply",
      "Yes I am also interested in something like this 100% java-free but instead of C I'd prefer golangI have been thinking more and more about creating golang applications for android simply because of how much I admire f-droid.There are apps that have done this through 2 approacheshttps://github.com/xlab/android-go?tab=readme-ov-file (Either something like this)\nOr https://github.com/LeastAuthority/destiny which is a dart app but uses golang's backend using https://github.com/LeastAuthority/dart_wormhole_william \nTLDR: they create dart bindings to go code and run it on android...I know sooo many good golang applications on linux that I wish more people of android could access it and in an even nice way via something like f-droid so I am definitely contemplating what might be the best way for something like this...For rust applications, I think that tauri might make the most sense, but I am just curious as to what you guys think is the best way for a beginner to create a golang/rust android application without worrying *too much*reply"
    ],
    "link": "https://blog.gavide.dev/blog/esp32-and-termux",
    "first_paragraph": "If you\u2019re like me, you might enjoy being able to do things on your phone that you might otherwise do from your computer.I wanted to play around with my ESP32-WROOM-32 development board, but apparently there is no online guide specifically for Termux, so I want to document the steps that worked for me as a future reference for myself and others.\u26a0\ufe0f DISCLAIMERI am not responsible for any damage that could occurr by following this guide. This is written for educational purposes.\u2757\ufe0f NOTEMake sure that your USB-A cable supports data transfer. This is crucial.Many cables I tried either did not support data transfer or were not delivering the power correctly, making the board brownout.The first thing you need to do is installing TCPUART transparent Bridge. This application will act as a bridge between the android Serial USB API and Termux. It will expose a local two-way TCP server that will forward the data to and from UART.Installing a third party application is not ideal. An alternative could"
  },
  {
    "title": "Show HN: I built a web framework in C (github.com/ashtonjamesd)",
    "points": 274,
    "submitter": "ashtonjamesd",
    "submit_time": "2025-10-09T12:45:28 1760013928",
    "num_comments": 149,
    "comments_url": "https://news.ycombinator.com/item?id=45526890",
    "comments": [
      "This is some of the cleanest, modern looking, beautiful C code I've seen in a while. I know it's not the kernel, and there's probably good reasons for lots of #ifdef conditionals, random underscored types, etc in bigger projects, but this is actually a great learning piece to teach folks the beauty of C.I've also never seen tests written this way in C. Great work.C was the first programming language I learned when I was still in middle/high school, raising the family PC out of the grave by installing free software - which I learned was mostly built in C. I never had many options for coursework in compsci until I was in college, where we did data structures and algorithms in C++, so I had a leg up as I'd already understood pointers. :-)Happy to see C appreciated for what it is, a very clean and nice/simple language if you stay away from some of the nuts and bolts. Of course, the accessibility of the underlying nuts and bolts is one of the reasons for using C, so there's a balance.reply",
      "> I'd already understood pointers.Ok I hear this all the time.  Are pointers really that hard for so many people to understand?  I'm not trying to brag it took me I think like 15 minutes to grok them from learning about them the first time.  I'm sure it took me longer to be proficient but I don't get this legendary difficulty aura that seems to surround their existance.Also yes nice project.Job app complete projected archived and abandoned in 3...2..1...  :).  I hope not.reply",
      "Understanding the concept is easy.The problem arises when you start to mix memory management with more complex structures.It\u2019s extremely easy to make mistakes, and you must be very careful about ownership and clean up. Those things are not strictly related to pointers, but in C, it\u2019s inevitable to use pointers to handle them. That's why people say pointers are hard.reply",
      "The issue with pointers is that CS gets taught in a VERY bad way. The way it should be taught is starting with basic assembly on a microprocessor. This trains your brain to think of memory locations and data in memory.Then when you start using pointers, it makes sense. If variable is a pointer, that means its a memory location. *variable is a way to get that data. Then arrays is just a wrapper around pointer arithmetic.Whereas with CS, you learn about variables first, which is an abstraction on top of memory, and pointers don't make sense in this regard.This is why any EE/ECE  grads are much better developers than CS grads, because once you understand fundamentalsreply",
      "Springer press has a book \"Programming for Engineers and Scientists\" or something like that, which is the first book I picked up to \"self teach CS\". From the get go pointers are involved and explained in this linear memory model and explained how they work on the stack and what not. I always thought this was the best approach; the reality is taught first, the abstraction (syntax) second. Not sure why so many programming books do it the other way.reply",
      "It's a rabbithole.  Pointer to array of structures that have pointer fields. Array of pointers to structures etc. You pass them around and trip over the passing semantics, uninitialised pointers etc etc.reply",
      "Hmm.  Perhaps I've just never encountered a hairy enough situation with them?  That's what the eternal thought tracker notepad on my desk is for though.  Maybe people are trying to do it all in their head?  Pen and paper are too old school for the cool new 1000x devs?I still feel like this argument could be transferred to nearly any concept in CS though.  Abstract enough anywhere and you will always start exceeding the brains working memory.reply",
      "A simple properly implemented doubly linked list or circular buffer is already above the level of most beginner C programmers. Though they're great exercises.reply",
      "I don't think I would be comfortable saying I understand something if I'm not able to get it 100% clearly just from my thoughts and re-explain it to someonereply",
      "Everything is just numbers, then we pretend they are arrays, pointers, objects, classes, floats, websites, applications, certificates etc.. The imaginary array can really only contain numbers but we can pretend the numbers are other things, unicorns, rainbows, laser unicorns etcWe are just pretending, there is nothing to understand?reply"
    ],
    "link": "https://github.com/ashtonjamesd/lavandula",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A fast, lightweight web framework in C for building modern web applications\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.Lavandula is a lightweight, fast, and intuitive C web framework designed for building modern web applications quickly. It focuses on simplicity, performance, and productivity, providing all the essentials without the bloat of heavier frameworks.To install Lavandula, follow these setps.You should see the following:You should now be able to run the Lavu CLI tool. Refer to api.md for how to use Lavu.Output:Your application will run on http://localhost:3000/.Read the docsContributions are welcome. Feel free to submit pull requests or open issues for feature requests or bugs.Some things that probably need looking at are:Lavandula is register"
  },
  {
    "title": "Show HN: GYST \u2013 Digital organizer that replicates the feeling of a physical desk (gyst.fr)",
    "points": 17,
    "submitter": "ricroz",
    "submit_time": "2025-10-09T21:18:29 1760044709",
    "num_comments": 7,
    "comments_url": "https://news.ycombinator.com/item?id=45533208",
    "comments": [
      "Very nice. The site is down at the moment, but I watched the video tour and liked what I saw.I built a prototype of something vaguely similar a few years ago that replicated a desk with papers stacked in piles. No searching, no sorting, no tagging--just typing on notes, dragging them into stacks, and a paintbrush to draw on the deck. This lets you leverage the brain's natural tendency to associate locations with ideas, like a memory palace. Want that recipe from a few weeks ago? You remember it was in a pile by a blue house you drew.I see a similar philosophy here, expanded with more features and a larger scope. It's also great seeing a notes/organization system that isn't the same stupid three panels, tags on the left, etc.Looking forward to trying it out when the site returns. Thanks for sharing!reply",
      "Just a note, I almost immediately closed your site after opening because on my phone all I see when it first opens is a sign up form. I did end up scrolling and seeing the content, but I'd recommend dropping that form either off the front page or at least below the description of what your product is.reply",
      "I saw the same, then scrolled and saw an embedded youtube video asking me to \u201csign in to prove i\u2019m not a bot\u201d\u2026 I did close the site. I recommend moving the sign up form below some more helpful/descriptive content.reply",
      "I like the idea a lot; seems similar to the abandoned KDE Baskets?reply",
      "It might be the nostalgia, but I miss the leatherbound feeling of Lotus Organizer, and was hoping this website was something similar. Maybe it could support themes?reply",
      "nice start.  i signed up.  looking forward to mobile version.some observations:items -> stacks, items -> folders, folders -> stacks, stacks -> desktop.  each item can only be in single folder.  copies of items can go into different folders.  drag item to copier machines to duplicate.reply",
      "can the each page be exported to static html/css? That will be killer feature and also makes this a instant WISIWG editor.reply"
    ],
    "link": "https://gyst.fr/",
    "first_paragraph": "Where order meets freedom.mobile version comingBe creative in your organization.And organized in your creativity."
  },
  {
    "title": "Show HN: I wrote a full text search engine in Go (github.com/wizenheimer)",
    "points": 73,
    "submitter": "novocayn",
    "submit_time": "2025-10-09T17:09:22 1760029762",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=45530388",
    "comments": [
      "I really liked the README, that was a good use of AI.If you're interested in the idea of writing a database, I recommend you checkout https://github.com/thomasjungblut/go-sstables which includes sstables, a skiplist, a recordio format and other database building blocks like a write-ahead log.Also https://github.com/BurntSushi/fst which has a great Blog post explaining it's compression (and been ported to Go) which is really helpful for autocomplete/typeahead when recommending searches to users or doing spelling correction for search inputs.reply",
      ">>I wrote a full text search engine in Go>I really liked the README, that was a good use of AI.Human intelligences, please start saying:(A)I wrote a $something in $language.Give credit where is due. AIs have feelings too.reply",
      "> AIs have feelings tooOhh boi, that\u2019s exactly how the movie \"Her\" started! XDreply",
      "tysm, i love this, FST is vv coolreply",
      "Did you vibe code this? A few things here and there are a bit of a giveaway imho.reply",
      "On my way to make a Dexter meme on thisWhen you think OP vibe-coded the project but can\u2019t prove it yethttps://x.com/FG_Artist/status/1974267168855392371reply",
      "OH YES! I Love it/this meme lol!!Dexter's memes have been popping up recently and I am loving themI don't know who bay harbor butcher is though :sob: but I don't want spoilers, I will watch it completely some dayMy friend says that he watched complete dexter just via clips lol.reply",
      "Another possible tell (not saying this is vibe coded) is when every function is documented, almost too much commentsreply",
      "Ohh, I thought that inline comments would make it grokkable and be a low-friction way in. Seems this didn\u2019t land the way I intended :'Should a multi-part blog would've been better?reply",
      "I like it, I comment exactly like you do.  Comments are free, storage is plentiful, why not add comments everywhere?!reply"
    ],
    "link": "https://github.com/wizenheimer/blaze",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        High-performance Full Text Search Engine written in Go\n       There was an error while loading. Please reload this page.\nThere was an error while loading. Please reload this page.\nDocs  \nA high-performance full-text search engine in Go with inverted indexing, boolean queries, phrase search, proximity queries, and BM25 ranking\u2014powered by a flexible query engine, roaring bitmaps, and skip lists.Blaze is a Go engine that provides fast, full-text search capabilities through an inverted index implementation. It's designed for applications that need to search through text documents efficiently without relying on external search engines.Key Highlights:Output:An inverted index is like the index at the back of a book. Instead of scanning every document to find a word, the index tells you exactly where each word appears.Example:Given these do"
  },
  {
    "title": "Finding a VS Code Memory Leak (randomascii.wordpress.com)",
    "points": 42,
    "submitter": "brucedawson",
    "submit_time": "2025-10-09T20:27:28 1760041648",
    "num_comments": 5,
    "comments_url": "https://news.ycombinator.com/item?id=45532680",
    "comments": [
      "> For obscure technical reasons they are always multiples of four.Why did I know that that link went to Raymond Chen before clicking it... That man is a treasure.reply",
      "In 2021 I found an invisible memory leak in a tool (VS Code) that I have never used. This is the story of how.reply",
      "Re the last wish, isn't that exactly what ulimit is for?reply",
      "On Linux, yes, but this was Windows-specific code and Windows has no equivalent mechanism to ulimits.reply",
      "> Sometimes I think it would be nice to have limits on resources in order to more automatically find mistakes like thisI was actually fairly disappointed when Visual Studio (not code) went to 64-bit.  Because I knew its memory usage was now going to be unconstrained.  Still way better than the unapologetic gluttony of Rider but experiences showed it to be a bit leaky over time (tip: Ctrl-Alt-Shift-F12 twice does a full garbage collection https://learn.microsoft.com/en-us/visualstudio/ide/visual-st...)Also remember that all your references (pointers) are going to double in size so right off the bat it will use more, potentially a lot more depending on how reference-heavy your data isreply"
    ],
    "link": "https://randomascii.wordpress.com/2025/10/09/finding-a-vs-code-memory-leak/",
    "first_paragraph": "In 2021 I found a huge memory leak in VS code, totalling around 64 GB when I first saw it, but with no actual limit on how high it could go. I found this leak despite two obstacles that should have made the discovery impossible:So how did this work? How did I find an invisible memory leak in a tool that I have never used?This was during lockdown and my whole team was working from home. In order to maintain connection between teammates and in order to continue transferring knowledge from senior developers to junior developers we were doing regular pair-programming sessions. I was watching a coworker use VS Code for\u2026 I don\u2019t remember what\u2026 and I noticed something strange.So many of my blog posts start this way. \u201cThis doesn\u2019t look right\u201d, or \u201chuh \u2013 that\u2019s weird\u201d, or some variation on that theme. In this case I noticed that the process IDs on her system had seven digits.That was it. And as soon as I saw that I knew that there was a process-handle leak on her system and I was pretty sure th"
  },
  {
    "title": "Rubygems.org AWS Root Access Event \u2013 September 2025 (rubycentral.org)",
    "points": 231,
    "submitter": "ilikepi",
    "submit_time": "2025-10-09T17:48:23 1760032103",
    "num_comments": 122,
    "comments_url": "https://news.ycombinator.com/item?id=45530832",
    "comments": [
      "AWS account root access on a language package registry for 11 days. Not EC2 root - AWS account root. Complete control over IAM, S3, CloudTrail, every-damn-thing.They're claiming \"no evidence of compromise\" based on CloudTrail logs that AWS root could have deleted or modified. They even admit they \"Enabled AWS CloudTrail\" after regaining control - meaning CloudTrail wasn't running during the compromise window.You cannot verify supply chain integrity from logs on a system where root was compromised, and you definitely can't verify it when the logs didn't exist (they enabled them during remediation?).So basically, somebody correct me here if I'm wrong but ... Every gem published Sept 19-30 is suspect. Production Ruby applications running code from that window have no way to verify it wasn't backdoored. The correct response is to freeze publishing, rebuild from scratch (including re-publishing any packages published at the time? Ugh I don't even know how to do this! ) , and verify against offline backups. Instead they rotated passwords and called it done.reply",
      "Isn't the subtext of this post pretty clearly that the unauthorized actor was Andre Arko, who had until days prior all the same access to RubyGems.org already?The impression I have reading this is that they're going out of their way to make it clear they believe it was him, but aren't naming him because doing so would be accusing him of a criminal act.reply",
      "Let's say that they are 100% correct, we parse the subtext as text, it was totally him.We still do not know the critical details of how (and when) he stored the root password he copied out of their password manager (encrypted in his own password manager? on his pwned laptop? in dropbox? we'll never know!) therefore the whole chain of custody is still broken.reply",
      "The leading contender to replace RubyGems has Andre Arko as a charter member, so this all seems very salient.reply",
      "Right but that speaks more to Andre's character, IMO.Why are you copying a password out of a shared vault that should only be used in break-glass type scenarios?  It's that's not planning for possible malicious action in the future, I don't know what is.You can try and excuse it as having your own break-glass for the break-glass, but that's on the spectrum between irresponsible and incompetent.Again, if the accusation is true, removing him was justifiable from any possible perspective you might have.reply",
      "The other subtext is that they literally have no idea how to run rubygems securely... And what to do in case of a security incident...reply",
      "I'm addressing the question of whether we all had better assume all the RubyGems published after this incident were compromised, and my response is \"that is probably not rational since the actor in this scenario had all this access legitimately just days beforehand\". The rest, I don't care.reply",
      "Look, it's enough to know that Rubygems did not require 2FA before August 2022. There were gems with millions of downloads with owners without 2FA on their accounts. I think your initial assumption is pretty safe even without the ongoing fiasco.reply",
      "The other other subtext is that this sure is an effective distraction from their governance problems, and muddies the waters. Given the utter lack of trust I have for anything the Ruby Central folks say at this point, given the amount of spin and misinformation they've spread already, my default assumption is that this is an excuse to malign someone who may well have had legitimate access, in the process of claiming that you're locking things down, which was always the excuse being made for kicking people out.reply",
      "At this point, it looks like everyone involved, not just RubyCentral, contributed to the governance problems over many years https://archive.md/SEzoV> Regarding Arko\u2019s blog post about his removal, McQuaid [Homebrew Maintainer] told me it\u2019s good that Arko is crediting other people for their contribution and that he\u2019s following open source principles of community and transparency, but that \u201chis \u2018transparency\u2019 here has been selective to things that benefit him/his narrative, he seems unwilling or unable to admit that he failed as a leader in being unwilling or unable to introduce a formal governance process long before this all went down or appoint a meaningful successor and step down amicably.\u201dreply"
    ],
    "link": "https://rubycentral.org/news/rubygems-org-aws-root-access-event-september-2025/",
    "first_paragraph": "As part of standard incident-response practice, Ruby Central is publishing the following post-incident review to the public. This document summarizes the September 2025 AWS root-access event, what occurred, what we verified, and the actions we\u2019ve taken to strengthen our security processes.On September 30th, a blog post raised concerns that a former maintainer continued to have access to the RubyGems.org production environment after administrative access was removed from several accounts earlier that month. We want to share the outcome of our investigation including: what happened, the extent of what we verified, what we got wrong, and the actions we have taken to strengthen our security processes going forward.When this situation came to light, our immediate concern was the integrity and safety of the RubyGems.org service and its data. We take seriously our responsibility to steward the open-source infrastructure that millions of developers rely on each day. While we have found no evid"
  }
]