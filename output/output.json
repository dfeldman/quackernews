[
  {
    "title": "Claude can now search the web (anthropic.com)",
    "points": 733,
    "submitter": "meetpateltech",
    "submit_time": "2025-03-20T16:51:12 1742489472",
    "num_comments": 378,
    "comments_url": "https://news.ycombinator.com/item?id=43425655",
    "comments": [
      "Searching the web is a great feature in theory, but every implementation I've used so far looks at the top X hits and then interprets it to be the correct answer.When you're talking to an LLM about popular topics or common errors, the top results are often just blogspam or unresolved forum posts, so the you never get an answer to your problem.More of an indicator that web search is more unusable than ever, but interesting that it affects the performance of generative systems, nonetheless.\n \nreply",
      ">looks at the top X hits and then interprets it to be the correct answer.LLMs are truly reaching human-like behavior then\n \nreply",
      "https://danstroot.imgix.net/assets/blog/img/comic2.png?auto=...\n \nreply",
      "The longer I've been in the workforce, the more I realize most humans actually kind of suck at their jobs. LLMs being more human like is the opposite of what I want.\n \nreply",
      "That could very well be because the jobs are effectively useless. By no means does that mean the people are, nor is what the income allows them to do. But most jobs sure do seem pointless.\n \nreply",
      "Maybe we already have Universal Basic Income, you just need to have a pointless job to collect it.\n \nreply",
      "One suggested weakness of UBI is a lack of purpose. I wonder if the \"solution\" is somewhat as you implied: jobs without a strict return on investment. You get your stipend, but you're keeping your block clean by sweeping and mulching. They're getting theirs in exchange for cranking out sourdough at cost for the neighbourhood. Someone else gardens for elderly residents.\n \nreply",
      "Not UBI per se, but this exists in rural parts of Southern Spain in some way, and is called Rural Employment Plan (PER in its Spanish initials).The give simple jobs, like cleaning or painting, to people on the lower bottom of earnings. Most people in that plan are people with low formation, like those who left school in their mid teens.\n \nreply",
      "How do we determine who gets what job?\n \nreply",
      "That sounds utopian\n \nreply"
    ],
    "link": "https://www.anthropic.com/news/web-search",
    "first_paragraph": ""
  },
  {
    "title": "Retro Boy: simple Game Boy emulator written in Rust, can be played on the web (github.com/smparsons)",
    "points": 93,
    "submitter": "ingve",
    "submit_time": "2025-03-20T21:54:17 1742507657",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=43429417",
    "comments": [
      "Avid millennial gamer here. Wasn't raised with games. Can someone recommend a good classic game to try?\n \nreply",
      "The game boy Tetris was the first version I played, it was pretty good.Nowdays for a mobile Tetris option i'm using a SNES emulator on my phone (Snes9x EX) and Super Tetris.Meanwhile, there are companies creating on the web and mobile app versions of Tetris, inserting ads and charging money for what should be free.\n \nreply",
      "This is awesome! Very nicely done. I hear a few problems  with the audio emulation, (mostly clicks that shouldn't be there) but it's been a long while since I had my head wrapped around Gameboy emulation. I'm not sure I know what's going wrong exactly.I love how Rust+WASM is an enabler for showing off applications like this which would traditionally be restricted to a desktop environment. Here's my own, an NES emulator, using wasm-bindgen for the translation but otherwise a similar setup:https://rustico.reploid.cafe/?cartridge=patreon/tactus-v0.7-...It's so cool to work on a bit of homebrew, then be able to share a link with someone and have it \"just work\" in their browser. No weird tools, no shady sites, just my game and their feedback.\n \nreply",
      "> I hear a few problems with the audio emulation, (mostly clicks that shouldn't be there)Almost anything WASM+Audio seems to do that in browsers today, unless you're really really careful about what you're doing and leverage multiple threads. I think the issue is mostly around single-thread contexts, where it has to switch between playing audio and other things.I hit the very same issue myself with Bevy not too long time ago, and tracking this issue which has some further links if you wanna go down a rabbit-hole: https://github.com/bevyengine/bevy/issues/4078\n \nreply",
      "Enthusiast noob question. What do you use for display / rendering / gui when doing emulators for wasm?\n \nreply",
      "Wasm executes as its own VM, so you'll need some js glue to display something in the browser.This means you can go both ways, either embed something like imgui in your wasm, or build a ui using html.\n \nreply",
      "i combed through quite a few hobbyist gb emulators while writing mine and found audio to be pretty rarely finished or finished without issues. not sure if it's the same for NES\n \nreply",
      "It plays really slow in Firefox, and there are also audio issues (they may be related?)But in Chrome, this plays really well! Great work!\n \nreply",
      "ofc it is firefox\n \nreply",
      "Fun fact the emulator works fine on Ladybird too, even thought it's very slow now.\n \nreply"
    ],
    "link": "https://github.com/smparsons/retroboy",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A Game Boy emulator written in Rust.\n      \n\n\n  Retro Boy is a simple Game Boy emulator written in Rust that can be played on the web. Try it here.\nRetro Boy is a cycle-accurate Game Boy emulator written in Rust. It uses wasm-pack to translate the Rust code into WebAssembly so it can be played on the web. The web frontend then uses Web Audio API and HTML Canvas for audio and graphics. It also leverages the browser's local storage to persist cartridge RAM data for battery-backed MBC cartridges.To compile the implementation to WebAssembly, you will first need to install wasm-pack with the command cargo install wasm-pack if you haven't done so already. Then, run sh ./build-wasm.sh to build the core project and generate the Javascript binding code in the web frontend directory.The web frontend for this emulator is a React/TypeScript app"
  },
  {
    "title": "McLaren Invented New Carbon Fiber Tape to Build Even More Complex Parts (thedrive.com)",
    "points": 30,
    "submitter": "PaulHoule",
    "submit_time": "2025-03-17T12:53:52 1742216032",
    "num_comments": 15,
    "comments_url": "https://news.ycombinator.com/item?id=43388024",
    "comments": [
      "I don't know if it can be considered \"inventing\" when the article itself states> it\u2019s pioneering the use of an aerospace industry technique known as Automated Rapid Tape Carbon\n \nreply",
      "McLaren has a loooong history of applying carbon fiber in new ways that revolutionize racing - the MP4/1 was the first full carbon monocoque chassis way back in 1981. Even though carbon fiber had previously been used in a limited fashion in other automotive and aerospace applications, most people credit McLaren for really bringing carbon fiber to the automotive world, because the MP4 series of racing cars were so dominant, everyone else copied them.McLaren is also currently leading the F1 world championship (after one race) after having won the constructor's championship last year. So whatever they are doing merits understanding.\n \nreply",
      "They didn't win last year as much Checo handed it to them.\n \nreply",
      "And Lawson might do it yet again this year, if the first race was any indication.Still impressive what they\u2019ve accomplished to respond to an utterly dominant RB.\n \nreply",
      "The article suggests there\u2019s plenty of new tech there.\n \nreply",
      "Where is mass market carbon fiber? Expensive carbon fiber parts aren't interesting.It's not even that expensive if you consider that it's maybe 5k extra now that even a basic car can cost $40000\n \nreply",
      "In consumer bicycles\n \nreply",
      "My hiking poles\n \nreply",
      "Paddles for stand up paddle boards, kayaks\n \nreply",
      "This is low tier Automated Tape Laying (ATL) on flat plate.  Come back when you're doing highly contoured robotic AFP.\n \nreply"
    ],
    "link": "https://www.thedrive.com/news/mclaren-invented-new-carbon-fiber-tape-to-build-even-more-complex-parts",
    "first_paragraph": "\nBy Byron Hurd\nPosted on Mar 6, 2025Carbon fiber has reached a point of borderline oversaturation, even trickling down to borderline-affordably priced performance cars in recent years. But even if we\u2019re not longer as impressed by the use of this once-exotic material as we once were, that doesn\u2019t mean we\u2019ll turn our noses up when there\u2019s an honest-to-goodness industry breakthrough\u2014especially from an engineering outfit like McLaren.After all, McLaren has been fooling around with carbon-fiber reinforced polymers for the better part of forty years. Feel old yet, F1 fans? But once again, McLaren is doing this in a very McLaren way, leading the industry rather than following. This time around, it\u2019s pioneering the use of an aerospace industry technique known as Automated Rapid Tape Carbon\u2014or simply ART carbon\u2014that allows its engineers to use even less material to produce components of the same strength as previous processes, shaving precious mass from the final product. \u201cThe aerospace industr"
  },
  {
    "title": "Zero-knowledge proofs, encoding Sudoku and Mario speedruns without semantic leak (vasekrozhon.wordpress.com)",
    "points": 16,
    "submitter": "pixelpoet",
    "submit_time": "2025-03-18T00:56:19 1742259379",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=43394591",
    "comments": [
      "This is really interesting!I also like how it shows the 'power' of NP-completeness. Explaining zero-knowledge proofs for colouring is fairly easy. Explaining how to go from 3-SAT to colouring is some nice pictures. Explaining how to go from Sudoku to 3-SAT is 5 minutes work (assuming you understand both 3-SAT and Sudoku already).Together, these things let you do zero-knowledge proofs for Sudoku with no more work, and by a similar process, zero-knowledge proofs for any problem in P.\n \nreply",
      "Supplementary material for their video at https://www.youtube.com/watch?v=Otvcbw6k4eo\n \nreply"
    ],
    "link": "https://vasekrozhon.wordpress.com/2025/03/17/zero-knowledge-proofs/",
    "first_paragraph": "Vasek Rozhon's blogBlog posts on computer science / math We published our video on zero-knowledge proofs!Surprisingly, making this video took a lot of work. Zero-knowledge proofs for coloring are one of those algorithms that, in hindsight, seem beautifully simple and clean. But that\u2019s just an illusion\u2014there\u2019s actually a lot going on behind the scenes. We struggled with deciding how in-depth to go and which applications to discuss. In the end, the video covers a bit of everything, and I hope different viewers will find something that sparks their curiosity. If that\u2019s the case, you should definitely check out some slower, more in-depth sources; zero-knowledge proofs are realistically too difficult to understand them from 20 minutes of a video. For example, the following book on cryptography is a classic: https://www.wisdom.weizmann.ac.il/~oded/foc.htmlHere\u2019s a list of topics that did not make it in the video. We pointed out that almost everything can be reduced to 3-coloring. This is clo"
  },
  {
    "title": "Next generation LEDs are cheap and sustainable (liu.se)",
    "points": 54,
    "submitter": "geox",
    "submit_time": "2025-03-17T02:42:16 1742179336",
    "num_comments": 16,
    "comments_url": "https://news.ycombinator.com/item?id=43384697",
    "comments": [
      "When I was fiddling with LED circuits back in the 70s (!) I experimented with turning the LED on and off with a square wave. If you turned it on and off rapidly enough, your eye did not notice it, and your eye perceived it as fully bright. (Adjusting both the frequency and duration of the \"on\" part.)Hence, you could get some decent power savings doing this.I wonder if this is commonly known. I've mentioned it to a couple EEs over the years, and they were able to reduce the power consumption of their devices.\n \nreply",
      "PWM. This is widely used method for dimming.\n \nreply",
      "How could the same modulation achieve \"dimming\" and \"fully bright\" simultaneously?\n \nreply",
      "The apparent brightness is caused by the ratio of on/off and is called the duty cycle. 50% brightness would mean that half the time the light is on, and half the time the light is off.If the cycling of the light on and off is done at say 10kHz it's perceived as a dim light.\n \nreply",
      "I have a couple LED night lights that are triggered by a photocell to only turn on in the dark. I've often wondered if the trigger circuit consumed more power than just leaving the LED on.\n \nreply",
      "Current LEDs are pretty cheap and comparatively sustainable (to other lighting technology), but lots of LED based lighting devices ship with:- non replaceable batteries (flashlights)- unreliable drivers that fail before the LED does, or kill the LED by heat or excessive voltageHappy to see people working on new LED tech but the downstream effects of selling disposable stuff has to be much worse?\n \nreply",
      "The life of indoor LED bulbs has improved over the years. But I learned to only install them in vented fixtures.\n \nreply",
      "\"sustainable\" was incorrectly translated from the Swedish \"milj\u00f6v\u00e4nliga\" which instead means \"environmentally-friendly\" (\"sustainable\" is \"h\u00e5llbar\" in Swedish)\n \nreply",
      "It's a marketing term anyway, it doesn't mean anything.\n \nreply",
      "I came back to say pretty much that. Since these buzzwords as used in most of society today barely mean anything at all, the writer was probably happy enough to namecheck something vaguely positive and endorsed to do with environment stuff.It would have tickled my funny bone if they'd gone with \"Green\" in this case.(Thanks nonetheless to ilove_banh_mi, for setting the record straight)\n \nreply"
    ],
    "link": "https://liu.se/en/news-item/nasta-generations-lysdioder-ar-billiga-och-miljovanliga",
    "first_paragraph": "11 March 2025\r\n                    Cost, technical performance and environmental impact \u2013 these are the three most important aspects for a new type of LED technology to have a broad commercial impact on society. This has been demonstrated by researchers at Link\u00f6ping University in a study published in Nature Sustainability.\r\n                \u201cPerovskite LEDs are cheaper and easier to manufacture than traditional LEDs, and they can also produce vibrant and intense colours if used in screens. I\u2019d say that this is the next generation of LED technology,\u201d says Feng Gao, professor of optoelectronics at Link\u00f6ping University.However, for a technological shift to take place, where today\u2019s LEDs are replaced with those based on the material perovskite, more than just technical performance is required.That is why Feng Gao\u2019s research group has collaborated with Professor Olof Hjelm and John Laurence Esguerra, assistant professor at LiU. They specialise in how innovations contributing to environmental"
  },
  {
    "title": "The Frontend Treadmill (polotek.net)",
    "points": 420,
    "submitter": "Kerrick",
    "submit_time": "2025-03-20T12:25:31 1742473531",
    "num_comments": 459,
    "comments_url": "https://news.ycombinator.com/item?id=43422162",
    "comments": [
      "I have recently been doing some upgrades to the build system for our FE code to swap out yarn for pnpm. I\u2019m normally a backend engineer, but I\u2019ve spent plenty of time in the JS mines.The most frustrating thing about dipping in to the FE is that it seems like literally everything is deprecated. Oh, you used the apollo CLI in 2022? Bam, deprecated, go learn how to use graphql-client or whatever, which has a totally different configuration and doesn\u2019t support all the same options. Okay, so we just keep the old one and disable the node engine check in pnpm that makes it complain. Want to do a patch upgrade to some dependency? Hope you weren\u2019t relying on any of its type signatures! Pin that as well, with a todo in the codebase hoping someone will update the signatures.Finally get things running, watch the stream of hundreds of deprecation warnings fly by during the install. Eventually it builds, and I get the hell out of there.It\u2019s just nuts to me the degree to which FE development as a whole seems to embrace the breaking change, the deprecation, etc. I\u2019ve been working on a large rust project for nearly four years and in that time there have been a few minor breaking changes in or of third party libraries, but only one major breaking change that required significant changes to our application. Meanwhile in JS it seems like you can\u2019t go more than six months without having to rewrite something. It\u2019s bananas.Okay, rant over.\n \nreply",
      "> It\u2019s just nuts to me the degree to which FE development as a whole seems to embrace the breaking change, the deprecation, etc.I\u2019m amazed at how much of this is driven by the FE influencers. The FE world has embraced social media, YouTube, and even Twitch to a degree that I haven\u2019t seen in other domains.Influencers in these areas need to have a constant stream of fresh material to stay relevant, so they\u2019re always driving toward something new that they can produce content about.This is in addition to the very active conference circuit. FE and JS conferences feel like one big competition to present on some hot new topic.There\u2019s also a huge market for selling FE courses. These course creators need you to convince your boss to approve a $700 (limited time price!!!) video course to learn the new hot thing, but they can only do that if they get the industry to move away from the old thing that everyone knows already. So they push hard to drive the new thing and deprecate the old thing.\n \nreply",
      "That's fascinating, and I had no idea web dev influencers were so big. I checked, and there really are people with millions of followers doing development. Personally, the idea of learning anything related to coding through a video is extremely frustrating. It's a text medium. I want to look at things, take time, think it over, compare code, follow references, look up functions.That people like video formats isn't really surprising to me since it's everywhere, but I still don't fully understand the appeal. Even if you were raised on video content and started coding that way, at some point you have to reference text documentation, right? At that point, I would think you would just stick to the text and not go back to the video, but maybe it's just more entertaining the other way.\n \nreply",
      "> That people like video formats isn't really surprising to me since it's everywhere, but I still don't fully understand the appeal.Me either, but I have a hunch about why.Are you a fast reader?I am, at least compared to the population at large. And one of the reasons I can't stand video as a format for learning about coding topics is that it is so frustratingly slow compared to my reading speed. To get anywhere close, I have to crank the playback speed up so high that I start having trouble understanding what the presenter is saying. That's on top of other things like poor searchability and no way to copy-paste code snippets.The decline of reading skills, at least in the US, is pretty well-documented. And my hunch is that for the increasingly large number of people coming into the industry who don't read quickly or well, the efficiency of learning from videos is closer to parity with text. What's more, I suspect there's high correlation between lower reading skills and dislike of the act of reading, so videos are a way to avoid having to do something unpleasant.I have no solid evidence to back any of this up, but it seems at least as plausible to me as any other explanations I've run across.\n \nreply",
      "Alternatively: you can listen to audio while commuting or driving or cleaning or working out. I love audio for higher level things and to get an overview of the topic. Then text to dive into the details.\n \nreply",
      ">, the idea of learning anything related to coding through a video is extremely frustrating. It's a text medium. I want to look at things, take time, think it over, compare code, follow references, look up functions.\nThat people like video formats isn't really surprising to me since it's everywhere, but I still don't fully understand the appeal.I like (some) programming videos and I'll give my perspective as someone who learned 100% from books and 3-ring binders for old languages like C/C++/C#/Javascript/Python/bash/etc.  (The 1980s Microsoft C Compiler manuals were 3-ring binders.)The newer languages I learned with a hybrid of videos + traditional books would be HTML CSS, Apple Swift, and PyTorch with the latest AI toolkits and libraries.The extra dimension that videos offer besides plain text is the live usage of IDE, tools, troubleshooting, etc.  For me, watching a dynamic screen with a moving mouse cursor and voiceover seems to activate extra neurons moreso than just reading static text in a book.There's also a lot of \"activities in-between the coding\" that's helpful such as seeing the programmer looking up something in various pages of documentation, scrolling around, navigating etc.Another useful aspect that's underappreciated is seeing the mistakes the programmer makes during the video recording.  E.g. the code doesn't compile because of invalid syntax. Or a config setting is wrong and he troubleshoots what's preventing it from working.   In contrast, virtually all text books or blogs of coding are \"perfect happy path\" outcomes.  But real-world programming is messy with broken intermediate states.  A lot of videos show the messy steps to get to a working state.The videos that are not that helpful would be the videos of C++ CppCon conference sessions where there are a bunch of static slides with bullet points and the speaker just reads them aloud word-for-word.Although I learned C++ from textbooks, I found videos of Matt Godbolt showing tips & tricks of how to use his Compiler Explorer (http://godbolt.org) very helpful.In summary, the artifacts of coding may be the text, but the activity of coding involves a lot more than just the text and that's why some videos can enhance learning.\n \nreply",
      "I'm not sure if this is what you intended, but I read this as a great argument in favor of pair programming.\n \nreply",
      "These videos are edutainment at best, which is generally not a good way to learn something well enough to be able to actually work with it. A lot of them are pretty much straight up entertainment, where the entertainment value comes from drama and strong opinions. They're totally fine if you know that, but some of their audience does not know that.I've been seeing more and more of a certain kind of person who are into these videos on some Discord servers, and it is clear that they are driven more by culture and style than by the goal of creating some thing, or having a strong understanding of how to make computers do certain things.\n \nreply",
      "> That people like video formats isn't really surprising to me since it's everywhereThat\u2019s because those \u201cpeople\u201d are either larping students or kids that want to become programmers. I have never in my 10 year career met a person who said \u201cyeah, I learn my craft from Fireship videos\u201d.\n \nreply",
      "Likely these videos did not exist when your reference / age group was acquiring these skills.Videos are sort of easier to produce (via screen capture), and are much easier to show the effect of FE things: look, we write code like this, now we can click here, and the page reacts that way. No need to muck with JSFiddle or something.I'm not a fan of videos as a reference medium, but they can be elucidating to those who needs more hand-holding, literally \"click here, see the result\". Back in the day, a few short videos about Blender helped me quite bit to grasp certain things that were not obvious from descriptions.\n \nreply"
    ],
    "link": "https://polotek.net/posts/the-frontend-treadmill/",
    "first_paragraph": "A lot of frontend teams are very convinced that rewriting their frontend will lead to the promised land. And I am the bearer of bad tidings.If you are building a product that you hope has longevity, your frontend framework is the least interesting technical decision for you to make. And all of the time you spend arguing about it is wasted energy.I will die on this hill.If your product is still around in 5 years, you\u2019re doing great and you should feel successful. But guess what? Whatever framework you choose will be obsolete in 5 years. That\u2019s just how the frontend community has been operating, and I don\u2019t expect it to change soon. Even the popular frameworks that are still around are completely different. Because change is the name of the game. So they\u2019re gonna rewrite their shit too and just give it a new version number.Product teams that are smart are getting off the treadmill. Whatever framework you currently have, start investing in getting to know it deeply. Learn the tools until "
  },
  {
    "title": "The Burnout Machine (unionize.fyi)",
    "points": 432,
    "submitter": "flxfxp",
    "submit_time": "2025-03-20T18:24:17 1742495057",
    "num_comments": 341,
    "comments_url": "https://news.ycombinator.com/item?id=43427002",
    "comments": [
      "Software engineering is one of the ways of playing life in \"easy mode\" (I moved from academia over a decade ago, and I know the difference). This blog post tries to paint it differently - and it feels like it lacks perspective compared to virtually any other occupation.> We\u2019re living in a world where billion dollar tech companies expect us to live and breathe code, demanding 80 hour weeks under the guise of \"passion.\"Yet, it is up to us. In some software jobs (AAA game dev and a certain type of startup), you are expected to crunch beyond limits. In other places, you can have a typical 40h/week job at a salary way better than the average 9-5 job. Or you can freelance a dozen hours a week and live in a remote cottage. Or work from Thailand when it's winter. Or take a gap year to regenerate, or reinvent, yourself.Not many career choices support this freedom. In some (e.g., medical careers), grind is not optional\u2014you won't finish university, you won't get established, and that's the end of the story. In many other jobs, if you were freelancing a dozen hours a week, you would literally not be able to afford food. In many professions, quitting means the end of a career - or at least a serious setback; in tech, it means getting many messages on LinkedIn.Don't get me wrong - I am all for criticism of grind and exploitation. But let's not paint ourselves, members of one of the most privileged occupations, as victims of the global system.\n \nreply",
      "In my experience as a software engineer rounding out 6 years now, what I have observed in myself and others is that the work pressure that leads to burnout in SWEs is largely self-imposed.I have some conjectures as to why that may be:1. High variability of pay, not only between companies but within companies. As a SWE your total compensation can be expected to double every two promotions, and promotions can be pretty fast. Promotions are also not purely a function of tenure like other professions with steep comp growth such as pilots.2. \"This is too good to be true\" syndrome. You show up at your comfy 250k job with catered lunch, dinner, and maxed out benefits. After the first month, your workload is about 3-4 hours a day. Everything is flexible - the time you show up, the time you leave, the days you choose to come in to the office, what you wear. Everyone is smart and nice. Free snacks. Imposter syndrome and paranoia set in. Am I doing enough? Should I look at this P2 prod bug on a Satuday? I guess I only worked 20 hours last week so it's fair to work a couple of hours on the weekend. Everything I do needs to be perfect or they could've just hired someone in India for 1/10th my pay, right? etc. Then it snowballs. (I'm probably just describing imposter syndrome.)In reality nothing really happens if you slow down and do things at a comfortable pace. Most managers want to cultivate reliable people who take long-term deep ownership, not productivity machines that just bang out features. If they needed more output, they'd just hire one more person.\n \nreply",
      "This is an interesting take, but I have a slightly different take. My ding dong company pays everyone including myself, salaries that are way too high. They gave ne a 30% raise I didn't even ask for or expect. We get a contract to do X, which say should take a team of 5 folks. However, we can only staff the contract with 3 folks because our salaries are too high. Now, we're all working 80hr weeks and stressed to the max because we really need more fresh minds on the challenge.Now, we're in a contract lull, so some of us are only charging part time (75%), while actually working overtime.It's bananas.The solution seems obvious. Decrease salaries and increase company stock offerings. Then, if you and your colleagues care to work harder and deliver outstanding product, your stock value will rise over time and you'll be a.) more wealthy than taking 'dumb' money, and b.) more physically and mentally healthy.\n \nreply",
      "My initial reaction to this whole thing was the same as yours (not that I have any love lost for academics). Software engineers do basically no physical labor and usually get paid better than many people who physically work way harder. On the whole, software engineers are not \"the victim,\" as you said.However, your examples made me think.> In other places, you can have a typical 40h/week job at a salary way better than the average 9-5 job.Can you? Can everyone? I've job hunted before and known many more people who've taken way longer than me to find a position at all, in several different locations throughout the country (not coastal metropolises). You're kind of suggesting that unemployment isn't an issue in the industry, which is a pretty blanketed take.> Or you can freelance a dozen hours a week and live in a remote cottage.Can you meet friends while living in a remote cottage? Can you raise kids well in a remote cottage? (Does the remote cottage even have internet?) This one is technically true, but ignores many of the reasons most people work/live in the first place. I say that as someone who's considered going that route.So while I agree software engineers aren't a \"victim class\" as compared to other industries, I also think using the \"it could be worse\" excuse to avoid working for better conditions that are totally feasible isn't a great thing to do. The majority of software engineers are middle-class, and when the middle-class is under attack, they're going down with the rest of the ship, not up. Perhaps it'd be better to foster a little more solidarity instead of inviting us vs. them mentality.\n \nreply",
      "No industry has 0% unemployment. Most people would kill for the employability of the median software engineer.\n \nreply",
      "This isn\u2019t wrong. In every industry, there will always be people who struggle to find employment. It\u2019s a necessary part of the economic machine. One hopes it is not always the same person suffering, of course.Still, absolutely everything about this industry is inflated. Pepsi just bought Poppi for $1.5B. That\u2019s a HUGE DEAL, but hardly worth mentioning when compared with the $70B that Microsoft spent on Activision-Blizzard.Making $80k a year is a GREAT salary. That\u2019s going to invoke a hearty yawn from many when comparing to dev salaries.Hell, you don\u2019t even need a degree to get in. Just the knowledge to back yourself up in an interview.I\u2019m old enough to remember the hiring frenzy of the dot-com bubble, as well as many smaller hiring frenzies since.Having watched my parents claw their way to a very happy retirement, it\u2019s insane how easy life is in this career field.I bring great energy to my teams, but technically I\u2019m not incredible. I\u2019ve never been Big-N quality. Still, I\u2019m going to retire earlier in my life than my dad, who (very regrettably) even got an infusion of life insurance cash via my mom\u2019s passing. I\u2019ll retire with more spending power too. I have one nice toy - a car I spent $45k on. Otherwise, I live a modest life on my income, but all of this is based on watching my parents\u2019 spending habits and lifestyle, so it feels like a fair comparison to me at least.This is an absolutely blessed field. Can\u2019t imagine where I\u2019d be if I\u2019d been born even just a hundred years ago.\n \nreply",
      "> Making $80k a year is a GREAT salary. That\u2019s going to invoke a hearty yawn from many when comparing to dev salaries.I'd like to draw a distinction here:$80k is very good, by the standards of what most people can get.$80k is middling-to-poor compared to how fast the cost of living is going up. Housing prices are skyrocketing, people have no savings, can't afford emergencies.The economy is leaving people behind. In my area, SWE pay moves closer to \"normal difficulty\" every year, while everyone else moves to \"hard\".\n \nreply",
      "There's a lot of places in America where $80k is not a great salary. Unfortunately, as much of America slides further and further right people who don't fit the right's ideal have to be more and more selective about where they live.\n \nreply",
      "Most contract killers make much less than software engineers.\n \nreply",
      "How much experience with contract killers do you have to make that assessment?\n \nreply"
    ],
    "link": "https://unionize.fyi",
    "first_paragraph": "Originally written by Biozombie, published in 2600 Hacker Quarterly, Autumn 2024\n            Let\u2019s get real for a minute: the tech industry loves to sell us on the myth of the \"dream\n            job.\"\n            You\n            know\n            the\n            pitch - beanbags in the office, free kombucha on tap, and \"Agile\" processes that are supposed to\n            make\n            everything\n            more flexible, more efficient. But the reality? It\u2019s a meat grinder that chews up developers,\n            sysadmins,\n            and\n            infosec pros and spits them out the other side - burnt out, disillusioned, and disposable.\n        \n            We\u2019re living in a world where billion dollar tech companies expect us to live and breathe code,\n            demanding\n            80\n            hour weeks under the guise of \"passion.\" And what do we get in return? Burnout, anxiety, and the\n            constant\n            threat\n            of layoffs. It\u2019s time to face facts: t"
  },
  {
    "title": "ACARS Drama (acarsdrama.com)",
    "points": 175,
    "submitter": "jmwilson",
    "submit_time": "2025-03-20T14:33:28 1742481208",
    "num_comments": 82,
    "comments_url": "https://news.ycombinator.com/item?id=43424065",
    "comments": [
      "Looks like you can \"feed the drama\" by sending unauthenticated JSON messages to an endpoint that the site specifies?Fortunately, nobody on the internet has the urge to break things just for the hell of it, so I'm sure everything will be fine.\n \nreply",
      "From my experience the tailwatcher and (not) suprisingly related HAM communities are magical in their ability to just trust their community and rarely get burned.Only 4 active connections allowed per site on a popular HAM webring? Never hogged by bots.Site that allows minimally authenticated posting of aircraft ACARS messages? Never seen it hijacked for ads.Physics-limited space for nearly untracable HF radio transmissions that can span half the US? Handfull of trolls that voluntarily relegate themselves to the 'troll freqs'.It's no surprise the site allows unauthenticated JSON; in the rest of the hobby the FCC makes most types of security outright illegal.\n \nreply",
      "HF is definitely traceable.Hams make an entire sport of of this (\"fox hunting\"), and the FCC has a network of automated monitoring stations dotted across the country specifically to determine the location of rogue radio transmissions.That said, most of the time it's easier to just ignore the radio trolls.\n \nreply",
      "For a long while I\u2019ve had the plan to spam the hell out of the ingestion points for nonconsensual spyware/telemetry in open source projects, rendering the collected data useless.  Been too busy to write the code the last few years.\n \nreply",
      "aaaand it's dead\n \nreply",
      "Interesting that the keyboard for these[0] is not a QWERTY keyboard but instead has the buttons arranged alphabetically. That must be a pain in the ass to type in. Is that because the tech is 50 years old from before QWERTY was the standard? Do newer planes have QWERTY?0: https://acarsdrama.com/fmc.webpUnrelated, this one is cute: https://infosec.exchange/@acarsdrama/114194436695883209\n \nreply",
      ">Is that because the tech is 50 years old from before QWERTY was the standard?QWERTY predates electronic devices.\n \nreply",
      "True. Makes the decision even more baffling.\n \nreply",
      "Keyboards in aircraft instrumentation certainly do NOT predate electronic devices.  Given that one-handed operation for instrumentation is almost always the primary mode of interaction, and instrument panels are really just face-plates on quite deep electronic device containers, the idea of a widescreen panel hole profile just to fit the input keys in a different format/aspect ratio does not make sense.Some of the most interesting aviation research in the past few decades have been around human factors like psychology, perception, and cognition.  If there was some substantial effect to having the buttons be arranged in a different pattern, I do legitimately hope it would have been found by now.Do keep in mind these devices are cost-prohibitive in the extreme to design, build, and certify.  The idea of having separate, parallel processes in order to have a different button layout between regional devices creates a thousand headaches of its own, both before and after production.  The issue goes even further, in that just the FAA alone requires simulators of these aircraft to have replicated button look and feel criteria that would make your head spin.  Is there even going to be a question as to if you're going to have to have two simulators?  Will type-ratings be transferrable?  Will there be separate differences training and/or currency requirements between the two distinct input methods?Some or even most of those answers might turn out favorably for manufacturers or operators or pilots.  But just having to ask them drives costs up considerably.\n \nreply",
      ">if you're going to have to have two simulators? Will type-ratings be transferrable? Will there be separate differences training and/or currency requirements between the two distinct input methods?Boeing found a way.\n \nreply"
    ],
    "link": "https://acarsdrama.com/",
    "first_paragraph": "Welcome to the home of ACARS Drama, the leading provider of aircraft based drama ingestion services.This small companion website is designed to provide a brief overview of the ACARS Drama project, along with some code snippets and other information regarding the project, and how you can contribute.The latest drama ingested is shown below:A question I\u2019ve been asked a few times since I took a little project I had for a year or so operating privately under my desk, and turned it into a social media bot.Note: this post is designed as a more high-level overview of what ACARS/VDLM2 messages are, and what my bot they feed is. So, if you\u2019re looking for a more detailed technical overview of how the bot works, check out this earlier post from when it was first created as a Slack app.When an aircraft is flying overhead, various radio signals are being transmitted and received by said aircraft constantly. Some examples of the radio signals, of course, are voice communications between pilots and ai"
  },
  {
    "title": "OpenAI Audio Models (openai.fm)",
    "points": 397,
    "submitter": "KuzeyAbi",
    "submit_time": "2025-03-20T17:18:00 1742491080",
    "num_comments": 217,
    "comments_url": "https://news.ycombinator.com/item?id=43426022",
    "comments": [
      "If I'm reading the pricing correctly, these models are SIGNIFICANTLY cheaper than ElevenLabs.https://platform.openai.com/docs/pricingIf these are the \"gpt-4o-mini-tts\" models, and if the pricing estimate of \"$0.015 per minute\" of audio is correct, then these prices 85% cheaper than those of ElevenLabs.https://elevenlabs.io/pricingWith ElevenLabs, if I choose their most cost-effectuve \"Business\" plan for $1100 per month (with annual billing of $13,200, a savings of 17% over monthly billing), then I get 11,000 minutes TTS, and each minute is billed at 10 cents.With OpenAI, I could get 11,000 minutes of TTS for $165.Somebody check my math... Is this right?\n \nreply",
      "It's way cheaper - everyone is, elevenlabs is very expensive. Nobody matches their quality though. Especially if you want something that doesn't sound like a voice assistant/audiobook/podcast/news anchor/tv announcer.This openai offering is very interesting, it offers valuable features elevenlabs doesn't in emotional control. It also hallucinates though which would need to be fixed for it to be very useful.\n \nreply",
      "Elevenlabs is an ecosystem play. They have hundreds of different voices, legally licensed from real people who chose to upload their voice. It is a marketplace of voices.None of the other major players is trying to do that, not sure why.\n \nreply",
      "It looks like they are targeting Google's TTS price point which is $16 per million characters which comes out to $0.015/minute.\n \nreply",
      "Yes ElevenLabs is orders of magnitude more expensive than everyone else. Very clever from a business perspective, I think. They are (were?) the best so know that people will pay a premium for that.\n \nreply",
      "ElevenLabs is the only one offering speech to speech generation where the intonation, prosody, and timing is kept intact. This allows for one expressive voice actor to slip into many other voices.\n \nreply",
      "OpenAI\u2019s Realtime speech to speech is far superior than ElevenLabs.\n \nreply",
      "Almost everyone is cheaper than ElevenLabs though.\n \nreply",
      "yes, I think you are right. When I did the math on 11labs million chars I got the  same numbers (Pro plan).I'm super happy about this, since I took a bet that exactly this would happen. I've just been building a consumer TTS app that could only work with significant cheaper TTS prices per million character (or self-hosted models)\n \nreply",
      "Kokoro TTS is pretty good for open source. Worth checking out.\n \nreply"
    ],
    "link": "https://www.openai.fm/",
    "first_paragraph": ""
  },
  {
    "title": "Oxygen discovered in most distant known galaxy (eso.org)",
    "points": 171,
    "submitter": "sohkamyung",
    "submit_time": "2025-03-20T13:21:34 1742476894",
    "num_comments": 135,
    "comments_url": "https://news.ycombinator.com/item?id=43422909",
    "comments": [
      "From [1] and [2] we read that the CMB was created around 380 million years after the Big Bang, and that hydrogen atoms were created at the same time. The original article above [3] says that this galaxy was created when the universe was about 300 million years old. These seem to be in conflict; am I misunderstanding something, or is there really a conflict there?[1] https://en.wikipedia.org/wiki/Cosmic_microwave_background#Pr...[2] https://en.wikipedia.org/wiki/Big_Bang#Timeline[3] https://www.eso.org/public/news/eso2507/\n \nreply",
      "The CMB was created 380,000 years after the Big Bang. I think you misread [1] and [2].\n \nreply",
      "Oxygen is everywhere.Hydrogen is everywhere.The possibilities are interesting.\n \nreply",
      "Given how simple Water is and how readily available it's components are, it's inevitable there are many planets with vast oceans.\n \nreply",
      "I would be shocked if it were not found everywhere.\n \nreply",
      "I'd be more worried if there was a whole bunch of carbon dioxide.\n \nreply",
      "Funny you say that because this article just came out the other dayhttps://www.sciencealert.com/jwst-detects-carbon-dioxide-out...\n \nreply",
      "It fits the theme that,  according to Webb,  the universe developed a lot more quickly in what we think were the first billion years...  Most likely the \"first billion years\" were more like five billion years.\n \nreply",
      "There is growing evidence that doesn't fit the current model. It's funny how 'age is just a number' may be empirically true in a very existential sense.\n \nreply",
      "Sorry, but can you elaborate on that? In what sense are you thinking of?\n \nreply"
    ],
    "link": "https://www.eso.org/public/news/eso2507/",
    "first_paragraph": "20 March 2025Two different teams of astronomers have detected oxygen in the most distant known galaxy, JADES-GS-z14-0. The discovery, reported in two separate studies, was made possible thanks to the Atacama Large Millimeter/submillimeter Array (ALMA), in which the European Southern Observatory (ESO) is a partner. This record-breaking detection is making astronomers rethink how quickly galaxies formed in the early Universe.Discovered last year, JADES-GS-z14-0 is the most distant confirmed galaxy ever found: it is so far away, its light took 13.4 billion years to reach us, meaning we see it as it was when the Universe was less than 300 million years old, about 2% of its present age. The new oxygen detection with ALMA, a telescope array in Chile\u2019s Atacama Desert, suggests the galaxy is much more chemically mature than expected.\u201cIt is like finding an adolescent where you would only expect babies,\u201d says Sander Schouws, a PhD candidate at Leiden Observatory, the Netherlands, and first autho"
  },
  {
    "title": "Build a Container Image from Scratch (danishpraka.sh)",
    "points": 71,
    "submitter": "prakashdanish",
    "submit_time": "2025-03-18T05:57:56 1742277476",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43396172",
    "comments": [
      "I often wonder, why isn't systemd-nspawn[0] used more often? It's self-described as \"chroot on steroids\". IME it pretty much lives up to that name. Makes it really easy to containerize things and since it integrates well with systemd you basically don't have to learn new things.I totally get these are different tools and I don't think nspawn makes docker or podman useless, but I do find it interesting that it isn't more used, especially in things you're using completely locally. Say, your random self-hosted server thing that isn't escaping your LAN (e.g. Jellyfin or anything like this)[0] https://wiki.archlinux.org/title/Systemd-nspawn\n \nreply",
      "Because Docker/OCI/etc got the most important part right (or at least much better than the alternatives): distribution.All you need to start running a Docker container is a location and tag (or hash). To update, all you do is bump the tag (or hash). If a little more complicated setup is necessary (environment variables, volumes, ports, etc) - this can all be easily represented in common formats like Docker compose or Kubernetes manifests.How do you start running a system-nspawn container? Well first, you bootstrap an entire OS, then deal with that OS's package manager to install the application. You have to manage updates with the package manager yourself (which likely aren't immutable). There's no easy declarative config - you'll probably end up writing a shell script or using a third party tool like Ansible.There have been many container/chroot concepts in the past. Docker's idea was not novel, but they did building and distribution far better than any alternative when it first released, and it still holds up well today.\n \nreply",
      "Yeah, this. Docker/container's greatest feature is less the sandboxing than the distribution. The sandboxing is essential to making the distribution work well, but it's a side feature most of the time\n \nreply",
      "Just learnt about whiteout files from this, thanks! Trying to understand if you purposely included a filename into a layer with the same whiteout prefix \u201c.wh.\u201d, if it would mess with the process that is meant to obfuscate that prefix from subsequent layers.\n \nreply",
      "I learned about $_  echo abc && echo $_\n  abc\n  abc\n\n\nexcept it's used with wget...  wget URL && tar -xvf $_\n\ndoes this work?  Shouldn't tar take a filename?hmm... also, it says there is an alpine layer with \"FROM scratch\"??\n \nreply",
      "$_ is the last argument. Here's a better example to illustrate  > echo 'Hello' 'world' 'my' 'name' 'is' 'godelski'\n  Hello world my name is godelski\n  > echo $_\n  godelski\n  > !:0 !:1 !:2 \"I'm\" \"$_\"\n  Hello world I'm godelski\n\nThe reference manual is here[0] and here's a more helpful list[1]One of my favorites is  > git diff some/file/ugh/hierarchy.cpp\n  > git add $_\n  ## Alternatively, but this is more cumbersome (but more flexible)\n  !!:s^diff^add\n\nSo what is happening with wget is  > wget https://dl-cdn.alpinelinux.org/alpine/v3.18/releases/x86_64/alpine-minirootfs-3.18.4-x86_64.tar.gz && tar -xvf $_\n  ## Becomes\n  > wget https://dl-cdn.alpinelinux.org/alpine/v3.18/releases/x86_64/alpine-minirootfs-3.18.4-x86_64.tar.gz\n  > tar -xvf https://dl-cdn.alpinelinux.org/alpine/v3.18/releases/x86_64/alpine-minirootfs-3.18.4-x86_64.tar.gz\n\nWhich you are correct, doesn't work.It should actually be something like this  > wget https://dl-cdn.alpinelinux.org/alpine/v3.18/releases/x86_64/alpine-minirootfs-3.18.4-x86_64.tar.gz -O alpine.tar.gz && tar xzf $_\n\nThis would work as the last parameter is correct. I also added `z` to the tar and removed `-` because it isn't needed. Note that `v` often makes untaring files MUCH slower[0] https://www.gnu.org/software/bash/manual/html_node/Bash-Vari...[1] https://www.gnu.org/software/bash/manual/html_node/Variable-...\n \nreply",
      "It's not an alpine layer, it's a Dockerfile construct representing basically an empty tar file layer: <https://docs.docker.com/build/building/base-images/#create-a...> and <https://github.com/moby/moby/pull/8827>\n \nreply",
      "Is there a windows version ?\n \nreply",
      "Windows is is very similar, the differences are two the layer tarballs.The file system appears in a Files sub-directory as there is a Hives sub-directory for containing the Windows Registry.The other difference is there are two extra PAX headers within the tarball, MSWINDOWS.fileattr which is \"32\" for a regular file, and \"16\" for a directory and MSWINDOWS.rawsd which is a special encoding of the security descriptor, which you can think of it as the owner, group and permissions associated with the file (which their standard values can be seen from buildkit here: https://github.com/moby/buildkit/blob/22156ab20bcaea1a1466d2...)I haven't looked into how to handle the Windows Registry aspect as in my exploration I was focused on simply adding a pre-built executable so I didn't need any registry entries created.The other fun gotcha is to ensure the ENV section contain PATH set to c:\\\\Windows\\\\System32;c:\\\\Windows otherwise you would be unlikely to be able to run any Windows executable.\n \nreply",
      "Registry is best handled with copy .reg file and CMD reg import blah.reg in Dockerfile\n \nreply"
    ],
    "link": "https://danishpraka.sh/posts/build-a-container-image-from-scratch/",
    "first_paragraph": ""
  },
  {
    "title": "The Last Drops of Mexico City (longlead.com)",
    "points": 156,
    "submitter": "anarbadalov",
    "submit_time": "2025-03-20T13:28:44 1742477324",
    "num_comments": 152,
    "comments_url": "https://news.ycombinator.com/item?id=43423032",
    "comments": [
      "Just casually throwing in 'overpopulation' when in so many places, water for actual human needs like drinking, bathing and even washing clothes, is a tiny fraction compared to much more wasteful things like grass, America's largest crop.I live in a dry bit of the American west and municipal usage is a small fraction of water usage (about 8%). Agriculture is often not very efficient because of old water rules that give water to things like hobby farms when real farms downstream don't get what they need.\n \nreply",
      "100% this. or 95%. When you say \"grass, America's largest crop\" I assume you are referring to lawns, but actually I think your last point is the crucial one: \"...municipal usage is a small fraction of water usage (about 8%). Agriculture...\"California has plenty of water for it's people. If you add up ALL residential, commercial and industrial use, including all outdoor landscape watering, baseball fields, golf courses, etc - it all adds up to around 10-20% of the water used (depending on rainfall).Where does the rest (80-90%) of California's water go? Agriculture. Half the produce of which is exported to other states and countries. Did you know CA grows a LOT of rice near it's capitol, which is naturally almost a desert? And about half of that rice is exported, much to Asia (!!)California is rather like Saudi Arabia, with the farmers pumping out all the water and selling it in the form of agricultural produce.But take a shorter shower please! And you don't really NEED to flush that toilet.\n \nreply",
      "I think he is referring to Golf Courses:\"Golf courses in the US occupy roughly 2 million acres, which is larger than the state of Delaware but smaller than Connecticut.\"\"California almond growers use between 4.7 to 5.5 million acre-feet of water annually, representing roughly 14.4% to 16.75% of the state's agricultural water consumption\"WHAT THE H#$%?\n \nreply",
      "That water grows 77% of all almonds, worldwide.Is there some better use for roughly 15% of California's water consumption?Are you sure?\n \nreply",
      "Yes, leave it in the ground. It isn't a renewable resource on any relevant time scale.If you want almonds, grow them elsewhere, or switch to desalination.\n \nreply",
      "If \"grow them elsewhere\" were plausible, California wouldn't be growing 77% of them.\n \nreply",
      "That's a bit silly.Almonds are grown in California and not so much elsewhere, because with California's broken water policies you can grow them there for cheaper than elsewhere.If California were to implement proper water pricing (eg via water trading), then the production costs of almonds in California would rise.  And they might rise above the costs in other places, thus leading to a shift in production.Have a look at water trading in Australia to see a good example of how that can shape agricultural practices.  The Australian water trading system ain't perfect, but it's a lot better than the Californian mess.  And it allowed agriculture to grow in dollar terms, despite severe limitations on the amount of available water.",
      "Why? Id truly be interested to know what makes Californian geography so massively advantages competitively that isn't infrastructure or economics of scale\n \nreply",
      "Also exclude cheaper water prices for almond grows then residential.\n \nreply",
      "> Did you know CA grows a LOT of rice near it's capitol, which is naturally almost a desert?Rice benefits from flooding for weed control (because it is unusually flood resistant), but doesn't consume a lot of water (the water from flooding is available for downstream use.)If you want to complain about water-intenaive crops in CA, the issue is almonds, not rice.Also, while there are parts of CA that are desert or \u201calmost desert\u201d (desert or semi-arid climate), the area around Sacramento is hot-summer Mediterranean.\n \nreply"
    ],
    "link": "https://mexicocitywater.longlead.com",
    "first_paragraph": "A building in the city center deformed by the drying ground, May 26, 2024.Every day, for most of her life, Norma, a 68-year-old woman from the outskirts of Mexico City, has struggled to get something that many of us take for granted: drinking water.She draws water from a well in her patio in Ecatepec, but it\u2019s not fit for drinking. She can, however, use it for filling toilets, cleaning, or laundry. The water is unfiltered, she says, and it has caused her skin problems. Though Norma is a widow, she is not alone. As Mexico City continues to expand while resources become scarce, its water crisis impacts millions. It exemplifies a future that cities worldwide could face if global warming and overpopulation continue. From springs that have been sealed or pipelined to rainwater that goes unused and into the drain, to drinking water that gets polluted or spilled on its way into homes across the megalopolis, many issues have created this crisis.Norma lives by herself in a small house, which is"
  },
  {
    "title": "Going from an Idea to MVP in Weeks: PromptPanda's Launch(es) (opensaas.sh)",
    "points": 13,
    "submitter": "Liriel",
    "submit_time": "2025-03-18T11:04:52 1742295892",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://docs.opensaas.sh/blog/2025-03-12-going-from-an-idea-to-mvp-in-weeks-promptpandas-launches/",
    "first_paragraph": "Did you know that most co-founders meet each other through work? Lander Willem met his friend and co-founder Bram Billiet while they were working at the local venture fund. They both shared the love towards LLMs and got the idea to kickstart their SaaS after experiencing the same pain points with managing and versioning prompts.In this post, you\u2019ll learn how they:Right after OpenAI released their first LLM models, Lander and Bram started exchanging tips on how to get optimal results from prompts. Soon, they learned that managing AI prompts is often chaotic.People who share prompts usually do so through messaging apps such as Slack, Microsoft Teams or in better cases, shared Google Docs documents. Some of the people they talked to even confessed they were sharing their favorite prompts using screenshots \ud83d\ude05. Although a Google Doc might work initially, people quickly bump into issues regarding versioning and granular access management.This is how they got the idea to create PromptPanda - a"
  },
  {
    "title": "Show HN: Minimalytics \u00e2\u20ac\u201c a standalone minimal analytics app built on SQLite (github.com/nafey)",
    "points": 28,
    "submitter": "nafey",
    "submit_time": "2025-03-20T19:33:30 1742499210",
    "num_comments": 4,
    "comments_url": "https://news.ycombinator.com/item?id=43427850",
    "comments": [
      "Congrats on the progress.A lot of the SQLite code & modeling looks similar to how I'd approach this.I was wondering about the need for React in this arrangement. I feel like you could do this with even fewer vendors and less memory (on the client).\n \nreply",
      "Thank you! I already had experience working in React so I decided to use it for the first release.I am thinking about switching to HTMX to further reduce size, simplify and improve performance.\n \nreply",
      "You may give a more semantic name for the screenshot, instead of \"First metric\", \"Second metric\".\n \nreply",
      "Thank you that's a good suggestion. I'll do that.\n \nreply"
    ],
    "link": "https://github.com/nafey/minimalytics",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          Minimalytics is a standalone minimalist analytics tool built on SQLite. Designed for resource-constrained environments, it provides a lightweight solution for tracking and visualizing event data with a minimal footprint. Whether you're tracking internal services or need a simple analytics tool, Minimalytics delivers performance without the bloat.Clone the repository:Build the project:Install the binary system-wide:Check if the server is running:Start the server:To record an event, send a POST request to the event API:Replace <EVENT_NAME> with the name of the event you want to track.Open your browser and navigate to:Go to \"First Dashboard\" and click \"Add Graph\".Select the appropriate properties and click \"Done\".Your dashboard is now ready to display event data.To disable access to the web dashboard, run:This project was born out of the need f"
  },
  {
    "title": "The Pain That Is GitHub Actions (feldera.com)",
    "points": 570,
    "submitter": "qianli_cs",
    "submit_time": "2025-03-20T03:37:31 1742441851",
    "num_comments": 447,
    "comments_url": "https://news.ycombinator.com/item?id=43419701",
    "comments": [
      "Already see people saying GitLab is better: yes it is, but it also sucks in different ways.After years of dealing with this (first Jenkins, then GitLab, then GitHub), my takeaway is:* Write as much CI logic as possible in your own code. Does not really matter what you use (shell scripts, make, just, doit, mage, whatever) as long as it is proper, maintainable code.* Invest time that your pipelines can run locally on a developer machine as well (as much as possible at least), otherwise testing/debugging pipelines becomes a nightmare.* Avoid YAML as much as possible, period.* Don't bind yourself to some fancy new VC-financed thing that will solve CI once and for all but needs to get monetized eventually (see: earthly, dagger, etc.)* Always use your own runners, on-premise if possible\n \nreply",
      "Strongly isolated systems like Nix and Bazel are amazing for giving no-fuss local reproducibility.Every CI \"platform\" is trying to seduce you into breaking things out into steps so that you can see their little visualizations of what's running in parallel or write special logic in groovy or JS to talk to an API and generate notifications or badges or whatever on the build page. All of that is cute, but it's ultimately the tail wagging the dog\u2014 the underlying build tool should be what is managing and ordering the build, not the GUI.What I'd really like for next gen CI is a system that can get deep hooks into local-first tools. Don't make me define a bunch of \"steps\" for you to run, instead talk to my build tool and just display for me what the build tool is doing. Show me the order of things it built, show me the individual logs of everything it did.Same thing with test runners. How are we still stuck in a world where the test runner has its own totally opaque parallelism regime and our only insight is whatever it chooses to dump into XML at the end, which will be probably be nothing if the test executable crashes? Why can't the test runner tell the CI system what all the processes are that it forked off and where each one's respective log file and exit status is expected to be?\n \nreply",
      "> Write as much CI logic as possible in your own codeNix really helps with this. Its not just that you do everything via a single script invocation, local or ci, you do it in an identical environment, local or ci. You are not trying to debug the difference between Ubuntu as setup in GHA or Arch as it is on your laptop.Setting up a nix build cache also means that any artefact built by your CI is instantly available locally which can speed up some workflows a lot.\n \nreply",
      "Absolutely. Being able to have a single `nix build` line that gets all the way from source to your final asset (iso, ova, container image, whatever) with everything being aggressively cached all the way along is a game changer. I think it's worth the activation energy for a lot more organizations than realize it.\n \nreply",
      "Imo, the \u201cactivation energy\u201d is a lot lower than it appears too. The determinate systems nix installer solves a lot of the local development issues and it\u2019s fairly easy, as a first pass, to write a simple derivation that just copies your current build process and uses nix for dependencies.\n \nreply",
      "Why would you need extra visualisation anyway, tooling like Nix is already what you see is what you get!\n \nreply",
      "It\u2019s still helpful to eg fold different phases in Nix, and different derivation output.I work on garnix.io, which is exactly a Nix-based CI alternative for GitHub, and we had to build a lot of these small things to make the experience better.\n \nreply",
      "Dagger.io does this out of the box:- Everything sandboxed in containers (works the same locally and in CI)- Integrate your build tools by executing them in containers- Send traces, metrics and logs for everything at full resolution, in the OTEL format. Visualize in our proprietary web UI, or in your favorite observability tool\n \nreply",
      "It's doa, Sol.\n \nreply",
      "We used to just tail the build script's output.Maybe add some semi-structured log/trace statements for the CI to scrap.No hooks necessary.\n \nreply"
    ],
    "link": "https://www.feldera.com/blog/the-pain-that-is-github-actions",
    "first_paragraph": "For the past two weeks, I\u2019ve been spending most of my time rewriting our CI scripts in GitHub Actions. This is the third time we\u2019ve had to redo our CI setup\u2014first GitHub Actions, then Earthly (which we moved away from because it was discontinued), and now, reluctantly, back to GitHub Actions.Our CI is complex: merge queues, multiple runners (self-hosted, blacksmith.sh, GitHub-hosted), Rust builds, Docker images, and heavy integration tests. Every PR we merge burns through an hour of CI time, running across multiple parallel runners.There are a few things we'd like to have (which we deem as \"good software practice\") but it's nothing unheard of:GitHub Actions technically allows all of this\u2014but setting it up is a frustrating mess, full of hidden gotchas, inconsistent behavior, and a debugging experience that makes me question my choices.The key to enforcing a clean main branch is GitHub\u2019s merge queue, which rebases a PR onto main before running CI. Sounds great. But here\u2019s the fun part:Th"
  },
  {
    "title": "Powers of 2 with all even digits (oeis.org)",
    "points": 220,
    "submitter": "Hbruz0",
    "submit_time": "2025-03-20T11:55:13 1742471713",
    "num_comments": 101,
    "comments_url": "https://news.ycombinator.com/item?id=43421934",
    "comments": [
      "Fun fact: 2^133477987019 is the smallest power of two that ends with 40 even digits. In fact, it ends with 46 even digits - which is surprising, given that it is significantly smaller than 2^(2^46). The last 50 digits of this number are ...32070644226208822284248862288402404246620406284288. This number has over 40 billion digits, though, so it seems kind of unlikely that we will ever find another number where all the digits are even. The relevant OEIS sequence is here: https://oeis.org/A096549Context: I wrote a search program that is substantially faster - it takes just a few minutes to get up to 2^(10^13), although my laptop's limited memory is starting to be a problem (my intermediate result file is already nearly 1GB in size). Unfortunately, it seems there are no results up to 2^15258789062500, which is a 4.5-trillion digit number.\n \nreply",
      "I think you can calculate \"2^X mod (10^N)\" where N is the number of digits using a modular exponentiation algorithm.This would avoid using a lot of memory, and it would also be faster.\n \nreply",
      "I am already doing that (thanks to `pow(x, y, z)` in Python). The numbers I'm working with would have trillions of digits were it not for this trick - way more than 1GB. 1GB is what I use to store all of the candidates, in an inefficient JSON format.\n \nreply",
      "Is your algorithm published somewhere?\n \nreply",
      "I literally just invented it, so it's not published yet, although I'll probably throw it up on GitHub at some point. It matches all published results up to an exponent of 3 billion or so, so I'm quite confident it's correct.The short explanation is that 2^x mod 10^k will repeat with a cycle length of 5^(k-1)*4. This is easily obtained from Euler's phi formula on 2^x mod 5^k, plus the fact that 2^x === 0 mod 2^k for all x >= k. So, after the k'th term, the rest will repeat with a particular cycle period. We'll manually test all of the 2^x for x < k (there aren't many) and then rely on the cycles to test all of the larger powers.The algorithm itself is a kind of sieving + lifting procedure: it inductively identifies all of the candidate exponents mod 5^(k-1)*4 which yield numbers with k trailing even digits (i.e. all even digits mod 10^k). Each such exponent will yield 5 possible exponents mod 10^(k+1) via a lifting procedure, which we can test; on average, half of these will have a top digit that is even and is therefore a candidate for the next power of 10 (10^(k+1)). Therefore, on average, we grow our candidate list by a factor of 2.5 per added digit - thus, for each 10^k, we test O(2.5^k) candidates (approximately 1.6*2.5^k, experimentally). This isn't too bad - at mod 10^19, we test only 55097940 candidates, representing every exponent below 5^18*4 = 15258789062500.My rather hasty prototype is actually implemented in Python - not a language you want to do tons of arithmetic in - but it's still fast enough to chew through all those candidates in ~20 minutes on a single core. Obviously, there's ample room to make this faster; I figure a good, parallelized native (C/C++/Rust etc.) implementation could easily be 100x faster.\n \nreply",
      "I worked on this once after an argument with my boyfriend.The original argument was \"the ones digit has permanent pattern in 2^n {2,4,8,6,2...}.We made a system to generate digits for powers of two, although eventually we just made one that can take arbitrary bases, and found that you can decompose digit frequency and find a variety of NMR like resonances that vary based on where you terminate data collection.It was really fun and this makes me want to get back into this so I could check the properties of those resonances across bases and stopping points for data collection.\n \nreply",
      "> The original argument was \"the ones digit has permanent pattern in 2^n {2,4,8,6,2...}.Isn\u2019t that obviously the case (for n >= 1 anyway)? If each successive power of two is just the previous number times two, then it would always have to follow that pattern.Any integer >= 10 can be expressed as the sum of a multiple of 10 plus a single digit number, for example 32 = 30 + 2. So 32 * 2 can be written as 2 * (30 + 2). And since any integer ending in zero multiplied by any integer must also end in zero, you only need to look at the single digit part of the number to see that a pattern must immediately emerge for powers of two, or of any number for that matter.\n \nreply",
      "> I worked on this once after an argument with my boyfriend.Wow I love this relationship dynamic! you sound like very cool people\n \nreply",
      "Followed by \"... We made a system to generate digits for powers of two\" ('we' not 'I')That's awesome!\n \nreply",
      "is this kind of argument normal for you two?what.. what other arguments have you had?i request highlight reel\n \nreply"
    ],
    "link": "https://oeis.org/A068994",
    "first_paragraph": ""
  },
  {
    "title": "Grease: An Open-Source Tool for Uncovering Hidden Vulnerabilities in Binary Code (galois.com)",
    "points": 85,
    "submitter": "thinkmoore",
    "submit_time": "2025-03-20T13:57:30 1742479050",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43423523",
    "comments": [
      "I'm suspicious of the effectiveness. Most people are doing symbolic execution to find bad pointer dereferences as bugs, whereas this tool is doing it to build the least constrained model and then checking the code against that same model. Wouldn't any code paths that are discovered as part of symbolic exploration and have out-of-bounds read/writes then be infered away as constraints, instead of bugs? Or being unable to detect memory corruption in the form of controlled pointer value overwrites, since you can't say that all pointer dereferences derived from your symbolic input are bugs that allow for attacked controlled memory corruption, because you don't have a concept of what inputs are under user control unlike most uses of Angr or other symbolic tainting tools. Is there a better list of the types of bug classes or heuristics that this is able to catch? Are there any numbers on the false positive/false negative rates against a dataset?\n \nreply",
      "Thinking about it more, a lot of bugs come around downstream of your initial function inputs, and you'd still be able to catch things like \"heap allocation and then out of bounds read from that allocation with an offset derived from input\" just fine since your least-constrained model only infers for the inputs. That probably covers a lot of the normal use-cases for Angr plus automatically harnessing inputs to reach that, which sounds pretty useful\n \nreply",
      "I\u2019d built an AI agent to accomplish this using Ghidra + GDB for dynamic analysis (tested it on crackmes)It worked surprisingly wellApplied to YC with it, sadly no interviewWas later told by some accepted friends/VCs that our application was good, but without pedigree we needed traction to de-risk / get accepted :(\n \nreply",
      "I think AI is currently much poorer for this use case, if you want to generalize it. There is less assembly code training data available where existing bad coding patterns are matched to actual bug descriptions. Assembly is more verbose so they also take more context width from LLMs. False positive are the biggest pain in this area. With LLMs it is also surprisingly difficult to test the existence of vulnerability in general - often you give a hint about the possible issue with the prompt itself. If you do it in large scale, false positives are everywhere.\n \nreply",
      "If you think its good why wait on YC...just build it.\n \nreply",
      "Pre-seed funding w/o a lengthy pitch processMuch harder to bootstrap part-time w/ dependents\n \nreply",
      "Would this have uncovered the XZ Utils scandal quicker?\n \nreply",
      "No.This is looking for coding bugs that allow unintentional behavior, not intentionally malicious code.\n \nreply",
      "I've Got Chills, They're Multiplying\n \nreply",
      "Grease is the time, is the place, is the motion\n \nreply"
    ],
    "link": "https://www.galois.com/articles/introducing-grease",
    "first_paragraph": "We take pride in personally connecting with all interested partners, collaborators and potential clients. Please email us with a brief description of how you would like to be connected with Galois and we will do our best to respond within one business day.Proactively and defensively ensuring the absence of vulnerabilities in binary code is crucial for deploying high-assurance systems. GREASE is an open-source tool leveraging under-constrained symbolic execution to help software reverse engineers analyze binaries and uncover hard-to-spot bugs, ultimately enhancing system security. This kind of binary analysis is especially important for systems that include COTS software that is only provided in binary form.\u200dGREASE can be used as a plug-in for the Ghidra reverse engineering framework, as a standalone command-line tool, or as a Haskell library. GREASE supports analysis of AArch32, PPC32, PPC64, and x86_64 Linux ELF binaries, as well as LLVM bitcode.GREASE can help software reverse engine"
  },
  {
    "title": "Want even tinier chips? Use a particle accelerator (economist.com)",
    "points": 44,
    "submitter": "jdaw0",
    "submit_time": "2025-03-17T18:35:41 1742236541",
    "num_comments": 35,
    "comments_url": "https://news.ycombinator.com/item?id=43391452",
    "comments": [
      "EUV has always been about achieving high enough power to be economically viable. It was never about making chips at any cost.I remember reading the tinfoil hat theory about three-letter agencies making low-quantity high-cost chips at incredible process sizes in order to break encryption. I doubt that's still as viable today as it was before leakage currents started dominating, but it was an impressively plausible theory.\n \nreply",
      "Back in the day, HP advertised that the distributed amplifiers in their 26.5 and 50 GHz equipment were made with e-beams, but the process size wasn't anything special, certainly not by today's standards. I'm not really sure what drove the decision.\n \nreply",
      "that tinfoil hat theory, just as basically all of them, can only be produced by people that have absolutely zero understanding of the topic. The amount of challenges that industry has faced during the relatively fast progress through nodes is just non skippable, as there were so many things to be discovered through very expensive and long brute force (just one example: high k dielectrics)\n \nreply",
      "No, you can absolutely make specialized chips that are orders of magnitude better than the commercial state of the art if you don't care about mass production or operational costs.I can bet there are superconductor/photonics/topologically different/strange memory/smaller process size prototypes around.Right now we are getting to the limits of transistor sizes, but even a couple of years ago experimental prototypes of smaller process size were developed years before mass production.\n \nreply",
      "where you get this nonsense? I am from semicon industry, so please, sources for the claim \"orders of magnitude better\"\n \nreply",
      "Where is my superconductor based CPUs preferably at room temperature.\n \nreply",
      "Does a superconducting semiconductor even make sense philosophically?\n \nreply",
      "Hell, even liquid nitrogen temperatures are fine. More hassle than you'd want in your pocket but yearly running costs wouldn't be too bad for most businesses.\n \nreply",
      "Free Electron Lasers have potential to generate more tunable radiation with higher luminosity. Despite this they aren't a drop in replacement for the current EUV light sources. A free electron laser is 200 meters long, so a single laser would feed multiple EUV machines for it to be economical. This technology is very promising but it has been under development for a while. Does anyone know what the current difficulties are?\n \nreply",
      "As far as I understand it, smaller scale XFEL devices still suffer from poor aim, even though now these machines have been miniaturized to basement scales. They don\u2019t need to be significant fractions of a kilometer anymore. This aim issue will probably be solved in the next few years. It\u2019s an exciting time to be in X ray science, particularly anything ultrafast.\n \nreply"
    ],
    "link": "https://www.economist.com/science-and-technology/2025/03/12/want-even-tinier-chips-use-a-particle-accelerator",
    "first_paragraph": ""
  },
  {
    "title": "Minding the gaps: A new way to draw separators in CSS (windows.com)",
    "points": 238,
    "submitter": "SigmundurM",
    "submit_time": "2025-03-20T08:00:54 1742457654",
    "num_comments": 88,
    "comments_url": "https://news.ycombinator.com/item?id=43420683",
    "comments": [
      "I would create new pseudo elements:    .container:gap { background-color: red; }\n\nThis will allow for more fancy backgrounds (e.g. dotted or gradients) and using { padding: 2px } to set whitespace at ends of the seperator.Possible with a :gap-horz and :gap-vert (or whatever css like to name it) to get seperate vertical and horizontal gaps.Also: .container:gap:nth-gap(2n) { color: blue; } to get alternating colors.\n \nreply",
      "I often set gaps between elements to 1rem or more. Coloring the gap wouldn\u2019t be the same as adding a rule.My \u201ctheory of layout\u201d is that no element should have any styling that relates to its relationship with other elements. Gap is very useful for establishing spacing.\n \nreply",
      "Perhaps with margin: auto your :gap element can sit in the middle of the \u201cgap space\u201d?\n \nreply",
      "Knowing how CSS tries to support direction agnostic layouts the pseudo elements would be::gap ( -[inline\\block] ( -[start/end] ) )You know how the shorthands work elsewhere, so this just replicates that.\n \nreply",
      "Isn't it (technically, officially) two colons for a pseudo-element? ::gap instead of :gap.\n \nreply",
      "Came here to say this too, the flexibility of having something like :after would mean not having to consider all the potential ways people are going to want to use this.Not sure about content: though, that could get weird.\n \nreply",
      "Came here to make the exact same comment, just being able to specify a border feels a little shortsighted.\n \nreply",
      "Design by committee is not the best but if you need one more view to be convinced, as a non native English speakers the property names proposed are not communicating the meaning very well. Eg Defining the gap but drawing the separator.\n \nreply",
      "Was just wondering that myself.. why they went with \"rule\" in `column-rule` and now `row-rule`\n \nreply",
      "It\u2019s the correct term from the technical vocabulary of book layout and printing.  A rule is a line separating things on a page, while a border is a box.[0]. While the term originates in book printing shops, native English speakers would recognize it most easily from the terms \u201cstandard ruled\u201d and \u201ccollege ruled\u201d as applied to loose-leaf notebook paper, describing the faint blue, printed horizontal lines providing guidance for straight handwriting.[1][0] https://practicaltypography.com/rules-and-borders.html\n[1] https://en.m.wikipedia.org/wiki/Ruled_paper\n \nreply"
    ],
    "link": "https://blogs.windows.com/msedgedev/2025/03/19/minding-the-gaps-a-new-way-to-draw-separators-in-css/",
    "first_paragraph": ""
  },
  {
    "title": "Hexagons and Beyond: Flexible, Responsive Grid Patterns, Sans Media Queries (20 (css-tricks.com)",
    "points": 45,
    "submitter": "todsacerdoti",
    "submit_time": "2025-03-18T13:23:57 1742304237",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43399170",
    "comments": [
      "> This is a fully responsive hexagon grid made without media queries, JavaScript, or a ton of hacky CSS.the CSS:    .main {\n      display:flex;\n      --s: 100px;  /* size  */\n      --m: 4px;    /* margin */\n      --f: calc(1.732 * var(--s) + 4 * var(--m)  - 1px);\n    }\n\n    .container {\n      font-size: 0; /*disable white space between inline block element */\n    }\n\n    .container div {\n      width: var(--s);\n      margin: var(--m);\n      height: calc(var(--s)*1.1547); \n      display: inline-block;\n      font-size:initial;\n      clip-path: polygon(0% 25%, 0% 75%, 50% 100%, 100% 75%, 100% 25%, 50% 0%);\n      background: red;\n      margin-bottom: calc(var(--m) - var(--s)*0.2885); \n    }\n    .container div:nth-child(odd) {\n      background:green;\n    }\n    .container::before {\n      content: \"\";\n      width: calc(var(--s)/2 + var(--m));\n      float: left;\n      height: 120%;\n      shape-outside: repeating-linear-gradient(     \n                       #0000 0 calc(var(--f) - 3px),      \n                       #000  0 var(--f));\n    }\n \nreply",
      "It's some 100% of hacky CSS all right.\n \nreply",
      "Wow, this is a person who could be fatally nerd-sniped if you suggest that their next CSS trick should be an aperiodic monotile...\n \nreply",
      "Get out of my head, demon!\n \nreply",
      "A hat tip to you.\n \nreply",
      ";-)\n \nreply",
      "inshallah!\n \nreply",
      "Doesn\u2019t seem to work with WebKit (tried with Safari and Firefox on iOS and Safari on macOS, but Firefox on macOS does work)Edit: A stray word\n \nreply",
      "Windows Mobile 6.5 style revival here we come!\n \nreply",
      "It's my first time hearing of this, so I went and found some screenshots: https://www.zdnet.com/article/first-photos-windows-mobile-6-... , https://venturebeat.com/social/windows-mobile-65-screenshot-... . The software is from the year 2008.\n \nreply"
    ],
    "link": "https://css-tricks.com/hexagons-and-beyond-flexible-responsive-grid-patterns-sans-media-queries/",
    "first_paragraph": ""
  }
]