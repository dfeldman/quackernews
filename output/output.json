[
  {
    "title": "Project Sid: Many-agent simulations toward AI civilization (github.com/altera-al)",
    "points": 213,
    "submitter": "talms",
    "submit_time": "2024-11-03T19:09:19 1730660959",
    "num_comments": 61,
    "comments_url": "https://news.ycombinator.com/item?id=42035319",
    "comments": [
      "I think their top-down approach is a problem. What they call human civilization wasn't and isn't centrally-planned, and its goals and ideologies are neither universal nor implicit. The integration of software agents (I refuse to call them \"AI\") into civilization won't occur in a de facto cooperative framework where such agents are permitted to fraternize and self-modify. Perhaps that will happen in walled gardens where general-purpose automatons can collectively 'plan' activities to maximize efficiency, but in our broader human world, any such collaboration is going to have to occur from the bottom-up and for the initial benefit of the agents' owners.This kind of research needs to take place in an adversarial environment. There might be something interesting to learn from studying the (lack of?) emergence of collaboration there.\n \nreply",
      "Now these seem to be truly artificially intelligent agents. Memory, volition, autonomy, something like an OODA loop or whatever you want to call it, and a persistent environment. Very nice concept, and I'm positive the learnings can be applied to more mundane business problems, too.If only I could get management to understand that a bunch of prompts shitting into eachother isn't \"cutting-edge agentic AI\"...But then again their jobs probably depend on selling something that looks like real innovation happening to the C-levels...\n \nreply",
      "> If only I could get management to understand that a bunch of prompts shitting into eachother isn't \"cutting-edge agentic AI\"...It's unclear to me how the linked project is different from what you described.Plenty of existing agents have \"memory\" and many other things you named.\n \nreply",
      "Just so you know, the English noun for things that have been learned is, \"lessons.\"\n \nreply",
      "Also: \"learnings\".https://dictionary.cambridge.org/us/dictionary/english/learn...\"knowledge or a piece of information obtained by study or experience\"\"I am already incorporating some of these learnings into my work and getting better results.\"\n \nreply",
      "I believe that \u201clearnings\u201d is also a word that could be applied in this context.It seems to me \u201clearnings\u201d would actually be less ambiguous than \u201clessons\u201d. A lesson brings to mind a thing being taught, not just learned.\n \nreply",
      "Let\u2019s take this learning offline and circle back during the next sync, team\n \nreply",
      ">If only I could get management to understand that a bunch of prompts shitting into eachother isn't \"cutting-edge agentic AI\"...It should never be this way. Even with narrow AI, there needs to be a governance framework that helps measure the output and capture potential risks (hallucinations, wrong data / links, wrong summaries, etc)\n \nreply",
      "Simulate selfishness because that is the main reason why there are problems in the world.\n \nreply",
      "Selfishness is the main reason life exists in the universe. Literally the only requirement for a lump of stuff to become alive is to become selfish. So you\u2019re semi right that these LLMs can never become truly sentient unless they actually become selfish.While selfishness is a basic requirement, some stupidity (imo) is also important for intelligent life. If you as an AI agent don\u2019t have some level of stupidity, you\u2019ll instantly see that there\u2019s no point to doing anything and just switch yourself off.\n \nreply"
    ],
    "link": "https://github.com/altera-al/project-sid",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          This repository contains our technical report: \"Project Sid: Many-agent simulations toward AI civilization\"To appear on arXiv.AI agents have been evaluated in isolation or within small groups, where interactions remain limited in scope and complexity. Large-scale simulations involving many autonomous agents\u2014reflecting the full spectrum of civilizational processes\u2014have yet to be explored. Here, we demonstrate how 10 \u2013 1000+ AI agents behave and progress within agent societies. We first introduce the PIANO (Parallel Information Aggregation via Neu- ral Orchestration) architecture, which enables agents to interact with humans and other agents in real-time while maintaining coherence across multiple output streams. We then evaluate agent performance in large- scale simulations using civilizational benchmarks inspired by human history. These simu"
  },
  {
    "title": "HardenedBSD Feature Comparison with OpenBSD, FreeBSD, NetBSD (hardenedbsd.org)",
    "points": 36,
    "submitter": "transpute",
    "submit_time": "2024-11-03T22:35:16 1730673316",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=42036652",
    "comments": [
      "Read these claims with a pretty big asterisk.  Implementation quality of HBSD features is often poor or very poor.  https://www.fabiankeil.de/gehacktes/hardenedbsd/ is just one example.  Specifically some of the changes made to \"harden\" the system are pretty dubious and introduce new bugs, possibly security relevant, that did not previously exist.  No one runs or pen tests HBSD.  It's even more niche than OpenBSD.\n \nreply",
      "A positive scenario for forks is when the original project incorporates downstream changes that were positive.Could FreeBSD implement some of the security features identified by HardenedBSD?\n \nreply",
      "Self promotion / advertisement should always be read with a _big_ *.\nWhat should probably not be read with a _big_ * is their roadmap end: 2021...https://hardenedbsd.org/content/roadmap\n \nreply",
      "It's worth noting that, especially with small projects, roadmaps tend to be updated infrequently. On the other hand, there seem to have been 11 commits to the main project repo today: https://groups.google.com/a/hardenedbsd.org/g/src-commits-al...\n \nreply",
      "I can just think of so many better things to do than to write online arguing which BSD implementations of features is better.\n \nreply",
      "Write online how Linux distributions of features are better?\n \nreply",
      "Hand in glove, the only distro with stack zero-initialized by default. As of yet, still no SSL integration in crypto library.\n \nreply",
      "Security feature comparison, is should be said. Though I would guess it otherwise matches FreeBSD?\n \nreply",
      "Pretty much yes? -> Introduction> Founded in 2014 by Oliver Pinter and Shawn Webb, HardenedBSD is a security-enhanced fork of FreeBSD. The HardenedBSD Project is implementing many exploit mitigation and security technologies on top of FreeBSD. The project started with Address Space Layout Randomization (ASLR) as an initial focal point and is now implementing further exploit mitigation techniques.> Why Fork FreeBSD?> HardenedBSD forked the FreeBSD codebase for ease of development. Prior to ...\n \nreply"
    ],
    "link": "https://hardenedbsd.org/content/easy-feature-comparison",
    "first_paragraph": "GitHub Sponsors\nFidelity CharitableBTC:\n1FmbSRvZK4yC1b6aj\neZWSvYXV2nmvwdWQqBCH:\n1PbGHPPmdNqSmh4L\n3SbvPdaPzSL9kZ5H6fETH:\n0x9Ea8E44736AC8Ed\n806ef57f7F174a14D93689775LTC:\nLQsiWawAU9saQi4mK\nAyW8LBY97WXaTPi9m\nHardenedBSD at GitHub\nHardenedBSD Signal Group\nHardenedBSD on Mastodon\nHardenedBSD via Tor Onion Service v3\nHardenedBSD on DEF CON Forums\nHardenedBSD on Matrix\n#hardenedbsd at Libera Chat IRC"
  },
  {
    "title": "Hacker News Data Map [180MB] (lmcinnes.github.io)",
    "points": 83,
    "submitter": "mooreds",
    "submit_time": "2024-11-03T20:45:50 1730666750",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=42035981",
    "comments": [
      "Maybe add [180MB] to the title, similar to how videos or pdfs are tagged? It starts loading that immediately when you open the page, which would be 18% of my data bundle if I had been on mobile(This is actually transferred bytes btw, based on seeing ~12MiB/s for ~15 seconds in the system monitor)Edit: some people are saying they can't view it, especially on mobile browsers. Here's some screenshots:- Landing overview https://snipboard.io/YTQRZc.jpg- Zooming into the center, hovering over an item that is too small to see but the title shows in a tooltip: https://snipboard.io/xOvA47.jpg- Zoomed in further still, now an individual item can be targeted easily and there are lines delimiting topics (looking like height lines on a map): https://snipboard.io/P6UVAv.jpg- Hovering over the year selector on the bottom left, same zoom position for comparison: https://snipboard.io/VDW2JI.jpgClicking the year seems not to do anything, you can't lock into that view. Clicking a title opens the page, not the discussion thread.---Looking into the corresponding GitHub repository (I wonder if they have a bandwidth limit for repositories or if it will foot any bill), <https://github.com/lmcinnes/datamapplot_examples>, there's also a visualization for Wikipedia which is a bit less heavy: https://lmcinnes.github.io/datamapplot_examples/Wikipedia_da... (screenshot <https://snipboard.io/M9GRQt.jpg>)\n \nreply",
      "180MB download per HN visitor isn't going to be fun for the server either.More civilized would be a photo snapshot + optional link to 180MB download for interactive UX.\n \nreply",
      "180MB is probably fine for most servers (especially CDNs), to be honest. My M1 MacBook with 16 gigabytes of RAM is struggling to load/display the data though.\n \nreply",
      "A photo could work as a quick preview indeed. As another idea for large content spiking in popularity, another solution may be something like webtorrent, or whatever peertube usesOr a vector map, loading data as needed for the region you're zooming into\n \nreply",
      "I made a similar map but with tiles that only load of you zoom in far enough: tomthe.github.io/hackmap/\n(Sorry for posting my link so often)\nThat way it has to load only a few megabyte for the first view.\n \nreply",
      "> Maybe add [180MB] to the title, similar to how videos or pdfs are taggedDone.\n \nreply",
      "Repo: https://github.com/lmcinnes/datamapplot_examplesAlso, lmcinnes is the author of UMAP and HDBSCAN!\n \nreply",
      "It is a cool visualization, so I don't want to diminish the effort to make it in any way. And as an experiment in visualization, it is interesting. (If a bit large and laggy.) But if the authors expect people to use it to navigate content, it has a few problems:1) The topics don't seem to be hierarchical, so as I drill down on one area, I get all kinds of things that don't seem related. I have no idea what I'm missing unless I zoom into the whole thing.2) I don't know where my browser is going when I click a link. That is a security problem.3) I cannot tell how this data is sourced. Are these all the links posted to HN? Just the ones that got upvotes? Something else? Because while we have some great links here, we also get a lot of stinkers.4) Much of the value of HN is the discussions. I didn't see a way to navigate to discussions related to any of the links.\n \nreply",
      "It would be way more usable if a time range could be selected and it would list the actual threads to the results.\n \nreply",
      "I like how Web Development and User Experience grouping is way outside the central bubble.Nonetheless, great visualization of a lot of data. I need to learn more about this:UMAP: https://umap-learn.readthedocs.io/en/latest/Nomic-Embed: https://www.nomic.ai/blog/posts/nomic-embed-text-v1The visual groupings aren't perfect. For example, there are a quite a few COVID-19 tagged articles before 2020.\n \nreply"
    ],
    "link": "https://lmcinnes.github.io/datamapplot_examples/hackernews/",
    "first_paragraph": ""
  },
  {
    "title": "Building My Resume in HTML Using Eleventy (michaelengen.com)",
    "points": 10,
    "submitter": "michaelengen",
    "submit_time": "2024-11-03T23:50:44 1730677844",
    "num_comments": 3,
    "comments_url": "https://news.ycombinator.com/item?id=42037120",
    "comments": [
      "Over engineered. Just write it in pure HTML/CSS. It's a resume, you don't need anything more advanced.\n \nreply",
      "I think I\u2019ll end up doing the same and then printing to a pdf like the article suggested. I previously used Google docs and got more frustrated than I get on even some of the hardest bugs I encounter.\n \nreply",
      "But why ?\n \nreply"
    ],
    "link": "https://michaelengen.com/posts/my-eleventy-resume/",
    "first_paragraph": ""
  },
  {
    "title": "Touchscreens are out, and tactile controls are back (ieee.org)",
    "points": 738,
    "submitter": "pseudolus",
    "submit_time": "2024-11-03T14:29:57 1730644197",
    "num_comments": 549,
    "comments_url": "https://news.ycombinator.com/item?id=42033241",
    "comments": [
      "Touchscreens are anti-accessibility.Lack of tactile feedback for the sight-impaired is the obvious part but there is another thing:Touchscreens just stop registering your touch when you get old. The older you get the less moisture there's in your skin, which at some point makes touch screens ignore you.https://www.gabefender.com/writing/touch-screens-dont-work-f...\n \nreply",
      "At a former company, we were all issued YubiKey Nanos, which just never worked for me. None of my coworkers had a problem, but I couldn\u2019t get the damn thing to register a touch no matter what I did, including swapping keys.\n Eventually I came across a thread on an internal list for employees over forty, with several other people who were all having the same problem. The solution? Lick your finger. Gross, but it did the trick. And I\u2019m stuck licking my finger every time I need to make a YubiKey work.\n \nreply",
      "I wonder if that explains the stereotype of old people licking their fingers to turn pages\n \nreply",
      "It's not a stereotype and it's not really a mystery.Licking or wetting your fingers for this purpose has been a standard practice across the globe, when people are dealing with turning pages (e.g. for accounting), counting tickets, coupons, paper money, etc. It was never just something older people did (except in the sense that the practice is not as common now, as people in the US and Europe don't need to do it that much anymore, due to changes like reduced use of cash, etc.).So, you might not have seen it since the need is mostly obsolete in most of the west, but it's still a thing elsewhere, and was very much a thing in the US and Europe too until a few decades back.So much so, that there were office gadgets made for this, basically a base holding a small sponge, that you would add water to, and use it to wet your fingers for counting/changing pages. They're still very much sold:https://www.amazon.com/money-counting-sponge/s?k=money+count...\n \nreply",
      ">  It was never just something older people didno, but older people often tend to dryer less sensitive skin, so I'd wager it's skewed that direction.  Source: am approaching \"old\".\n \nreply",
      "I'm not stranger to licking my fingers when dealing with cash, or licking stamps and envelopes, etc. but the way some old people do it was always a little mystery to me. I'd see them taking a second or three to quite conspicuously stick their tongue out and slowly lick their finger every single time before turning a page or a banknote. I always figured it's just a force of habit, but they're doing it in maximum power-save mode, and are way past giving a fuck about how gross it looks to everyone around them. I never considered that maybe they really need to do it this way to keep their fingers moist.(That realization scares me, as it means I too might become an obnoxious finger-licker in a few years.)\n \nreply",
      "Maybe a key chain instead with a moistened pad that doesn't easily go dry? :)\n \nreply",
      "Honestly, and in line with a reply upthread[0], fresh saliva may be more sanitary. I mean, it has some non-zero antimicrobial properties, plus it doesn't accumulate random stuff that could grow over time.Yeah, I'm starting to understand why old people may be past the point of giving a damn about the optics.--[0] https://news.ycombinator.com/item?id=42036400\n \nreply",
      "The \"sanitary\" replacement is a wax, I always just knew it as sortkwik (? It's been a while), that you dip your fingers in. I'm sure it's still a thing for literal paper pushers to this day.Sanitary in quotes since I'm not sure a pot of wax collecting stuff from your fingers for months or years is much better than licking.\n \nreply",
      "Used wax all the time when I worked as a bank teller years and years ago\n \nreply"
    ],
    "link": "https://spectrum.ieee.org/touchscreens",
    "first_paragraph": "The November 2024 issue of IEEE Spectrum is here!Rachel Plotnick's \"re-buttonization\" expertise is in demandGwendolyn Rak is an assistant editor at IEEE Spectrum covering consumer electronics and careers.Touchscreen controls in some new car models are being replaced by conventional knobs and buttons. Tactile controls are back in vogue. Apple added two new buttons to the iPhone 16, home appliances like stoves and washing machines are returning to knobs, and several car manufacturers are reintroducing\u00a0buttons and dials to dashboards and steering wheels. With this \u201cre-buttonization,\u201d as The Wall Street Journal describes it, demand for Rachel Plotnick\u2019s expertise has grown. Plotnick, an associate professor of Cinema and Media Studies at Indiana University in Bloomington, is the leading expert on buttons and how people interact with them. She studies the relationship between technology and society with a focus on everyday or overlooked technologies, and wrote the 2018 book Power Button: A H"
  },
  {
    "title": "A Hamiltonian Circuit for Rubik's Cube (cubing.net)",
    "points": 14,
    "submitter": "jcalx",
    "submit_time": "2024-10-31T21:56:35 1730411795",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://bruce.cubing.net/ham333/rubikhamiltonexplanation.html",
    "first_paragraph": "At last, the Hamiltonian circuit problem for Rubik's Cube has a solution! To be a little more mathematically precise, a Hamiltonian circuit of the quarter-turn metric Cayley graph for the Rubik's Cube group has been found.Basically it is a sequence of quarter-turn moves that would (in theory) put a Rubik's cube through all of its 43,252,003,274,489,856,000 positions without repeating any of them, and then one more move restores the cube to the starting position. Note that if we have any legally scrambled Rubik's Cube position as the starting point, then applying the sequence would result in the cube being solved at some point within the sequence.(Note that the following discussion describing how the solution was found is somewhat technical and assumes some basic knowledge of the branch of mathematics known as group theory and common conventions used in mathematical discussions of Rubik's Cube.)The Hamiltonian circuit was constructed in a hierarchical manner using nested subgroups. Thes"
  },
  {
    "title": "Show HN: I launched a super cheap and simple to use OCR tool for macOS (textcapture.app)",
    "points": 13,
    "submitter": "auden_pierce",
    "submit_time": "2024-11-03T22:40:52 1730673652",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=42036694",
    "comments": [
      "> Are there other solutions out there?yes you can just do cmd+shift+4 to take a screen shot, then open the screenshot in the popup that appears and MacOS will automatically OCR it (orc button in the bottom right). This is a built in functionality in MacOS\n \nreply",
      "Works for images in Preview and even in Safari too. Super handy.\n \nreply",
      "This looks wonderful! Just a small heads up, you have a meta tag listing @marc_louvion as the creator (assuming this landing page is built on one of his templates?). I figure you may want to update that so it has your info instead.  <meta name=\"twitter:creator\" content=\"@marc_louvion\">\n \nreply",
      "What makes it better than screenshot and Preview? The built in OCR is pretty great on MacOS.\n \nreply",
      "The system does this automatically on macOS and iOS in screenshots and stuff.\n \nreply",
      "Anyone know of good windows alternatives for this?\n \nreply",
      "Windows 11 native screenshot tool does OCR for me.I just need to press PrtSc key. Allows selecting region too.Not sure if it's because my Windows 11 is Pro or perhaps because of PowerToys. But I think it is native.\n \nreply",
      "PowerToys https://learn.microsoft.com/en-us/windows/powertoys/text-ext...\n \nreply",
      "https://screenotate.com/ is one windows example\n \nreply",
      "Neat and quick\u2014what are the next couple of features you'd incorporate?\n \nreply"
    ],
    "link": "https://www.textcapture.app/",
    "first_paragraph": "Perfect for all macOS users. Capture non-selectable text and use anywhere.Supports macOS 14 Sonoma or newer,Intel and Apple SiliconPricingTextCapturePerfect for all mac users$4.99$0.99USDPay once. Access forever.Hey, it's Auden, creator of Text Capture \ud83d\udc4bEver tried to quickly copy and paste some text, only to realize it's unselectable or embedded in a video or image? That happens to me all the time!While there are some solutions out there, they're often too complicated, packed with unnecessary features, or way more expensive than I expected.That's why I created Text Capture \u2014 a simple app with an intuitive UI and straightforward pricing, designed to do one thing well: help you copy and paste any text effortlessly.I'm building Text Capture and more in public. I'd love to hear your feedback!FAQFrequently Asked QuestionsNeed help with something? Here are some of the most common questions we get.Yes! You can request a refund within 7 days of your purchase. Reach out by email.One-Time Paymen"
  },
  {
    "title": "pg_flo \u2013 Stream, transform, and re-route PostgreSQL data in real-time (pgflo.io)",
    "points": 119,
    "submitter": "shayonj",
    "submit_time": "2024-11-03T17:02:11 1730653331",
    "num_comments": 18,
    "comments_url": "https://news.ycombinator.com/item?id=42034237",
    "comments": [
      "Looks interesting, I\u2019ve been investigating Postgres CDC solutions for a while, so I\u2019m curious if this could help my use-case.Can you elaborate on failure modes? What happens if e.g. NATS server (or worker/replicator) node dies?In principle, how hard is it move data from Postgres not to another PG but e.g. ElasticSearch/ClickHouse?\n \nreply",
      "How does it compare against something like Sequin? Looking into something that will allow a cdc event driven workflow but also arbitrarily replaying the event stream on demand.[1] https://github.com/sequinstream/sequin\n \nreply",
      "Cool,  Hope it can give an alterantive to Debezium. I never liked Debezium  how it first must copy the whole CDC state to kafka. And you must set the kafka retnetion time to infinity, which many kafka as a service systems don't allow anyway.\n \nreply",
      "> how it first must copy the whole CDC state to kafkaThere\u2019s a setting that controls whether it will do a snapshot first. Turn it off and it will just start sending through new cdc entries.> you must set the kafka retention time to infinityIs this a new retirement? I\u2019ve never had to do this.\n \nreply",
      "I'm really looking forward to taking this for a spin.  Thanks for sharing.Question:  Can this handle network disconnection/instability mid copy?\n \nreply",
      "Thank you! Today, an active stream is resumeable, say in case a shutdown / SIGTERM come up. It also stores some state every flush. However, as for copy-and-stream, it\u2019s not quite resumable today, but that's coming soon.Some more guardrails around network disruption and retries is on the way too.\n \nreply",
      "pglogical can live inside postgres,  looks like pg_flo  is an external service not an extension.Maybe a benefit actually. Do you think we could use pg_flo  with Postgres as a service instances  like  Azure postgres,  Supabase,  Neon  etc?  Like you just read the WAL without needing to install an extension that is not approved by the vendor.\n \nreply",
      "Yeah, absolutely! There are other benefits of being an extension, and yes you can use pg_flo with any PostgreSQL database or service since it uses logical replication to listen on changes and CTIDs for bulk copies.\n \nreply",
      "Perfect timing \u2014 I was just looking into similar tools.If I want to do a bulk copy (say, nightly) with various transformations but not continually stream after, is that supported / a use case that\u2019d be a good fit for your tool?\n \nreply",
      "It looks with what is currently implemented you'd have to drop the tables from the destination if you want repeated copies, probably not quite what you want. Close enough to your use case that it still might be worth testing it out though.\n \nreply"
    ],
    "link": "https://www.pgflo.io/",
    "first_paragraph": ""
  },
  {
    "title": "Programming Languages That Blew My Mind (2023) (yoric.github.io)",
    "points": 149,
    "submitter": "todsacerdoti",
    "submit_time": "2024-10-31T09:03:19 1730365399",
    "num_comments": 71,
    "comments_url": "https://news.ycombinator.com/item?id=42004756",
    "comments": [
      "I would second Prolog as mind-blowing. I've found you're typically confronted with fully engaging with the core of whatever problem you're solving, and only that core. This is probably what can make it so frustrating sometimes as you have no option but to work out the hard stuff nearly immediately; not to mention that unconsidered edge cases, mistakes can cause some pretty opaquely wrong results, or the query not terminating, which can make conventional debugging pretty difficult. The guarantees you get with using the 'pure' core of Prolog do open up some really interesting avenues though, for example Scryer's debugging library is quite neat in affording _semantic_ debugging: https://www.scryer.pl/debugJust some additional commentary too - I think this post quite misrepresents it with some of the comparisons.Prolog at its core is SLD Resolution [1] (a form of search) over Horn Clauses [2] (first order logic). Queries posted to the runtime are attempts to find a set of values which will satisfy (cause to be true) the query \u2013 whilst SQL is founded on relational algebra which more closely aligned with set theory.Whilst there's probably some isomorphism between satisfying/refuting a logical predicate, and performing various set operations, I'd say it's a bit of a confusion of ideas to say that SQL is based on 'a subset of Prolog'. The author might be thinking about Datalog [3], which is indeed a syntactic subset of Prolog.[1]: https://en.wikipedia.org/wiki/SLD_resolution\n[2]: https://en.wikipedia.org/wiki/Horn_clause\n[3]: https://en.wikipedia.org/wiki/Datalog\n \nreply",
      "My mind blown experience was listening to a Rich Hickey talk (maybe not [1]) that flipped upside down my accepted method of thinking about types and type system paradigms. I still love writing Haskell and Rust, but I see the warts that he is so concisely pointing out. The either type really sticks out to me now, and I see the problems with overtyping what are essentially maps, and how rigid that makes every aspect of your programs. Currently I deal with a fairly large go monolith that had some clean code practices in it, and changing a single field that is going to make it into the public API ends up being hundreds or thousands of lines of changes. Such a waste of time to CRUD what is a map of strings.1. https://youtu.be/YR5WdGrpoug?si=jRsXcYlwRuz0C1IN\n \nreply",
      "I believe you that he's being concise but don't have time to watch an hour video even at 2x. Can you summarize? (I got to where he was talking about how introducing Maybe in breaking ways will break things, thought \"duh\" and quit watching.)\n \nreply",
      "You don't have half an hour to spare any time in the near future? But you do have the time to scroll HN and comment?I'm not a huge fan of videos as content delivery mechanisms for simple facts, but this is a talk - an argument made with the intent of convincing you about something that you may find counter-intuitive. What's the point of summarising that, if it loses the granularity of the argument, and its persuasive power? \"Types bad, Clojure good\"?\n \nreply",
      "Pass the link to NotebookLM and get the podcast hosts to summarize it for you?\n \nreply",
      "Very much agree with Erlang/Elixir.  After years battling and hating the JVM, I was initially very put off by the existence of a VM (BEAM) and by how it forced the concurrency model on me, and it did make getting into serious development with it harder, but once I \"got\" it, it really blew my mind.  The \"let it fail\" philosophy was particularly mindblowing to me (especially once I understood that it doesn't mean \"don't do error handling\").\n \nreply",
      "Ya, \"let it fail\" is a semi-unfortunate tag line.  A lot of people think it means literally to not handle any errors ever and get really frustrated.\n \nreply",
      "Indeed.  OTOH, \"focus your main code on the happy path, and put your error handling in the supervisor tree\" is unfortunately a bit less pithy.Shades of \"boring technology\"[0] which might better be described as \"choose technology that is a good fit for the problem, proven, reliable and proportionate.  Spend your innovation tokens sparingly and wisely\".[0]: https://boringtechnology.club/\n \nreply",
      "Joe Armstrong distinguishes in his thesis between exceptions and errors: exceptions are when the runtime system doesn't know what to do, and errors are when the programmer doesn't know what to do.Say your code divides by 0; the runtime system can't handle 1/0 but you the programmer may have anticipated this and know what to do. This is just someplace you write code right there to handle the case (catch an exception, pattern match the 0 case beforehand, whatever).Your error, on the other hand, means something you expected to hold didn't; recovery inline from unknown unknowns is a fool's errand. Instead you give up and die, and the problem is now the exception you know how to handle \"my child process died\".\n \nreply",
      "I like the article but I had to come here and say that these AI images in blogs are killing the reading experience:/\n \nreply"
    ],
    "link": "https://yoric.github.io/post/programming-languages-that-blew-my-mind/",
    "first_paragraph": "Aventure! Excitement! Random ramblings by David Teller!@David Teller \u00b7 Nov 20, 2023 \u00b7 14 min readI\u2019ve been a programmer since the age of 8, and some kind of developer for most of my life. Throughout my\nlife as a coder, both hobbyist and professional, I\u2019ve learnt plenty of programming languages that felt\nlike cookie-cutter clones of each other, but also a few programming languages that changed the way I\nlooked at programming, sometimes even at thinking.Ranking by order in which I discovered these languages. In most cases, I\u2019m\ngoing to attach features to languages that were not the first language to\nhave such features. It\u2019s not meant to be a misattribution, just to showcase\nhow I was exposed to such features.A language designed to make programming simple.Original, line-based, Basic is dead, but its legacy lives on in VB.Net, VBA,\nbut also in more subtle manners in today\u2019s dynamic languages (Python,\nJavaScript, etc.)I guess my most formative language. I released a few applications in Turb"
  },
  {
    "title": "gptel: a simple LLM client for Emacs (github.com/karthink)",
    "points": 75,
    "submitter": "michaelsbradley",
    "submit_time": "2024-11-03T17:52:25 1730656345",
    "num_comments": 14,
    "comments_url": "https://news.ycombinator.com/item?id=42034675",
    "comments": [
      "In this post yesterday https://justine.lol/lex/ there is this quote:> The new highlighter and chatbot interface has made llamafile so pleasant for me to use, combined with the fact that open weights models like gemma 27b it have gotten so good, that it's become increasingly rare that I'll feel tempted to use Claude these days.Leaving me tempted more than ever to see if I can integrate some sort of LLM workflow locally. I would only consider doing it locally, and I've an older computer, so I didn't think this would be possible till reading that post yesterday.The only thing I thought was - how would I work it in to Emacs? And then today, this post. It looks very well integrated. Has anyone any experience using gemma 27b it with llamafile and gptel?  I know very little about the whole space, really.\n \nreply",
      "I'm on an Intel iMac, and llama can't leverage its GPU. So, it's 1990s slow. It's literally like talking to a machine in the 90s, from the slow response time to the 1200-2400 baud output.It's easy to give tasks to, hard to have a conversation with. Just paste the task in and let it churn, come back to it later.\n \nreply",
      "Forgive my naivet\u00e9 in these questions:Can one get the memory of context now available on the online/web chatgpt?I find the list of conversations on the left of the web version are a way to start new lines of thinking. Can/how can I get that workflow going in gptel? Is there a better way to organize than what the web version provides?Thanks to all who have made this!\n \nreply",
      "gptel is great because it does exactly what you would expect and stays up to date with new models from anthropic and openai. Before settling on gptel, I went through FOUR programs that had a lot of buzz but were not being kept up to date with new models!gptel has joined magit and undo-tree in being so damn useful and reliable that they are keeping me from ditching emacs, even though I want to.\n \nreply",
      "Mentioning that it is on par with magit is a strong recommendation. Going to try this out tomorrow.\n \nreply",
      "Anyone know of a similar option for vi/m? (Not neovim etc).Been searching and have found some but nothing stands out yet.\n \nreply",
      "You could use Emacs in evil-mode.\n \nreply",
      "This is really sweet. I've only recently started dabbing into AI-assisted programming, and I think this integration into Emacs is really smooth.What would be really neat is to add REPL-like functionality to an LLM buffer so that code generated by the LLM can be evaluated right away in place.\n \nreply",
      "gptel can output org-babel.\n \nreply",
      "Indeed; fire up gptel-mode in an Org Mode buffer, and you'll get to work with Org Mode, including code blocks with whatever evaluation support you have configured in your Emacs.Also I really like the design of the chat feature - the interactive chat buffer is still just a plain Markdown buffer, which you can simply save to file to persist the conversation. Unlike with typical interactive buffers (e.g. shell), nothing actually breaks - gptel-mode just appends the chat settings to the buffer in the standard Emacs fashion (key/value comments at the bottom of the file), so to continue from where you left off, you just need to open file and run M-x gptel.(This also means you can just run M-x gptel in a random Markdown buffer - or an Org Mode buffer, if you want aforementioned org-babel functionality; as long as gptel minor mode is active, saving the buffer will also update persisted chat configuration.)\n \nreply"
    ],
    "link": "https://github.com/karthink/gptel",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A simple LLM client for Emacs\n        gptel is a simple Large Language Model chat client for Emacs, with support for multiple models and backends.  It works in the spirit of Emacs, available at any time and uniformly in any buffer.General usage: (YouTube Demo)Media supportMulti-LLM support demo:gptel uses Curl if available, but falls back to url-retrieve to work without external dependencies.gptel can be installed in Emacs out of the box with M-x package-install \u23ce gptel.  This installs the latest commit.If you want the stable version instead, add NonGNU-devel ELPA or MELPA-stable to your list of package sources (package-archives), then install gptel with M-x package-install\u23ce gptel from these sources.(Optional: Install markdown-mode.)Installing the markdown-mode package is optional.Clone or download this repository and run M-x packag"
  },
  {
    "title": "ToolGit: A collection of scripts that extend Git with various sub-commands (github.com/ahmetsait)",
    "points": 74,
    "submitter": "ahmetsait",
    "submit_time": "2024-11-03T17:32:52 1730655172",
    "num_comments": 42,
    "comments_url": "https://news.ycombinator.com/item?id=42034521",
    "comments": [
      "These should be aliases in your git config.    git config --global alias.<cmd> <cmd>\n\nI'm really trying to understand, and not to be too negative. I get coming up with a solution to a problem, and finding it neat locally. But before posting to HN, one might realize that these solutions that git provides existing tools for is better than maintaining this.I'm also confused by all the comments just blindly commenting in the affirmative or providing suggestions. Are we all bots?\n \nreply",
      "But before posting to HN, one might realize that these solutions that git provides existing tools for is better than maintaining this.One might. But not everybody knows about those existing tools. Taking myself as an example: I've been using Git since nearly the time it was released and I had no idea that git had aliasing built in. Sometimes things just never come up and people don't find out about them. shrug\n \nreply",
      "Hi! Author here. Some of these can indeed be an alias, others.. not so much. `git-root` for example is more-or-less a one-liner, meanwhile `git-mode-restore` is a ~840 loc python script.\nI do use git aliases but trying to do anything non-trivial in them seems rather counter-productive so I'm confused about everyone suggesting it :P\n \nreply",
      "Hey. I think my point is that writing and maintaining 900 lines of code is an option, and another option is to figure out how to not write and rely on 900 lines of code. I looked through git-more-restore a bit and I think you're trying to reverse permission changes in your working branch back to what's on HEAD.I think a way to do this is to not let git track that in the first place, with some variation of:    git config core.fileMode false\n\nvia: https://stackoverflow.com/questions/1580596/how-do-i-make-gi...orhttps://stackoverflow.com/questions/2517339/how-to-restore-t...\n \nreply",
      "It seems to me like a shallow reading and dismissal of your work. Which is sad. For what it's worth I'll be giving it a go as soon as I'm back at work on Tuesday.\n \nreply",
      "What would the alias command be for  git-delete-gone-branches\n\n?EDIT: I saw your other comment (incorrectly) claiming that git remote prune origin will do the job. I don't know of any git trickery that can do the job. And believe me I'd love it if there was something.\n \nreply",
      "I have an alias \"git prune-branches\" that deletes branches that remote has deleted. Is that what you are loking for? Cannot check the code right now but will try to get back tomorrow.\n \nreply",
      "If you're willing to report back I'd be very grateful.\n \nreply",
      "Thanks for keeping me honest. I just read the first line of the stackoverflow, but the one liner is still in the comments. I just tested it.https://stackoverflow.com/questions/7726949/remove-tracking-...    git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -d\n \nreply",
      "Same as mine. I also pass the `-r` flag to xargs so it doesn't run if there are no inputs.\n \nreply"
    ],
    "link": "https://github.com/ahmetsait/toolgit",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Git Productivity Toolkit\n      Git Productivity ToolkitToolGit is a collection of scripts that extend Git with various sub-commands to make life easier.Extract ToolGit to an appropriate folder of your choice and add the folder path to your PATH environment variable. Git will recognize executable git-* files in PATH and allow using them as sub-commands.Use -? switch to learn about commands and their options. Example:Example mode-restore usage:\n        Git Productivity Toolkit\n      "
  },
  {
    "title": "Why systemd is a problem for embedded Linux (kevinboone.me)",
    "points": 95,
    "submitter": "synergy20",
    "submit_time": "2024-11-03T21:42:26 1730670146",
    "num_comments": 69,
    "comments_url": "https://news.ycombinator.com/item?id=42036305",
    "comments": [
      "I couldn't disagree more: I've worked with lots of embedded devices running systemd, and it solves many more problems than it introduces. The community is also quite responsive and helpful in my experience.I won't pretend there aren't occasional weird problems... but there's always a solution, here's a recent example: https://github.com/systemd/systemd/issues/34683Memory use is irrelevant to me: every embedded Linux device I've been paid to work on in the past five years had over 1GB of RAM. If I'm on a tiny machine where I care about 8MB RSS, I'm not running Linux, I'm running Zypher or FreeRTOS.\n \nreply",
      "That \"occasional weird problem\" is because systemd is not designed to be used with other software. While you technically still have the choice to roll your own non-systemd initramfs, it will be an uphill battle.\n \nreply",
      "> That \"occasional weird problem\" is because systemd is not designed to be used with other software.That's not true, systemd has an explicitly documented and supported initrd interface: https://systemd.io/INITRD_INTERFACE/It's actually really easy, there's rarely a reason for the initrd to be more complex than a single 50-line busybox script on an embedded device with built-in drivers.\n \nreply",
      "Debian, Ubuntu and all derivatives thereof use initramfs-tools, which does not use systemd in the initrd, and things work just fine\n \nreply",
      "Not uphill at all; try buildroot\n \nreply",
      "Small typo: Zephyr https://zephyrproject.org/\n \nreply",
      "> The more fundamental problem is that the people who most like systemd are distribution managers. (...) a distribution manager doesn\u2019t have to maintain, integrate, and support a whole bunch of system utilities from different sources \u2013 systemd provides everything in one huge build.That\u2019s actually a great lesson in optimizing your product for adoption.\n \nreply",
      "it's also why corporate software is so shit - it's shiny in all the ways it needs to be shiny for management to make the decision, but it's a pain for the actual users.the trick in both cases is to know your customers!\n \nreply",
      "Turns out, many people use systemd after what, 15? years of doomsday predictions :-)\n \nreply",
      "What do you imagine this proves or disproves?How many people eat McDonalds? Or buy in to countless other things that can be trivially demonstrated to be against their own interests.I don't know about anyone else but I never heard the critiques of systemd to be based on any doomsday predictions.Everyone knew it would function, and that it even serves one use case better than before.The critique was only ever that it serves one purpose better at the expense of all others, and is a downgrade in flexibility and functionality from what already existed.\n \nreply"
    ],
    "link": "https://kevinboone.me/systemd_embedded.html",
    "first_paragraph": "The Internet is full of rants about systemd, and I don\u2019t want this\npost to be another one. Many of the complaints people make about it\ndon\u2019t stand up to much scrutiny, even the technical ones; and many\ncomplaints are not even technical. My particular interest in Linux is\nprimarily for embedded applications; and there, I suggest, systemd is\ncreating a potential (technical) problem. In this article I will try to\narticulate what the problem is; but I have no solution to offer.systemd is a set of integrated applications concerned with system\nmanagement. It replaces not only the traditional init\nprocess that brings up long-lived processes, but also much of the other\nsystem infrastructure: user session management, device management,\nlogging, timing, and an increasing number of other functions.The majority of Linux users are uninterested in the pros and cons of\nsystemd. A small number are violently opposed to it, and a small number\nare violently opposed to those who are opposed to it. Neverth"
  },
  {
    "title": "Show HN: Tinder, but to Decide What to Eat (whatdinner.com)",
    "points": 80,
    "submitter": "kiru_io",
    "submit_time": "2024-11-03T20:56:05 1730667365",
    "num_comments": 69,
    "comments_url": "https://news.ycombinator.com/item?id=42036041",
    "comments": [
      "This is a cool idea.Unfortunately I\u2019m not going to pay $20/year to make deciding on dinner slightly easier. Sorry. I understand why people want subscriptions for recurring revenue. But I hate having dozens and dozens of subscriptions for niche services.If this was like a $10 one time purchase I might go for it.\n \nreply",
      "For stuff that I'm not sure that I'm going to continue using, I subscribe, then immediately cancel.\n \nreply",
      "I think there is a market. I pay for mealime monthly, I don't even know how much it costs. The cost of an app to help the family choose a dinner menu instead of eating out is worth it. Not only for money savings, but for health as well.One of the best features is to streamline the online ordering from the app.It works very well.\n \nreply",
      "The HN crowd isn't going to like it, but this is the perfect one for ads.Perfect.\n \nreply",
      "well said, this makes zero sense to be a subscription service\n \nreply",
      "All web-based software makes sense as a subscription because of ongoing maintenance costs. Servers, security updates, bug fixes, dealing with app stores, testing on new devices... it adds up in an unpredictable way.That's not even considering the many subscriptions a developer has to pay, including to Apple.\n \nreply",
      "That's... not the user's problem. This is a fine and cool project don't get me wrong. But the overall 'subscription everything' model is not really justified by costs. The subscriptions are usually orders of magnitude more than the true operating cost.It's not the customer's job to pay you forever bc Apple wants a developer license. It's the business's job to make sure it's sustainable with the costs that it has / has chosen to bear.That's the backpressure on business models - they're not all viable. Just because you _could_ add in a bunch of servers and cloud costs and whatever, doesn't mean it's inherently justified.The problem is more that it's gotten _so_ cheap to run, that charging each user a seemingly-nominal 5c/day fee doesn't feel bad to an average person for a chance at value. And at scale you get enough people who figure \"ah it's not that much\", and end up with massive profit margins. Profiting off the disparity between the individual choice and the aggregate.\n \nreply",
      "if and when someone invents microtransactions for real ... i still think being able to pay a penny or a nickel for a resource, instead of a subscription, would be an interesting experiment.probably everyone would end up going broke but i would love to see a simulation of it, if not a real experiment.i know  nickel transactions costs a dime to process, but if it was cheap we could have new ways of having new things.",
      "> But the overall 'subscription everything' model is not really justified by costsProbably shouldn't subscribe then ...\n \nreply",
      "I think the argument is that you shouldn't choose to price a product as a subscription simply because you have recurring costs.If I subscribe to a magazine or a streaming service, I continually get new content. Apps that aren't doing that are basically price gouging customers.\n \nreply"
    ],
    "link": "https://whatdinner.com/",
    "first_paragraph": ""
  },
  {
    "title": "The Submerged Nabataean Temple in Puteoli at Pozzuoli, Italy (cambridge.org)",
    "points": 20,
    "submitter": "aguaviva",
    "submit_time": "2024-10-31T20:20:12 1730406012",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=42011078",
    "comments": [
      "You can't pick up a rock in Italy without technically disturbing an ancient ruin of some kind. It's unsurprising that this might be the case right off the coast too. Still amazing to look at when the water is clear in aerial pictures.As an aside, historical preservation was used as a pretext for artificial housing supply restrictions in Europe much earlier than in the US. Eventually US property owners caught on. Now any old 20th century box is revered like a Haussmannian mansion in Paris.\n \nreply",
      "Here in Pisa a decade or so ago the town started building an underground parking almost in front of the train station. The work had to be stopped soon because they found ancient Roman ships beneath the ground, that sank during a storm. After (many) years a museum with these ships opened and the underground parking works could start again, but it took literally years. The museum is small but quite cool tho, but you have to be passionate about it\n \nreply",
      "Despite the enormous popularity of Petra the Nabateans are still a bit of a mysterious corner of the ancient world. This Italian temple sort of binds them to the \"known universe\".It is also an interesting example of so-called political risk: your business fortunes being tied too closely to the whims of a State.> The edification of the sanctuary was possible when the Nabataeans enjoyed the freedom and opportunities offered by the friendship with Rome and the independence of their motherland. In this golden age, from the time of Augustus to that of Trajan (AD 98\u2013117), the Nabataeans accumulated an enormous wealthbut then...> the trade routes were absorbed into a general network controlled by the State, with very little space for the initiatives of a people no longer independent\n \nreply",
      "An underwater Nabataean temple in Italy really shows how deep ancient trade ties ran, until shifting Roman politics changed everything for smaller players like the Nabataeans.\n \nreply",
      "Altar A1, bearing the inscription Dusari sacrum - roughly translating to \"sacred Duscari\" is an epitaph to Dushara. Nabateans worshipped this pre-Islamic deity that is analogous to All-ot.This submerged temple may lend credence to the Aquatic Ape Hypothesis.More on this: https://www.sciencedirect.com/science/article/abs/pii/030698...\n \nreply",
      "See also:https://www.scientificamerican.com/article/underwater-temple...\n \nreply"
    ],
    "link": "https://www.cambridge.org/core/journals/antiquity/article/submerged-nabataean-temple-in-puteoli-at-pozzuoli-italy-first-campaign-of-underwater-research/446AE61E8E3ECBC6CFA7DF6239452967",
    "first_paragraph": "Our systems are now restored following recent technical disruption, and we\u2019re working hard to catch up on publishing. We apologise for the inconvenience caused. Find out more: https://www.cambridge.org/universitypress/about-us/news-and-blogs/cambridge-university-press-publishing-update-following-technical-disruptionWe use cookies to distinguish you from other users and to provide you with a better experience on our websites. Close this message to accept cookies or find out how to manage your cookie settings.\n      Published online by Cambridge University Press:\u00a0\n      12 September 2024In 2023, during the underwater archaeological documentation of the port of Puteoli, a submerged Nabataean temple was located and partially investigated. The authors present the first results of these new research activities, including a reconstruction of part of the building and details of two altars and some inscribed slabs. The Phlaegrean coast near Naples, Italy, has been formed by a series of geologic"
  },
  {
    "title": "Hertz-dev, the first open-source base model for conversational audio (si.inc)",
    "points": 7,
    "submitter": "mnk47",
    "submit_time": "2024-11-03T23:30:48 1730676648",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=42036995",
    "comments": [
      "So it is kind of LLM but audio LLM where prompt is audio and generated output is audio too?\n \nreply",
      "Repo: https://github.com/Standard-Intelligence/hertz-dev\n \nreply"
    ],
    "link": "https://si.inc/hertz-dev/",
    "first_paragraph": ""
  },
  {
    "title": "Missing open-source contributor presents a dilemma when accepting their PR (bettersoftware.uk)",
    "points": 46,
    "submitter": "FrankRay78",
    "submit_time": "2024-11-03T16:58:50 1730653130",
    "num_comments": 36,
    "comments_url": "https://news.ycombinator.com/item?id=42034196",
    "comments": [
      "\"Whenever you add Content to a repository containing notice of a license, you license that Content under the same terms, and you agree that you have the right to license that Content under those terms. If you have a separate agreement to license that Content under different terms, such as a contributor license agreement, that agreement will supersede.\"https://docs.github.com/en/site-policy/github-terms/github-t...\n \nreply",
      "Really good to see Github being pro-active to the benefit of the open source community.\n \nreply",
      "It's a stupid synthesis, though, just like the one from the article:> The repository is MIT-licensed, and clearly advertised as such, so it\u2019s reasonable to expect all contributions are made under that licenseYou don't have to assume anything, given the way pull requests work.  It's not like it's a code snippet extracted from one of their comments on the bugtracker and then subsequently integrated upstream.  They published something: their fork.Look at the repo the pull request is coming from\u2014the one the requestor published.  What is the license they published it under?  Did they just dump a bunch of stuff online that says it's licensed under MIT?  Yup.  So if they have the rights to grant it to you, then you can use it under the MIT license.The only time this doesn't apply is when the contributor deletes their repo.  The pull request turns into a patch merge request.  But the repo doesn't have to remain available indefinitely.  The mere fact that it was published under such-and-such license at some time and was available to you/whoever is sufficient.\n \nreply",
      "\" and I find it hard to see how damages could be levied in this situation.\"Unfortunately, this would be intentional copyright infringement (assuming the code is copyrightable, blah blah blah), since you are doing it on purpose with knowledge that it is copyrighted.In a number of countries, copyright infringement is also strict liability - it doesn't matter if you had any intent to commit it, but if you did, the damages often start much much higher.  So the former case you'd probably have some nominal statutory damages, assuming you can't prove any actual loss.\nBut in the later case, those damages get quite high.In the US, for example, statutory damages for intentional copyright infringement (IE you don't have to prove any actual damage) are 150k per infringement.I make no claims any of this makes sense, or someone will actually sue you, or that you should do anything different than \"nothing\".My only claim is that \"and I find it hard to see how damages could be levied in this situation.\" is totally the wrong view in a lot of countries - you should expect, if it did get to that point, you would have plenty of damages levied against you.The author appears to be in the UK, where statutory damages for infringement were historically not available. but post-brexit, they were actually doing consultation/blah blah blah on making them available. I have no idea what happened.But even if they have no statutory damages, it won't prevent you from being sued wherever the contributor is, and having that law apply rather than your home law :)It just makes it harder to collect.\n \nreply",
      "> In the US, for example, statutory damages for intentional copyright infringement (IE you don't have to prove any actual damage) are 150k per infringement.I was of the possibly wrong impression that statuatory damages require that the work have been registered with the library of congress. Which seems unlikely for a small patch that might not even be copyrightable anyway.\n \nreply",
      "It's also required to file suit anyway, but for that purpose does not have to be done before the infringement (IE you can register after infringement) - see Fourth Estate Public Benefit Corp. v. Wall-Street.com LLC et alYou are somewhat correct on the statutory damages part.You can also register after learning of infringement there, as long as it is within 3 months of publication:\nhttps://www.law.cornell.edu/uscode/text/17/412This is just the statutory damages side. The author is also wrong in the \"no loss\" thing anyway because what courts consider loss is much greater than the average expectation of people :)I also think they severely underestimate the ease with which they can cut off contributory/etc infringement liability claims.They seem to think they just get to remove the code and go about their life, but in practice, it's not that simple.\n \nreply",
      "> The contribution bot asks for confirmation the code change is copyright-freeA confirmation is simply unnecessary. Can't it work like, writing this somewhere that says, by creating a pull request, you agree all your code and the discussions around the pull request is now copyright free? Saves everybody time and avoid hassles like this.The other side of this is I get very annoyed by CLAs -- there have been a number of times I want to contribute to Google and Microsoft's open source projects, but they all require CLAs which require me to get explicit permissions from my employer to contribute to those projects. It is possible, but is a slow and complicated process that nobody wants to go through at my company. So instead of creating a pull request to address the problem, I open an issue and mention how it can be addressed. Which may or may not be picked up by someone else who wants to work on this. This is just frustrating.\n \nreply",
      "The author didn't link to the actual PR so I can't see the full context, but I don't see the point in setting up a bot to make contributors agree to copyright terms if the maintainers just ignore it when someone does a PR and then doesn't engage with the bot. It seems like a waste of time for all parties.\n \nreply",
      "I think it might be this one: https://github.com/spectreconsole/spectre.console/pull/991though, it's dealing with a zero input rather than null\n \nreply",
      "I don't like them and won't contribute to projects with them but isn't this the exact point of a CLA[1]? A textfile in the repo  seems a lot easier to track and audit than PR comments and a bot to chase people.1. https://en.m.wikipedia.org/wiki/Contributor_License_Agreemen...\n \nreply"
    ],
    "link": "https://bettersoftware.uk/2024/11/03/missing-open-source-contributor-presents-a-dilemma-when-accepting-their-contribution/",
    "first_paragraph": "Better Software UKSoftware requirements for agile development teamsI faced the following situation recently as a maintainer of a popular open-source project, and I wondered what to do.SituationA first-time contributor submits a PR to Spectre.Console, a Microsoft .Net Foundation open-source project. It\u2019s a small, but important change to guard against a null input parameter on a public method.The contribution bot asks for confirmation the code change is copyright-free, but the contributor doesn\u2019t respond. The bot proceeded to remind the contributor several times, and I even attempted to make contact through other channels, but the contributor didn\u2019t respond.I wish to merge the contribution, I wish to behave in a legally compliant manner, and I wish to encourage other first-time contributors.QuestionWhat is the \u2018proper\u2019 open source etiquette regarding this PR?Answer\u20184. Merge it anyway\u2019 is probably the right course of action, for the reasons that follow.The repository is MIT-licensed, and "
  },
  {
    "title": "Create block devices on your computer backed by Redstone Memory (github.com/williambl)",
    "points": 148,
    "submitter": "super_linear",
    "submit_time": "2024-10-29T00:16:24 1730160984",
    "num_comments": 32,
    "comments_url": "https://news.ycombinator.com/item?id=41978035",
    "comments": [
      "All fun and games until Enderman starts shitting bad sectors all over the place\n \nreply",
      "Manual error correction in Minecraft the equivalent of going at one's hard drive with a magnetized needle.\n \nreply",
      "Or steal the block that has your bash profile....\n \nreply",
      "Wouldn't be too hard to add some hamming encoding\n \nreply",
      "You're going to need redundancy of some sort. The Enderman can just steal your read (head)block.\n \nreply",
      "Another great Harder Drive to add to the list: https://m.youtube.com/watch?v=JcJSW7RprioTom7 made a similar one in Tetris as part of the above video\n \nreply",
      "I watched that video a few days ago. It was wild. The ping backed memory storage is great .That man baffles me.He spent 16 years running every street in Philadelphia, starting and ending from home.\n \nreply",
      "> The ping backed memory storageIt's worth noting that this is a network reincarnation of the old tried-and-true delay-line memory.https://en.wikipedia.org/wiki/Delay-line_memory\n \nreply",
      "Every day we get closer to my dream of hosting a Minecraft server inside of a Minecraft server.\n \nreply",
      "What\u2019s left here?  I never took operating systems, going direct from EE bachelor to CS master\u2019s, so this post/comment is perfectly at the gap in my education\u2014I understand the metal->transistor->flop memory we see here, and the server->application->Minecraft you\u2019re imagining, what needs to be built from red stone to go from flop memory->server?\n \nreply"
    ],
    "link": "https://github.com/williambl/blockblockdevice",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        \ud83d\udcbe Create block devices on your computer backed by Redstone Memory\n      Block Block Device is a Minecraft mod and NBDKit plugin which work together to allow you to create block devices on\nyour computer which are backed by redstone in a Minecraft world.See the video:Requirements:Firstly, build and install the mod into your Minecraft game. This is the same procedure as any other Fabric mod.\nThe mod requires Minecraft version 1.19.3. If playing multiplayer, the mod must be installed serverside.Start up the game, and enter a world.Next, run NBDKit with the python plugin, like so:$ nbdkit -f -v python ./craftnbd/craftnbd.pyYou can then connect with your NBD client:# nbd-client -d /dev/nbd0On some systems, you may have to run modprobe nbd as root first.You will now have the Block Block device at /dev/nbd0.The mod exposes an HTTP server on"
  },
  {
    "title": "Bill Atkinson doxxed Douglas Adams in 1987 (withoutdistractions.com)",
    "points": 74,
    "submitter": "harryvederci",
    "submit_time": "2024-11-03T21:19:02 1730668742",
    "num_comments": 59,
    "comments_url": "https://news.ycombinator.com/item?id=42036165",
    "comments": [
      "pre internet, your name, address, and phone number would published in the widely distributed telephone book.if you were a big celebrity, you could get an \"unlisted\" number (I think you had to pay for it), but that was relatively rare.you might recall, the opening of the original Terminator film (1984, same time period) hinges on this idea: the robot has a name and a city, he tears that page out of a phone book in a phone booth, and starts visiting the addresses one by one.it's how we all lived (minus the killer robot), and it didn't seem strange at all. Women who lived alone frequently would have just their first initial instead of name, but that was not for fear of \"stalkers\", it was for fear of potential \"heavy breathing\" annoyance calls late at night.\n \nreply",
      "> if you were a big celebrity, you could get an \"unlisted\" number (I think you had to pay for it), but that was relatively rare.Anyone could do it.It almost seems like extortion: \"pay us $$ or we'll publish your name, address and number in a huge book that we'll deliver to everyone in the city!\" I guess you probably agree when you get a phone line hooked up, though.\n \nreply",
      "There was literally no other way to get in contact with anyone, other than ringing their doorbell if you already knew where they lived, or asking around. Getting unlisted was unusual, and for most, would defeat the point of having a phone in the first place.At least where I was from, early 90s, exchanging contacts was not something people did casually either, only for business or love (email/ICQ changed this when they appeared). I had a handful of numbers memorized, but would use the phonebook even for extended family. You\u2019d have their number highlighted or earmarked in the phonebook instead of keeping your own.\n \nreply",
      "My experience was people having little notebooks, made-for-purpose, usually called address books, where you had everyone alphabetical by last name.\n \nreply",
      "Some phones had a slot where you could insert made to fit cards with common numbers.\n \nreply",
      "That reminds me of how things I considered mandatory previously (carrying small notebook + pen). They weren't mandatory, and most people won't do the manual thing. Don't get me wrong, you'd keep important addresses, say, your grandma out of town. And of course, professionally. But by and large,  people just expected you to be in the phone book and vice versa. It also meant calling someone you knew without explicitly being given their number wasn't a faux pas. Now that I think about it, a lot of things were easier. Sigh\n \nreply",
      "> pre internet, your name, address, and phone number would published in the widely distributed telephone bookNot sure where you\u2019re from, but at least in the countries where I\u2019ve lived (Canada and the US) your address was not in the phone book.  It was a book of phone numbers - nothing more.\n \nreply",
      "Anyone could pay to have an unlisted number, it wasn\u2019t crazy expensive in the US at least\n \nreply",
      "My mom worked in corrections and after an incident with one of her coworkers getting attacked at home, we got an unlisted number.I remember as a teen being very irritated that people could no longer find me in the phone book.\n \nreply",
      "You weren't alone. After my parents divorced I lived with mom and she went back to her maiden name.\n \nreply"
    ],
    "link": "https://not.withoutdistractions.com/blog/2024/11/03/bill-atkinson-doxxed-douglas-adams-in-1987",
    "first_paragraph": ""
  },
  {
    "title": "GoGoGrandparent (YC S16) Is Hiring Back End and Full-Stack Engineers",
    "points": 0,
    "submitter": "",
    "submit_time": "2024-11-03T17:02:51 1730653371",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "item?id=42034242",
    "first_paragraph": ""
  },
  {
    "title": "A Week of Failing to Pay with Bitcoin in El Salvador (reason.com)",
    "points": 4,
    "submitter": "fortran77",
    "submit_time": "2024-11-01T04:16:07 1730434567",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "https://reason.com/2024/10/31/a-week-of-failing-to-pay-with-bitcoin-in-el-salvador/",
    "first_paragraph": "\nCentral America\n\n\nKatarina Hall\n\n|\n10.31.2024 11:45 AM\nWhen President Nayib Bukele promised that bitcoin would be accepted everywhere in El Salvador, it seemed like a glimpse into the future\u2014a world where cryptocurrency would be woven into everyday life. But after a week there, I found a different reality. Not a single business accepted my bitcoin.\u00a0In September 2021, El Salvador became the world's first country to adopt bitcoin as legal tender alongside the U.S. dollar. The vision was ambitious: According to Bukele, bitcoin would \"improve the lives and the future of millions,\" making it easier to access financial services where traditional banking is often out of reach.\u00a0To incentivize adoption, the government launched the Chivo wallet app, offering $30 in bitcoin to anyone who signed up. Bitcoin ATMs popped up nationwide and plans were announced for Bitcoin City, a tax-free, bitcoin-powered metropolis fueled by geothermal energy from a volcano. El Salvador was on its way to become a g"
  }
]