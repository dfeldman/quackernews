[
  {
    "title": "Old Soviet Venus descent craft nearing Earth reentry (leonarddavid.com)",
    "points": 261,
    "submitter": "Wingman4l7",
    "submit_time": "2025-05-02T19:02:01 1746212521",
    "num_comments": 107,
    "comments_url": "https://news.ycombinator.com/item?id=43873531",
    "comments": [
      "https://en.wikipedia.org/wiki/Kosmos_482> Its landing module, which weighs 495 kilograms (1,091 lb), is highly likely to reach the surface of Earth in one piece as it was designed to withstand 300 G's of acceleration and 100 atmospheres of pressure.Awesome! I don't know how you can design for 300 G's of acceleration!\n \nreply",
      "Overbuild everything. For things that might be fragile-ish like surface mounted electronics, cast the whole thing in resin. As a sibling poster has mentioned, we shoot things out of artillery tubes these days that have way harsher accelerations than 300g.\n \nreply",
      "There are electronics and gyroscopes designed for >9,000 G loads, in guided artillery shells.Aerospace is awesome.\n \nreply",
      "Nitpicking, but wouldn't it be 300 Gs of deceleration? I know the math is basically the same, but technically the words a mean different things\n \nreply",
      "I think this is a case where \u201ctechnically\u201d the words mean the same thing but \u201cgenerally\u201d they mean different things.\n \nreply",
      "This is wrong when talking about the physics of something.  Deceleration is acceleration. Acceleration is just a change in velocity.\n \nreply",
      "Acceleration, deceleration, point is: Something is going to apply 300 gs in a certain direction to design for.It's not like you can tell whether you're going slow or fast, in one direction, the other direction, or even just standing still, if you close your eyes.\n \nreply",
      "Sure you can. You just need a luminiferous aether detector.\n \nreply",
      "Acceleration is a vector. So if you apply the \u201cdeceleration\u201d long enough you\u2019ll eventually be accelerating in the opposite direction. Without a frame of reference it\u2019s all the same. Even with a frame of reference you\u2019re still accelerating just that it\u2019s in he opposite direction of the current velocity.\n \nreply",
      "I fly through trams in completely different directions depending on whether it accelerates or decelerates. So for sure a system's design must consider more than just the magnitude of acceleration.\n \nreply"
    ],
    "link": "https://www.leonarddavid.com/old-soviet-venus-descent-craft-nearing-earth-reentry/",
    "first_paragraph": "Image credit: Ralf VandeberghThat soon-to-reenter Cosmos 482 is getting increased attention by satellite trackers \u2013 and new imagery provides some interesting details.The former Soviet Union\u2019s Cosmos 482 was lofted back in 1972. But that country\u2019s attempted Venus probe ran amuck during its rocket-assisted toss to the cloud-veiled world. Payload leftovers were marooned in Earth orbit, specifically the spacecraft\u2019s lander module/capsule intended to parachute onto the hellish landscape of Venus.Venera 8 was one of a pair of Venus atmospheric lander probes designed for the spring 1972 launch window. The other mission, Cosmos 482, failed to leave Earth orbit.Image credit: Hall of Venus/NPO LavochkinUncertain factors\u201cAs this is a lander that was designed to survive passage through the Venus atmosphere, it is possible that it will survive reentry through the Earth atmosphere intact, and impact intact,\u201d reports Marco Langbroek of SatTrackCam Leiden, the Netherlands.\u201cThere are many uncertain fac"
  },
  {
    "title": "Show HN: I built a synthesizer based on 3D physics (anukari.com)",
    "points": 284,
    "submitter": "humbledrone",
    "submit_time": "2025-05-02T18:12:15 1746209535",
    "num_comments": 74,
    "comments_url": "https://news.ycombinator.com/item?id=43873074",
    "comments": [
      "Love physics based audio! Using the GPU is a great idea.Another physical audio simulation I like is the engine sound simulator made by AngeTheGreat: https://youtu.be/RKT-sKtR970?si=t193nZwh-jaSctQM\n \nreply",
      "His stuff is so incredibly cool. He has a video on physical modeling for trumpets using the GPU and for a second I thought he might be building a competitor!  :)\n \nreply",
      "I\u2019m very curious about your experience doing audio on the GPU. What kind of worst-case latency are you able to get? Does it tend to be pretty deterministic or do you need to keep a lot of headroom for occasional latency spikes? Is the latency substantially different between integrated vs discrete GPUs?\n \nreply",
      "Note they are referring to Mick Gordon who is notable for the recent DOOM soundtrack. DOOM Eternal has a truly phenomenal score. Mick Cormick is a mistake I believe.Congratulations!!\n \nreply",
      "Oh goodness, that's truly embarrassing that I typoed \"Mick Cormick\" instead of Mick Gordon.  O_o  I wonder if my brain somehow crossed wires with John Carmack. Thanks for the correction!\n \nreply",
      "McCormick is a popular brand of seasonings hahahahttps://i5.walmartimages.com/seo/McCormick-Pure-Ground-Black...\n \nreply",
      "This reminds me of the reverse, where music drives 3D animations. I remember Animusic from the early decade of 2000.https://en.wikipedia.org/wiki/Animusic , https://www.animusic.com/ , https://www.youtube.com/results?search_query=animusic , https://www.youtube.com/@julianlachniet9036/videos\n \nreply",
      "I'm a huge fan of Animusic. I remember seeing it for the first time in some big fancy mall in LA and they had it projected on a wall, and I was blown away. It was absolutely an inspiration! Animusic -type ideas are a big part of why I made the 3D graphics fully user-customizable, for anyone who wants to go deep down that rabbit hole.\n \nreply",
      "I have the first two Animusic reels (vhs and dvd) and thought they were great. Unfortunately, the creator scammed people by taking money for Animusic 3 and then not making anything.Most of them are on youtube.\n \nreply",
      "Really cool to see GPUs applied to sound synthesis. Didn\u2019t realize that all one needed to do to keep up with the audio thread was to batch computations at the size of the audio thread. I\u2019m fascinated by the idea of doing the same kind of thing for continua in the manner of Stefan Bilbao: https://www.amazon.com/Numerical-Sound-Synthesis-Difference-...Although I wonder if mathematically it\u2019s the same thing \u2026\n \nreply"
    ],
    "link": "https://anukari.com",
    "first_paragraph": ""
  },
  {
    "title": "GitDroid: A third party Android app manager for apps uploaded to GitHub releases (github.com/technicjelle)",
    "points": 30,
    "submitter": "amadeuspagel",
    "submit_time": "2025-05-02T23:10:03 1746227403",
    "num_comments": 9,
    "comments_url": "https://news.ycombinator.com/item?id=43875416",
    "comments": [
      "Unobtanium supports more sources, has more features, and is actively developed.https://obtainium.imranr.dev/https://github.com/ImranR98/Obtainium\n \nreply",
      "I'd suggest Unobtanium. This doesn't look actively maintained.\n \nreply",
      "sorry, I don't use android, but how is this different from unobtainium?\n \nreply",
      "Unobtainium is horrible unreliable and clunky software. It's way worse than AUR and that's an under statement.\n \nreply",
      "Unobtanium supports more sources, for one.\n \nreply",
      "Hasn't been updated for 2 years. Is it feature-complete?\n \nreply",
      "F-Droid\n \nreply",
      "F-Droid requires a compatible repository; it doesn't work with GitHub releases.\n \nreply",
      "should have used gitlab\n \nreply"
    ],
    "link": "https://github.com/TechnicJelle/GitDroid",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A third party Android app manager for apps uploaded to GitHub releases\n      An app store for apps uploaded to GitHub releases\n        A third party Android app manager for apps uploaded to GitHub releases\n      "
  },
  {
    "title": "Achieving Human Level Competitive Robot Table Tennis (sites.google.com)",
    "points": 41,
    "submitter": "badmonster",
    "submit_time": "2025-05-01T18:03:33 1746122613",
    "num_comments": 8,
    "comments_url": "https://news.ycombinator.com/item?id=43861207",
    "comments": [
      "> that reaches amateur human-level performance in competitive table tennisHow are we defining amateur here? The presented video shows the human intentionally volleying with the robot, barely putting any force at all behind the returns. But it says the robot won 55% of matches against intermediate players? That requires being able to return much harder shots than shown.\n \nreply",
      "They note that the robot achieved an \"intermediate\" skill level. This has been determined by letting it play matches against people of different skill levels as determined by a professional table tennis coach. The \"Results\" section explains this.\n \nreply",
      "Google had a very competitive employee ping pong league and one of the coaches was on the USA Olympic team, I doubt they would lie about ping pong skills\n \nreply",
      "But they don't explain what metrics they use to differentiate skill level other than waving the hands of a puppet coach. The arm control is great but they don't show it returning non-softballs. Is that what \"intermediate\" means?\n \nreply",
      "Probably, if you consider that a beginner can rarely volley at all. At an intermediate level, a fast return pretty much just wins the point, when it doesn't hit the net or miss the table.\n \nreply",
      "Submitted on 7 Aug 2024https://arxiv.org/abs/2408.03906\n \nreply",
      "Until the robot is standing on its own two legs like a human I feel like it doesn't count. Sliding along a rail isn't comparible\n \nreply",
      "It counts a lot for me. There's enough examples of humans playing table tennis; I'm very intrigued about how the same problem can be solved by alternate means.\n \nreply"
    ],
    "link": "https://sites.google.com/view/competitive-robot-table-tennis/home?pli=1",
    "first_paragraph": "David B. D'Ambrosio\u00b9*, Saminda Abeyruwan\u00b9*, Laura Graesser\u00b9*, Atil Iscen\u00b9, Heni Ben Amor\u00b2, Alex Bewley\u00b2, Barney J. Reed\u00b2^, Krista Reymann\u00b2, Leila Takayama\u00b2+, Yuval Tassa\u00b2, Krzysztof Choromanski, Erwin Coumans, Deepali Jain, Navdeep Jaitly, Natasha Jaques, Satoshi Kataoka, Yuheng Kuang, Nevena Lazic, Reza Mahjourian, Sherry Moore, Kenneth Oslund, Anish Shankar, Vikas Sindhwani, Vincent Vanhoucke,Grace Vesom, Peng Xu, and Pannag R. Sanketi\u00b9Google DeepMind*: Corresponding authors (equal contribution, order randomized), \u00b9: Primary contributors, \u00b2: Core contributors (alphabetized)^: work done at Google DeepMind via Stickman Studios LLC, +: work done at Google DeepMind via Hoku LabsPaper |\u00a0 Highlights | Full Length Match VideosAchieving human-level speed and performance on real world tasks is a north star for the robotics research community. This work takes a step towards that goal and presents the first learned robot agent that reaches amateur human-level performance in competitive table te"
  },
  {
    "title": "Derivation and Intuition behind Poisson distribution (antaripasaha.notion.site)",
    "points": 48,
    "submitter": "sebg",
    "submit_time": "2025-05-01T21:11:04 1746133864",
    "num_comments": 6,
    "comments_url": "https://news.ycombinator.com/item?id=43863414",
    "comments": [
      "I really like the Poisson Distribution. A very interesting question I've come across once is:A given event happens at a rate of every 10 minutes on average. We can see that:- The expected length of the interval between events is 10 minutes.- At a random moment in time the expected wait until the next event is 10 minutes.- At the same moment, the expected time passed since the last event is also 10 minutes.But then we would expect the interval between two consecutive events to be 10+10 = 20 minutes long. But we know intervals are 10 on average. What happened here?The key is that by picking a random moment in time, you're more likely to fall into a bigger intervals. By sampling a random point in time the average interval you fall into really is 20 minutes long, but by sampling a random interval it is 10.Apparently this is called the Waiting Time Paradox.\n \nreply",
      "> What happened here?You went astray when you declared the expected wait and expected passed.Draw a number line. Mark it at intervals of 10. Uniformly randomly select a point on that line. The expected average wait and passed (ie forward and reverse directions) are both 5, not 10. The range is 0 to 10.When you randomize the event occurrences but maintain the interval as an average you change the range maximum and the overall distribution across the range but not the expected average values.\n \nreply",
      "Poisson distributions are sort of like the normal distribution for queuing theory for two main reasons:1. They're often a pretty good approximation for how web requests (or whatever task your queuing system deals with) arrive into your system, as long as your traffic is predominantly driven by many users who each act independently. (If your traffic is mostly coming from a bot scraping your site that sends exactly N requests per second, or holds exactly K connections open at a time, the Poisson distribution won't hold.) Sort of like how the normal distribution shows up any time you sum up enough random variables (central limit theorem), the Poisson arrival process shows up whenever you superimpose enough uncorrelated arrival processes together: https://en.wikipedia.org/wiki/Palm%E2%80%93Khintchine_theore...2. They make the math tractable -- you can come up with closed-form solutions for e.g. the probability distribution of the number of users in the system, the average waiting time, average number of users queuing, etc: https://en.wikipedia.org/wiki/M/M/c_queue#Stationary_analysi... https://en.wikipedia.org/wiki/Erlang_(unit)#Erlang_B_formula\n \nreply",
      "Poisson, Pareto/power/zipf and normal distributions are really important. The top 3 for me. (What am I missing?)   And often misused (most often normal). It\u2019s really good to know which to use when\n \nreply",
      "Lightbulbs burn out, but when?\n \nreply",
      "What\u2019s special about this treatment? It\u2019s the 101 part of a 101 probability course.\n \nreply"
    ],
    "link": "https://antaripasaha.notion.site/Derivation-and-Intuition-behind-Poisson-distribution-1255314a56398062bf9dd9049fb1c396",
    "first_paragraph": ""
  },
  {
    "title": "Normalizing Ratings (hopefullyintersting.blogspot.com)",
    "points": 39,
    "submitter": "Symmetry",
    "submit_time": "2025-05-02T00:39:45 1746146385",
    "num_comments": 38,
    "comments_url": "https://news.ycombinator.com/item?id=43864986",
    "comments": [
      "Similarly - one of my biggest complaints about almost every rating system in production is how just absolutely lazy they are.  And by that, I mean everyone seems to think \"the object's collective rating is an average of all the individual ratings\" is good enough.  It's not.Take any given Yelp / Google / Amazon page and you'll see some distribution like this:User 1:  \"5 stars.  Everything was great!\"User 2:  \"5 stars.  I'd go here again!\"User 3:  \"1 star.  The food was delicious but the waiter was so rude!!!one11!!  They forgot it was my cousin's sister's mother's birthday and they didn't kiss my hand when I sat down!!  I love the food here but they need to fire that one waiter!!\"Yelp:  3.6 stars average rating.One thing I always liked about FourSquare was that they did NOT use this lazy method.  Their score was actually intelligent - it checked things like how often someone would return, how much time they spent there, etc. and weighted a review accordingly.\n \nreply",
      "I buy a lot of \"technical things\", and you constantly see one or two star ratings from people who either don't know what the thing is actually supposed to do, or don't know how to use it.My favorites: A power supply got one star for not simultaneously delivering the selected limit voltage and the selected limit current into the person's random load. In other words, literally for not violating the laws of physics. An eccentric-cone flare tool got one star for the cone being off center. \"Eccentric\" is in the name, chum....\n \nreply",
      "Or worse, a 1 star rating for a product they loved but there was a problem with delivery.\n \nreply",
      "I take this not as people being dumb, but as a clear conflict of interest: people want to be able to rate the logistics provider separately from the product, but marketplaces don't want to give people the option to do that \u2014 as that would reveal that the marketplace will sometimes decide to use \"the known-shitty provider\" for some orders. (And make no mistake, the marketplace knows that that provider is awful!)\n \nreply",
      "Totally. I\u2019ve noticed lots of sites moving away from comments on reviews too. For example, Amazon reviews on mobile can be \u201chelpful\u201d or I can report them.Why can\u2019t I downvote or comment on it? As a user, I just want more context.But obviously, it\u2019s not in Amazon\u2019s interest to make me not want to buy something.\n \nreply",
      ">  for not violating the laws of physics.I would personally frame that as a review for poor documentation. A device shouldn't expect users to know laws of physics to understand it's limitations.\n \nreply",
      "If you don't know that particular law of physics, you have no business messing with electricity. You'll very likely damage something, and quite possibly damage someone.We're talking about a general-purpose device meant to drive a circuit you create yourself. I'm not sure what a good analogy would be. Expecting the documentation for a saw to tell you you have to cut all four table legs the same length?\n \nreply",
      "This feels like a stretch, all the more so given they were specifically talking about \"technical things\". Assumptions around documentation, reading of docs and widespread physics knowledge seem like they could all be different here.\n \nreply",
      "I think that numeric ratings (especially if only one number can be specified) (and then averaging or making or other types of statistics) are not as useful as actually reading the reviews in order to determine whether or not it addresses your concerns with it, and if they have specific complaints or specific things they say are good, to judge them by yourself according to your own intentions.\n \nreply",
      "-1 stars! They forgot it was my cousin's sister's mother's birthday, and the obnoxious waiter snarkily pointed out that my cousin's sister is just another cousin, and her mother is just my aunt.\n \nreply"
    ],
    "link": "http://hopefullyintersting.blogspot.com/2025/05/normalizing-ratings.html",
    "first_paragraph": "\n\u00a0What rating should you give the driver who just dropped you at your door via Uber or Lyft.\u00a0 Well, unless they messed up in some noticeable way you give them a 5 out of 5 rating unless they messed up somehow.\u00a0 That means you give the same rating to a driver who was just passable as to a driver who was outstanding, but you don't want to unfairly sink the career of the passable driver when everybody knows a 4 star rating is terrible.In Japan things are different.\u00a0 3 stars is considered normal so you can give that for a normal ride, and then you can give 4 or 5 stars for an exceptionally good driver.\u00a0 And then you have Eastern Europeans who are reputed to tend to give low ratings except when service is unusually good.Normally this doesn't matter too much unless you're an American Uber driver who happens to get a Japanese rider who sinks your rating with a 3, but it can have worse consequences.\u00a0 Until a GPT large language model stopped speaking Croatian because it always got a low rating "
  },
  {
    "title": "Show HN: GPT-2 implemented using graphics shaders (github.com/nathan-barry)",
    "points": 161,
    "submitter": "nathan-barry",
    "submit_time": "2025-05-02T15:21:49 1746199309",
    "num_comments": 22,
    "comments_url": "https://news.ycombinator.com/item?id=43870998",
    "comments": [
      "As the guy who did GPT2 in Excel, very cool and kudos!!Curious why you chose WebGL over WebGPU? Just to show it can be done?(Also see my other comment about fetching weights from huggingface)\n \nreply",
      "This was a final project for a graphics class where we used WebGL a lot. Also I was just more familiar with OpenGL and haven't looked that much into webGPU\n \nreply",
      "Someone needs to implement Excel using graphics shaders now.\n \nreply",
      "Probably because WebGPU support is still rather iffy.\n \nreply",
      "ianand, I immediately thought of you when I saw this post. Miss you friend.\n \nreply",
      "> Curious why you chose WebGL over WebGPU? Just to show it can be done?For a WebGPU implementation, one can use transformers.js directly (or many other libraries actually), maybe WebGL is more original.[1]: https://huggingface.co/docs/transformers.js/index\n \nreply",
      "Transformers.js wraps the ONNX runtime which is rather versatile (WASM, WebGL, WebGPU, and WebNN). It's not the backend that makes it novel.\n \nreply",
      "I'm reminded of this VRChat world, which runs Qwen2-0.5B in a shader: https://vrchat.com/home/launch?worldId=wrld_e919c1f4-8399-43...\n \nreply",
      "Would absolutely read a 'making of' post on this project!\n \nreply",
      "Would be really cool to have it hosted on a website if it can be a static page so we could try it out\n \nreply"
    ],
    "link": "https://github.com/nathan-barry/gpt2-webgl",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        A browser-based, WebGL2 implementation of GPT-2 with transform block and attention matrix visualization\n      A browser-based, WebGL2 implementation of GPT-2.We rely on HuggingFace\u2019s transformers to pull down the official GPT-2 weights and emit raw Float32Array blobs:We use Vite to bundle TS, serve ESM modules & handle js-tiktoken:Any changes under src/ will trigger HMR and live-reload.MIT\n        A browser-based, WebGL2 implementation of GPT-2 with transform block and attention matrix visualization\n      "
  },
  {
    "title": "Driverless semis have started running regular longhaul routes (cnn.com)",
    "points": 90,
    "submitter": "harambae",
    "submit_time": "2025-05-02T18:02:51 1746208971",
    "num_comments": 152,
    "comments_url": "https://news.ycombinator.com/item?id=43872990",
    "comments": [
      "There's also a trial of \"platooning\" of driverless trucks on I-70 in Ohio and Indiana: https://www.forbes.com/sites/richardbishop1/2025/04/24/ease-...A \"drivered\" lead truck is leading one or more driverless trucks in this case.I drive the stretch of highway these trucks are on fairly regularly. I don't know that I've seen a group of them yet but I'm keeping my eye out.I'm probably just showing my age, but I like the idea of a \"drivered\" truck leading driverless trucks versus a completely autonomous system. It's similar to my attitude on crewed spaceflight-- I like the idea of the ingenuity and capacity for independent thought supervising an automated systems, versus autonomous automated systems.\n \nreply",
      "next level would be to hook these \"platoons\" together physically and then centralize the propulsion in a super efficient package.  And then we could move them off the highways and onto specialized \"tracks\" that guarantee they don't deviate from the planned routes.speculative, alien technology, admittedly, but some day our scientists will figure it out i bet!\n \nreply",
      "The problem with railroad is exactly the other side of this: that you can't trivially and automatically detach a single car at any point. I know businesses that literally have an old railroad branch line right up to their door, but they can't actually order anything meaningful via rail.The existing rail system has at least the following constraints:* Uses steel-on-steel friction, rather than rubber-on-rock. Cars that can do both exist but are rare.* Can only travel on the specially-prepared rails, not installed at the last-mile, related to the next point.* Poor cornering and elevation changing.* Difficulty in changing speeds (over a thousand meters and over a minute, compare to about a hundred meters and less than ten seconds for road vehicles)* Very limited lanes, usually no passing. Track reservations will be voided if you aren't exactly on schedule.* Almost all of the \"intelligence\" (both computer and human) is at one or both ends; the cars in the middle are all \"dumb\".Which of these can reasonably be changed?\n \nreply",
      "My previous company, Parallel Systems is working on this. The solution looks a lot like trucks on rail: individual locomotion, so you get the flexibility of trucking, but the energy efficiency and automation ease of rail. With modern braking, you can stop a Parallel vehicle about as fast as a truck. There's a ton of rail that's underutilized, particularly in Metro areas, so you almost get a fresh highway for free. Vehicles can platoon or separate at will.\n \nreply",
      "They can all be changed, but then the capital costs for rail infrastructure would balloon and diminish the 3-5x cost advantage rail has over trucking. The modern rail business is structured (physically and, especially, financially) to squeeze every last cent out of existing infrastructure with minimal investment. I doubt that will change significantly anytime soon. The public road infrastructure subsidizes trucking (even after factoring in use and fuel taxes), and perhaps more importantly trucking companies don't have to contend with legal hurdles like land acquisition--the government handles that. (Land acquisition delays have been the biggest barrier for CAHSR.)\n \nreply",
      ">The problem with railroad is exactly the other side of this: that you can't trivially and automatically detach a single car at any point. I know businesses that literally have an old railroad branch line right up to their door, but they can't actually order anything meaningful via rail.Because companies have invested in JIT because low cost of trucking, an industry which is heavily subsidized (https://www.cbo.gov/publication/50049), allows it.If trucking costs reflected their true cost, railroad would look a ton more attractive along with not doing JIT.\n \nreply",
      "The bigger issue is that roads are immensely subsidised compared to rail. Even on private roads that are completely covered by usage charges, trucks pay maybe a factor of 2-10 more than cars, however they cause about 40000 times more wear (let's even disregard how they also cause disproportionately more traffic...). Obviously this calculation becomes even worse if we consider that most roads are subsidised by all tax payers. Trucks would be much less profitable (especially for long haul traffic) if they would have to cover their actual cost to society. But they are just another example of privatising profits and socialising the costs.\n \nreply",
      "Problem is those railroad cars usually don't share origin and destination. And spending a day or two on the switchyard for every couple of hours of actual travel isn't what customers want.The beaty of platooning is that trucks can join and leave while traveling at speed, all they need is a free lane on the side.And if you really want to tease out all the efficiencies of rail, without suffering the drawbacks, you make electrified lanes that also have embedded tracks (like those of a tramway, but designed for higher load) and make the trucks multimodals that can switch while moving. Actually just those trucks that would see an economic advantage, trucks designed for light, high volume loads would likely stick to road wheels only.A setup like this could actually be super economical compared to two because a rail network needs huge separation between trains because rails are terrible for braking fast. Multimodals on the other hand could be designed to be able to switch to their road wheels in an emergency. And a rail network needs an ungodly amount of nines in terms of reliability and rarity of maintenance, because there is no plan B network. Reliability nines are expensive. Multimodals on the other hand could easily be diverted to a dirt road for a bit when the main lanes are defective or going through maintenance. Where they would be running on the same batteries they carry anyways, for the last couple of miles on regular, non-electrified roads.\n \nreply",
      "switchyardWhy not just use container cranes like docks? There's no reason they won't work inland.\n \nreply",
      "And indeed they exist every 200 miles or so.\n \nreply"
    ],
    "link": "https://www.cnn.com/2025/05/01/business/first-driverless-semis-started-regular-routes",
    "first_paragraph": "Markets \n\n\nHot Stocks \n\n\nFear & Greed Index \n\n\n\n            Latest Market News \n\n\n\n            Hot Stocks \n\n\nFollow:\n            Driverless trucks are officially running their first regular long-haul routes, making roundtrips between Dallas and Houston.\n    \n            On Thursday, autonomous trucking firm Aurora announced it launched commercial service in Texas under its first customers, Uber Freight and Hirschbach Motor Lines, which delivers time- and temperature-sensitive freight. Both companies conducted test runs with Aurora, including safety drivers to monitor the self-driving technology dubbed \u201a\u00c4\u00faAurora Driver.\u201a\u00c4\u00f9  Aurora\u201a\u00c4\u00f4s new commercial service will no longer have safety drivers.\n    \nRelated article\nDriverless rides on Uber now challenging Elon Musk\u201a\u00c4\u00f4s Tesla in its backyard\n\n            \u201a\u00c4\u00faWe founded Aurora to deliver the benefits of self-driving technology safely, quickly, and broadly, said Chris Urmson, CEO and co-founder of Aurora, in a release on Thursday. \u201a\u00c4\u00faNow, we "
  },
  {
    "title": "Strings Just Got Faster (inside.java)",
    "points": 131,
    "submitter": "Tomte",
    "submit_time": "2025-05-01T06:33:45 1746081225",
    "num_comments": 65,
    "comments_url": "https://news.ycombinator.com/item?id=43854337",
    "comments": [
      "I find the entire history of improvements to Java\u2019s String class enjoyable to read about.Over the years, the implementation of Java\u2019s String class has been improved again and again, offering performance improvements and memory usage reduction. And us Java developers get these improvements with no work required other than updating the JRE we use.All the low-hanging fruit was taken years ago, of course. These days, I\u2019m sure most Java apps would barely get any noticeable improvement from further String improvements, such as the one in the article we\u2019re discussing.\n \nreply",
      "When I started my career in software development, SDE, and soon advanced to SRE, I hated Java. The extreme OOP paradigm made enterprise class situations impossible to understand. But after a few short years, I began to appreciate it as a real, battle hardened ecology. Now, I consider it much better than modern trends such as Rust and Python.These kinds of niche optimizations are still significant. The OOP model allows them to be implemented with much less fanfare. This is in the context of billion-dollar platforms. With some basic performance testing and API replays, we're saving thousands of dollars a day. Nobody gets a pat on the back. Maybe some pizza on Friday.\n \nreply",
      "I love hearing more about this, especially the historical context, but don't have a good java writeups/articles on this. Would you mind sharing some suggestions/pointers? I'd very much appreciate it.\n \nreply",
      "A good starting point is Joshua Bloch\u2019s Effective Java. He shares some stories there from Java\u2019s early days, and - at least in passing - mentions some aspects of the String class\u2019s history.\n \nreply",
      "Ah, I certainly remember these anecdotes! What other resources would you recommend(even the tidbits) could there be for more modern Java? The original article like this one should be treasured.\n \nreply",
      ">  Would you mind sharing some suggestions/pointers?I would, but unfortunately I got a NullPointerException.I suggest you try Rust instead; its borrow checker will ensure you can't share pointers in an unsafe manner.\n \nreply",
      "This post makes mention of a new JEP I hadn't heard of before: \"Stable Values\"https://openjdk.org/jeps/502https://cr.openjdk.org/~pminborg/stable-values2/api/java.bas...I don't understand the functional difference between the suggested StableValue and Records, or Value Classes.They define a StableValue as:  > \"A stable value is a holder of contents that can be set at most once.\"\n\nRecords were defined as:  > \"...  classes that act as transparent carriers for immutable data. Records can be thought of as nominal tuples.\"\n\nAnd Value Objects/Classes as:  > \"... value objects, class instances that have only final fields and lack object identity.\"\n\nBoth Records and Value Objects are immutable, and hence can only have their contents set upon creation or static initalization.\n \nreply",
      "I don't know, these are mostly uninformed guesses, but the distinction between Records and Value objects is that the contents lack object identity.Which, to me, means, potentially, two things.One, that the JVM can de-dup \"anything\", like, in theory, it can with Strings now. VOs that are equal are the same, rather than relying on object identity.But, also, two, it can copy the contents of the VO to consolidate them into a single unit.Typically, Java Objects and records are blobs of pointers. Each field pointing to something else.With Value Objects that may not be the case. Instead of acting as a collection of pointers, a VO with VOs in it may more be like a C struct containing structs itself -- a single, continuous block of memory.So, an Object is a collection of pointers. A Record is a collection of immutable pointers. A Value Object is (may be) a cohesive, contiguous block of memory to represent its contents.\n \nreply",
      "Handwavy explanation: A stable value is used as a static constant, with the difference being that you can initialize it at runtime. Once initialized it is treated as fully constant by the JVM. It's similar to something like lateinit in Kotlin, except on the JVM level.Records are also immutable, but you can create them and delete them throughout your application like you would a regular class.\n \nreply",
      "> used as a static constantYes, but remind people it's not static in the sense of being associated with the class, nor constant for compile-time purposes.Perhaps better to say: A stable value is lazy, set on first use, resulting in pre- and post- initialization states.  The data being set once means you cannot observe a data change (i.e., appears to be immutable), but you could observe reduction in resource utilization when comparing instances with pre-set or un-set values -- less memory or time or other side-effects of value initialization.So even if data-immutable, a class with a stable value ends up with behavior combinations of two states for each stable value.  Immutable records or classes without stable values have no such behavior changes.But, writ large, we've always had this with the JVM's hotspot optimizations.For String, it becomes significant whether hashcode is used when calculating equals (as a fast path to negative result).  If not, one would have two equal instances that will behave differently (though producing the same data), at least for one hashcode-dependent operation.\n \nreply"
    ],
    "link": "https://inside.java/2025/05/01/strings-just-got-faster/",
    "first_paragraph": "News and views from members of the Java team at OracleIn JDK 25, we improved the performance of the class String in such a way that the String::hashCode function is mostly constant foldable. For example, if you use Strings as keys in a static unmodifiable Map, you will likely see significant performance improvements.Here is a relatively advanced example where we maintain an immutable Map of native calls, its keys are the name of the method call and the values are a MethodHandle that can be used to invoke the associated system call:The method linker.downcallHandle(\u2026) takes a symbol and additional parameters to bind a native call to a Java MethodHandle via the Foreign Function & Memory API introduced in JDK 22. This is a relatively slow process and involves spinning bytecode. However, once entered into the Map, the new performance improvements in the String class alone allow constant folding of both the key lookups and the values, thus improving performance by a factor of more than 8x:No"
  },
  {
    "title": "Building Burstables: CPU slicing with cgroups (ubicloud.com)",
    "points": 88,
    "submitter": "msarnowicz",
    "submit_time": "2025-05-02T16:45:29 1746204329",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=43872094",
    "comments": [
      "I'd also strongly recommend this view of how Kubernetes uses cgroups, showing similar drill downs for how everything gets managed. Lovely view of what's really happening! https://martinheinz.dev/blog/91I've been a bit apoplectic in the past that cgroups seemed not super helpful in Kubernetes, but this really showed me how the different Kubernetes QoS levels are driven by similar juggling of different cgroups.I'm not sure if this makes use of cpu.max.burst or not. There's a fun article that monkeys with these cgroups directly, which is neat to see. It also links to an ask that Kubernetes get support for the new (5.14) CFS Burst system. Which is a whole nother fun rabbit hole of fair share bursting to go down! https://medium.com/@christian.cadieux/kubernetes-throttling-... https://github.com/kubernetes/kubernetes/issues/104516\n \nreply",
      "Reading through the description of how cgroups are used in Kubernetes, I can see some similarities and some differences as well. It is interesting to compare the approaches.We chose not to use cpu.weight, and instead divide the host explicitly using cgroups (slice in systemd). We put Standard VMs in dedicated slices to keep them isolated and let several Burstable VMs share a slice. This provides a trade off between the price of the VM and resource guarantees.We use cpu.max.burst to allow the VMs to \"expand\" a bit, while we understand that this creates a \"noisy neighbor\" problem. At the same time there is a minimum guarantee of the CPU. \nThe cgroups allow for all those knobs and give a lot of control. Combining them in various ways is an interesting puzzle.\n \nreply",
      "cpu.max.burst increases the chances of noisy neighbours stealing CPU from other tenants.I run multi-tenant k8s clusters with hundreds of tenants and it fundamentally is a hard problem to balance workload performance with efficiency. Sharing resources increases efficiency but in most cases increases tail latencies.\n \nreply",
      "I suspect you can only really count on neighbors to take care of their own. Anything else they see will be taken as an entitlement.So for instance if you run three processes for the same customer, can you set them to use the same cpu slices and deal with one of their apps occasionally needing a burst of CPU?\n \nreply",
      "Sure in theory you could do that, but kubernetes does not support overriding the top level cgroup a pod is assigned to.\n \nreply",
      "If you use k8s qos levels \"guaranteed\" cpu resources will be distinct \u2014 via cpu sets \u2014 from the ones used by the riff-raff. This is a good way to segregate latency-sensitive apps where you care about latency from throughtput-oriented stuff where you don't.\n \nreply",
      "Guaranteed QoS isn\u2019t perfect:1. Neighbours can be noisy to the other hyperthread on the same CPU. For example, heavy usage of avx-512 and other vectorized instructions can affect a tenant running on the same core but different hyperthread. You can disable hyperthreading, but now you are making the same tradeoff where you are sacrificing efficiency for low tail latencies.2. There are certain locks in the kernel which can be exhausted by certain behaviour of a single tenant. For example, on kernel 5.15 there was one global kernel lock for cgroup resource accounting. If you have a tenant which is constantly hitting cgroup limits it increases lock contention in the kernel which slows down other tenants on the system which also use the same locks. This particular issue with cgroups accounting has been improved in later kernels.3. If your latency sensitive service runs on the same cores which service IRQs, the tail latency can greatly increase when there are heavy IRQ load, for example high speed NIC IRQs. You can isolate those CPUs from the pool of CPUs offered to pods, but now you are dedicating 4-8 CPUs to just process interrupts. Ideally you could run the non-guaranteed pods on the CPUs which service IRQs, but that is not supported by kubernetes.4. During full node memory pressure, the kernel does not respect memory.min and will reclaim pages of guaranteed QoS workloads.5. The current implementation of memory QoS does not adjust memory.max of the burstable pod slice, so bursable pods can take up the entire free memory of the kubepods slice which starves new memory allocations from guaranteed pods.Dont even get me started on NUMA issues.\n \nreply",
      "There isn't any way on Linux to deal with processes that create dirty pages. It is folly to try. The only way to deal is to put I/O stuff on a whole box/node by itself, and outlaw block I/O on all other nodes.\n \nreply",
      "Thank you, that is a good perspective, too!\n \nreply",
      "Hey, author here. Please AMA.I came into the Linux world via Postgres, and this was an interesting project for me learning more about Linux internals. \nWhile cgroups v2 do offer basic support for CPU bursting, the bursts are short-lived, and credits don\u2019t persist beyond sub-second intervals. If you\u2019ve run into scenarios where more adaptive or sustained bursting would help, we\u2019d love to hear about them. Knowing your use cases will help shape what we build next.\n \nreply"
    ],
    "link": "https://www.ubicloud.com/blog/building-burstables-cpu-slicing-with-cgroups",
    "first_paragraph": ""
  },
  {
    "title": "The History of Album Art (matthewstrom.com)",
    "points": 72,
    "submitter": "tobr",
    "submit_time": "2025-05-02T17:30:08 1746207008",
    "num_comments": 12,
    "comments_url": "https://news.ycombinator.com/item?id=43872625",
    "comments": [
      "Friend of mine is a retired, high-level music exec.He has a story about the cover art for Their Greatest Hits (Eagles)[0].The bird skull is sitting in what looks like \"snow.\"Apparently, that's what it was. After the shoot, they snorted it all.[0] https://cdn.shopify.com/s/files/1/0566/5105/5295/files/eagle...\n \nreply",
      "Honourable mentions to Barbara Wojirsch, creator of the house style of the ECM Scandi jazz label, which is a cleaner descendant of some of the 50s styles.https://ecmrecords.com/Also Aubrey Powell and Storm Thorgerson of Hypgnosis, who created a long line of definitive covers for artists from the 70s and 80s, including Pink Floyd. (I met Thorgerson once. He was notorious for being a complete arse - and so it proved. Unique talent though.)https://www.rollingstone.com/music/music-lists/hipgnosis-lif...And of course Factory Records and Pete Saville, especially this infamous classic \"sample\" from an astronomy paper.https://f.media-amazon.com/images/I/81T-loBJ40L._SL1291_.jpg\n \nreply",
      "Some time ago, someone here posted this: https://news.ycombinator.com/item?id=40795227It was a \"TIL\" day, for me.\n \nreply",
      "This is great and has a lot of early historical perspective that I had never seen chronicled before.But it is necessarily limited in the amount of album covers it can feature from what many would consider to be their heyday, the 1950s through the 1970s.If you just want to feast your eyes on a lot of great album covers from that period, pick up a copy of the \"Album Cover Album\" [1] or one of its six (!) follow-ups. Designers Storm Thorgerson (who worked with Pink Floyd) and Roger Dean (who worked with Yes) created these incredibly lush books, with album covers printed nice and large in vivid color, organized in a really insightfully thematic way.  A bit more speedy than your average used book, but not by much. Highly recommended, good for hours of reverie.[1] https://www.goodreads.com/book/show/5304267-album-cover-albu...\n \nreply",
      "Gotta admit: Yes's wild album covers drew me in so that their sound could get me hooked on Prog Rock so long ago. Creative album covers seem to be one of the many victims of today's single-focused and streaming-focused music landscape.\n \nreply",
      ">> Roger Dean (who worked with Yes)And Space Needle, https://store-us.rogerdean.com/products/space-needle-59x86cm....\n \nreply",
      "From the article, in regards to Blakey, Monk, Bird, Dizzy, and Trane: \u201c\u2026because of their drinking, drug use, and frenetic schedules, labels wouldn\u2019t work with them.\u201dIs this claim documented somewhere? (All but one of the footnote links are dead for me)\n \nreply",
      "Factory Records not even mentioned? Their cover art certainly charted a new aesthetic.\n \nreply",
      "> In the early 1900s, ... Early vinyl recordsVinyl didn't come out until much later. In the early 1900s records were made from acetate, and could shatter.\n \nreply",
      "My grandma had shellac records in storage, which we took out once.\n \nreply"
    ],
    "link": "https://matthewstrom.com/writing/album-art/",
    "first_paragraph": "May 02, 2025 \u00b7 22 min readAlbum art didn\u2019t always exist.In the early 1900s, recorded music was still a novelty, overshadowed by sales of sheet music. Early vinyl records were vastly different from what we think of today: discs were sold individually and could only hold up to four minutes of music per side. Sometimes, only one side of the record was used. One of the most popular records of 1910, for example, was \u201cCome, Josephine, in My Flying Machine\u201d: it clocked in at two minutes and 39 seconds.The packaging of these records was strictly utilitarian: a brown paper sleeve to protect the record from dust, printed with the name of the record label or the retailer. Rarely did the packaging include any information on the disc inside; the label on the center of the disc was all there was to differentiate one record from another.But as record sales started to show signs of life, music publishers took note. Columbia Records, one of the first companies to sell music on discs, was especially suc"
  },
  {
    "title": "Show HN: Blast \u2013 Fast, multi-threaded serving engine for web browsing AI agents (github.com/stanford-mast)",
    "points": 93,
    "submitter": "calebhwin",
    "submit_time": "2025-05-02T17:42:28 1746207748",
    "num_comments": 35,
    "comments_url": "https://news.ycombinator.com/item?id=43872761",
    "comments": [
      "What measures are you using to make sure you're not bombarding websites with a ton of requests, since you seem to automatically \"scale up\" the concurrency to create even more requests/second? Does it read any of the rate-limit headers from the responses or do something else to back-off in case what it's trying to visit suddenly becomes offline or starts having slower response times?Slightly broader question: Do you feel like there is any ethical considerations one should think about before using something like this?\n \nreply",
      "The main sort of parallelism we exploit is across distinct websites. For example \"find me the cheapest rental\" spawning tasks to look at many different websites. There is another level of parallelism that could be exploited within a web site/app. And yes we would have to make our planner rate limit aware for that.Absolutely agree there are ethical considerations with web browsing AI in general. (And the whole general ongoing shift from using websites to using chatgpt/perplexity)\n \nreply",
      "> There is another level of parallelism that could be exploited within a web site/app. And yes we would have to make our planner rate limit aware for that.People are already deploying tools like Anubis[1] or go-away[2] to cope with the insane load that bots put on their server infrastructure. This is an arms race. In the end, the users lose.[1]: https://anubis.techaro.lol[2]: https://git.gammaspectra.live/git/go-away\n \nreply",
      "IMO it depends on how this tech is deployed. One way I see this being extremely useful is for developers to quickly build AI automation for their own sites.E.g. if I'm the developer of a workforce management app (e.g. https://WhenIWork.com) I could deploy BLAST to quickly provide automation for users of my app.\n \nreply",
      "That's my point. You can use a knife to slice bread or to stab your neighbor. We're seeing an unprecedented amount of stabbings. People are getting away with murder, there's no accountability. Refining the stilettos doesn't help the problem.\n \nreply",
      "> In the end, the users lose.I think it would take more substantiation to claim this. Maybe 10 out of 1000 websites will get closed, but the users will be able to use AI tools to use the remaining 990. Not sure about you, but sounds like a win for users to me.\n \nreply",
      "> Absolutely agree there are ethical considerations with web browsing AI in general.I'm personally not sure there are, but I'm curious to hear what those are for you :)\n \nreply",
      "Maybe more of a legal than ethical consideration but web browsing AI makes scraping trivial. You could use that for surveillance, profiling (get a full picture of a user's whole online life before they even hit Sign Up), cutting egress cost in certain cases. Right now CAPTCHA is actually holding up pretty well against web browsing AI for sites that really want to protect their IP but it will be interesting to see if that devolves into yet another instance of an AI vs AI \"arms race\".\n \nreply",
      "How do I block your service? Do you read robots.txt and have an identifiable user agent?\n \nreply",
      "Seems Blast uses browser-use (https://github.com/browser-use/browser-use) which seems to be some client specifically for AIs to connect to/run browser runtimes.Unfortunately, it seems like browser-use tries to hide that it's controlled by an AI, and uses a typical browser user-agent: https://github.com/browser-use/browser-use/blob/d8c4d03d9ea9...I'm guessing because of the amount of flags, you could probably come up with a unique fingerprint for browser-use, based on available features, screen/canvas size and so on, that could be reused for blocking everyone using Blast/browser-use.If calebhwin wanted to make Blast easier to identify, they could set a custom user-agent for browser-use that makes it clear it's Blast doing the browsing for the user.\n \nreply"
    ],
    "link": "https://github.com/stanford-mast/blast",
    "first_paragraph": "We read every piece of feedback, and take your input very seriously.\n            To see all available qualifiers, see our documentation.\n          \n        Browser-LLM Auto-Scaling Technology\n      A high-performance serving engine for web browsing AI.\n\n\nVisit documentation to learn more.Awesome! See our Contributing Guide for details.As it should be!\n        Browser-LLM Auto-Scaling Technology\n      "
  },
  {
    "title": "Doom GPU Flame Graphs (brendangregg.com)",
    "points": 51,
    "submitter": "zdw",
    "submit_time": "2025-05-01T14:30:42 1746109842",
    "num_comments": 10,
    "comments_url": "https://news.ycombinator.com/item?id=43858183",
    "comments": [
      "Neat.I\u2019ll be honest, I kinda don\u2019t get flame graphs. I mean I understand what they are. I have just always strictly preferred a proper timeline view ala Superluminal or Tracy.Using 20ms chunks for a game is fine but also super weird. Ain\u2019t no game using 20ms frames! So if you were using this for real you\u2019d get all kinds of oddities. Just give me a timeline and call it a day plz.\n \nreply",
      "The origin problem for flame graphs was MySQL server performance involving dozens of threads: as a timeline view you need dozens of timelines, one for each thread, since if you render it on one (I know this is probably obvious) then you have samples from different threads from one moment to the next turning the visualization into hair. Flame graphs scale forever and always show the aggregate: any number of threads, servers, microservices, etc.I think great UI should do both: have a toggle for switching between flame graphs (the summary) and timelines (aka \"flame charts\") for analyzing time-based patterns. I've encouraged this before and now some do provide that toggle, like Firefox's profiler (Flame Graphs and Stack Charts for timeline view).As for 20ms, yes, we do want to take it down. A previous HN comment from years ago, when I first published FlameScope, was to put a game frame on the y-axis instead of 1 second, so now each column shows the rendering of a game frame, and you can see time-offset patterns across the frames (better than a time-series timeline). We started work on it and I was hoping to include it in this post. Maybe next one.\n \nreply",
      "I\u2019ve never actually seen a profiler that shows quite what I want. I have lots of subsystems running at different rates. Gameplay at 30Hz, visual render at 90Hz, physics at 200Hz, audio at some rate, network, some device, etc.So what I want is the ability to view each subsystem in a manner that lets me see when it didn\u2019t hit its update rate. I have many many different frame rates I care about hitting.Of course things even get more complex when you have all the work broadly distributed with a job system\u2026\n \nreply",
      "Timelines are good when things happen once, but when you have repeated calls to functions from different places etc., a flame graph helps a lot.Sandwich views supporting collapsing recursion are the secret sauce for flame graphs imo. See e.g,. https://pyroscope.io/blog/introducing-sandwich-view/\n \nreply",
      "The difference between a flame graph and a trace visualization is that a flame graph is a aggregate/summary visualization. It helps visualize total runtime attributed to functions.It is like the difference between seeing the mean of a distribution and seeing a plot of every datapoint in the distribution. They are useful for different purposes.An example of how you might use it in conjunction with a trace visualizer is that you would select a time span in a trace and generate a flame graph for the selection. This would show you which functions and call stacks were responsible for most of the execution time in the selection. You would then use that to find one of those call stacks in the trace to examine how they execute to see if it makes sense.\n \nreply",
      "The game model might involve 20ms time slices.  The frame rate is simply the best available visualisation of the \"action\" that the machine can manage.So, you have your game model, input and output.  Output needs to be good enough to convince you that you are in control and immersive enough to keep you engaged and input needs to be responsive enough to feel that you are in control.  The model needs to keep track of and co-ordinate everything.I'm old enough to still own a Commodore 64 and before that I played games and wrote some shit ones on ZX 80, 81 and Speccies.  I typed in a lot of DATA statements back in the day (40 odd years ago)!When you pare back a game to the bare basics - run it on a box with KB to deal with instead of GB - you quite quickly get to understand constraints.Things are now way more complicated.  You have to decide whether to use the CPU or the GPU for each task.\n \nreply",
      "I think flame graphs are perfect for what they do, compressing multi dimensional data down into fewer dimensions.It makes it a lot easier to visualise at a glance, and sometimes an issue is obvious from the flame graph.But you're right, for complex issues I find I need to dig deeper than that and view everything linearly.They're just nice for glaring issues, it's like a mini dashboard almost.\n \nreply",
      "Loads of older console games used 20ms fields in Europe.Edit: also my laptop can, but I'm not into that sort of thing.\n \nreply",
      "Flame graphs are definitely less sophisticated than Superluminal/Tracy/etc, but that's a part of the attraction - you can visualize the output of many profiling tools as a flamegraph without prior setup. I also think it's a pretty good UX for the \"which function is the performance bottleneck\" game.\n \nreply",
      "A few comments, 2 days agohttps://news.ycombinator.com/item?id=43846283\n \nreply"
    ],
    "link": "https://www.brendangregg.com/blog/2025-05-01/doom-gpu-flame-graphs.html",
    "first_paragraph": "Brendan's site:01 May 2025AI Flame Graphs are now open source and include Intel Battlemage GPU support, which means it can also generate full-stack GPU flame graphs for providing new insights into gaming performance, especially when coupled with FlameScope (an older open source project of mine). Here's an example of GZDoom, and I'll start with flame scopes for both CPU and GPU utilization, with details annotated:(Here are the raw CPU and GPU versions.) FlameScope shows a subsecond-offset heatmap of profile samples, where each column is one second (in this example, made up of 50 x 20ms blocks) and the color depth represents the number of samples, revealing variance and perturbation that you can select to generate a flame graph just for that time range.Putting these CPU and GPU flame scopes side by side has enabled your eyes to do pattern matching to solve what would otherwise be a time-consuming task of performance correlation. The gaps in the GPU flame scope on the right \u2013 where the GP"
  },
  {
    "title": "OneText (YC W23) Is Hiring a DevOps/DBA Lead Engineer",
    "points": 0,
    "submitter": "",
    "submit_time": "2025-05-02T21:00:14 1746219614",
    "num_comments": 0,
    "comments_url": "",
    "comments": [
      "xxx"
    ],
    "link": "item?id=43874534",
    "first_paragraph": ""
  },
  {
    "title": "What I've learned from jj (zerowidth.com)",
    "points": 93,
    "submitter": "eproxus",
    "submit_time": "2025-05-02T08:21:43 1746174103",
    "num_comments": 32,
    "comments_url": "https://news.ycombinator.com/item?id=43867403",
    "comments": [
      "Sounds a lot like what\u2019s being used internally at Google\n \nreply",
      "> The idea, particularly as realized in the GitHub pull request workflow, is that the real \u201cunit of change\u201d is a pull request, and the individual commits making up a PR are essentially irrelevant.I loathe GitHub PRs because of this. Working at $dayjob the unit of change is the commit, and every commit is reviewed and signed off by at least 1 peer.And you know what? I love it. Yes, there's some overhead. But I can understand each commit in its entirety. I and my coworkers have caught numerous issues in code with these single-purpose commits of digestible size.Compare this to GitHub PRs, which tend to be beastly things that are poorly structured (not to mention GitHub's UI only adding to the review problems...) and multipurpose. Reviewing these big PRs with care is just so much harder. People don't care about the commit message, so looking at the git log it's just a mess that's hard to navigate.\n \nreply",
      "My ideal workflow is commits are as small as possible and PRs \"tell a story\", meaning that they provide the context for a commit.I will split up a PR into- Individual steps a a refactor, especially making any moves their own commits- I add tests *before* the feature (passing, showing the old behavior)- The actual fix or feature commit is tiny, with the diff of the tests just demontstrating how behavior changedThis makes it really fast to review a PR because you can see the motivation while only looking at a small change. No jumping around trying to figure out how the pieces fit together.The main reason I might split up a PR like that is if one piece is likely to generate a discussion before its merged. I then make that a separate PR and as small as possible so we can have a focused discussion.I hate squash merges.\n \nreply",
      "As someone who has often had to dig into the history to figure out what happened, I always want to see at least this. And I wouldn't be opposed to seeing it broken down even more as it was worked on. Not one big squash merge that hides what really happened.I'll also add one more to your list: Any improvements that came out of the review but stayed in that merge should each be individual commits. I've seen hard-to-trigger bugs get introduced from what should have been just a style improvement.\n \nreply",
      "Worrying about individual commits is also what makes it possible for you to later use git bisect without going crazy.\n \nreply",
      "Is this what Gerrit does?\n \nreply",
      "I began using Jujutsu as my VCS about 2 months ago. Considering most of my work is on solo projects, I love the extra flexibility and speed of being able to safely fixup recent commits. I also love not having to wrangle the index, stashes, and merges.`lazyjj` [1] makes it easier to navigate around the change log (aka commit history) with single keypresses. The only workflow it's currently missing for me is `split`.For the times when I have had to push to a shared git repo, I used the same technique mentioned in the article to prevent making changes to other developer's commits [2].It's been a seamless transition for me, and I intend to use Jujutsu for years.[1] https://github.com/Cretezy/lazyjj\n[2] https://jj-vcs.github.io/jj/latest/config/#set-of-immutable-...\n \nreply",
      "Check out jjui - it is VASTLY better, and the dev is extremely open and responsive to feature requests.https://github.com/idursun/jjui\n \nreply",
      "Skimmed the article so I admittedly can't speak to much to the content of it, but just wanted to give my 2c on working on individual things after spending a lot of time working with a stack-based VCS in mercurial/sapling -- jj felt pretty hard to get used to and after a couple of weeks I gave it up. I think it needs a competitive visualization tool to Interactive Smartlog.I've settled on using Interactive Git Log in VSCode.\n \nreply",
      "Surprised no one has mentioned https://graphite.dev/ yet. Our team uses it for stacked PRs, and it works really well.\n \nreply"
    ],
    "link": "https://zerowidth.com/2025/what-ive-learned-from-jj/",
    "first_paragraph": "How Jujutsu's flexibility and safety changed my approach to version controlContentsI recently started using the Jujutsu version control system, and it\u2019s changed how I think about working with code. As someone who\u2019s been using git for nearly two decades, it\u2019s refreshing to gain new perspectives on my daily work and get a sense of what might be possible in the future.Working with git has been great, especially in contrast to what came before. But despite years of development, it still has sharp edges and presents a steep learning curve. Jujutsu doesn\u2019t fix that, exactly, but it sands off some rough edges and makes some different decisions that result in a much safer and far more flexible workflow.See the next post for jj tips and tricks.Where git operates solely on commits\u2013snapshots of the codebase explicitly captured with git commit\u2013Jujutsu treats everything as a unique but flexible \u201cchange\u201d. Jujutsu unifies several concepts from git: the working copy, commits of the files you\u2019ve edited"
  },
  {
    "title": "Suno v4.5 (suno.com)",
    "points": 219,
    "submitter": "platers",
    "submit_time": "2025-05-02T13:18:26 1746191906",
    "num_comments": 148,
    "comments_url": "https://news.ycombinator.com/item?id=43869353",
    "comments": [
      "The real potential of tools like Suno isn\u2019t in cranking out radio-ready hits. It\u2019s in creating music that doesn't have commercial incentives to exist. Case in point: Functional Music.I started using it to generate songs that reinforce emotional regulation strategies -things like grounding, breathwork, staying present. Not instructional tracks, which would be unbearable, but actual songs with lyrics that reflect actual practice and skills.It started as a way to help me decompress after therapy. I'd listen to a mini-album I made during the drive home. Eventually, I\u2019d catch myself recalling a lyric in stressful moments elsewhere. That was the moment things clicked. The songs weren\u2019t just a way for me to calm down on the way home, they were teaching me real emotional skills I could use in all parts of my life. I wasn\u2019t consciously practicing mindfulness anymore; it was showing up on its own. Since then I\u2019ve been iterating, writing lyrics that reflect emotional-cognitive skills, generating songs with them, and listening while I'm in the car. It's honestly changed my life in a subtle but deep way.We already have work songs, lullabies, marching music, and religious chants - all music that serves a purpose besides existing to be listened to. Music that exists to teach us ways of interacting is a largely untapped idea.This is the kind of functional application is what generative music is perfect for. Song can be so much more than listening to terminally romantic lyricists trying to speak to the lowest common denominator. They can teach us to be better versions of ourselves.\n \nreply",
      "Yup. My favorite genre by FAR is baroque. High quality recordings are not as wide as you\u2019d expect, and no one\u2019s really pumping out new baroque. V4.5 is noticeably better, even if the model shows the real \u201cplagiaristic\u201d aspect.Still, I\u2019m excited about the product. The composer could probably use some chain of thought if it doesn\u2019t already, and plan larger sequences and how they relate to each other. Suno is also probably the most ripe for a functional neurosymbolic model. CPE wrote an algorithm on counterpoint hundreds of years ago!https://www.reddit.com/r/classicalmusic/comments/4qul1b/crea... (Note the original site has been taken over, but you can access the original via way back. Unfortunately I couldn\u2019t find a save where the generation demo works\u2026but I swear it did! I used it at the time!)\n \nreply",
      "I've mentioned it before on HN, but Sid Meier worked on an application called (appropriately enough) CPU Bach for the 3DO that would algorithmically generate endless contrapuntal music all the way back in 1994.https://en.wikipedia.org/wiki/C.P.U._Bach\n \nreply",
      "Yup, give us a tool and we'll use it. I've mostly used it for meme songs.But I really think they've made a mistake with direction, realistically it should've been trained on tracker files, and build somgs via the method (but generate the vocals,individual instrument sounds for midi, obvs).I think the quality would be higher since the track can be \"rendered\" out essentially, but also only then would it be a useful tool for actual musicians, to be able to get a skeleton file (mod, etc) for a song built up that they can then tweak and add a human touch to.\n \nreply",
      "This is a Suno generated Alan Watts inspired meditation. Absolutely agree!https://music.apple.com/au/album/breath-of-the-cosmos/175227...https://open.spotify.com/track/0mJoJ0XiQZ8HglUdhWhg2F?si=tID...https://suno.com/s/LHRmE867FslALzz6\n \nreply",
      "Would you mind making these available to others?\n \nreply",
      "Sure! I \"re-mastered\" my mini-album with v4.5 since that's more in the spirit of the discussion.https://suno.com/playlist/e6c3f3d1-a746-4106-bea1-e36073d227...Side note: It feels a little vulnerable to be sharing these. They genuinely helped me through difficult times and I wasn't really expecting anyone else to ever listen to them.\n \nreply",
      "Thank you for sharing these, I will try listening on my drive to work.\n \nreply",
      "That's incredibly generous of you. Thanks for sharing.\n \nreply",
      "These are beautiful. Thank you so much\n \nreply"
    ],
    "link": "https://suno.com/explore/",
    "first_paragraph": ""
  },
  {
    "title": "VR Design Unpacked: The secret to Beat Saber's fun (roadtovr.com)",
    "points": 77,
    "submitter": "stevenalowe",
    "submit_time": "2025-05-02T19:16:38 1746213398",
    "num_comments": 63,
    "comments_url": "https://news.ycombinator.com/item?id=43873679",
    "comments": [
      "The secret to Beat Saber is that the player's physical and virtual world are locked together at all times. You're standing on a small platform and can't go anywhere. Thus, it doesn't cause nausea. Or disorientation. Or falls. Even when the player is in very active motion.[1][1] https://www.youtube.com/watch?v=gV1sw4lfwFw\n \nreply",
      "I desperately want more games like Unseen Diplomacy, where you walk through an infinite hallway. In real life, you're just walking in circles, but it doesn't feel that way in VR!I'm immune to VR motion sickness, but games without fake movement just feel so much more immersive!\n \nreply",
      "The game \"Tea for God\" (https://www.google.com/search?q=tea+for+god&oq=tea+for+god) also has this strange behavior where the world curves around in a non-Euclidean / M.C. Escher-style fashion so that you feel like you're in a labyrinth, but you're actually in a ~8ft square in your living room.\"Tea for God\" and \"Unseen Diplomacy\" are the only games I'm aware of that operate in this fashion, with \"realistic\" walking movement that doubles back on itself.\n \nreply",
      "Another type of game with this characteristic is Table tennis simulators. Although the reduced field of view is a limitation, it just feels like wearing a strange helmet. Inner ear still matches the visual picture.\n \nreply",
      "I've seen plenty of people try to lean on the table and fall over\n \nreply",
      "When I got my headset forever ago my brothers girlfriend broke a controller by putting it down on the virtual table lol\n \nreply",
      "I would expand on that.I'd say because the gameplay is so elegantly simple, most people can do kinda sorta well right from the get go. It feels extremely natural with almost no set up apart from height, just incredibly intuitive and frictionless.\n \nreply",
      "That what makes it not bad, not what makes it good.\n \nreply",
      "I wonder if a game where you ride inside of a mecha with free roaming capabilities would feel more natural.\n \nreply",
      "That's the basis for a very common VR game(s) you see in VR arcades and such (or conventions). https://store.steampowered.com/app/334540/Vox_Machinae/ or https://store.steampowered.com/app/1192900/IRON_REBELLION/Having played them, they were slightly disorienting at first but nowhere near as actual movement-based VR games.\n \nreply"
    ],
    "link": "https://www.roadtovr.com/beat-saber-instructed-motion-until-you-fall-inside-xr-design/",
    "first_paragraph": "Our series Inside XR Design highlights and unpacks examples of great XR design. Today we\u2019re looking at\u00a0Beat Saber (2019)\u00a0and why its most essential design element can be used to make great VR games that have nothing to do with music or rhythm.Editor\u2019s Note:\u00a0It\u2019s hard to believe Beat Saber was first released in Early Access\u00a0seven years ago today. From day one, it was clear the game was something special, but even so we couldn\u2019t have predicted it would become one of VR\u2019s best-selling games of all time\u2014a title it still holds all these years later.\u00a0In celebration of\u00a0the game\u2019s lasting legacy we\u2019re re-publishing our episode of Inside XR Design which explores the secret to Beat Saber\u2019s fun, and how it can be applied to VR games which have nothing to do with music.You can find the complete video below, or continue reading for an adapted text version.Welcome back to another episode of Inside XR Design. Now listen, I\u2019m going to say something that doesn\u2019t seem to make any sense at all. But by th"
  },
  {
    "title": "The Cannae Problem (joanwestenberg.com)",
    "points": 123,
    "submitter": "flobosg",
    "submit_time": "2025-05-02T13:11:16 1746191476",
    "num_comments": 81,
    "comments_url": "https://news.ycombinator.com/item?id=43869288",
    "comments": [
      "From the title, I thought this article was going to be about how Hannibal won an incredible number of victories in the Second Punic War, but Carthage still lost the war and had to take devasting terms of surrender.It's about how Rome was defeated at Cannae due their overconfidence and inability to adapt, but doesn't examine how Rome ended up winning in the end. It is interesting how dependent on framing case studies are.\n \nreply",
      "It's also worth noting that some of the Roman commanders were simply bad, and Hannibal himself was not without flaws.The best example of the former is Gaius Flaminius, who was defeated by Hannibal at Lake Trasimene. [0] Livy memorably describes Flaminius as \"not sufficiently fearful of the authority of senate and laws, and even of the gods themselves.\" Hannibal took advantage of his rashness to lure Flaminius into an ambush in which he and his entire army were annihilated.Furthermore you could argue--and may still do--that Hannibal didn't even completely win Cannae, because he failed to attack Rome after his victory. His commander of cavalry remarked at the time, \"You, Hannibal, know how to gain a victory; you do not know how to use it.\" [1] I'm personally inclined to think Maharbal was correct, but that's the advantage of hindsight.These accounts are both based on Livy, who didn't let facts to get in the way of a good story.[0] https://en.wikipedia.org/wiki/Battle_of_Lake_Trasimene[1] https://en.wikipedia.org/wiki/Battle_of_Cannae#Aftermath\n \nreply",
      "The Romans were actually quite smart after Cannae; they had lost a bunch of pitched battles, so they decided to shadow Hannibal's army to make his foraging logistics much more complicated (and forcing him to stay close to Southern Italy where he could easily resupply). The logistics of attacking Rome were therefore challenging at best, and the Romans used this as a delaying tactic to score wins on other fronts (since they enjoyed an overall manpower advantage).\n \nreply",
      "Coincidentally, the excellent podcast, Tides of History, is currently doing a miniseries on the Punic Wars, and just covered why Cannae didn't end the war.https://wondery.com/shows/tides-of-history/season/5/?epPage=...\n \nreply",
      "Also, Rome defeated Carthage when Hannibal was no longer a player\n \nreply",
      "hehe, and here i was thinking it was gonna be some scottish variant of the scunthorpe problem.(cannae = cannot)https://en.wiktionary.org/wiki/Appendix:Glossary_of_Scottish...\n \nreply",
      ">but doesn't examine how Rome ended up winning in the endThere's quite a bit about Fabius' tactics in TFA, actually.\n \nreply",
      "I don't recall that in The Force Awakens?\n \nreply",
      "(In case your confusion behind the joke was serious: \"the f[ine] article\", common HN slang.)\n \nreply",
      "Fine, foregoing, fucking.Depends on you!\n \nreply"
    ],
    "link": "https://www.joanwestenberg.com/the-cannae-problem/",
    "first_paragraph": "It's August 2, 216 BCE. The Roman army stands in formation under the blistering Italian sun. Eight legions strong\u2014the largest force Rome has ever fielded\u2014nearly 80,000 men await the order to advance. Across the plain at Cannae stands Hannibal's army, outnumbered almost two-to-one. The Roman commanders, Consuls Varro and Paullus, feel confident. How could they not? They've assembled the greatest concentration of Roman military might in history specifically to crush this Carthaginian invader who has plagued Italy for two years.By sunset, 50,000-70,000 Romans lie dead or captured. The remaining survivors flee in disarray. It is the worst defeat Rome will ever suffer.What happened? The Romans fell victim to \"The Cannae Problem\"\u2014when an organization's conventional wisdom, its tried-and-true methodologies, its fundamental understanding of how the world works\u2014becomes the very thing that destroys it. The Romans knew how to win battles. They had a system. It had worked for centuries. And Hannib"
  },
  {
    "title": "A Common Lisp jq replacement (world-playground-deceit.net)",
    "points": 131,
    "submitter": "tmtvl",
    "submit_time": "2025-05-02T12:15:48 1746188148",
    "num_comments": 43,
    "comments_url": "https://news.ycombinator.com/item?id=43868737",
    "comments": [
      "How is    $ echo \"$json\" | cljq '(? $ \"root\" * 1)'\n\n\nmore intuitive than the good ol' jq    $ echo \"$json\" | jq '.root | map(.[1])'\n\n\nReally, people should know by now that jq does point-free programming.\n \nreply",
      "Well you see, the author already knows common lisp, is familiar with their own ad hoc DSL by virtue of having just come up with it, and refuses to learn jq.Personally, I probably would've written '[.root[][1]]' for that problem myself though\u2014not a huge fan of map/1.\n \nreply",
      "Just noticed this was submitted here.1) I dislike that .[1] can be both an expression evaluated as a query and a \"lambda\". Really messes with my mind.2) In my eyes, it's more intuitive because it looks like globbing and everybody knows globbing (this is the reason I use `**` too).But yeah, this is a bit subjective. What isn't, though, is that I don't plan on adding much more than that; maybe merge, transform and an accessor using the same syntax. So if you know the host language, there's much less friction.I really see this like Avisynth vs Vapoursynth.\n \nreply",
      "The sentiment resonates with me.Had similar thoughts a couple years ago, and wrote jql[0] as a jq alternative with a lispy syntax (custom, not Common Lisp), and I\u2019ve been using it for command-line JSON processing ever since![0]: https://github.com/cube2222/jql\n \nreply",
      "I learned the basics of jq and quite liked it, but since I discovered Nushell it has replaced nearly all my data processing I do at the cli. It really is good technology.\n \nreply",
      "site looks like a bashcompletion thing, how does it replace jq?\n \nreply",
      "Not sure where you're getting the idea that it's a Bash completion extension from. It's a new shell (see name) that natively supports complex nested data structures, numbers, numbers with units, and so on. Compare with the classic POSIX shell model where everything is line-based (defined loosely), numerical operations rely on hacks, and splitting command output lines relies on hardcoded column indices.\n \nreply",
      "I have nushell installed and use it sometimes. Does it have built-in JSON parsing like jq?Edit: Well, I just found out about `cat some.json | from json` in nushell. Pretty cool! The nested tables are nice.\n \nreply",
      "No need for that even. It's just:open some.json\n \nreply",
      "It's definitely not bash completion. But on the jq note you can read JSON, and various other formats, directly into nushell's data model (a table) and just start querying it.\n \nreply"
    ],
    "link": "https://world-playground-deceit.net/blog/2025/03/a-common-lisp-jq-replacement.html",
    "first_paragraph": "Title says it all, I seriously dislike jq's convoluted, impossible-to-remember ad hoc DSL that instantly joined heaps of\n misery like CMake and gnuplot in my heart. It should really have been a library with a CLI wrapper\n around eval in a well-known scripting language like Python.And I'm not the only one I've heard complain about this, yet it's the one that seized the\n mindshare and thus became easy to find in any package repository (sometimes even preinstalled) and\n with the most copy-paste fodder on the web. It won for the usual reasons: lack of serious\n competition at the time, enough flexibility to manage most tasks with enough pain and elbow grease\n and now inertia.But me, I've reached my enough is enough! point and decided to do like VapourSynth or waf and replace it with a language I know and love: CL.For now, cljq is only a very\n bare-bones pipeline that parses a JSON (argv or stdin) into a variable $, eval an arbitrary CL form and serializes the result to stdout (using jzon). "
  },
  {
    "title": "You could just choose optimism (quarter--mile.com)",
    "points": 5,
    "submitter": "surprisetalk",
    "submit_time": "2025-05-01T18:02:10 1746122530",
    "num_comments": 2,
    "comments_url": "https://news.ycombinator.com/item?id=43861189",
    "comments": [
      "Isn\u2019t this article complaining about complaints? Does that make it paradoxical?\n \nreply",
      "There\u2019s an article recently posted about a violin built in a concentration camp.Talk about optimism\u2026The point is that someone in bad circumstances can focus on the task and the horror of what they endure can subside.It\u2019s definitely possible to choose optimism and end up improving one\u2019s situation.\n \nreply"
    ],
    "link": "https://quarter--mile.com/You-Could-Just-Choose-Optimism",
    "first_paragraph": ""
  }
]